{"1": [{"determining": "Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.7259414225941423, "obj2": 0.25207432855100453}, {"determining": "Max( ( AMS * Max( DDR,FirstVNF_Mem_Server ) ),Max( ( ( Const / Const ) * MDR ),MRS ) )", "choosing": "( ( DS - ( MUR - RCSe ) ) * ( MUM - DS ) )", "obj1": 0.7196652719665272, "obj2": 0.26704644212769807}, {"determining": "( Max( MDR,BR ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "( ( CS + RMSe ) + ( CS + MUC ) )", "obj1": 0.7468619246861925, "obj2": 0.2797155034770618}, {"determining": "Min( Min( MRS ,CRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC * MUM ) - ( RRSe - RRSe ) )", "obj1": 0.7112970711297071, "obj2": 0.29493266576150573}, {"determining": "Min( ( ACS / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( CS / MUR ) / ( CS + RMSe ) )", "obj1": 0.7196652719665272, "obj2": 0.2747121647873657}, {"determining": "Max( ( PN / FirstVNF_CPU_Server ),( MDR + BR ) )", "choosing": "Min( ( MUM + DS ) ,( MLU * RMSe ) )", "obj1": 0.7217573221757322, "obj2": 0.29423558646056974}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( FirstVNF_CPU - MRS ) ) - ( DDR - ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / BR ) ) ) )", "choosing": "Min( ( MUC - ( ( ( CS - MLU ) * ( ( CS / RRSe ) + Max( MLU,Min( MUR ,MUR ) ) ) ) * CS ) ) ,( RMSe + MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) - ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "( ( RCSe / MUM ) * ( CS / RMSe ) )", "obj1": 0.7322175732217573, "obj2": 0.2571362467910711}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM / DDR ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 0.6841004184100419, "obj2": 0.2653505966093936}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU_Server * BR ),( ARS / MRS ) )", "choosing": "Min( ( MUC + RCSe ) ,( CS - RRSe ) )", "obj1": 0.7175732217573222, "obj2": 0.266457817827282}, {"determining": "Max( ( MRS * FirstVNF_RAM ),( PN / FirstVNF_Mem ) )", "choosing": "Min( ( MUM + MUR ) ,Min( MUC ,MUC ) )", "obj1": 0.7489539748953975, "obj2": 0.26117212599037837}, {"determining": "Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),Max( DDR,FirstVNF_CPU ) )", "choosing": "Max( ( CS / MUC ),( MLU / MLU ) )", "obj1": 0.7343096234309623, "obj2": 0.25970801503605667}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( ACS - ARS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( MUC / DS ) )", "obj1": 0.7405857740585774, "obj2": 0.18907736587542795}, {"determining": "Min( Max( MDR,AMS ) ,( AMS - PN ) )", "choosing": "Min( ( RRSe - MLU ) ,( MUC / RRSe ) )", "obj1": 0.7384937238493724, "obj2": 0.267383015049124}, {"determining": "( ( DDR * AMS ) - Min( RRS ,BR ) )", "choosing": "( ( CS - CS ) + Max( MUM,RRSe ) )", "obj1": 0.7092050209205021, "obj2": 0.2735440125411014}, {"determining": "( Max( Const,DDR ) - ( Const / DDR ) )", "choosing": "( Max( RCSe,MUC ) - ( RRSe * MLU ) )", "obj1": 0.799163179916318, "obj2": 0.19812048821897177}, {"determining": "Min( Min( Const ,RRS ) ,( ACS + RRS ) )", "choosing": "Max( ( RCSe + MLU ),( MUM - RRSe ) )", "obj1": 0.702928870292887, "obj2": 0.2658158633839586}, {"determining": "( ( FirstVNF_Mem * RRS ) / ( AMS * DDR ) )", "choosing": "( ( MLU * MUM ) + ( RRSe - RCSe ) )", "obj1": 0.6903765690376569, "obj2": 0.26751933689137125}, {"determining": "( Min( ( Min( RRS ,DDR ) / MRS ) ,Max( CRS,( RRS / ACS ) ) ) - ( ARS / ( Min( ( ARS - RRS ) ,AMS ) / MRS ) ) )", "choosing": "Min( Max( DS,( ( ( MUR + ( RRSe + MLU ) ) / MUR ) / MLU ) ) ,( Min( Min( MUR ,( CS / MLU ) ) ,RMSe ) - RRSe ) )", "obj1": 0.7322175732217573, "obj2": 0.2801655959530914}, {"determining": "( Min( ARS ,FirstVNF_RAM_Server ) * ( RRS * DDR ) )", "choosing": "Min( ( MUC + MUR ) ,( RMSe * MUM ) )", "obj1": 0.6903765690376569, "obj2": 0.26612149485019776}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 0.8305439330543933, "obj2": 0.18225841066745768}, {"determining": "( ( CRS + CRS ) + Max( FirstVNF_Mem,BR ) )", "choosing": "Min( Max( RMSe,MUC ) ,( MUM / RRSe ) )", "obj1": 0.6882845188284519, "obj2": 0.2727049273688522}, {"determining": "( Max( Const,BR ) / Min( BR ,MRS ) )", "choosing": "( ( MUC + DS ) / ( DS * RCSe ) )", "obj1": 0.7196652719665272, "obj2": 0.2942545216047985}, {"determining": "( ( FirstVNF_Mem + CRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU / MUC ) ,( RMSe * MUR ) )", "obj1": 0.7468619246861925, "obj2": 0.2556266657945555}, {"determining": "Max( Min( MDR ,Const ),Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( ( RMSe + MUR ) + ( MLU + MUC ) )", "obj1": 0.7050209205020921, "obj2": 0.2611870330913868}, {"determining": "( ( Const / MRS ) + ( FirstVNF_Mem_Server + BR ) )", "choosing": "( Max( RRSe,RRSe ) / ( MUM / MUM ) )", "obj1": 0.696652719665272, "obj2": 0.2714143610539066}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_Mem_Server ) )", "choosing": "( ( MUM + DS ) + ( MUR - RCSe ) )", "obj1": 0.7175732217573222, "obj2": 0.25256866060278743}, {"determining": "Min( Min( FirstVNF_RAM_Server ,AMS ) ,( FirstVNF_Mem_Server + ACS ) )", "choosing": "Min( ( MUM / DS ) ,Min( CS ,RRSe ) )", "obj1": 0.7384937238493724, "obj2": 0.2789859260312478}, {"determining": "( ( FirstVNF_CPU_Server - Const ) + ( DDR - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RCSe ,MUM ) ,Min( MUR ,DS ) )", "obj1": 0.7698744769874477, "obj2": 0.23191668655612296}, {"determining": "Min( Max( FirstVNF_RAM,FirstVNF_Mem ) ,( AMS + DDR ) )", "choosing": "( Max( RCSe,MUM ) * ( MUC / RMSe ) )", "obj1": 0.6673640167364017, "obj2": 0.2546776767694056}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( ( Min( MLU ,RRSe ) * ( MUM * CS ) ) * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.7154811715481172, "obj2": 0.204797864347604}, {"determining": "Max( ( Max( MRS,FirstVNF_Mem_Server ) / Const ),( MDR * ARS ) )", "choosing": "( ( RMSe * MUM ) / ( RCSe - DS ) )", "obj1": 0.7301255230125523, "obj2": 0.25580219575419455}, {"determining": "( ( ARS - Min( FirstVNF_RAM ,MRS ) ) / ( ACS - ( FirstVNF_RAM / ACS ) ) )", "choosing": "( ( ( MUC * MUM ) * MUM ) * ( RMSe / ( MUC + DS ) ) )", "obj1": 0.8556485355648535, "obj2": 0.12818313936461004}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * ( DDR / ARS ) ) * Min( ( DDR + FirstVNF_Mem_Server ) ,( AMS + PN ) ) )", "choosing": "( ( ( DS - MLU ) / Min( CS ,MLU ) ) * ( ( DS - MLU ) + Min( MLU ,MLU ) ) )", "obj1": 0.694560669456067, "obj2": 0.2968138763484625}, {"determining": "( ( AMS + PN ) + ( FirstVNF_Mem_Server * FirstVNF_CPU ) )", "choosing": "Min( ( MLU * MLU ) ,( ( CS * RMSe ) * Min( RCSe ,MLU ) ) )", "obj1": 0.7175732217573222, "obj2": 0.2704490743624172}, {"determining": "Min( ( MDR + PN ) ,Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RMSe ,RMSe ) + ( MUR * MUC ) ) - ( ( MUC + RRSe ) - ( MUC * RCSe ) ) )", "obj1": 0.7050209205020921, "obj2": 0.2725633604719322}, {"determining": "( Min( ARS ,FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( MUM ,DS ) ) / ( ( RMSe * MUR ) - ( RRSe * MLU ) ) )", "obj1": 0.6631799163179917, "obj2": 0.2943444226248351}, {"determining": "( ( ( BR - BR ) + Min( ARS ,BR ) ) * ( ( Const * Const ) / ( DDR - DDR ) ) )", "choosing": "( Max( RCSe,CS ) - ( MUM * ( CS - MUR ) ) )", "obj1": 0.7280334728033473, "obj2": 0.2904669093697266}, {"determining": "( Min( Max( FirstVNF_Mem_Server,Const ) ,Min( Const ,ARS ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ,( AMS * PN ) ) )", "choosing": "( ( CS - RMSe ) / Min( RCSe ,( CS / RCSe ) ) )", "obj1": 0.7112970711297071, "obj2": 0.2654749087794989}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + FirstVNF_Mem ) )", "choosing": "Max( ( MUM / MUM ),( MUR / MUC ) )", "obj1": 0.6506276150627615, "obj2": 0.26236525304241065}, {"determining": "( ( ( MDR - ARS ) * Max( PN,FirstVNF_RAM ) ) * ( ( FirstVNF_CPU * ACS ) - ( CRS + MRS ) ) )", "choosing": "Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / RRSe ) )", "obj1": 0.9769874476987448, "obj2": 0.020658100442583437}, {"determining": "( Max( ( ( Max( RRS,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( DDR + DDR ) * Min( MRS ,DDR ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( Max( Max( Max( ( Min( MUC ,MUC ) * MLU ),MUM ),Max( ( RMSe / MUM ),RMSe ) ),MUC ) / RMSe ) ),( Max( DS,RCSe ) + Min( MUM ,DS ) ) )", "obj1": 0.6255230125523012, "obj2": 0.27792195924529667}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( MRS ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( MUR,MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.7217573221757322, "obj2": 0.2647785322050196}, {"determining": "( Max( ( AMS / Const ),Min( ( CRS * FirstVNF_RAM_Server ) ,Max( ( Max( FirstVNF_Mem_Server,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) * Max( ( ( BR / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ),FirstVNF_CPU ) ),ARS ) ) ) / ( CRS + ACS ) )", "choosing": "( ( RRSe * Max( CS,MLU ) ) * ( DS - Min( Min( MUR ,RRSe ) ,MUC ) ) )", "obj1": 0.6631799163179917, "obj2": 0.2620216989507443}, {"determining": "( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) * ( Min( ARS ,ARS ) + Min( DDR ,ACS ) ) )", "choosing": "Max( Min( Max( MUC,RCSe ) ,( RCSe + DS ) ),Max( ( MUR - MUM ),( RRSe * RRSe ) ) )", "obj1": 0.7112970711297071, "obj2": 0.2647306176655702}, {"determining": "Max( ( Min( FirstVNF_CPU_Server ,ARS ) + ( FirstVNF_CPU_Server - PN ) ),( ( Const * DDR ) / ( MDR + CRS ) ) )", "choosing": "Max( ( ( RMSe + MUC ) + ( DS / DS ) ),Max( ( DS - MUM ),( RMSe / RRSe ) ) )", "obj1": 0.700836820083682, "obj2": 0.26893417342076736}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "Max( ( ( ( Const - BR ) * ( FirstVNF_RAM - ( FirstVNF_Mem_Server + Min( CRS ,FirstVNF_RAM ) ) ) ) / ARS ),( FirstVNF_Mem_Server + ACS ) )", "choosing": "Max( ( ( CS / RCSe ) * Min( MUR ,DS ) ),( ( MUC / DS ) + RCSe ) )", "obj1": 0.7175732217573222, "obj2": 0.26995315724479585}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,( MDR - ACS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( DS + MUM ) - Min( CS ,MUR ) ) - ( Min( RCSe ,MUC ) * ( MUR / DS ) ) )", "obj1": 0.698744769874477, "obj2": 0.26204898589764064}, {"determining": "( ( ( DDR - DDR ) / ( FirstVNF_RAM - BR ) ) / ( ( CRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "Max( Max( ( MUC - MUM ),CS ),( ( MUR - CS ) / MUR ) )", "obj1": 0.7384937238493724, "obj2": 0.2868432043138475}, {"determining": "Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) / ( ACS / ( Max( ( FirstVNF_Mem - ( BR / RRS ) ),DDR ) + Const ) ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( BR / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( ( RCSe * Min( Max( Min( MUR ,Min( RCSe ,MUM ) ),RMSe ) ,Min( DS ,Min( MLU ,( RCSe - MUC ) ) ) ) ) - MUR ) ) ,( ( CS * MUR ) + ( DS + RRSe ) ) )", "obj1": 0.6527196652719666, "obj2": 0.2560054464487389}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( ( MRS - FirstVNF_RAM ) - ( AMS - MRS ) ) )", "choosing": "Min( Max( ( Min( CS ,( MLU * RCSe ) ) * ( RRSe / DS ) ),( ( DS / CS ) + RRSe ) ) ,Min( Min( MUR ,RCSe ) ,Max( MUR,MUR ) ) )", "obj1": 0.7050209205020921, "obj2": 0.2675329242433264}, {"determining": "Max( ( ( BR + MDR ) + ( ACS * MRS ) ),( Max( ( Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( PN - MRS ) ) ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) + ( DDR - PN ) ) )", "choosing": "( Max( Min( MUR ,DS ),( MUR * RRSe ) ) * ( ( MUM + MUM ) + ( MUR / ( Max( CS,Min( RMSe ,( MUC - ( RCSe + MUM ) ) ) ) + Max( MUM,MUC ) ) ) ) )", "obj1": 0.7154811715481172, "obj2": 0.2636305255714985}, {"determining": "( ( FirstVNF_CPU * Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) + Min( AMS ,FirstVNF_RAM ) )", "choosing": "( Max( RCSe,MUR ) - ( RMSe + ( MUR / MLU ) ) )", "obj1": 0.7384937238493724, "obj2": 0.28826845218481056}, {"determining": "Max( Min( ( FirstVNF_Mem_Server + DDR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ),( ( CRS - RRS ) / ( MDR - ACS ) ) )", "choosing": "Max( ( ( MLU - MLU ) - DS ),( RRSe + CS ) )", "obj1": 0.7154811715481172, "obj2": 0.3041300254359902}, {"determining": "( ( Max( Max( ( ( ( ( ARS / CRS ) + DDR ) / CRS ) - AMS ),PN ),FirstVNF_RAM_Server ) / Min( ( ( FirstVNF_Mem_Server / BR ) / Min( CRS ,Const ) ) ,( ( Min( ( BR / CRS ) ,FirstVNF_RAM ) + MRS ) * DDR ) ) ) / ( Min( PN ,FirstVNF_CPU_Server ) / ( BR * FirstVNF_CPU ) ) )", "choosing": "( Max( RCSe,Min( MUR ,( MUM * RMSe ) ) ) + ( Min( RRSe ,MUR ) - MUC ) )", "obj1": 0.6338912133891214, "obj2": 0.27514924303565297}, {"determining": "Min( Max( ( ARS / RRS ),Max( BR,DDR ) ) ,Max( ( FirstVNF_Mem * PN ),( MDR + BR ) ) )", "choosing": "( ( Min( DS ,MUC ) * RMSe ) - ( CS * MUR ) )", "obj1": 0.7154811715481172, "obj2": 0.2561070425602762}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * ARS ) / ( ( ARS + ( RRS / ( Const / ( ( FirstVNF_Mem_Server * Const ) * Min( MDR ,ARS ) ) ) ) ) * ( ( BR - ( BR - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) / ( CRS * MDR ) )", "choosing": "( ( RMSe + Max( ( RMSe * MUM ),RCSe ) ) + ( Min( Max( ( MUM / RCSe ),MUC ) ,RRSe ) / ( MUR / CS ) ) )", "obj1": 0.6359832635983264, "obj2": 0.2862724962471604}, {"determining": "( ( ( ( AMS * AMS ) * FirstVNF_RAM ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,CRS ) )", "choosing": "Max( ( RRSe - DS ),( MUM / ( ( RMSe - MUC ) + CS ) ) )", "obj1": 0.9100418410041841, "obj2": 0.08111029236933667}, {"determining": "( ( ( ACS - AMS ) - FirstVNF_Mem_Server ) * ( ( RRS - PN ) - PN ) )", "choosing": "( ( RCSe + RRSe ) / ( DS + Min( MUR ,RCSe ) ) )", "obj1": 0.6213389121338913, "obj2": 0.2863197858460834}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) ,( Max( ( CRS / BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem / AMS ),( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Min( ( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 0.9330543933054394, "obj2": 0.0649810261726413}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Max( FirstVNF_RAM,FirstVNF_Mem ) ) / ( ( ( FirstVNF_Mem + FirstVNF_CPU ) / Max( BR,FirstVNF_RAM ) ) / ( ( BR + AMS ) / ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / Min( Max( RRS,BR ) ,DDR ) ) ) ) )", "choosing": "( ( ( ( RMSe + Max( ( ( MUR / Max( CS,RCSe ) ) / ( RMSe - MUR ) ),( RRSe / RCSe ) ) ) * ( RRSe - MUR ) ) + MLU ) * Min( Min( Max( CS,RCSe ) ,MUM ) ,Min( MUR ,MUR ) ) )", "obj1": 0.6924686192468619, "obj2": 0.2806868192143879}, {"determining": "Min( ( ( RRS + MDR ) / ( ARS / Const ) ) ,( CRS / ( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - ( RRS - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ) + AMS ) ) )", "choosing": "( Max( ( Min( CS ,MUC ) * ( MUM + CS ) ),( Min( RCSe ,( MUM * MUC ) ) * Min( MUM ,RRSe ) ) ) + Min( Min( ( Max( RRSe,( ( ( CS * MUC ) * ( MUM / MLU ) ) / Max( CS,( RRSe * MUM ) ) ) ) * DS ) ,( MUM + MUR ) ) ,Min( Max( MUR,MLU ) ,( CS * RCSe ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.2802881588572106}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( DDR + FirstVNF_CPU_Server ) ) / Min( MRS ,RRS ) )", "choosing": "Min( ( Max( ( MUR * ( RCSe / ( ( RMSe - MLU ) - Max( ( RCSe / MUR ),( RMSe * CS ) ) ) ) ),RRSe ) / Max( ( MUM + Min( ( MUM / RCSe ) ,DS ) ),( Min( RRSe ,Min( CS ,MUR ) ) * RRSe ) ) ) ,( ( Min( RCSe ,DS ) / Min( MLU ,CS ) ) + Max( ( MUR / CS ),( RRSe + MUM ) ) ) )", "obj1": 0.7154811715481172, "obj2": 0.2618427542043295}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.8661087866108786, "obj2": 0.0635386674220268}, {"determining": "Min( Max( ACS,Max( ( MRS / DDR ),( FirstVNF_Mem_Server / Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ) ) ) ,Max( ( FirstVNF_RAM / AMS ),PN ) )", "choosing": "Max( ( CS * ( ( MLU - Max( RCSe,( RRSe - MUR ) ) ) - MLU ) ),( RRSe / MLU ) )", "obj1": 0.7322175732217573, "obj2": 0.2754348852843404}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / CRS ) / Max( Min( Min( DDR ,ARS ) ,( RRS + FirstVNF_CPU ) ),FirstVNF_CPU ) )", "choosing": "( ( Min( ( CS / MLU ) ,( DS / MLU ) ) / ( ( MLU / DS ) * ( MLU + RMSe ) ) ) / ( RRSe - ( MLU - MUC ) ) )", "obj1": 0.6610878661087866, "obj2": 0.28661876224076777}, {"determining": "( Max( AMS,( Const + ( ( FirstVNF_RAM * FirstVNF_Mem ) - FirstVNF_CPU ) ) ) + Max( RRS,ACS ) )", "choosing": "Min( ( Max( RRSe,MUC ) / Min( ( ( Max( ( MUR / RMSe ),( Min( RMSe ,CS ) / DS ) ) + ( ( DS + Min( RMSe ,CS ) ) - ( MUC + RMSe ) ) ) * CS ) ,CS ) ) ,Max( CS,( MUC - ( MUC - MUM ) ) ) )", "obj1": 0.7259414225941423, "obj2": 0.2917694340902553}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) + Max( ( Const + ( RRS / FirstVNF_RAM_Server ) ),FirstVNF_Mem ) )", "choosing": "( Max( MUC,( CS + ( Max( ( Min( ( RRSe - RMSe ) ,Max( RMSe,DS ) ) * MUM ),( RMSe * Min( Max( RRSe,MUR ) ,RRSe ) ) ) / RCSe ) ) ) - Max( CS,DS ) )", "obj1": 0.7384937238493724, "obj2": 0.264952900923336}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,Min( AMS ,FirstVNF_CPU_Server ) ) + CRS ) / Max( FirstVNF_RAM,CRS ) )", "choosing": "Max( ( RRSe - Min( MUM ,Max( RCSe,RMSe ) ) ),( MUM + Max( ( MUM * RRSe ),CS ) ) )", "obj1": 0.7092050209205021, "obj2": 0.2783302561168616}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( FirstVNF_RAM_Server * Const ),Min( FirstVNF_RAM ,Const ) ) * Max( ( FirstVNF_CPU * ACS ),( MRS + FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( FirstVNF_RAM - AMS ) ) + ( ( FirstVNF_CPU + PN ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( CS + MUC ) + ( ( ( RMSe + MUC ) - ( MLU + MLU ) ) * RMSe ) )", "obj1": 0.7112970711297071, "obj2": 0.2522413707959509}, {"determining": "( ( ( ( Const * RRS ) / ( AMS * FirstVNF_RAM_Server ) ) / ( Min( Const ,FirstVNF_RAM_Server ) + ( MRS - AMS ) ) ) / Max( Min( ( FirstVNF_Mem_Server / DDR ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ),( Max( CRS,Const ) * FirstVNF_RAM ) ) )", "choosing": "( Max( Min( ( MUM / MLU ) ,Max( RCSe,DS ) ),Min( Max( MUC,MUR ) ,( RRSe / MUC ) ) ) / Max( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ),( MUR + RRSe ) ) )", "obj1": 0.6736401673640168, "obj2": 0.263236768496232}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU * FirstVNF_CPU_Server ) ,ARS ) / MRS ) ,( FirstVNF_Mem + Min( FirstVNF_RAM_Server ,AMS ) ) )", "choosing": "Max( Min( ( CS - ( RCSe - MUC ) ) ,Max( ( MUM - CS ),MLU ) ),Max( RCSe,( DS - RMSe ) ) )", "obj1": 0.7384937238493724, "obj2": 0.27601587742931005}, {"determining": "( ( ( ( BR * DDR ) / Min( FirstVNF_RAM ,BR ) ) + ( ( BR + MDR ) - ( RRS - FirstVNF_Mem_Server ) ) ) - Max( ( Max( MDR,FirstVNF_RAM_Server ) * Min( ARS ,FirstVNF_CPU_Server ) ),( Max( FirstVNF_Mem,FirstVNF_RAM ) - Max( RRS,FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( MUM,( MUM / ( RMSe / RCSe ) ) ) ,( ( MUC - RMSe ) - Max( MUC,CS ) ) )", "obj1": 0.7280334728033473, "obj2": 0.2768826178749039}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / ACS ),( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,ACS ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( ( MUR + RMSe ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.6694560669456067, "obj2": 0.2891134497318462}, {"determining": "( Max( ( ( FirstVNF_Mem * DDR ) / ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ),( ( RRS / FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem ) ) ) + ( Min( ( FirstVNF_Mem / BR ) ,Max( AMS,CRS ) ) * Max( Min( Const ,ARS ),Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) + ( RCSe * DS ) ) + Min( ( RRSe - MLU ) ,( CS - MLU ) ) ) + ( ( ( MUM / RRSe ) - Max( MUR,RRSe ) ) * ( ( MLU - DS ) - Max( MUM,CS ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.2496912601782926}, {"determining": "Max( ( FirstVNF_RAM / Max( AMS,RRS ) ),( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( AMS - FirstVNF_RAM ) ) * Min( ( FirstVNF_Mem_Server * Const ) ,Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "Max( Max( RCSe,RRSe ),Min( ( MUC / Max( CS,RMSe ) ) ,( Max( RRSe,RRSe ) / ( RMSe * DS ) ) ) )", "obj1": 0.7594142259414226, "obj2": 0.22536499864477588}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / BR ) ,( FirstVNF_Mem - ARS ) ) * Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),RRS ) ) / ( ( ( ARS / DDR ) - ( ACS - MRS ) ) / Min( ( RRS / FirstVNF_RAM ) ,Min( DDR ,MRS ) ) ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( DS - MUC ) ) - Max( Max( ( Max( MLU,MLU ) - Min( RMSe ,RRSe ) ),RRSe ),( RCSe - RCSe ) ) ) + ( ( Max( MUC,RCSe ) + ( DS * RRSe ) ) + ( ( RMSe * RMSe ) * ( DS - CS ) ) ) )", "obj1": 0.7740585774058577, "obj2": 0.20543196635836497}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( ( ( FirstVNF_CPU_Server * DDR ) / Min( FirstVNF_Mem_Server ,ARS ) ) + Max( ( RRS / MRS ),( DDR / BR ) ) ) - Min( Min( Min( BR ,ARS ) ,( FirstVNF_RAM_Server / MDR ) ) ,( ( FirstVNF_CPU_Server - AMS ) + ( Const * Const ) ) ) )", "choosing": "Min( Max( ( ( CS - MUM ) / ( RCSe / RMSe ) ),( Min( RRSe ,RRSe ) + ( MUR + DS ) ) ) ,( ( Max( RMSe,MUC ) + ( RRSe - RMSe ) ) * ( Min( RMSe ,RRSe ) * ( MLU * CS ) ) ) )", "obj1": 0.7196652719665272, "obj2": 0.26299390438333536}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ACS / ( Max( ( FirstVNF_Mem - ( BR / RRS ) ),DDR ) + Const ) ) * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( DS ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.288185934676607}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( Max( ( DS / MLU ),( RCSe + MUC ) ) - ( ( DS * CS ) - ( CS + MUR ) ) ) ,( ( Min( RCSe ,DS ) / Min( MLU ,CS ) ) + ( ( MUR / CS ) / ( RRSe + MUM ) ) ) )", "obj1": 0.8493723849372385, "obj2": 0.06315184505587036}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,Max( MDR,ACS ) ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + ( RMSe / DS ) ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7719665271966527, "obj2": 0.15050626767557235}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( ACS - ARS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( MUC / DS ) )", "obj1": 0.7405857740585774, "obj2": 0.18907736587542795}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) ,( ACS - AMS ) )", "choosing": "Min( ( ( Max( DS,CS ) - ( MUM + RRSe ) ) - ( ( RRSe / MLU ) + ( MUR + RMSe ) ) ) ,Max( ( Min( Max( RCSe,CS ) ,DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 0.9351464435146444, "obj2": 0.06113805831254081}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / BR ) ,( FirstVNF_Mem - ARS ) ) * Max( ( FirstVNF_CPU_Server / FirstVNF_RAM ),RRS ) ) / ( ( ( ( ( FirstVNF_CPU_Server * DDR ) / Min( FirstVNF_Mem_Server ,ARS ) ) + Max( ( RRS / MRS ),( DDR / BR ) ) ) - Min( Min( Min( BR ,ARS ) ,( FirstVNF_RAM_Server / MDR ) ) ,( ( FirstVNF_CPU_Server - AMS ) + ( Const * Const ) ) ) ) / Min( ( RRS / FirstVNF_RAM ) ,Min( DDR ,MRS ) ) ) )", "choosing": "( ( ( Max( RMSe,MUC ) + ( RRSe - RMSe ) ) - Max( Max( ( Max( MLU,MLU ) - Min( RMSe ,RRSe ) ),RRSe ),( RCSe - RCSe ) ) ) + ( ( Max( MUC,RCSe ) + ( DS * RRSe ) ) + ( ( RMSe * RMSe ) * ( DS - CS ) ) ) )", "obj1": 0.9163179916317992, "obj2": 0.06161122715009054}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( MUC - CS ) ,( DS - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "( FirstVNF_Mem / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( ( Min( DS ,MUC ) * RMSe ) + Min( ( MLU - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.7071129707112971, "obj2": 0.22276981771517057}, {"determining": "( ( AMS * PN ) - ( RRS * Const ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.2611259989258948}, {"determining": "( Max( ( MDR * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( FirstVNF_Mem_Server * RRS ) * Min( MRS ,Const ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( DS / RMSe ) ),( Max( DS,Max( RRSe,RRSe ) ) + Min( MUM ,DS ) ) )", "obj1": 0.6631799163179917, "obj2": 0.24756192939643962}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( MRS ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( MUR,MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.26639836631807867}, {"determining": "( ( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) - Min( FirstVNF_RAM ,MRS ) ) / ( ACS - ( FirstVNF_RAM / ACS ) ) )", "choosing": "( ( ( ( Max( RCSe,CS ) / ( MLU - RMSe ) ) * MUM ) * MUM ) * ( RMSe / ( MUC + DS ) ) )", "obj1": 0.6820083682008368, "obj2": 0.23955544933797887}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RCSe / MUM ) * ( CS / RMSe ) )", "obj1": 0.9790794979079498, "obj2": 0.009309201336994977}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( MRS ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( MUR,MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.7112970711297071, "obj2": 0.2011176827217243}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) / ( Max( PN,CRS ) - BR ) )", "choosing": "( MUC * ( ( RCSe - RMSe ) / ( CS + MUM ) ) )", "obj1": 0.7217573221757322, "obj2": 0.19973347953641088}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "Min( Min( FirstVNF_RAM_Server ,AMS ) ,( FirstVNF_Mem_Server + ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 0.6841004184100419, "obj2": 0.22813706974069897}, {"determining": "( ( CRS * ( FirstVNF_CPU - MRS ) ) - ( DDR - ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / BR ) ) ) )", "choosing": "Min( ( MUC - ( ( ( CS - MLU ) * ( ( CS / RRSe ) + Max( MLU,Min( MUR ,MUR ) ) ) ) * CS ) ) ,( RMSe + MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.014367843167592757}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( Max( RCSe,MUR ) - ( RMSe + ( MUR / MLU ) ) )", "obj1": 0.6443514644351465, "obj2": 0.252494635482621}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "Min( Max( ( ARS / RRS ),Max( BR,DDR ) ) ,Max( ( FirstVNF_Mem * PN ),( MDR + BR ) ) )", "choosing": "( ( Min( DS ,MUC ) * RMSe ) - ( CS * MUR ) )", "obj1": 0.6464435146443515, "obj2": 0.25044924247756956}, {"determining": "Max( Min( MDR ,Const ),Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 0.6841004184100419, "obj2": 0.22813706974069897}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Max( Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( Min( MLU ,CS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ) ,( DS - RMSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( ( ( CS / MLU ) + MUR ) ,( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( Min( Min( ACS ,PN ) ,( Min( ACS ,FirstVNF_CPU ) + RRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( CS - RRSe ),RMSe ),( MLU * ( RRSe * Min( ( Min( Min( ( RCSe + MUC ) ,RRSe ) ,MUR ) + MUC ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) - Min( Max( Const,( Max( DDR,FirstVNF_RAM ) + MRS ) ) ,DDR ) )", "choosing": "Max( Max( RRSe,MUM ),( ( Min( MUM ,MUC ) / ( ( ( MUR / MUR ) + ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) - MUM ) ) * ( MUR * ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( CRS / ( Max( DDR,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) / ARS ) ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RRSe ),Max( MUM,Min( Min( MUC ,( MUR * RCSe ) ) ,Min( ( RCSe / ( ( CS - ( RCSe * RRSe ) ) / ( ( MUR * CS ) + CS ) ) ) ,( ( MUR - RCSe ) - ( ( RMSe - Max( CS,MUM ) ) - ( MUM - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( FirstVNF_Mem ,MDR ) - Const ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( BR - AMS ) )", "choosing": "( ( RCSe + ( MUC + RCSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - AMS )", "choosing": "( Max( RCSe,MUC ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,RRS ) ,( ACS + RRS ) ) - Max( MDR,BR ) )", "choosing": "Min( Max( MUR,RMSe ) ,Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( Min( ( MUC + MUR ) ,( RMSe * MUM ) ) - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Min( ( MUC + MUR ) ,( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU / MUC ) ,( RMSe * ( DS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( RMSe + MUR ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,BR ) ,( DDR - ACS ) )", "choosing": "( RRSe * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( Max( RRSe,RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "Min( ( MUM / DS ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * ( DDR / ARS ) ) * ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) )", "choosing": "( ( ( DS - MLU ) / Min( CS ,MLU ) ) * ( ( DS - MLU ) + Min( MLU ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( ( ( DS - MLU ) / Min( CS ,MLU ) ) * ( ( DS - MLU ) + Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( ( ( RMSe + MUC ) + ( DS / DS ) ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( DS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + ACS ) )", "choosing": "( ( Min( Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),( ( MLU - CS ) * Min( MUM ,DS ) ) ) ,MUR ) - RCSe ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - RCSe ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( DS * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( ( DS + MUM ) - Min( CS ,MUR ) ) - ( Min( RCSe ,MUC ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( BR / FirstVNF_CPU ) ) )", "choosing": "( DS + ( Max( RCSe,CS ) / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( ( CS * MUR ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( ( MRS - FirstVNF_RAM ) - ( AMS - MRS ) ) )", "choosing": "Min( Max( ( Min( CS ,( MLU * RCSe ) ) * ( RRSe / DS ) ),( ( DS / CS ) + RRSe ) ) ,Min( Min( MUR ,RCSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( ( MRS - FirstVNF_RAM ) - ( AMS - MRS ) ) )", "choosing": "Min( Max( ( Min( CS ,( MLU * RCSe ) ) * ( RRSe / DS ) ),( ( DS / CS ) + RRSe ) ) ,Min( Min( MUR ,RCSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( ( MRS - FirstVNF_RAM ) - ( AMS - MRS ) ) )", "choosing": "Min( Max( ( Min( CS ,( MLU * RCSe ) ) * ( RRSe / DS ) ),( ( DS / CS ) + RRSe ) ) ,Min( Min( MUR ,RCSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( ( MRS - ACS ) - ( AMS - MRS ) ) )", "choosing": "Min( Max( ( Min( CS ,( MLU * RCSe ) ) * Min( DS ,CS ) ),( ( DS / CS ) + RRSe ) ) ,Min( Min( CS ,RCSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( ( ( ( ACS - AMS ) - FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ) - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + ( DS + Min( Max( RCSe,CS ) ,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - AMS ) - FirstVNF_Mem_Server ) * ( ACS - DDR ) )", "choosing": "( ( RCSe + MUR ) / ( DS + Min( ( MUR - ( DS + MUM ) ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RCSe + MUR ) / ( DS + Min( Max( RCSe,CS ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - AMS ) - FirstVNF_Mem_Server ) * ( ACS - Min( Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) ,( Max( ( CRS / BR ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem / AMS ),( FirstVNF_RAM - RRS ) ) ) ) ) )", "choosing": "( ( RCSe + MUR ) / ( DS + Min( Max( RCSe,CS ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ARS - FirstVNF_CPU ) / ( MRS / DDR ) ) ,( ( ARS * ARS ) - ( FirstVNF_Mem + Const ) ) ) ,Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "Min( ( MUR - ( DS + MUM ) ) ,Max( ( ( DS - DS ) - ( DS * CS ) ),( Max( RMSe,RRSe ) / ( DS - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + FirstVNF_Mem ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( DS,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Max( BR,( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( RRS * DDR ) ) / FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + ( CS * ( DS / Min( Min( MUM ,CS ) ,RMSe ) ) ) ) ,Max( ( Min( MLU ,Max( ( Min( MLU ,( CS * RCSe ) ) - Min( ( MUC + MUR ) ,( RMSe * MUC ) ) ),CS ) ) / MLU ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + MDR ) - Max( MDR,BR ) )", "choosing": "( ( RCSe + MUR ) / ( DS + Min( Max( RCSe,CS ) ,DS ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2981842364954488}, {"determining": "( ( Const + ( Const + Const ) ) - ( Min( Const ,ACS ) - Max( ( ( ( FirstVNF_RAM_Server * BR ) * ( MDR / Min( MDR ,PN ) ) ) * CRS ),PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) - MUR ) ,( ( CS - CS ) - RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1754421978863713}, {"determining": "( Max( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "Min( ( Max( ( DS / MLU ),( RCSe + MUC ) ) - ( ( DS * CS ) - ( CS + MUR ) ) ) ,( ( Min( RCSe ,DS ) / Min( MLU ,CS ) ) + ( ( MUR / CS ) / ( RRSe + MUM ) ) ) )", "obj1": 0.8493723849372385, "obj2": 0.06315184505587036}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) )", "choosing": "( ( CS / MLU ) * ( DS - ( ( RCSe - ( MUC / ( RMSe * CS ) ) ) * Max( ( CS + RRSe ),RRSe ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( ( ( FirstVNF_Mem * MDR ) - DDR ) - Max( MDR,Max( ARS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( CS / ( RMSe * MLU ) ) / RMSe ) - ( RMSe * MLU ) ) * RRSe ) ,( MUC + ( ( MLU - RCSe ) / DS ) ) )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,Max( MDR,ACS ) ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + ( RMSe / DS ) ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7719665271966527, "obj2": 0.15050626767557235}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "Min( Min( FirstVNF_RAM_Server ,AMS ) ,( FirstVNF_Mem_Server + ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 0.6841004184100419, "obj2": 0.22813706974069897}, {"determining": "( Max( ( MDR * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( FirstVNF_Mem_Server * RRS ) * Min( MRS ,Const ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( DS / RMSe ) ),( Max( DS,Max( RRSe,RRSe ) ) + Min( MUM ,DS ) ) )", "obj1": 0.6631799163179917, "obj2": 0.24756192939643962}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( MRS ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( MUR,MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.26639836631807867}, {"determining": "( ( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) - Min( FirstVNF_RAM ,MRS ) ) / ( ACS - ( FirstVNF_RAM / ACS ) ) )", "choosing": "( ( ( ( Max( RCSe,CS ) / ( MLU - RMSe ) ) * MUM ) * MUM ) * ( RMSe / ( MUC + DS ) ) )", "obj1": 0.6820083682008368, "obj2": 0.23955544933797887}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ACS / ( Max( ( FirstVNF_Mem - ( BR / RRS ) ),DDR ) + Const ) ) * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( DS ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 0.5962343096234309, "obj2": 0.288185934676607}, {"determining": "( ( AMS * PN ) - ( RRS * Const ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.2611259989258948}, {"determining": "Max( Min( MDR ,Const ),Max( FirstVNF_Mem_Server,Const ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 0.6841004184100419, "obj2": 0.22813706974069897}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + ( FirstVNF_CPU * ACS ) ) )", "choosing": "Max( ( MUM / MUM ),( Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / RRSe ) ) / MUC ) )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6359832635983264, "obj2": 0.25982841971360043}, {"determining": "Min( Max( ( ARS / RRS ),Max( BR,DDR ) ) ,Max( ( FirstVNF_Mem * PN ),( MDR + BR ) ) )", "choosing": "( ( Min( DS ,MUC ) * RMSe ) - ( CS * MUR ) )", "obj1": 0.6464435146443515, "obj2": 0.25044924247756956}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( MUC - CS ) ,( ( ( RCSe / MUM ) * ( CS / RMSe ) ) - MUM ) )", "obj1": 0.9811715481171548, "obj2": 0.008497863077959997}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( ACS - FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Max( DS,( MUM - RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.002148769121987732}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( Max( RCSe,MUR ) - ( RMSe + ( MUR / MLU ) ) )", "obj1": 0.6443514644351465, "obj2": 0.252494635482621}, {"determining": "( Max( FirstVNF_Mem,( CRS - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + ACS ) - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - BR ) )", "choosing": "Max( ( MUM * RRSe ),( Min( ( RCSe / MUM ) ,Max( Min( RMSe ,( Min( CS ,MUC ) + ( MUR + MUR ) ) ),RCSe ) ) / RCSe ) )", "obj1": 0.9769874476987448, "obj2": 0.009903143466216914}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RCSe / MUM ) * ( CS / RMSe ) )", "obj1": 0.9790794979079498, "obj2": 0.009309201336994977}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( RCSe / MUM ) * ( CS / RMSe ) )", "obj1": 0.9790794979079498, "obj2": 0.009309201336994977}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Max( Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( Min( MLU ,CS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ) ,( DS - RMSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( ( ( CS / MLU ) + MUR ) ,( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( Min( Min( ACS ,PN ) ,( Min( ACS ,FirstVNF_CPU ) + RRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( CS - RRSe ),RMSe ),( MLU * ( RRSe * Min( ( Min( Min( ( RCSe + MUC ) ,RRSe ) ,MUR ) + MUC ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) - Min( Max( Const,( Max( DDR,FirstVNF_RAM ) + MRS ) ) ,DDR ) )", "choosing": "Max( Max( RRSe,MUM ),( ( Min( MUM ,MUC ) / ( ( ( MUR / MUR ) + ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) - MUM ) ) * ( MUR * ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( CRS / ( Max( DDR,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) / ARS ) ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RRSe ),Max( MUM,Min( Min( MUC ,( MUR * RCSe ) ) ,Min( ( RCSe / ( ( CS - ( RCSe * RRSe ) ) / ( ( MUR * CS ) + CS ) ) ) ,( ( MUR - RCSe ) - ( ( RMSe - Max( CS,MUM ) ) - ( MUM - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( FirstVNF_Mem ,MDR ) - Const ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( BR - AMS ) )", "choosing": "( ( RCSe + ( MUC + RCSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - AMS )", "choosing": "( Max( RCSe,MUC ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,RRS ) ,( ACS + RRS ) ) - Max( MDR,BR ) )", "choosing": "Min( Max( MUR,RMSe ) ,Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( Min( ( MUC + MUR ) ,( RMSe * MUM ) ) - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Min( ( MUC + MUR ) ,( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU / MUC ) ,( RMSe * ( DS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( RMSe + MUR ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,BR ) ,( DDR - ACS ) )", "choosing": "( RRSe * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( Max( RRSe,RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "Min( ( MUM / DS ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * ( DDR / ARS ) ) * ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) )", "choosing": "( ( ( DS - MLU ) / Min( CS ,MLU ) ) * ( ( DS - MLU ) + Min( MLU ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( ( ( DS - MLU ) / Min( CS ,MLU ) ) * ( ( DS - MLU ) + Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( ( ( RMSe + MUC ) + ( DS / DS ) ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( DS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + ACS ) )", "choosing": "( ( Min( Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),( ( MLU - CS ) * Min( MUM ,DS ) ) ) ,MUR ) - RCSe ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - RCSe ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( DS * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( ( DS + MUM ) - Min( CS ,MUR ) ) - ( Min( RCSe ,MUC ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( BR / FirstVNF_CPU ) ) )", "choosing": "( DS + ( Max( RCSe,CS ) / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( ( CS * MUR ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( ( MRS - FirstVNF_RAM ) - ( AMS - MRS ) ) )", "choosing": "Min( Max( ( Min( CS ,( MLU * RCSe ) ) * ( RRSe / DS ) ),( ( DS / CS ) + RRSe ) ) ,Min( Min( MUR ,RCSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( ( MRS - FirstVNF_RAM ) - ( AMS - MRS ) ) )", "choosing": "Min( Max( ( Min( CS ,( MLU * RCSe ) ) * ( RRSe / DS ) ),( ( DS / CS ) + RRSe ) ) ,Min( Min( MUR ,RCSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( ( MRS - FirstVNF_RAM ) - ( AMS - MRS ) ) )", "choosing": "Min( Max( ( Min( CS ,( MLU * RCSe ) ) * ( RRSe / DS ) ),( ( DS / CS ) + RRSe ) ) ,Min( Min( MUR ,RCSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + ( ( MRS - ACS ) - ( AMS - MRS ) ) )", "choosing": "Min( Max( ( Min( CS ,( MLU * RCSe ) ) * Min( DS ,CS ) ),( ( DS / CS ) + RRSe ) ) ,Min( Min( CS ,RCSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( ( ( ( ACS - AMS ) - FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU ) ) - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + ( DS + Min( Max( RCSe,CS ) ,DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( RMSe + MUR ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( RRS * DDR ) ) / FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + ( CS * ( DS / Min( Min( MUM ,CS ) ,RMSe ) ) ) ) ,Max( ( Min( MLU ,Max( ( Min( MLU ,( CS * RCSe ) ) - Min( ( MUC + MUR ) ,( RMSe * MUC ) ) ),CS ) ) / MLU ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) / Min( BR ,MRS ) )", "choosing": "( ( MUC + RMSe ) / ( DS * RCSe ) )", "obj1": 0.5794979079497908, "obj2": 0.3041752615562712}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - MLU ) ,( DS - MUM ) )", "obj1": 0.8368200836820083, "obj2": 0.06891766679936634}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - BR )", "choosing": "( ( CS - CS ) + Max( MUM,RRSe ) )", "obj1": 0.7301255230125523, "obj2": 0.14372869614797604}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( RRSe - MUM ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6799163179916318, "obj2": 0.18112455112511247}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "( Min( ( MUM + DS ) ,CS ) * ( RRSe - MUM ) )", "obj1": 0.895397489539749, "obj2": 0.03974624407481127}, {"determining": "Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),( MDR - Const ) )", "choosing": "( MUM * ( RRSe - MUM ) )", "obj1": 0.6715481171548117, "obj2": 0.24277414211071902}, {"determining": "( ( Const + ( Const + Const ) ) - ( Min( Const ,ACS ) - Max( ( ( ( FirstVNF_RAM_Server * BR ) * ( MDR / Min( MDR ,PN ) ) ) * CRS ),PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) - MUR ) ,( ( CS - CS ) - RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1754421978863713}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) )", "choosing": "( ( CS / MLU ) * ( DS - ( ( RCSe - ( MUC / ( RMSe * CS ) ) ) * Max( ( CS + RRSe ),RRSe ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Const,Const ) )", "choosing": "( ( RCSe / Min( ( MUC - CS ) ,( ( ( RCSe / MUM ) * ( CS / RMSe ) ) - MUM ) ) ) * ( CS / RMSe ) )", "obj1": 0.8744769874476988, "obj2": 0.0484753011978776}, {"determining": "( ( CRS + MDR ) - Max( MDR,BR ) )", "choosing": "( ( RCSe + MUR ) / ( DS + Min( Max( RCSe,CS ) ,DS ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2981842364954488}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( MRS ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( MUR,MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.26639836631807867}, {"determining": "Min( Max( ( BR - ARS ),AMS ) ,( AMS - PN ) )", "choosing": "( ( CS - CS ) + Min( ( Max( Max( MUM,CS ),( MUM * RRSe ) ) - CS ) ,RRSe ) )", "obj1": 0.5941422594142259, "obj2": 0.27410230478997444}, {"determining": "( ( AMS * PN ) - ( RRS * Const ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.2611259989258948}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( Max( ( MDR * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( FirstVNF_Mem_Server * RRS ) * Min( MRS ,Const ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( DS / RMSe ) ),( Max( DS,Max( RRSe,RRSe ) ) + Min( MUM ,DS ) ) )", "obj1": 0.6631799163179917, "obj2": 0.24756192939643962}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8472803347280334, "obj2": 0.05791502830081089}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6359832635983264, "obj2": 0.25982841971360043}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9644351464435147, "obj2": 0.018679079264793206}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8389121338912134, "obj2": 0.06086513711545202}, {"determining": "Min( Max( ( ARS / RRS ),Max( BR,DDR ) ) ,Max( ( FirstVNF_Mem * PN ),( MDR + BR ) ) )", "choosing": "( ( Min( DS ,MUC ) * RMSe ) - ( CS * MUR ) )", "obj1": 0.6464435146443515, "obj2": 0.25044924247756956}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9811715481171548, "obj2": 0.007785921632958677}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( Max( RCSe,MUR ) - ( RMSe + ( MUR / MLU ) ) )", "obj1": 0.6443514644351465, "obj2": 0.252494635482621}, {"determining": "( ( ACS - FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Max( DS,( MUM - RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.002148769121987732}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( ( ( FirstVNF_Mem * MDR ) - DDR ) - Max( MDR,Max( ARS,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( CS / ( RMSe * MLU ) ) / RMSe ) - ( RMSe * MLU ) ) * RRSe ) ,( MUC + ( ( MLU - RCSe ) / DS ) ) )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( Min( CRS ,MRS ) - ( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_RAM ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM - ( RRSe + MUM ) ) - DS ) )", "obj1": 0.9769874476987448, "obj2": 0.007967729879451244}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + ( FirstVNF_CPU * ACS ) ) )", "choosing": "Max( ( MUM / MUM ),( Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / RRSe ) ) / MUC ) )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Max( Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( Min( MLU ,CS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ) ,( DS - RMSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( ( ( CS / MLU ) + MUR ) ,( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( Min( Min( ACS ,PN ) ,( Min( ACS ,FirstVNF_CPU ) + RRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( CS - RRSe ),RMSe ),( MLU * ( RRSe * Min( ( Min( Min( ( RCSe + MUC ) ,RRSe ) ,MUR ) + MUC ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) - Min( Max( Const,( Max( DDR,FirstVNF_RAM ) + MRS ) ) ,DDR ) )", "choosing": "Max( Max( RRSe,MUM ),( ( Min( MUM ,MUC ) / ( ( ( MUR / MUR ) + ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) - MUM ) ) * ( MUR * ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( CRS / ( Max( DDR,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) / ARS ) ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RRSe ),Max( MUM,Min( Min( MUC ,( MUR * RCSe ) ) ,Min( ( RCSe / ( ( CS - ( RCSe * RRSe ) ) / ( ( MUR * CS ) + CS ) ) ) ,( ( MUR - RCSe ) - ( ( RMSe - Max( CS,MUM ) ) - ( MUM - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( FirstVNF_Mem ,MDR ) - Const ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( BR - AMS ) )", "choosing": "( ( RCSe + ( MUC + RCSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - AMS )", "choosing": "( Max( RCSe,MUC ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,RRS ) ,( ACS + RRS ) ) - Max( MDR,BR ) )", "choosing": "Min( Max( MUR,RMSe ) ,Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( Min( ( MUC + MUR ) ,( RMSe * MUM ) ) - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Min( ( MUC + MUR ) ,( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU / MUC ) ,( RMSe * ( DS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( RMSe + MUR ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,BR ) ,( DDR - ACS ) )", "choosing": "( RRSe * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( Max( RRSe,RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "Min( ( MUM / DS ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * ( DDR / ARS ) ) * ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) )", "choosing": "( ( ( DS - MLU ) / Min( CS ,MLU ) ) * ( ( DS - MLU ) + Min( MLU ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( ( ( DS - MLU ) / Min( CS ,MLU ) ) * ( ( DS - MLU ) + Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( ( ( RMSe + MUC ) + ( DS / DS ) ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( DS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + ACS ) )", "choosing": "( ( Min( Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),( ( MLU - CS ) * Min( MUM ,DS ) ) ) ,MUR ) - RCSe ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - RCSe ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( DS * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( ( DS + MUM ) - Min( CS ,MUR ) ) - ( Min( RCSe ,MUC ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * ( BR / FirstVNF_CPU ) ) )", "choosing": "( DS + ( Max( RCSe,CS ) / ( DS - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( Min( ACS ,FirstVNF_RAM_Server ) ,( BR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( RCSe * DS ) * ( MUR - RMSe ) ) ,( ( CS * MUR ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * RRSe )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) / ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( RMSe + MUR ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) / Min( BR ,MRS ) )", "choosing": "( ( MUC + RMSe ) / ( DS * RCSe ) )", "obj1": 0.5794979079497908, "obj2": 0.3041752615562712}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - BR )", "choosing": "( ( CS - CS ) + Max( MUM,RRSe ) )", "obj1": 0.7301255230125523, "obj2": 0.14372869614797604}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( RRSe - MUM ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6799163179916318, "obj2": 0.18112455112511247}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),( MDR - Const ) )", "choosing": "( MUM * ( RRSe - MUM ) )", "obj1": 0.6715481171548117, "obj2": 0.24277414211071902}, {"determining": "( ( Const + ( Const + Const ) ) - ( Min( Const ,ACS ) - Max( ( ( ( FirstVNF_RAM_Server * BR ) * ( MDR / Min( MDR ,PN ) ) ) * CRS ),PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) - MUR ) ,( ( CS - CS ) - RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1754421978863713}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) ),Const ) )", "choosing": "( Min( CS ,MLU ) * ( ( MUC / ( RMSe * CS ) ) - MUM ) )", "obj1": 0.803347280334728, "obj2": 0.09353943548134079}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "( Min( ( MUM + DS ) ,CS ) * ( RRSe - MUM ) )", "obj1": 0.895397489539749, "obj2": 0.03974624407481127}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( BR + DDR ) )", "choosing": "Min( ( MUM * RRSe ) ,Max( MUM,MUR ) )", "obj1": 0.9267782426778243, "obj2": 0.03028989941334391}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Const )", "choosing": "Min( ( Max( Max( Min( ( CS - MUC ) ,Max( MUM,MUR ) ),CS ),( MUM * RRSe ) ) - CS ) ,RRSe )", "obj1": 0.8096234309623431, "obj2": 0.08360482247007275}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - MLU ) ,( DS - MUM ) )", "obj1": 0.8368200836820083, "obj2": 0.06891766679936634}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Const,Const ) )", "choosing": "( ( RCSe / Min( ( MUC - CS ) ,( ( ( RCSe / MUM ) * ( CS / RMSe ) ) - MUM ) ) ) * ( CS / RMSe ) )", "obj1": 0.8744769874476988, "obj2": 0.0484753011978776}, {"determining": "( ( CRS + MDR ) - Max( MDR,BR ) )", "choosing": "( ( RCSe + MUR ) / ( DS + Min( Max( RCSe,CS ) ,DS ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2981842364954488}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( MRS ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( MUR,MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.26639836631807867}, {"determining": "Min( Max( ( BR - ARS ),AMS ) ,( AMS - PN ) )", "choosing": "( ( CS - CS ) + Min( ( Max( Max( MUM,CS ),( MUM * RRSe ) ) - CS ) ,RRSe ) )", "obj1": 0.5941422594142259, "obj2": 0.27410230478997444}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 0.9476987447698745, "obj2": 0.024047315013994063}, {"determining": "( ( AMS * PN ) - ( RRS * Const ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.2611259989258948}, {"determining": "( Max( ( MDR * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( FirstVNF_Mem_Server * RRS ) * Min( MRS ,Const ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( DS / RMSe ) ),( Max( DS,Max( RRSe,RRSe ) ) + Min( MUM ,DS ) ) )", "obj1": 0.6631799163179917, "obj2": 0.24756192939643962}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8472803347280334, "obj2": 0.05791502830081089}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9644351464435147, "obj2": 0.018679079264793206}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8389121338912134, "obj2": 0.06086513711545202}, {"determining": "Min( Max( ( ARS / RRS ),Max( BR,DDR ) ) ,Max( ( FirstVNF_Mem * PN ),( MDR + BR ) ) )", "choosing": "( ( Min( DS ,MUC ) * RMSe ) - ( CS * MUR ) )", "obj1": 0.6464435146443515, "obj2": 0.25044924247756956}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9811715481171548, "obj2": 0.007785921632958677}, {"determining": "( ( ACS - FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Max( DS,( MUM - RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.002148769121987732}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( ( CRS * MDR ) / ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( ( MUC - RMSe ) / ( RRSe - MUC ) ) + Min( ( MLU - RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.6422594142259415, "obj2": 0.2594423751071491}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) / ( Max( MDR,FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,PN ) ) )", "choosing": "( Max( RCSe,MUR ) - ( RMSe + ( MUR / MLU ) ) )", "obj1": 0.6443514644351465, "obj2": 0.252494635482621}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6359832635983264, "obj2": 0.25982841971360043}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( CRS - ( Const - FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + ( FirstVNF_CPU * ACS ) ) )", "choosing": "Max( ( MUM / MUM ),( Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / RRSe ) ) / MUC ) )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) )", "choosing": "( ( CS / MLU ) * ( DS - ( ( RCSe - ( MUC / ( RMSe * CS ) ) ) * Max( ( CS + RRSe ),RRSe ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( Min( CRS ,MRS ) - ( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_RAM ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM - ( RRSe + MUM ) ) - DS ) )", "obj1": 0.9769874476987448, "obj2": 0.007967729879451244}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( Max( BR,( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( RRS * DDR ) ) / FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + ( CS * ( DS / Min( Min( MUM ,CS ) ,RMSe ) ) ) ) ,Max( ( Min( MLU ,Max( ( Min( MLU ,( CS * RCSe ) ) - Min( ( MUC + MUR ) ,( RMSe * MUC ) ) ),CS ) ) / MLU ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Max( Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( Min( MLU ,CS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ) ,( DS - RMSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( ( ( CS / MLU ) + MUR ) ,( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( Min( Min( ACS ,PN ) ,( Min( ACS ,FirstVNF_CPU ) + RRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( CS - RRSe ),RMSe ),( MLU * ( RRSe * Min( ( Min( Min( ( RCSe + MUC ) ,RRSe ) ,MUR ) + MUC ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) - Min( Max( Const,( Max( DDR,FirstVNF_RAM ) + MRS ) ) ,DDR ) )", "choosing": "Max( Max( RRSe,MUM ),( ( Min( MUM ,MUC ) / ( ( ( MUR / MUR ) + ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) - MUM ) ) * ( MUR * ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( CRS / ( Max( DDR,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) / ARS ) ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RRSe ),Max( MUM,Min( Min( MUC ,( MUR * RCSe ) ) ,Min( ( RCSe / ( ( CS - ( RCSe * RRSe ) ) / ( ( MUR * CS ) + CS ) ) ) ,( ( MUR - RCSe ) - ( ( RMSe - Max( CS,MUM ) ) - ( MUM - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( FirstVNF_Mem ,MDR ) - Const ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( BR - AMS ) )", "choosing": "( ( RCSe + ( MUC + RCSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - AMS )", "choosing": "( Max( RCSe,MUC ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,RRS ) ,( ACS + RRS ) ) - Max( MDR,BR ) )", "choosing": "Min( Max( MUR,RMSe ) ,Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( Min( ( MUC + MUR ) ,( RMSe * MUM ) ) - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Min( ( MUC + MUR ) ,( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU / MUC ) ,( RMSe * ( DS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( RMSe + MUR ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,BR ) ,( DDR - ACS ) )", "choosing": "( RRSe * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( Max( RRSe,RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "Min( ( MUM / DS ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * ( DDR / ARS ) ) * ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) )", "choosing": "( ( ( DS - MLU ) / Min( CS ,MLU ) ) * ( ( DS - MLU ) + Min( MLU ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( ( ( DS - MLU ) / Min( CS ,MLU ) ) * ( ( DS - MLU ) + Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( ( ( RMSe + MUC ) + ( DS / DS ) ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( DS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + ACS ) )", "choosing": "( ( Min( Max( ( ( CS / RCSe ) * Min( MUR ,CS ) ),( ( MLU - CS ) * Min( MUM ,DS ) ) ) ,MUR ) - RCSe ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( ( Min( MUM ,MUR ) - RCSe ) + Max( ( MLU + MUM ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( FirstVNF_Mem + CRS ) - ( FirstVNF_CPU * ( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( Max( ( RMSe * MUR ),RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) / ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) / Min( BR ,MRS ) )", "choosing": "( ( MUC + RMSe ) / ( DS * RCSe ) )", "obj1": 0.5794979079497908, "obj2": 0.3041752615562712}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( RRSe - MUM ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6799163179916318, "obj2": 0.18112455112511247}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - BR )", "choosing": "( ( CS - CS ) + Max( MUM,RRSe ) )", "obj1": 0.7301255230125523, "obj2": 0.14372869614797604}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),( MDR - Const ) )", "choosing": "( MUM * ( RRSe - MUM ) )", "obj1": 0.6715481171548117, "obj2": 0.24277414211071902}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) ),Const ) )", "choosing": "( Min( CS ,MLU ) * ( ( MUC / ( RMSe * CS ) ) - MUM ) )", "obj1": 0.803347280334728, "obj2": 0.09353943548134079}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "( Min( ( MUM + DS ) ,CS ) * ( RRSe - MUM ) )", "obj1": 0.895397489539749, "obj2": 0.03974624407481127}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( BR + DDR ) )", "choosing": "Min( ( MUM * RRSe ) ,Max( MUM,MUR ) )", "obj1": 0.9267782426778243, "obj2": 0.03028989941334391}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( MRS * AMS ) )", "choosing": "( ( MUM / RMSe ) / ( MUC + MLU ) )", "obj1": 0.7196652719665272, "obj2": 0.17148661208747504}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / ACS ),( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( RRS - FirstVNF_CPU ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.2955682288227359}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Const )", "choosing": "Min( ( Max( Max( Min( ( CS - MUC ) ,Max( MUM,MUR ) ),CS ),( MUM * RRSe ) ) - CS ) ,RRSe )", "obj1": 0.8096234309623431, "obj2": 0.08360482247007275}, {"determining": "( ( Const + ( Const + Const ) ) - ( Min( Const ,ACS ) - Max( ( ( ( FirstVNF_RAM_Server * BR ) * ( MDR / Min( MDR ,PN ) ) ) * CRS ),PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) - MUR ) ,( ( CS - CS ) - RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1754421978863713}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( MRS ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( MUR,MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.26639836631807867}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),Const ) )", "choosing": "Min( ( DS - CS ) ,( DS - MUM ) )", "obj1": 0.8284518828451883, "obj2": 0.07325934234676061}, {"determining": "Min( Max( ( BR - ARS ),AMS ) ,( AMS - PN ) )", "choosing": "( ( CS - CS ) + Min( ( Max( Max( MUM,CS ),( MUM * RRSe ) ) - CS ) ,RRSe ) )", "obj1": 0.5941422594142259, "obj2": 0.27410230478997444}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Const,Const ) )", "choosing": "( ( RCSe / Min( ( MUC - CS ) ,( ( ( RCSe / MUM ) * ( CS / RMSe ) ) - MUM ) ) ) * ( CS / RMSe ) )", "obj1": 0.8744769874476988, "obj2": 0.0484753011978776}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( ( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / MDR ) ) - ARS ) - ( MRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( Max( MUM,CS ),( ( CS - CS ) + Max( ( RRSe + ( DS - MUC ) ),RRSe ) ) ) - CS ) ,RRSe )", "obj1": 0.6422594142259415, "obj2": 0.24961580274158926}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 0.9476987447698745, "obj2": 0.024047315013994063}, {"determining": "( Max( ( MDR * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( FirstVNF_Mem_Server * RRS ) * Min( MRS ,Const ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( DS / RMSe ) ),( Max( DS,Max( RRSe,RRSe ) ) + Min( MUM ,DS ) ) )", "obj1": 0.6631799163179917, "obj2": 0.24756192939643962}, {"determining": "( ( AMS * PN ) - ( RRS * Const ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.2611259989258948}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6359832635983264, "obj2": 0.25982841971360043}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - MLU ) ,( DS - MUM ) )", "obj1": 0.8368200836820083, "obj2": 0.06891766679936634}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9644351464435147, "obj2": 0.018679079264793206}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8389121338912134, "obj2": 0.06086513711545202}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( DDR,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.8682008368200836, "obj2": 0.05240464319539439}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9811715481171548, "obj2": 0.007785921632958677}, {"determining": "( ( ACS - FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Max( DS,( MUM - RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.002148769121987732}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8472803347280334, "obj2": 0.05791502830081089}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) )", "choosing": "( ( CS / MLU ) * ( DS - ( ( RCSe - ( MUC / ( RMSe * CS ) ) ) * Max( ( CS + RRSe ),RRSe ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8514644351464435, "obj2": 0.05721152974399602}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + ( FirstVNF_CPU * ACS ) ) )", "choosing": "Max( ( MUM / MUM ),( Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / RRSe ) ) / MUC ) )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + ACS ) - FirstVNF_Mem ) ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - ( MUR + MUR ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010013612853193441}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( Min( CRS ,MRS ) - ( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_RAM ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM - ( RRSe + MUM ) ) - DS ) )", "obj1": 0.9769874476987448, "obj2": 0.007967729879451244}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( CRS - ( Const - FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( ( CS / MLU ) * ( DS - ( ( RCSe - ( MUC / ( RMSe * CS ) ) ) * Max( ( CS + RRSe ),RRSe ) ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( RMSe + MUR ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( RRS * DDR ) ) / FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + ( CS * ( DS / Min( Min( MUM ,CS ) ,RMSe ) ) ) ) ,Max( ( Min( MLU ,Max( ( Min( MLU ,( CS * RCSe ) ) - Min( ( MUC + MUR ) ,( RMSe * MUC ) ) ),CS ) ) / MLU ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Max( Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( Min( MLU ,CS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ) ,( DS - RMSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( ( ( CS / MLU ) + MUR ) ,( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( Min( Min( ACS ,PN ) ,( Min( ACS ,FirstVNF_CPU ) + RRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( CS - RRSe ),RMSe ),( MLU * ( RRSe * Min( ( Min( Min( ( RCSe + MUC ) ,RRSe ) ,MUR ) + MUC ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) - Min( Max( Const,( Max( DDR,FirstVNF_RAM ) + MRS ) ) ,DDR ) )", "choosing": "Max( Max( RRSe,MUM ),( ( Min( MUM ,MUC ) / ( ( ( MUR / MUR ) + ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) - MUM ) ) * ( MUR * ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( CRS / ( Max( DDR,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) / ARS ) ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RRSe ),Max( MUM,Min( Min( MUC ,( MUR * RCSe ) ) ,Min( ( RCSe / ( ( CS - ( RCSe * RRSe ) ) / ( ( MUR * CS ) + CS ) ) ) ,( ( MUR - RCSe ) - ( ( RMSe - Max( CS,MUM ) ) - ( MUM - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( FirstVNF_Mem ,MDR ) - Const ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( BR - AMS ) )", "choosing": "( ( RCSe + ( MUC + RCSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - AMS )", "choosing": "( Max( RCSe,MUC ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,RRS ) ,( ACS + RRS ) ) - Max( MDR,BR ) )", "choosing": "Min( Max( MUR,RMSe ) ,Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( Min( ( MUC + MUR ) ,( RMSe * MUM ) ) - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Min( ( MUC + MUR ) ,( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU / MUC ) ,( RMSe * ( DS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( RMSe + MUR ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,BR ) ,( DDR - ACS ) )", "choosing": "( RRSe * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( Max( RRSe,RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "Min( ( MUM / DS ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU_Server ,PN ) * ( DDR / ARS ) ) * ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) )", "choosing": "( ( ( DS - MLU ) / Min( CS ,MLU ) ) * ( ( DS - MLU ) + Min( MLU ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( ( ( DS - MLU ) / Min( CS ,MLU ) ) * ( ( DS - MLU ) + Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( ( ( RMSe + MUC ) + ( DS / DS ) ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) )", "choosing": "( ( ( MUM * MLU ) * ( DS * RRSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS * DDR ) * Min( BR ,CRS ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( DS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( Const / Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) ) + ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + CRS ) - ( FirstVNF_CPU * ( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( Max( ( RMSe * MUR ),RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) / Min( BR ,MRS ) )", "choosing": "( ( MUC + RMSe ) / ( DS * RCSe ) )", "obj1": 0.5794979079497908, "obj2": 0.3041752615562712}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( RRSe - MUM ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6799163179916318, "obj2": 0.18112455112511247}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - BR )", "choosing": "( ( CS - CS ) + Max( MUM,RRSe ) )", "obj1": 0.7301255230125523, "obj2": 0.14372869614797604}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),( MDR - Const ) )", "choosing": "( MUM * ( RRSe - MUM ) )", "obj1": 0.6715481171548117, "obj2": 0.24277414211071902}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) ),Const ) )", "choosing": "( Min( CS ,MLU ) * ( ( MUC / ( RMSe * CS ) ) - MUM ) )", "obj1": 0.803347280334728, "obj2": 0.09353943548134079}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( MRS * AMS ) )", "choosing": "( ( MUM / RMSe ) / ( MUC + MLU ) )", "obj1": 0.7196652719665272, "obj2": 0.17148661208747504}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / ACS ),( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( RRS - FirstVNF_CPU ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.2955682288227359}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Const )", "choosing": "Min( ( Max( Max( Min( ( CS - MUC ) ,Max( MUM,MUR ) ),CS ),( MUM * RRSe ) ) - CS ) ,RRSe )", "obj1": 0.8096234309623431, "obj2": 0.08360482247007275}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "( Min( ( MUM + DS ) ,CS ) * ( RRSe - MUM ) )", "obj1": 0.895397489539749, "obj2": 0.03974624407481127}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( MRS ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( MUR,MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.26639836631807867}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),Const ) )", "choosing": "Min( ( DS - CS ) ,( DS - MUM ) )", "obj1": 0.8284518828451883, "obj2": 0.07325934234676061}, {"determining": "Min( Max( ( BR - ARS ),AMS ) ,( AMS - PN ) )", "choosing": "( ( CS - CS ) + Min( ( Max( Max( MUM,CS ),( MUM * RRSe ) ) - CS ) ,RRSe ) )", "obj1": 0.5941422594142259, "obj2": 0.27410230478997444}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( BR + DDR ) )", "choosing": "Min( ( MUM * RRSe ) ,Max( MUM,MUR ) )", "obj1": 0.9267782426778243, "obj2": 0.03028989941334391}, {"determining": "( ( AMS * PN ) - ( RRS * Const ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.2611259989258948}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 0.9476987447698745, "obj2": 0.024047315013994063}, {"determining": "( ( Const + ( Const + Const ) ) - ( Min( Const ,ACS ) - Max( ( ( ( FirstVNF_RAM_Server * BR ) * ( MDR / Min( MDR ,PN ) ) ) * CRS ),PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) - MUR ) ,( ( CS - CS ) - RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1754421978863713}, {"determining": "( Max( ( MDR * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( FirstVNF_Mem_Server * RRS ) * Min( MRS ,Const ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( DS / RMSe ) ),( Max( DS,Max( RRSe,RRSe ) ) + Min( MUM ,DS ) ) )", "obj1": 0.6631799163179917, "obj2": 0.24756192939643962}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( ( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / MDR ) ) - ARS ) - ( MRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( Max( MUM,CS ),( ( CS - CS ) + Max( ( RRSe + ( DS - MUC ) ),RRSe ) ) ) - CS ) ,RRSe )", "obj1": 0.6422594142259415, "obj2": 0.24961580274158926}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( MRS + Min( FirstVNF_CPU_Server ,( ACS * MRS ) ) ) ) )", "choosing": "Min( ( MUR / Min( ( ( MUC * RMSe ) - ( CS * MUR ) ) ,RCSe ) ) ,RRSe )", "obj1": 0.8849372384937239, "obj2": 0.04585772630726425}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( ( FirstVNF_RAM / Const ) - FirstVNF_Mem_Server ) + ( Max( ( RRS * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( DDR + DDR ) * Min( MRS ,DDR ) ) ) )", "choosing": "Min( ( DS - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.6317991631799164, "obj2": 0.2527801059900892}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - MLU ) ,( DS - MUM ) )", "obj1": 0.8368200836820083, "obj2": 0.06891766679936634}, {"determining": "( ( ( Const - FirstVNF_Mem ) - DDR ) - Min( ( ( ( CRS * RRS ) - FirstVNF_CPU_Server ) - PN ) ,MRS ) )", "choosing": "Min( ( MUM - RMSe ) ,( MUC - ( Max( MUM,( RCSe + RRSe ) ) * RMSe ) ) )", "obj1": 0.9121338912133892, "obj2": 0.030400243357876503}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9644351464435147, "obj2": 0.018679079264793206}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Const,Const ) )", "choosing": "( ( RCSe / Min( ( MUC - CS ) ,( ( ( RCSe / MUM ) * ( CS / RMSe ) ) - MUM ) ) ) * ( CS / RMSe ) )", "obj1": 0.8744769874476988, "obj2": 0.0484753011978776}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8389121338912134, "obj2": 0.06086513711545202}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( DDR,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.8682008368200836, "obj2": 0.05240464319539439}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9811715481171548, "obj2": 0.007785921632958677}, {"determining": "( ( ACS - FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Max( DS,( MUM - RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.002148769121987732}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( CRS + FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( MUM + ( MUC + DS ) ) - ( DS * CS ) ) * ( Min( CS ,MLU ) * ( RRSe - MUM ) ) )", "obj1": 0.7071129707112971, "obj2": 0.17194046646647737}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8472803347280334, "obj2": 0.05791502830081089}, {"determining": "( ( CRS * ( FirstVNF_CPU - MRS ) ) - ( DDR - ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server / BR ) ) ) )", "choosing": "Min( ( MUC - ( ( ( CS - MLU ) * ( ( CS / RRSe ) + Max( MLU,Min( MUR ,MUR ) ) ) ) * CS ) ) ,( RMSe + MUM ) )", "obj1": 0.9121338912133892, "obj2": 0.030400243357876503}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8514644351464435, "obj2": 0.05721152974399602}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + ( FirstVNF_CPU * ACS ) ) )", "choosing": "Max( ( MUM / MUM ),( Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / RRSe ) ) / MUC ) )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + ACS ) - FirstVNF_Mem ) ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - ( MUR + MUR ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010013612853193441}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) )", "choosing": "( ( CS / MLU ) * ( DS - ( ( RCSe - ( MUC / ( RMSe * CS ) ) ) * Max( ( CS + RRSe ),RRSe ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( Min( CRS ,MRS ) - ( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_RAM ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM - ( RRSe + MUM ) ) - DS ) )", "obj1": 0.9769874476987448, "obj2": 0.007967729879451244}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( CRS - ( Const - FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( Min( CS ,MLU ) * Min( ( MUC - CS ) ,( DS - MUM ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) / ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( RMSe + MUR ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( RRS * DDR ) ) / FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + ( CS * ( DS / Min( Min( MUM ,CS ) ,RMSe ) ) ) ) ,Max( ( Min( MLU ,Max( ( Min( MLU ,( CS * RCSe ) ) - Min( ( MUC + MUR ) ,( RMSe * MUC ) ) ),CS ) ) / MLU ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Max( Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( Min( MLU ,CS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ) ,( DS - RMSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( ( ( CS / MLU ) + MUR ) ,( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( Min( Min( ACS ,PN ) ,( Min( ACS ,FirstVNF_CPU ) + RRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( CS - RRSe ),RMSe ),( MLU * ( RRSe * Min( ( Min( Min( ( RCSe + MUC ) ,RRSe ) ,MUR ) + MUC ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) - Min( Max( Const,( Max( DDR,FirstVNF_RAM ) + MRS ) ) ,DDR ) )", "choosing": "Max( Max( RRSe,MUM ),( ( Min( MUM ,MUC ) / ( ( ( MUR / MUR ) + ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) - MUM ) ) * ( MUR * ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( CRS / ( Max( DDR,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) / ARS ) ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RRSe ),Max( MUM,Min( Min( MUC ,( MUR * RCSe ) ) ,Min( ( RCSe / ( ( CS - ( RCSe * RRSe ) ) / ( ( MUR * CS ) + CS ) ) ) ,( ( MUR - RCSe ) - ( ( RMSe - Max( CS,MUM ) ) - ( MUM - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( FirstVNF_Mem ,MDR ) - Const ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( BR - AMS ) )", "choosing": "( ( RCSe + ( MUC + RCSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - AMS )", "choosing": "( Max( RCSe,MUC ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,RRS ) ,( ACS + RRS ) ) - Max( MDR,BR ) )", "choosing": "Min( Max( MUR,RMSe ) ,Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( Min( ( MUC + MUR ) ,( RMSe * MUM ) ) - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Min( ( MUC + MUR ) ,( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU / MUC ) ,( RMSe * ( DS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( RMSe + MUR ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,BR ) ,( DDR - ACS ) )", "choosing": "( RRSe * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( Max( RRSe,RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "Min( ( MUM / DS ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) / Max( Const,( ( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) * RRS ) + AMS ) ) )", "choosing": "( ( DS + MUR ) / ( MUR + ( ( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) + RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) ) + ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) / Min( BR ,MRS ) )", "choosing": "( ( MUC + RMSe ) / ( DS * RCSe ) )", "obj1": 0.5794979079497908, "obj2": 0.3041752615562712}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( RRSe - MUM ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6799163179916318, "obj2": 0.18112455112511247}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - BR )", "choosing": "( ( CS - CS ) + Max( MUM,RRSe ) )", "obj1": 0.7301255230125523, "obj2": 0.14372869614797604}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),( MDR - Const ) )", "choosing": "( MUM * ( RRSe - MUM ) )", "obj1": 0.6715481171548117, "obj2": 0.24277414211071902}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) ),Const ) )", "choosing": "( Min( CS ,MLU ) * ( ( MUC / ( RMSe * CS ) ) - MUM ) )", "obj1": 0.803347280334728, "obj2": 0.09353943548134079}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( MRS * AMS ) )", "choosing": "( ( MUM / RMSe ) / ( MUC + MLU ) )", "obj1": 0.7196652719665272, "obj2": 0.17148661208747504}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / ACS ),( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( RRS - FirstVNF_CPU ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.2955682288227359}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Const )", "choosing": "Min( ( Max( Max( Min( ( CS - MUC ) ,Max( MUM,MUR ) ),CS ),( MUM * RRSe ) ) - CS ) ,RRSe )", "obj1": 0.8096234309623431, "obj2": 0.08360482247007275}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( MRS ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( MUR,MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.26639836631807867}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),Const ) )", "choosing": "Min( ( DS - CS ) ,( DS - MUM ) )", "obj1": 0.8284518828451883, "obj2": 0.07325934234676061}, {"determining": "Min( Max( ( BR - ARS ),AMS ) ,( AMS - PN ) )", "choosing": "( ( CS - CS ) + Min( ( Max( Max( MUM,CS ),( MUM * RRSe ) ) - CS ) ,RRSe ) )", "obj1": 0.5941422594142259, "obj2": 0.27410230478997444}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,( ( ARS + RRS ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( DS + RCSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9267782426778243, "obj2": 0.025274136703824848}, {"determining": "( ( AMS * PN ) - ( RRS * Const ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.2611259989258948}, {"determining": "( ( Const + ( Const + Const ) ) - ( Min( Const ,ACS ) - Max( ( ( ( FirstVNF_RAM_Server * BR ) * ( MDR / Min( MDR ,PN ) ) ) * CRS ),PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) - MUR ) ,( ( CS - CS ) - RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1754421978863713}, {"determining": "( Max( ( MDR * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( FirstVNF_Mem_Server * RRS ) * Min( MRS ,Const ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( DS / RMSe ) ),( Max( DS,Max( RRSe,RRSe ) ) + Min( MUM ,DS ) ) )", "obj1": 0.6631799163179917, "obj2": 0.24756192939643962}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( ( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / MDR ) ) - ARS ) - ( MRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( Max( MUM,CS ),( ( CS - CS ) + Max( ( RRSe + ( DS - MUC ) ),RRSe ) ) ) - CS ) ,RRSe )", "obj1": 0.6422594142259415, "obj2": 0.24961580274158926}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 0.9476987447698745, "obj2": 0.024047315013994063}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( MRS + Min( FirstVNF_CPU_Server ,( ACS * MRS ) ) ) ) )", "choosing": "Min( ( MUR / Min( ( ( MUC * RMSe ) - ( CS * MUR ) ) ,RCSe ) ) ,RRSe )", "obj1": 0.8849372384937239, "obj2": 0.04585772630726425}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( ( FirstVNF_RAM / Const ) - FirstVNF_Mem_Server ) + ( Max( ( RRS * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( DDR + DDR ) * Min( MRS ,DDR ) ) ) )", "choosing": "Min( ( DS - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.6317991631799164, "obj2": 0.2527801059900892}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - MLU ) ,( DS - MUM ) )", "obj1": 0.8368200836820083, "obj2": 0.06891766679936634}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9644351464435147, "obj2": 0.018679079264793206}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "( Min( ( MUM + DS ) ,CS ) * ( RRSe - MUM ) )", "obj1": 0.895397489539749, "obj2": 0.03974624407481127}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Const,Const ) )", "choosing": "( ( RCSe / Min( ( MUC - CS ) ,( ( ( RCSe / MUM ) * ( CS / RMSe ) ) - MUM ) ) ) * ( CS / RMSe ) )", "obj1": 0.8744769874476988, "obj2": 0.0484753011978776}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8389121338912134, "obj2": 0.06086513711545202}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( DDR,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.8682008368200836, "obj2": 0.05240464319539439}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9811715481171548, "obj2": 0.007785921632958677}, {"determining": "( ( Const - DDR ) - Min( ( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( RRSe + RRSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9121338912133892, "obj2": 0.030131902617405823}, {"determining": "( ( ACS - FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Max( DS,( MUM - RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.002148769121987732}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( CRS + FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( MUM + ( MUC + DS ) ) - ( DS * CS ) ) * ( Min( CS ,MLU ) * ( RRSe - MUM ) ) )", "obj1": 0.7071129707112971, "obj2": 0.17194046646647737}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8472803347280334, "obj2": 0.05791502830081089}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) )", "choosing": "( ( CS / MLU ) * ( DS - ( ( RCSe - ( MUC / ( RMSe * CS ) ) ) * Max( ( CS + RRSe ),RRSe ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8514644351464435, "obj2": 0.05721152974399602}, {"determining": "( ( Const - DDR ) - Min( ( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ) - PN ) ,MRS ) )", "choosing": "Min( Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9079497907949791, "obj2": 0.03623293227447768}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + ( FirstVNF_CPU * ACS ) ) )", "choosing": "Max( ( MUM / MUM ),( Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / RRSe ) ) / MUC ) )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( DS + RRSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.031048595148681826}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9016736401673641, "obj2": 0.038864086419241335}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + ACS ) - FirstVNF_Mem ) ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - ( MUR + MUR ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010013612853193441}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( Min( CRS ,MRS ) - ( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_RAM ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM - ( RRSe + MUM ) ) - DS ) )", "obj1": 0.9769874476987448, "obj2": 0.007967729879451244}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( CRS - ( Const - FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 0.9058577405857741, "obj2": 0.038261967587218476}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( Min( CS ,MLU ) * Min( ( MUC - CS ) ,( DS - MUM ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 0.9058577405857741, "obj2": 0.038261967587218476}, {"determining": "( ( FirstVNF_Mem + CRS ) - ( FirstVNF_CPU * ( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( Max( ( RMSe * MUR ),RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) / ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( RMSe + MUR ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( RRS * DDR ) ) / FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + ( CS * ( DS / Min( Min( MUM ,CS ) ,RMSe ) ) ) ) ,Max( ( Min( MLU ,Max( ( Min( MLU ,( CS * RCSe ) ) - Min( ( MUC + MUR ) ,( RMSe * MUC ) ) ),CS ) ) / MLU ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Max( Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( Min( MLU ,CS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ) ,( DS - RMSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( ( ( CS / MLU ) + MUR ) ,( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( Min( Min( ACS ,PN ) ,( Min( ACS ,FirstVNF_CPU ) + RRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( CS - RRSe ),RMSe ),( MLU * ( RRSe * Min( ( Min( Min( ( RCSe + MUC ) ,RRSe ) ,MUR ) + MUC ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) - Min( Max( Const,( Max( DDR,FirstVNF_RAM ) + MRS ) ) ,DDR ) )", "choosing": "Max( Max( RRSe,MUM ),( ( Min( MUM ,MUC ) / ( ( ( MUR / MUR ) + ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) - MUM ) ) * ( MUR * ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( CRS / ( Max( DDR,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) / ARS ) ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RRSe ),Max( MUM,Min( Min( MUC ,( MUR * RCSe ) ) ,Min( ( RCSe / ( ( CS - ( RCSe * RRSe ) ) / ( ( MUR * CS ) + CS ) ) ) ,( ( MUR - RCSe ) - ( ( RMSe - Max( CS,MUM ) ) - ( MUM - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( FirstVNF_Mem ,MDR ) - Const ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( BR - AMS ) )", "choosing": "( ( RCSe + ( MUC + RCSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - AMS )", "choosing": "( Max( RCSe,MUC ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,RRS ) ,( ACS + RRS ) ) - Max( MDR,BR ) )", "choosing": "Min( Max( MUR,RMSe ) ,Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( Min( ( MUC + MUR ) ,( RMSe * MUM ) ) - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Min( ( MUC + MUR ) ,( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU / MUC ) ,( RMSe * ( DS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( RMSe + MUR ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( Min( BR ,( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) ) / Max( Const,( ( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) * RRS ) + AMS ) ) )", "choosing": "( ( DS + MUR ) / ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) / Max( Const,( ( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) * RRS ) + AMS ) ) )", "choosing": "( ( DS + MUR ) / ( MUR + ( ( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) + RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) / Min( BR ,MRS ) )", "choosing": "( ( MUC + RMSe ) / ( DS * RCSe ) )", "obj1": 0.5794979079497908, "obj2": 0.3041752615562712}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( RRSe - MUM ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6799163179916318, "obj2": 0.18112455112511247}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - BR )", "choosing": "( ( CS - CS ) + Max( MUM,RRSe ) )", "obj1": 0.7301255230125523, "obj2": 0.14372869614797604}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ),( MDR - Const ) )", "choosing": "( MUM * ( RRSe - MUM ) )", "obj1": 0.6715481171548117, "obj2": 0.24277414211071902}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) ),Const ) )", "choosing": "( Min( CS ,MLU ) * ( ( MUC / ( RMSe * CS ) ) - MUM ) )", "obj1": 0.803347280334728, "obj2": 0.09353943548134079}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( MRS * AMS ) )", "choosing": "( ( MUM / RMSe ) / ( MUC + MLU ) )", "obj1": 0.7196652719665272, "obj2": 0.17148661208747504}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / ACS ),( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( RRS - FirstVNF_CPU ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.2955682288227359}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Const )", "choosing": "Min( ( Max( Max( Min( ( CS - MUC ) ,Max( MUM,MUR ) ),CS ),( MUM * RRSe ) ) - CS ) ,RRSe )", "obj1": 0.8096234309623431, "obj2": 0.08360482247007275}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( MRS ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( MUR,MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.26639836631807867}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),Const ) )", "choosing": "Min( ( DS - CS ) ,( DS - MUM ) )", "obj1": 0.8284518828451883, "obj2": 0.07325934234676061}, {"determining": "Min( Max( ( BR - ARS ),AMS ) ,( AMS - PN ) )", "choosing": "( ( CS - CS ) + Min( ( Max( Max( MUM,CS ),( MUM * RRSe ) ) - CS ) ,RRSe ) )", "obj1": 0.5941422594142259, "obj2": 0.27410230478997444}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,( ( ARS + RRS ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( DS + RCSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9267782426778243, "obj2": 0.025274136703824848}, {"determining": "( ( AMS * PN ) - ( RRS * Const ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),( ( Max( MUR,RRSe ) - Max( MUM,MUR ) ) / ( Max( MLU,DS ) / Min( MLU ,MUM ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.2611259989258948}, {"determining": "( ( Const + ( Const + Const ) ) - ( Min( Const ,ACS ) - Max( ( ( ( FirstVNF_RAM_Server * BR ) * ( MDR / Min( MDR ,PN ) ) ) * CRS ),PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) - MUR ) ,( ( CS - CS ) - RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1754421978863713}, {"determining": "( ( BR + MRS ) / Max( Const,( ( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) * RRS ) + AMS ) ) )", "choosing": "( ( DS + MUR ) / Max( ( ( RMSe * MUC ) - DS ),( RMSe * CS ) ) )", "obj1": 0.6569037656903766, "obj2": 0.24336892024968657}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( ( ( DDR * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / MDR ) ) - ARS ) - ( MRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( Max( MUM,CS ),( ( CS - CS ) + Max( ( RRSe + ( DS - MUC ) ),RRSe ) ) ) - CS ) ,RRSe )", "obj1": 0.6422594142259415, "obj2": 0.24961580274158926}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 0.9476987447698745, "obj2": 0.024047315013994063}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( MRS + Min( FirstVNF_CPU_Server ,( ACS * MRS ) ) ) ) )", "choosing": "Min( ( MUR / Min( ( ( MUC * RMSe ) - ( CS * MUR ) ) ,RCSe ) ) ,RRSe )", "obj1": 0.8849372384937239, "obj2": 0.04585772630726425}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( ( FirstVNF_RAM / Const ) - FirstVNF_Mem_Server ) + ( Max( ( RRS * ARS ),( FirstVNF_CPU_Server - PN ) ) * ( ( DDR + DDR ) * Min( MRS ,DDR ) ) ) )", "choosing": "Min( ( DS - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.6317991631799164, "obj2": 0.2527801059900892}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - MLU ) ,( DS - MUM ) )", "obj1": 0.8368200836820083, "obj2": 0.06891766679936634}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9644351464435147, "obj2": 0.018679079264793206}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "( Min( ( MUM + DS ) ,CS ) * ( RRSe - MUM ) )", "obj1": 0.895397489539749, "obj2": 0.03974624407481127}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Const,Const ) )", "choosing": "( ( RCSe / Min( ( MUC - CS ) ,( ( ( RCSe / MUM ) * ( CS / RMSe ) ) - MUM ) ) ) * ( CS / RMSe ) )", "obj1": 0.8744769874476988, "obj2": 0.0484753011978776}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8389121338912134, "obj2": 0.06086513711545202}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( DDR,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.8682008368200836, "obj2": 0.05240464319539439}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9811715481171548, "obj2": 0.007785921632958677}, {"determining": "( ( Const - DDR ) - Min( ( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( RRSe + RRSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9121338912133892, "obj2": 0.030131902617405823}, {"determining": "( ( ACS - FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Max( DS,( MUM - RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.002148769121987732}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( CRS + FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( MUM + ( MUC + DS ) ) - ( DS * CS ) ) * ( Min( CS ,MLU ) * ( RRSe - MUM ) ) )", "obj1": 0.7071129707112971, "obj2": 0.17194046646647737}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8472803347280334, "obj2": 0.05791502830081089}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8514644351464435, "obj2": 0.05721152974399602}, {"determining": "( ( Const - DDR ) - Min( ( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ) - PN ) ,MRS ) )", "choosing": "Min( Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9079497907949791, "obj2": 0.03623293227447768}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + ( FirstVNF_CPU * ACS ) ) )", "choosing": "Max( ( MUM / MUM ),( Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / RRSe ) ) / MUC ) )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( DS + RRSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.031048595148681826}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9016736401673641, "obj2": 0.038864086419241335}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + ACS ) - FirstVNF_Mem ) ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - ( MUR + MUR ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010013612853193441}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,RRSe ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9037656903765691, "obj2": 0.036802087008551074}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) )", "choosing": "( ( CS / MLU ) * ( DS - ( ( RCSe - ( MUC / ( RMSe * CS ) ) ) * Max( ( CS + RRSe ),RRSe ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( Min( CRS ,MRS ) - ( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_RAM ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM - ( RRSe + MUM ) ) - DS ) )", "obj1": 0.9769874476987448, "obj2": 0.007967729879451244}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( CRS - ( Const - FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( Min( CS ,MLU ) * Min( ( MUC - CS ) ,( DS - MUM ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( Const / Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) ) + ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + CRS ) - ( FirstVNF_CPU * ( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( Max( ( RMSe * MUR ),RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) / ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( RMSe + MUR ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( RRS * DDR ) ) / FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + ( CS * ( DS / Min( Min( MUM ,CS ) ,RMSe ) ) ) ) ,Max( ( Min( MLU ,Max( ( Min( MLU ,( CS * RCSe ) ) - Min( ( MUC + MUR ) ,( RMSe * MUC ) ) ),CS ) ) / MLU ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Max( Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( Min( MLU ,CS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ) ,( DS - RMSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( ( ( CS / MLU ) + MUR ) ,( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( Min( Min( ACS ,PN ) ,( Min( ACS ,FirstVNF_CPU ) + RRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( CS - RRSe ),RMSe ),( MLU * ( RRSe * Min( ( Min( Min( ( RCSe + MUC ) ,RRSe ) ,MUR ) + MUC ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) - Min( Max( Const,( Max( DDR,FirstVNF_RAM ) + MRS ) ) ,DDR ) )", "choosing": "Max( Max( RRSe,MUM ),( ( Min( MUM ,MUC ) / ( ( ( MUR / MUR ) + ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) - MUM ) ) * ( MUR * ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( CRS / ( Max( DDR,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) / ARS ) ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RRSe ),Max( MUM,Min( Min( MUC ,( MUR * RCSe ) ) ,Min( ( RCSe / ( ( CS - ( RCSe * RRSe ) ) / ( ( MUR * CS ) + CS ) ) ) ,( ( MUR - RCSe ) - ( ( RMSe - Max( CS,MUM ) ) - ( MUM - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( FirstVNF_Mem ,MDR ) - Const ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( BR - AMS ) )", "choosing": "( ( RCSe + ( MUC + RCSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - AMS )", "choosing": "( Max( RCSe,MUC ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,RRS ) ,( ACS + RRS ) ) - Max( MDR,BR ) )", "choosing": "Min( Max( MUR,RMSe ) ,Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( Min( ( MUC + MUR ) ,( RMSe * MUM ) ) - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Min( ( MUC + MUR ) ,( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU / MUC ) ,( RMSe * ( DS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( RMSe + MUR ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( Min( BR ,( ( ( RRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) / FirstVNF_RAM ) ) / Max( Const,( Min( MDR ,Max( ACS,FirstVNF_RAM ) ) + ( Min( ( ( ( RRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) / FirstVNF_RAM ) ,CRS ) - RRS ) ) ) )", "choosing": "( ( Max( DS,MUR ) / ( ( ( MUC * MUM ) - MUR ) / MUR ) ) / ( ( ( MUC * MUM ) - MUR ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) ) / Max( Const,( ( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) * RRS ) + AMS ) ) )", "choosing": "( ( DS + MUR ) / ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) / Min( BR ,MRS ) )", "choosing": "( ( MUC + RMSe ) / ( DS * RCSe ) )", "obj1": 0.5794979079497908, "obj2": 0.3041752615562712}, {"determining": "( Max( ACS,ARS ) - Min( ( ( MRS + Const ) - Max( FirstVNF_CPU_Server,PN ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( MUR / MLU ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,Min( RRSe ,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.24113553267491536}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( RRSe - MUM ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6799163179916318, "obj2": 0.18112455112511247}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - BR )", "choosing": "( ( CS - CS ) + Max( MUM,RRSe ) )", "obj1": 0.7301255230125523, "obj2": 0.14372869614797604}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) ),Const ) )", "choosing": "( Min( CS ,MLU ) * ( ( MUC / ( RMSe * CS ) ) - MUM ) )", "obj1": 0.803347280334728, "obj2": 0.09353943548134079}, {"determining": "( ( Min( ARS ,FirstVNF_RAM ) + Min( MRS ,ARS ) ) / ( ( FirstVNF_CPU_Server / RRS ) - ( AMS / ACS ) ) )", "choosing": "( Max( Max( MUR,MUM ),Max( MUM,RMSe ) ) - Min( Max( MUR,MUR ) ,RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.26639836631807867}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( MRS * AMS ) )", "choosing": "( ( MUM / RMSe ) / ( MUC + MLU ) )", "obj1": 0.7196652719665272, "obj2": 0.17148661208747504}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / ACS ),( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( RRS - FirstVNF_CPU ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.2955682288227359}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Const )", "choosing": "Min( ( Max( Max( Min( ( CS - MUC ) ,Max( MUM,MUR ) ),CS ),( MUM * RRSe ) ) - CS ) ,RRSe )", "obj1": 0.8096234309623431, "obj2": 0.08360482247007275}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),Const ) )", "choosing": "Min( ( DS - CS ) ,( DS - MUM ) )", "obj1": 0.8284518828451883, "obj2": 0.07325934234676061}, {"determining": "Min( Max( ( BR - ARS ),AMS ) ,( AMS - PN ) )", "choosing": "( ( CS - CS ) + Min( ( Max( Max( MUM,CS ),( MUM * RRSe ) ) - CS ) ,RRSe ) )", "obj1": 0.5941422594142259, "obj2": 0.27410230478997444}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,( ( ARS + RRS ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( DS + RCSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9267782426778243, "obj2": 0.025274136703824848}, {"determining": "( ( Const + ( Const + Const ) ) - ( Min( Const ,ACS ) - Max( ( ( ( FirstVNF_RAM_Server * BR ) * ( MDR / Min( MDR ,PN ) ) ) * CRS ),PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) - MUR ) ,( ( CS - CS ) - RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1754421978863713}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 0.9476987447698745, "obj2": 0.024047315013994063}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( MRS + Min( FirstVNF_CPU_Server ,( ACS * MRS ) ) ) ) )", "choosing": "Min( ( MUR / Min( ( ( MUC * RMSe ) - ( CS * MUR ) ) ,RCSe ) ) ,RRSe )", "obj1": 0.8849372384937239, "obj2": 0.04585772630726425}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - MLU ) ,( DS - MUM ) )", "obj1": 0.8368200836820083, "obj2": 0.06891766679936634}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9644351464435147, "obj2": 0.018679079264793206}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "( Min( ( MUM + DS ) ,CS ) * ( RRSe - MUM ) )", "obj1": 0.895397489539749, "obj2": 0.03974624407481127}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Const,Const ) )", "choosing": "( ( RCSe / Min( ( MUC - CS ) ,( ( ( RCSe / MUM ) * ( CS / RMSe ) ) - MUM ) ) ) * ( CS / RMSe ) )", "obj1": 0.8744769874476988, "obj2": 0.0484753011978776}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8389121338912134, "obj2": 0.06086513711545202}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( DDR,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.8682008368200836, "obj2": 0.05240464319539439}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9811715481171548, "obj2": 0.007785921632958677}, {"determining": "( ( Const - DDR ) - Min( ( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( RRSe + RRSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9121338912133892, "obj2": 0.030131902617405823}, {"determining": "( ( ACS - FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Max( DS,( MUM - RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.002148769121987732}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( CRS + FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( MUM + ( MUC + DS ) ) - ( DS * CS ) ) * ( Min( CS ,MLU ) * ( RRSe - MUM ) ) )", "obj1": 0.7071129707112971, "obj2": 0.17194046646647737}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8472803347280334, "obj2": 0.05791502830081089}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) )", "choosing": "( ( CS / MLU ) * ( DS - ( ( RCSe - ( MUC / ( RMSe * CS ) ) ) * Max( ( CS + RRSe ),RRSe ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8514644351464435, "obj2": 0.05721152974399602}, {"determining": "( ( Const - DDR ) - Min( ( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ) - PN ) ,MRS ) )", "choosing": "Min( Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9079497907949791, "obj2": 0.03623293227447768}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + ( FirstVNF_CPU * ACS ) ) )", "choosing": "Max( ( MUM / MUM ),( Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / RRSe ) ) / MUC ) )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( DS + RRSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.031048595148681826}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9016736401673641, "obj2": 0.038864086419241335}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + ACS ) - FirstVNF_Mem ) ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - ( MUR + MUR ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010013612853193441}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( Min( CRS ,MRS ) - ( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_RAM ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM - ( RRSe + MUM ) ) - DS ) )", "obj1": 0.9769874476987448, "obj2": 0.007967729879451244}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - Max( Max( ( ( RRS * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( CS ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9037656903765691, "obj2": 0.036802087008551074}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( CRS - ( Const - FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( Min( CS ,MLU ) * Min( ( MUC - CS ) ,( DS - MUM ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,RRSe ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9037656903765691, "obj2": 0.036802087008551074}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) / Max( Const,( ( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) * RRS ) + AMS ) ) )", "choosing": "( ( DS + MUR ) / ( MUR + ( ( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) + RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) ) + ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + CRS ) - ( FirstVNF_CPU * ( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( Max( ( RMSe * MUR ),RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) / ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( RMSe + MUR ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( RRS * DDR ) ) / FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + ( CS * ( DS / Min( Min( MUM ,CS ) ,RMSe ) ) ) ) ,Max( ( Min( MLU ,Max( ( Min( MLU ,( CS * RCSe ) ) - Min( ( MUC + MUR ) ,( RMSe * MUC ) ) ),CS ) ) / MLU ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Max( Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( Min( MLU ,CS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ) ,( DS - RMSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( ( ( CS / MLU ) + MUR ) ,( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( Min( Min( ACS ,PN ) ,( Min( ACS ,FirstVNF_CPU ) + RRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( CS - RRSe ),RMSe ),( MLU * ( RRSe * Min( ( Min( Min( ( RCSe + MUC ) ,RRSe ) ,MUR ) + MUC ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) - Min( Max( Const,( Max( DDR,FirstVNF_RAM ) + MRS ) ) ,DDR ) )", "choosing": "Max( Max( RRSe,MUM ),( ( Min( MUM ,MUC ) / ( ( ( MUR / MUR ) + ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) - MUM ) ) * ( MUR * ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( CRS / ( Max( DDR,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) / ARS ) ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RRSe ),Max( MUM,Min( Min( MUC ,( MUR * RCSe ) ) ,Min( ( RCSe / ( ( CS - ( RCSe * RRSe ) ) / ( ( MUR * CS ) + CS ) ) ) ,( ( MUR - RCSe ) - ( ( RMSe - Max( CS,MUM ) ) - ( MUM - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( FirstVNF_Mem ,MDR ) - Const ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( BR - AMS ) )", "choosing": "( ( RCSe + ( MUC + RCSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - AMS )", "choosing": "( Max( RCSe,MUC ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,RRS ) ,( ACS + RRS ) ) - Max( MDR,BR ) )", "choosing": "Min( Max( MUR,RMSe ) ,Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( Min( ( MUC + MUR ) ,( RMSe * MUM ) ) - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Min( ( MUC + MUR ) ,( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,MRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU / MUC ) ,( RMSe * ( DS * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( RMSe + MUR ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( MRS,BR ) * Min( FirstVNF_RAM_Server ,Const ) ) - ( Const - MRS ) ) + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( CS / Max( ( Max( RRSe,( RRSe * RMSe ) ) * RRSe ),( RCSe - Max( ( CS - MUM ),Min( DS ,( ( RCSe * MUR ) / CS ) ) ) ) ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUM + DS ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( ( MRS / Min( FirstVNF_RAM ,( ARS - FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem / ARS ) ) - Min( ( BR + ( MDR + DDR ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( CS / MUR ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,( ( ( Max( MUR,( MLU - RCSe ) ) / DS ) + ( ( ( MLU - MLU ) * RCSe ) - MUM ) ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( ( RRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) / FirstVNF_RAM ) ) / Max( Const,( Min( MDR ,Max( ACS,FirstVNF_RAM ) ) + ( Min( ( ( ( RRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) / FirstVNF_RAM ) ,CRS ) - RRS ) ) ) )", "choosing": "( ( Max( DS,MUR ) / ( ( ( MUC * MUM ) - MUR ) / MUR ) ) / ( ( ( MUC * MUM ) - MUR ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) / Min( BR ,MRS ) )", "choosing": "( ( MUC + RMSe ) / ( DS * RCSe ) )", "obj1": 0.5794979079497908, "obj2": 0.3041752615562712}, {"determining": "Min( ( RRS / ( ARS / Const ) ) ,( ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) / ( AMS + Max( DDR,( FirstVNF_Mem_Server + ( RRS - ( MDR / FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( Min( Min( ( Max( RRSe,( ( ( CS * MUC ) * RCSe ) / Max( MUM,Min( RMSe ,MUR ) ) ) ) * DS ) ,Min( MUM ,MUR ) ) ,Min( Max( MUR,MLU ) ,( CS * RCSe ) ) ) + Max( ( Min( CS ,MUC ) * ( CS + MUM ) ),( Min( RCSe ,( MUM * ( Max( RRSe,RMSe ) - MUM ) ) ) * Min( MUM ,RRSe ) ) ) )", "obj1": 0.6736401673640168, "obj2": 0.2248372434115607}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - BR )", "choosing": "( ( CS - CS ) + Max( MUM,RRSe ) )", "obj1": 0.7301255230125523, "obj2": 0.14372869614797604}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( RRSe - MUM ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6799163179916318, "obj2": 0.18112455112511247}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) ),Const ) )", "choosing": "( Min( CS ,MLU ) * ( ( MUC / ( RMSe * CS ) ) - MUM ) )", "obj1": 0.803347280334728, "obj2": 0.09353943548134079}, {"determining": "( Max( ACS,ARS ) - Min( ( BR + ( MDR + DDR ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( CS / MUR ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,( ( ( Max( MUR,( MLU - RCSe ) ) / DS ) + ( ( ( MLU - MLU ) * RCSe ) - MLU ) ) / MUM ) ) )", "obj1": 0.6171548117154811, "obj2": 0.24113553267491536}, {"determining": "( Max( ACS,ARS ) - Min( ( BR + ( MDR + DDR ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( CS / MUR ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,( ( ( Max( MUR,( MLU - RCSe ) ) / DS ) + ( ( ( MLU - MLU ) * RCSe ) - MLU ) ) / MUM ) ) )", "obj1": 0.604602510460251, "obj2": 0.25123513626870875}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( MRS * AMS ) )", "choosing": "( ( MUM / RMSe ) / ( MUC + MLU ) )", "obj1": 0.7196652719665272, "obj2": 0.17148661208747504}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Const )", "choosing": "Min( ( Max( Max( Min( ( CS - MUC ) ,Max( MUM,MUR ) ),CS ),( MUM * RRSe ) ) - CS ) ,RRSe )", "obj1": 0.8096234309623431, "obj2": 0.08360482247007275}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),Const ) )", "choosing": "Min( ( DS - CS ) ,( DS - MUM ) )", "obj1": 0.8284518828451883, "obj2": 0.07325934234676061}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,( ( ARS + RRS ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( DS + RCSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9267782426778243, "obj2": 0.025274136703824848}, {"determining": "( Max( ACS,ARS ) - Min( ( ( MRS / Min( FirstVNF_RAM ,( ARS - FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem / ( FirstVNF_Mem / ARS ) ) ) ,AMS ) )", "choosing": "Max( ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ),Min( ( ( DS + MUR ) * MLU ) ,( RCSe * Max( MUC,RRSe ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2837090992810069}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / ACS ),( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( RRS - FirstVNF_CPU ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.2955682288227359}, {"determining": "( ( Const + ( Const + Const ) ) - ( Min( Const ,ACS ) - Max( ( ( ( FirstVNF_RAM_Server * BR ) * ( MDR / Min( MDR ,PN ) ) ) * CRS ),PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) - MUR ) ,( ( CS - CS ) - RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1754421978863713}, {"determining": "( Max( ACS,ARS ) - Min( ( ( MRS + Const ) - Max( FirstVNF_CPU_Server,PN ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( MUR / MLU ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,Min( RRSe ,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.24113553267491536}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + ( FirstVNF_CPU * ACS ) ) )", "choosing": "Max( ( MUM / MUM ),( Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / RRSe ) ) / MUC ) )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 0.9476987447698745, "obj2": 0.024047315013994063}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( MRS + Min( FirstVNF_CPU_Server ,( ACS * MRS ) ) ) ) )", "choosing": "Min( ( MUR / Min( ( ( MUC * RMSe ) - ( CS * MUR ) ) ,RCSe ) ) ,RRSe )", "obj1": 0.8849372384937239, "obj2": 0.04585772630726425}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - MLU ) ,( DS - MUM ) )", "obj1": 0.8368200836820083, "obj2": 0.06891766679936634}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9644351464435147, "obj2": 0.018679079264793206}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Const,Const ) )", "choosing": "( ( RCSe / Min( ( MUC - CS ) ,( ( ( RCSe / MUM ) * ( CS / RMSe ) ) - MUM ) ) ) * ( CS / RMSe ) )", "obj1": 0.8744769874476988, "obj2": 0.0484753011978776}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8389121338912134, "obj2": 0.06086513711545202}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( DDR,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.8682008368200836, "obj2": 0.05240464319539439}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "( Min( ( MUM + DS ) ,CS ) * ( RRSe - MUM ) )", "obj1": 0.895397489539749, "obj2": 0.03974624407481127}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9811715481171548, "obj2": 0.007785921632958677}, {"determining": "( ( Const - DDR ) - Min( ( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( RRSe + RRSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9121338912133892, "obj2": 0.030131902617405823}, {"determining": "( ( ACS - FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Max( DS,( MUM - RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.002148769121987732}, {"determining": "Min( Max( ( BR - ARS ),AMS ) ,( AMS - PN ) )", "choosing": "( ( CS - CS ) + Min( ( Max( Max( MUM,CS ),( MUM * RRSe ) ) - CS ) ,RRSe ) )", "obj1": 0.5941422594142259, "obj2": 0.27410230478997444}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( CRS + FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( MUM + ( MUC + DS ) ) - ( DS * CS ) ) * ( Min( CS ,MLU ) * ( RRSe - MUM ) ) )", "obj1": 0.7071129707112971, "obj2": 0.17194046646647737}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8472803347280334, "obj2": 0.05791502830081089}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8514644351464435, "obj2": 0.05721152974399602}, {"determining": "( ( Const - DDR ) - Min( ( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ) - PN ) ,MRS ) )", "choosing": "Min( Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9079497907949791, "obj2": 0.03623293227447768}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( DS + RRSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.031048595148681826}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( ( CS / RRSe ) - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.899581589958159, "obj2": 0.037935547385235094}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + ACS ) - FirstVNF_Mem ) ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - ( MUR + MUR ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010013612853193441}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) )", "choosing": "( ( CS / MLU ) * ( DS - ( ( RCSe - ( MUC / ( RMSe * CS ) ) ) * Max( ( CS + RRSe ),RRSe ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( Min( CRS ,MRS ) - ( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_RAM ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM - ( RRSe + MUM ) ) - DS ) )", "obj1": 0.9769874476987448, "obj2": 0.007967729879451244}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( CRS - ( Const - FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,RRSe ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9037656903765691, "obj2": 0.036802087008551074}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - Max( Max( ( ( RRS * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( CS ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9037656903765691, "obj2": 0.036802087008551074}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( Min( CS ,MLU ) * Min( ( MUC - CS ) ,( DS - MUM ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( Min( BR ,( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) ) / Max( Const,( ( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) * RRS ) + AMS ) ) )", "choosing": "( ( DS + MUR ) / ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) / Max( Const,( ( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) * RRS ) + AMS ) ) )", "choosing": "( ( DS + MUR ) / ( MUR + ( ( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) + RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) ) + ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + CRS ) - ( FirstVNF_CPU * ( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( Max( ( RMSe * MUR ),RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) / ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( RMSe + MUR ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( RRS * DDR ) ) / FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + ( CS * ( DS / Min( Min( MUM ,CS ) ,RMSe ) ) ) ) ,Max( ( Min( MLU ,Max( ( Min( MLU ,( CS * RCSe ) ) - Min( ( MUC + MUR ) ,( RMSe * MUC ) ) ),CS ) ) / MLU ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Max( Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( Min( MLU ,CS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ) ,( DS - RMSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( ( ( CS / MLU ) + MUR ) ,( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( Min( Min( ACS ,PN ) ,( Min( ACS ,FirstVNF_CPU ) + RRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( CS - RRSe ),RMSe ),( MLU * ( RRSe * Min( ( Min( Min( ( RCSe + MUC ) ,RRSe ) ,MUR ) + MUC ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) - Min( Max( Const,( Max( DDR,FirstVNF_RAM ) + MRS ) ) ,DDR ) )", "choosing": "Max( Max( RRSe,MUM ),( ( Min( MUM ,MUC ) / ( ( ( MUR / MUR ) + ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) - MUM ) ) * ( MUR * ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( CRS / ( Max( DDR,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) / ARS ) ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RRSe ),Max( MUM,Min( Min( MUC ,( MUR * RCSe ) ) ,Min( ( RCSe / ( ( CS - ( RCSe * RRSe ) ) / ( ( MUR * CS ) + CS ) ) ) ,( ( MUR - RCSe ) - ( ( RMSe - Max( CS,MUM ) ) - ( MUM - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( FirstVNF_Mem ,MDR ) - Const ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( BR - AMS ) )", "choosing": "( ( RCSe + ( MUC + RCSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - AMS )", "choosing": "( Max( RCSe,MUC ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,RRS ) ,( ACS + RRS ) ) - Max( MDR,BR ) )", "choosing": "Min( Max( MUR,RMSe ) ,Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( Min( ( MUC + MUR ) ,( RMSe * MUM ) ) - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Min( ( MUC + MUR ) ,( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( Max( ( MDR / Min( Max( BR,Const ) ,( FirstVNF_CPU - ( ACS - ACS ) ) ) ),ARS ) - ( Max( ( MDR / Min( Max( BR,Const ) ,( FirstVNF_CPU - ( ACS - ACS ) ) ) ),ARS ) - Min( ( ( MRS / Min( FirstVNF_RAM ,( Min( RRS ,MDR ) - FirstVNF_RAM_Server ) ) ) - ( ARS / MDR ) ) ,AMS ) ) )", "choosing": "Max( ( ( CS * CS ) - ( MLU / ( ( RCSe * MUC ) / ( ( Min( ( RMSe / MUM ) ,( RRSe * MUM ) ) + MUM ) - ( DS * CS ) ) ) ) ),Min( ( MLU * ( RMSe / Min( MUR ,MUR ) ) ) ,( RCSe * Max( MUC,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / Min( FirstVNF_RAM ,( ARS - FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem / ARS ) ) - Min( ( BR + ( MDR + DDR ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( CS / MUR ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,( ( ( Max( MUR,( MLU - RCSe ) ) / DS ) + ( ( ( MLU - MLU ) * RCSe ) - MUM ) ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,ARS ) - Min( ( ( MRS + Const ) - Max( FirstVNF_CPU_Server,PN ) ) ,AMS ) )", "choosing": "Max( Max( ( ( ( Max( MUR,( MLU - RCSe ) ) / DS ) + ( ( ( MLU - MLU ) * MUC ) - MLU ) ) / MUM ),CS ),( MUM * ( DS - MUR ) ) )", "obj1": 0.5794979079497908, "obj2": 0.30210980158811185}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - BR )", "choosing": "( ( CS - CS ) + Max( MUM,RRSe ) )", "obj1": 0.7301255230125523, "obj2": 0.14372869614797604}, {"determining": "Min( ( RRS / ( ARS / Const ) ) ,( ( FirstVNF_CPU_Server - Max( DDR,MDR ) ) / ( AMS + Max( DDR,( FirstVNF_Mem_Server + ( RRS - ( MDR / FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( Min( Min( ( Max( RRSe,( ( ( CS * MUC ) * RCSe ) / Max( MUM,Min( RMSe ,MUR ) ) ) ) * DS ) ,Min( MUM ,MUR ) ) ,Min( Max( MUR,MLU ) ,( CS * RCSe ) ) ) + Max( ( Min( CS ,MUC ) * ( CS + MUM ) ),( Min( RCSe ,( MUM * ( Max( RRSe,RMSe ) - MUM ) ) ) * Min( MUM ,RRSe ) ) ) )", "obj1": 0.6736401673640168, "obj2": 0.2248372434115607}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( RRSe - MUM ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6799163179916318, "obj2": 0.18112455112511247}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) ),Const ) )", "choosing": "( Min( CS ,MLU ) * ( ( MUC / ( RMSe * CS ) ) - MUM ) )", "obj1": 0.803347280334728, "obj2": 0.09353943548134079}, {"determining": "( Max( ACS,ARS ) - Min( ( BR + ( MDR + DDR ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( CS / MUR ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,( ( ( Max( MUR,( MLU - RCSe ) ) / DS ) + ( ( ( MLU - MLU ) * RCSe ) - MLU ) ) / MUM ) ) )", "obj1": 0.604602510460251, "obj2": 0.25123513626870875}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( MRS * AMS ) )", "choosing": "( ( MUM / RMSe ) / ( MUC + MLU ) )", "obj1": 0.7196652719665272, "obj2": 0.17148661208747504}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Const )", "choosing": "Min( ( Max( Max( Min( ( CS - MUC ) ,Max( MUM,MUR ) ),CS ),( MUM * RRSe ) ) - CS ) ,RRSe )", "obj1": 0.8096234309623431, "obj2": 0.08360482247007275}, {"determining": "Min( ( MDR / Min( ( ( ( MDR / ( ( RRS - PN ) - Const ) ) + Min( Max( ( RRS - MRS ),FirstVNF_RAM ) ,Min( ( BR / CRS ) ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( ( PN - PN ) + ( Max( FirstVNF_CPU_Server,PN ) + FirstVNF_Mem_Server ) ) ) ) ,Min( ( FirstVNF_RAM_Server + FirstVNF_RAM ) ,Max( ( PN - BR ),FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( MUC * MUC ),( ( MLU * ( DS * DS ) ) * Min( ( ( ( MUC + MUM ) + ( ( RCSe / MUM ) / ( RCSe + RRSe ) ) ) / RCSe ) ,Min( ( Min( RCSe ,DS ) - ( ( RCSe - DS ) * DS ) ) ,( Min( MUM ,MUR ) * RMSe ) ) ) ) ) ,( Min( MUR ,CS ) - Min( MUC ,( MUC * MUC ) ) ) )", "obj1": 0.6443514644351465, "obj2": 0.23957523804128683}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),Const ) )", "choosing": "Min( ( DS - CS ) ,( DS - MUM ) )", "obj1": 0.8284518828451883, "obj2": 0.07325934234676061}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,( ( ARS + RRS ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( DS + RCSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9267782426778243, "obj2": 0.025274136703824848}, {"determining": "( Max( ACS,ARS ) - Min( ( ( MRS / Min( FirstVNF_RAM ,( ARS - FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem / ( FirstVNF_Mem / ARS ) ) ) ,AMS ) )", "choosing": "Max( ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ),Min( ( ( DS + MUR ) * MLU ) ,( RCSe * Max( MUC,RRSe ) ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2837090992810069}, {"determining": "( Max( ACS,ARS ) - Min( ( ( MRS + Const ) - Max( FirstVNF_CPU_Server,PN ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( MUR / MLU ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,Min( RRSe ,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.24113553267491536}, {"determining": "( ( Const + ( Const + Const ) ) - ( Min( Const ,ACS ) - Max( ( ( ( FirstVNF_RAM_Server * BR ) * ( MDR / Min( MDR ,PN ) ) ) * CRS ),PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) - MUR ) ,( ( CS - CS ) - RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1754421978863713}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / ACS ),( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( RRS - FirstVNF_CPU ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.2955682288227359}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + ( FirstVNF_CPU * ACS ) ) )", "choosing": "Max( ( MUM / MUM ),( Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / RRSe ) ) / MUC ) )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 0.9476987447698745, "obj2": 0.024047315013994063}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( MRS + Min( FirstVNF_CPU_Server ,( ACS * MRS ) ) ) ) )", "choosing": "Min( ( MUR / Min( ( ( MUC * RMSe ) - ( CS * MUR ) ) ,RCSe ) ) ,RRSe )", "obj1": 0.8849372384937239, "obj2": 0.04585772630726425}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "Min( ( MDR / Min( ( ( ( MDR / ( ( RRS - PN ) - Const ) ) + Min( Max( ( RRS - MRS ),FirstVNF_RAM ) ,Min( ( BR / CRS ) ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( ( PN - PN ) + ( Max( FirstVNF_CPU_Server,PN ) + FirstVNF_Mem_Server ) ) ) ) ,Min( ( FirstVNF_RAM_Server + FirstVNF_RAM ) ,Max( ( PN - BR ),FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( MUC * MUC ),( ( MLU * ( DS * DS ) ) * Min( ( ( ( MUC + MUM ) + ( ( RCSe / MUM ) / ( RCSe + RRSe ) ) ) / RCSe ) ,Min( ( Min( RCSe ,DS ) - ( ( RCSe - DS ) * DS ) ) ,( Min( MUM ,MUR ) * RMSe ) ) ) ) ) ,( Min( MUR ,CS ) - Min( MUC ,( MUC * MUC ) ) ) )", "obj1": 0.6443514644351465, "obj2": 0.23957523804128683}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - MLU ) ,( DS - MUM ) )", "obj1": 0.8368200836820083, "obj2": 0.06891766679936634}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9644351464435147, "obj2": 0.018679079264793206}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Const,Const ) )", "choosing": "( ( RCSe / Min( ( MUC - CS ) ,( ( ( RCSe / MUM ) * ( CS / RMSe ) ) - MUM ) ) ) * ( CS / RMSe ) )", "obj1": 0.8744769874476988, "obj2": 0.0484753011978776}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8389121338912134, "obj2": 0.06086513711545202}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( DDR,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.8682008368200836, "obj2": 0.05240464319539439}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "( Min( ( MUM + DS ) ,CS ) * ( RRSe - MUM ) )", "obj1": 0.895397489539749, "obj2": 0.03974624407481127}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9811715481171548, "obj2": 0.007785921632958677}, {"determining": "( ( Const - DDR ) - Min( ( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( RRSe + RRSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9121338912133892, "obj2": 0.030131902617405823}, {"determining": "( ( ACS - FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Max( DS,( MUM - RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.002148769121987732}, {"determining": "Min( Max( ( BR - ARS ),AMS ) ,( AMS - PN ) )", "choosing": "( ( CS - CS ) + Min( ( Max( Max( MUM,CS ),( MUM * RRSe ) ) - CS ) ,RRSe ) )", "obj1": 0.5941422594142259, "obj2": 0.27410230478997444}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( CRS + FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( MUM + ( MUC + DS ) ) - ( DS * CS ) ) * ( Min( CS ,MLU ) * ( RRSe - MUM ) ) )", "obj1": 0.7071129707112971, "obj2": 0.17194046646647737}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8472803347280334, "obj2": 0.05791502830081089}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) )", "choosing": "( ( CS / MLU ) * ( DS - ( ( RCSe - ( MUC / ( RMSe * CS ) ) ) * Max( ( CS + RRSe ),RRSe ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( Max( ACS,ARS ) - Min( ( BR + ( MDR + DDR ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( CS / MUR ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,( ( ( Max( MUR,( MLU - RCSe ) ) / DS ) + ( ( ( MLU - MLU ) * RCSe ) - MLU ) ) / MUM ) ) )", "obj1": 0.6171548117154811, "obj2": 0.24113553267491536}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8514644351464435, "obj2": 0.05721152974399602}, {"determining": "( ( Const - DDR ) - Min( ( ( ARS / CRS ) + ( Const / AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( CS + CS ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,( RCSe - RCSe ) ) ) ) ) * DS ) ) ,( MUM + RMSe ) )", "obj1": 0.9079497907949791, "obj2": 0.034186413132941344}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( ( CS / RRSe ) - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.899581589958159, "obj2": 0.037935547385235094}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + ACS ) - FirstVNF_Mem ) ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - ( MUR + MUR ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010013612853193441}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( DS + RRSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.031048595148681826}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,RRSe ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9037656903765691, "obj2": 0.036802087008551074}, {"determining": "( Min( CRS ,MRS ) - ( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_RAM ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM - ( RRSe + MUM ) ) - DS ) )", "obj1": 0.9769874476987448, "obj2": 0.007967729879451244}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( CRS - ( Const - FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - Max( Max( ( ( RRS * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( CS ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9037656903765691, "obj2": 0.036802087008551074}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( Min( CS ,MLU ) * Min( ( MUC - CS ) ,( DS - MUM ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( Min( BR ,( ( ( RRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) / FirstVNF_RAM ) ) / Max( Const,( Min( MDR ,Max( ACS,FirstVNF_RAM ) ) + ( Min( ( ( ( RRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) / FirstVNF_RAM ) ,CRS ) - RRS ) ) ) )", "choosing": "( ( Max( DS,MUR ) / ( ( ( MUC * MUM ) - MUR ) / MUR ) ) / ( ( ( MUC * MUM ) - MUR ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) ) / Max( Const,( ( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) * RRS ) + AMS ) ) )", "choosing": "( ( DS + MUR ) / ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) / Max( Const,( ( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) * RRS ) + AMS ) ) )", "choosing": "( ( DS + MUR ) / ( MUR + ( ( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) + RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) ) + ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + CRS ) - ( FirstVNF_CPU * ( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( Max( ( RMSe * MUR ),RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) / ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( RMSe + MUR ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( RRS * DDR ) ) / FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + ( CS * ( DS / Min( Min( MUM ,CS ) ,RMSe ) ) ) ) ,Max( ( Min( MLU ,Max( ( Min( MLU ,( CS * RCSe ) ) - Min( ( MUC + MUR ) ,( RMSe * MUC ) ) ),CS ) ) / MLU ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Max( Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( Min( MLU ,CS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ) ,( DS - RMSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( ( ( CS / MLU ) + MUR ) ,( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( Min( Min( ACS ,PN ) ,( Min( ACS ,FirstVNF_CPU ) + RRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( CS - RRSe ),RMSe ),( MLU * ( RRSe * Min( ( Min( Min( ( RCSe + MUC ) ,RRSe ) ,MUR ) + MUC ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) - Min( Max( Const,( Max( DDR,FirstVNF_RAM ) + MRS ) ) ,DDR ) )", "choosing": "Max( Max( RRSe,MUM ),( ( Min( MUM ,MUC ) / ( ( ( MUR / MUR ) + ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) - MUM ) ) * ( MUR * ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( CRS / ( Max( DDR,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) / ARS ) ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RRSe ),Max( MUM,Min( Min( MUC ,( MUR * RCSe ) ) ,Min( ( RCSe / ( ( CS - ( RCSe * RRSe ) ) / ( ( MUR * CS ) + CS ) ) ) ,( ( MUR - RCSe ) - ( ( RMSe - Max( CS,MUM ) ) - ( MUM - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( FirstVNF_Mem ,MDR ) - Const ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( BR - AMS ) )", "choosing": "( ( RCSe + ( MUC + RCSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,DDR ) - AMS )", "choosing": "( Max( RCSe,MUC ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,RRS ) ,( ACS + RRS ) ) - Max( MDR,BR ) )", "choosing": "Min( Max( MUR,RMSe ) ,Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,Const ) ) )", "choosing": "Max( Min( MUM ,RRSe ),( ( DS - MUC ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( Max( ACS,ARS ) - Min( ( ( MRS + Const ) - Max( FirstVNF_CPU_Server,PN ) ) ,AMS ) )", "choosing": "Max( Max( ( ( ( Max( MUR,( MLU - RCSe ) ) / DS ) + ( ( ( MLU - MLU ) * MUC ) - MLU ) ) / MUM ),CS ),( MUM * ( DS - MUR ) ) )", "obj1": 0.5794979079497908, "obj2": 0.30210980158811185}, {"determining": "( Max( ( Max( ACS,FirstVNF_RAM ) / MDR ),ARS ) - ( Max( ( Max( ACS,FirstVNF_RAM ) / MDR ),ARS ) - Min( ( ( MRS / Min( FirstVNF_RAM ,( Min( RRS ,PN ) - FirstVNF_RAM_Server ) ) ) - ( ARS / MDR ) ) ,ACS ) ) )", "choosing": "Max( ( ( CS * CS ) - ( MLU / ( ( RCSe * MUC ) / ( ( Min( ( RMSe / RRSe ) ,( MUC * MLU ) ) + MUM ) - ( MUC * CS ) ) ) ) ),( ( DS - RMSe ) - Max( ( RRSe + MLU ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MDR / Min( Max( BR,Const ) ,( FirstVNF_CPU - ( ACS - ACS ) ) ) ),ARS ) - ( Max( ( MDR / Min( Max( BR,Const ) ,( FirstVNF_CPU - ( ACS - ACS ) ) ) ),ARS ) - Min( ( ( MRS / Min( FirstVNF_RAM ,( Min( RRS ,MDR ) - FirstVNF_RAM_Server ) ) ) - ( ARS / MDR ) ) ,AMS ) ) )", "choosing": "Max( ( ( CS * CS ) - ( MLU / ( ( RCSe * MUC ) / ( ( Min( ( RMSe / MUM ) ,( RRSe * MUM ) ) + MUM ) - ( DS * CS ) ) ) ) ),Min( ( MLU * ( RMSe / Min( MUR ,MUR ) ) ) ,( RCSe * Max( MUC,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,ARS ) - Min( ( ( MRS + Const ) - Max( FirstVNF_CPU_Server,PN ) ) ,AMS ) )", "choosing": "Max( Max( ( ( ( Max( MUR,( MLU - RCSe ) ) / DS ) + ( ( ( MLU - MLU ) * MUC ) - MLU ) ) / MUM ),CS ),( MUM * ( DS - MUR ) ) )", "obj1": 0.5794979079497908, "obj2": 0.30210980158811185}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - BR )", "choosing": "( ( CS - CS ) + Max( MUM,RRSe ) )", "obj1": 0.7301255230125523, "obj2": 0.14372869614797604}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "Min( ( MDR / Min( ( ( ( MDR / ( ( RRS - PN ) - Const ) ) + Min( Max( ( RRS - MRS ),FirstVNF_RAM ) ,Min( ( BR / CRS ) ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( ( PN - PN ) + ( Max( FirstVNF_CPU_Server,PN ) + FirstVNF_Mem_Server ) ) ) ) ,Min( ( FirstVNF_RAM_Server + FirstVNF_RAM ) ,Max( ( PN - BR ),FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * Max( CS,MLU ) ) * ( DS - Min( Min( MUR ,RRSe ) ,MUC ) ) )", "obj1": 0.6757322175732218, "obj2": 0.21640230612655162}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( RRSe - MUM ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 0.6799163179916318, "obj2": 0.18112455112511247}, {"determining": "( ( ( Const - FirstVNF_Mem ) - DDR ) - Min( ( ( ( CRS * RRS ) - FirstVNF_CPU_Server ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( CS - MLU ) * ( ( CS / RRSe ) + Max( MLU,Min( MUR ,MUR ) ) ) ) * CS ) ) ,( RMSe + MUM ) )", "obj1": 0.801255230125523, "obj2": 0.09722851201130794}, {"determining": "Min( ( MDR / Min( ( ( ( MDR / ( ( RRS - PN ) - Const ) ) + Min( Max( ( RRS - MRS ),FirstVNF_RAM ) ,Min( ( BR / CRS ) ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( ( PN - PN ) + ( Max( FirstVNF_CPU_Server,PN ) + FirstVNF_Mem_Server ) ) ) ) ,Min( ( FirstVNF_RAM_Server + DDR ) ,Max( ( PN - BR ),FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( MUC * MUC ),( ( MLU * ( DS * DS ) ) * Min( ( ( ( MUC + MUM ) + ( ( RCSe / MUM ) / ( RCSe + RRSe ) ) ) / RCSe ) ,Min( ( Min( RCSe ,DS ) - ( ( RCSe - DS ) * DS ) ) ,( Min( MUM ,MUR ) * RMSe ) ) ) ) ) ,( Min( MUR ,CS ) - Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ,( MUC * MUC ) ) ) )", "obj1": 0.6506276150627615, "obj2": 0.22360527562629764}, {"determining": "( Max( ACS,ARS ) - Min( ( BR + ( MDR + DDR ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( CS / MUR ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,( ( ( Max( MUR,( MLU - RCSe ) ) / DS ) + ( ( ( MLU - MLU ) * RCSe ) - MLU ) ) / MUM ) ) )", "obj1": 0.604602510460251, "obj2": 0.25123513626870875}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) + ( MRS * AMS ) )", "choosing": "( ( MUM / RMSe ) / ( MUC + MLU ) )", "obj1": 0.7196652719665272, "obj2": 0.17148661208747504}, {"determining": "Min( ( MDR / Min( ( ( ( MDR / ( ( RRS - PN ) - Const ) ) + Min( Max( ( RRS - MRS ),FirstVNF_RAM ) ,Min( ( BR / CRS ) ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( ( PN - PN ) + ( Max( FirstVNF_CPU_Server,PN ) + FirstVNF_Mem_Server ) ) ) ) ,CRS )", "choosing": "Min( Max( ( MUC * MUC ),( ( MLU * ( DS * DS ) ) * Min( ( ( ( MUC + MUM ) + ( ( RCSe / MUM ) / ( RCSe + RRSe ) ) ) / RCSe ) ,Min( ( Min( RCSe ,DS ) - ( ( RCSe - DS ) * DS ) ) ,( Min( MUM ,MUR ) * RMSe ) ) ) ) ) ,( Max( CS,MLU ) - Min( MUC ,( MUC * MUC ) ) ) )", "obj1": 0.6297071129707112, "obj2": 0.2364954111194108}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,( ( ARS + RRS ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( DS + RCSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9267782426778243, "obj2": 0.025274136703824848}, {"determining": "( Max( ACS,ARS ) - Min( ( ( MRS + Const ) - Min( FirstVNF_RAM ,( Min( RRS ,PN ) - FirstVNF_RAM_Server ) ) ) ,AMS ) )", "choosing": "Max( ( ( MLU / ( ( RCSe * MUC ) / ( ( Min( ( RMSe / RRSe ) ,( MUC * MUM ) ) + MUM ) - ( MUC * CS ) ) ) ) - ( ( ( MUR / MLU ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,Min( RRSe ,RMSe ) ) )", "obj1": 0.5920502092050209, "obj2": 0.2822976256388042}, {"determining": "Min( ( Max( ( FirstVNF_CPU_Server / ACS ),( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( Max( FirstVNF_CPU_Server,MRS ) ,( Const * ARS ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) / Max( FirstVNF_CPU_Server,( RRS - FirstVNF_CPU ) ) ) / Min( ( ARS * RRS ) ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RCSe - MUC ) ) * ( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) - ( DS * RMSe ) ) ) + ( Max( ( DS / RRSe ),Min( RRSe ,CS ) ) - ( ( MLU + DS ) - ( MUM + RCSe ) ) ) )", "obj1": 0.5815899581589958, "obj2": 0.2955682288227359}, {"determining": "( ( Const + ( Const + Const ) ) - ( Min( Const ,ACS ) - Max( ( ( ( FirstVNF_RAM_Server * BR ) * ( MDR / Min( MDR ,PN ) ) ) * CRS ),PN ) ) )", "choosing": "Min( ( ( MUC + MUR ) - MUR ) ,( ( CS - CS ) - RCSe ) )", "obj1": 0.7050209205020921, "obj2": 0.1754421978863713}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Const )", "choosing": "Min( ( Max( Max( Min( ( CS - MUC ) ,Max( MUM,MUR ) ),CS ),( MUM * RRSe ) ) - CS ) ,RRSe )", "obj1": 0.8096234309623431, "obj2": 0.08360482247007275}, {"determining": "( ( BR + FirstVNF_CPU ) / ( DDR + ( FirstVNF_CPU * ACS ) ) )", "choosing": "Max( ( MUM / MUM ),( Max( Min( ( RCSe * MUC ) ,Max( RRSe,RRSe ) ),( RRSe / RRSe ) ) / MUC ) )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - ( Min( FirstVNF_CPU_Server ,Max( ACS,RRS ) ) + ( MDR + DDR ) ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 0.8200836820083682, "obj2": 0.0774917721230592}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( MRS + Min( FirstVNF_CPU_Server ,( ACS * MRS ) ) ) ) )", "choosing": "Min( ( MUR / Min( ( ( MUC * RMSe ) - ( CS * MUR ) ) ,RCSe ) ) ,RRSe )", "obj1": 0.8849372384937239, "obj2": 0.04585772630726425}, {"determining": "( Max( ( ( RRS + FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,Max( ARS,Min( FirstVNF_Mem_Server ,BR ) ) ) ),( ( FirstVNF_RAM / RRS ) + ( PN + FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_CPU_Server * AMS ) * ( DDR * BR ) ) + ( ( Const * FirstVNF_CPU ) - ( MDR * ARS ) ) ) )", "choosing": "( ( ( MUR - ( MUR / ( MUM + Max( ( RRSe + DS ),RRSe ) ) ) ) * MUR ) - Max( RCSe,RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.1339270513481803}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),Const ) )", "choosing": "Min( ( DS - CS ) ,( DS - MUM ) )", "obj1": 0.8284518828451883, "obj2": 0.07325934234676061}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - MLU ) ,( DS - MUM ) )", "obj1": 0.8368200836820083, "obj2": 0.06891766679936634}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Max( Max( MUM,CS ),( MUM * RRSe ) )", "obj1": 0.9476987447698745, "obj2": 0.024047315013994063}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) ),Const ) )", "choosing": "( Min( CS ,MLU ) * ( ( MUC / ( RMSe * CS ) ) - MUM ) )", "obj1": 0.803347280334728, "obj2": 0.09353943548134079}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9644351464435147, "obj2": 0.018679079264793206}, {"determining": "( Max( ACS,ARS ) - Min( ( BR + ( MDR + DDR ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( CS / MUR ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,( ( ( Max( MUR,( MLU - RCSe ) ) / DS ) + ( ( ( MLU - MLU ) * RCSe ) - MLU ) ) / MUM ) ) )", "obj1": 0.6171548117154811, "obj2": 0.24113553267491536}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( Const,Const ) )", "choosing": "( ( RCSe / Min( ( MUC - CS ) ,( ( ( RCSe / MUM ) * ( CS / RMSe ) ) - MUM ) ) ) * ( CS / RMSe ) )", "obj1": 0.8744769874476988, "obj2": 0.0484753011978776}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8389121338912134, "obj2": 0.06086513711545202}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( DDR,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.8682008368200836, "obj2": 0.05240464319539439}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "( Min( ( MUM + DS ) ,CS ) * ( RRSe - MUM ) )", "obj1": 0.895397489539749, "obj2": 0.03974624407481127}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RRSe / RRSe ) )", "obj1": 0.9811715481171548, "obj2": 0.007785921632958677}, {"determining": "( ( Const - DDR ) - Min( ( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( RRSe + RRSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9121338912133892, "obj2": 0.030131902617405823}, {"determining": "( ( ACS - FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Max( DS,( MUM - RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.002148769121987732}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - ( ( CRS + FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( MUM + ( MUC + DS ) ) - ( DS * CS ) ) * ( Min( CS ,MLU ) * ( RRSe - MUM ) ) )", "obj1": 0.7071129707112971, "obj2": 0.17194046646647737}, {"determining": "( Max( ACS,ARS ) - Min( ( ( MRS + Const ) - Max( FirstVNF_CPU_Server,PN ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( MUR / MLU ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,Min( RRSe ,RMSe ) ) )", "obj1": 0.6171548117154811, "obj2": 0.24113553267491536}, {"determining": "Min( Max( ( BR - ARS ),AMS ) ,( AMS - PN ) )", "choosing": "( ( CS - CS ) + Min( ( Max( Max( MUM,CS ),( MUM * RRSe ) ) - CS ) ,RRSe ) )", "obj1": 0.5941422594142259, "obj2": 0.27410230478997444}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( Min( ( MUC - CS ) ,RRSe ) - CS ) ,RRSe )", "obj1": 0.8472803347280334, "obj2": 0.05791502830081089}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8514644351464435, "obj2": 0.05721152974399602}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) ),( MDR - ARS ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( ( Const - DDR ) - Min( ( ( ARS / CRS ) + ( Const / AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( CS + CS ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,( RCSe - RCSe ) ) ) ) ) * DS ) ) ,( MUM + RMSe ) )", "obj1": 0.9079497907949791, "obj2": 0.034186413132941344}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( ( CS / RRSe ) - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.899581589958159, "obj2": 0.037935547385235094}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + ACS ) - FirstVNF_Mem ) ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - ( MUR + MUR ) ) )", "obj1": 0.9686192468619247, "obj2": 0.010013612853193441}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Min( Max( ( MUC * MUC ),( ( MLU * ( DS * DS ) ) * Min( ( ( ( MUC + MUM ) + ( ( RCSe / MUM ) / ( RCSe + RRSe ) ) ) / RCSe ) ,Min( ( Min( RCSe ,DS ) - ( ( RCSe - DS ) * DS ) ) ,( Min( MUM ,MUR ) * RMSe ) ) ) ) ) ,( Min( MUR ,CS ) - Min( MUC ,( MUC * MUC ) ) ) )", "obj1": 0.9518828451882845, "obj2": 0.023643791020222685}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - PN ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( Min( CS ,( ( ( DS + RRSe ) * MUC ) * MUM ) ) * ( ( MUC / RRSe ) + Max( MUM,Min( MUR ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9100418410041841, "obj2": 0.031048595148681826}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( MDR,Const ) )", "choosing": "Min( ( MUC - CS ) ,RRSe )", "obj1": 0.8577405857740585, "obj2": 0.054935152883416605}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ) - Max( Max( ( FirstVNF_RAM + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( MUR ,RRSe ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9037656903765691, "obj2": 0.036802087008551074}, {"determining": "( Min( CRS ,MRS ) - ( Min( FirstVNF_RAM_Server ,CRS ) * FirstVNF_RAM ) )", "choosing": "Min( ( MUC - CS ) ,( ( MUM - ( RRSe + MUM ) ) - DS ) )", "obj1": 0.9769874476987448, "obj2": 0.007967729879451244}, {"determining": "( Min( MRS ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( MUM / RMSe ) / RCSe )", "obj1": 0.5983263598326359, "obj2": 0.2734010470857487}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( CRS - ( Const - FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,MLU ) * ( DS - MUM ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( ( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM - AMS ) ) - Max( ( BR - CRS ),Min( FirstVNF_Mem_Server ,Const ) ) ) - ( Max( ( MDR - AMS ),Min( Const ,FirstVNF_Mem_Server ) ) / ( ( Const * AMS ) / ( MDR + MDR ) ) ) )", "choosing": "Min( Max( ( Max( MUM,RCSe ) / Min( RRSe ,RRSe ) ),Min( Min( DS ,MUR ) ,( RRSe - MUR ) ) ) ,( Max( ( RMSe * RRSe ),Max( MUM,MUM ) ) * ( ( MUM + RMSe ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.99581589958159, "obj2": 0.0015385817067507432}, {"determining": "( ( Const - DDR ) - Min( ( ( FirstVNF_CPU_Server - ( CRS * RRS ) ) - Max( Max( ( ( RRS * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + FirstVNF_Mem ),FirstVNF_RAM_Server ),AMS ) ) ,MRS ) )", "choosing": "Min( ( MUC - ( ( ( MUR - MLU ) * ( ( CS / RRSe ) + Max( MUM,Min( CS ,MUR ) ) ) ) * RMSe ) ) ,( MUM - RMSe ) )", "obj1": 0.9037656903765691, "obj2": 0.036802087008551074}, {"determining": "Max( ( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem_Server,Const ) ),( ( ACS + BR ) - ARS ) )", "choosing": "( ( CS / MLU ) * ( DS - ( ( RCSe - ( MUC / ( RMSe * CS ) ) ) * Max( ( CS + RRSe ),RRSe ) ) ) )", "obj1": 0.9539748953974896, "obj2": 0.020797620794373434}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( Min( CS ,MLU ) * Min( ( MUC - CS ) ,( DS - MUM ) ) )", "obj1": 0.9748953974895398, "obj2": 0.00850048226730105}, {"determining": "( Min( ( PN * FirstVNF_CPU ) ,Min( FirstVNF_RAM_Server ,MDR ) ) - ( Max( BR,BR ) - FirstVNF_RAM ) )", "choosing": "( ( RCSe + DS ) - ( RMSe + ( ( Min( ( MUC + RCSe ) ,CS ) + ( DS + ( RCSe + MUC ) ) ) + ( ( DS / ( DS - MUC ) ) / MUC ) ) ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( ( PN * FirstVNF_CPU ) / Min( MDR ,FirstVNF_RAM_Server ) ) - Min( Max( MDR,RRS ) ,Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( RCSe + RRSe ) - ( ( RCSe - RMSe ) + CS ) )", "obj1": 0.997907949790795, "obj2": 0.0007275156806679675}, {"determining": "( ( FirstVNF_Mem_Server - DDR ) - Max( FirstVNF_Mem,Const ) )", "choosing": "( Min( CS ,MLU ) * ( RRSe - MUM ) )", "obj1": 0.9665271966527197, "obj2": 0.010684291012473795}, {"determining": "( ( ( MRS / Min( FirstVNF_RAM ,( ARS - FirstVNF_RAM_Server ) ) ) - ( FirstVNF_Mem / ARS ) ) - Min( ( BR + ( MDR + DDR ) ) ,AMS ) )", "choosing": "Max( ( ( MUC * CS ) - ( ( ( CS / MUR ) / ( ( ( ( RMSe / RRSe ) + RRSe ) + MUM ) - ( DS * CS ) ) ) * MLU ) ),Min( ( ( DS + MUR ) * MLU ) ,( ( ( Max( MUR,( MLU - RCSe ) ) / DS ) + ( ( ( MLU - MLU ) * RCSe ) - MUM ) ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( ( RRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) / FirstVNF_RAM ) ) / Max( Const,( Min( MDR ,Max( ACS,FirstVNF_RAM ) ) + ( Min( ( ( ( RRS - FirstVNF_CPU ) - ( FirstVNF_Mem_Server - MRS ) ) / FirstVNF_RAM ) ,CRS ) - RRS ) ) ) )", "choosing": "( ( Max( DS,MUR ) / ( ( ( MUC * MUM ) - MUR ) / MUR ) ) / ( ( ( MUC * MUM ) - MUR ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) ) / Max( Const,( ( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) * RRS ) + AMS ) ) )", "choosing": "( ( DS + MUR ) / ( ( Max( RMSe,RRSe ) + RMSe ) + ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) / Max( Const,( ( Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) * RRS ) + AMS ) ) )", "choosing": "( ( DS + MUR ) / ( MUR + ( ( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) + RMSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / Min( ( ( ( FirstVNF_Mem_Server - MRS ) - ( FirstVNF_CPU / RRS ) ) / FirstVNF_RAM ) ,CRS ) ) + ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( ( Max( RMSe,RRSe ) + RMSe ) - MUR ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + CRS ) - ( FirstVNF_CPU * ( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server + BR ) ) ) )", "choosing": "( Max( ( RMSe * MUR ),RRSe ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( Min( ( MLU * Max( MUM,( MUM + MUR ) ) ) ,( RMSe * MUR ) ) / ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) / Min( BR ,( FirstVNF_Mem + CRS ) ) )", "choosing": "( ( RMSe + MUR ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( RRS * DDR ) ) / FirstVNF_CPU_Server ) * Max( RRS,FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem,ARS ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + ( CS * ( DS / Min( Min( MUM ,CS ) ,RMSe ) ) ) ) ,Max( ( Min( MLU ,Max( ( Min( MLU ,( CS * RCSe ) ) - Min( ( MUC + MUR ) ,( RMSe * MUC ) ) ),CS ) ) / MLU ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / CRS ) + ( Const / AMS ) ) - BR ) - ( PN + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( MUM,RRSe ),( ( RRSe * ( RCSe - RCSe ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - Max( BR,Max( DDR,( FirstVNF_RAM_Server * PN ) ) ) ) + ( MRS * AMS ) )", "choosing": "Min( ( RRSe - RCSe ) ,( Min( ( MUR - Max( MUR,CS ) ) ,( MUC + DS ) ) - Min( MLU ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ( Const - MRS ) ) + FirstVNF_RAM ) * ( ( ( ( CRS + FirstVNF_CPU_Server ) + ( MRS / FirstVNF_CPU_Server ) ) - ARS ) / MDR ) )", "choosing": "( Min( MUR ,RRSe ) * ( CS / Max( ( Max( RRSe,( MUC * RMSe ) ) * RRSe ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - PN ) - Min( ( FirstVNF_CPU / ( ( FirstVNF_Mem + Min( FirstVNF_RAM ,AMS ) ) + ACS ) ) ,ARS ) )", "choosing": "Min( Min( Max( ( DS - DS ),DS ) ,RMSe ) ,( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,BR ) ,( DDR - ACS ) )", "choosing": "( ( MUM * DS ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( FirstVNF_RAM + BR ) ) * ( Const + CRS ) )", "choosing": "( Max( ( RCSe - MUC ),( RMSe + MLU ) ) / ( Max( RCSe,CS ) / ( MLU - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem ) / FirstVNF_CPU_Server ) - ( FirstVNF_CPU + ACS ) ) / ( ( CRS * DDR ) * ( BR - CRS ) ) )", "choosing": "( ( MLU / ( ( ( MUR * MLU ) * ( Max( Max( ( RCSe * CS ),MUC ),( ( MUR / RCSe ) - RRSe ) ) - ( ( ( RMSe - RRSe ) - Min( MUR ,MUR ) ) + DS ) ) ) * RMSe ) ) * Max( Max( MUM,CS ),( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server - ( FirstVNF_Mem + ( ARS - FirstVNF_CPU ) ) ),ARS ) - ( FirstVNF_Mem_Server + MRS ) )", "choosing": "( Max( ( MLU * MUM ),RMSe ) + ( ( DS - MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) * Min( ( BR + MRS ) ,( BR - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RMSe ,CS ),( MUC / MUM ) ) + ( Max( RCSe,CS ) / Min( ( MUC + ( RMSe + MUM ) ) ,Min( ( Min( MLU ,MLU ) / MUM ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS * PN ) ,( MDR / FirstVNF_Mem ) ) - Min( ( CRS + DDR ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / CS ) / RCSe ) * ( Min( MUC ,RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / MDR ) * ( FirstVNF_Mem_Server * CRS ) ) + ( ( PN * FirstVNF_CPU_Server ) * ( ACS * DDR ) ) ) / Min( ( ( MRS - FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Min( ( DDR - AMS ) ,Max( ACS,ACS ) ) ) )", "choosing": "( ( RRSe - MLU ) * Max( MLU,( MUR - ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( CRS ,ARS ) + ( PN - FirstVNF_Mem ) ) ,( ( BR + MDR ) * Max( PN,Const ) ) ) - Min( ( ( RRS - RRS ) / Min( Const ,MDR ) ) ,( ( FirstVNF_CPU_Server * BR ) + ( FirstVNF_RAM_Server - RRS ) ) ) )", "choosing": "Max( ( MUM - ( RMSe * ( MUM + DS ) ) ),( RMSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) + Min( AMS ,AMS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( ARS + FirstVNF_CPU_Server ) ) ) + ( ( ( MDR * ACS ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( RRS ,FirstVNF_Mem_Server ) + ( BR - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( DS + RRSe ) + Max( MUC,MUC ) ) + Max( ( MUM / MUC ),( RCSe + MUR ) ) ) ,Min( ( ( MUC - RRSe ) / ( CS / MLU ) ) ,( Min( CS ,DS ) - ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Const ) - DDR ) / ( BR / ( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * ( Min( BR ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( ( MUM * ( RRSe - ( MUM - Max( RRSe,Min( ( MUR + RRSe ) ,( MUM + RMSe ) ) ) ) ) ) ,( ( MUM * RCSe ) + RCSe ) ) / ( MUM + ( ( RMSe / DS ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( ACS * BR ) - ( RRS + FirstVNF_Mem_Server ) ) - Max( ( MDR / FirstVNF_CPU_Server ),( MRS / PN ) ) ),( ( ( FirstVNF_RAM / FirstVNF_RAM ) - ( DDR + FirstVNF_Mem_Server ) ) * ( ( ACS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + MLU ) - ( MLU / RMSe ) ) - ( ( CS * MUR ) / ( MLU + MUR ) ) ) * ( Max( Min( MUC ,RRSe ),Max( RCSe,RMSe ) ) + ( Max( MLU,RCSe ) * Max( MUR,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * PN ) - ( Const * ACS ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,( RMSe - RRSe ) ),Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) + ( DDR * DDR ) ) - ( ( BR * AMS ) - Min( PN ,AMS ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_Mem ) + Max( Const,FirstVNF_Mem_Server ) ) + ( Min( CRS ,AMS ) / Min( ARS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe + MUC ) - Min( RCSe ,MUM ) ) - ( Max( MUR,MUR ) * ( MLU + MUM ) ) ) * ( Min( ( MUC / MLU ) ,( CS * MUC ) ) / Max( ( MUM + MUC ),( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) - ( Max( AMS,FirstVNF_CPU ) / Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,Min( CS ,RMSe ) ) - Max( ( MUR / MUC ),Min( RCSe ,MUC ) ) ) * ( Max( ( RMSe + DS ),RCSe ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,Const ) ) * ( ( BR - FirstVNF_CPU ) - Min( Const ,FirstVNF_CPU ) ) ) ,( Min( Max( Const,Const ) ,( DDR + ARS ) ) - ( ( CRS + FirstVNF_Mem ) / Min( BR ,DDR ) ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MUM / ( RRSe + DS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Const ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) - ( Min( ACS ,FirstVNF_CPU ) + ( CRS + DDR ) ) ) * ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem ) ) - Min( ( ACS * FirstVNF_CPU ) ,( Const / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( CS ,MUM ),( Max( DS,Min( MUC ,MUM ) ) * Min( ( DS * CS ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( Min( FirstVNF_RAM ,AMS ) ,FirstVNF_RAM_Server ) ) - ( DDR + Const ) )", "choosing": "Max( Min( ( ( ( MLU + ( DS + RRSe ) ) - DS ) - ( Min( MLU ,CS ) - ( RMSe + ( MLU + ( Max( MLU,RRSe ) - Max( RRSe,MUM ) ) ) ) ) ) ,( DS - RMSe ) ),( MUM * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * DDR ) - Min( FirstVNF_CPU_Server ,Const ) )", "choosing": "Min( ( ( CS / MLU ) + MUR ) ,( MUM - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ARS ) - ( Min( Min( ACS ,PN ) ,( Min( ACS ,FirstVNF_CPU ) + RRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( CS - RRSe ),RMSe ),( MLU * ( RRSe * Min( ( Min( Min( ( RCSe + MUC ) ,RRSe ) ,MUR ) + MUC ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU ) - Min( Max( Const,( Max( DDR,FirstVNF_RAM ) + MRS ) ) ,DDR ) )", "choosing": "Max( Max( RRSe,MUM ),( ( Min( MUM ,MUC ) / ( ( ( MUR / MUR ) + ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) - MUM ) ) * ( MUR * ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( CRS / ( Max( DDR,( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - PN ) / ARS ) ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) - Max( Max( FirstVNF_CPU,FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RRSe ),Max( MUM,Min( Min( MUC ,( MUR * RCSe ) ) ,Min( ( RCSe / ( ( CS - ( RCSe * RRSe ) ) / ( ( MUR * CS ) + CS ) ) ) ,( ( MUR - RCSe ) - ( ( RMSe - Max( CS,MUM ) ) - ( MUM - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( Min( FirstVNF_Mem ,MDR ) - Const ) )", "choosing": "Min( ( MUC - ( ( ( ( RRSe + RRSe ) / RMSe ) * MUM ) + ( CS - ( DS * ( CS + Min( ( CS * RRSe ) ,Min( MUR ,MUC ) ) ) ) ) ) ) ,( ( ( ( CS * RRSe ) - ( Min( ( ( MUM - MUM ) / Max( MUM,RCSe ) ) ,( MUC / RCSe ) ) * Max( ( MUM / RRSe ),RRSe ) ) ) * Max( CS,RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( RCSe + DS ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( MRS - AMS ) )", "choosing": "( ( MUM / RMSe ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) * ( BR - AMS ) )", "choosing": "( ( RCSe + ( MUC + RCSe ) ) * Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ACS ) * ( Max( PN,FirstVNF_CPU_Server ) - AMS ) )", "choosing": "( ( RCSe + DS ) * ( ( MUC / Max( MUM,MUR ) ) / ( Max( ( ( Max( DS,( MUC / MLU ) ) + ( ( RCSe - RRSe ) * RCSe ) ) / MUR ),DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}]}