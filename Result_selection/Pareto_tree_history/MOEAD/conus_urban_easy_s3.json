{"1": [{"determining": "( ( FirstVNF_RAM * PN ) - ( MRS / ACS ) )", "choosing": "( ( RRSe / RRSe ) - ( DS - MLU ) )", "obj1": 0.049429657794676805, "obj2": 0.811698356327531}, {"determining": "( ( ( ( RRS - MDR ) - Min( FirstVNF_RAM ,DDR ) ) + ( Max( MRS,BR ) / ( AMS / MDR ) ) ) / ( Max( ( FirstVNF_CPU / ARS ),Min( FirstVNF_Mem ,CRS ) ) - Min( ( FirstVNF_Mem + RRS ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( DS * MUR ) * ( DS + Max( RMSe,CS ) ) ) / ( RMSe - RMSe ) )", "obj1": 0.5760456273764258, "obj2": 0.3532425197527175}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),( FirstVNF_RAM - ACS ) )", "choosing": "( ( DS * MUC ) / ( CS - RCSe ) )", "obj1": 0.15779467680608364, "obj2": 0.7103356092544294}, {"determining": "( ( ( ( Max( ARS,DDR ) * Min( AMS ,Min( ARS ,( FirstVNF_CPU + ARS ) ) ) ) / BR ) + FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( ( Max( RMSe,( Max( MUC,MUM ) * Max( ( MUC + MUR ),CS ) ) ) - MUC ) / RRSe ) * ( Max( DS,( Max( MLU,RRSe ) / ( RCSe / ( RMSe / ( CS + RRSe ) ) ) ) ) / ( ( Min( Min( ( MUM / RMSe ) ,( MUR / MUM ) ) ,MUC ) * DS ) + ( RRSe / MUC ) ) ) ) + Max( ( ( Min( ( Max( ( DS / RMSe ),MUR ) - CS ) ,CS ) - RRSe ) * RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) )", "choosing": "( Max( DS,MUM ) * ( RCSe - DS ) )", "obj1": 0.6083650190114068, "obj2": 0.3110148753233487}, {"determining": "Max( ( ARS / AMS ),( BR + ARS ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( MUR ,RRSe ) )", "obj1": 0.34220532319391633, "obj2": 0.5694150976556538}, {"determining": "( Max( ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM_Server,( ( DDR - Const ) / ( CRS + PN ) ) ) ) / ( MDR * CRS ) ),FirstVNF_RAM_Server ) - Min( Max( BR,( ( ARS + FirstVNF_Mem_Server ) / PN ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC / Min( DS ,( ( Min( MUC ,( ( MUC * RCSe ) + RCSe ) ) * ( RMSe * ( ( MUR + MUR ) * ( MLU - MUC ) ) ) ) - ( RRSe / MUM ) ) ) ),( Min( RMSe ,MUM ) + ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "Min( ( DS / ( MLU + RRSe ) ) ,Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - RRS ) * Max( PN,RRS ) ) + Max( Max( Min( MRS ,( Const / FirstVNF_Mem_Server ) ),RRS ),CRS ) ) - Max( ( Const / RRS ),( ARS + FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - MUR ) ,( Min( CS ,Max( Min( RRSe ,Max( DS,MUR ) ),( MLU - ( MLU - RRSe ) ) ) ) / ( ( ( MUR / ( CS * Min( Min( MLU ,MUM ) ,( CS + RCSe ) ) ) ) - ( MUC + MLU ) ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Const,Const ),Min( BR ,FirstVNF_CPU ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.5874524714828897, "obj2": 0.3109167570921027}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / ( ( MDR * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( ( MUR * ( CS + RMSe ) ) / MUC ),CS ) )", "obj1": 0.3688212927756654, "obj2": 0.5319779424192883}, {"determining": "Min( ( ( FirstVNF_RAM - ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / ACS ) ) - ( ( ( Const + MDR ) + Max( Const,ACS ) ) * ( FirstVNF_Mem * Const ) ) ) ) / ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( MLU - Min( ( MUM + MUR ) ,MUR ) ) * DS ) ,( DS + ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU + MDR ) ,ARS ) / ( FirstVNF_CPU_Server / PN ) )", "choosing": "( ( MLU / RRSe ) / ( MUM / MLU ) )", "obj1": 0.2338403041825095, "obj2": 0.6949784611121721}, {"determining": "Max( ( MDR * FirstVNF_Mem ),( CRS * FirstVNF_CPU ) )", "choosing": "( ( CS * MUR ) / ( DS * RRSe ) )", "obj1": 0.04182509505703422, "obj2": 0.8542958730885548}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM ) / Max( MRS,FirstVNF_Mem ) )", "choosing": "( Max( RRSe,DS ) * ( RMSe + CS ) )", "obj1": 0.3231939163498099, "obj2": 0.6174312540989321}, {"determining": "Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( RMSe + MUM ) / ( MUR / MUM ) )", "obj1": 0.9220532319391636, "obj2": 0.05491747372224139}, {"determining": "Min( ( FirstVNF_RAM + ACS ) ,( PN - PN ) )", "choosing": "Min( ( MUC * MUM ) ,( MLU / RMSe ) )", "obj1": 0.3288973384030418, "obj2": 0.5738760164213773}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( PN ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / ( MUR + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( CRS - FirstVNF_Mem_Server ) + RRS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( RCSe,DS ) * Min( RCSe ,MLU ) ) - ( ( MUM * MLU ) / ( RCSe + RMSe ) ) )", "obj1": 0.27756653992395436, "obj2": 0.6155134232595987}, {"determining": "( ( PN / Max( MRS,AMS ) ) / Min( Min( FirstVNF_RAM_Server ,MDR ) ,PN ) )", "choosing": "( Max( ( CS + MUC ),Min( DS ,MUR ) ) - Min( ( DS / MLU ) ,( MUR - RMSe ) ) )", "obj1": 0.3060836501901141, "obj2": 0.6626236722548389}, {"determining": "( Max( ( FirstVNF_CPU + MDR ),( AMS - MRS ) ) + Max( ( MDR - PN ),Max( PN,PN ) ) )", "choosing": "( ( ( MUR * MUC ) / ( RCSe - MUM ) ) + ( ( DS * CS ) + ( MUR + MUC ) ) )", "obj1": 0.27566539923954375, "obj2": 0.6407690149952193}, {"determining": "Max( ( ( ARS - RRS ) - Min( RRS ,RRS ) ),( Min( CRS ,FirstVNF_RAM ) / Min( FirstVNF_CPU ,AMS ) ) )", "choosing": "Max( ( ( DS - MUR ) - ( RMSe / MUR ) ),Min( ( MLU - RRSe ) ,( MUM + RCSe ) ) )", "obj1": 0.18250950570342206, "obj2": 0.7675063137937481}, {"determining": "Min( Min( CRS ,FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "Max( Min( CS ,MUR ),( RMSe - MUR ) )", "obj1": 0.2889733840304182, "obj2": 0.6519514588145541}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) - ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,MRS ) ) )", "choosing": "( ( RCSe - MUM ) * Min( MUC ,( MUC + Max( ( ( MUM - RMSe ) - DS ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_Mem_Server ,ARS ),Max( MDR,RRS ) )", "choosing": "( ( ( RMSe * DS ) * ( RMSe / RMSe ) ) / Max( ( MLU - MUR ),Min( DS ,RCSe ) ) )", "obj1": 0.344106463878327, "obj2": 0.5677196038228189}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) * Max( DDR,FirstVNF_CPU_Server ) ) ,Max( ( BR - PN ),( CRS / AMS ) ) )", "choosing": "( ( ( MUM - RMSe ) + ( MUC + RCSe ) ) - Max( ( RMSe + RCSe ),Min( MUM ,DS ) ) )", "obj1": 0.21482889733840305, "obj2": 0.7130297101782922}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,RRS ) ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUR / MLU ) ,( RCSe / RMSe ) ) * ( RCSe + DS ) )", "obj1": 0.44106463878326996, "obj2": 0.4616062261467951}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( Max( Min( DDR ,FirstVNF_CPU ),( Min( PN ,FirstVNF_RAM ) - AMS ) ),FirstVNF_Mem ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.24334600760456274, "obj2": 0.6210291157726496}, {"determining": "Min( ( Min( MRS ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server - RRS ) ) ,( Min( RRS ,BR ) * ( FirstVNF_CPU_Server / PN ) ) )", "choosing": "Min( Max( ( DS * DS ),( RRSe + MUR ) ) ,( Min( CS ,MUR ) * Min( RRSe ,MUR ) ) )", "obj1": 0.2889733840304182, "obj2": 0.6418122408220895}, {"determining": "( ( PN / ARS ) - Min( Max( Max( ( ( MRS - ACS ) + AMS ),PN ),DDR ) ,( Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) * ACS ) ) )", "choosing": "( ( Max( RMSe,( MUC + CS ) ) * MUM ) - Min( ( CS * MUM ) ,( RMSe - RRSe ) ) )", "obj1": 0.1806083650190114, "obj2": 0.7318782731473974}, {"determining": "( Max( FirstVNF_RAM,( PN / ARS ) ) * Max( ( MDR - AMS ),FirstVNF_CPU ) )", "choosing": "Max( Max( ( ( MUR - DS ) * CS ),MUC ),Max( RMSe,MLU ) )", "obj1": 0.23954372623574144, "obj2": 0.6730902152067914}, {"determining": "( ( Max( Const,DDR ) / ( CRS / Const ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUR - ( ( ( ( RMSe / RCSe ) - ( Max( MUC,MUR ) + RCSe ) ) / ( CS - Min( MLU ,RCSe ) ) ) / RMSe ) ) * RRSe ),( DS + MUC ) )", "obj1": 0.6844106463878327, "obj2": 0.2586359555751544}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,RRS ) )", "choosing": "( ( RCSe / RCSe ) * ( DS / ( MUM + MLU ) ) )", "obj1": 0.5228136882129277, "obj2": 0.4143127008541648}, {"determining": "Max( Max( CRS,DDR ),Min( RRS ,AMS ) )", "choosing": "Min( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( ( RCSe - CS ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ) ) ) ,( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.3231939163498099, "obj2": 0.5819357703802639}, {"determining": "( ( FirstVNF_RAM - ( DDR / PN ) ) - Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( MLU / MUC ) ,Min( RCSe ,CS ) ),( Min( RMSe ,MUM ) * ( RMSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,Max( RCSe,( ( MUM / CS ) + ( MUM + Max( MLU,RMSe ) ) ) ) ) * ( MLU + RRSe ) ) - ( ( MUR / MUM ) * ( MUR + RMSe ) ) ),Min( ( ( RRSe - MUR ) + ( RCSe + RMSe ) ) ,( Min( MUM ,RCSe ) + Min( MUM ,MUM ) ) ) )", "obj1": 0.188212927756654, "obj2": 0.714746574083571}, {"determining": "( ( Max( DDR,( FirstVNF_CPU_Server / ( MRS + CRS ) ) ) + ( BR + ( ( ( BR / FirstVNF_CPU_Server ) - ( CRS - FirstVNF_Mem ) ) + FirstVNF_RAM ) ) ) * ( CRS * ( FirstVNF_RAM + MRS ) ) )", "choosing": "( ( ( ( RMSe * Max( ( MUR - ( ( DS * MLU ) + RRSe ) ),MLU ) ) / DS ) + MUM ) - ( ( CS / MUM ) * ( CS - RRSe ) ) )", "obj1": 0.051330798479087454, "obj2": 0.8091541512551516}, {"determining": "( ( ( ( BR + CRS ) * ( DDR + MDR ) ) / ( ( DDR * FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) + ( ( Min( FirstVNF_RAM ,MDR ) * ( FirstVNF_RAM_Server - AMS ) ) * ( Max( ACS,ACS ) + ( FirstVNF_Mem_Server * RRS ) ) ) )", "choosing": "( ( ( ( CS / CS ) * ( MUM + DS ) ) * ( ( MUM / MUC ) * ( CS + MLU ) ) ) + ( Max( ( MUC * DS ),( CS + RRSe ) ) / ( Min( RRSe ,RMSe ) * ( CS + RRSe ) ) ) )", "obj1": 0.4790874524714829, "obj2": 0.5232701104783685}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( ( PN - FirstVNF_RAM ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( Max( MUR,Max( ( MUM - RCSe ),RMSe ) ) * ( MUC - Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - RRS ) ,( Max( FirstVNF_RAM,FirstVNF_Mem ) - Min( ( MDR * FirstVNF_RAM ) ,( FirstVNF_RAM_Server + BR ) ) ) )", "choosing": "( ( MUR * RMSe ) * ( CS + ( ( RMSe + CS ) - RRSe ) ) )", "obj1": 0.311787072243346, "obj2": 0.6322596079566333}, {"determining": "( ( ( ( FirstVNF_RAM - ACS ) - ( ARS / ACS ) ) / ( ( FirstVNF_RAM_Server / CRS ) / ( Const * RRS ) ) ) - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( PN / ARS ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) + Max( ( RMSe - RCSe ),Min( MUM ,MUC ) ) ) / Min( ( ( DS / RRSe ) / Max( MUR,MUM ) ) ,( ( RRSe * DS ) + ( RCSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4614221279234265}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( FirstVNF_Mem_Server / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( DS,MLU ) * ( MUM - RCSe ) ) + ( ( RCSe + MUC ) * Max( MUR,RMSe ) ) ) + Min( ( ( RCSe - RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.23106084485905767}, {"determining": "Min( ( ( CRS / Min( ( BR / FirstVNF_Mem ) ,( FirstVNF_RAM + ( MRS * Max( Min( CRS ,FirstVNF_CPU_Server ),RRS ) ) ) ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( ( Min( RRS ,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - MDR ) ) )", "choosing": "( ( ( MUM * ( MUM / ( ( Min( ( RMSe * CS ) ,RCSe ) / RCSe ) + DS ) ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( ( MUC * RMSe ) + Min( DS ,MUR ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8070923275952272}, {"determining": "( ( CRS / ( FirstVNF_Mem + ( FirstVNF_Mem * BR ) ) ) / ( FirstVNF_RAM_Server * ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS + DS ) + ( MUM - DS ) ) - Max( Max( CS,CS ),Max( MUC,RMSe ) ) ) * ( ( Max( RCSe,CS ) * Min( MUM ,MUM ) ) - ( ( MLU + MUM ) - ( DS * MUR ) ) ) )", "obj1": 0.26996197718631176, "obj2": 0.561596873084036}, {"determining": "( Min( ACS ,FirstVNF_RAM ) * ( DDR / ( Const + DDR ) ) )", "choosing": "Min( ( Max( MLU,( RRSe * MLU ) ) - MUM ) ,Max( MUR,( ( DS - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.7516230870423684}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem_Server ) ,Max( PN,FirstVNF_CPU ) ) - ( ( BR * FirstVNF_CPU_Server ) * ( Max( MRS,FirstVNF_Mem ) - ACS ) ) ) * ( ( Max( AMS,FirstVNF_Mem_Server ) / ( ACS * FirstVNF_CPU ) ) * Min( ( ACS + FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / Min( ( RMSe * MLU ) ,( RRSe * MUC ) ) ) + Max( CS,MLU ) )", "obj1": 0.16730038022813687, "obj2": 0.7709191424364987}, {"determining": "( ( BR - MRS ) * Min( DDR ,FirstVNF_Mem ) )", "choosing": "( ( ( ( MLU + MLU ) / Max( RRSe,MUM ) ) + ( ( MUM / DS ) * ( MUR - MUC ) ) ) + ( Max( ( MUR + RCSe ),Max( MUC,MUR ) ) + Min( Max( RRSe,MUM ) ,( MLU + MUR ) ) ) )", "obj1": 0.5494296577946768, "obj2": 0.3764214644948335}, {"determining": "( ( ( Max( DDR,FirstVNF_RAM_Server ) + AMS ) + FirstVNF_CPU ) - Max( BR,FirstVNF_Mem ) )", "choosing": "( ( Max( MUM,RMSe ) / ( MLU / ( MUM + CS ) ) ) / ( RMSe / MUM ) )", "obj1": 0.20532319391634982, "obj2": 0.7202729756952647}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}], "2": [{"determining": "( ( ( ( FirstVNF_RAM - ACS ) - ( ARS / ACS ) ) / ( ( FirstVNF_RAM_Server / CRS ) / ( Const * RRS ) ) ) - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( PN / ARS ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) + Max( ( RMSe - RCSe ),Min( MUM ,MUC ) ) ) / Min( ( ( DS / RRSe ) / Max( MUR,MUM ) ) ,( ( RRSe * DS ) + ( RCSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ARS,DDR ) * Min( AMS ,Min( ARS ,( FirstVNF_CPU + ARS ) ) ) ) / BR ) + FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( ( Max( RMSe,( Max( MUC,MUM ) * Max( ( MUC + MUR ),CS ) ) ) - MUC ) / RRSe ) * ( Max( DS,( Max( MLU,RRSe ) / ( RCSe / ( RMSe / ( CS + RRSe ) ) ) ) ) / ( ( Min( Min( ( MUM / RMSe ) ,( MUR / MUM ) ) ,MUC ) * DS ) + ( RRSe / MUC ) ) ) ) + Max( ( ( Min( ( Max( ( DS / RMSe ),MUR ) - CS ) ,CS ) - RRSe ) * RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem_Server ) ,Max( PN,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - ACS ) * ( BR * FirstVNF_CPU_Server ) ) ) * ( ( Max( AMS,FirstVNF_Mem_Server ) / ( ACS * FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / DS ) + Min( CS ,( RCSe / ( MUR / MUC ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.8162203111211502}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( FirstVNF_Mem_Server / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( DS,MLU ) * ( MUM - RCSe ) ) + ( ( RCSe + MUC ) * Max( MUR,RMSe ) ) ) + Min( ( ( RCSe - RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.23106084485905767}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) / ( PN / FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,RRSe ) - Max( MUC,CS ) )", "obj1": 0.38593155893536124, "obj2": 0.500384329249212}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,BR )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + MLU )", "obj1": 0.17680608365019013, "obj2": 0.5907362604672509}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) - Min( Min( ( Min( MRS ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server - RRS ) ) ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( MUC ,( Min( CS ,MUR ) * Min( RRSe ,MUR ) ) ) )", "obj1": 0.5228136882129277, "obj2": 0.29732695517128277}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( ( BR - PN ),( CRS / AMS ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - Max( ( RMSe + RCSe ),Min( MUM ,DS ) ) )", "obj1": 0.23574144486692014, "obj2": 0.5701226953864453}, {"determining": "( ( Max( Const,DDR ) / ( CRS / Const ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUR - ( ( ( ( RMSe / RCSe ) - ( Max( MUC,MUR ) + RCSe ) ) / ( CS - Min( MLU ,RCSe ) ) ) / RMSe ) ) * RRSe ),( DS + MUC ) )", "obj1": 0.6844106463878327, "obj2": 0.2586359555751544}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( ( CRS * ( FirstVNF_RAM + ARS ) ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( MUR * ( MUC - Max( DS,DS ) ) )", "obj1": 0.5133079847908745, "obj2": 0.34407687654267}, {"determining": "Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - PN ) )", "choosing": "( ( MLU / RMSe ) / ( MUR / MUM ) )", "obj1": 0.17490494296577946, "obj2": 0.6940415910395388}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) * Max( ( MDR - AMS ),FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR - RCSe ) * RRSe ),( DS + MUC ) )", "obj1": 0.5019011406844106, "obj2": 0.41887723387361814}, {"determining": "Max( ( ARS / Max( MDR,Const ) ),( BR + ARS ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( ( RCSe - DS ) ,RRSe ) )", "obj1": 0.11787072243346007, "obj2": 0.7570952691555247}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "Max( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,RRS ) ),Min( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ,Min( ACS ,MDR ) ) )", "choosing": "( MLU * ( RCSe + DS ) )", "obj1": 0.5076045627376425, "obj2": 0.410046729663054}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * Max( ( MDR - AMS ),FirstVNF_CPU ) ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( MLU,( DS + MUC ) )", "obj1": 0.8916349809885932, "obj2": 0.06361680995025513}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),FirstVNF_Mem )", "choosing": "( DS / ( CS - RCSe ) )", "obj1": 0.155893536121673, "obj2": 0.7119305177800417}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "Max( ( ACS * FirstVNF_Mem ),Min( BR ,FirstVNF_CPU ) )", "choosing": "( ( MLU * DS ) / MUC )", "obj1": 0.41064638783269963, "obj2": 0.4739659122370392}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( Const,DDR ) )", "choosing": "( ( RCSe / ( ( RMSe / RCSe ) - ( Max( MUC,MUR ) + RCSe ) ) ) * ( DS / ( MUM + MLU ) ) )", "obj1": 0.053231939163498096, "obj2": 0.8053417318186105}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / DDR ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),( DS + Max( RMSe,CS ) ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0004328161082602283}, {"determining": "Max( Min( FirstVNF_Mem_Server ,ARS ),Min( PN ,MDR ) )", "choosing": "( ( ( RMSe * ( RCSe * MUM ) ) * ( RMSe / RMSe ) ) / Max( ( MLU - MUR ),Min( DS ,RCSe ) ) )", "obj1": 0.09505703422053231, "obj2": 0.7691592412879239}, {"determining": "Min( Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) ) ,( PN - PN ) )", "choosing": "Min( ( MUM * MUM ) ,( MLU / RMSe ) )", "obj1": 0.9315589353612167, "obj2": 0.04419455296380953}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) / ( ACS * ARS ) )", "choosing": "( ( MLU / RRSe ) / ( MUC - MUM ) )", "obj1": 0.1634980988593156, "obj2": 0.7001198409238156}, {"determining": "Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) )", "choosing": "Min( ( MUC * MUM ) ,( MLU / RMSe ) )", "obj1": 0.9315589353612167, "obj2": 0.04419455296380953}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4614221279234265}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,Max( FirstVNF_Mem,BR ) )", "choosing": "( ( Min( MLU ,MUR ) + ( MUM + RMSe ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04182509505703422, "obj2": 0.8108122794616253}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4614221279234265}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),( FirstVNF_RAM - ACS ) )", "choosing": "( ( DS * MUC ) / ( CS - RCSe ) )", "obj1": 0.15779467680608364, "obj2": 0.7103356092544294}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8070923275952272}, {"determining": "Min( ( ( CRS / Min( ( BR / FirstVNF_Mem ) ,( FirstVNF_RAM + ( MRS * Max( Min( CRS ,FirstVNF_CPU_Server ),RRS ) ) ) ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( ( Min( RRS ,FirstVNF_Mem ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - MDR ) ) )", "choosing": "( ( ( MUM * ( MUM / ( ( Min( ( RMSe * CS ) ,RCSe ) / RCSe ) + DS ) ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( ( MUC * RMSe ) + Min( DS ,MUR ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8070923275952272}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),( FirstVNF_RAM - ACS ) )", "choosing": "( ( DS * MUC ) / ( CS - RCSe ) )", "obj1": 0.15779467680608364, "obj2": 0.7103356092544294}, {"determining": "( Max( ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM_Server,( ( DDR - Const ) / ( CRS + PN ) ) ) ) / ( MDR * CRS ) ),FirstVNF_RAM_Server ) - Min( Max( BR,( ( ARS + FirstVNF_Mem_Server ) / PN ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC / Min( DS ,( ( Min( MUC ,( ( MUC * RCSe ) + RCSe ) ) * ( RMSe * ( ( MUR + MUR ) * ( MLU - MUC ) ) ) ) - ( RRSe / MUM ) ) ) ),( Min( RMSe ,MUM ) + ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "Min( ( DS / ( MLU + RRSe ) ) ,Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - RRS ) * Max( PN,RRS ) ) + Max( Max( Min( MRS ,( Const / FirstVNF_Mem_Server ) ),RRS ),CRS ) ) - Max( ( Const / RRS ),( ARS + FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - MUR ) ,( Min( CS ,Max( Min( RRSe ,Max( DS,MUR ) ),( MLU - ( MLU - RRSe ) ) ) ) / ( ( ( MUR / ( CS * Min( Min( MLU ,MUM ) ,( CS + RCSe ) ) ) ) - ( MUC + MLU ) ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / ACS ) ) - ( ( ( Const + MDR ) + Max( Const,ACS ) ) * ( FirstVNF_Mem * Const ) ) ) ) / ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( MLU - Min( ( MUM + MUR ) ,MUR ) ) * DS ) ,( DS + ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( PN ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / ( MUR + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) - ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,MRS ) ) )", "choosing": "( ( RCSe - MUM ) * Min( MUC ,( MUC + Max( ( ( MUM - RMSe ) - DS ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( DDR / PN ) ) - Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( ( MLU / MUC ) ,Min( RCSe ,CS ) ),( Min( RMSe ,MUM ) * ( RMSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( ( PN - FirstVNF_RAM ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( Max( MUR,Max( ( MUM - RCSe ),RMSe ) ) * ( MUC - Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - ACS ) - ( ARS / ACS ) ) / ( ( FirstVNF_RAM_Server / CRS ) / ( Const * RRS ) ) ) - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( PN / ARS ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) + Max( ( RMSe - RCSe ),Min( MUM ,MUC ) ) ) / Min( ( ( DS / RRSe ) / Max( MUR,MUM ) ) ,( ( RRSe * DS ) + ( RCSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( AMS * Min( Const ,MRS ) ) ) - ( MRS - Max( Min( ( ( MRS - PN ) - PN ) ,( PN / RRS ) ),Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( DS / RCSe ) * ( ( ( ( RMSe / MUC ) - ( RRSe + RCSe ) ) * MUR ) / ( MUC * ( ( RMSe * DS ) * RMSe ) ) ) ) + RRSe ) / ( ( MUR / ( Min( ( MUC + CS ) ,Min( ( MUC / MUC ) ,MUR ) ) - ( ( CS * ( RCSe / RRSe ) ) + MUM ) ) ) - ( ( MLU + ( CS * Max( CS,Min( CS ,DS ) ) ) ) * Max( MUC,CS ) ) ) ) * ( ( MUM - MUR ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem + PN ) / ( ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,FirstVNF_Mem ) - RRS ) / ARS ) ) - FirstVNF_CPU ) - ( ( Min( Min( ARS ,CRS ) ,( ( ACS - CRS ) * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) / ( FirstVNF_RAM_Server - Min( MRS ,ACS ) ) ) + CRS ) )", "choosing": "Max( ( ( ( Max( MLU,Max( ( MUC - RRSe ),( ( RCSe + CS ) + MLU ) ) ) - ( Max( RCSe,CS ) - ( ( ( CS * RRSe ) - ( MUM / RRSe ) ) + ( MUM - MLU ) ) ) ) + ( DS - RRSe ) ) + ( MUM / MUM ) ),( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_CPU ) - ( Max( ( AMS - ( Min( FirstVNF_Mem ,Min( FirstVNF_CPU_Server ,ACS ) ) + PN ) ),Const ) - FirstVNF_Mem ) )", "choosing": "Max( Max( CS,Min( RCSe ,( Min( RCSe ,MUM ) * MUC ) ) ),Min( RMSe ,( ( ( Min( MLU ,Min( ( RRSe * CS ) ,MUR ) ) / DS ) / CS ) - ( DS / ( MUM + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( DDR / AMS ) - ( FirstVNF_Mem + ACS ) )", "choosing": "Min( ( Max( ( DS + MUC ),MUC ) - MUC ) ,Min( MLU ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - ACS ) - ( ARS / ACS ) ) / ( ( FirstVNF_RAM_Server / CRS ) / ( Const * RRS ) ) ) - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( PN / ARS ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) + Max( ( RMSe - RCSe ),Min( MUM ,MUC ) ) ) / Min( ( ( DS / RRSe ) / Max( MUR,MUM ) ) ,( ( RRSe * DS ) + ( RCSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) - ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( MUC - ( RCSe + DS ) ) ,Min( MLU ,MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8311147135188085}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( FirstVNF_Mem_Server / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( DS,MLU ) * ( MUM - RCSe ) ) + ( ( RCSe + MUC ) * Max( MUR,RMSe ) ) ) + Min( ( ( RCSe - RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.23106084485905767}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( ( ( PN + FirstVNF_RAM ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( PN + ( Max( CRS,BR ) * ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU + RRSe ) ) - ( ( MUR + RMSe ) * ( MUR / MUM ) ) ),( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) )", "obj1": 0.47338403041825095, "obj2": 0.3805044609949992}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,BR )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + MLU )", "obj1": 0.17680608365019013, "obj2": 0.5907362604672509}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) - Min( Min( ( Min( MRS ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server - RRS ) ) ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( MUC ,( Min( CS ,MUR ) * Min( RRSe ,MUR ) ) ) )", "obj1": 0.5228136882129277, "obj2": 0.29732695517128277}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( ( BR - PN ),( CRS / AMS ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - Max( ( RMSe + RCSe ),Min( MUM ,DS ) ) )", "obj1": 0.23574144486692014, "obj2": 0.5701226953864453}, {"determining": "Max( ( FirstVNF_Mem / CRS ),Min( RRS ,Max( PN,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) ,( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.344106463878327, "obj2": 0.4857837442328317}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( ( CRS * ( FirstVNF_RAM + ARS ) ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( MUR * ( MUC - Max( DS,DS ) ) )", "obj1": 0.5133079847908745, "obj2": 0.34407687654267}, {"determining": "Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - PN ) )", "choosing": "( ( MLU / RMSe ) / ( MUR / MUM ) )", "obj1": 0.17490494296577946, "obj2": 0.6940415910395388}, {"determining": "Max( ( ACS * FirstVNF_Mem ),Min( BR ,FirstVNF_CPU ) )", "choosing": "( ( MLU * DS ) / MUC )", "obj1": 0.41064638783269963, "obj2": 0.4739659122370392}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * Max( ( MDR - AMS ),FirstVNF_CPU ) ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( MLU,( DS + MUC ) )", "obj1": 0.8916349809885932, "obj2": 0.06361680995025513}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "Max( ( ARS / Max( MDR,Const ) ),( BR + ARS ) )", "choosing": "Min( ( MUC * RCSe ) ,Min( ( RCSe - DS ) ,RRSe ) )", "obj1": 0.11787072243346007, "obj2": 0.7570952691555247}, {"determining": "( Max( FirstVNF_RAM,( MDR * ( ( ( ( Max( MDR,Const ) - PN ) - ARS ) + FirstVNF_Mem_Server ) * Const ) ) ) - Max( Min( FirstVNF_CPU_Server ,CRS ),Max( ( ARS / AMS ),Const ) ) )", "choosing": "Min( ( ( RRSe * RCSe ) * CS ) ,Max( RRSe,CS ) )", "obj1": 0.13878326996197718, "obj2": 0.7285971767387968}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( Max( Const,DDR ) / ( CRS / Const ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUR - ( ( ( ( RMSe / RCSe ) - ( Max( MUC,MUR ) + RCSe ) ) / ( CS - Min( MLU ,RCSe ) ) ) / RMSe ) ) * RRSe ),( DS + MUC ) )", "obj1": 0.6844106463878327, "obj2": 0.2586359555751544}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( MLU + ( RCSe * RCSe ) ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.252471908760652}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,DDR ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( RRSe - ( RCSe - RMSe ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.8025883925508273}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / DDR ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),( DS + Max( RMSe,CS ) ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0004328161082602283}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2889733840304182, "obj2": 0.4964239435822284}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ACS + CRS ) ) - Min( ( RRS - DDR ) ,Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( Max( DS,Max( ( CS / CS ),Min( RMSe ,MUC ) ) ) * Min( ( RCSe + DS ) ,( MUR - RCSe ) ) )", "obj1": 0.9467680608365019, "obj2": 0.03742368037117619}, {"determining": "Max( Max( CRS,DDR ),Min( RRS ,AMS ) )", "choosing": "Max( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( ( CS - RCSe ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ) ) ),( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5149921066824843}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),FirstVNF_Mem )", "choosing": "( DS / ( CS - RCSe ) )", "obj1": 0.155893536121673, "obj2": 0.7119305177800417}, {"determining": "Max( Min( FirstVNF_Mem_Server ,ARS ),Min( PN ,MDR ) )", "choosing": "( ( ( RMSe * ( RCSe * MUM ) ) * ( RMSe / RMSe ) ) / Max( ( MLU - MUR ),Min( DS ,RCSe ) ) )", "obj1": 0.09505703422053231, "obj2": 0.7691592412879239}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( DDR - ( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( DDR - AMS ) ) ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + ( RRSe + MUC ) ) ) )", "obj1": 0.28517110266159695, "obj2": 0.4976283784221895}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem_Server ) ,Max( PN,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - ACS ) * ( BR * FirstVNF_CPU_Server ) ) ) * ( ( Max( AMS,FirstVNF_Mem_Server ) / ( ACS * FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / DS ) + Min( CS ,( RCSe / ( MUR / MUC ) ) ) )", "obj1": 0.03802281368821293, "obj2": 0.8162203111211502}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) )", "choosing": "Min( ( MUC * MUM ) ,( MLU / RMSe ) )", "obj1": 0.9315589353612167, "obj2": 0.04419455296380953}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) / ( ACS * ARS ) )", "choosing": "( ( MLU / RRSe ) / ( MUC - MUM ) )", "obj1": 0.1634980988593156, "obj2": 0.7001198409238156}, {"determining": "Min( Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) ) ,( PN - PN ) )", "choosing": "Min( ( MUM * MUM ) ,( MLU / RMSe ) )", "obj1": 0.9315589353612167, "obj2": 0.04419455296380953}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4614221279234265}, {"determining": "( Min( ACS ,FirstVNF_RAM ) * ( CRS / BR ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.8053375573682642}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Max( MLU,( RRSe * MLU ) ) - MUM ) ,Max( MUR,( ( RMSe - MUC ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.15779467680608364, "obj2": 0.7012196840653908}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( FirstVNF_Mem + ACS ) )", "choosing": "( ( Max( ( MUC / DS ),MUR ) + MUM ) - DS )", "obj1": 0.039923954372623575, "obj2": 0.8100128380649823}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4614221279234265}, {"determining": "( ( ( ( MDR - RRS ) * Max( PN,RRS ) ) + Max( Max( Min( MRS ,( Const / FirstVNF_Mem_Server ) ),RRS ),CRS ) ) - Max( ( Const / RRS ),( ARS + FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - MUR ) ,( Min( CS ,Max( Min( RRSe ,Max( DS,MUR ) ),( MLU - ( MLU - RRSe ) ) ) ) / ( ( ( MUR / ( CS * Min( Min( MLU ,MUM ) ,( CS + RCSe ) ) ) ) - ( MUC + MLU ) ) - DS ) ) )", "obj1": 0.2889733840304182, "obj2": 0.4964239435822284}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),( DDR - AMS ) ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * Max( ( DS + MUC ),RRSe ) ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.25475285171102663, "obj2": 0.5153784455414769}, {"determining": "( ( ( ( Max( ARS,DDR ) * Min( AMS ,Min( ARS ,( FirstVNF_CPU + ARS ) ) ) ) / BR ) + FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( ( Max( RMSe,( Max( MUC,MUM ) * Max( ( MUC + MUR ),CS ) ) ) - MUC ) / RRSe ) * ( Max( DS,( Max( MLU,RRSe ) / ( RCSe / ( RMSe / ( CS + RRSe ) ) ) ) ) / ( ( Min( Min( ( MUM / RMSe ) ,( MUR / MUM ) ) ,MUC ) * DS ) + ( RRSe / MUC ) ) ) ) + Max( ( ( Min( ( Max( ( DS / RMSe ),MUR ) - CS ) ,CS ) - RRSe ) * RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM_Server,( ( DDR - Const ) / ( CRS + PN ) ) ) ) / ( MDR * CRS ) ),FirstVNF_RAM_Server ) - Min( Max( BR,( ( ARS + FirstVNF_Mem_Server ) / PN ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC / Min( DS ,( ( Min( MUC ,( ( MUC * RCSe ) + RCSe ) ) * ( RMSe * ( ( MUR + MUR ) * ( MLU - MUC ) ) ) ) - ( RRSe / MUM ) ) ) ),( Min( RMSe ,MUM ) + ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "Min( ( DS / ( MLU + RRSe ) ) ,Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - RRS ) * Max( PN,RRS ) ) + Max( Max( Min( MRS ,( Const / FirstVNF_Mem_Server ) ),RRS ),CRS ) ) - Max( ( Const / RRS ),( ARS + FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - MUR ) ,( Min( CS ,Max( Min( RRSe ,Max( DS,MUR ) ),( MLU - ( MLU - RRSe ) ) ) ) / ( ( ( MUR / ( CS * Min( Min( MLU ,MUM ) ,( CS + RCSe ) ) ) ) - ( MUC + MLU ) ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM - ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / ACS ) ) - ( ( ( Const + MDR ) + Max( Const,ACS ) ) * ( FirstVNF_Mem * Const ) ) ) ) / ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( MLU - Min( ( MUM + MUR ) ,MUR ) ) * DS ) ,( DS + ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( PN ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / ( MUR + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,AMS ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( Max( RRSe,MUC ) ,Max( MLU,( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / AMS ) - ( FirstVNF_Mem + ACS ) )", "choosing": "Min( ( Max( ( DS + MUC ),MUC ) - MUC ) ,Min( MLU ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) - ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( MUC - ( RCSe + DS ) ) ,Min( MLU ,MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8311147135188085}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( FirstVNF_Mem_Server / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( DS,MLU ) * ( MUM - RCSe ) ) + ( ( RCSe + MUC ) * Max( MUR,RMSe ) ) ) + Min( ( ( RCSe - RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.23106084485905767}, {"determining": "( ( Const - FirstVNF_CPU ) - CRS )", "choosing": "Max( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ),Min( RMSe ,MUC ) )", "obj1": 0.8269961977186312, "obj2": 0.11833016717674295}, {"determining": "( ( ( ( PN + FirstVNF_RAM ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( PN + ( Max( CRS,BR ) * ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU + RRSe ) ) - ( ( MUR + RMSe ) * ( MUR / MUM ) ) ),( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) )", "obj1": 0.47338403041825095, "obj2": 0.3805044609949992}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,BR )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + MLU )", "obj1": 0.17680608365019013, "obj2": 0.5907362604672509}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) - Min( Min( ( Min( MRS ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server - RRS ) ) ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( MUC ,( Min( CS ,MUR ) * Min( RRSe ,MUR ) ) ) )", "obj1": 0.5228136882129277, "obj2": 0.29732695517128277}, {"determining": "Max( Max( CRS,DDR ),( FirstVNF_RAM + PN ) )", "choosing": "Min( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( MUM / CS ) ) ) ) ) ,( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.34220532319391633, "obj2": 0.46581314915539046}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( ( BR - PN ),( CRS / AMS ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - Max( ( RMSe + RCSe ),Min( MUM ,DS ) ) )", "obj1": 0.23574144486692014, "obj2": 0.5701226953864453}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( ( CRS * ( FirstVNF_RAM + ARS ) ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( MUR * ( MUC - Max( DS,DS ) ) )", "obj1": 0.5133079847908745, "obj2": 0.34407687654267}, {"determining": "Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - PN ) )", "choosing": "( ( MLU / RMSe ) / ( MUR / MUM ) )", "obj1": 0.17490494296577946, "obj2": 0.6940415910395388}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * Max( ( MDR - AMS ),FirstVNF_CPU ) ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( MLU,( DS + MUC ) )", "obj1": 0.8916349809885932, "obj2": 0.06361680995025513}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( Max( MUR,MUM ) * ( RCSe - DS ) ) ,Min( MLU ,MUR ) )", "obj1": 0.11406844106463879, "obj2": 0.7475495535611503}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4614221279234265}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( ( Max( Const,DDR ) / ( CRS / Const ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUR - ( ( ( ( RMSe / RCSe ) - ( Max( MUC,MUR ) + RCSe ) ) / ( CS - Min( MLU ,RCSe ) ) ) / RMSe ) ) * RRSe ),( DS + MUC ) )", "obj1": 0.6844106463878327, "obj2": 0.2586359555751544}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( MLU + ( RCSe * RCSe ) ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.252471908760652}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM_Server ) + ( MDR - Const ) ) - AMS ) + ( BR / FirstVNF_Mem ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( DS * MUC ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.9942965779467681, "obj2": 0.007954412409896099}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - MDR )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( ( CS - MUC ) * ( DS * RMSe ) ) ,( RRSe + MUC ) ) )", "obj1": 0.2832699619771863, "obj2": 0.494211431217695}, {"determining": "Max( Min( FirstVNF_Mem_Server ,ARS ),Min( PN ,MDR ) )", "choosing": "( ( ( RMSe * ( RCSe * MUM ) ) * ( RMSe / RMSe ) ) / Max( ( MLU - MUR ),Min( DS ,RCSe ) ) )", "obj1": 0.09505703422053231, "obj2": 0.7691592412879239}, {"determining": "Max( Max( CRS,DDR ),Min( RRS ,AMS ) )", "choosing": "Max( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( ( CS - RCSe ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ) ) ),( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5149921066824843}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ACS + CRS ) ) - Min( ( RRS - DDR ) ,Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( Max( DS,Max( ( CS / CS ),Min( RMSe ,MUC ) ) ) * Min( ( RCSe + DS ) ,( MUR - RCSe ) ) )", "obj1": 0.9467680608365019, "obj2": 0.03742368037117619}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),FirstVNF_Mem )", "choosing": "( DS / ( CS - RCSe ) )", "obj1": 0.155893536121673, "obj2": 0.7119305177800417}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( MUR,MUM ) * ( RCSe - DS ) ) ,Min( MLU ,Max( MLU,( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.1482889733840304, "obj2": 0.7256433576045296}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.8160772529149644}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( CRS * ( FirstVNF_RAM + ARS ) ) )", "choosing": "Min( ( Max( MUR,MUM ) * ( RCSe - DS ) ) ,Min( MLU ,MUR ) )", "obj1": 0.13878326996197718, "obj2": 0.7285971767387968}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,DDR ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( RRSe - ( RCSe - RMSe ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.8025883925508273}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "( Max( FirstVNF_RAM,( MDR * ( ( ( ( Max( MDR,Const ) - PN ) - ARS ) + FirstVNF_Mem_Server ) * Const ) ) ) - Max( Min( FirstVNF_CPU_Server ,CRS ),Max( ( ARS / AMS ),Const ) ) )", "choosing": "Min( ( ( RRSe * RCSe ) * CS ) ,Max( RRSe,CS ) )", "obj1": 0.13878326996197718, "obj2": 0.7285971767387968}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "Min( Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) ) ,( PN - PN ) )", "choosing": "Min( ( MUM * MUM ) ,( MLU / RMSe ) )", "obj1": 0.9315589353612167, "obj2": 0.04419455296380953}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( FirstVNF_Mem + ACS ) )", "choosing": "( ( Max( ( MUC / DS ),MUR ) + MUM ) - DS )", "obj1": 0.039923954372623575, "obj2": 0.8100128380649823}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) / ( ACS * ARS ) )", "choosing": "( ( MLU / RRSe ) / ( MUC - MUM ) )", "obj1": 0.1634980988593156, "obj2": 0.7001198409238156}, {"determining": "Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) )", "choosing": "Min( ( MUC * MUM ) ,( MLU / RMSe ) )", "obj1": 0.9315589353612167, "obj2": 0.04419455296380953}, {"determining": "( Min( ACS ,FirstVNF_RAM ) * ( CRS / BR ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.8053375573682642}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Max( MLU,( RRSe * MLU ) ) - MUM ) ,Max( MUR,( ( RMSe - MUC ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.15779467680608364, "obj2": 0.7012196840653908}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / DDR ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),( DS + Max( RMSe,CS ) ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0004328161082602283}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4614221279234265}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),( DDR - AMS ) ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * Max( ( DS + MUC ),RRSe ) ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.25475285171102663, "obj2": 0.5153784455414769}, {"determining": "( ( ( ( FirstVNF_RAM - ACS ) - ( ARS / ACS ) ) / ( ( FirstVNF_RAM_Server / CRS ) / ( Const * RRS ) ) ) - Min( ( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_RAM_Server - DDR ) ) ,( Min( CRS ,FirstVNF_RAM ) + ( PN / ARS ) ) ) )", "choosing": "( ( ( ( MUM / RMSe ) * ( MUR - RCSe ) ) + Max( ( RMSe - RCSe ),Min( MUM ,MUC ) ) ) / Min( ( ( DS / RRSe ) / Max( MUR,MUM ) ) ,( ( RRSe * DS ) + ( RCSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( ARS,DDR ) * Min( AMS ,Min( ARS ,( FirstVNF_CPU + ARS ) ) ) ) / BR ) + FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( ( Max( RMSe,( Max( MUC,MUM ) * Max( ( MUC + MUR ),CS ) ) ) - MUC ) / RRSe ) * ( Max( DS,( Max( MLU,RRSe ) / ( RCSe / ( RMSe / ( CS + RRSe ) ) ) ) ) / ( ( Min( Min( ( MUM / RMSe ) ,( MUR / MUM ) ) ,MUC ) * DS ) + ( RRSe / MUC ) ) ) ) + Max( ( ( Min( ( Max( ( DS / RMSe ),MUR ) - CS ) ,CS ) - RRSe ) * RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,AMS ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( Max( RRSe,MUC ) ,Max( MLU,( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,AMS ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( Max( RRSe,MUC ) ,Max( MLU,( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) - ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( MUC - ( RCSe + DS ) ) ,Min( MLU ,MUR ) )", "obj1": 0.028517110266159697, "obj2": 0.8311147135188085}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( FirstVNF_Mem_Server / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( DS,MLU ) * ( MUM - RCSe ) ) + ( ( RCSe + MUC ) * Max( MUR,RMSe ) ) ) + Min( ( ( RCSe - RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.23106084485905767}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) - Min( Min( ( Min( MRS ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server - RRS ) ) ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( MUC ,( Min( CS ,MUR ) * Min( RRSe ,MUR ) ) ) )", "obj1": 0.5228136882129277, "obj2": 0.29732695517128277}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + CRS ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( Max( MLU,( RRSe * MLU ) ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.14068441064638784, "obj2": 0.6510298373111272}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,BR )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + MLU )", "obj1": 0.17680608365019013, "obj2": 0.5907362604672509}, {"determining": "Max( Max( CRS,DDR ),( FirstVNF_RAM + PN ) )", "choosing": "Min( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( MUM / CS ) ) ) ) ) ,( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.34220532319391633, "obj2": 0.46581314915539046}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( ( BR - PN ),( CRS / AMS ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - Max( ( RMSe + RCSe ),Min( MUM ,DS ) ) )", "obj1": 0.23574144486692014, "obj2": 0.5701226953864453}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( ( CRS * ( FirstVNF_RAM + ARS ) ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( MUR * ( MUC - Max( DS,DS ) ) )", "obj1": 0.5133079847908745, "obj2": 0.34407687654267}, {"determining": "( ( Const - FirstVNF_CPU ) - CRS )", "choosing": "Max( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ),Min( RMSe ,MUC ) )", "obj1": 0.8212927756653993, "obj2": 0.12369510882127308}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( ( ( PN + FirstVNF_RAM ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( PN + ( Max( CRS,BR ) * ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU + RRSe ) ) - ( ( MUR + RMSe ) * ( MUR / MUM ) ) ),( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) )", "obj1": 0.47338403041825095, "obj2": 0.3805044609949992}, {"determining": "( ( Const - FirstVNF_CPU ) - CRS )", "choosing": "Max( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ),Min( RMSe ,MUC ) )", "obj1": 0.8212927756653993, "obj2": 0.12369510882127308}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * Max( ( MDR - AMS ),FirstVNF_CPU ) ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( MLU,( DS + MUC ) )", "obj1": 0.8916349809885932, "obj2": 0.06361680995025513}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( CRS * ( FirstVNF_RAM + ARS ) ) )", "choosing": "Min( ( Max( MUR,MUM ) * ( RCSe - DS ) ) ,Min( MLU ,MUR ) )", "obj1": 0.13878326996197718, "obj2": 0.7285971767387968}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "Max( ( AMS / ARS ),( Max( BR,( FirstVNF_Mem / FirstVNF_CPU ) ) * DDR ) )", "choosing": "Min( ( MUC * ( Max( MUC,RMSe ) * ( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) ) ) ,Min( MUR ,( ( ( MUC * Min( MUR ,( MUR * ( RMSe - MUM ) ) ) ) + ( RMSe / ( RCSe / Min( MUR ,MUR ) ) ) ) + ( DS / RCSe ) ) ) )", "obj1": 0.4429657794676806, "obj2": 0.4245484956003772}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4614221279234265}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( ( FirstVNF_Mem + Max( Max( Max( Max( CRS,DDR ),Min( RRS ,AMS ) ),ACS ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( Max( DS,( ( RCSe - CS ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.46387832699619774, "obj2": 0.40844362914195564}, {"determining": "( ( Max( Const,DDR ) / ( CRS / Const ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUR - ( ( ( ( RMSe / RCSe ) - ( Max( MUC,MUR ) + RCSe ) ) / ( CS - Min( MLU ,RCSe ) ) ) / RMSe ) ) * RRSe ),( DS + MUC ) )", "obj1": 0.6844106463878327, "obj2": 0.2586359555751544}, {"determining": "( ( Const - FirstVNF_CPU ) - CRS )", "choosing": "Max( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ),Min( RMSe ,MUC ) )", "obj1": 0.8269961977186312, "obj2": 0.11833016717674295}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( MLU + ( RCSe * RCSe ) ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.252471908760652}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM_Server ) + ( MDR - Const ) ) - AMS ) + ( BR / FirstVNF_Mem ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( DS * MUC ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.9942965779467681, "obj2": 0.007954412409896099}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( Max( MUR,MUM ) * ( RCSe - DS ) ) ,Min( MLU ,MUR ) )", "obj1": 0.11406844106463879, "obj2": 0.7475495535611503}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ACS + CRS ) ) - Min( ( RRS - DDR ) ,Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( Max( DS,Max( ( CS / CS ),Min( RMSe ,MUC ) ) ) * Min( ( RCSe + DS ) ,( MUR - RCSe ) ) )", "obj1": 0.9467680608365019, "obj2": 0.03742368037117619}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / Const ),Const ) ) - ( ACS * FirstVNF_Mem ) )", "choosing": "Min( ( Max( MUR,MUM ) * ( RCSe - DS ) ) ,Min( ( Max( MUR,MUM ) * ( RCSe - DS ) ) ,MUR ) )", "obj1": 0.13688212927756654, "obj2": 0.7384160629320836}, {"determining": "( ( Const + FirstVNF_CPU ) - Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( ( MLU + MLU ) / ( DS + RCSe ) )", "obj1": 0.10646387832699619, "obj2": 0.767522311477623}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - MDR )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( ( CS - MUC ) * ( DS * RMSe ) ) ,( RRSe + MUC ) ) )", "obj1": 0.2832699619771863, "obj2": 0.494211431217695}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.8160772529149644}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,DDR ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( RRSe - ( RCSe - RMSe ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.8025883925508273}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "Max( Min( FirstVNF_Mem_Server ,ARS ),Min( PN ,MDR ) )", "choosing": "( ( ( RMSe * ( RCSe * MUM ) ) * ( RMSe / RMSe ) ) / Max( ( MLU - MUR ),Min( DS ,RCSe ) ) )", "obj1": 0.09505703422053231, "obj2": 0.7691592412879239}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "Max( Max( CRS,DDR ),Min( RRS ,AMS ) )", "choosing": "Max( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( ( CS - RCSe ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ) ) ),( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5149921066824843}, {"determining": "Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) )", "choosing": "Min( ( MUC * MUM ) ,( MLU / RMSe ) )", "obj1": 0.9315589353612167, "obj2": 0.04419455296380953}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( FirstVNF_Mem + ACS ) )", "choosing": "( ( Max( ( MUC / DS ),MUR ) + MUM ) - DS )", "obj1": 0.039923954372623575, "obj2": 0.8100128380649823}, {"determining": "Min( Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) ) ,( PN - PN ) )", "choosing": "Min( ( MUM * MUM ) ,( MLU / RMSe ) )", "obj1": 0.9315589353612167, "obj2": 0.04419455296380953}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / DDR ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),( DS + Max( RMSe,CS ) ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0004328161082602283}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.8053375573682642}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.42015209125475284, "obj2": 0.4614221279234265}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),( DDR - AMS ) ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * Max( ( DS + MUC ),RRSe ) ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.25475285171102663, "obj2": 0.5153784455414769}], "6": [{"determining": "( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "Min( ( MUC - Max( ( CS + ( MUC / RCSe ) ),MUC ) ) ,Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,AMS ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( Max( RRSe,MUC ) ,Max( MLU,( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( FirstVNF_Mem_Server / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( DS,MLU ) * ( MUM - RCSe ) ) + ( ( RCSe + MUC ) * Max( MUR,RMSe ) ) ) + Min( ( ( RCSe - RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.23106084485905767}, {"determining": "( ( Const - FirstVNF_CPU ) - ( PN + CRS ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( ( RRSe - MUM ) - ( MLU - ( CS * MUC ) ) ) ) )", "obj1": 0.8079847908745247, "obj2": 0.13088995723644198}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) - Min( Min( ( Min( MRS ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server - RRS ) ) ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( MUC ,( Min( CS ,MUR ) * Min( RRSe ,MUR ) ) ) )", "obj1": 0.5228136882129277, "obj2": 0.29732695517128277}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,BR )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + MLU )", "obj1": 0.17680608365019013, "obj2": 0.5907362604672509}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( ( CRS * ( FirstVNF_RAM + ARS ) ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( MUR * ( MUC - Max( DS,DS ) ) )", "obj1": 0.5133079847908745, "obj2": 0.34407687654267}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "Max( Min( FirstVNF_Mem_Server ,ARS ),Min( PN ,MDR ) )", "choosing": "( ( ( RMSe * ( RCSe * MUM ) ) * ( RMSe / RMSe ) ) / Max( ( MLU - MUR ),Min( DS ,RCSe ) ) )", "obj1": 0.09505703422053231, "obj2": 0.7691592412879239}, {"determining": "( ( ( ( PN + FirstVNF_RAM ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( PN + ( Max( CRS,BR ) * ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU + RRSe ) ) - ( ( MUR + RMSe ) * ( MUR / MUM ) ) ),( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) )", "obj1": 0.47338403041825095, "obj2": 0.3805044609949992}, {"determining": "Max( Max( CRS,DDR ),( FirstVNF_RAM + PN ) )", "choosing": "Min( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( MUM / CS ) ) ) ) ) ,( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.34220532319391633, "obj2": 0.46581314915539046}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + CRS ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( Max( MLU,( RRSe * MLU ) ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.14068441064638784, "obj2": 0.6510298373111272}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( CRS * ( PN + ARS ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUM + Max( MLU,RMSe ) ) ) - ( ( MUC - RMSe ) * ( RRSe - MUC ) ) )", "obj1": 0.3745247148288973, "obj2": 0.46050389480159576}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * Max( ( MDR - AMS ),FirstVNF_CPU ) ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( MLU,( DS + MUC ) )", "obj1": 0.8916349809885932, "obj2": 0.06361680995025513}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "Max( ( AMS / ARS ),( Max( BR,( FirstVNF_Mem / FirstVNF_CPU ) ) * DDR ) )", "choosing": "Min( ( MUC * ( Max( MUC,RMSe ) * ( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) ) ) ,Min( MUR ,( ( ( MUC * Min( MUR ,( MUR * ( RMSe - MUM ) ) ) ) + ( RMSe / ( RCSe / Min( MUR ,MUR ) ) ) ) + ( DS / RCSe ) ) ) )", "obj1": 0.4429657794676806, "obj2": 0.4245484956003772}, {"determining": "Max( ( AMS / ARS ),( Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * Max( FirstVNF_RAM,Const ) ),FirstVNF_CPU_Server ) * DDR ) )", "choosing": "Min( ( ( ( MUR / ( CS * RMSe ) ) - MUM ) - DS ) ,Min( MUR ,( ( ( MUC * Min( MUR ,( MUR * ( RMSe - MUM ) ) ) ) + ( RMSe / ( RCSe / Min( MUR ,MUR ) ) ) ) + ( DS / RCSe ) ) ) )", "obj1": 0.21863117870722434, "obj2": 0.5598968573307205}, {"determining": "( ( FirstVNF_Mem + Max( Max( Max( Max( CRS,DDR ),Min( RRS ,AMS ) ),ACS ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( Max( DS,( ( RCSe - CS ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.46387832699619774, "obj2": 0.40844362914195564}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( ( Const - FirstVNF_CPU ) - CRS )", "choosing": "Min( ( RCSe / RMSe ) ,( DS + MUR ) )", "obj1": 0.8269961977186312, "obj2": 0.11784892704391005}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( Max( Const,DDR ) / ( CRS / Const ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUR - ( ( ( ( RMSe / RCSe ) - ( Max( MUC,MUR ) + RCSe ) ) / ( CS - Min( MLU ,RCSe ) ) ) / RMSe ) ) * RRSe ),( DS + MUC ) )", "obj1": 0.6844106463878327, "obj2": 0.2586359555751544}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( MLU + ( RCSe * RCSe ) ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.252471908760652}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_CPU ) / RRS ),FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * ( Max( MLU,RMSe ) * MLU ) ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6520340643341072}, {"determining": "( ( ( Max( MDR,FirstVNF_RAM_Server ) + ( MDR - Const ) ) - AMS ) + ( BR / FirstVNF_Mem ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( DS * MUC ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.9942965779467681, "obj2": 0.007954412409896099}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ACS + CRS ) ) - Min( ( RRS - DDR ) ,Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( Max( DS,Max( ( CS / CS ),Min( RMSe ,MUC ) ) ) * Min( ( RCSe + DS ) ,( MUR - RCSe ) ) )", "obj1": 0.9467680608365019, "obj2": 0.03742368037117619}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - MDR )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( ( CS - MUC ) * ( DS * RMSe ) ) ,( RRSe + MUC ) ) )", "obj1": 0.2832699619771863, "obj2": 0.494211431217695}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "Max( Max( CRS,DDR ),Min( RRS ,AMS ) )", "choosing": "Max( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( ( CS - RCSe ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ) ) ),( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5149921066824843}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( FirstVNF_Mem + ACS ) )", "choosing": "( ( Max( ( MUC / DS ),MUR ) + MUM ) - DS )", "obj1": 0.039923954372623575, "obj2": 0.8100128380649823}, {"determining": "Min( Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) ) ,( PN - PN ) )", "choosing": "Min( ( MUM * MUM ) ,( MLU / RMSe ) )", "obj1": 0.9315589353612167, "obj2": 0.04419455296380953}, {"determining": "Min( Min( BR ,FirstVNF_CPU_Server ) ,( PN - FirstVNF_CPU ) )", "choosing": "Min( ( MUC * MUM ) ,( MLU / RMSe ) )", "obj1": 0.9315589353612167, "obj2": 0.04419455296380953}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.8160772529149644}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,DDR ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( RRSe - ( RCSe - RMSe ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.8025883925508273}, {"determining": "( ( Const - FirstVNF_CPU ) - CRS )", "choosing": "Max( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ),Min( RMSe ,MUC ) )", "obj1": 0.8174904942965779, "obj2": 0.1255050124902412}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.043726235741444866, "obj2": 0.8053375573682642}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / DDR ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),( DS + Max( RMSe,CS ) ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0004328161082602283}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),( DDR - AMS ) ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * Max( ( DS + MUC ),RRSe ) ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.25475285171102663, "obj2": 0.5153784455414769}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * FirstVNF_RAM_Server ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - ( MUC - Max( ( ( MUR / RMSe ) + ( MUC / RCSe ) ),MUC ) ) ) ) ) )", "obj1": 0.051330798479087454, "obj2": 0.8047711362926763}, {"determining": "( ( Const - FirstVNF_CPU ) - CRS )", "choosing": "Max( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ),Min( RMSe ,MUC ) )", "obj1": 0.8212927756653993, "obj2": 0.12369510882127308}], "7": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( Min( FirstVNF_Mem ,( ARS / RRS ) ) - FirstVNF_CPU ) - ( ( Const - FirstVNF_CPU ) - ( ( ACS + ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + CRS ) ) ) + CRS ) ) )", "choosing": "Max( ( RCSe / ( ( ( MLU * ( RCSe - MUR ) ) + MUR ) - ( ( MUR * ( MLU - RCSe ) ) / MUR ) ) ),( ( RCSe / ( ( ( MLU * ( RCSe - MUR ) ) + MUR ) - ( ( MUR * ( MLU - RCSe ) ) / MUR ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "Min( ( MUC - Max( ( CS + ( MUC / RCSe ) ),MUC ) ) ,Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( FirstVNF_Mem_Server / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( DS,MLU ) * ( MUM - RCSe ) ) + ( ( RCSe + MUC ) * Max( MUR,RMSe ) ) ) + Min( ( ( RCSe - RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.23106084485905767}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( ( RRSe - MUM ) - ( MLU - ( ( CS - ( DS * MLU ) ) * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.7661596958174905, "obj2": 0.13003215776958382}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( Min( ( FirstVNF_RAM_Server - BR ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) - Min( Min( ( Min( MRS ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server - RRS ) ) ,DDR ) ,Min( DDR ,ACS ) ) )", "choosing": "( ( ( RCSe + DS ) - DS ) - Min( MUC ,( Min( CS ,MUR ) * Min( RRSe ,MUR ) ) ) )", "obj1": 0.5228136882129277, "obj2": 0.29732695517128277}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( Min( BR ,ACS ) / Max( BR,FirstVNF_CPU ) ) / ( ( CRS * ( FirstVNF_RAM + ARS ) ) * ( DDR + FirstVNF_RAM ) ) ) + ( ( Max( FirstVNF_Mem,BR ) * ( DDR / FirstVNF_RAM ) ) / ( ( Const - ARS ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( MUR * ( MUC - Max( DS,DS ) ) )", "obj1": 0.5133079847908745, "obj2": 0.34407687654267}, {"determining": "Max( Min( FirstVNF_Mem_Server ,ARS ),Min( PN ,MDR ) )", "choosing": "( ( ( RMSe * ( RCSe * MUM ) ) * ( RMSe / RMSe ) ) / Max( ( MLU - MUR ),Min( DS ,RCSe ) ) )", "obj1": 0.09505703422053231, "obj2": 0.7691592412879239}, {"determining": "( ( ( ( PN + FirstVNF_RAM ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( PN + ( Max( CRS,BR ) * ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU + RRSe ) ) - ( ( MUR + RMSe ) * ( MUR / MUM ) ) ),( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) )", "obj1": 0.47338403041825095, "obj2": 0.3805044609949992}, {"determining": "Max( Max( CRS,DDR ),( FirstVNF_RAM + PN ) )", "choosing": "Min( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( MUM / CS ) ) ) ) ) ,( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.34220532319391633, "obj2": 0.46581314915539046}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,BR )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + MLU )", "obj1": 0.17680608365019013, "obj2": 0.5907362604672509}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,Max( ( ( FirstVNF_Mem / FirstVNF_CPU ) / RRS ),FirstVNF_CPU ) ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( ( ( DS * CS ) + RMSe ) + MUC ) ) - DS ) ) )", "obj1": 0.155893536121673, "obj2": 0.6265100412894211}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( CRS * ( PN + ARS ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUM + Max( MLU,RMSe ) ) ) - ( ( MUC - RMSe ) * ( RRSe - MUC ) ) )", "obj1": 0.3745247148288973, "obj2": 0.46050389480159576}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * Max( ( MDR - AMS ),FirstVNF_CPU ) ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( MLU,( DS + MUC ) )", "obj1": 0.8916349809885932, "obj2": 0.06361680995025513}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( FirstVNF_Mem + Max( Max( Max( Max( CRS,DDR ),Min( RRS ,AMS ) ),ACS ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( Max( DS,( ( RCSe - CS ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.46387832699619774, "obj2": 0.40844362914195564}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( Max( Const,DDR ) / ( CRS / Const ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUR - ( ( ( ( RMSe / RCSe ) - ( Max( MUC,MUR ) + RCSe ) ) / ( CS - Min( MLU ,RCSe ) ) ) / RMSe ) ) * RRSe ),( DS + MUC ) )", "obj1": 0.6844106463878327, "obj2": 0.2586359555751544}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( MLU + ( RCSe * RCSe ) ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.252471908760652}, {"determining": "Max( ( AMS / ARS ),( Max( BR,( FirstVNF_Mem / FirstVNF_CPU ) ) * DDR ) )", "choosing": "Min( ( MUC * ( Max( MUC,RMSe ) * ( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) ) ) ,Min( MUR ,( ( ( MUC * Min( MUR ,( MUR * ( RMSe - MUM ) ) ) ) + ( RMSe / ( RCSe / Min( MUR ,MUR ) ) ) ) + ( DS / RCSe ) ) ) )", "obj1": 0.4429657794676806, "obj2": 0.4245484956003772}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( Const - FirstVNF_CPU ) - CRS )", "choosing": "Min( ( RCSe / RMSe ) ,( DS + MUR ) )", "obj1": 0.8269961977186312, "obj2": 0.11784892704391005}, {"determining": "( Max( ( ( FirstVNF_Mem / FirstVNF_CPU ) / RRS ),FirstVNF_CPU ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * ( Max( MLU,RMSe ) * MLU ) ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6520340643341072}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( Const - FirstVNF_CPU ) - CRS )", "choosing": "Max( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ),Min( RMSe ,MUC ) )", "obj1": 0.8174904942965779, "obj2": 0.1255050124902412}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ACS + CRS ) ) - Min( ( RRS - DDR ) ,Max( RRS,FirstVNF_RAM ) ) )", "choosing": "( Max( DS,Max( ( CS / CS ),Min( RMSe ,MUC ) ) ) * Min( ( RCSe + DS ) ,( MUR - RCSe ) ) )", "obj1": 0.9467680608365019, "obj2": 0.03742368037117619}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.9904942965779467, "obj2": 0.00303234692133487}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) - ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,AMS ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) ) )", "choosing": "Min( ( CS / DS ) ,( RRSe + ( ( ( MUC * RCSe ) + Max( MLU,( ( MUR + MLU ) - MLU ) ) ) + ( DS / ( ( MUC * RCSe ) + Max( MLU,( ( MUR + MLU ) - MLU ) ) ) ) ) ) )", "obj1": 0.4372623574144487, "obj2": 0.45310612715093745}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + CRS ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( Max( MLU,( RRSe * MLU ) ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.14068441064638784, "obj2": 0.6510298373111272}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - MDR )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( ( CS - MUC ) * ( DS * RMSe ) ) ,( RRSe + MUC ) ) )", "obj1": 0.2832699619771863, "obj2": 0.494211431217695}, {"determining": "Max( ( AMS / ARS ),( Max( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * Max( FirstVNF_RAM,Const ) ),FirstVNF_CPU_Server ) * DDR ) )", "choosing": "Min( ( ( ( MUR / ( CS * RMSe ) ) - MUM ) - DS ) ,Min( MUR ,( ( ( MUC * Min( MUR ,( MUR * ( RMSe - MUM ) ) ) ) + ( RMSe / ( RCSe / Min( MUR ,MUR ) ) ) ) + ( DS / RCSe ) ) ) )", "obj1": 0.21863117870722434, "obj2": 0.5598968573307205}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - AMS ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( CS - ( MLU - ( CS * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9277566539923955, "obj2": 0.04973449757560638}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "Max( Max( CRS,DDR ),Min( RRS ,AMS ) )", "choosing": "Max( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( ( CS - RCSe ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ) ) ),( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5149921066824843}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( FirstVNF_Mem + ACS ) )", "choosing": "( ( Max( ( MUC / DS ),MUR ) + MUM ) - DS )", "obj1": 0.039923954372623575, "obj2": 0.8100128380649823}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.030418250950570342, "obj2": 0.8160772529149644}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,DDR ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( RRSe - ( RCSe - RMSe ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.8025883925508273}], "8": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "Min( ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ( ( Max( Min( BR ,ARS ),RRS ) * ( Max( MDR,Const ) / ACS ) ) - PN ) ) ) ) ,Max( RRS,FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,( ARS / RRS ) ) - FirstVNF_CPU ) - ( ( Const - FirstVNF_CPU ) - ( ( ACS + ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + CRS ) ) ) + CRS ) ) )", "choosing": "Max( ( RCSe / ( ( ( MLU * ( RCSe - MUR ) ) + MUR ) - ( ( MUR * ( MLU - RCSe ) ) / MUR ) ) ),( ( RCSe / ( ( ( MLU * ( RCSe - MUR ) ) + MUR ) - ( ( MUR * ( MLU - RCSe ) ) / MUR ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( ( PN + FirstVNF_RAM ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( PN + ( Max( CRS,BR ) * ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU + RRSe ) ) - ( ( MUR + RMSe ) * ( MUR / MUM ) ) ),( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) )", "obj1": 0.47338403041825095, "obj2": 0.3805044609949992}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( ( RRSe - MUM ) - ( MLU - ( ( CS - ( DS * MLU ) ) * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.7661596958174905, "obj2": 0.13003215776958382}, {"determining": "Min( Max( RRS,FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( ( ( MUC / CS ) - DS ),( ( ( MLU * ( RCSe - MUR ) ) + MUR ) - ( ( MUR * ( MLU - RCSe ) ) / MUR ) ) ) / RMSe ) + DS ) ,( MUR * RCSe ) )", "obj1": 0.747148288973384, "obj2": 0.21141800709374356}, {"determining": "Max( Min( FirstVNF_Mem_Server ,ARS ),Min( PN ,MDR ) )", "choosing": "( ( ( RMSe * ( RCSe * MUM ) ) * ( RMSe / RMSe ) ) / Max( ( MLU - MUR ),Min( DS ,RCSe ) ) )", "obj1": 0.09505703422053231, "obj2": 0.7691592412879239}, {"determining": "Max( Max( CRS,DDR ),( FirstVNF_RAM + PN ) )", "choosing": "Min( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( MUM / CS ) ) ) ) ) ,( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.34220532319391633, "obj2": 0.46581314915539046}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( FirstVNF_Mem_Server / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( DS,MLU ) * ( MUM - RCSe ) ) + ( ( RCSe + MUC ) * Max( MUR,RMSe ) ) ) + Min( ( ( RCSe - RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.23106084485905767}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( CRS * ( PN + ARS ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUM + Max( MLU,RMSe ) ) ) - ( ( MUC - RMSe ) * ( RRSe - MUC ) ) )", "obj1": 0.3745247148288973, "obj2": 0.46050389480159576}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * Max( ( MDR - AMS ),FirstVNF_CPU ) ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( MLU,( DS + MUC ) )", "obj1": 0.8916349809885932, "obj2": 0.06361680995025513}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( ( Const - FirstVNF_CPU ) - CRS )", "choosing": "Min( ( RCSe / RMSe ) ,( DS + MUR ) )", "obj1": 0.8269961977186312, "obj2": 0.11784892704391005}, {"determining": "( ( FirstVNF_Mem + Max( Max( Max( Max( CRS,DDR ),Min( RRS ,AMS ) ),ACS ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( Max( DS,( ( RCSe - CS ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.46387832699619774, "obj2": 0.40844362914195564}, {"determining": "( ( Max( Const,DDR ) / ( CRS / Const ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUR - ( ( ( ( RMSe / RCSe ) - ( Max( MUC,MUR ) + RCSe ) ) / ( CS - Min( MLU ,RCSe ) ) ) / RMSe ) ) * RRSe ),( DS + MUC ) )", "obj1": 0.6844106463878327, "obj2": 0.2586359555751544}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( MLU + ( RCSe * RCSe ) ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.252471908760652}, {"determining": "Max( ( AMS / ARS ),( Max( BR,( FirstVNF_Mem / FirstVNF_CPU ) ) * DDR ) )", "choosing": "Min( ( MUC * ( Max( MUC,RMSe ) * ( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) ) ) ,Min( MUR ,( ( ( MUC * Min( MUR ,( MUR * ( RMSe - MUM ) ) ) ) + ( RMSe / ( RCSe / Min( MUR ,MUR ) ) ) ) + ( DS / RCSe ) ) ) )", "obj1": 0.4429657794676806, "obj2": 0.4245484956003772}, {"determining": "( ( Const - FirstVNF_CPU ) - CRS )", "choosing": "Max( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ),Min( RMSe ,MUC ) )", "obj1": 0.8174904942965779, "obj2": 0.1255050124902412}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,Max( ( ( FirstVNF_Mem / FirstVNF_CPU ) / RRS ),FirstVNF_CPU ) ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( ( ( DS * CS ) + RMSe ) + MUC ) ) - DS ) ) )", "obj1": 0.155893536121673, "obj2": 0.6265100412894211}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( ( PN + AMS ) - FirstVNF_CPU ) - ( ACS + CRS ) )", "choosing": "Max( ( ( ( MUC * RCSe ) + ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) ) / CS ),Min( RMSe ,MUC ) )", "obj1": 0.9315589353612167, "obj2": 0.03145856593701526}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( ( Max( ACS,Const ) * ACS ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,( Max( RRSe,( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) + MUC ) ) )", "obj1": 0.17300380228136883, "obj2": 0.6041959842235951}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.9904942965779467, "obj2": 0.00303234692133487}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) - ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,AMS ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) ) )", "choosing": "Min( ( CS / DS ) ,( RRSe + ( ( ( MUC * RCSe ) + Max( MLU,( ( MUR + MLU ) - MLU ) ) ) + ( DS / ( ( MUC * RCSe ) + Max( MLU,( ( MUR + MLU ) - MLU ) ) ) ) ) ) )", "obj1": 0.4372623574144487, "obj2": 0.45310612715093745}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - AMS ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( CS - ( MLU - ( CS * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9277566539923955, "obj2": 0.04973449757560638}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - MDR )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( ( CS - MUC ) * ( DS * RMSe ) ) ,( RRSe + MUC ) ) )", "obj1": 0.2832699619771863, "obj2": 0.494211431217695}, {"determining": "( ( ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.21102661596958175, "obj2": 0.5571635324238562}, {"determining": "Max( Max( CRS,DDR ),Min( RRS ,AMS ) )", "choosing": "Max( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( ( CS - RCSe ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ) ) ),( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5149921066824843}, {"determining": "( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,AMS ) ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - MUM ) ) ) )", "obj1": 0.17490494296577946, "obj2": 0.5902521407654551}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,DDR ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( RRSe - ( RCSe - RMSe ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.8025883925508273}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / Max( RRS,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,( ( MUR / RMSe ) + ( MUC / RCSe ) ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.049429657794676805, "obj2": 0.8077011427375415}], "9": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( Min( FirstVNF_Mem ,( ARS / RRS ) ) - FirstVNF_CPU ) - ( ( Min( FirstVNF_Mem ,( ARS / RRS ) ) - FirstVNF_CPU ) - ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + CRS ) ) ) )", "choosing": "Max( ( CS / Max( ( ( ( MLU * ( RCSe - MUR ) ) + MUR ) - ( ( MUR * ( MLU - RCSe ) ) / MUR ) ),MUM ) ),( ( RCSe / ( ( ( MLU * ( RCSe - MUR ) ) + MUR ) - ( ( MUR * ( MLU - RCSe ) ) / MUR ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ( ( Max( Min( BR ,ARS ),RRS ) * ( Max( MDR,Const ) / ACS ) ) - PN ) ) ) ) ,Max( RRS,FirstVNF_RAM ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( ( RRSe - MUM ) - ( MLU - ( ( CS - ( DS * MLU ) ) * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.7661596958174905, "obj2": 0.13003215776958382}, {"determining": "( ( ( ( PN + FirstVNF_RAM ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( PN + ( Max( CRS,BR ) * ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU + RRSe ) ) - ( ( MUR + RMSe ) * ( MUR / MUM ) ) ),( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) )", "obj1": 0.47338403041825095, "obj2": 0.3805044609949992}, {"determining": "( ( Const - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * ( RCSe * Max( Min( DS ,( RMSe * CS ) ),( RMSe - RRSe ) ) ) ) - ( ( Min( Max( RMSe,MLU ) ,RMSe ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2878792813346567}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "Min( Max( RRS,FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( ( ( MUC / CS ) - DS ),( ( ( MLU * ( RCSe - MUR ) ) + MUR ) - ( ( MUR * ( MLU - RCSe ) ) / MUR ) ) ) / RMSe ) + DS ) ,( MUR * RCSe ) )", "obj1": 0.747148288973384, "obj2": 0.21141800709374356}, {"determining": "Max( Min( FirstVNF_Mem_Server ,ARS ),Min( PN ,MDR ) )", "choosing": "( ( ( RMSe * ( RCSe * MUM ) ) * ( RMSe / RMSe ) ) / Max( ( MLU - MUR ),Min( DS ,RCSe ) ) )", "obj1": 0.09505703422053231, "obj2": 0.7691592412879239}, {"determining": "Max( Max( CRS,DDR ),( FirstVNF_RAM + PN ) )", "choosing": "Min( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( MUM / CS ) ) ) ) ) ,( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.34220532319391633, "obj2": 0.46581314915539046}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( CRS * ( PN + ARS ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUM + Max( MLU,RMSe ) ) ) - ( ( MUC - RMSe ) * ( RRSe - MUC ) ) )", "obj1": 0.3745247148288973, "obj2": 0.46050389480159576}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * Max( ( MDR - AMS ),FirstVNF_CPU ) ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( MLU,( DS + MUC ) )", "obj1": 0.8916349809885932, "obj2": 0.06361680995025513}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( FirstVNF_Mem_Server / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( DS,MLU ) * ( MUM - RCSe ) ) + ( ( RCSe + MUC ) * Max( MUR,RMSe ) ) ) + Min( ( ( RCSe - RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.23106084485905767}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( ( FirstVNF_Mem + Max( Max( Max( Max( CRS,DDR ),Min( RRS ,AMS ) ),ACS ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( Max( DS,( ( RCSe - CS ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.46387832699619774, "obj2": 0.40844362914195564}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( MLU + ( RCSe * RCSe ) ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.252471908760652}, {"determining": "Max( ( AMS / ARS ),( Max( BR,( FirstVNF_Mem / FirstVNF_CPU ) ) * DDR ) )", "choosing": "Min( ( MUC * ( Max( MUC,RMSe ) * ( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) ) ) ,Min( MUR ,( ( ( MUC * Min( MUR ,( MUR * ( RMSe - MUM ) ) ) ) + ( RMSe / ( RCSe / Min( MUR ,MUR ) ) ) ) + ( DS / RCSe ) ) ) )", "obj1": 0.4429657794676806, "obj2": 0.4245484956003772}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "( ( Max( ( ARS / AMS ),Const ) + Max( Max( Const,RRS ),CRS ) ) - Max( ( Const / RRS ),( ARS + FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - MUR ) ,( Min( CS ,( MLU - ( MUR + MLU ) ) ) / ( ( ( MUR / ( CS * Min( Min( MLU ,MUM ) ,( RCSe - DS ) ) ) ) - ( MUC + MLU ) ) - DS ) ) )", "obj1": 0.6577946768060836, "obj2": 0.26949033406692413}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( ( ( PN + AMS ) - FirstVNF_CPU ) - ( ACS + CRS ) )", "choosing": "Max( ( ( ( MUC * RCSe ) + ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) ) / CS ),Min( RMSe ,MUC ) )", "obj1": 0.9315589353612167, "obj2": 0.03145856593701526}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( Max( Const,DDR ) / ( CRS / Const ) ) - ( ( BR / FirstVNF_CPU_Server ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUR - ( ( ( ( RMSe / RCSe ) - ( Max( MUC,MUR ) + RCSe ) ) / ( CS - Min( MLU ,RCSe ) ) ) / RMSe ) ) * RRSe ),( DS + MUC ) )", "obj1": 0.6844106463878327, "obj2": 0.2586359555751544}, {"determining": "( ( BR + ARS ) + ( Max( ( ARS / AMS ),Const ) / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - ( ( MUC * Min( Max( ( MUC - DS ),( DS / MUR ) ) ,RRSe ) ) + DS ) ) ,Min( MLU ,( ( Max( MUR,MUM ) * ( RCSe - DS ) ) - ( RRSe + MLU ) ) ) ) )", "obj1": 0.15779467680608364, "obj2": 0.6085167814625785}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,Max( ( ( FirstVNF_Mem / FirstVNF_CPU ) / RRS ),FirstVNF_CPU ) ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( ( ( DS * CS ) + RMSe ) + MUC ) ) - DS ) ) )", "obj1": 0.155893536121673, "obj2": 0.6265100412894211}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) - ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,AMS ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) ) )", "choosing": "Min( ( CS / DS ) ,( RRSe + ( ( ( MUC * RCSe ) + Max( MLU,( ( MUR + MLU ) - MLU ) ) ) + ( DS / ( ( MUC * RCSe ) + Max( MLU,( ( MUR + MLU ) - MLU ) ) ) ) ) ) )", "obj1": 0.4372623574144487, "obj2": 0.45310612715093745}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - AMS ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( CS - ( MLU - ( CS * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9277566539923955, "obj2": 0.04973449757560638}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8070923275952272}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - MDR )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( ( CS - MUC ) * ( DS * RMSe ) ) ,( RRSe + MUC ) ) )", "obj1": 0.2832699619771863, "obj2": 0.494211431217695}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Max( ( Max( ACS,ARS ) - ( ARS - FirstVNF_Mem_Server ) ),MDR ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RRSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.17110266159695817, "obj2": 0.5971988512015968}, {"determining": "( Min( ACS ,FirstVNF_RAM ) * ( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( MLU,( RRSe * MLU ) ) - Min( ( MUC - Max( ( ( MUR / RMSe ) + ( MUC / RCSe ) ),MUC ) ) ,Min( MLU ,MUM ) ) ) ,Max( MUR,( ( RMSe - MUC ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7338403041825095, "obj2": 0.21837773314690936}, {"determining": "Max( Max( CRS,DDR ),Min( RRS ,AMS ) )", "choosing": "Max( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( ( CS - RCSe ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ) ) ),( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5149921066824843}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( Max( MDR,Const ) / ACS ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,RCSe ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.028517110266159697, "obj2": 0.8166260653206948}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,DDR ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( RRSe - ( RCSe - RMSe ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.8025883925508273}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.9904942965779467, "obj2": 0.00303234692133487}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}], "10": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "Min( ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ( ( Max( Min( BR ,ARS ),RRS ) * ( Max( MDR,Const ) / ACS ) ) - PN ) ) ) ) ,Max( RRS,FirstVNF_RAM ) )", "choosing": "Min( ( MLU / ( DS * RCSe ) ) ,( RCSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,( ARS / RRS ) ) - FirstVNF_CPU ) - ( ( Min( FirstVNF_Mem ,( ARS / RRS ) ) - FirstVNF_CPU ) - ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + CRS ) ) ) )", "choosing": "Max( ( CS / Max( ( ( ( MLU * ( RCSe - MUR ) ) + MUR ) - ( ( MUR * ( MLU - RCSe ) ) / MUR ) ),MUM ) ),( ( RCSe / ( ( ( MLU * ( RCSe - MUR ) ) + MUR ) - ( ( MUR * ( MLU - RCSe ) ) / MUR ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( ( RRSe - MUM ) - ( MLU - ( ( CS - ( DS * MLU ) ) * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.7661596958174905, "obj2": 0.13003215776958382}, {"determining": "( ( ( ( PN + FirstVNF_RAM ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( PN + ( Max( CRS,BR ) * ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUC,DS ) * ( MLU + RRSe ) ) - ( ( MUR + RMSe ) * ( MUR / MUM ) ) ),( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) )", "obj1": 0.47338403041825095, "obj2": 0.3805044609949992}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "Min( Max( RRS,FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( ( ( MUC / CS ) - DS ),( ( ( MLU * ( RCSe - MUR ) ) + MUR ) - ( ( MUR * ( MLU - RCSe ) ) / MUR ) ) ) / RMSe ) + DS ) ,( MUR * RCSe ) )", "obj1": 0.747148288973384, "obj2": 0.21141800709374356}, {"determining": "( ( Const - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * ( RCSe * Max( Min( DS ,( RMSe * CS ) ),( RMSe - RRSe ) ) ) ) - ( ( Min( Max( RMSe,MLU ) ,RMSe ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2878792813346567}, {"determining": "Max( Max( CRS,DDR ),( FirstVNF_RAM + PN ) )", "choosing": "Min( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( MUM / CS ) ) ) ) ) ,( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.34220532319391633, "obj2": 0.46581314915539046}, {"determining": "( ( Max( Max( BR,CRS ),CRS ) + Max( Max( BR,CRS ),CRS ) ) - CRS )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,CS ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09885931558935361, "obj2": 0.7679992681849122}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( ( Max( BR,( FirstVNF_CPU_Server / FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server + ACS ) ) * ( CRS * ( PN + ARS ) ) )", "choosing": "( ( ( MUM / CS ) + ( MUM + Max( MLU,RMSe ) ) ) - ( ( MUC - RMSe ) * ( RRSe - MUC ) ) )", "obj1": 0.3745247148288973, "obj2": 0.46050389480159576}, {"determining": "( ( Max( Const,DDR ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) * Max( ( MDR - AMS ),FirstVNF_CPU ) ) - ( MDR - FirstVNF_RAM ) ) )", "choosing": "Max( MLU,( DS + MUC ) )", "obj1": 0.8916349809885932, "obj2": 0.06361680995025513}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( ( ( PN + AMS ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) + Max( ( BR - FirstVNF_CPU_Server ),Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( FirstVNF_Mem_Server / Const ) + ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( AMS ,ACS ) - ( ACS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( DS,MLU ) * ( MUM - RCSe ) ) + ( ( RCSe + MUC ) * Max( MUR,RMSe ) ) ) + Min( ( ( RCSe - RCSe ) - ( RMSe + MLU ) ) ,Max( ( RRSe - DS ),( RCSe + MUR ) ) ) )", "obj1": 0.7319391634980988, "obj2": 0.23106084485905767}, {"determining": "( ( FirstVNF_Mem + Max( Max( Max( Max( CRS,DDR ),Min( RRS ,AMS ) ),ACS ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( Max( DS,( ( RCSe - CS ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.46387832699619774, "obj2": 0.40844362914195564}, {"determining": "Max( ( AMS / ARS ),( Max( BR,( FirstVNF_Mem / FirstVNF_CPU ) ) * DDR ) )", "choosing": "Min( ( MUC * ( Max( MUC,RMSe ) * ( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) ) ) ,Min( MUR ,( ( ( MUC * Min( MUR ,( MUR * ( RMSe - MUM ) ) ) ) + ( RMSe / ( RCSe / Min( MUR ,MUR ) ) ) ) + ( DS / RCSe ) ) ) )", "obj1": 0.4429657794676806, "obj2": 0.4245484956003772}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( MLU + ( RCSe * RCSe ) ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.252471908760652}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( ( PN + AMS ) - FirstVNF_CPU ) - ( ACS + CRS ) )", "choosing": "Max( ( ( ( MUC * RCSe ) + ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) ) / CS ),Min( RMSe ,MUC ) )", "obj1": 0.9315589353612167, "obj2": 0.03145856593701526}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( ( ( Min( CRS ,AMS ) / Min( ACS ,DDR ) ) / ( Max( MRS,FirstVNF_Mem ) * Min( MRS ,RRS ) ) ) + ( Max( ( CRS * BR ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / Min( PN ,AMS ) ) ) )", "choosing": "Min( ( ( ( MUM / MLU ) + ( RRSe - MLU ) ) - Max( Min( MUR ,DS ),Min( MUM ,MUC ) ) ) ,Min( Min( ( MUC - CS ) ,( MUC + MLU ) ) ,( ( MUR - RRSe ) + Min( CS ,DS ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.053321173714925216}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Max( ( Max( ACS,ARS ) - ( ARS - FirstVNF_Mem_Server ) ),MDR ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RRSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.17110266159695817, "obj2": 0.5971988512015968}, {"determining": "( ( BR + ARS ) + ( Max( ( ARS / AMS ),Const ) / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - ( ( MUC * Min( Max( ( MUC - DS ),( DS / MUR ) ) ,RRSe ) ) + DS ) ) ,Min( MLU ,( ( Max( MUR,MUM ) * ( RCSe - DS ) ) - ( RRSe + MLU ) ) ) ) )", "obj1": 0.15779467680608364, "obj2": 0.6085167814625785}, {"determining": "( ( Max( Min( ( FirstVNF_Mem * PN ) ,MDR ),Min( ( ( MDR / ARS ) * FirstVNF_RAM ) ,Min( DDR ,( PN * ( RRS - AMS ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( Const + MRS ),MDR ) ) )", "choosing": "( ( RCSe * Max( Min( DS ,( RMSe * MUC ) ),( RMSe - RRSe ) ) ) + ( DS + RCSe ) )", "obj1": 0.6844106463878327, "obj2": 0.252560251150511}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,Max( ( ( FirstVNF_Mem / FirstVNF_CPU ) / RRS ),FirstVNF_CPU ) ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( ( ( DS * CS ) + RMSe ) + MUC ) ) - DS ) ) )", "obj1": 0.155893536121673, "obj2": 0.6265100412894211}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) - ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,AMS ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) ) )", "choosing": "Min( ( CS / DS ) ,( RRSe + ( ( ( MUC * RCSe ) + Max( MLU,( ( MUR + MLU ) - MLU ) ) ) + ( DS / ( ( MUC * RCSe ) + Max( MLU,( ( MUR + MLU ) - MLU ) ) ) ) ) ) )", "obj1": 0.4372623574144487, "obj2": 0.45310612715093745}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.9904942965779467, "obj2": 0.00303234692133487}, {"determining": "Min( Max( RRS,AMS ) ,( ( Min( AMS ,DDR ) - FirstVNF_RAM ) - Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( Min( Max( RMSe,MLU ) ,RMSe ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.9258555133079848, "obj2": 0.047873396275262416}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.6577946768060836, "obj2": 0.26830693624226787}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - MDR )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( ( CS - MUC ) * ( DS * RMSe ) ) ,( RRSe + MUC ) ) )", "obj1": 0.2832699619771863, "obj2": 0.494211431217695}, {"determining": "( Min( ACS ,FirstVNF_RAM ) * ( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( MLU,( RRSe * MLU ) ) - Min( ( MUC - Max( ( ( MUR / RMSe ) + ( MUC / RCSe ) ),MUC ) ) ,Min( MLU ,MUM ) ) ) ,Max( MUR,( ( RMSe - MUC ) * Min( RCSe ,CS ) ) ) )", "obj1": 0.7338403041825095, "obj2": 0.21837773314690936}, {"determining": "Min( ( ( FirstVNF_RAM - ( ( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server / ACS ) ) - ( ( ( Const + MDR ) + Max( Const,ACS ) ) * ( FirstVNF_Mem * Const ) ) ) ) / ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( MLU - Min( ( MUM + MUR ) ,MUR ) ) * DS ) ,( DS + ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) ) )", "obj1": 0.6577946768060836, "obj2": 0.26830693624226787}, {"determining": "Max( Max( CRS,DDR ),Min( RRS ,AMS ) )", "choosing": "Max( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( ( CS - RCSe ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ) ) ),( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5149921066824843}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( Max( MDR,Const ) / ACS ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,RCSe ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.028517110266159697, "obj2": 0.8166260653206948}], "11": [{"determining": "Min( ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ( ( Max( Min( BR ,ARS ),RRS ) * ( Max( MDR,Const ) / ACS ) ) - PN ) ) ) ) ,Max( RRS,FirstVNF_RAM ) )", "choosing": "Min( ( MUC - Max( ( ( MUC / RCSe ) * ( MUR / RMSe ) ),Max( MUM,MUR ) ) ) ,Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "Min( ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ( ( Max( Min( BR ,ARS ),RRS ) * ( Max( MDR,Const ) / ACS ) ) - PN ) ) ) ) ,Max( RRS,FirstVNF_RAM ) )", "choosing": "Min( ( MLU / ( DS * RCSe ) ) ,( RCSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( Const - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * ( RCSe * Max( Min( DS ,( RMSe * CS ) ),( RMSe - RRSe ) ) ) ) - ( ( Min( Max( RMSe,MLU ) ,RMSe ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2878792813346567}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "Min( Max( RRS,FirstVNF_RAM ) ,( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( ( ( MUC / CS ) - DS ),( ( ( MLU * ( RCSe - MUR ) ) + MUR ) - ( ( MUR * ( MLU - RCSe ) ) / MUR ) ) ) / RMSe ) + DS ) ,( MUR * RCSe ) )", "obj1": 0.747148288973384, "obj2": 0.21141800709374356}, {"determining": "( ( Max( Max( BR,CRS ),CRS ) + Max( Max( BR,CRS ),CRS ) ) - CRS )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,CS ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09885931558935361, "obj2": 0.7679992681849122}, {"determining": "Max( ( AMS / ARS ),( Max( BR,( FirstVNF_Mem / FirstVNF_CPU ) ) * DDR ) )", "choosing": "Min( ( MUC * ( Max( MUC,RMSe ) * ( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) ) ) ,Min( MUR ,( ( ( MUC * Min( MUR ,( MUR * ( RMSe - MUM ) ) ) ) + ( RMSe / ( RCSe / Min( MUR ,MUR ) ) ) ) + ( DS / RCSe ) ) ) )", "obj1": 0.4429657794676806, "obj2": 0.4245484956003772}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),( RCSe / MUR ) ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.7642585551330798, "obj2": 0.15791520095081782}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( ( Const - FirstVNF_CPU ) - ( FirstVNF_RAM - Min( FirstVNF_CPU ,( ACS + DDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,( MUC / CS ) ) - Min( ( CS * RMSe ) ,( RRSe - MLU ) ) ) - RMSe ),Min( RMSe ,MUC ) )", "obj1": 0.7034220532319392, "obj2": 0.2164213106807925}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( ( RRSe - MUM ) - ( MLU - ( ( CS - ( DS * MLU ) ) * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.7661596958174905, "obj2": 0.13003215776958382}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem_Server ) ,Max( PN,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - ACS ) * ( BR * FirstVNF_CPU_Server ) ) ) * ( ( Max( AMS,FirstVNF_Mem_Server ) / ( ACS * FirstVNF_CPU ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,( ( Min( ACS ,FirstVNF_RAM ) * ( DDR / ( Const + DDR ) ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) * Min( RCSe ,CS ) ) + Min( CS ,( RCSe / ( MUR / MUC ) ) ) )", "obj1": 0.3688212927756654, "obj2": 0.4582493853839971}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( MLU + ( RCSe * RCSe ) ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.252471908760652}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.9904942965779467, "obj2": 0.00303234692133487}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Max( ( Max( ACS,ARS ) - ( ARS - FirstVNF_Mem_Server ) ),MDR ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RRSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.17110266159695817, "obj2": 0.5971988512015968}, {"determining": "Max( Max( CRS,DDR ),( FirstVNF_RAM + PN ) )", "choosing": "Min( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( MUM / CS ) ) ) ) ) ,( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.34220532319391633, "obj2": 0.46581314915539046}, {"determining": "( ( BR + ARS ) + ( Max( ( ARS / AMS ),Const ) / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - ( ( MUC * Min( Max( ( MUC - DS ),( DS / MUR ) ) ,RRSe ) ) + DS ) ) ,Min( MLU ,( ( Max( MUR,MUM ) * ( RCSe - DS ) ) - ( RRSe + MLU ) ) ) ) )", "obj1": 0.15779467680608364, "obj2": 0.6085167814625785}, {"determining": "( ( Max( Min( ( FirstVNF_Mem * PN ) ,MDR ),Min( ( ( MDR / ARS ) * FirstVNF_RAM ) ,Min( DDR ,( PN * ( RRS - AMS ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( Const + MRS ),MDR ) ) )", "choosing": "( ( RCSe * Max( Min( DS ,( RMSe * MUC ) ),( RMSe - RRSe ) ) ) + ( DS + RCSe ) )", "obj1": 0.6844106463878327, "obj2": 0.252560251150511}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,Max( ( ( FirstVNF_Mem / FirstVNF_CPU ) / RRS ),FirstVNF_CPU ) ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( ( ( DS * CS ) + RMSe ) + MUC ) ) - DS ) ) )", "obj1": 0.155893536121673, "obj2": 0.6265100412894211}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) - ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,AMS ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) ) )", "choosing": "Min( ( CS / DS ) ,( RRSe + ( ( ( MUC * RCSe ) + Max( MLU,( ( MUR + MLU ) - MLU ) ) ) + ( DS / ( ( MUC * RCSe ) + Max( MLU,( ( MUR + MLU ) - MLU ) ) ) ) ) ) )", "obj1": 0.4372623574144487, "obj2": 0.45310612715093745}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( PN + AMS ) - FirstVNF_CPU ) - ( ACS + CRS ) )", "choosing": "Max( ( ( ( MUC * RCSe ) + ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) ) / CS ),Min( RMSe ,MUC ) )", "obj1": 0.9315589353612167, "obj2": 0.03145856593701526}, {"determining": "( ( ACS - DDR ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + Max( MUC,MUC ) ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.9258555133079848, "obj2": 0.03362588105716414}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.6577946768060836, "obj2": 0.26830693624226787}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - MDR )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( ( CS - MUC ) * ( DS * RMSe ) ) ,( RRSe + MUC ) ) )", "obj1": 0.2832699619771863, "obj2": 0.494211431217695}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.6577946768060836, "obj2": 0.26830693624226787}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8058612859695445}, {"determining": "Max( Max( CRS,DDR ),Min( RRS ,AMS ) )", "choosing": "Max( ( Min( MUM ,MUM ) - ( MUM - Max( MLU,Max( DS,( ( CS - RCSe ) * ( ( RCSe + MLU ) - Max( RCSe,RCSe ) ) ) ) ) ) ),( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5149921066824843}], "12": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( Max( Max( BR,( Const - BR ) ),( FirstVNF_RAM_Server - ( Max( FirstVNF_Mem_Server,AMS ) * ACS ) ) ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "Min( ( MUC - Max( ( ( RCSe / MUC ) * ( MUR / Max( ( RRSe / MUM ),( DS - MUM ) ) ) ),Max( MUM,MUR ) ) ) ,Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server * ( ( Max( Min( BR ,ARS ),RRS ) * ( Max( MDR,Const ) / ACS ) ) - PN ) ) ) ) ,Max( RRS,FirstVNF_RAM ) )", "choosing": "Min( ( MUC - Max( ( ( MUC / RCSe ) * ( MUR / RMSe ) ),Max( MUM,MUR ) ) ) ,Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,CRS ),Max( ( ARS / ( ( ( FirstVNF_RAM_Server + ARS ) + FirstVNF_Mem_Server ) * Const ) ),Const ) ) - Max( FirstVNF_RAM,( MDR * ( ( ( FirstVNF_RAM_Server + ARS ) + FirstVNF_Mem_Server ) * Const ) ) ) )", "choosing": "Min( ( Max( MUR,MUR ) * Max( MUR,MUR ) ) ,Max( RRSe,CS ) )", "obj1": 0.714828897338403, "obj2": 0.19456629474607043}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),( RCSe / MUR ) ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.7642585551330798, "obj2": 0.15791520095081782}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "Max( ( AMS / ARS ),( Max( BR,( FirstVNF_Mem / FirstVNF_CPU ) ) * DDR ) )", "choosing": "Min( ( MUC * ( Max( MUC,RMSe ) * ( Min( Min( ( MUR - CS ) ,( CS * MUC ) ) ,( Max( MLU,RMSe ) * MLU ) ) + DS ) ) ) ,Min( MUR ,( ( ( MUC * Min( MUR ,( MUR * ( RMSe - MUM ) ) ) ) + ( RMSe / ( RCSe / Min( MUR ,MUR ) ) ) ) + ( DS / RCSe ) ) ) )", "obj1": 0.4429657794676806, "obj2": 0.4245484956003772}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.6140684410646388, "obj2": 0.2900315585656603}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( ( RRSe - MUM ) - ( MLU - ( ( CS - ( DS * MLU ) ) * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.7661596958174905, "obj2": 0.13003215776958382}, {"determining": "( ( Const - FirstVNF_CPU ) - ( FirstVNF_RAM - Min( FirstVNF_CPU ,( ACS + DDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,( MUC / CS ) ) - Min( ( CS * RMSe ) ,( RRSe - MLU ) ) ) - RMSe ),Min( RMSe ,MUC ) )", "obj1": 0.7034220532319392, "obj2": 0.2164213106807925}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem_Server ) ,Max( PN,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - ACS ) * ( BR * FirstVNF_CPU_Server ) ) ) * ( ( Max( AMS,FirstVNF_Mem_Server ) / ( ACS * FirstVNF_CPU ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,( ( Min( ACS ,FirstVNF_RAM ) * ( DDR / ( Const + DDR ) ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) * Min( RCSe ,CS ) ) + Min( CS ,( RCSe / ( MUR / MUC ) ) ) )", "obj1": 0.3688212927756654, "obj2": 0.4582493853839971}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( MLU + ( RCSe * RCSe ) ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.252471908760652}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.9904942965779467, "obj2": 0.00303234692133487}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Max( ( Max( ACS,ARS ) - ( ARS - FirstVNF_Mem_Server ) ),MDR ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RRSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.17110266159695817, "obj2": 0.5971988512015968}, {"determining": "( ( BR + ARS ) + ( Max( ( ARS / AMS ),Const ) / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - ( ( MUC * Min( Max( ( MUC - DS ),( DS / MUR ) ) ,RRSe ) ) + DS ) ) ,Min( MLU ,( ( Max( MUR,MUM ) * ( RCSe - DS ) ) - ( RRSe + MLU ) ) ) ) )", "obj1": 0.15779467680608364, "obj2": 0.6085167814625785}, {"determining": "( ( Max( Min( ( FirstVNF_Mem * PN ) ,MDR ),Min( ( ( MDR / ARS ) * FirstVNF_RAM ) ,Min( DDR ,( PN * ( RRS - AMS ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( Const + MRS ),MDR ) ) )", "choosing": "( ( RCSe * Max( Min( DS ,( RMSe * MUC ) ),( RMSe - RRSe ) ) ) + ( DS + RCSe ) )", "obj1": 0.6844106463878327, "obj2": 0.252560251150511}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,Max( ( ( FirstVNF_Mem / FirstVNF_CPU ) / RRS ),FirstVNF_CPU ) ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( ( ( DS * CS ) + RMSe ) + MUC ) ) - DS ) ) )", "obj1": 0.155893536121673, "obj2": 0.6265100412894211}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) - ( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,AMS ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) ) )", "choosing": "Min( ( CS / DS ) ,( RRSe + ( ( ( MUC * RCSe ) + Max( MLU,( ( MUR + MLU ) - MLU ) ) ) + ( DS / ( ( MUC * RCSe ) + Max( MLU,( ( MUR + MLU ) - MLU ) ) ) ) ) ) )", "obj1": 0.4372623574144487, "obj2": 0.45310612715093745}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( PN + AMS ) - FirstVNF_CPU ) - ( ACS + CRS ) )", "choosing": "Max( ( ( ( MUC * RCSe ) + ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) ) / CS ),Min( RMSe ,MUC ) )", "obj1": 0.9315589353612167, "obj2": 0.03145856593701526}, {"determining": "( ( ACS - DDR ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + Max( MUC,MUC ) ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.9258555133079848, "obj2": 0.03362588105716414}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.6577946768060836, "obj2": 0.26830693624226787}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - MDR )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( ( CS - MUC ) * ( DS * RMSe ) ) ,( RRSe + MUC ) ) )", "obj1": 0.2832699619771863, "obj2": 0.494211431217695}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.6577946768060836, "obj2": 0.26830693624226787}, {"determining": "( ( Const - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * ( RCSe * Max( Min( DS ,( RMSe * CS ) ),( RMSe - RRSe ) ) ) ) - ( ( Min( Max( RMSe,MLU ) ,RMSe ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2878792813346567}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}], "13": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( RCSe * ( RCSe / MUR ) ) + MUR ) - ( ( RRSe - MUC ) + DS ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( BR,( Const - BR ) ),( FirstVNF_RAM_Server - ( Max( FirstVNF_Mem_Server,AMS ) * ACS ) ) ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "Min( ( MUC - Max( ( ( RCSe / MUC ) * ( MUR / Max( ( RRSe / MUM ),( DS - MUM ) ) ) ),Max( MUM,MUR ) ) ) ,Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.6140684410646388, "obj2": 0.2900315585656603}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( ( RRSe - MUM ) - ( MLU - ( ( CS - ( DS * MLU ) ) * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.7661596958174905, "obj2": 0.13003215776958382}, {"determining": "( ( Const - FirstVNF_CPU ) - ( FirstVNF_RAM - Min( FirstVNF_CPU ,( ACS + DDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,( MUC / CS ) ) - Min( ( CS * RMSe ) ,( RRSe - MLU ) ) ) - RMSe ),Min( RMSe ,MUC ) )", "obj1": 0.7034220532319392, "obj2": 0.2164213106807925}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( ( Max( Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ),Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( PN,( Max( FirstVNF_CPU,RRS ) + FirstVNF_RAM_Server ) ) ) ) ) - FirstVNF_Mem ) + ( DDR - Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( MUR / ( CS * Min( Min( MLU ,MUM ) ,( CS + RCSe ) ) ) ) - ( MUC + MLU ) ) - DS ) + ( DS - RMSe ) )", "obj1": 0.752851711026616, "obj2": 0.19453889948329464}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),( RCSe / MUR ) ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.7642585551330798, "obj2": 0.15791520095081782}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem_Server ) ,Max( PN,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - ACS ) * ( BR * FirstVNF_CPU_Server ) ) ) * ( ( Max( AMS,FirstVNF_Mem_Server ) / ( ACS * FirstVNF_CPU ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,( ( Min( ACS ,FirstVNF_RAM ) * ( DDR / ( Const + DDR ) ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) * Min( RCSe ,CS ) ) + Min( CS ,( RCSe / ( MUR / MUC ) ) ) )", "obj1": 0.3688212927756654, "obj2": 0.4582493853839971}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,CRS ),Max( ( ARS / ( ( ( FirstVNF_RAM_Server + ARS ) + FirstVNF_Mem_Server ) * Const ) ),Const ) ) - Max( FirstVNF_RAM,( MDR * ( ( ( FirstVNF_RAM_Server + ARS ) + FirstVNF_Mem_Server ) * Const ) ) ) )", "choosing": "Min( ( Max( MUR,MUR ) * Max( MUR,MUR ) ) ,Max( RRSe,CS ) )", "obj1": 0.714828897338403, "obj2": 0.19456629474607043}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( Min( FirstVNF_Mem ,AMS ) - Max( MDR,Const ) )", "choosing": "( ( RCSe * Max( Min( DS ,( MUR / CS ) ),Max( ( MLU + ( RCSe * RCSe ) ),Min( RCSe ,CS ) ) ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.252471908760652}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.9904942965779467, "obj2": 0.00303234692133487}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,Max( ( ( FirstVNF_Mem / FirstVNF_CPU ) / RRS ),FirstVNF_CPU ) ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( ( ( DS * CS ) + RMSe ) + MUC ) ) - DS ) ) )", "obj1": 0.155893536121673, "obj2": 0.6265100412894211}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,Max( ( ( PN - FirstVNF_RAM_Server ) + ( Min( Const ,( ( FirstVNF_CPU * ARS ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ),Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( MUC / MUC ) ,MUR ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.6673003802281369, "obj2": 0.26657021124264885}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8069499592098789}, {"determining": "( ( BR + ARS ) + ( Max( ( ARS / AMS ),Const ) / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - ( ( MUC * Min( Max( ( MUC - DS ),( DS / MUR ) ) ,RRSe ) ) + DS ) ) ,Min( MLU ,( ( Max( MUR,MUM ) * ( RCSe - DS ) ) - ( RRSe + MLU ) ) ) ) )", "obj1": 0.15779467680608364, "obj2": 0.6085167814625785}, {"determining": "( ( ACS - DDR ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + Max( MUC,MUC ) ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.9258555133079848, "obj2": 0.03362588105716414}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( ( ( PN + AMS ) - FirstVNF_CPU ) - ( ACS + CRS ) )", "choosing": "Max( ( ( ( MUC * RCSe ) + ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) ) / CS ),Min( RMSe ,MUC ) )", "obj1": 0.9315589353612167, "obj2": 0.03145856593701526}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - MDR )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( ( CS - MUC ) * ( DS * RMSe ) ) ,( RRSe + MUC ) ) )", "obj1": 0.2832699619771863, "obj2": 0.494211431217695}, {"determining": "( ( Const - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * ( RCSe * Max( Min( DS ,( RMSe * CS ) ),( RMSe - RRSe ) ) ) ) - ( ( Min( Max( RMSe,MLU ) ,RMSe ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2878792813346567}, {"determining": "( ( Max( Min( ( FirstVNF_Mem * PN ) ,MDR ),Min( ( ( MDR / ARS ) * FirstVNF_RAM ) ,Min( DDR ,( PN * ( RRS - AMS ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( Const + MRS ),MDR ) ) )", "choosing": "( ( RCSe * Max( Min( DS ,( RMSe * MUC ) ),( RMSe - RRSe ) ) ) + ( DS + RCSe ) )", "obj1": 0.6844106463878327, "obj2": 0.252560251150511}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.03612167300380228, "obj2": 0.8113385531672113}], "14": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( MRS ,( DDR + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( RCSe * ( RCSe / MUR ) ) + MUR ) - ( ( RRSe - MUC ) + DS ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.6140684410646388, "obj2": 0.2900315585656603}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( ( RRSe - MUM ) - ( MLU - ( ( CS - ( DS * MLU ) ) * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.7661596958174905, "obj2": 0.13003215776958382}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( ( Max( Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ),Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( PN,( Max( FirstVNF_CPU,RRS ) + FirstVNF_RAM_Server ) ) ) ) ) - FirstVNF_Mem ) + ( DDR - Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( MUR / ( CS * Min( Min( MLU ,MUM ) ,( CS + RCSe ) ) ) ) - ( MUC + MLU ) ) - DS ) + ( DS - RMSe ) )", "obj1": 0.752851711026616, "obj2": 0.19453889948329464}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),( RCSe / MUR ) ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.7642585551330798, "obj2": 0.15791520095081782}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem_Server ) ,Max( PN,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - ACS ) * ( BR * FirstVNF_CPU_Server ) ) ) * ( ( Max( AMS,FirstVNF_Mem_Server ) / ( ACS * FirstVNF_CPU ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,( ( Min( ACS ,FirstVNF_RAM ) * ( DDR / ( Const + DDR ) ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) * Min( RCSe ,CS ) ) + Min( CS ,( RCSe / ( MUR / MUC ) ) ) )", "obj1": 0.3688212927756654, "obj2": 0.4582493853839971}, {"determining": "( ( Const - FirstVNF_CPU ) - ( FirstVNF_RAM - Min( FirstVNF_CPU ,( ACS + DDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,( MUC / CS ) ) - Min( ( CS * RMSe ) ,( RRSe - MLU ) ) ) - RMSe ),Min( RMSe ,MUC ) )", "obj1": 0.7034220532319392, "obj2": 0.2164213106807925}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,CRS ),Max( ( ARS / ( ( ( FirstVNF_RAM_Server + ARS ) + FirstVNF_Mem_Server ) * Const ) ),Const ) ) - Max( FirstVNF_RAM,( MDR * ( ( ( FirstVNF_RAM_Server + ARS ) + FirstVNF_Mem_Server ) * Const ) ) ) )", "choosing": "Min( ( Max( MUR,MUR ) * Max( MUR,MUR ) ) ,Max( RRSe,CS ) )", "obj1": 0.714828897338403, "obj2": 0.19456629474607043}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "( ( ( ( MUC * ( MLU + CS ) ) + RRSe ) * RCSe ) + ( CS + ( MUR * ( RMSe / ( ( DS * ( ( MUC - RCSe ) * MUM ) ) / CS ) ) ) ) )", "obj1": 0.6939163498098859, "obj2": 0.24711507811695932}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "( ( ( ( MUC * ( MLU + CS ) ) + RRSe ) * RCSe ) + ( CS + ( MUR * ( RMSe / ( ( DS * ( ( MUC - RCSe ) * MUM ) ) / CS ) ) ) ) )", "obj1": 0.6634980988593155, "obj2": 0.2705054721354842}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + ( RCSe / MUR ) ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7801600296493394}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.9904942965779467, "obj2": 0.00303234692133487}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8069499592098789}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( Max( RRS,( DDR - ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( RCSe * ( RCSe / MUR ) ) + MUR ) - ( ( RRSe - MUC ) + DS ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.6673003802281369, "obj2": 0.25794262756167335}, {"determining": "( ( ( PN + AMS ) - FirstVNF_CPU ) - ( ACS + CRS ) )", "choosing": "Max( ( ( ( MUC * RCSe ) + ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) ) / CS ),Min( RMSe ,MUC ) )", "obj1": 0.9315589353612167, "obj2": 0.03145856593701526}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - MDR )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( ( CS - MUC ) * ( DS * RMSe ) ) ,( RRSe + MUC ) ) )", "obj1": 0.2832699619771863, "obj2": 0.494211431217695}, {"determining": "( ( Const - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * ( RCSe * Max( Min( DS ,( RMSe * CS ) ),( RMSe - RRSe ) ) ) ) - ( ( Min( Max( RMSe,MLU ) ,RMSe ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2878792813346567}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.043578757273991346}], "15": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( BR ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - Max( AMS,FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( MUM + MLU ) - ( RMSe + ( Max( RRSe,( DS * RCSe ) ) - RCSe ) ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( DS / MUC ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RRSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( MRS ,( DDR + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.6140684410646388, "obj2": 0.2900315585656603}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( ( RRSe - MUM ) - ( MLU - ( ( CS - ( DS * MLU ) ) * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.7661596958174905, "obj2": 0.13003215776958382}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( ( Max( Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ),Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( PN,( Max( FirstVNF_CPU,RRS ) + FirstVNF_RAM_Server ) ) ) ) ) - FirstVNF_Mem ) + ( DDR - Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( MUR / ( CS * Min( Min( MLU ,MUM ) ,( CS + RCSe ) ) ) ) - ( MUC + MLU ) ) - DS ) + ( DS - RMSe ) )", "obj1": 0.752851711026616, "obj2": 0.19453889948329464}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),( RCSe / MUR ) ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.7642585551330798, "obj2": 0.15791520095081782}, {"determining": "( ( Const - FirstVNF_CPU ) - ( FirstVNF_RAM - Min( FirstVNF_CPU ,( ACS + DDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,( MUC / CS ) ) - Min( ( CS * RMSe ) ,( RRSe - MLU ) ) ) - RMSe ),Min( RMSe ,MUC ) )", "obj1": 0.7034220532319392, "obj2": 0.2164213106807925}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem_Server ) ,Max( PN,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - ACS ) * ( BR * FirstVNF_CPU_Server ) ) ) * ( ( Max( AMS,FirstVNF_Mem_Server ) / ( ACS * FirstVNF_CPU ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,( ( Min( ACS ,FirstVNF_RAM ) * ( DDR / ( Const + DDR ) ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) * Min( RCSe ,CS ) ) + Min( CS ,( RCSe / ( MUR / MUC ) ) ) )", "obj1": 0.3688212927756654, "obj2": 0.4582493853839971}, {"determining": "( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - ACS ) - Max( PN,MRS ) ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( RMSe + ( CS / CS ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.237680669467673}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,CRS ),Max( ( ARS / ( ( ( FirstVNF_RAM_Server + ARS ) + FirstVNF_Mem_Server ) * Const ) ),Const ) ) - Max( FirstVNF_RAM,( MDR * ( ( ( FirstVNF_RAM_Server + ARS ) + FirstVNF_Mem_Server ) * Const ) ) ) )", "choosing": "Min( ( Max( MUR,MUR ) * Max( MUR,MUR ) ) ,Max( RRSe,CS ) )", "obj1": 0.714828897338403, "obj2": 0.19456629474607043}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8069499592098789}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( Max( RRS,( DDR - ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( RCSe * ( RCSe / MUR ) ) + MUR ) - ( ( RRSe - MUC ) + DS ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.6673003802281369, "obj2": 0.25794262756167335}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.9904942965779467, "obj2": 0.00303234692133487}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + ( RCSe / MUR ) ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7801600296493394}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.043578757273991346}, {"determining": "( ( ( PN + AMS ) - FirstVNF_CPU ) - ( ACS + CRS ) )", "choosing": "Max( ( ( ( MUC * RCSe ) + ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) ) / CS ),Min( RMSe ,MUC ) )", "obj1": 0.9315589353612167, "obj2": 0.03145856593701526}, {"determining": "( ( Const - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * ( RCSe * Max( Min( DS ,( RMSe * CS ) ),( RMSe - RRSe ) ) ) ) - ( ( Min( Max( RMSe,MLU ) ,RMSe ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2878792813346567}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( RCSe * ( RCSe / MUR ) ) + MUR ) - ( ( RRSe - MUC ) + DS ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.9296577946768061, "obj2": 0.03199391106613096}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.6577946768060836, "obj2": 0.26830693624226787}], "16": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( BR ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - Max( AMS,FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( MUR / ( ( ( ( RCSe / MUR ) * MLU ) + MUR ) - Min( Min( ( DS / RRSe ) ,( RRSe / RRSe ) ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( BR ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - Max( AMS,FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( MUM + MLU ) - ( RMSe + ( Max( RRSe,( DS * RCSe ) ) - RCSe ) ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( DS / MUC ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RRSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( FirstVNF_CPU + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),Max( Max( ( DS / DS ),( DS + DS ) ),Min( Min( RRSe ,MUM ) ,( MUR / MLU ) ) ) )", "obj1": 0.4296577946768061, "obj2": 0.45412062072256865}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.6140684410646388, "obj2": 0.2900315585656603}, {"determining": "( Max( ( FirstVNF_RAM - Min( FirstVNF_CPU ,ARS ) ),PN ) + ( CRS - Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( ( ( RRSe - MUM ) - ( MLU - ( ( CS - ( DS * MLU ) ) * MUC ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.7661596958174905, "obj2": 0.13003215776958382}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( ( Max( Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ),Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( PN,( Max( FirstVNF_CPU,RRS ) + FirstVNF_RAM_Server ) ) ) ) ) - FirstVNF_Mem ) + ( DDR - Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( MUR / ( CS * Min( Min( MLU ,MUM ) ,( CS + RCSe ) ) ) ) - ( MUC + MLU ) ) - DS ) + ( DS - RMSe ) )", "obj1": 0.752851711026616, "obj2": 0.19453889948329464}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),( RCSe / MUR ) ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.7642585551330798, "obj2": 0.15791520095081782}, {"determining": "( ( Const - FirstVNF_CPU ) - ( FirstVNF_RAM - Min( FirstVNF_CPU ,( ACS + DDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,( MUC / CS ) ) - Min( ( CS * RMSe ) ,( RRSe - MLU ) ) ) - RMSe ),Min( RMSe ,MUC ) )", "obj1": 0.7034220532319392, "obj2": 0.2164213106807925}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem_Server ) ,Max( PN,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - ACS ) * ( BR * FirstVNF_CPU_Server ) ) ) * ( ( Max( AMS,FirstVNF_Mem_Server ) / ( ACS * FirstVNF_CPU ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,( ( Min( ACS ,FirstVNF_RAM ) * ( DDR / ( Const + DDR ) ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) * Min( RCSe ,CS ) ) + Min( CS ,( RCSe / ( MUR / MUC ) ) ) )", "obj1": 0.3688212927756654, "obj2": 0.4582493853839971}, {"determining": "( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - ACS ) - Max( PN,MRS ) ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( RMSe + ( CS / CS ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.237680669467673}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,CRS ),Max( ( ARS / ( ( ( FirstVNF_RAM_Server + ARS ) + FirstVNF_Mem_Server ) * Const ) ),Const ) ) - Max( FirstVNF_RAM,( MDR * ( ( ( FirstVNF_RAM_Server + ARS ) + FirstVNF_Mem_Server ) * Const ) ) ) )", "choosing": "Min( ( Max( MUR,MUR ) * Max( MUR,MUR ) ) ,Max( RRSe,CS ) )", "obj1": 0.714828897338403, "obj2": 0.19456629474607043}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( Max( RRS,( DDR - ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( RCSe * ( RCSe / MUR ) ) + MUR ) - ( ( RRSe - MUC ) + DS ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.6673003802281369, "obj2": 0.25794262756167335}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.9904942965779467, "obj2": 0.00303234692133487}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + ( RCSe / MUR ) ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7801600296493394}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + MRS ) ) ) )", "choosing": "( ( ( ( ( ( MUR - DS ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.045627376425855515, "obj2": 0.8052832921134356}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.043578757273991346}, {"determining": "( ( ( PN + AMS ) - FirstVNF_CPU ) - ( ACS + CRS ) )", "choosing": "Max( ( ( ( MUC * RCSe ) + ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) ) / CS ),Min( RMSe ,MUC ) )", "obj1": 0.9315589353612167, "obj2": 0.03145856593701526}, {"determining": "( ( Const - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * ( RCSe * Max( Min( DS ,( RMSe * CS ) ),( RMSe - RRSe ) ) ) ) - ( ( Min( Max( RMSe,MLU ) ,RMSe ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2878792813346567}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( RCSe * ( RCSe / MUR ) ) + MUR ) - ( ( RRSe - MUC ) + DS ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.9296577946768061, "obj2": 0.03199391106613096}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.6577946768060836, "obj2": 0.26830693624226787}], "17": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( BR ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - Max( AMS,FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( MUM + MLU ) - ( RMSe + ( Max( RRSe,( DS * RCSe ) ) - RCSe ) ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( DS / MUC ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RRSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( BR ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - Max( AMS,FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( MUR / ( ( ( ( RCSe / MUR ) * MLU ) + MUR ) - Min( Min( ( DS / RRSe ) ,( RRSe / RRSe ) ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( PN / ARS ) - MDR )", "choosing": "( ( ( ( MLU + MUC ) / DS ) / MUM ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12109454686178768}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - ACS ) - Max( PN,MRS ) ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( RMSe + ( CS / CS ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.237680669467673}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.6140684410646388, "obj2": 0.2900315585656603}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( Max( Min( FirstVNF_CPU_Server ,ARS ),FirstVNF_RAM_Server ) - ( ACS * FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / Max( CS,RRSe ) )", "obj1": 0.6387832699619772, "obj2": 0.27912394606536606}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.42620607352240264}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.40019147716615494}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) )", "obj1": 0.6520912547528517, "obj2": 0.2400637888229596}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( Max( RRS,( ( FirstVNF_CPU / RRS ) + MRS ) ) - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( MUR - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * MUR ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6602868697331661}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( ( Min( ( AMS + FirstVNF_Mem_Server ) ,Max( PN,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM - ACS ) * ( BR * FirstVNF_CPU_Server ) ) ) * ( ( Max( AMS,FirstVNF_Mem_Server ) / ( ACS * FirstVNF_CPU ) ) * Min( ( FirstVNF_CPU + FirstVNF_RAM ) ,( ( Min( ACS ,FirstVNF_RAM ) * ( DDR / ( Const + DDR ) ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) * Min( RCSe ,CS ) ) + Min( CS ,( RCSe / ( MUR / MUC ) ) ) )", "obj1": 0.3688212927756654, "obj2": 0.4582493853839971}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.9904942965779467, "obj2": 0.00303234692133487}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.3897338403041825, "obj2": 0.45084321575552666}, {"determining": "( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + ( RCSe / MUR ) ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7801600296493394}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + MRS ) ) ) )", "choosing": "( ( ( ( ( ( MUR - DS ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.045627376425855515, "obj2": 0.8052832921134356}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( ( Const - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * ( RCSe * Max( Min( DS ,( RMSe * CS ) ),( RMSe - RRSe ) ) ) ) - ( ( Min( Max( RMSe,MLU ) ,RMSe ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2878792813346567}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.043578757273991346}, {"determining": "( Max( Max( ( ( FirstVNF_RAM * FirstVNF_CPU ) - Max( ACS,( CRS - RRS ) ) ),MDR ),AMS ) + ( ( FirstVNF_RAM_Server / MRS ) / ( ( Const - ARS ) - Max( PN,( ( FirstVNF_RAM_Server / Max( CRS,CRS ) ) * ( FirstVNF_CPU_Server + Max( BR,MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,RRSe ) / ( CS - MUR ) ) * MUM ) / ( ( ( Max( CS,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) + ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( DS * RMSe ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9334600760456274, "obj2": 0.02389316098319357}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.3897338403041825, "obj2": 0.45084321575552666}, {"determining": "( ( ( ( ( RRS / ( ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU ) / Min( ( MDR - FirstVNF_CPU_Server ) ,DDR ) ) ) - Max( MRS,Min( DDR ,Max( ACS,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) + Max( RRS,MRS ) ) - MDR )", "choosing": "Min( ( ( RCSe + Max( MUR,( RCSe + ( MUM + CS ) ) ) ) + MLU ) ,( MUC + ( ( RRSe - Max( Max( MUM,( ( MUM + CS ) + ( MLU - RCSe ) ) ),DS ) ) + RCSe ) ) )", "obj1": 0.9277566539923955, "obj2": 0.033936864201171174}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),CRS ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( ( ( ( MUR - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ),MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.049429657794676805, "obj2": 0.8047130320517402}], "18": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( BR ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - Max( AMS,FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( BR ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - Max( AMS,FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( MUM + MLU ) - ( RMSe + ( Max( RRSe,( DS * RCSe ) ) - RCSe ) ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( DS / MUC ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RRSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( PN / ARS ) - MDR )", "choosing": "( ( ( ( MLU + MUC ) / DS ) / MUM ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12109454686178768}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - ACS ) - Max( PN,MRS ) ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( RMSe + ( CS / CS ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.237680669467673}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.42620607352240264}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.6140684410646388, "obj2": 0.2900315585656603}, {"determining": "( ( Const - BR ) - ( ( ( ( ( CRS - MDR ) / MDR ) * FirstVNF_CPU_Server ) + Const ) - AMS ) )", "choosing": "Max( Max( ( CS * Max( CS,( ( DS - RMSe ) * Min( MLU ,( RRSe * CS ) ) ) ) ),MUR ),( RMSe / CS ) )", "obj1": 0.35551330798479086, "obj2": 0.4502248612471985}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.40019147716615494}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( ARS - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( DS - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * RCSe ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7424525406409137}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( Const - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) ) ),( RMSe / CS ) )", "obj1": 0.6273764258555133, "obj2": 0.2588293578184991}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( Max( RRS,( ( FirstVNF_CPU / RRS ) + MRS ) ) - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( MUR - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * MUR ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6602868697331661}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( ( ( Max( PN,RRS ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( RRSe,MUR ) / ( CS * MLU ) ) - ( ( ( MUR * MLU ) - MUC ) * ( DS * RMSe ) ) )", "obj1": 0.9904942965779467, "obj2": 0.00303234692133487}, {"determining": "( ( Const - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * ( RCSe * Max( Min( DS ,( RMSe * CS ) ),( RMSe - RRSe ) ) ) ) - ( ( Min( Max( RMSe,MLU ) ,RMSe ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2878792813346567}, {"determining": "( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + ( RCSe / MUR ) ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7801600296493394}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) )", "obj1": 0.6406844106463878, "obj2": 0.25321682444106014}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( Max( Max( ( ( FirstVNF_RAM * FirstVNF_CPU ) - Max( ACS,( CRS - RRS ) ) ),MDR ),AMS ) + ( ( FirstVNF_RAM_Server / MRS ) / ( ( Const - ARS ) - Max( PN,( ( FirstVNF_RAM_Server / Max( CRS,CRS ) ) * ( FirstVNF_CPU_Server + Max( BR,MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,RRSe ) / ( CS - MUR ) ) * MUM ) / ( ( ( Max( CS,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) + ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( DS * RMSe ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9334600760456274, "obj2": 0.02389316098319357}, {"determining": "( ( ( ( ( RRS / ( ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU ) / Min( ( MDR - FirstVNF_CPU_Server ) ,DDR ) ) ) - Max( MRS,Min( DDR ,Max( ACS,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) + Max( RRS,MRS ) ) - MDR )", "choosing": "Min( ( ( RCSe + Max( MUR,( RCSe + ( MUM + CS ) ) ) ) + MLU ) ,( MUC + ( ( RRSe - Max( Max( MUM,( ( MUM + CS ) + ( MLU - RCSe ) ) ),DS ) ) + RCSe ) ) )", "obj1": 0.9277566539923955, "obj2": 0.033936864201171174}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - ( FirstVNF_Mem * ( ARS * DDR ) ) )", "choosing": "( ( RCSe * MUM ) * Max( Min( CS ,MUR ),( RMSe - MUR ) ) )", "obj1": 0.9543726235741445, "obj2": 0.019803261672392054}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) )", "obj1": 0.6520912547528517, "obj2": 0.2400637888229596}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.043578757273991346}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04182509505703422, "obj2": 0.8079857643878496}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),CRS ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( ( ( ( MUR - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ),MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.049429657794676805, "obj2": 0.8047130320517402}], "19": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( BR ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( FirstVNF_RAM / ACS ) ) ) * Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RMSe + MLU ) - ( RMSe + ( Max( DS,( DS * RCSe ) ) - RCSe ) ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( ( RMSe * RMSe ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RRSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( BR ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - Max( AMS,FirstVNF_Mem ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( PN / ARS ) - MDR )", "choosing": "( ( ( ( MLU + MUC ) / DS ) / MUM ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12109454686178768}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( Max( ( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ),Max( Max( BR,CRS ),Const ) ) - ( CRS - ( MRS - FirstVNF_RAM ) ) )", "choosing": "Min( MUM ,( MUM + CS ) )", "obj1": 0.6939163498098859, "obj2": 0.22420727799702697}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.42620607352240264}, {"determining": "Min( ( ( ( ACS - BR ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.6140684410646388, "obj2": 0.2900315585656603}, {"determining": "( ( Const - BR ) - ( ( ( ( ( CRS - MDR ) / MDR ) * FirstVNF_CPU_Server ) + Const ) - AMS ) )", "choosing": "Max( Max( ( CS * Max( CS,( ( DS - RMSe ) * Min( MLU ,( RRSe * CS ) ) ) ) ),MUR ),( RMSe / CS ) )", "obj1": 0.35551330798479086, "obj2": 0.4502248612471985}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.40019147716615494}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( ARS - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( DS - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * RCSe ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7424525406409137}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( Const - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) ) ),( RMSe / CS ) )", "obj1": 0.6273764258555133, "obj2": 0.2588293578184991}, {"determining": "( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - ACS ) - Max( PN,MRS ) ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( RMSe + ( CS / CS ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.237680669467673}, {"determining": "( Max( RRS,( ( FirstVNF_CPU / RRS ) + MRS ) ) - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( MUR - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * MUR ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6602868697331661}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( ( Const - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * ( RCSe * Max( Min( DS ,( RMSe * CS ) ),( RMSe - RRSe ) ) ) ) - ( ( Min( Max( RMSe,MLU ) ,RMSe ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2878792813346567}, {"determining": "( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + ( RCSe / MUR ) ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7801600296493394}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( ( ( ( ( RRS / ( ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU ) / Min( ( MDR - FirstVNF_CPU_Server ) ,DDR ) ) ) - Max( MRS,Min( DDR ,Max( ACS,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) + Max( RRS,MRS ) ) - MDR )", "choosing": "Min( ( ( RCSe + Max( MUR,( RCSe + ( MUM + CS ) ) ) ) + MLU ) ,( MUC + ( ( RRSe - Max( Max( MUM,( ( MUM + CS ) + ( MLU - RCSe ) ) ),DS ) ) + RCSe ) ) )", "obj1": 0.9277566539923955, "obj2": 0.033936864201171174}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "( ( ( DDR - Max( ( FirstVNF_CPU_Server * MDR ),Min( ( Min( BR ,DDR ) * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) - ( MDR + DDR ) ) + ( ( FirstVNF_RAM - Max( FirstVNF_CPU,Max( ( DDR / FirstVNF_CPU ),Max( BR,FirstVNF_CPU ) ) ) ) + PN ) )", "choosing": "( ( RCSe - CS ) / ( ( MUC - RRSe ) / ( RMSe - ( ( RRSe + MUM ) - Max( ( DS + ( ( MUC - RCSe ) * MUM ) ),RCSe ) ) ) ) )", "obj1": 0.9885931558935361, "obj2": 0.003573037261492455}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) ) )", "obj1": 0.3269961977186312, "obj2": 0.48101541281397875}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) )", "obj1": 0.6520912547528517, "obj2": 0.2400637888229596}, {"determining": "( Max( Max( ( ( FirstVNF_RAM * FirstVNF_CPU ) - Max( ACS,( CRS - RRS ) ) ),MDR ),AMS ) + ( ( FirstVNF_RAM_Server / MRS ) / ( ( Const - ARS ) - Max( PN,( ( FirstVNF_RAM_Server / Max( CRS,CRS ) ) * ( FirstVNF_CPU_Server + Max( BR,MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,RRSe ) / ( CS - MUR ) ) * MUM ) / ( ( ( Max( CS,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) + ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( DS * RMSe ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9334600760456274, "obj2": 0.02389316098319357}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.043578757273991346}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04182509505703422, "obj2": 0.8079857643878496}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * Max( ( CS * RRSe ),MUR ) ),MUR ),( RMSe / CS ) )", "obj1": 0.6425855513307985, "obj2": 0.25159134786270226}], "20": [{"determining": "( ( CRS - Min( Min( CRS ,FirstVNF_CPU ) ,ACS ) ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( RCSe / ( Max( Max( MUR,RCSe ),( MLU / MUC ) ) - MLU ) ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( BR ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( FirstVNF_RAM / ACS ) ) ) * Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RMSe + MLU ) - ( RMSe + ( Max( DS,( DS * RCSe ) ) - RCSe ) ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( ( RMSe * RMSe ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RRSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( PN / ARS ) - MDR )", "choosing": "( ( ( ( MLU + MUC ) / DS ) / MUM ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12109454686178768}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( Max( ( MRS / FirstVNF_RAM_Server ),( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ) ) * ACS ) ) )", "choosing": "( ( ( MLU / DS ) / MUM ) - ( ( RCSe - ( MUR * RCSe ) ) / ( MUC * MLU ) ) )", "obj1": 0.5570342205323194, "obj2": 0.24479116127691206}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( Max( ( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ),Max( Max( BR,CRS ),Const ) ) - ( CRS - ( MRS - FirstVNF_RAM ) ) )", "choosing": "Min( MUM ,( MUM + CS ) )", "obj1": 0.6939163498098859, "obj2": 0.22420727799702697}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) )", "obj1": 0.6520912547528517, "obj2": 0.2400637888229596}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.42620607352240264}, {"determining": "( ( Const - BR ) - ( ( ( ( ( CRS - MDR ) / MDR ) * FirstVNF_CPU_Server ) + Const ) - AMS ) )", "choosing": "Max( Max( ( CS * Max( CS,( ( DS - RMSe ) * Min( MLU ,( RRSe * CS ) ) ) ) ),MUR ),( RMSe / CS ) )", "obj1": 0.35551330798479086, "obj2": 0.4502248612471985}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.40019147716615494}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( ARS - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( DS - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * RCSe ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7424525406409137}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) ) )", "obj1": 0.3269961977186312, "obj2": 0.48101541281397875}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - ACS ) - Max( PN,MRS ) ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( RMSe + ( CS / CS ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.237680669467673}, {"determining": "( Max( RRS,( ( FirstVNF_CPU / RRS ) + MRS ) ) - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( MUR - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * MUR ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6602868697331661}, {"determining": "( Max( Max( ( ( FirstVNF_RAM * FirstVNF_CPU ) - Max( ACS,( CRS - RRS ) ) ),MDR ),AMS ) + ( ( FirstVNF_RAM_Server / MRS ) / ( ( Const - ARS ) - Max( PN,( ( FirstVNF_RAM_Server / Max( CRS,CRS ) ) * ( FirstVNF_CPU_Server + Max( BR,MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,RRSe ) / ( CS - MUR ) ) * MUM ) / ( ( ( Max( CS,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) + ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( DS * RMSe ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9334600760456274, "obj2": 0.02389316098319357}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + ( RCSe / MUR ) ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7801600296493394}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( ( ( ( ( RRS / ( ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU ) / Min( ( MDR - FirstVNF_CPU_Server ) ,DDR ) ) ) - Max( MRS,Min( DDR ,Max( ACS,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) + Max( RRS,MRS ) ) - MDR )", "choosing": "Min( ( ( RCSe + Max( MUR,( RCSe + ( MUM + CS ) ) ) ) + MLU ) ,( MUC + ( ( RRSe - Max( Max( MUM,( ( MUM + CS ) + ( MLU - RCSe ) ) ),DS ) ) + RCSe ) ) )", "obj1": 0.9277566539923955, "obj2": 0.033936864201171174}, {"determining": "( ( ( DDR - Max( ( FirstVNF_CPU_Server * MDR ),Min( ( Min( BR ,DDR ) * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) - ( MDR + DDR ) ) + ( ( FirstVNF_RAM - Max( FirstVNF_CPU,Max( ( DDR / FirstVNF_CPU ),Max( BR,FirstVNF_CPU ) ) ) ) + PN ) )", "choosing": "( ( RCSe - CS ) / ( ( MUC - RRSe ) / ( RMSe - ( ( RRSe + MUM ) - Max( ( DS + ( ( MUC - RCSe ) * MUM ) ),RCSe ) ) ) ) )", "obj1": 0.9885931558935361, "obj2": 0.003573037261492455}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.043578757273991346}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04182509505703422, "obj2": 0.8079857643878496}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.057034220532319393, "obj2": 0.7989987059528266}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,RRS ) + FirstVNF_Mem_Server ) / ( RRS - ( CRS - MDR ) ) ) / FirstVNF_RAM_Server ) - Min( ( ARS * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) )", "choosing": "Max( ( MUC / Min( RMSe ,DS ) ),( ( MUC + RCSe ) - RCSe ) )", "obj1": 0.03802281368821293, "obj2": 0.8172729648697468}, {"determining": "( ( DDR - Max( ( FirstVNF_CPU_Server * MDR ),Min( ( ( ( MRS - FirstVNF_RAM_Server ) * BR ) * Const ) ,FirstVNF_CPU ) ) ) + ( Const * ( AMS / ( ACS - CRS ) ) ) )", "choosing": "( ( ( Max( Min( MUR ,( MLU + MUC ) ),MUR ) / ( DS * DS ) ) * RRSe ) + ( MUC / MUC ) )", "obj1": 0.039923954372623575, "obj2": 0.8148846574623718}], "21": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RMSe + MLU ) - ( RMSe + ( Max( RRSe,( DS * RCSe ) ) - RCSe ) ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( ( RMSe * RMSe ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( DS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( Min( CRS ,FirstVNF_CPU ) ,ACS ) ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( RCSe / ( Max( Max( MUR,RCSe ),( MLU / MUC ) ) - MLU ) ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( PN / ARS ) - MDR )", "choosing": "( ( ( ( MLU + MUC ) / DS ) / MUM ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12109454686178768}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( Max( ( MRS / FirstVNF_RAM_Server ),( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ) ) * ACS ) ) )", "choosing": "( ( ( MLU / DS ) / MUM ) - ( ( RCSe - ( MUR * RCSe ) ) / ( MUC * MLU ) ) )", "obj1": 0.5570342205323194, "obj2": 0.24479116127691206}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( Max( ( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ),Max( Max( BR,CRS ),Const ) ) - ( CRS - ( MRS - FirstVNF_RAM ) ) )", "choosing": "Min( MUM ,( MUM + CS ) )", "obj1": 0.6939163498098859, "obj2": 0.22420727799702697}, {"determining": "( ( Max( ( AMS * FirstVNF_CPU ),Min( ( Min( PN ,AMS ) - Max( AMS,RRS ) ) ,( Const - ( Max( RRS,FirstVNF_RAM ) * ( MDR + ARS ) ) ) ) ) - FirstVNF_Mem ) + Max( PN,Max( ( ARS * MDR ),( MRS + ( ACS - ( ARS * ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,MLU ) + ( MUM - MLU ) ) / ( ( ( RCSe / RCSe ) / ( ( ( RMSe * CS ) - Min( RCSe ,MUM ) ) / RRSe ) ) + RRSe ) ) * ( ( RMSe * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.49429657794676807, "obj2": 0.3738752603394373}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) )", "obj1": 0.6520912547528517, "obj2": 0.2400637888229596}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.42620607352240264}, {"determining": "( ( Const - BR ) - ( ( ( ( ( CRS - MDR ) / MDR ) * FirstVNF_CPU_Server ) + Const ) - AMS ) )", "choosing": "Max( Max( ( CS * Max( CS,( ( DS - RMSe ) * Min( MLU ,( RRSe * CS ) ) ) ) ),MUR ),( RMSe / CS ) )", "obj1": 0.35551330798479086, "obj2": 0.4502248612471985}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.40019147716615494}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( ARS - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( DS - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * RCSe ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7424525406409137}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) ) )", "obj1": 0.3269961977186312, "obj2": 0.48101541281397875}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - ACS ) - Max( PN,MRS ) ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( RMSe + ( CS / CS ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.237680669467673}, {"determining": "( Max( RRS,( ( FirstVNF_CPU / RRS ) + MRS ) ) - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( MUR - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * MUR ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6602868697331661}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + ( RCSe / MUR ) ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7801600296493394}, {"determining": "( Max( Max( ( ( FirstVNF_RAM * FirstVNF_CPU ) - Max( ACS,( CRS - RRS ) ) ),MDR ),AMS ) + ( ( FirstVNF_RAM_Server / MRS ) / ( ( Const - ARS ) - Max( PN,( ( FirstVNF_RAM_Server / Max( CRS,CRS ) ) * ( FirstVNF_CPU_Server + Max( BR,MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,RRSe ) / ( CS - MUR ) ) * MUM ) / ( ( ( Max( CS,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) + ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( DS * RMSe ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9334600760456274, "obj2": 0.02389316098319357}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.06273764258555133, "obj2": 0.7958555906740966}, {"determining": "( ( ( ( ( RRS / ( ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU ) / Min( ( MDR - FirstVNF_CPU_Server ) ,DDR ) ) ) - Max( MRS,Min( DDR ,Max( ACS,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) + Max( RRS,MRS ) ) - MDR )", "choosing": "Min( ( ( RCSe + Max( MUR,( RCSe + ( MUM + CS ) ) ) ) + MLU ) ,( MUC + ( ( RRSe - Max( Max( MUM,( ( MUM + CS ) + ( MLU - RCSe ) ) ),DS ) ) + RCSe ) ) )", "obj1": 0.9277566539923955, "obj2": 0.033936864201171174}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( DDR * ACS ) ) )", "choosing": "( Min( ( ( MUC / ( ( ( DS + RRSe ) / ( RRSe / DS ) ) - ( MLU / ( RRSe + RCSe ) ) ) ) - MLU ) ,( MLU - ( MUR + MLU ) ) ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.9581749049429658, "obj2": 0.017769134633828326}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.043578757273991346}, {"determining": "( ( ( Max( FirstVNF_CPU,Max( ( DDR / FirstVNF_CPU ),Max( PN,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "Min( ( DS / ( MLU + RRSe ) ) ,Min( RMSe ,( DS + MLU ) ) )", "obj1": 0.9847908745247148, "obj2": 0.013212493435838604}, {"determining": "( ( ( Max( PN,RRS ) * ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) - ( ACS * FirstVNF_Mem ) ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - Max( MUR,MUM ) ) - DS ) ) )", "obj1": 0.9638783269961977, "obj2": 0.013832857799301764}, {"determining": "( ( PN / ARS ) - Min( Max( Max( ( FirstVNF_RAM_Server + AMS ),PN ),DDR ) ,( Max( ( MRS / FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) * ACS ) ) )", "choosing": "( ( ( MLU / DS ) * MUM ) - Min( ( CS * MUM ) ,( ( ( ( ( MUM - Max( RMSe,RCSe ) ) / RRSe ) * ( ( RCSe - ( MUR * RCSe ) ) / ( MUC * MLU ) ) ) + MUR ) - RRSe ) ) )", "obj1": 0.03802281368821293, "obj2": 0.8140287465453366}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8030137833124784}], "22": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server + ACS ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( MRS ,Max( ( ( PN - FirstVNF_RAM_Server ) + ( Min( Const ,( ( RRS * ARS ) - RRS ) ) - MDR ) ),( ( MRS / Max( ARS,( ( MRS / MDR ) / FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( MUR / ( ( ( ( DS / MUR ) * MLU ) + MUR ) - Min( ( MUM / DS ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RMSe + MLU ) - ( RMSe + ( Max( RRSe,( DS * RCSe ) ) - RCSe ) ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( ( RMSe * RMSe ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( DS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( PN / ARS ) - MDR )", "choosing": "( ( ( ( MLU + MUC ) / DS ) / MUM ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12109454686178768}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( Max( ( MRS / FirstVNF_RAM_Server ),( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ) ) * ACS ) ) )", "choosing": "( ( ( MLU / DS ) / MUM ) - ( ( RCSe - ( MUR * RCSe ) ) / ( MUC * MLU ) ) )", "obj1": 0.5570342205323194, "obj2": 0.24479116127691206}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( Max( ( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ),Max( Max( BR,CRS ),Const ) ) - ( CRS - ( MRS - FirstVNF_RAM ) ) )", "choosing": "Min( MUM ,( MUM + CS ) )", "obj1": 0.6939163498098859, "obj2": 0.22420727799702697}, {"determining": "( ( Max( ( AMS * FirstVNF_CPU ),Min( ( Min( PN ,AMS ) - Max( AMS,RRS ) ) ,( Const - ( Max( RRS,FirstVNF_RAM ) * ( MDR + ARS ) ) ) ) ) - FirstVNF_Mem ) + Max( PN,Max( ( ARS * MDR ),( MRS + ( ACS - ( ARS * ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,MLU ) + ( MUM - MLU ) ) / ( ( ( RCSe / RCSe ) / ( ( ( RMSe * CS ) - Min( RCSe ,MUM ) ) / RRSe ) ) + RRSe ) ) * ( ( RMSe * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.49429657794676807, "obj2": 0.3738752603394373}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) )", "obj1": 0.6520912547528517, "obj2": 0.2400637888229596}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.42620607352240264}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( ( Max( DDR,( FirstVNF_CPU_Server / ( MRS + FirstVNF_RAM_Server ) ) ) + ( BR + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) * ( CRS * ( FirstVNF_RAM + ARS ) ) )", "choosing": "( ( ( ( RMSe * Max( ( MUR - ( ( MLU + DS ) + RRSe ) ),MLU ) ) / CS ) + ( Max( RCSe,RCSe ) + ( MLU - MUC ) ) ) - ( ( MUM / CS ) * ( CS - RRSe ) ) )", "obj1": 0.37832699619771865, "obj2": 0.4451263913410667}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.40019147716615494}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( ARS - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( DS - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * RCSe ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7424525406409137}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) ) )", "obj1": 0.3269961977186312, "obj2": 0.48101541281397875}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - ACS ) - Max( PN,MRS ) ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( RMSe + ( CS / CS ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.237680669467673}, {"determining": "( Max( RRS,( ( FirstVNF_CPU / RRS ) + MRS ) ) - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( MUR - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * MUR ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6602868697331661}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,FirstVNF_Mem_Server ) - ( RRS * Min( PN ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / ( ( MUM * ( RMSe / ( ( MUM / ( MUM / MUC ) ) - ( MUC * MLU ) ) ) ) + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 0.055133079847908745, "obj2": 0.7866826198915077}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( Max( Max( ( ( FirstVNF_RAM * FirstVNF_CPU ) - Max( ACS,( CRS - RRS ) ) ),MDR ),AMS ) + ( ( FirstVNF_RAM_Server / MRS ) / ( ( Const - ARS ) - Max( PN,( ( FirstVNF_RAM_Server / Max( CRS,CRS ) ) * ( FirstVNF_CPU_Server + Max( BR,MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,RRSe ) / ( CS - MUR ) ) * MUM ) / ( ( ( Max( CS,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) + ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( DS * RMSe ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9334600760456274, "obj2": 0.02389316098319357}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8030137833124784}, {"determining": "( ( Const - BR ) - ( ( ( ( ( CRS - MDR ) / MDR ) * FirstVNF_CPU_Server ) + Const ) - AMS ) )", "choosing": "Max( Max( ( CS * Max( CS,( ( DS - RMSe ) * Min( MLU ,( RRSe * CS ) ) ) ) ),MUR ),( RMSe / CS ) )", "obj1": 0.35551330798479086, "obj2": 0.4502248612471985}, {"determining": "( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + ( RCSe / MUR ) ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7801600296493394}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "( ( ( ( ( RRS / ( ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU ) / Min( ( MDR - FirstVNF_CPU_Server ) ,DDR ) ) ) - Max( MRS,Min( DDR ,Max( ACS,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) + Max( RRS,MRS ) ) - MDR )", "choosing": "Min( ( ( RCSe + Max( MUR,( RCSe + ( MUM + CS ) ) ) ) + MLU ) ,( MUC + ( ( RRSe - Max( Max( MUM,( ( MUM + CS ) + ( MLU - RCSe ) ) ),DS ) ) + RCSe ) ) )", "obj1": 0.9277566539923955, "obj2": 0.033936864201171174}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( DDR * ACS ) ) )", "choosing": "( Min( ( ( MUC / ( ( ( DS + RRSe ) / ( RRSe / DS ) ) - ( MLU / ( RRSe + RCSe ) ) ) ) - MLU ) ,( MLU - ( MUR + MLU ) ) ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.9581749049429658, "obj2": 0.017769134633828326}, {"determining": "( ( ( Max( FirstVNF_CPU,Max( ( DDR / FirstVNF_CPU ),Max( PN,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "Min( ( DS / ( MLU + RRSe ) ) ,Min( RMSe ,( DS + MLU ) ) )", "obj1": 0.9847908745247148, "obj2": 0.013212493435838604}, {"determining": "( ( PN / ARS ) - Min( Max( Max( ( FirstVNF_RAM_Server + AMS ),PN ),DDR ) ,( Max( ( MRS / FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) * ACS ) ) )", "choosing": "( ( ( MLU / DS ) * MUM ) - Min( ( CS * MUM ) ,( ( ( ( ( MUM - Max( RMSe,RCSe ) ) / RRSe ) * ( ( RCSe - ( MUR * RCSe ) ) / ( MUC * MLU ) ) ) + MUR ) - RRSe ) ) )", "obj1": 0.03802281368821293, "obj2": 0.8140287465453366}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( Max( RRS,( DDR - Max( RRS,Max( ARS,FirstVNF_Mem ) ) ) ) - Min( FirstVNF_CPU ,( ( FirstVNF_Mem / ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - ( Min( ( MUC / DS ) ,MUR ) / ( MUC + CS ) ) ) ) ) )", "obj1": 0.9144486692015209, "obj2": 0.043578757273991346}], "23": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server + ACS ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( MRS ,Max( ( ( PN - FirstVNF_RAM_Server ) + ( Min( Const ,( ( RRS * ARS ) - RRS ) ) - MDR ) ),( ( MRS / Max( ARS,( ( MRS / MDR ) / FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / ( Max( Max( MUR,RCSe ),( MLU / MUC ) ) - MLU ) ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server + ACS ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( MRS ,Max( ( ( PN - FirstVNF_RAM_Server ) + ( Min( Const ,( ( RRS * ARS ) - RRS ) ) - MDR ) ),( ( MRS / Max( ARS,( ( MRS / MDR ) / FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( MUR / ( ( ( ( DS / MUR ) * MLU ) + MUR ) - Min( ( MUM / DS ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( PN / ARS ) - MDR )", "choosing": "( ( ( ( MLU + MUC ) / DS ) / MUM ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12109454686178768}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( Max( ( MRS / FirstVNF_RAM_Server ),( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ) ) * ACS ) ) )", "choosing": "( ( ( MLU / DS ) / MUM ) - ( ( RCSe - ( MUR * RCSe ) ) / ( MUC * MLU ) ) )", "obj1": 0.5570342205323194, "obj2": 0.24479116127691206}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( Max( ( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ),Max( Max( BR,CRS ),Const ) ) - ( CRS - ( MRS - FirstVNF_RAM ) ) )", "choosing": "Min( MUM ,( MUM + CS ) )", "obj1": 0.6939163498098859, "obj2": 0.22420727799702697}, {"determining": "( ( Max( ( AMS * FirstVNF_CPU ),Min( ( Min( PN ,AMS ) - Max( AMS,RRS ) ) ,( Const - ( Max( RRS,FirstVNF_RAM ) * ( MDR + ARS ) ) ) ) ) - FirstVNF_Mem ) + Max( PN,Max( ( ARS * MDR ),( MRS + ( ACS - ( ARS * ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,MLU ) + ( MUM - MLU ) ) / ( ( ( RCSe / RCSe ) / ( ( ( RMSe * CS ) - Min( RCSe ,MUM ) ) / RRSe ) ) + RRSe ) ) * ( ( RMSe * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.49429657794676807, "obj2": 0.3738752603394373}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) )", "obj1": 0.6520912547528517, "obj2": 0.2400637888229596}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.42620607352240264}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( ( Max( DDR,( FirstVNF_CPU_Server / ( MRS + FirstVNF_RAM_Server ) ) ) + ( BR + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) * ( CRS * ( FirstVNF_RAM + ARS ) ) )", "choosing": "( ( ( ( RMSe * Max( ( MUR - ( ( MLU + DS ) + RRSe ) ),MLU ) ) / CS ) + ( Max( RCSe,RCSe ) + ( MLU - MUC ) ) ) - ( ( MUM / CS ) * ( CS - RRSe ) ) )", "obj1": 0.37832699619771865, "obj2": 0.4451263913410667}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.40019147716615494}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( ARS - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( DS - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * RCSe ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7424525406409137}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) ) )", "obj1": 0.3269961977186312, "obj2": 0.48101541281397875}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - ACS ) - Max( PN,MRS ) ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( RMSe + ( CS / CS ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.237680669467673}, {"determining": "( Max( RRS,( ( FirstVNF_CPU / RRS ) + MRS ) ) - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( MUR - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * MUR ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6602868697331661}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,FirstVNF_Mem_Server ) - ( RRS * Min( PN ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / ( ( MUM * ( RMSe / ( ( MUM / ( MUM / MUC ) ) - ( MUC * MLU ) ) ) ) + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 0.055133079847908745, "obj2": 0.7866826198915077}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( DDR * ACS ) ) )", "choosing": "( Min( ( ( MUC / ( ( ( DS + RRSe ) / ( RRSe / DS ) ) - ( MLU / ( RRSe + RCSe ) ) ) ) - MLU ) ,( MLU - ( MUR + MLU ) ) ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.9581749049429658, "obj2": 0.017769134633828326}, {"determining": "( Max( Max( ( ( FirstVNF_RAM * FirstVNF_CPU ) - Max( ACS,( CRS - RRS ) ) ),MDR ),AMS ) + ( ( FirstVNF_RAM_Server / MRS ) / ( ( Const - ARS ) - Max( PN,( ( FirstVNF_RAM_Server / Max( CRS,CRS ) ) * ( FirstVNF_CPU_Server + Max( BR,MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,RRSe ) / ( CS - MUR ) ) * MUM ) / ( ( ( Max( CS,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) + ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( DS * RMSe ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9334600760456274, "obj2": 0.02389316098319357}, {"determining": "( ( Const - BR ) - ( ( ( ( ( CRS - MDR ) / MDR ) * FirstVNF_CPU_Server ) + Const ) - AMS ) )", "choosing": "Max( Max( ( CS * Max( CS,( ( DS - RMSe ) * Min( MLU ,( RRSe * CS ) ) ) ) ),MUR ),( RMSe / CS ) )", "obj1": 0.35551330798479086, "obj2": 0.4502248612471985}, {"determining": "( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + ( RCSe / MUR ) ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7801600296493394}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8030137833124784}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( ( ( Max( FirstVNF_CPU,Max( ( DDR / FirstVNF_CPU ),Max( PN,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - FirstVNF_Mem ) - Max( BR,DDR ) )", "choosing": "Min( ( DS / ( MLU + RRSe ) ) ,Min( RMSe ,( DS + MLU ) ) )", "obj1": 0.9847908745247148, "obj2": 0.013212493435838604}, {"determining": "( Min( ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,MDR ) + ( BR - DDR ) )", "choosing": "( ( MUR + MLU ) / ( MUR + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 0.973384030418251, "obj2": 0.015633180625197206}, {"determining": "( ( ( ( ( RRS / ( ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU ) / Min( ( MDR - FirstVNF_CPU_Server ) ,DDR ) ) ) - Max( MRS,Min( DDR ,Max( ACS,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) + Max( RRS,MRS ) ) - MDR )", "choosing": "Min( ( ( RCSe + Max( MUR,( RCSe + ( MUM + CS ) ) ) ) + MLU ) ,( MUC + ( ( RRSe - Max( Max( MUM,( ( MUM + CS ) + ( MLU - RCSe ) ) ),DS ) ) + RCSe ) ) )", "obj1": 0.9277566539923955, "obj2": 0.033936864201171174}, {"determining": "( ( PN / ARS ) - Min( Max( Max( ( FirstVNF_RAM_Server + AMS ),PN ),DDR ) ,( Max( ( MRS / FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) * ACS ) ) )", "choosing": "( ( ( MLU / DS ) * MUM ) - Min( ( CS * MUM ) ,( ( ( ( ( MUM - Max( RMSe,RCSe ) ) / RRSe ) * ( ( RCSe - ( MUR * RCSe ) ) / ( MUC * MLU ) ) ) + MUR ) - RRSe ) ) )", "obj1": 0.03802281368821293, "obj2": 0.8140287465453366}], "24": [{"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server + ACS ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( MRS ,Max( ( ( PN - FirstVNF_RAM_Server ) + ( Min( Const ,( ( RRS * ARS ) - RRS ) ) - MDR ) ),( ( MRS / Max( ARS,( ( MRS / MDR ) / FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( MUR / ( ( ( ( DS / MUR ) * MLU ) + MUR ) - Min( ( MUM / DS ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server + ACS ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( MRS ,Max( ( ( PN - FirstVNF_RAM_Server ) + ( Min( Const ,( ( RRS * ARS ) - RRS ) ) - MDR ) ),( ( MRS / Max( ARS,( ( MRS / MDR ) / FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / ( Max( Max( MUR,RCSe ),( MLU / MUC ) ) - MLU ) ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( PN / ARS ) - MDR )", "choosing": "( ( ( ( MLU + MUC ) / DS ) / MUM ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12109454686178768}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( Max( ( MRS / FirstVNF_RAM_Server ),( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ) ) * ACS ) ) )", "choosing": "( ( ( MLU / DS ) / MUM ) - ( ( RCSe - ( MUR * RCSe ) ) / ( MUC * MLU ) ) )", "obj1": 0.5570342205323194, "obj2": 0.24479116127691206}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( Max( ( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ),Max( Max( BR,CRS ),Const ) ) - ( CRS - ( MRS - FirstVNF_RAM ) ) )", "choosing": "Min( MUM ,( MUM + CS ) )", "obj1": 0.6939163498098859, "obj2": 0.22420727799702697}, {"determining": "( ( Max( ( AMS * FirstVNF_CPU ),Min( ( Min( PN ,AMS ) - Max( AMS,RRS ) ) ,( Const - ( Max( RRS,FirstVNF_RAM ) * ( MDR + ARS ) ) ) ) ) - FirstVNF_Mem ) + Max( PN,Max( ( ARS * MDR ),( MRS + ( ACS - ( ARS * ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,MLU ) + ( MUM - MLU ) ) / ( ( ( RCSe / RCSe ) / ( ( ( RMSe * CS ) - Min( RCSe ,MUM ) ) / RRSe ) ) + RRSe ) ) * ( ( RMSe * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.49429657794676807, "obj2": 0.3738752603394373}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) )", "obj1": 0.6520912547528517, "obj2": 0.2400637888229596}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.42620607352240264}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( ( Max( DDR,( FirstVNF_CPU_Server / ( MRS + FirstVNF_RAM_Server ) ) ) + ( BR + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) * ( CRS * ( FirstVNF_RAM + ARS ) ) )", "choosing": "( ( ( ( RMSe * Max( ( MUR - ( ( MLU + DS ) + RRSe ) ),MLU ) ) / CS ) + ( Max( RCSe,RCSe ) + ( MLU - MUC ) ) ) - ( ( MUM / CS ) * ( CS - RRSe ) ) )", "obj1": 0.37832699619771865, "obj2": 0.4451263913410667}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.40019147716615494}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( ARS - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( DS - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * RCSe ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7424525406409137}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) ) )", "obj1": 0.3269961977186312, "obj2": 0.48101541281397875}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - ACS ) - Max( PN,MRS ) ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( RMSe + ( CS / CS ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.237680669467673}, {"determining": "( Max( RRS,( ( FirstVNF_CPU / RRS ) + MRS ) ) - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( MUR - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * MUR ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6602868697331661}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,FirstVNF_Mem_Server ) - ( RRS * Min( PN ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / ( ( MUM * ( RMSe / ( ( MUM / ( MUM / MUC ) ) - ( MUC * MLU ) ) ) ) + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 0.055133079847908745, "obj2": 0.7866826198915077}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( ( ( ( RRS / ( ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU ) / Min( ( MDR - FirstVNF_CPU_Server ) ,DDR ) ) ) - Max( MRS,Min( DDR ,Max( ACS,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) + Max( RRS,MRS ) ) - MDR )", "choosing": "Min( ( ( RCSe + Max( MUR,( RCSe + ( MUM + CS ) ) ) ) + MLU ) ,( MUC + ( ( RRSe - Max( Max( MUM,( ( MUM + CS ) + ( MLU - RCSe ) ) ),DS ) ) + RCSe ) ) )", "obj1": 0.9277566539923955, "obj2": 0.033936864201171174}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( DDR * ACS ) ) )", "choosing": "( Min( ( ( MUC / ( ( ( DS + RRSe ) / ( RRSe / DS ) ) - ( MLU / ( RRSe + RCSe ) ) ) ) - MLU ) ,( MLU - ( MUR + MLU ) ) ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.9581749049429658, "obj2": 0.017769134633828326}, {"determining": "( Max( Max( ( ( FirstVNF_RAM * FirstVNF_CPU ) - Max( ACS,( CRS - RRS ) ) ),MDR ),AMS ) + ( ( FirstVNF_RAM_Server / MRS ) / ( ( Const - ARS ) - Max( PN,( ( FirstVNF_RAM_Server / Max( CRS,CRS ) ) * ( FirstVNF_CPU_Server + Max( BR,MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,RRSe ) / ( CS - MUR ) ) * MUM ) / ( ( ( Max( CS,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) + ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( DS * RMSe ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9334600760456274, "obj2": 0.02389316098319357}, {"determining": "( ( Const - BR ) - ( ( ( ( ( CRS - MDR ) / MDR ) * FirstVNF_CPU_Server ) + Const ) - AMS ) )", "choosing": "Max( Max( ( CS * Max( CS,( ( DS - RMSe ) * Min( MLU ,( RRSe * CS ) ) ) ) ),MUR ),( RMSe / CS ) )", "obj1": 0.35551330798479086, "obj2": 0.4502248612471985}, {"determining": "( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + ( RCSe / MUR ) ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7801600296493394}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.04752851711026616, "obj2": 0.8030137833124784}, {"determining": "( Min( ( ( ( Const / FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,MDR ) + ( BR - DDR ) )", "choosing": "( ( ( ( ( MLU + CS ) * Max( ( MUC / Min( RMSe ,DS ) ),( ( MUC + MUR ) - RCSe ) ) ) + RRSe ) * RMSe ) + ( CS + ( MUM * ( RMSe / ( ( MUM / ( MUM / MUC ) ) - ( MUC * MLU ) ) ) ) ) )", "obj1": 0.9752851711026616, "obj2": 0.015185666640871036}, {"determining": "( ( ( Const / FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) - Min( ( ARS * ( ( RRS / MRS ) * ( AMS / ( ACS - CRS ) ) ) ) ,FirstVNF_CPU ) )", "choosing": "Max( ( MUC / Min( RMSe ,DS ) ),( Min( MUC ,( CS + RCSe ) ) * DS ) )", "obj1": 0.043726235741444866, "obj2": 0.8075892513641828}, {"determining": "( Min( ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,MDR ) + ( BR - DDR ) )", "choosing": "( ( MUR + MLU ) / ( MUR + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 0.973384030418251, "obj2": 0.015633180625197206}], "25": [{"determining": "Min( Min( ( ( ( MRS - FirstVNF_RAM_Server ) * ( AMS + FirstVNF_RAM ) ) * Const ) ,FirstVNF_CPU ) ,Max( RRS,AMS ) )", "choosing": "Min( ( DS + ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) ) ,( ( MLU - Min( ( MUM / RMSe ) ,( RMSe - CS ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server + ACS ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( MRS ,Max( ( ( PN - FirstVNF_RAM_Server ) + ( Min( Const ,( ( RRS * ARS ) - RRS ) ) - MDR ) ),( ( MRS / Max( ARS,( ( MRS / MDR ) / FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( MUR / ( ( ( ( DS / MUR ) * MLU ) + MUR ) - Min( ( MUM / DS ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( PN / ARS ) - MDR )", "choosing": "( ( ( ( MLU + MUC ) / DS ) / MUM ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12109454686178768}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( Max( ( MRS / FirstVNF_RAM_Server ),( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ) ) * ACS ) ) )", "choosing": "( ( ( MLU / DS ) / MUM ) - ( ( RCSe - ( MUR * RCSe ) ) / ( MUC * MLU ) ) )", "obj1": 0.5570342205323194, "obj2": 0.24479116127691206}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( Max( ( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ),Max( Max( BR,CRS ),Const ) ) - ( CRS - ( MRS - FirstVNF_RAM ) ) )", "choosing": "Min( MUM ,( MUM + CS ) )", "obj1": 0.6939163498098859, "obj2": 0.22420727799702697}, {"determining": "( ( Max( ( AMS * FirstVNF_CPU ),Min( ( Min( PN ,AMS ) - Max( AMS,RRS ) ) ,( Const - ( Max( RRS,FirstVNF_RAM ) * ( MDR + ARS ) ) ) ) ) - FirstVNF_Mem ) + Max( PN,Max( ( ARS * MDR ),( MRS + ( ACS - ( ARS * ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,MLU ) + ( MUM - MLU ) ) / ( ( ( RCSe / RCSe ) / ( ( ( RMSe * CS ) - Min( RCSe ,MUM ) ) / RRSe ) ) + RRSe ) ) * ( ( RMSe * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.49429657794676807, "obj2": 0.3738752603394373}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) )", "obj1": 0.6520912547528517, "obj2": 0.2400637888229596}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.40019147716615494}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( ARS - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( DS - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * RCSe ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7424525406409137}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) ) )", "obj1": 0.3269961977186312, "obj2": 0.48101541281397875}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.42620607352240264}, {"determining": "( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - ACS ) - Max( PN,MRS ) ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( RMSe + ( CS / CS ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.237680669467673}, {"determining": "( Max( RRS,( ( FirstVNF_CPU / RRS ) + MRS ) ) - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( MUR - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * MUR ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6602868697331661}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( DDR * ACS ) ) )", "choosing": "( Min( ( ( MUC / ( ( ( DS + RRSe ) / ( RRSe / DS ) ) - ( MLU / ( RRSe + RCSe ) ) ) ) - MLU ) ,( MLU - ( MUR + MLU ) ) ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.9581749049429658, "obj2": 0.017769134633828326}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,FirstVNF_Mem_Server ) - ( RRS * Min( PN ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / ( ( MUM * ( RMSe / ( ( MUM / ( MUM / MUC ) ) - ( MUC * MLU ) ) ) ) + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 0.055133079847908745, "obj2": 0.7866826198915077}, {"determining": "( Max( ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM_Server,( ( DDR - Const ) / ( CRS + PN ) ) ) ) / ( ( ( Min( PN ,ARS ) * Min( RRS ,ACS ) ) + ( ( CRS / RRS ) / ( BR / BR ) ) ) * CRS ) ),FirstVNF_RAM_Server ) - Min( Max( BR,( ( ARS + FirstVNF_Mem_Server ) / PN ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( RMSe * RMSe ) / MLU ) / Min( DS ,( ( Min( MUC ,( ( MUC * RCSe ) + RCSe ) ) * ( RMSe * ( ( MUR + MUR ) * ( MLU - MUC ) ) ) ) - ( RRSe / MUM ) ) ) ),( Min( RMSe ,MUM ) + ( MLU - CS ) ) )", "obj1": 0.3897338403041825, "obj2": 0.4326895312552573}, {"determining": "( ( Const - BR ) - ( ( ( ( ( CRS - MDR ) / MDR ) * FirstVNF_CPU_Server ) + Const ) - AMS ) )", "choosing": "Max( Max( ( CS * Max( CS,( ( DS - RMSe ) * Min( MLU ,( RRSe * CS ) ) ) ) ),MUR ),( RMSe / CS ) )", "obj1": 0.35551330798479086, "obj2": 0.4502248612471985}, {"determining": "( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + ( RCSe / MUR ) ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7801600296493394}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "( ( ( ( ( RRS / ( ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU ) / Min( ( MDR - FirstVNF_CPU_Server ) ,DDR ) ) ) - Max( MRS,Min( DDR ,Max( ACS,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) + Max( RRS,MRS ) ) - MDR )", "choosing": "Min( ( ( RCSe + Max( MUR,( RCSe + ( MUM + CS ) ) ) ) + MLU ) ,( MUC + ( ( RRSe - Max( Max( MUM,( ( MUM + CS ) + ( MLU - RCSe ) ) ),DS ) ) + RCSe ) ) )", "obj1": 0.9277566539923955, "obj2": 0.033936864201171174}, {"determining": "( Max( Max( ( ( FirstVNF_RAM * FirstVNF_CPU ) - Max( ACS,( CRS - RRS ) ) ),MDR ),AMS ) + ( ( FirstVNF_RAM_Server / MRS ) / ( ( Const - ARS ) - Max( PN,( ( FirstVNF_RAM_Server / Max( CRS,CRS ) ) * ( FirstVNF_CPU_Server + Max( BR,MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,RRSe ) / ( CS - MUR ) ) * MUM ) / ( ( ( Max( CS,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) + ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( DS * RMSe ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9334600760456274, "obj2": 0.02389316098319357}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( ( Max( DDR,( FirstVNF_CPU_Server / ( MRS + FirstVNF_RAM_Server ) ) ) + ( BR + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) * ( CRS * ( FirstVNF_RAM + ARS ) ) )", "choosing": "( ( ( ( RMSe * Max( ( MUR - ( ( MLU + DS ) + RRSe ) ),MLU ) ) / CS ) + ( Max( RCSe,RCSe ) + ( MLU - MUC ) ) ) - ( ( MUM / CS ) * ( CS - RRSe ) ) )", "obj1": 0.37832699619771865, "obj2": 0.4451263913410667}, {"determining": "Min( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.053231939163498096, "obj2": 0.8009047867165932}, {"determining": "( Max( ( ( Max( FirstVNF_RAM_Server,( ( DDR - Const ) / ( CRS + PN ) ) ) + FirstVNF_Mem_Server ) / ( MDR * CRS ) ),FirstVNF_RAM_Server ) - Min( Max( BR,( ( ARS + FirstVNF_Mem_Server ) / PN ) ) ,( ( ARS - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - DDR ) ) )", "choosing": "Max( ( MUC / Min( DS ,( ( Min( MUC ,( ( MLU * RCSe ) + RCSe ) ) * ( RMSe * ( ( MUR + MUR ) * ( MLU - MUC ) ) ) ) - ( MUM / MUM ) ) ) ),( Min( RMSe ,MUM ) + ( MLU - CS ) ) )", "obj1": 0.3821292775665399, "obj2": 0.44152377606020987}, {"determining": "( Min( ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,MDR ) + ( BR - DDR ) )", "choosing": "( ( MUR + MLU ) / ( MUR + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 0.973384030418251, "obj2": 0.015633180625197206}], "26": [{"determining": "( ( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_CPU_Server + ACS ) + Max( MDR,FirstVNF_CPU_Server ) ) ) - Min( MRS ,Max( ( ( PN - FirstVNF_RAM_Server ) + ( Min( Const ,( ( RRS * ARS ) - RRS ) ) - MDR ) ),( ( MRS / Max( ARS,( ( MRS / MDR ) / FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( MUR / ( ( ( ( DS / MUR ) * MLU ) + MUR ) - Min( ( MUM / DS ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "Min( Min( ( ( ( MRS - FirstVNF_RAM_Server ) * ( AMS + FirstVNF_RAM ) ) * Const ) ,FirstVNF_CPU ) ,Max( RRS,AMS ) )", "choosing": "Min( ( DS + ( Max( ( ( CS / MUC ) - DS ),MUR ) / RMSe ) ) ,( ( MLU - Min( ( MUM / RMSe ) ,( RMSe - CS ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.026615969581749048, "obj2": 0.8184656914749421}, {"determining": "( ( PN / ARS ) - MDR )", "choosing": "( ( ( ( MLU + MUC ) / DS ) / MUM ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.7034220532319392, "obj2": 0.12109454686178768}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * AMS ) + Max( Max( BR,CRS ),Min( Min( BR ,DDR ) ,( Max( ACS,Const ) * ACS ) ) ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - CS ) - DS ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5133079847908745, "obj2": 0.2946925027789267}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( Max( ( MRS / FirstVNF_RAM_Server ),( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ) ) * ACS ) ) )", "choosing": "( ( ( MLU / DS ) / MUM ) - ( ( RCSe - ( MUR * RCSe ) ) / ( MUC * MLU ) ) )", "obj1": 0.5570342205323194, "obj2": 0.24479116127691206}, {"determining": "( PN - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - ( ( ( Max( DS,CS ) * ( MLU / MLU ) ) / CS ) * CS ) ) ) ) )", "obj1": 0.7699619771863118, "obj2": 0.07445324441673049}, {"determining": "( Max( ( ( RRS - MDR ) * ( MRS - FirstVNF_RAM ) ),Max( Max( BR,CRS ),Const ) ) - ( CRS - ( MRS - FirstVNF_RAM ) ) )", "choosing": "Min( MUM ,( MUM + CS ) )", "obj1": 0.6939163498098859, "obj2": 0.22420727799702697}, {"determining": "( ( Max( ( AMS * FirstVNF_CPU ),Min( ( Min( PN ,AMS ) - Max( AMS,RRS ) ) ,( Const - ( Max( RRS,FirstVNF_RAM ) * ( MDR + ARS ) ) ) ) ) - FirstVNF_Mem ) + Max( PN,Max( ( ARS * MDR ),( MRS + ( ACS - ( ARS * ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,MLU ) + ( MUM - MLU ) ) / ( ( ( RCSe / RCSe ) / ( ( ( RMSe * CS ) - Min( RCSe ,MUM ) ) / RRSe ) ) + RRSe ) ) * ( ( RMSe * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.49429657794676807, "obj2": 0.3738752603394373}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) )", "obj1": 0.6520912547528517, "obj2": 0.2400637888229596}, {"determining": "Min( ( ( ( ACS - ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ) - FirstVNF_RAM ) - ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) )", "choosing": "Min( ( ( Max( ( ( CS / MUC ) - DS ),MUR ) / ( ( MUC / MUR ) + MUC ) ) + DS ) ,( ( MLU - Min( MUM ,MUC ) ) * DS ) )", "obj1": 0.8802281368821293, "obj2": 0.06318984571118899}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) * Max( FirstVNF_RAM,RRS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.2908745247148289, "obj2": 0.4904295054543564}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( Max( ( Const - Min( ACS ,CRS ) ),MRS ),MRS ) ) ) + ( Max( PN,AMS ) * ( MDR - RRS ) ) ) - CRS )", "choosing": "Min( ( Max( ( ( ( MUC / MUM ) * RCSe ) + MUM ),MUM ) - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( ( RMSe / ( ( MUR + MLU ) / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.09125475285171103, "obj2": 0.7152978862098222}, {"determining": "( Max( AMS,Max( ( Max( AMS,Max( ( FirstVNF_Mem - FirstVNF_Mem ),MDR ) ) + ( BR / FirstVNF_Mem ) ),MDR ) ) + ( BR / FirstVNF_Mem ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ,Min( MLU ,( MLU - Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) ) ) )", "obj1": 0.17870722433460076, "obj2": 0.5834313772789639}, {"determining": "( Min( Const ,FirstVNF_CPU ) - Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( Min( CS ,DS ) ,( ( MUC + RCSe ) - Max( RCSe,( Min( ( ( RRSe + MUR ) / MLU ) ,MUM ) / RCSe ) ) ) )", "obj1": 0.908745247148289, "obj2": 0.04905007816469524}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * ACS ) * Const ) - Min( ACS ,CRS ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( ( ( ( RMSe / ( RCSe / Min( RCSe ,MUR ) ) ) / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) ,( ( ( ( ( ( CS * RMSe ) / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.155893536121673, "obj2": 0.6009451095425351}, {"determining": "( ( FirstVNF_Mem + Max( ( ( ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem / MRS ) ) / ( Min( Const ,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) ) ) / ( Max( ( MDR * FirstVNF_CPU_Server ),( PN / FirstVNF_RAM ) ) + ( ( MRS + CRS ) * ( CRS + FirstVNF_CPU_Server ) ) ) ),Const ) ) - ( DDR - AMS ) )", "choosing": "Min( ( RMSe - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5548276194716822}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.4505703422053232, "obj2": 0.40019147716615494}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),Const ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * BR ) + Max( Max( CRS,BR ),Const ) ) )", "choosing": "Min( ( Max( ( DS + ( DS * MLU ) ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( MLU ,( RRSe + MUC ) ) )", "obj1": 0.1958174904942966, "obj2": 0.5646692774544293}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Min( MRS ,( ( FirstVNF_Mem + ( Min( Const ,( ( ARS * FirstVNF_CPU ) - RRS ) ) - ( BR * ( Min( FirstVNF_CPU_Server ,MRS ) + ( ACS - BR ) ) ) ) ) + Max( ACS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( ( CS / MUC ) - DS ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC + CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - Min( RCSe ,MUM ) ) )", "obj1": 0.46387832699619774, "obj2": 0.37415883974206376}, {"determining": "( ( ( Max( PN,RRS ) * ( FirstVNF_CPU - RRS ) ) + Max( Max( BR,CRS ),CRS ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( MUR - RCSe ) ,Min( Min( CS ,( MLU - ( MUR + MLU ) ) ) ,( ( ( MUR / ( CS * RMSe ) ) - ( MLU + MUC ) ) - DS ) ) )", "obj1": 0.8326996197718631, "obj2": 0.06843917245381445}, {"determining": "( ARS - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( DS - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * RCSe ) ) ) )", "obj1": 0.08935361216730038, "obj2": 0.7424525406409137}, {"determining": "( ( FirstVNF_Mem + Max( Max( CRS,ACS ),FirstVNF_CPU_Server ) ) - ( DDR - AMS ) )", "choosing": "Min( ( Max( ( DS + MUC ),RRSe ) - ( MUR + ( CS * RCSe ) ) ) ,Min( ( Max( ( MUC / DS ),MUR ) + MUM ) ,( RRSe + MUC ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5039043770471565}, {"determining": "( ( ( DDR * Max( ( RRS - FirstVNF_Mem_Server ),Max( ( ( ( CRS * AMS ) * Const ) - Min( ACS ,( RRS - MDR ) ) ),MRS ) ) ) + ( ( ( FirstVNF_Mem * Const ) + ARS ) * ( MDR - RRS ) ) ) - BR )", "choosing": "Min( Min( ( MLU - CS ) ,( MUC * MLU ) ) ,( ( ( ( ( RCSe / CS ) * RCSe ) + ( MUM / Max( ( ( CS / RRSe ) - DS ),MUM ) ) ) / MUM ) - MLU ) )", "obj1": 0.24334600760456274, "obj2": 0.5368566353423216}, {"determining": "( ( ( Max( Min( FirstVNF_CPU_Server ,ARS ),Max( ( ARS / AMS ),Const ) ) * Max( FirstVNF_RAM,Const ) ) + Max( Max( CRS,BR ),Const ) ) - Max( MDR,BR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( ( Max( MUR,MUM ) * ( RCSe - DS ) ) / ( CS * RMSe ) ) - MUM ) - DS ) ,( MLU - ( ( MUR + MLU ) - MLU ) ) ) )", "obj1": 0.10266159695817491, "obj2": 0.6812372720853123}, {"determining": "( ( Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,Max( FirstVNF_RAM_Server,Max( MDR,( Max( AMS,RRS ) + FirstVNF_RAM_Server ) ) ) ),Min( ( ( MDR / Min( PN ,AMS ) ) * Max( CRS,FirstVNF_CPU ) ) ,Min( Const ,( PN * ( RRS - FirstVNF_RAM ) ) ) ) ) - FirstVNF_Mem ) + Max( DDR,Max( ( ARS * MDR ),( ACS + MRS ) ) ) )", "choosing": "( ( ( ( ( MUM - CS ) + MUM ) / Max( RRSe,MUR ) ) * RCSe ) + ( DS - RCSe ) )", "obj1": 0.43155893536121676, "obj2": 0.41428770842082757}, {"determining": "( ( Const - BR ) - Min( FirstVNF_CPU_Server ,( ( Const - BR ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( CS * RRSe ),MUR ),Max( Max( ( CS * RRSe ),MUR ),( RMSe / CS ) ) )", "obj1": 0.3269961977186312, "obj2": 0.48101541281397875}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * Max( CRS,( FirstVNF_Mem / CRS ) ) )", "choosing": "( ( RCSe / RCSe ) * ( ( RMSe + RRSe ) / ( MUC * CS ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5187564896256553}, {"determining": "( ( Const - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - ACS ) - Max( PN,MRS ) ) )", "choosing": "Max( ( CS / CS ),Min( RMSe ,( RMSe + ( CS / CS ) ) ) )", "obj1": 0.6768060836501901, "obj2": 0.237680669467673}, {"determining": "( Max( RRS,( ( FirstVNF_CPU / RRS ) + MRS ) ) - ( AMS - CRS ) )", "choosing": "( ( Min( MUM ,( ( ( MUR - ( RRSe - DS ) ) / CS ) + ( RRSe - ( MUC + ( RMSe - CS ) ) ) ) ) / ( MUR - ( RCSe / ( Min( ( RCSe * ( RCSe / MUR ) ) ,MUR ) - ( ( RRSe - MUC ) + DS ) ) ) ) ) * Max( ( MUR + MUC ),Min( MLU ,( CS * MUR ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6602868697331661}, {"determining": "( Max( FirstVNF_Mem,BR ) - ( ( ARS * Max( RRS,MDR ) ) * ( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + AMS ) ) )", "choosing": "Max( Max( ( ( MLU - DS ) - ( CS - MUR ) ),( Min( MLU ,MUR ) + ( MUM + RMSe ) ) ),( ( ( MUM - DS ) / Min( DS ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.0817490494296578, "obj2": 0.7696738934280094}, {"determining": "Min( ( Min( ( Const / FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,Min( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * Const ) ) ,Max( RRS,AMS ) ) ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / ( MUC * RCSe ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.15019011406844107, "obj2": 0.6275607498048774}, {"determining": "( ( ( ( ( RRS / ( ( ( FirstVNF_Mem_Server + ARS ) - FirstVNF_CPU ) / Min( ( MDR - FirstVNF_CPU_Server ) ,DDR ) ) ) - Max( MRS,Min( DDR ,Max( ACS,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) ) ) / FirstVNF_CPU ) + Max( RRS,MRS ) ) - MDR )", "choosing": "Min( ( ( RCSe + Max( MUR,( RCSe + ( MUM + CS ) ) ) ) + MLU ) ,( MUC + ( ( RRSe - Max( Max( MUM,( ( MUM + CS ) + ( MLU - RCSe ) ) ),DS ) ) + RCSe ) ) )", "obj1": 0.9277566539923955, "obj2": 0.033936864201171174}, {"determining": "( ( Min( PN ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) - Max( MDR,RRS ) )", "choosing": "( ( RCSe * MUM ) * Min( MUC ,MLU ) )", "obj1": 0.8346007604562737, "obj2": 0.06626524159316302}, {"determining": "( ( ( ( ACS + FirstVNF_CPU_Server ) + Max( MDR,FirstVNF_CPU_Server ) ) - ( Const - FirstVNF_CPU ) ) - Max( ( BR / ( ( ARS / MRS ) + ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ),FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RCSe / RCSe ) + ( RRSe / RRSe ) ) - RRSe ) / ( ( RCSe / ( ( ( MLU * ( RCSe / MUR ) ) + MUR ) - Min( Min( ( MUC / DS ) ,MUR ) ,( MUC - CS ) ) ) ) - MUR ) ) * ( ( DS * CS ) - ( ( ( ( CS / MUC ) - DS ) - RRSe ) + ( MUM / CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6703264762796487}, {"determining": "( ( PN / ARS ) - Min( Max( Max( FirstVNF_Mem,PN ),DDR ) ,( DDR * ACS ) ) )", "choosing": "( Min( ( ( MUC / ( ( ( DS + RRSe ) / ( RRSe / DS ) ) - ( MLU / ( RRSe + RCSe ) ) ) ) - MLU ) ,( MLU - ( MUR + MLU ) ) ) - Min( MUC ,( RRSe - RMSe ) ) )", "obj1": 0.9581749049429658, "obj2": 0.017769134633828326}, {"determining": "( Max( Max( ( ( FirstVNF_RAM * FirstVNF_CPU ) - Max( ACS,( CRS - RRS ) ) ),MDR ),AMS ) + ( ( FirstVNF_RAM_Server / MRS ) / ( ( Const - ARS ) - Max( PN,( ( FirstVNF_RAM_Server / Max( CRS,CRS ) ) * ( FirstVNF_CPU_Server + Max( BR,MRS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MLU ,RRSe ) / ( CS - MUR ) ) * MUM ) / ( ( ( Max( CS,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) + ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( DS * RMSe ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) / ( RCSe - CS ) )", "obj1": 0.9334600760456274, "obj2": 0.02389316098319357}, {"determining": "( ( Const - BR ) - ( ( ( ( ( CRS - MDR ) / MDR ) * FirstVNF_CPU_Server ) + Const ) - AMS ) )", "choosing": "Max( Max( ( CS * Max( CS,( ( DS - RMSe ) * Min( MLU ,( RRSe * CS ) ) ) ) ),MUR ),( RMSe / CS ) )", "obj1": 0.35551330798479086, "obj2": 0.4502248612471985}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU_Server ,ACS ) ) ) * RRS ) ,BR ) - ( RRS * Min( PN ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MUM ) / ( MUR + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 0.06653992395437262, "obj2": 0.7718897984031458}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,BR ) - ( RRS * Min( ( ( FirstVNF_Mem - Const ) - Min( ( ACS + CRS ) ,FirstVNF_CPU ) ) ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / CS )", "obj1": 0.34600760456273766, "obj2": 0.45860833946481055}, {"determining": "( Min( ( ( ( ACS - FirstVNF_Mem_Server ) - ACS ) * RRS ) ,FirstVNF_Mem_Server ) - ( RRS * Min( PN ,Min( FirstVNF_RAM ,Max( FirstVNF_Mem,DDR ) ) ) ) )", "choosing": "( ( MUR + MLU ) / ( ( MUM * ( RMSe / ( ( MUM / ( MUM / MUC ) ) - ( MUC * MLU ) ) ) ) + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 0.055133079847908745, "obj2": 0.7866826198915077}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( Const - BR ) ),FirstVNF_RAM_Server ) - DDR )", "choosing": "Min( ( MUC - ( Min( RMSe ,Min( MUM ,( CS * RRSe ) ) ) / RCSe ) ) ,Min( MLU ,MUM ) )", "obj1": 0.3365019011406844, "obj2": 0.4734568016724872}, {"determining": "( Max( ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM_Server,( ( DDR - Const ) / ( CRS + PN ) ) ) ) / ( ( ( Min( PN ,ARS ) * Min( RRS ,ACS ) ) + ( ( CRS / RRS ) / ( BR / BR ) ) ) * CRS ) ),FirstVNF_RAM_Server ) - Min( Max( BR,( ( ARS + FirstVNF_Mem_Server ) / PN ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( RMSe * RMSe ) / MLU ) / Min( DS ,( ( Min( MUC ,( ( MUC * RCSe ) + RCSe ) ) * ( RMSe * ( ( MUR + MUR ) * ( MLU - MUC ) ) ) ) - ( RRSe / MUM ) ) ) ),( Min( RMSe ,MUM ) + ( MLU - CS ) ) )", "obj1": 0.3897338403041825, "obj2": 0.4326895312552573}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),Min( Min( DDR ,( ( Const * FirstVNF_CPU_Server ) + Max( FirstVNF_RAM,MDR ) ) ) ,( ( MDR / ARS ) * FirstVNF_RAM ) ) ) - CRS ) * Max( ( BR + MDR ),Max( CRS,AMS ) ) ) ,( Min( Min( MDR ,PN ) ,( ARS * CRS ) ) + ( Min( MRS ,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RMSe / MUR ) / ( MUC + RRSe ) ) / Min( ( MUC / RRSe ) ,Min( RMSe ,CS ) ) ) + ( ( ( MUM - DS ) / Min( ( ( MLU + MLU ) / MUC ) ,CS ) ) + ( Max( MUR,MUR ) - ( RCSe - RMSe ) ) ) )", "obj1": 0.13307984790874525, "obj2": 0.6405408557100389}, {"determining": "( ( Max( DDR,( FirstVNF_CPU_Server / ( MRS + FirstVNF_RAM_Server ) ) ) + ( BR + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) * ( CRS * ( FirstVNF_RAM + ARS ) ) )", "choosing": "( ( ( ( RMSe * Max( ( MUR - ( ( MLU + DS ) + RRSe ) ),MLU ) ) / CS ) + ( Max( RCSe,RCSe ) + ( MLU - MUC ) ) ) - ( ( MUM / CS ) * ( CS - RRSe ) ) )", "obj1": 0.37832699619771865, "obj2": 0.4451263913410667}, {"determining": "( Min( ( DDR * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,MDR ) + ( BR - DDR ) )", "choosing": "( ( MUR + MLU ) / ( MUR + Min( ( MUM * CS ) ,DS ) ) )", "obj1": 0.973384030418251, "obj2": 0.015633180625197206}, {"determining": "( ( FirstVNF_RAM_Server + CRS ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( CRS ,Min( RRS ,AMS ) ) ) )", "choosing": "Max( ( MUC / Min( DS ,( ( Min( MUC ,( ( MUC * RCSe ) + RCSe ) ) * ( RMSe * ( ( MUR + MUR ) * ( MLU - MUC ) ) ) ) - ( RRSe / MUM ) ) ) ),( Min( RMSe ,MUM ) + ( MLU - CS ) ) )", "obj1": 0.4144486692015209, "obj2": 0.4258503184196252}, {"determining": "( Max( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( FirstVNF_CPU - CRS ) ,FirstVNF_RAM_Server ) ) / MDR ),AMS ) + ( ( FirstVNF_RAM_Server / Max( Const,MRS ) ) / ( MRS / MDR ) ) )", "choosing": "( ( RCSe - CS ) / ( Max( ( ( MUR / Min( RRSe ,DS ) ) + MUC ),RRSe ) / ( ( ( Min( CS ,RCSe ) + MUR ) - ( ( Min( DS ,MLU ) / ( Min( RMSe ,CS ) / ( RMSe / MUR ) ) ) - Max( ( RMSe * DS ),Min( Max( MLU,DS ) ,( RCSe - MUM ) ) ) ) ) - RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.42620607352240264}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( MDR - RRS ) ) + Max( Max( BR,CRS ),Const ) ) - Max( MDR,MDR ) ) ),Const ) ) - Max( MDR,MDR ) )", "choosing": "Min( ( ( DS + RRSe ) * MUC ) ,Min( ( ( ( MUR / ( CS * RMSe ) ) - ( MLU + ( DS + RRSe ) ) ) - DS ) ,Min( MLU ,( MLU - ( MUR + MLU ) ) ) ) )", "obj1": 0.13878326996197718, "obj2": 0.6337951164834503}]}