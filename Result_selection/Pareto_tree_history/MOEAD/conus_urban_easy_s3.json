{"1": [{"determining": "Min( ( ACS / ARS ) ,( PN + RRS ) )", "choosing": "( ( RMSe - MUM ) * ( MUM - RRSe ) )", "obj1": 0.2509505703422053, "obj2": 0.6568483169340398}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * Min( DDR ,ACS ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / ( CS + ( Min( MUM ,CS ) - RMSe ) ) )", "obj1": 0.6007604562737643, "obj2": 0.30113532876306554}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - PN ) )", "choosing": "( ( DS / RCSe ) * ( RCSe - MLU ) )", "obj1": 0.16159695817490494, "obj2": 0.7287825235805406}, {"determining": "( ( FirstVNF_Mem / Const ) + ( DDR + Const ) )", "choosing": "( Min( MUM ,MUR ) - Max( RRSe,CS ) )", "obj1": 0.2832699619771863, "obj2": 0.5849192985277218}, {"determining": "( ( CRS / FirstVNF_CPU_Server ) + ( DDR / FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,MLU ) / Min( RMSe ,RRSe ) )", "obj1": 0.2338403041825095, "obj2": 0.6729621060823266}, {"determining": "( Max( AMS,Const ) + ( CRS * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU * DS ) - ( MLU * RRSe ) )", "obj1": 0.279467680608365, "obj2": 0.6536701154871778}, {"determining": "Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),Max( MDR,PN ) )", "choosing": "( ( MLU + MUR ) - ( MUM - MLU ) )", "obj1": 0.23193916349809887, "obj2": 0.6627702503981068}, {"determining": "Max( ( ACS + PN ),( AMS - AMS ) )", "choosing": "( ( MLU * MUR ) + ( MUM - MUM ) )", "obj1": 0.32129277566539927, "obj2": 0.5736517795010586}, {"determining": "Max( ( ARS * FirstVNF_Mem_Server ),Max( FirstVNF_Mem,MDR ) )", "choosing": "Min( ( MUM + RCSe ) ,( MLU / MUR ) )", "obj1": 0.1958174904942966, "obj2": 0.6830552197405497}, {"determining": "( Min( CRS ,FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( CS * MUM ) * ( MLU + MUC ) )", "obj1": 0.33269961977186313, "obj2": 0.6205103909396005}, {"determining": "( ( Const * BR ) + ( FirstVNF_Mem * MDR ) )", "choosing": "Max( ( MLU * RMSe ),Max( RMSe,DS ) )", "obj1": 0.32129277566539927, "obj2": 0.5776016339707221}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( RMSe - RMSe ) + Max( RCSe,MUR ) )", "obj1": 0.34220532319391633, "obj2": 0.5707431882808215}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Min( MDR ,ACS ) )", "choosing": "Max( ( RMSe / CS ),( MUM + RMSe ) )", "obj1": 0.311787072243346, "obj2": 0.5872942307998676}, {"determining": "( Max( FirstVNF_Mem,CRS ) / Max( MDR,BR ) )", "choosing": "( ( RMSe / MLU ) * ( MUC + RRSe ) )", "obj1": 0.22053231939163498, "obj2": 0.6830703064492379}, {"determining": "Max( ( FirstVNF_RAM / ARS ),( FirstVNF_CPU + ( ( FirstVNF_Mem_Server * PN ) + ( ARS - ACS ) ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( MLU * ( RMSe * ( ( ( MUC * RMSe ) + RMSe ) / ( MLU / CS ) ) ) ) / MUC ) )", "obj1": 0.49429657794676807, "obj2": 0.43724313989414343}, {"determining": "( Min( ARS ,PN ) * ( FirstVNF_Mem_Server - MRS ) )", "choosing": "( ( CS * MUR ) / ( RMSe / MLU ) )", "obj1": 0.20912547528517111, "obj2": 0.7776545290657461}, {"determining": "( Max( FirstVNF_CPU,Const ) * Min( AMS ,ARS ) )", "choosing": "( Max( DS,RMSe ) / Max( MLU,DS ) )", "obj1": 0.20342205323193915, "obj2": 0.6844448081990232}, {"determining": "( ( ARS + Const ) - ( FirstVNF_RAM * FirstVNF_RAM ) )", "choosing": "Max( Min( MUC ,RRSe ),Max( MUC,RMSe ) )", "obj1": 0.3269961977186312, "obj2": 0.5848222360837875}, {"determining": "Min( ( ACS / AMS ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( CS + RCSe ) - ( MUC / RMSe ) )", "obj1": 0.29277566539923955, "obj2": 0.6664937972204622}, {"determining": "( ( Const - ( FirstVNF_RAM / FirstVNF_CPU ) ) - Min( CRS ,Const ) )", "choosing": "Min( Max( MUR,( CS / CS ) ) ,Max( ( Min( MLU ,DS ) / RCSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + MRS ) / ( Const + PN ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RRSe ) )", "obj1": 0.10076045627376426, "obj2": 0.7856040237327495}, {"determining": "( ( PN / ARS ) / ( MDR * PN ) )", "choosing": "( ( RMSe * RCSe ) / ( RCSe * RMSe ) )", "obj1": 0.2262357414448669, "obj2": 0.720706999535398}, {"determining": "( ( DDR - CRS ) * Min( MDR ,MRS ) )", "choosing": "( Min( DS ,RMSe ) / ( RCSe * MUC ) )", "obj1": 0.37072243346007605, "obj2": 0.5581870631732624}, {"determining": "( ( PN / Const ) / ( CRS + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( MUM,MUR ),( RRSe - DS ) )", "obj1": 0.35551330798479086, "obj2": 0.5549108426965562}, {"determining": "( Max( MDR,ACS ) / ( FirstVNF_RAM * BR ) )", "choosing": "( ( RRSe / RRSe ) - ( MUM * MUM ) )", "obj1": 0.17680608365019013, "obj2": 0.75741658694305}, {"determining": "Max( Min( AMS ,MRS ),( CRS * RRS ) )", "choosing": "( ( MLU / RMSe ) / ( MLU / MUC ) )", "obj1": 0.1596958174904943, "obj2": 0.7327707466870389}, {"determining": "( ( Const * BR ) * ( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MUC ,MUR ) + ( CS - RRSe ) )", "obj1": 0.2661596958174905, "obj2": 0.7405353719829879}, {"determining": "Max( Max( MDR,PN ),( PN * FirstVNF_RAM ) )", "choosing": "( ( DS * RRSe ) - Min( MUM ,MUC ) )", "obj1": 0.32509505703422054, "obj2": 0.614636414635657}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( Max( Min( CS ,Min( RCSe ,RCSe ) ),( RMSe / MUR ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) / ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Max( CS,RMSe ) - Min( RRSe ,DS ) )", "obj1": 0.06653992395437262, "obj2": 0.8504961297469936}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - Min( ( ( ( ( BR * Max( FirstVNF_RAM,FirstVNF_RAM ) ) * MRS ) / FirstVNF_RAM ) / FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( ( RCSe + MUR ) + ( MUR / MUC ) )", "obj1": 0.2984790874524715, "obj2": 0.6014172876425566}, {"determining": "( ( FirstVNF_CPU_Server + ( CRS / BR ) ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * ( Min( MLU ,DS ) * DS ) ) ,Max( RRSe,DS ) )", "obj1": 0.2946768060836502, "obj2": 0.6649845772923784}, {"determining": "( Min( DDR ,CRS ) * ( ARS * FirstVNF_CPU ) )", "choosing": "( Max( RRSe,CS ) * ( MUC + RRSe ) )", "obj1": 0.31749049429657794, "obj2": 0.5967824568808521}, {"determining": "( Max( CRS,ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RMSe,DS ) / ( RRSe * DS ) )", "obj1": 0.039923954372623575, "obj2": 0.8080355601472581}, {"determining": "( ( BR * ( ( PN + Const ) / DDR ) ) * ( CRS / PN ) )", "choosing": "( ( ( Min( DS ,CS ) - MUM ) - CS ) / ( MUM / ( MUC * RCSe ) ) )", "obj1": 0.3269961977186312, "obj2": 0.49547641314578916}, {"determining": "Max( Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( PN,BR ) ),( ( DDR * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( ( ( CS + MLU ) * MUR ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.0741444866920152, "obj2": 0.7832246521453441}, {"determining": "( ( Min( RRS ,CRS ) + ( FirstVNF_Mem / AMS ) ) * ( ( FirstVNF_RAM_Server * Const ) * ( MRS + BR ) ) )", "choosing": "( Max( ( MLU / RMSe ),( MUC / RMSe ) ) * Max( ( MUC / DS ),MUC ) )", "obj1": 0.043726235741444866, "obj2": 0.8076324700888016}, {"determining": "( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( CS / RCSe ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.08555133079847908, "obj2": 0.8210242279632749}, {"determining": "( Max( PN,CRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( ( Max( ( ( RCSe * Max( CS,MUM ) ) / ( ( MUC + RCSe ) * RRSe ) ),MUC ) * MLU ) * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ACS ) * ( RRS * FirstVNF_RAM_Server ) ) * ( Max( BR,FirstVNF_CPU ) * ( BR / MDR ) ) )", "choosing": "Max( ( MUR + RCSe ),( RMSe - MUR ) )", "obj1": 0.32129277566539927, "obj2": 0.5789353020700149}, {"determining": "( ( ( ARS / FirstVNF_CPU_Server ) + ( ACS - BR ) ) + ( Max( Const,BR ) / Max( FirstVNF_RAM_Server,ACS ) ) )", "choosing": "( ( DS / RCSe ) + ( MUC + ( RMSe + MUR ) ) )", "obj1": 0.47338403041825095, "obj2": 0.4503038714575493}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Max( ARS,MRS ) ) ) )", "choosing": "( ( Min( DS ,( DS / ( RMSe * Min( RMSe ,Max( MUM,RCSe ) ) ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( ( ( ARS * MRS ) / ( FirstVNF_Mem / PN ) ) * Min( AMS ,( PN / PN ) ) )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( CS - CS ) ) )", "obj1": 0.6007604562737643, "obj2": 0.3128505494513358}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ARS ,CRS ),( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( MUR ,RCSe ) ,( CS + DS ) ) + Max( Min( RCSe ,RCSe ),( MUR * MUR ) ) )", "obj1": 0.33079847908745247, "obj2": 0.594068054226798}, {"determining": "( Max( Const,FirstVNF_Mem ) - Min( MRS ,MDR ) )", "choosing": "Max( ( ( CS - RRSe ) + ( MLU * CS ) ),( Min( MUR ,MUR ) - ( MUM * RMSe ) ) )", "obj1": 0.16920152091254753, "obj2": 0.8176645048598525}, {"determining": "( ( ( FirstVNF_Mem / Const ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( ( MLU * MLU ) * Min( RRSe ,Max( CS,DS ) ) )", "obj1": 0.30228136882129275, "obj2": 0.6477092632380871}, {"determining": "( ( Min( ACS ,MDR ) * ( FirstVNF_RAM_Server / ACS ) ) * ( Min( DDR ,BR ) * Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( ( ( MUC * CS ) + ( RRSe + MUM ) ) / ( ( RMSe + RRSe ) - Max( MUR,RRSe ) ) )", "obj1": 0.17870722433460076, "obj2": 0.7767660812224759}, {"determining": "( Max( ( PN + MRS ),MDR ) + ( PN - MDR ) )", "choosing": "( ( ( MUC * DS ) + ( MUR - RCSe ) ) - ( ( RCSe * MUR ) * ( RMSe * MLU ) ) )", "obj1": 0.18250950570342206, "obj2": 0.7252801189975931}, {"determining": "( Max( Max( FirstVNF_RAM_Server,MDR ),RRS ) * ( FirstVNF_Mem / RRS ) )", "choosing": "Min( ( RRSe / MUC ) ,( DS - ( DS - MUM ) ) )", "obj1": 0.3840304182509506, "obj2": 0.5017308682109959}, {"determining": "( ( Max( FirstVNF_RAM,( CRS / ( FirstVNF_CPU_Server / ACS ) ) ) * ( ARS - RRS ) ) + Max( ( DDR - ( ARS + FirstVNF_RAM ) ),ARS ) )", "choosing": "( ( MUM - MUR ) / ( RRSe + ( ( Min( RRSe ,Max( Min( RMSe ,RCSe ),CS ) ) + Min( MUR ,MUR ) ) - Min( ( RRSe / ( Max( MUM,RRSe ) * DS ) ) ,MLU ) ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - PN ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - Min( MUC ,MLU ) ) )", "obj1": 0.188212927756654, "obj2": 0.725482423490411}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) )", "choosing": "( ( DS - MUC ) / Max( CS,DS ) )", "obj1": 0.25285171102661597, "obj2": 0.7236179283758061}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ARS ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 0.8155893536121673, "obj2": 0.13164903699532482}, {"determining": "( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.8193916349809885, "obj2": 0.12566878656501612}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC + MLU ) ,Min( ( MUC - RCSe ) ,RRSe ) )", "obj1": 0.21292775665399238, "obj2": 0.6823237263468631}, {"determining": "Min( ( PN + Const ) ,( MRS / PN ) )", "choosing": "Max( ( MUM - MLU ),( MUM / ( MUC * MUM ) ) )", "obj1": 0.17300380228136883, "obj2": 0.7607363764962787}, {"determining": "Min( Min( Max( PN,AMS ) ,( DDR * PN ) ) ,( ( Const + FirstVNF_Mem ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RMSe + CS ),( MLU / RMSe ) ) ,Max( Min( RMSe ,MUC ),( MLU * MUC ) ) )", "obj1": 0.3288973384030418, "obj2": 0.5568010506552269}, {"determining": "( ( ( ACS / PN ) / Min( FirstVNF_Mem ,CRS ) ) * ( Min( Const ,FirstVNF_Mem ) - Min( ARS ,BR ) ) )", "choosing": "Min( ( RMSe + ( DS - RRSe ) ) ,( ( MUC / MUM ) / MUM ) )", "obj1": 0.3612167300380228, "obj2": 0.5495171162310446}, {"determining": "Max( Max( ACS,Max( AMS,PN ) ),Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( ( CS / MUR ) - Max( DS,MUR ) ) + ( ( RMSe / MLU ) / ( MUR + RCSe ) ) )", "obj1": 0.14258555133079848, "obj2": 0.8181153840065928}, {"determining": "( ( ( Const * FirstVNF_CPU ) * Min( MRS ,Const ) ) / ( ( Const + AMS ) + Max( PN,Const ) ) )", "choosing": "( ( Min( DS ,MLU ) + ( RMSe / MUC ) ) - ( Min( MLU ,RCSe ) - Min( RCSe ,MUC ) ) )", "obj1": 0.2832699619771863, "obj2": 0.6472134797343955}, {"determining": "Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( RRS * RRS ) * FirstVNF_RAM ) )", "choosing": "( ( ( MUR * DS ) * Min( MUM ,RRSe ) ) - ( ( MUM * MUR ) / ( MUR + RMSe ) ) )", "obj1": 0.41254752851711024, "obj2": 0.4949961936433361}, {"determining": "( Min( ( AMS + FirstVNF_CPU ) ,( ACS + Const ) ) * Max( RRS,( BR + BR ) ) )", "choosing": "( Min( ( MUC + DS ) ,Max( MUM,MLU ) ) - ( ( MUR + RMSe ) + ( MUM - DS ) ) )", "obj1": 0.344106463878327, "obj2": 0.5347838821428731}, {"determining": "( Max( Const,PN ) * ( ( Const * FirstVNF_RAM ) - PN ) )", "choosing": "Max( Max( ( DS * MUR ),( RRSe * RRSe ) ),Max( ( MUM - DS ),( CS - RRSe ) ) )", "obj1": 0.5627376425855514, "obj2": 0.4146068586360333}, {"determining": "( ( Max( AMS,MDR ) / ( PN + RRS ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) + ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUR ) * CS ) + ( RMSe / MUM ) )", "obj1": 0.4296577946768061, "obj2": 0.5489625951339433}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( FirstVNF_CPU ,Const ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ,Min( MRS ,PN ) ) * ( ( ( DDR / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) / ACS ) )", "choosing": "Max( Min( Min( ( RCSe - CS ) ,Min( CS ,RRSe ) ) ,( ( CS + MLU ) - Max( RCSe,RCSe ) ) ),( ( ( RCSe / MUC ) * ( MUR + CS ) ) / ( Max( DS,CS ) + ( RRSe / CS ) ) ) )", "obj1": 0.24524714828897337, "obj2": 0.7399890010531823}, {"determining": "( ( MDR * BR ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.643762953587628}, {"determining": "Max( ( Const * MRS ),Max( ACS,( ( ARS + FirstVNF_RAM_Server ) / PN ) ) )", "choosing": "Max( ( ( Max( CS,RCSe ) / ( CS * CS ) ) - ( Max( DS,CS ) / ( MUC - CS ) ) ),Max( ( Min( RRSe ,MUR ) * ( DS / MUC ) ),Max( ( MLU + MLU ),( MUC + DS ) ) ) )", "obj1": 0.28517110266159695, "obj2": 0.6864595287251384}, {"determining": "( Max( CRS,FirstVNF_Mem ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( ( ( ( DS + MLU ) + Max( MUM,MUC ) ) - ( ( MLU - DS ) / Max( MUR,DS ) ) ) + ( ( ( RCSe * RCSe ) - ( RMSe / DS ) ) - ( Max( CS,MUR ) - Max( MUC,MUC ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3822436561855518}, {"determining": "Max( ( DDR * FirstVNF_CPU ),( FirstVNF_Mem_Server / ARS ) )", "choosing": "Max( ( ( ( RMSe / MUR ) / ( RCSe + MUR ) ) + ( Min( MLU ,CS ) + ( RMSe - MUR ) ) ),( ( ( MLU * DS ) + ( MUM * RMSe ) ) / ( RCSe / CS ) ) )", "obj1": 0.2224334600760456, "obj2": 0.7689588008330874}, {"determining": "( ( RRS + BR ) * ( ( ( MRS + ACS ) - RRS ) / ( ( FirstVNF_RAM_Server + MDR ) - Min( RRS ,BR ) ) ) )", "choosing": "( ( CS - Min( Min( RRSe ,MUM ) ,( ( RMSe - ( ( CS * RCSe ) + Max( ( MUR / CS ),MUM ) ) ) * MUC ) ) ) - Max( MUC,( MLU * RCSe ) ) )", "obj1": 0.16539923954372623, "obj2": 0.8140151047095898}, {"determining": "( ( Min( Min( FirstVNF_Mem ,MDR ) ,Max( PN,RRS ) ) / ( ( DDR / ARS ) * Max( FirstVNF_RAM,PN ) ) ) + Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Max( ACS,MDR ) / ( Const * Const ) ) ) )", "choosing": "( Min( ( ( MUM + RRSe ) / CS ) ,MUR ) / ( RCSe * Max( DS,MUR ) ) )", "obj1": 0.18631178707224336, "obj2": 0.7496556855987763}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( PN * FirstVNF_Mem_Server ),Max( DDR,PN ) ) ) / Max( Min( ARS ,FirstVNF_Mem ),( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( FirstVNF_RAM_Server ,CRS ) ) ) )", "choosing": "( ( ( Max( RCSe,CS ) - Min( MUR ,CS ) ) * ( Min( MUC ,MUC ) - ( CS * MUC ) ) ) / ( ( Min( RCSe ,MUR ) / ( MUR * MUC ) ) - ( ( MUC - MUC ) + ( MUR + MUC ) ) ) )", "obj1": 0.20532319391634982, "obj2": 0.7562003900353692}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_Mem,( BR / MDR ) ),( FirstVNF_CPU + FirstVNF_RAM_Server ) )", "choosing": "Min( Max( Min( ( MUR + CS ) ,Max( MUR,CS ) ),( ( MUM + CS ) - ( DS * MUM ) ) ) ,( ( ( MUC - RCSe ) - ( RRSe / MUM ) ) / Max( Max( RMSe,RCSe ),Max( RCSe,CS ) ) ) )", "obj1": 0.25475285171102663, "obj2": 0.6658761302599384}, {"determining": "Max( Min( ( ( FirstVNF_CPU_Server * BR ) * ( FirstVNF_CPU + FirstVNF_Mem ) ) ,Max( ( AMS + FirstVNF_RAM ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ),( ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) + Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Max( DDR,FirstVNF_CPU ) ) ) )", "choosing": "( ( CS - ( ( CS + RRSe ) / ( MUR - MLU ) ) ) / ( MUR / MUC ) )", "obj1": 0.18250950570342206, "obj2": 0.7818002033163286}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( FirstVNF_CPU - BR ) ,( RRS + DDR ) ) ) )", "choosing": "Max( ( Min( ( MUR - RRSe ) ,RCSe ) - ( ( RCSe + MUC ) * RRSe ) ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "Min( ( ACS * DDR ) ,( ARS - ACS ) )", "choosing": "( ( ( ( MUR * MUC ) * DS ) / RCSe ) + Max( ( Max( RRSe,MUC ) - MUR ),RRSe ) )", "obj1": 0.8574144486692015, "obj2": 0.10666969211763205}, {"determining": "Max( Max( ( ( PN - ARS ) * ( Const - ( PN / ( FirstVNF_Mem / BR ) ) ) ),( Min( ARS ,BR ) / Min( ARS ,MRS ) ) ),( CRS * PN ) )", "choosing": "( ( Max( Min( RRSe ,Min( DS ,MUR ) ),MUC ) * MUM ) * ( Min( MUC ,MLU ) / RRSe ) )", "obj1": 0.07984790874524715, "obj2": 0.7868603736658423}, {"determining": "( ( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) * ( RRS * AMS ) ) ) * Min( Min( ( AMS + FirstVNF_CPU_Server ) ,( Const * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,RRS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - DS ) - ( RCSe - ( MUR + ( DS * MUC ) ) ) )", "obj1": 0.29277566539923955, "obj2": 0.6093369706070058}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ACS - MDR ) ) ,Min( ( FirstVNF_RAM_Server / DDR ) ,Max( Const,FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( DS ,Max( RCSe,Max( RRSe,CS ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.9847908745247148, "obj2": 0.009971683969873224}, {"determining": "( Min( MRS ,RRS ) + ( ( AMS - BR ) - FirstVNF_Mem ) )", "choosing": "( ( ( Max( MLU,DS ) + ( RRSe * RCSe ) ) - MUR ) / ( MUC - MUC ) )", "obj1": 0.3193916349809886, "obj2": 0.6361929080365906}, {"determining": "Max( ( ARS / FirstVNF_CPU ),Max( Max( MRS,FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "( ( MUM + ( MUC * MLU ) ) - ( RMSe / ( MUC + ( MUR / RMSe ) ) ) )", "obj1": 0.3403041825095057, "obj2": 0.5663337375165307}, {"determining": "Max( ( ( ( MRS - FirstVNF_CPU ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) - Min( ( FirstVNF_CPU - CRS ) ,Max( RRS,MDR ) ) ),Min( Max( ( MRS * MRS ),Min( FirstVNF_Mem ,ACS ) ) ,( ( Const * FirstVNF_CPU_Server ) * ( ACS * PN ) ) ) )", "choosing": "( Max( ( RRSe + RRSe ),( MLU * MLU ) ) * ( Min( MUM ,( RCSe + RCSe ) ) * RCSe ) )", "obj1": 0.3288973384030418, "obj2": 0.5683166808204102}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5763414158924568}, {"determining": "( ( ( Min( FirstVNF_RAM ,MDR ) * ( MRS - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) / ( ( ( MRS * Const ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / ( ( DDR - ARS ) - ( AMS * PN ) ) ) )", "choosing": "( Min( MUM ,RMSe ) / ( RCSe / Max( ( MLU - MUM ),DS ) ) )", "obj1": 0.33840304182509506, "obj2": 0.5663932183496024}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS / ACS ),( DDR * PN ) )", "choosing": "( Min( ( ( RMSe * DS ) * ( RRSe - RRSe ) ) ,Max( ( MUR - RMSe ),Min( MLU ,DS ) ) ) * Min( ( Min( RMSe ,MLU ) / Min( RCSe ,CS ) ) ,( Min( MLU ,( MUC + MUR ) ) / ( CS * RMSe ) ) ) )", "obj1": 0.2338403041825095, "obj2": 0.7191287598197806}, {"determining": "Max( ( ( ( ARS * FirstVNF_CPU_Server ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( CRS - RRS ) ) ),( Max( ( FirstVNF_Mem_Server * DDR ),Max( MDR,MDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( CS - CS ) - MUR ) ,RMSe ) - Max( ( RRSe - MLU ),( MUM / CS ) ) )", "obj1": 0.1844106463878327, "obj2": 0.7916933395994249}, {"determining": "( ( FirstVNF_RAM + ( FirstVNF_CPU_Server + Max( CRS,MRS ) ) ) * Min( FirstVNF_RAM ,MRS ) )", "choosing": "( ( MLU * Max( RCSe,Max( RRSe,DS ) ) ) + Max( ( DS + MUR ),Min( DS ,Max( RCSe,RCSe ) ) ) )", "obj1": 0.4600760456273764, "obj2": 0.46592688413378686}, {"determining": "( ( Min( Max( PN,BR ) ,( PN + DDR ) ) + ( ( RRS + AMS ) - ( FirstVNF_RAM * ARS ) ) ) * Max( ( ( BR / AMS ) + ( MRS / FirstVNF_CPU_Server ) ),Min( ( Const * BR ) ,( Const - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MUR * RCSe ) - ( RRSe - MUC ) ) / ( ( MUR + RRSe ) - ( RRSe * MUM ) ) ) ,Max( ( ( MLU / MLU ) / Max( MUR,DS ) ),( ( MLU + RMSe ) - ( RRSe / DS ) ) ) )", "obj1": 0.3155893536121673, "obj2": 0.6026339190693046}, {"determining": "( ( FirstVNF_RAM_Server * BR ) / ( AMS - PN ) )", "choosing": "Min( ( ( MUR * MLU ) + ( MUM - RCSe ) ) ,Min( MUC ,MUM ) )", "obj1": 0.34790874524714827, "obj2": 0.5478401742501111}, {"determining": "( Min( ( Max( MRS,DDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( ( MLU / ( MUM * MLU ) ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server + CRS ) - ( Min( BR ,Const ) - DDR ) ) )", "choosing": "( ( ( ( DS / RRSe ) - RCSe ) + MLU ) + Min( Max( ( MUR * MUR ),MUR ) ,MUM ) )", "obj1": 0.7661596958174905, "obj2": 0.19435163513207335}], "2": [{"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_RAM_Server * BR ) / ( AMS - PN ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( MUM,DS ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( FirstVNF_RAM / FirstVNF_CPU ) ) - Min( CRS ,Const ) )", "choosing": "Min( Max( MUR,( CS / CS ) ) ,Max( ( Min( MLU ,DS ) / RCSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / BR ),ACS ) + ( ARS / ( BR - ACS ) ) )", "choosing": "( Max( RMSe,DS ) / Min( ( CS * ( Min( MLU ,DS ) * ( DS * ( MUR - ( Min( RMSe ,MUC ) - Min( MUC ,MUM ) ) ) ) ) ) ,Max( RRSe,DS ) ) )", "obj1": 0.034220532319391636, "obj2": 0.7991669501201741}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * Min( DDR ,ACS ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / ( CS + ( Min( MUM ,CS ) - RMSe ) ) )", "obj1": 0.5627376425855514, "obj2": 0.28737827208856614}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU_Server + CRS ) - ( Min( BR ,Const ) - DDR ) ) )", "choosing": "( ( ( ( DS / RRSe ) - RCSe ) + MLU ) + Min( Max( ( MUR * MUR ),MUR ) ,MUM ) )", "obj1": 0.7661596958174905, "obj2": 0.19435163513207335}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - AMS ) ) ) * BR ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( ( MUM - ( CS * Min( MUC ,Max( MUM,MUM ) ) ) ) ,MUR ) + ( DS - CS ) ) ,MUC ) )", "obj1": 0.3650190114068441, "obj2": 0.42223195098843536}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - Min( ( ( ( ( BR * Max( FirstVNF_RAM,FirstVNF_RAM ) ) * MRS ) / FirstVNF_RAM ) / FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( ( RCSe + MUR ) + ( MUR / MUC ) )", "obj1": 0.7965779467680608, "obj2": 0.08054798474821998}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.07224334600760456, "obj2": 0.7041774450935934}, {"determining": "( ( MDR * BR ) / ( DDR / ( AMS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * ( ( ( ( DS + MLU ) + Max( MUM,MUC ) ) - ( ( MLU - DS ) / Max( MUR,DS ) ) ) + ( ( ( RCSe * RCSe ) - ( RMSe / DS ) ) - ( Max( CS,MUR ) - Max( MUC,MUC ) ) ) ) ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.3060023754742023}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Max( ARS,MRS ) ) ) )", "choosing": "( ( Min( DS ,( DS / ( RMSe * Min( RMSe ,Max( MUM,RCSe ) ) ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( Min( ( AMS + FirstVNF_CPU ) ,( ACS + Const ) ) * Max( AMS,MDR ) )", "choosing": "( Min( ( MUC + DS ) ,Max( MUM,MLU ) ) - ( DS / MUR ) )", "obj1": 0.07034220532319392, "obj2": 0.7880688085275643}, {"determining": "Min( ( ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) * DDR ) ,( ARS - ACS ) )", "choosing": "( DS + Max( ( Max( RRSe,MUC ) - MUR ),RRSe ) )", "obj1": 0.9163498098859315, "obj2": 0.06980668661377108}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU ),( ( DDR * DDR ) / ( ( ACS - AMS ) - RRS ) ) )", "choosing": "Min( ( ( MUR - CS ) - ( DS / CS ) ) ,( ( ( ( MUC + ( ( MUR * Max( MUR,MUM ) ) + ( DS - CS ) ) ) / Min( Min( CS ,( MUM + RMSe ) ) ,CS ) ) - DS ) / Max( Max( ( ( RRSe - MUC ) / RMSe ),MUC ),MUC ) ) )", "obj1": 0.10456273764258556, "obj2": 0.6823598579007206}, {"determining": "( Max( CRS,FirstVNF_Mem ) + ( ( DDR / ( AMS * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( ( ( ( DS + MLU ) + Max( MUM,MUC ) ) - ( ( MLU - DS ) / Max( MUR,DS ) ) ) + ( ( ( RCSe * RCSe ) - ( RMSe / DS ) ) - ( Max( CS,MUR ) - Max( MUC,MUC ) ) ) )", "obj1": 0.5190114068441065, "obj2": 0.3822436561855518}, {"determining": "( ( FirstVNF_RAM_Server - Min( MDR ,FirstVNF_Mem ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Min( Max( DS,MLU ) ,Min( ( MUC - RCSe ) ,RRSe ) )", "obj1": 0.7775665399239544, "obj2": 0.1932147298899319}, {"determining": "( MDR + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( Min( ( MUC + MLU ) ,Min( ( MUC - RCSe ) ,RRSe ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5357689054423823}, {"determining": "( Min( Min( DDR ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server * Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,CRS ) ) ) ) / ( Min( Min( Const ,ARS ) ,AMS ) * BR ) )", "choosing": "( ( RRSe / RRSe ) - ( MUM * Max( RRSe,( Max( Min( ( MLU / DS ) ,( MLU - Max( RRSe,MLU ) ) ),( Min( RCSe ,RMSe ) * ( ( RRSe * MUC ) * MUR ) ) ) + RMSe ) ) ) )", "obj1": 0.34600760456273766, "obj2": 0.4921930174524112}, {"determining": "( Min( Min( FirstVNF_CPU ,Const ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) + ( ( ( Max( Min( Min( ( RCSe - CS ) ,Min( CS ,RRSe ) ) ,( ( CS + MLU ) - Max( RCSe,RCSe ) ) ),( ( ( RCSe / MUC ) * ( MUR + CS ) ) / ( Max( DS,CS ) + ( RRSe / CS ) ) ) ) * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.18631178707224336, "obj2": 0.6766198078527296}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,( ARS / FirstVNF_CPU ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( MUR / RMSe ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.2984790874524715, "obj2": 0.516578854156233}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5763414158924568}, {"determining": "( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * BR ) )", "choosing": "( ( ( CS / RCSe ) / ( ( RCSe - DS ) / Max( MLU,MUC ) ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.9771863117870723, "obj2": 0.009192941734997859}, {"determining": "( ( MDR * BR ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * MUM ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.643762953587628}, {"determining": "( ( ( Max( Const,FirstVNF_Mem ) - Min( MRS ,MDR ) ) * ( FirstVNF_RAM_Server / ACS ) ) * ( Min( DDR ,BR ) * Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( ( ( MUC * CS ) + ( RRSe + MUM ) ) / ( ( RMSe + ( ( CS - RRSe ) + ( MLU * CS ) ) ) - Max( MUR,RRSe ) ) )", "obj1": 0.22813688212927757, "obj2": 0.6067319225708524}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( FirstVNF_CPU - BR ) ,( RRS + DDR ) ) ) )", "choosing": "Max( ( Min( ( MUR - RRSe ) ,RCSe ) - ( ( RCSe + MUC ) * RRSe ) ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "( ( ( ( RRS / RRS ) + ( MDR - FirstVNF_CPU ) ) * ( Max( CRS,MDR ) * ( ARS / AMS ) ) ) - Min( MRS ,RRS ) )", "choosing": "Max( Min( DS ,Max( RCSe,( Max( MLU,DS ) + ( RRSe * RCSe ) ) ) ),( MUC - ( CS / MUM ) ) )", "obj1": 0.4923954372623574, "obj2": 0.3856674654558923}, {"determining": "( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC + MLU ) ,Min( ( ( ( MUC - MUC ) - Max( DS,CS ) ) - RCSe ) ,RRSe ) )", "obj1": 0.4391634980988593, "obj2": 0.3927266632490615}, {"determining": "( BR / ( AMS - PN ) )", "choosing": "Min( ( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) + ( MUM - RCSe ) ) ,Min( MUC ,MUM ) )", "obj1": 0.31368821292775667, "obj2": 0.49433288742117876}, {"determining": "( Max( FirstVNF_Mem,CRS ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "( ( RMSe / MLU ) * ( ( RMSe / CS ) + RRSe ) )", "obj1": 0.20912547528517111, "obj2": 0.671512062422142}, {"determining": "( ( Max( FirstVNF_RAM,( CRS / ( FirstVNF_CPU_Server / ACS ) ) ) * ( ARS - RRS ) ) + Max( ( DDR - ( ARS + FirstVNF_RAM ) ),ARS ) )", "choosing": "( ( MUM - MUR ) / ( RRSe + ( ( Min( RRSe ,Max( Min( RMSe ,RCSe ),CS ) ) + Min( MUR ,MUR ) ) - Min( ( RRSe / ( Max( MUM,RRSe ) * DS ) ) ,MLU ) ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( ( MDR + PN ) * ( ARS - RRS ) ) + RRS )", "choosing": "( ( MUM / ( RRSe / MUC ) ) / ( RRSe + ( CS - RRSe ) ) )", "obj1": 0.32509505703422054, "obj2": 0.4942564477226136}, {"determining": "( Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / Max( Min( MUC ,CS ),Max( CS,DS ) ) )", "obj1": 0.9239543726235742, "obj2": 0.060199356675375126}, {"determining": "Min( ( ACS * DDR ) ,( ( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( FirstVNF_CPU - BR ) ,( RRS + DDR ) ) ) ) - ACS ) )", "choosing": "( ( ( MUR - RRSe ) / RCSe ) + Max( ( Max( RRSe,MUC ) - MUR ),RRSe ) )", "obj1": 0.9258555133079848, "obj2": 0.04903670898584863}, {"determining": "( Min( ( Max( MRS,DDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( ( MLU / ( MUM * MLU ) ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( BR / MDR ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( Max( ( MUR + RCSe ),( RMSe - MUR ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001902485085018906}, {"determining": "( Min( ( Max( MRS,DDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( ( MLU / ( MUM * MLU ) ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( Max( Min( CS ,Min( RCSe ,RCSe ) ),( RMSe / MUR ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( ( Max( ( ( RCSe * Max( CS,MUM ) ) / ( ( MUC + RCSe ) * RRSe ) ),MUC ) * MLU ) * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,ACS ) / Min( FirstVNF_Mem ,RRS ) ) ) / PN ) - ACS )", "choosing": "Min( ( MUM + MLU ) ,( Max( Max( ( ( RMSe / Min( Min( CS ,MUM ) ,( DS / DS ) ) ) + Min( MUC ,Max( MUC,( RCSe + RMSe ) ) ) ),MUR ),MUR ) - ( MLU * Max( MUM,( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( DDR - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,CRS ) ) ) / ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Max( CS,RMSe ) - Min( RRSe ,( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) ) + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * MUR ) ,Max( RRSe,( Min( MUC ,RRSe ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + CRS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * Max( RMSe,DS ) ) ,Max( RRSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) )", "choosing": "Max( ( Max( ( MUR - CS ),RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * MRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,MUR ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ACS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( MUC + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - ( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * MRS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( CS - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),RCSe ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( ( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - Min( MUC ,MLU ) ) ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - ARS ) + FirstVNF_CPU_Server ) - PN ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) - Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ( Min( MDR ,FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( RRSe / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,CS ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,Max( ( PN * FirstVNF_Mem_Server ),Max( DDR,PN ) ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUC - MUC ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS - ( ( CS + RRSe ) / ( MUR - MLU ) ) ) / ( MUR / MUC ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) + Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Max( DDR,FirstVNF_CPU ) ) ) ,( RRS + DDR ) ) ) )", "choosing": "Max( ( Min( ( MUR - RRSe ) ,RCSe ) - ( ( RCSe + MUC ) * RRSe ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,ACS ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR * MUC ) * DS ) / RCSe ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ARS ) * Min( Min( ( AMS + FirstVNF_CPU_Server ) ,( Const * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,RRS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - DS ) - ( ( RMSe / ( DS / MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Min( MRS ,RRS ) + ( ( AMS - BR ) - FirstVNF_Mem ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),( ( ( Max( MLU,DS ) + ( RRSe * RCSe ) ) - MUR ) / ( MUC - MUC ) ) ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_RAM ,MDR ) * ( MRS - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + ( Min( MUM ,RMSe ) / ( RCSe / Max( ( MLU - MUM ),DS ) ) ) ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( DDR * PN ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,MLU ) / Min( RCSe ,CS ) ) ,( Min( MLU ,RCSe ) / ( CS * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,( ( MLU * DS ) / Max( MUC,CS ) ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}], "3": [{"determining": "( Max( ( CRS / BR ),ACS ) + ( ARS / ( BR - ACS ) ) )", "choosing": "( Max( RMSe,DS ) / Min( ( CS * ( Min( MLU ,DS ) * ( DS * ( MUR - ( Min( RMSe ,MUC ) - Min( MUC ,MUM ) ) ) ) ) ) ,Max( RRSe,DS ) ) )", "obj1": 0.034220532319391636, "obj2": 0.7991669501201741}, {"determining": "( Min( ( ( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( Max( CRS,FirstVNF_RAM_Server ) ,ACS ) ) + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS - MUR ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_RAM_Server * BR ) / ( AMS - PN ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( MUM,DS ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / ( ARS * FirstVNF_CPU ) ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RMSe,DS ) / Min( ( CS * ( Min( MLU ,DS ) * DS ) ) ,Max( RRSe,( ( RRSe - ( Max( RRSe,CS ) * ( MUC + RRSe ) ) ) / ( MUM / MUR ) ) ) ) )", "obj1": 0.034220532319391636, "obj2": 0.7991669501201741}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) * ( DDR * FirstVNF_RAM ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( RCSe + RCSe ) - ( DS + MUC ) )", "obj1": 0.6996197718631179, "obj2": 0.1252459980002292}, {"determining": "( ( ( ARS * MRS ) / ( FirstVNF_Mem / PN ) ) * FirstVNF_CPU_Server )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( ( DS / RCSe ) - CS ) ) )", "obj1": 0.4543726235741445, "obj2": 0.34865038237791013}, {"determining": "Max( ( ( PN - DDR ) / MRS ),( ( MRS * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( ( ( ( ( RRSe - ( Max( RRSe,CS ) * ( MUC + RRSe ) ) ) / ( MUM / MUR ) ) - CS ) - ( DS / CS ) ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6256129898323838}, {"determining": "( ( ( ( FirstVNF_CPU_Server + ACS ) - ( ARS + ( ( ( ( BR / RRS ) - FirstVNF_Mem ) / ( ARS / FirstVNF_RAM ) ) / Min( PN ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( Min( ( ( ( MUR * ( CS * ( Min( MLU ,DS ) * DS ) ) ) - DS ) * MUR ) ,Max( RRSe,DS ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.2443434753170881}, {"determining": "( ( MDR * BR ) / ( DDR / ( AMS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * ( ( ( ( DS + MLU ) + Max( MUM,MUC ) ) - ( ( MLU - DS ) / Max( MUR,DS ) ) ) + ( ( ( RCSe * RCSe ) - ( RMSe / DS ) ) - ( Max( CS,MUR ) - Max( MUC,MUC ) ) ) ) ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.3060023754742023}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.07224334600760456, "obj2": 0.7041774450935934}, {"determining": "Min( ( ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) * DDR ) ,( ARS - ACS ) )", "choosing": "( DS + Max( ( Max( RRSe,MUC ) - MUR ),RRSe ) )", "obj1": 0.9163498098859315, "obj2": 0.06980668661377108}, {"determining": "( Max( ( CRS / BR ),ACS ) + ( ARS / Max( ( CRS / BR ),ACS ) ) )", "choosing": "( Max( RMSe,DS ) / Min( ( CS * ( CS * ( Min( MLU ,DS ) * DS ) ) ) ,Max( RRSe,DS ) ) )", "obj1": 0.043726235741444866, "obj2": 0.7690572745711393}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - Min( ( ( ( ( BR * Max( FirstVNF_RAM,FirstVNF_RAM ) ) * MRS ) / FirstVNF_RAM ) / FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( ( RCSe + MUR ) + ( MUR / MUC ) )", "obj1": 0.7965779467680608, "obj2": 0.08054798474821998}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Max( ARS,MRS ) ) ) )", "choosing": "( ( Min( DS ,( DS / ( RMSe * Min( RMSe ,Max( MUM,RCSe ) ) ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * Min( DDR ,ACS ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / ( CS + ( Min( MUM ,CS ) - RMSe ) ) )", "obj1": 0.5627376425855514, "obj2": 0.28737827208856614}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),MRS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) ) ) )", "obj1": 0.11216730038022814, "obj2": 0.6629037493185499}, {"determining": "( ( MRS - Const ) + ( ( ( MDR - Min( FirstVNF_RAM ,MRS ) ) * AMS ) + ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - ( ( ( ARS + BR ) * ( ARS + FirstVNF_RAM_Server ) ) * ( ( AMS / FirstVNF_CPU ) - ( FirstVNF_CPU * MDR ) ) ) ) ) + ( MDR - PN ) ) ) )", "choosing": "( Min( DS ,CS ) - ( ( CS / RMSe ) / Min( DS ,Min( MUC ,MUM ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2595152900554318}, {"determining": "( MDR + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( Min( ( MUC + MLU ) ,Min( ( MUC - RCSe ) ,RRSe ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5357689054423823}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5763414158924568}, {"determining": "( ( Min( ACS ,MDR ) * ( FirstVNF_RAM_Server / ACS ) ) * ( Min( DDR ,BR ) * ( ( ( ACS / Const ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( CS,DS ) / ( ( ( ( CS - RRSe ) + ( ( RMSe - Max( ( RCSe + RCSe ),MUM ) ) - ( Max( RMSe,MLU ) + MUC ) ) ) + RRSe ) - Max( MUR,RRSe ) ) )", "obj1": 0.31749049429657794, "obj2": 0.4758499115231616}, {"determining": "Max( Max( ARS,CRS ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( RRSe ,MUR ) + ( CS - RRSe ) ) ,MUC ) )", "obj1": 0.36311787072243346, "obj2": 0.4369669894430932}, {"determining": "( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * BR ) )", "choosing": "( ( ( CS / RCSe ) / ( ( RCSe - DS ) / Max( MLU,MUC ) ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.9771863117870723, "obj2": 0.009192941734997859}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( FirstVNF_CPU - BR ) ,( RRS + DDR ) ) ) )", "choosing": "Max( ( Min( ( MUR - RRSe ) ,RCSe ) - ( ( RCSe + MUC ) * RRSe ) ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "( ( Min( ACS ,MDR ) * ( ( AMS / PN ) / ACS ) ) * ( Min( DDR ,BR ) * ( ( ( FirstVNF_Mem / Const ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( CS,DS ) / ( RMSe - Max( ( RCSe + RCSe ),MUM ) ) )", "obj1": 0.2965779467680608, "obj2": 0.5145530414240013}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) * ( ( ( FirstVNF_CPU_Server + ACS ) - ( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) )", "choosing": "( Min( MUC ,( RCSe + DS ) ) + ( MUR / MUC ) )", "obj1": 0.6520912547528517, "obj2": 0.25501388201086733}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Max( ACS,MDR ) / ( Const * Const ) ) ) * ( ( ( MRS + ACS ) - RRS ) / ( ( FirstVNF_RAM_Server + MDR ) - Min( RRS ,BR ) ) ) )", "choosing": "( ( CS - Min( Min( RRSe ,MUM ) ,( ( RMSe - ( CS + Max( ( MUR / CS ),MUM ) ) ) * ( ( MUM + RRSe ) / CS ) ) ) ) - Max( MUC,( MLU * RCSe ) ) )", "obj1": 0.43346007604562736, "obj2": 0.3921556265781987}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU ),( ( DDR * DDR ) / ( ( ACS - AMS ) - RRS ) ) )", "choosing": "Min( ( ( MUR - CS ) - ( DS / CS ) ) ,( ( ( ( MUC + ( ( MUR * Max( MUR,MUM ) ) + ( DS - CS ) ) ) / Min( Min( CS ,( MUM + RMSe ) ) ,CS ) ) - DS ) / Max( Max( ( ( RRSe - MUC ) / RMSe ),MUC ),MUC ) ) )", "obj1": 0.10456273764258556, "obj2": 0.6823598579007206}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( Const * Max( Max( MDR,PN ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) ) ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( MUC ,RRSe ) + ( CS - RRSe ) ) ,MUC ) )", "obj1": 0.38593155893536124, "obj2": 0.40863157045608806}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "( ( Const / ( ( RRS + FirstVNF_CPU_Server ) - PN ) ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,Min( MUC ,MUC ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.22433460076045628, "obj2": 0.5735019857143027}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - AMS ) ) ) * BR ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( ( MUM - ( CS * Min( MUC ,Max( MUM,MUM ) ) ) ) ,MUR ) + ( DS - CS ) ) ,MUC ) )", "obj1": 0.3650190114068441, "obj2": 0.42223195098843536}, {"determining": "( ( Max( FirstVNF_RAM,( CRS / ( FirstVNF_CPU_Server / ACS ) ) ) * ( ARS - RRS ) ) + Max( ( DDR - ( ARS + FirstVNF_RAM ) ),ARS ) )", "choosing": "( ( MUM - MUR ) / ( RRSe + ( ( Min( RRSe ,Max( Min( RMSe ,RCSe ),CS ) ) + Min( MUR ,MUR ) ) - Min( ( RRSe / ( Max( MUM,RRSe ) * DS ) ) ,MLU ) ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( Max( ( ( ( ( ( BR / RRS ) - FirstVNF_Mem ) / FirstVNF_RAM_Server ) / Min( PN ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) / BR ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( Max( RMSe,DS ) / Min( ( CS * ( Min( MUR ,DS ) * DS ) ) ,Max( RRSe,DS ) ) )", "obj1": 0.03802281368821293, "obj2": 0.7974177875020412}, {"determining": "( Max( ( MRS + FirstVNF_RAM_Server ),ARS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( CS / CS ) ) )", "obj1": 0.30988593155893535, "obj2": 0.5017591937797139}, {"determining": "( BR / ( AMS - PN ) )", "choosing": "Min( ( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) + ( MUM - RCSe ) ) ,Min( MUC ,MUM ) )", "obj1": 0.31368821292775667, "obj2": 0.49433288742117876}, {"determining": "( Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / Max( Min( MUC ,CS ),Max( CS,DS ) ) )", "obj1": 0.9239543726235742, "obj2": 0.060199356675375126}, {"determining": "( ( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) * ( DDR * FirstVNF_RAM ) ) * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( Min( ( CS * MUR ) ,Max( ( Min( MUC ,( RCSe + RCSe ) ) + ( MUR / MUC ) ),DS ) ) + ( MUR / MUC ) )", "obj1": 0.7946768060836502, "obj2": 0.09064982016679025}, {"determining": "Min( ( ACS * DDR ) ,( ( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( FirstVNF_CPU - BR ) ,( RRS + DDR ) ) ) ) - ACS ) )", "choosing": "( ( ( MUR - RRSe ) / RCSe ) + Max( ( Max( RRSe,MUC ) - MUR ),RRSe ) )", "obj1": 0.9258555133079848, "obj2": 0.04903670898584863}, {"determining": "( Min( ( Max( MRS,DDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( ( MLU / ( MUM * MLU ) ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( ( BR / MDR ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( Max( ( MUR + RCSe ),( RMSe - MUR ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001902485085018906}, {"determining": "( Min( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,( ( MLU * DS ) / Max( MUC,CS ) ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( Const - ( FirstVNF_RAM / FirstVNF_CPU ) ) - Min( CRS ,Const ) )", "choosing": "Min( Max( MUR,( CS / CS ) ) ,Max( ( Min( MLU ,DS ) / RCSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( Max( Min( CS ,Min( RCSe ,RCSe ) ),( RMSe / MUR ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( ( Max( ( ( RCSe * Max( CS,MUM ) ) / ( ( MUC + RCSe ) * RRSe ) ),MUC ) * MLU ) * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,ACS ) / Min( FirstVNF_Mem ,RRS ) ) ) / PN ) - ACS )", "choosing": "Min( ( MUM + MLU ) ,( Max( Max( ( ( RMSe / Min( Min( CS ,MUM ) ,( DS / DS ) ) ) + Min( MUC ,Max( MUC,( RCSe + RMSe ) ) ) ),MUR ),MUR ) - ( MLU * Max( MUM,( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( DDR - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,CRS ) ) ) / ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Max( CS,RMSe ) - Min( RRSe ,( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) ) + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * MUR ) ,Max( RRSe,( Min( MUC ,RRSe ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + CRS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * Max( RMSe,DS ) ) ,Max( RRSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) )", "choosing": "Max( ( Max( ( MUR - CS ),RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * MRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,MUR ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ACS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( MUC + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - ( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * MRS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( CS - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),RCSe ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( ( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - Min( MUC ,MLU ) ) ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - ARS ) + FirstVNF_CPU_Server ) - PN ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) - Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ( Min( MDR ,FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( RRSe / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,CS ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,Max( ( PN * FirstVNF_Mem_Server ),Max( DDR,PN ) ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUC - MUC ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS - ( ( CS + RRSe ) / ( MUR - MLU ) ) ) / ( MUR / MUC ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) + Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Max( DDR,FirstVNF_CPU ) ) ) ,( RRS + DDR ) ) ) )", "choosing": "Max( ( Min( ( MUR - RRSe ) ,RCSe ) - ( ( RCSe + MUC ) * RRSe ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,ACS ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR * MUC ) * DS ) / RCSe ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ARS ) * Min( Min( ( AMS + FirstVNF_CPU_Server ) ,( Const * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,RRS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - DS ) - ( ( RMSe / ( DS / MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Min( MRS ,RRS ) + ( ( AMS - BR ) - FirstVNF_Mem ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),( ( ( Max( MLU,DS ) + ( RRSe * RCSe ) ) - MUR ) / ( MUC - MUC ) ) ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_RAM ,MDR ) * ( MRS - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + ( Min( MUM ,RMSe ) / ( RCSe / Max( ( MLU - MUM ),DS ) ) ) ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( DDR * PN ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,MLU ) / Min( RCSe ,CS ) ) ,( Min( MLU ,RCSe ) / ( CS * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * FirstVNF_RAM ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - ( MUR * DS ) ) ,( Min( MUR ,MUC ) + Max( ( MUR / MLU ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( Min( ( CS - RCSe ) ,( RRSe + RMSe ) ) - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( RMSe ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( RRS ,FirstVNF_Mem_Server ) - ACS ) ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( CS - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * MRS ) * ( FirstVNF_CPU_Server / DDR ) ) ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( CS - ( ( RRSe - CS ) / ( MUM / MUR ) ) ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,ACS ) / Min( FirstVNF_Mem ,RRS ) ) ) / PN ) - ACS )", "choosing": "Min( ( MUM + MLU ) ,( Max( Max( ( ( RMSe / Min( Min( CS ,MUM ) ,( DS / DS ) ) ) + Min( MUC ,Max( MUC,( RCSe + RMSe ) ) ) ),MUR ),MUR ) - ( MLU * Max( MUM,( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * RRS ) / PN ) - BR )", "choosing": "Min( ( MUR + CS ) ,( RRSe + ( MUM / ( MUC * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( Min( DS ,RMSe ) / ( MUM * Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),CRS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( MUC * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - CRS ) * ( Min( FirstVNF_CPU_Server ,CRS ) - ( AMS * ACS ) ) )", "choosing": "( Min( DS ,RMSe ) / Max( RMSe,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( ( Max( ( ( RCSe * Max( CS,MUM ) ) / ( ( MUC + RCSe ) * RRSe ) ),MUC ) * MLU ) * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,ACS ) / ( ( Const * BR ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / RRSe ) - ( MUM * ( Max( RMSe,RRSe ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ACS - ( ARS + FirstVNF_RAM_Server ) ) ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( CS + ( ( Min( ( CS * MUR ) ,Max( RRSe,DS ) ) + ( MUR / MUC ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * RRS ) - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( RCSe / Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,RRS ) - FirstVNF_Mem ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( RCSe,( RRSe + MUR ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,MDR ) * ( FirstVNF_RAM_Server / ACS ) ) * ( Min( DDR ,BR ) * ( ( ( FirstVNF_Mem / Const ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) ) ) - Min( ( AMS / PN ) ,MDR ) )", "choosing": "Max( ( ( CS - RRSe ) + ( Max( CS,DS ) / ( ( RMSe + RRSe ) - Max( MUR,RRSe ) ) ) ),( Min( MUR ,MUR ) - ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MDR ) ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( Min( ( CS * CS ) ,( MUM * MLU ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,DDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( ( MLU / ( MUM * MLU ) ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}], "4": [{"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ( ( AMS * Const ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) )", "choosing": "( ( DS - MUR ) / ( Min( MUC ,MUR ) + ( Min( MUC ,MUR ) + ( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( Max( CRS,FirstVNF_RAM_Server ) ,ACS ) ) + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS - MUR ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / BR ),ACS ) + ( CRS / BR ) )", "choosing": "( Max( RMSe,DS ) / Min( ( CS * ( Min( MLU ,( CS * ( Min( MLU ,DS ) * DS ) ) ) * DS ) ) ,Max( RRSe,DS ) ) )", "obj1": 0.030418250950570342, "obj2": 0.7882140021378816}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) * ( DDR * FirstVNF_RAM ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( RCSe + RCSe ) - ( DS + MUC ) )", "obj1": 0.6996197718631179, "obj2": 0.1252459980002292}, {"determining": "( ( ( ( FirstVNF_CPU_Server + ACS ) - ( ARS + ( ( ( ( BR / RRS ) - FirstVNF_Mem ) / ( ARS / FirstVNF_RAM ) ) / Min( PN ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( Min( ( ( ( MUR * ( CS * ( Min( MLU ,DS ) * DS ) ) ) - DS ) * MUR ) ,Max( RRSe,DS ) ) + ( MUR / MUC ) )", "obj1": 0.688212927756654, "obj2": 0.2443434753170881}, {"determining": "( ( MDR * BR ) / ( DDR / ( AMS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * ( ( ( ( DS + MLU ) + Max( MUM,MUC ) ) - ( ( MLU - DS ) / Max( MUR,DS ) ) ) + ( ( ( RCSe * RCSe ) - ( RMSe / DS ) ) - ( Max( CS,MUR ) - Max( MUC,MUC ) ) ) ) ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.3060023754742023}, {"determining": "( ( ( ARS * MRS ) / ( FirstVNF_Mem / PN ) ) * FirstVNF_CPU_Server )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( ( DS / RCSe ) - CS ) ) )", "obj1": 0.4543726235741445, "obj2": 0.34865038237791013}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - Min( ( ( ( ( BR * Max( FirstVNF_RAM,FirstVNF_RAM ) ) * MRS ) / FirstVNF_RAM ) / FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( ( RCSe + MUR ) + ( MUR / MUC ) )", "obj1": 0.7965779467680608, "obj2": 0.08054798474821998}, {"determining": "Min( ( ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) * DDR ) ,( ARS - ACS ) )", "choosing": "( DS + Max( ( Max( RRSe,MUC ) - MUR ),RRSe ) )", "obj1": 0.9163498098859315, "obj2": 0.06980668661377108}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Max( ARS,MRS ) ) ) )", "choosing": "( ( Min( DS ,( DS / ( RMSe * Min( RMSe ,Max( MUM,RCSe ) ) ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( MDR + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( Min( ( MUC + MLU ) ,Min( ( MUC - RCSe ) ,RRSe ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5357689054423823}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * Min( DDR ,ACS ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / ( CS + ( Min( MUM ,CS ) - RMSe ) ) )", "obj1": 0.5627376425855514, "obj2": 0.28737827208856614}, {"determining": "( ( Min( ACS ,MDR ) * ( FirstVNF_RAM_Server / ACS ) ) * ( Min( DDR ,BR ) * ( ( ( ACS / Const ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( CS,DS ) / ( ( ( ( CS - RRSe ) + ( ( RMSe - Max( ( RCSe + RCSe ),MUM ) ) - ( Max( RMSe,MLU ) + MUC ) ) ) + RRSe ) - Max( MUR,RRSe ) ) )", "obj1": 0.31749049429657794, "obj2": 0.4758499115231616}, {"determining": "Max( Max( MDR,PN ),( PN * Max( Max( MDR,PN ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( Min( ( Min( MUC ,MUR ) + ( CS - RRSe ) ) ,MUC ) ,MUC ) )", "obj1": 0.35551330798479086, "obj2": 0.4331134818437934}, {"determining": "Max( ( ( PN - DDR ) / MRS ),( ( MRS * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( ( ( ( ( RRSe - ( Max( RRSe,CS ) * ( MUC + RRSe ) ) ) / ( MUM / MUR ) ) - CS ) - ( DS / CS ) ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6256129898323838}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( FirstVNF_CPU - BR ) ,( RRS + DDR ) ) ) )", "choosing": "Max( ( Min( ( MUR - RRSe ) ,RCSe ) - ( ( RCSe + MUC ) * RRSe ) ),( RRSe + MUR ) )", "obj1": 0.9315589353612167, "obj2": 0.04230923278193001}, {"determining": "( ARS + Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) )", "choosing": "( ( Min( MUC ,( ( DS - MUC ) / Max( CS,DS ) ) ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - ( RCSe + CS ) ) )", "obj1": 0.1520912547528517, "obj2": 0.6588098764257287}, {"determining": "( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * BR ) )", "choosing": "( ( ( CS / RCSe ) / ( ( RCSe - DS ) / Max( MLU,MUC ) ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.9771863117870723, "obj2": 0.009192941734997859}, {"determining": "( ( Min( ACS ,MDR ) * ( ( AMS / PN ) / ACS ) ) * ( Min( DDR ,BR ) * ( ( ( FirstVNF_Mem / Const ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( CS,DS ) / ( RMSe - Max( ( RCSe + RCSe ),MUM ) ) )", "obj1": 0.2965779467680608, "obj2": 0.5145530414240013}, {"determining": "( ( ( ( ACS * RRS ) - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( ( DS / CS ) / CS ) ) )", "obj1": 0.051330798479087454, "obj2": 0.746072095143354}, {"determining": "( ( MRS - MDR ) + ( DDR + ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - PN ) ) + ( MDR - PN ) ) ) )", "choosing": "( Min( DS ,MUR ) - ( ( CS / RMSe ) / Min( DS ,MUR ) ) )", "obj1": 0.6102661596958175, "obj2": 0.26452539614673465}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) * ( ( ( FirstVNF_CPU_Server + ACS ) - ( ARS + FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) )", "choosing": "( Min( MUC ,( RCSe + DS ) ) + ( MUR / MUC ) )", "obj1": 0.6520912547528517, "obj2": 0.25501388201086733}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU ),( ( DDR * DDR ) / ( ( ACS - AMS ) - RRS ) ) )", "choosing": "Min( ( ( MUR - CS ) - ( DS / CS ) ) ,( ( ( ( MUC + ( ( MUR * Max( MUR,MUM ) ) + ( DS - CS ) ) ) / Min( Min( CS ,( MUM + RMSe ) ) ,CS ) ) - DS ) / Max( Max( ( ( RRSe - MUC ) / RMSe ),MUC ),MUC ) ) )", "obj1": 0.10456273764258556, "obj2": 0.6823598579007206}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( Max( ( ( PN - DDR ) / MRS ),( ( DDR * DDR ) / ( BR - RRS ) ) ) ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( Max( MLU,MUC ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.16920152091254753, "obj2": 0.5908419351340244}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.07224334600760456, "obj2": 0.7041774450935934}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( FirstVNF_CPU * BR ) * ( Const * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - CS )", "obj1": 0.44866920152091255, "obj2": 0.36271699086952425}, {"determining": "( Max( ( CRS / BR ),ACS ) + ( ARS / Max( ( CRS / BR ),ACS ) ) )", "choosing": "( Max( RMSe,DS ) / Min( ( CS * ( CS * ( Min( MLU ,DS ) * DS ) ) ) ,Max( RRSe,DS ) ) )", "obj1": 0.043726235741444866, "obj2": 0.7690572745711393}, {"determining": "( ( ( ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / MUR ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.06463878326996197, "obj2": 0.712235680413763}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( Const * Max( Max( MDR,PN ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) ) ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( MUC ,RRSe ) + ( CS - RRSe ) ) ,MUC ) )", "obj1": 0.38593155893536124, "obj2": 0.40863157045608806}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ( ( AMS * ARS ) - Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) ) ) ) )", "choosing": "( RCSe / Max( CS,DS ) )", "obj1": 0.43346007604562736, "obj2": 0.39113420434733054}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) )", "choosing": "( Min( RCSe ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20152091254752852, "obj2": 0.5896760816395109}, {"determining": "( ( BR * ( ( MRS / ( AMS / ( Const - ( AMS / ( Const - ARS ) ) ) ) ) / DDR ) ) * ( CRS / PN ) )", "choosing": "( ( ( MUR / ( MUC - RRSe ) ) - CS ) / ( MUM / ( ( ( MUR / ( MUC - RRSe ) ) - CS ) / ( MUM / ( MUC * RCSe ) ) ) ) )", "obj1": 0.22433460076045628, "obj2": 0.5716078286170324}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),MRS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) ) ) )", "obj1": 0.11216730038022814, "obj2": 0.6629037493185499}, {"determining": "( ( Max( FirstVNF_RAM,( CRS / ( FirstVNF_CPU_Server / ACS ) ) ) * ( ARS - RRS ) ) + Max( ( DDR - ( ARS + FirstVNF_RAM ) ),ARS ) )", "choosing": "( ( MUM - MUR ) / ( RRSe + ( ( Min( RRSe ,Max( Min( RMSe ,RCSe ),CS ) ) + Min( MUR ,MUR ) ) - Min( ( RRSe / ( Max( MUM,RRSe ) * DS ) ) ,MLU ) ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5763414158924568}, {"determining": "( ( MRS - Const ) + ( DDR + ( Min( MDR ,Max( MRS,MRS ) ) + ( MDR - PN ) ) ) )", "choosing": "( Min( DS ,( ( MUC - ( MUR * DS ) ) * RCSe ) ) - ( ( CS / RMSe ) / Min( DS ,MUR ) ) )", "obj1": 0.6197718631178707, "obj2": 0.2592701434046246}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - AMS ) ) ) * BR ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( ( MUM - ( CS * Min( MUC ,Max( MUM,MUM ) ) ) ) ,MUR ) + ( DS - CS ) ) ,MUC ) )", "obj1": 0.3650190114068441, "obj2": 0.42223195098843536}, {"determining": "Max( ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( MUC ,MUR ) + ( CS - RRSe ) ) ,MUC ) )", "obj1": 0.38022813688212925, "obj2": 0.419753539647457}, {"determining": "( BR / ( AMS - PN ) )", "choosing": "Min( ( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) + ( MUM - RCSe ) ) ,Min( MUC ,MUM ) )", "obj1": 0.31368821292775667, "obj2": 0.49433288742117876}, {"determining": "( Max( ( MRS + FirstVNF_RAM_Server ),ARS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( CS / CS ) ) )", "obj1": 0.30988593155893535, "obj2": 0.5017591937797139}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + ( MRS + FirstVNF_RAM_Server ) ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - CS ) - ( DS / CS ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6667381789171105}, {"determining": "( ( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) * ( DDR * FirstVNF_RAM ) ) * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( Min( ( CS * MUR ) ,Max( ( Min( MUC ,( RCSe + RCSe ) ) + ( MUR / MUC ) ),DS ) ) + ( MUR / MUC ) )", "obj1": 0.7946768060836502, "obj2": 0.09064982016679025}, {"determining": "Min( ( ACS * DDR ) ,( ( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( FirstVNF_CPU - BR ) ,( RRS + DDR ) ) ) ) - ACS ) )", "choosing": "( ( ( MUR - RRSe ) / RCSe ) + Max( ( Max( RRSe,MUC ) - MUR ),RRSe ) )", "obj1": 0.9258555133079848, "obj2": 0.04903670898584863}, {"determining": "( Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( ( Max( MUR,RMSe ) / Max( DS,MLU ) ) / Max( Min( MUC ,CS ),Max( CS,DS ) ) )", "obj1": 0.9239543726235742, "obj2": 0.060199356675375126}, {"determining": "( Max( MDR,ACS ) / ( Min( FirstVNF_CPU ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / RRSe ) - ( MUM * ( ( RRSe + ( ( MUC + Min( ( RMSe + DS ) ,CS ) ) - RMSe ) ) - RRSe ) ) )", "obj1": 0.9201520912547528, "obj2": 0.06157198644335874}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Max( Min( ARS ,CRS ),( ( FirstVNF_CPU_Server * DDR ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( CS + DS ) - MUR ) + ( RCSe / Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ) ) )", "obj1": 0.9847908745247148, "obj2": 0.005599670287755884}, {"determining": "( ( BR / MDR ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( Max( ( MUR + RCSe ),( RMSe - MUR ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001902485085018906}, {"determining": "( ( ( FirstVNF_RAM * RRS ) / PN ) * ( CRS / PN ) )", "choosing": "( ( RRSe - CS ) / RRSe )", "obj1": 0.311787072243346, "obj2": 0.5003748017697853}, {"determining": "( ( MRS - Const ) + ( ( MRS - Const ) + ( DDR + ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - PN ) ) + ( MDR - PN ) ) ) ) )", "choosing": "( Min( DS ,MUR ) - ( ( CS / RMSe ) / Min( DS ,( ( CS / RMSe ) / Min( DS ,MUR ) ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2595152900554318}, {"determining": "( Min( ( Max( MRS,DDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( ( MLU / ( MUM * MLU ) ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( Min( ( Max( MRS,DDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( ( MLU / ( MUM * MLU ) ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( MRS - Const ) + ( ( ( MDR - Min( FirstVNF_RAM ,MRS ) ) * AMS ) + ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - ( ( ( ARS + BR ) * ( ARS + FirstVNF_RAM_Server ) ) * ( ( AMS / FirstVNF_CPU ) - ( FirstVNF_CPU * MDR ) ) ) ) ) + ( MDR - PN ) ) ) )", "choosing": "( Min( DS ,CS ) - ( ( CS / RMSe ) / Min( DS ,Min( MUC ,MUM ) ) ) )", "obj1": 0.6159695817490495, "obj2": 0.2595152900554318}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_RAM_Server * BR ) / ( AMS - PN ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( MUM,DS ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( FirstVNF_RAM / FirstVNF_CPU ) ) - Min( CRS ,Const ) )", "choosing": "Min( Max( MUR,( CS / CS ) ) ,Max( ( Min( MLU ,DS ) / RCSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( Max( Min( CS ,Min( RCSe ,RCSe ) ),( RMSe / MUR ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( ( Max( ( ( RCSe * Max( CS,MUM ) ) / ( ( MUC + RCSe ) * RRSe ) ),MUC ) * MLU ) * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,ACS ) / Min( FirstVNF_Mem ,RRS ) ) ) / PN ) - ACS )", "choosing": "Min( ( MUM + MLU ) ,( Max( Max( ( ( RMSe / Min( Min( CS ,MUM ) ,( DS / DS ) ) ) + Min( MUC ,Max( MUC,( RCSe + RMSe ) ) ) ),MUR ),MUR ) - ( MLU * Max( MUM,( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( DDR - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,CRS ) ) ) / ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Max( CS,RMSe ) - Min( RRSe ,( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) ) + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * MUR ) ,Max( RRSe,( Min( MUC ,RRSe ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + CRS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * Max( RMSe,DS ) ) ,Max( RRSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) )", "choosing": "Max( ( Max( ( MUR - CS ),RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * MRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,MUR ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ACS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( MUC + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - ( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * MRS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( CS - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),RCSe ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( ( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - Min( MUC ,MLU ) ) ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - ARS ) + FirstVNF_CPU_Server ) - PN ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) - Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ( Min( MDR ,FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( RRSe / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,CS ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,Max( ( PN * FirstVNF_Mem_Server ),Max( DDR,PN ) ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUC - MUC ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS - ( ( CS + RRSe ) / ( MUR - MLU ) ) ) / ( MUR / MUC ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) + Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Max( DDR,FirstVNF_CPU ) ) ) ,( RRS + DDR ) ) ) )", "choosing": "Max( ( Min( ( MUR - RRSe ) ,RCSe ) - ( ( RCSe + MUC ) * RRSe ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,ACS ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR * MUC ) * DS ) / RCSe ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ARS ) * Min( Min( ( AMS + FirstVNF_CPU_Server ) ,( Const * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,RRS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - DS ) - ( ( RMSe / ( DS / MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Min( MRS ,RRS ) + ( ( AMS - BR ) - FirstVNF_Mem ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),( ( ( Max( MLU,DS ) + ( RRSe * RCSe ) ) - MUR ) / ( MUC - MUC ) ) ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_RAM ,MDR ) * ( MRS - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + ( Min( MUM ,RMSe ) / ( RCSe / Max( ( MLU - MUM ),DS ) ) ) ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( DDR * PN ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,MLU ) / Min( RCSe ,CS ) ) ,( Min( MLU ,RCSe ) / ( CS * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * FirstVNF_RAM ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - ( MUR * DS ) ) ,( Min( MUR ,MUC ) + Max( ( MUR / MLU ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( Min( ( CS - RCSe ) ,( RRSe + RMSe ) ) - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( RMSe ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( RRS ,FirstVNF_Mem_Server ) - ACS ) ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( CS - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * MRS ) * ( FirstVNF_CPU_Server / DDR ) ) ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( CS - ( ( RRSe - CS ) / ( MUM / MUR ) ) ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,ACS ) / Min( FirstVNF_Mem ,RRS ) ) ) / PN ) - ACS )", "choosing": "Min( ( MUM + MLU ) ,( Max( Max( ( ( RMSe / Min( Min( CS ,MUM ) ,( DS / DS ) ) ) + Min( MUC ,Max( MUC,( RCSe + RMSe ) ) ) ),MUR ),MUR ) - ( MLU * Max( MUM,( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * RRS ) / PN ) - BR )", "choosing": "Min( ( MUR + CS ) ,( RRSe + ( MUM / ( MUC * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) - CRS ) * FirstVNF_RAM )", "choosing": "( Min( DS ,RMSe ) / ( MUM * Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),CRS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( MUC * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - CRS ) * ( Min( FirstVNF_CPU_Server ,CRS ) - ( AMS * ACS ) ) )", "choosing": "( Min( DS ,RMSe ) / Max( RMSe,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( ( Max( ( ( RCSe * Max( CS,MUM ) ) / ( ( MUC + RCSe ) * RRSe ) ),MUC ) * MLU ) * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ACS - ( AMS / PN ) )", "choosing": "Max( ( ( CS - RRSe ) + ( ( RMSe - Max( ( RCSe + RCSe ),MUM ) ) - ( Max( RMSe,MLU ) + MUC ) ) ),( Min( MUR ,MUR ) - ( MUM * ( Max( RMSe,MLU ) + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ( ( AMS * Const ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) )", "choosing": "( ( DS - MUR ) / ( Min( MUC ,MUR ) + ( Min( MUC ,MUR ) + ( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / BR ),ACS ) + ( CRS / BR ) )", "choosing": "( Max( RMSe,DS ) / Min( ( CS * ( Min( MLU ,( CS * ( Min( MLU ,DS ) * DS ) ) ) * DS ) ) ,Max( RRSe,DS ) ) )", "obj1": 0.030418250950570342, "obj2": 0.7882140021378816}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) * ( DDR * FirstVNF_RAM ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( RCSe + RCSe ) - ( DS + MUC ) )", "obj1": 0.6996197718631179, "obj2": 0.1252459980002292}, {"determining": "( ( MRS - Const ) + ( ( MRS - Const ) + ( DDR + ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - PN ) ) + ( ( ( MRS + RRS ) + ( MDR - PN ) ) + ( MDR - PN ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) - ( ( CS / Min( DS ,MUR ) ) / Min( DS ,( ( CS / RMSe ) / Min( DS ,MUR ) ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.2312108662266261}, {"determining": "( Max( ( PN + MRS ),( PN * ( FirstVNF_Mem / RRS ) ) ) + ( PN - MDR ) )", "choosing": "( ( DS + ( MUR - RCSe ) ) - ( RRSe * ( RMSe * MLU ) ) )", "obj1": 0.596958174904943, "obj2": 0.2360288448607128}, {"determining": "( BR + ( DDR + ( CRS - FirstVNF_CPU ) ) )", "choosing": "( Min( DS ,MUR ) - ( ( CS / Max( RRSe,( CS / Max( ( CS / Max( RRSe,RMSe ) ),RMSe ) ) ) ) / Max( RRSe,RMSe ) ) )", "obj1": 0.8840304182509505, "obj2": 0.06522611795589292}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * Min( DDR ,ACS ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / ( CS + ( Min( MUM ,CS ) - RMSe ) ) )", "obj1": 0.5627376425855514, "obj2": 0.28737827208856614}, {"determining": "( FirstVNF_CPU_Server + ( DDR + CRS ) )", "choosing": "( Min( DS ,MUR ) - ( CS / Max( RRSe,RMSe ) ) )", "obj1": 0.5247148288973384, "obj2": 0.31951180119259665}, {"determining": "( ( ( ARS * MRS ) / ( FirstVNF_Mem / PN ) ) * FirstVNF_CPU_Server )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( ( DS / RCSe ) - CS ) ) )", "obj1": 0.4543726235741445, "obj2": 0.34865038237791013}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Max( ARS,MRS ) ) ) )", "choosing": "( ( Min( DS ,( DS / ( RMSe * Min( RMSe ,Max( MUM,RCSe ) ) ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( MDR + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( Min( ( MUC + MLU ) ,Min( ( MUC - RCSe ) ,RRSe ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5357689054423823}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - Min( ( ( ( ( BR * Max( FirstVNF_RAM,FirstVNF_RAM ) ) * MRS ) / FirstVNF_RAM ) / FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( ( RCSe + MUR ) + ( MUR / MUC ) )", "obj1": 0.7965779467680608, "obj2": 0.08054798474821998}, {"determining": "( ( Min( ACS ,MDR ) * ( FirstVNF_RAM_Server / ACS ) ) * ( Min( DDR ,BR ) * ( ( ( ACS / Const ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( CS,DS ) / ( ( ( ( CS - RRSe ) + ( ( RMSe - Max( ( RCSe + RCSe ),MUM ) ) - ( Max( RMSe,MLU ) + MUC ) ) ) + RRSe ) - Max( MUR,RRSe ) ) )", "obj1": 0.31749049429657794, "obj2": 0.4758499115231616}, {"determining": "Max( Max( MDR,PN ),( PN * Max( Max( MDR,PN ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( Min( ( Min( MUC ,MUR ) + ( CS - RRSe ) ) ,MUC ) ,MUC ) )", "obj1": 0.35551330798479086, "obj2": 0.4331134818437934}, {"determining": "Max( ( ( PN - DDR ) / MRS ),( ( MRS * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( ( ( ( ( RRSe - ( Max( RRSe,CS ) * ( MUC + RRSe ) ) ) / ( MUM / MUR ) ) - CS ) - ( DS / CS ) ) ,( ( RCSe - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.16539923954372623, "obj2": 0.6256129898323838}, {"determining": "( ARS + Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) )", "choosing": "( ( Min( MUC ,( ( DS - MUC ) / Max( CS,DS ) ) ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - ( RCSe + CS ) ) )", "obj1": 0.1520912547528517, "obj2": 0.6588098764257287}, {"determining": "( ( Min( ACS ,MDR ) * ( ( AMS / PN ) / ACS ) ) * ( Min( DDR ,BR ) * ( ( ( FirstVNF_Mem / Const ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( CS,DS ) / ( RMSe - Max( ( RCSe + RCSe ),MUM ) ) )", "obj1": 0.2965779467680608, "obj2": 0.5145530414240013}, {"determining": "( ( ( ( ACS * RRS ) - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( ( DS / CS ) / CS ) ) )", "obj1": 0.051330798479087454, "obj2": 0.746072095143354}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( Max( ( ( PN - DDR ) / MRS ),( ( DDR * DDR ) / ( BR - RRS ) ) ) ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( Max( MLU,MUC ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.16920152091254753, "obj2": 0.5908419351340244}, {"determining": "( ( ( CRS - FirstVNF_CPU ) / ( BR / Const ) ) + ( DDR + ( CRS - FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( ( CS / Max( RRSe,( CS / Max( RRSe,RMSe ) ) ) ) / Max( RRSe,RMSe ) ) )", "obj1": 0.9391634980988594, "obj2": 0.027040160135658155}, {"determining": "( ( MDR * BR ) / ( DDR / ( AMS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * ( ( ( ( DS + MLU ) + Max( MUM,MUC ) ) - ( ( MLU - DS ) / Max( MUR,DS ) ) ) + ( ( ( RCSe * RCSe ) - ( RMSe / DS ) ) - ( Max( CS,MUR ) - Max( MUC,MUC ) ) ) ) ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.3060023754742023}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( FirstVNF_CPU * BR ) * ( Const * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - CS )", "obj1": 0.44866920152091255, "obj2": 0.36271699086952425}, {"determining": "( Max( ( CRS / BR ),ACS ) + ( ARS / Max( ( CRS / BR ),ACS ) ) )", "choosing": "( Max( RMSe,DS ) / Min( ( CS * ( CS * ( Min( MLU ,DS ) * DS ) ) ) ,Max( RRSe,DS ) ) )", "obj1": 0.043726235741444866, "obj2": 0.7690572745711393}, {"determining": "( ( ( ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / MUR ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.06463878326996197, "obj2": 0.712235680413763}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( Const * Max( Max( MDR,PN ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) ) ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( MUC ,RRSe ) + ( CS - RRSe ) ) ,MUC ) )", "obj1": 0.38593155893536124, "obj2": 0.40863157045608806}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ( ( AMS * ARS ) - Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) ) ) ) )", "choosing": "( RCSe / Max( CS,DS ) )", "obj1": 0.43346007604562736, "obj2": 0.39113420434733054}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) )", "choosing": "( Min( RCSe ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.20152091254752852, "obj2": 0.5896760816395109}, {"determining": "( ( BR * ( ( MRS / ( AMS / ( Const - ( AMS / ( Const - ARS ) ) ) ) ) / DDR ) ) * ( CRS / PN ) )", "choosing": "( ( ( MUR / ( MUC - RRSe ) ) - CS ) / ( MUM / ( ( ( MUR / ( MUC - RRSe ) ) - CS ) / ( MUM / ( MUC * RCSe ) ) ) ) )", "obj1": 0.22433460076045628, "obj2": 0.5716078286170324}, {"determining": "( ( BR / Const ) + ( ( Const - ( FirstVNF_RAM / FirstVNF_CPU ) ) - Min( CRS ,Const ) ) )", "choosing": "( Min( DS ,MLU ) - RRSe )", "obj1": 0.9752851711026616, "obj2": 0.017652876877965094}, {"determining": "( ( BR / ( BR / Const ) ) + ( ( ( BR / ( BR / Const ) ) + ( DDR + ( CRS - FirstVNF_CPU ) ) ) + ( ARS + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( MUR + ( ( RRSe - RRSe ) / ( MUR + MLU ) ) ) ) - ( ( CS / Max( RRSe,( CS / Max( RRSe,RMSe ) ) ) ) / Max( RRSe,RMSe ) ) )", "obj1": 0.9068441064638784, "obj2": 0.048206868590530416}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),MRS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) ) ) )", "obj1": 0.11216730038022814, "obj2": 0.6629037493185499}, {"determining": "( ( Max( FirstVNF_RAM,( CRS / ( FirstVNF_CPU_Server / ACS ) ) ) * ( ARS - RRS ) ) + Max( ( DDR - ( ARS + FirstVNF_RAM ) ),ARS ) )", "choosing": "( ( MUM - MUR ) / ( RRSe + ( ( Min( RRSe ,Max( Min( RMSe ,RCSe ),CS ) ) + Min( MUR ,MUR ) ) - Min( ( RRSe / ( Max( MUM,RRSe ) * DS ) ) ,MLU ) ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5763414158924568}, {"determining": "( ( MRS - Const ) + ( DDR + ( FirstVNF_CPU + ( ( FirstVNF_Mem_Server * PN ) + ( ARS - ( FirstVNF_CPU / MRS ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) - Min( ( RCSe * MUR ) ,Min( RMSe ,Max( MUC,( ( ( RMSe + RRSe ) * RCSe ) + ( DS - ( CS * DS ) ) ) ) ) ) )", "obj1": 0.9239543726235742, "obj2": 0.04103316444380008}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - AMS ) ) ) * BR ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( ( MUM - ( CS * Min( MUC ,Max( MUM,MUM ) ) ) ) ,MUR ) + ( DS - CS ) ) ,MUC ) )", "obj1": 0.3650190114068441, "obj2": 0.42223195098843536}, {"determining": "Max( ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( MUC ,MUR ) + ( CS - RRSe ) ) ,MUC ) )", "obj1": 0.38022813688212925, "obj2": 0.419753539647457}, {"determining": "( BR / ( AMS - PN ) )", "choosing": "Min( ( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) + ( MUM - RCSe ) ) ,Min( MUC ,MUM ) )", "obj1": 0.31368821292775667, "obj2": 0.49433288742117876}, {"determining": "( ( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.09315589353612168, "obj2": 0.6923052986585173}, {"determining": "( Max( ( MRS + FirstVNF_RAM_Server ),ARS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( CS / CS ) ) )", "obj1": 0.30988593155893535, "obj2": 0.5017591937797139}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + ( MRS + FirstVNF_RAM_Server ) ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - CS ) - ( DS / CS ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6667381789171105}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_CPU ),( ( DDR * DDR ) / ( ( ACS - AMS ) - RRS ) ) )", "choosing": "Min( ( ( MUR - CS ) - ( DS / CS ) ) ,( ( ( ( MUC + ( ( MUR * Max( MUR,MUM ) ) + ( DS - CS ) ) ) / Min( Min( CS ,( MUM + RMSe ) ) ,CS ) ) - DS ) / Max( Max( ( ( RRSe - MUC ) / RMSe ),MUC ),MUC ) ) )", "obj1": 0.10456273764258556, "obj2": 0.6823598579007206}, {"determining": "( ( ( ( ACS * RRS ) - DDR ) / MRS ) / ( ( ( ( ACS * RRS ) - DDR ) / MRS ) * RRS ) )", "choosing": "( ( RCSe / MUR ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6959288479454265}, {"determining": "( ( BR / ( ARS + BR ) ) + ( DDR + ( CRS - FirstVNF_CPU ) ) )", "choosing": "( Min( DS ,( Min( DS ,CS ) - ( ( CS / RMSe ) / Min( DS ,MUR ) ) ) ) - RRSe )", "obj1": 0.9163498098859315, "obj2": 0.04343834512666908}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.07224334600760456, "obj2": 0.7041774450935934}, {"determining": "( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * BR ) )", "choosing": "( ( ( CS / RCSe ) / ( ( RCSe - DS ) / Max( MLU,MUC ) ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.9771863117870723, "obj2": 0.009192941734997859}, {"determining": "( ( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) * ( DDR * FirstVNF_RAM ) ) * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( Min( ( CS * MUR ) ,Max( ( Min( MUC ,( RCSe + RCSe ) ) + ( MUR / MUC ) ),DS ) ) + ( MUR / MUC ) )", "obj1": 0.7946768060836502, "obj2": 0.09064982016679025}, {"determining": "( ( ( MRS - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7029070156651926}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Max( Min( ARS ,CRS ),( ( FirstVNF_CPU_Server * DDR ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( CS + DS ) - MUR ) + ( RCSe / Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ) ) )", "obj1": 0.9847908745247148, "obj2": 0.005599670287755884}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Min( FirstVNF_CPU ,Max( ARS,CRS ) ) - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RMSe,( CS - RRSe ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7889733840304183, "obj2": 0.09367491223533331}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server - MRS ) - DDR ) / MRS ),( ( DDR * DDR ) / ( BR - RRS ) ) )", "choosing": "Min( ( ( MUR - CS ) - ( DS / CS ) ) ,( ( ( ( RMSe + ( Max( DS,RMSe ) + ( MUR * MUC ) ) ) / ( MUR * ( MUM + MUC ) ) ) - DS ) / Max( MLU,MUC ) ) )", "obj1": 0.10456273764258556, "obj2": 0.6823598579007206}, {"determining": "( ( BR / MDR ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( Max( ( MUR + RCSe ),( RMSe - MUR ) ) * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 0.9961977186311787, "obj2": 0.001902485085018906}, {"determining": "( ( ( FirstVNF_RAM * RRS ) / PN ) * ( CRS / PN ) )", "choosing": "( ( RRSe - CS ) / RRSe )", "obj1": 0.311787072243346, "obj2": 0.5003748017697853}, {"determining": "( Min( ( Max( MRS,DDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( ( MLU / ( MUM * MLU ) ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( Min( ( Max( MRS,DDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_CPU_Server + FirstVNF_RAM ) / ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( ( CS * RRSe ),DS ) ) ,Max( ( MLU / ( MUM * MLU ) ),RRSe ) )", "obj1": 0.9885931558935361, "obj2": 0.00485830559600144}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( Min( ( ( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( Max( CRS,FirstVNF_RAM_Server ) ,ACS ) ) + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS - MUR ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_RAM_Server * BR ) / ( AMS - PN ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( MUM,DS ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( FirstVNF_RAM / FirstVNF_CPU ) ) - Min( CRS ,Const ) )", "choosing": "Min( Max( MUR,( CS / CS ) ) ,Max( ( Min( MLU ,DS ) / RCSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( Max( Min( CS ,Min( RCSe ,RCSe ) ),( RMSe / MUR ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( ( Max( ( ( RCSe * Max( CS,MUM ) ) / ( ( MUC + RCSe ) * RRSe ) ),MUC ) * MLU ) * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,ACS ) / Min( FirstVNF_Mem ,RRS ) ) ) / PN ) - ACS )", "choosing": "Min( ( MUM + MLU ) ,( Max( Max( ( ( RMSe / Min( Min( CS ,MUM ) ,( DS / DS ) ) ) + Min( MUC ,Max( MUC,( RCSe + RMSe ) ) ) ),MUR ),MUR ) - ( MLU * Max( MUM,( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( DDR - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,CRS ) ) ) / ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Max( CS,RMSe ) - Min( RRSe ,( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) ) + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * MUR ) ,Max( RRSe,( Min( MUC ,RRSe ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + CRS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * Max( RMSe,DS ) ) ,Max( RRSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) )", "choosing": "Max( ( Max( ( MUR - CS ),RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * MRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,MUR ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ACS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( MUC + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - ( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * MRS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( CS - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),RCSe ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( ( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - Min( MUC ,MLU ) ) ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - ARS ) + FirstVNF_CPU_Server ) - PN ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) - Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ( Min( MDR ,FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( RRSe / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,CS ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,Max( ( PN * FirstVNF_Mem_Server ),Max( DDR,PN ) ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUC - MUC ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS - ( ( CS + RRSe ) / ( MUR - MLU ) ) ) / ( MUR / MUC ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) + Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Max( DDR,FirstVNF_CPU ) ) ) ,( RRS + DDR ) ) ) )", "choosing": "Max( ( Min( ( MUR - RRSe ) ,RCSe ) - ( ( RCSe + MUC ) * RRSe ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,ACS ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR * MUC ) * DS ) / RCSe ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ARS ) * Min( Min( ( AMS + FirstVNF_CPU_Server ) ,( Const * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,RRS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - DS ) - ( ( RMSe / ( DS / MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Min( MRS ,RRS ) + ( ( AMS - BR ) - FirstVNF_Mem ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),( ( ( Max( MLU,DS ) + ( RRSe * RCSe ) ) - MUR ) / ( MUC - MUC ) ) ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_RAM ,MDR ) * ( MRS - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + ( Min( MUM ,RMSe ) / ( RCSe / Max( ( MLU - MUM ),DS ) ) ) ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( DDR * PN ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,MLU ) / Min( RCSe ,CS ) ) ,( Min( MLU ,RCSe ) / ( CS * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * FirstVNF_RAM ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - ( MUR * DS ) ) ,( Min( MUR ,MUC ) + Max( ( MUR / MLU ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( Min( ( CS - RCSe ) ,( RRSe + RMSe ) ) - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( RMSe ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( RRS ,FirstVNF_Mem_Server ) - ACS ) ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( CS - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * MRS ) * ( FirstVNF_CPU_Server / DDR ) ) ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( CS - ( ( RRSe - CS ) / ( MUM / MUR ) ) ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,ACS ) / Min( FirstVNF_Mem ,RRS ) ) ) / PN ) - ACS )", "choosing": "Min( ( MUM + MLU ) ,( Max( Max( ( ( RMSe / Min( Min( CS ,MUM ) ,( DS / DS ) ) ) + Min( MUC ,Max( MUC,( RCSe + RMSe ) ) ) ),MUR ),MUR ) - ( MLU * Max( MUM,( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * RRS ) / PN ) - BR )", "choosing": "Min( ( MUR + CS ) ,( RRSe + ( MUM / ( MUC * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ACS - Min( ( AMS / PN ) ,( Max( MDR,ACS ) / ( Min( Min( Const ,ARS ) ,AMS ) * BR ) ) ) )", "choosing": "Max( ( ( CS - RRSe ) + ( ( RMSe - Max( ( RCSe + RRSe ),MUM ) ) - ( Max( RMSe,MLU ) + MUC ) ) ),( Min( MUR ,MUR ) - ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - ( AMS / PN ) )", "choosing": "Max( ( ( CS - RRSe ) + ( ( RMSe - Max( ( RCSe + RCSe ),MUM ) ) - ( Max( RMSe,MLU ) + MUC ) ) ),( Min( MUR ,MUR ) - ( MUM * ( Max( RMSe,MLU ) + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / BR ),ACS ) + ( CRS / BR ) )", "choosing": "( Max( RMSe,DS ) / Min( ( CS * ( Min( MLU ,( CS * ( Min( MLU ,DS ) * DS ) ) ) * DS ) ) ,Max( RRSe,DS ) ) )", "obj1": 0.030418250950570342, "obj2": 0.7882140021378816}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) * ( DDR * FirstVNF_RAM ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( RCSe + RCSe ) - ( DS + MUC ) )", "obj1": 0.6996197718631179, "obj2": 0.1252459980002292}, {"determining": "( ( MRS - Const ) + ( ( MRS - Const ) + ( DDR + ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - PN ) ) + ( ( ( MRS + RRS ) + ( MDR - PN ) ) + ( MDR - PN ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) - ( ( CS / Min( DS ,MUR ) ) / Min( DS ,( ( CS / RMSe ) / Min( DS ,MUR ) ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.2312108662266261}, {"determining": "( Max( ( PN + MRS ),( PN * ( FirstVNF_Mem / RRS ) ) ) + ( PN - MDR ) )", "choosing": "( ( DS + ( MUR - RCSe ) ) - ( RRSe * ( RMSe * MLU ) ) )", "obj1": 0.596958174904943, "obj2": 0.2360288448607128}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Max( ARS,MRS ) ) ) )", "choosing": "( ( Min( DS ,( DS / ( RMSe * Min( RMSe ,Max( MUM,RCSe ) ) ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8574144486692015, "obj2": 0.06305875807100018}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * Min( DDR ,ACS ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / ( CS + ( Min( MUM ,CS ) - RMSe ) ) )", "obj1": 0.5627376425855514, "obj2": 0.28737827208856614}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Max( ARS,MRS ) ) ) )", "choosing": "( ( Min( DS ,( DS / ( RMSe * Min( RMSe ,Max( MUM,RCSe ) ) ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( MDR + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( Min( ( MUC + MLU ) ,Min( ( MUC - RCSe ) ,RRSe ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5357689054423823}, {"determining": "( ( Min( ACS ,MDR ) * ( FirstVNF_RAM_Server / ACS ) ) * ( Min( DDR ,BR ) * ( ( ( ACS / Const ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( CS,DS ) / ( ( ( ( CS - RRSe ) + ( ( RMSe - Max( ( RCSe + RCSe ),MUM ) ) - ( Max( RMSe,MLU ) + MUC ) ) ) + RRSe ) - Max( MUR,RRSe ) ) )", "obj1": 0.31749049429657794, "obj2": 0.4758499115231616}, {"determining": "Max( Max( MDR,PN ),( PN * Max( Max( MDR,PN ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( Min( ( Min( MUC ,MUR ) + ( CS - RRSe ) ) ,MUC ) ,MUC ) )", "obj1": 0.35551330798479086, "obj2": 0.4331134818437934}, {"determining": "( Max( ( FirstVNF_RAM / ARS ),( ( ACS * RRS ) - DDR ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( MLU + ( DS / CS ) ) - ( DS + MUC ) )", "obj1": 0.2965779467680608, "obj2": 0.500164548334479}, {"determining": "( ( FirstVNF_Mem / ( FirstVNF_Mem / Max( DDR,( DDR + ( CRS - FirstVNF_CPU ) ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "( DS - ( CS - MUM ) )", "obj1": 0.5133079847908745, "obj2": 0.34115716128044005}, {"determining": "( ( ( ( ACS * RRS ) - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( ( DS / CS ) / CS ) ) )", "obj1": 0.051330798479087454, "obj2": 0.746072095143354}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - Min( ( ( ( ( BR * Max( FirstVNF_RAM,FirstVNF_RAM ) ) * MRS ) / FirstVNF_RAM ) / FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( ( RCSe + MUR ) + ( MUR / MUC ) )", "obj1": 0.7965779467680608, "obj2": 0.08054798474821998}, {"determining": "( ( ( ARS * MRS ) / ( FirstVNF_Mem / PN ) ) * FirstVNF_CPU_Server )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( ( DS / RCSe ) - CS ) ) )", "obj1": 0.4543726235741445, "obj2": 0.34865038237791013}, {"determining": "( ( BR / ( BR / Const ) ) + ( ( ( BR / ( BR / Const ) ) + ( DDR + ( CRS - FirstVNF_CPU ) ) ) + ( ARS + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( MUR + ( ( RRSe - RRSe ) / ( MUR + MLU ) ) ) ) - ( ( CS / Max( RRSe,( CS / Max( RRSe,RMSe ) ) ) ) / Max( RRSe,RMSe ) ) )", "obj1": 0.9068441064638784, "obj2": 0.048206868590530416}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Max( ( RRS * DDR ),BR ) ) ) / ( Min( Min( Const ,Min( Const ,ARS ) ) ,AMS ) * BR ) )", "choosing": "( ( RRSe / RRSe ) - ( MUM * Max( RRSe,( ( MUC + Min( ( Max( RRSe,MLU ) + DS ) ,CS ) ) + RMSe ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.6031345266760049}, {"determining": "( DDR / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( MUR - CS ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.155893536121673, "obj2": 0.646704344917641}, {"determining": "( ( MDR * BR ) / ( DDR / ( AMS * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( RRSe * CS ) ,( MUM + MUC ) ) * ( ( ( ( DS + MLU ) + Max( MUM,MUC ) ) - ( ( MLU - DS ) / Max( MUR,DS ) ) ) + ( ( ( RCSe * RCSe ) - ( RMSe / DS ) ) - ( Max( CS,MUR ) - Max( MUC,MUC ) ) ) ) ) + ( ( ( MUM * MUM ) + MUC ) / ( ( DS + CS ) / Max( MUM,MUM ) ) ) )", "obj1": 0.5399239543726235, "obj2": 0.3060023754742023}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( FirstVNF_CPU * BR ) * ( Const * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - CS )", "obj1": 0.44866920152091255, "obj2": 0.36271699086952425}, {"determining": "( Max( ( CRS / ( Max( ( CRS / BR ),ACS ) + ( ARS / FirstVNF_RAM ) ) ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( Min( MLU ,DS ) / Min( ( CS * ( Min( MLU ,DS ) * DS ) ) ,Max( RRSe,DS ) ) )", "obj1": 0.03231939163498099, "obj2": 0.7673401107555481}, {"determining": "( ( ( ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / MUR ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.06463878326996197, "obj2": 0.712235680413763}, {"determining": "( ( Max( FirstVNF_RAM,( CRS / ( FirstVNF_CPU_Server / ACS ) ) ) * ( ARS - RRS ) ) + Max( ( DDR - ( ARS + FirstVNF_RAM ) ),ARS ) )", "choosing": "( ( MUM - MUR ) / ( RRSe + ( ( Min( RRSe ,Max( Min( RMSe ,RCSe ),CS ) ) + Min( MUR ,MUR ) ) - Min( ( RRSe / ( Max( MUM,RRSe ) * DS ) ) ,MLU ) ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( Const * Max( Max( MDR,PN ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) ) ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( MUC ,RRSe ) + ( CS - RRSe ) ) ,MUC ) )", "obj1": 0.38593155893536124, "obj2": 0.40863157045608806}, {"determining": "( FirstVNF_CPU_Server + ( DDR + CRS ) )", "choosing": "( Min( DS ,MUR ) - ( CS / Max( RRSe,RMSe ) ) )", "obj1": 0.5247148288973384, "obj2": 0.31951180119259665}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ( ( AMS * ARS ) - Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) ) ) ) )", "choosing": "( RCSe / Max( CS,DS ) )", "obj1": 0.43346007604562736, "obj2": 0.39113420434733054}, {"determining": "( ARS + Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) )", "choosing": "( ( Min( MUC ,( ( DS - MUC ) / Max( CS,DS ) ) ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - ( RCSe + CS ) ) )", "obj1": 0.1520912547528517, "obj2": 0.6588098764257287}, {"determining": "( ( BR * ( ( ( Max( ( Min( FirstVNF_RAM_Server ,AMS ) * ( CRS * DDR ) ),Min( Max( AMS,MDR ) ,Min( Const ,FirstVNF_CPU_Server ) ) ) * ( ( ( MRS + ACS ) - RRS ) / ( ( FirstVNF_RAM_Server + MDR ) - Min( RRS ,BR ) ) ) ) + Const ) / DDR ) ) * ( CRS / PN ) )", "choosing": "( ( ( Min( DS ,CS ) - MUM ) - CS ) / ( MUM / ( RRSe * RCSe ) ) )", "obj1": 0.19771863117870722, "obj2": 0.5822171558119359}, {"determining": "( Max( MDR,ACS ) / ( Min( Min( Const ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Max( ( RRS * DDR ),BR ) ) ) ) ,AMS ) * BR ) )", "choosing": "( ( RRSe / RRSe ) - ( MUM * Max( ( MUC + Min( ( RMSe + DS ) ,CS ) ),( Max( Min( ( MLU - Max( RRSe,MLU ) ) ,( MLU - Max( RRSe,MLU ) ) ),DS ) + RMSe ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5703829858987164}, {"determining": "( ( BR / ( ARS + BR ) ) + ( CRS - FirstVNF_CPU ) )", "choosing": "( Min( DS ,( DS - ( ( CS / RMSe ) / Min( DS ,MUR ) ) ) ) - RRSe )", "obj1": 0.9657794676806084, "obj2": 0.012505475004254018}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( Max( ( ( PN - DDR ) / MRS ),( ( DDR * DDR ) / ( BR - RRS ) ) ) ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( Max( MLU,MUC ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.16920152091254753, "obj2": 0.5908419351340244}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),MRS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) ) ) )", "obj1": 0.11216730038022814, "obj2": 0.6629037493185499}, {"determining": "( ( ( CRS - FirstVNF_CPU ) / ( BR / Const ) ) + ( DDR + ( CRS - FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( ( CS / Max( RRSe,( CS / Max( RRSe,RMSe ) ) ) ) / Max( RRSe,RMSe ) ) )", "obj1": 0.9391634980988594, "obj2": 0.027040160135658155}, {"determining": "( ( ( ( ACS * RRS ) - ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - CS ) )", "obj1": 0.3060836501901141, "obj2": 0.48711221959311257}, {"determining": "( ( ( ( ACS * RRS ) - DDR ) / MRS ) / ( Min( DDR ,( ACS * RRS ) ) * RRS ) )", "choosing": "( ( ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.09695817490494296, "obj2": 0.6685729712666721}, {"determining": "( ( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.09315589353612168, "obj2": 0.6923052986585173}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - AMS ) ) ) * BR ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( ( MUM - ( CS * Min( MUC ,Max( MUM,MUM ) ) ) ) ,MUR ) + ( DS - CS ) ) ,MUC ) )", "obj1": 0.3650190114068441, "obj2": 0.42223195098843536}, {"determining": "Max( ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( MUC ,MUR ) + ( CS - RRSe ) ) ,MUC ) )", "obj1": 0.38022813688212925, "obj2": 0.419753539647457}, {"determining": "( ( MRS - Const ) + ( DDR + ( FirstVNF_CPU + ( ( FirstVNF_Mem_Server * PN ) + ( ARS - ( FirstVNF_CPU / MRS ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) - Min( ( RCSe * MUR ) ,Min( RMSe ,Max( MUC,( ( ( RMSe + RRSe ) * RCSe ) + ( DS - ( CS * DS ) ) ) ) ) ) )", "obj1": 0.9239543726235742, "obj2": 0.04103316444380008}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5763414158924568}, {"determining": "( ( ( CRS - FirstVNF_CPU ) / ( BR / Const ) ) + ( DDR + ( CRS - FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( ( CS / Max( Max( RRSe,RMSe ),( CS / Max( RRSe,RMSe ) ) ) ) / Max( RRSe,RMSe ) ) )", "obj1": 0.9334600760456274, "obj2": 0.028755958950749002}, {"determining": "( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * BR ) )", "choosing": "( ( ( CS / RCSe ) / ( ( RCSe - DS ) / Max( MLU,MUC ) ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.9771863117870723, "obj2": 0.009192941734997859}, {"determining": "( ( ( ( ACS * RRS ) - DDR ) / MRS ) / ( ( ( ( ACS * RRS ) - DDR ) / MRS ) * RRS ) )", "choosing": "( ( RCSe / MUR ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6959288479454265}, {"determining": "( ( BR / ( ARS + BR ) ) + ( DDR + ( CRS - FirstVNF_CPU ) ) )", "choosing": "( Min( DS ,( Min( DS ,CS ) - ( ( CS / RMSe ) / Min( DS ,MUR ) ) ) ) - RRSe )", "obj1": 0.9163498098859315, "obj2": 0.04343834512666908}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Max( ( Min( RRS ,Max( RRS,FirstVNF_Mem_Server ) ) - Min( CRS ,Const ) ),MRS ) ) ) )", "choosing": "( ( Min( DS ,( DS / ( RMSe * Min( RMSe ,( CS - ( MUR * DS ) ) ) ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.9847908745247148, "obj2": 0.0022258139152641233}, {"determining": "( ( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) * ( DDR * FirstVNF_RAM ) ) * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( Min( ( CS * MUR ) ,Max( ( Min( MUC ,( RCSe + RCSe ) ) + ( MUR / MUC ) ),DS ) ) + ( MUR / MUC ) )", "obj1": 0.7946768060836502, "obj2": 0.09064982016679025}, {"determining": "( ( ( MRS - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7029070156651926}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + ( MRS + FirstVNF_RAM_Server ) ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - CS ) - ( DS / CS ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6667381789171105}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Min( FirstVNF_CPU ,Max( ARS,CRS ) ) - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RMSe,( CS - RRSe ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7889733840304183, "obj2": 0.09367491223533331}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( DDR ,( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.07224334600760456, "obj2": 0.7041774450935934}, {"determining": "( Min( ( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Max( ( RRS * DDR ),BR ) ) ) * ( Min( Min( Const ,ARS ) ,AMS ) * BR ) ) ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) )", "choosing": "Min( Max( MUR,( MLU - Max( RRSe,MLU ) ) ) ,( RRSe + ( ( MUC + Min( ( RMSe + DS ) ,CS ) ) - RMSe ) ) )", "obj1": 0.9923954372623575, "obj2": 0.001507222552340324}, {"determining": "( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007417885736375986}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.07224334600760456, "obj2": 0.7041774450935934}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ( ( AMS * Const ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) )", "choosing": "( ( DS - MUR ) / ( Min( MUC ,MUR ) + ( Min( MUC ,MUR ) + ( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( Max( CRS,FirstVNF_RAM_Server ) ,ACS ) ) + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS - MUR ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_RAM_Server * BR ) / ( AMS - PN ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( MUM,DS ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( FirstVNF_RAM / FirstVNF_CPU ) ) - Min( CRS ,Const ) )", "choosing": "Min( Max( MUR,( CS / CS ) ) ,Max( ( Min( MLU ,DS ) / RCSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( Max( Min( CS ,Min( RCSe ,RCSe ) ),( RMSe / MUR ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( ( Max( ( ( RCSe * Max( CS,MUM ) ) / ( ( MUC + RCSe ) * RRSe ) ),MUC ) * MLU ) * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,ACS ) / Min( FirstVNF_Mem ,RRS ) ) ) / PN ) - ACS )", "choosing": "Min( ( MUM + MLU ) ,( Max( Max( ( ( RMSe / Min( Min( CS ,MUM ) ,( DS / DS ) ) ) + Min( MUC ,Max( MUC,( RCSe + RMSe ) ) ) ),MUR ),MUR ) - ( MLU * Max( MUM,( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( DDR - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,CRS ) ) ) / ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Max( CS,RMSe ) - Min( RRSe ,( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) ) + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * MUR ) ,Max( RRSe,( Min( MUC ,RRSe ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + CRS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * Max( RMSe,DS ) ) ,Max( RRSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) )", "choosing": "Max( ( Max( ( MUR - CS ),RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * MRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,MUR ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ACS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( MUC + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - ( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * MRS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( CS - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),RCSe ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( ( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - Min( MUC ,MLU ) ) ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - ARS ) + FirstVNF_CPU_Server ) - PN ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) - Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ( Min( MDR ,FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( RRSe / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,CS ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,Max( ( PN * FirstVNF_Mem_Server ),Max( DDR,PN ) ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUC - MUC ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS - ( ( CS + RRSe ) / ( MUR - MLU ) ) ) / ( MUR / MUC ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) + Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Max( DDR,FirstVNF_CPU ) ) ) ,( RRS + DDR ) ) ) )", "choosing": "Max( ( Min( ( MUR - RRSe ) ,RCSe ) - ( ( RCSe + MUC ) * RRSe ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,ACS ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR * MUC ) * DS ) / RCSe ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ARS ) * Min( Min( ( AMS + FirstVNF_CPU_Server ) ,( Const * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,RRS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - DS ) - ( ( RMSe / ( DS / MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Min( MRS ,RRS ) + ( ( AMS - BR ) - FirstVNF_Mem ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),( ( ( Max( MLU,DS ) + ( RRSe * RCSe ) ) - MUR ) / ( MUC - MUC ) ) ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_RAM ,MDR ) * ( MRS - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + ( Min( MUM ,RMSe ) / ( RCSe / Max( ( MLU - MUM ),DS ) ) ) ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( DDR * PN ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,MLU ) / Min( RCSe ,CS ) ) ,( Min( MLU ,RCSe ) / ( CS * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * FirstVNF_RAM ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - ( MUR * DS ) ) ,( Min( MUR ,MUC ) + Max( ( MUR / MLU ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( Min( ( CS - RCSe ) ,( RRSe + RMSe ) ) - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( RRS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( RMSe ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( RRS ,FirstVNF_Mem_Server ) - ACS ) ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( CS - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * MRS ) * ( FirstVNF_CPU_Server / DDR ) ) ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( CS - ( ( RRSe - CS ) / ( MUM / MUR ) ) ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,ACS ) / Min( FirstVNF_Mem ,RRS ) ) ) / PN ) - ACS )", "choosing": "Min( ( MUM + MLU ) ,( Max( Max( ( ( RMSe / Min( Min( CS ,MUM ) ,( DS / DS ) ) ) + Min( MUC ,Max( MUC,( RCSe + RMSe ) ) ) ),MUR ),MUR ) - ( MLU * Max( MUM,( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM * RRS ) / PN ) - BR )", "choosing": "Min( ( MUR + CS ) ,( RRSe + ( MUM / ( MUC * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( ( PN - ( ACS - Min( ( AMS / PN ) ,MDR ) ) ) ,( CRS - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,Min( ( CS - ( RMSe * DS ) ) ,( RRSe + RMSe ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS - Min( ( AMS / PN ) ,( Max( MDR,ACS ) / ( Min( Min( Const ,ARS ) ,AMS ) * BR ) ) ) )", "choosing": "Max( ( ( CS - RRSe ) + ( ( RMSe - Max( ( RCSe + RRSe ),MUM ) ) - ( Max( RMSe,MLU ) + MUC ) ) ),( Min( MUR ,MUR ) - ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / BR ),ACS ) + ( CRS / BR ) )", "choosing": "( Max( RMSe,DS ) / Min( ( CS * ( Min( MLU ,( CS * ( Min( MLU ,DS ) * DS ) ) ) * DS ) ) ,Max( RRSe,DS ) ) )", "obj1": 0.030418250950570342, "obj2": 0.7882140021378816}, {"determining": "( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) * ( DDR * FirstVNF_RAM ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( RCSe + RCSe ) - ( DS + MUC ) )", "obj1": 0.6996197718631179, "obj2": 0.1252459980002292}, {"determining": "( ( BR / ( ARS + BR ) ) + ( ( AMS / FirstVNF_CPU ) + ( CRS - FirstVNF_CPU ) ) )", "choosing": "( Min( DS ,( Min( DS ,CS ) - ( ( CS / RMSe ) / Min( DS ,MUR ) ) ) ) - ( CS / RMSe ) )", "obj1": 0.6577946768060836, "obj2": 0.21991668093143085}, {"determining": "Max( ( ( Min( MRS ,PN ) / Max( MDR,MRS ) ) * Min( DDR ,ACS ) ),Min( Min( ( FirstVNF_CPU - AMS ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ,( ( ARS - FirstVNF_RAM_Server ) / ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( MLU * DS ) / ( CS + ( Min( MUM ,CS ) - RMSe ) ) )", "obj1": 0.5627376425855514, "obj2": 0.28737827208856614}, {"determining": "( Max( ( PN + MRS ),( PN * ( FirstVNF_Mem / RRS ) ) ) + ( PN - MDR ) )", "choosing": "( ( DS + ( MUR - RCSe ) ) - ( RRSe * ( RMSe * MLU ) ) )", "obj1": 0.596958174904943, "obj2": 0.2360288448607128}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Max( ARS,MRS ) ) ) )", "choosing": "( ( Min( DS ,( DS / ( RMSe * Min( RMSe ,Max( MUM,RCSe ) ) ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.8574144486692015, "obj2": 0.06305875807100018}, {"determining": "( ( FirstVNF_Mem / ( FirstVNF_Mem / Max( DDR,( DDR + ( CRS - FirstVNF_CPU ) ) ) ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "( DS - ( CS - MUM ) )", "obj1": 0.5133079847908745, "obj2": 0.34115716128044005}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Max( ARS,MRS ) ) ) )", "choosing": "( ( Min( DS ,( DS / ( RMSe * Min( RMSe ,Max( MUM,RCSe ) ) ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7832699619771863, "obj2": 0.09451467040850699}, {"determining": "( ( Min( ACS ,MDR ) * ( FirstVNF_RAM_Server / ACS ) ) * ( Min( DDR ,BR ) * ( ( ( ACS / Const ) * ( MDR * FirstVNF_RAM ) ) * Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * DDR ) ) ) ) )", "choosing": "( Max( CS,DS ) / ( ( ( ( CS - RRSe ) + ( ( RMSe - Max( ( RCSe + RCSe ),MUM ) ) - ( Max( RMSe,MLU ) + MUC ) ) ) + RRSe ) - Max( MUR,RRSe ) ) )", "obj1": 0.31749049429657794, "obj2": 0.4758499115231616}, {"determining": "Max( Max( MDR,PN ),FirstVNF_Mem )", "choosing": "( ( DS * RRSe ) - ( ( DS * RRSe ) - Min( ( DS + ( DS - CS ) ) ,MUC ) ) )", "obj1": 0.5209125475285171, "obj2": 0.2979817515581511}, {"determining": "( MDR + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( Min( ( MUC + MLU ) ,Min( ( MUC - RCSe ) ,RRSe ) ) - MUC ) - Max( DS,CS ) ) / ( Max( MLU,MUR ) / Max( RCSe,MLU ) ) )", "obj1": 0.24524714828897337, "obj2": 0.5357689054423823}, {"determining": "Max( Max( MDR,PN ),( PN * Max( Max( MDR,PN ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( Min( ( Min( MUC ,MUR ) + ( CS - RRSe ) ) ,MUC ) ,MUC ) )", "obj1": 0.35551330798479086, "obj2": 0.4331134818437934}, {"determining": "( ( ( ( ACS * RRS ) - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( ( DS / CS ) / CS ) ) )", "obj1": 0.051330798479087454, "obj2": 0.746072095143354}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - Min( ( ( ( ( BR * Max( FirstVNF_RAM,FirstVNF_RAM ) ) * MRS ) / FirstVNF_RAM ) / FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( ( RCSe + MUR ) + ( MUR / MUC ) )", "obj1": 0.7965779467680608, "obj2": 0.08054798474821998}, {"determining": "( ( ( ARS * MRS ) / ( FirstVNF_Mem / PN ) ) * FirstVNF_CPU_Server )", "choosing": "Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( ( DS / RCSe ) - CS ) ) )", "obj1": 0.4543726235741445, "obj2": 0.34865038237791013}, {"determining": "( ( ( ( ACS * RRS ) - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - Max( Const,Max( ( Min( CRS ,FirstVNF_Mem_Server ) - RRS ),AMS ) ) ) ) )", "choosing": "( DS + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.2946768060836502, "obj2": 0.5245875403160922}, {"determining": "( ( BR / ( BR / Const ) ) + ( ( ( BR / ( BR / Const ) ) + ( DDR + ( CRS - FirstVNF_CPU ) ) ) + ( ARS + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( MUR + ( ( RRSe - RRSe ) / ( MUR + MLU ) ) ) ) - ( ( CS / Max( RRSe,( CS / Max( RRSe,RMSe ) ) ) ) / Max( RRSe,RMSe ) ) )", "obj1": 0.9068441064638784, "obj2": 0.048206868590530416}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Max( ( RRS * DDR ),BR ) ) ) / ( Min( Min( Const ,Min( Const ,ARS ) ) ,AMS ) * BR ) )", "choosing": "( ( RRSe / RRSe ) - ( MUM * Max( RRSe,( ( MUC + Min( ( Max( RRSe,MLU ) + DS ) ,CS ) ) + RMSe ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.6031345266760049}, {"determining": "( ( MRS - Const ) + ( ( MRS - Const ) + ( DDR + ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - PN ) ) + ( ( ( MRS + RRS ) + ( MDR - PN ) ) + ( MDR - PN ) ) ) ) ) )", "choosing": "( Min( DS ,MUR ) - ( ( CS / Min( DS ,MUR ) ) / Min( DS ,( ( CS / RMSe ) / Min( DS ,MUR ) ) ) ) )", "obj1": 0.6444866920152091, "obj2": 0.2312108662266261}, {"determining": "( DDR / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( MUR - CS ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.155893536121673, "obj2": 0.646704344917641}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( FirstVNF_CPU * BR ) * ( Const * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - CS )", "obj1": 0.44866920152091255, "obj2": 0.36271699086952425}, {"determining": "( Max( ( CRS / ( Max( ( CRS / BR ),ACS ) + ( ARS / FirstVNF_RAM ) ) ),ACS ) + ( ARS / FirstVNF_RAM ) )", "choosing": "( Min( MLU ,DS ) / Min( ( CS * ( Min( MLU ,DS ) * DS ) ) ,Max( RRSe,DS ) ) )", "obj1": 0.03231939163498099, "obj2": 0.7673401107555481}, {"determining": "( ( ( ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / MUR ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.06463878326996197, "obj2": 0.712235680413763}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( Const * Max( Max( MDR,PN ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) ) ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( MUC ,RRSe ) + ( CS - RRSe ) ) ,MUC ) )", "obj1": 0.38593155893536124, "obj2": 0.40863157045608806}, {"determining": "Min( ( FirstVNF_Mem_Server / BR ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( Const * PN ) ) )", "choosing": "( ( Max( Max( CS,RCSe ),( MUR / CS ) ) + Min( ( DS / CS ) ,( MUC + RRSe ) ) ) - Min( ( ( MLU * CS ) / ( MUR * DS ) ) ,( ( RCSe * CS ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.42775665399239543, "obj2": 0.4015148371158489}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ( ( AMS * ARS ) - Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) ) ) ) )", "choosing": "( RCSe / Max( CS,DS ) )", "obj1": 0.43346007604562736, "obj2": 0.39113420434733054}, {"determining": "( ARS + Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ARS ) ) ) )", "choosing": "( ( Min( MUC ,( ( DS - MUC ) / Max( CS,DS ) ) ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - ( RCSe + CS ) ) )", "obj1": 0.1520912547528517, "obj2": 0.6588098764257287}, {"determining": "( ( BR * ( ( ( Max( ( Min( FirstVNF_RAM_Server ,AMS ) * ( CRS * DDR ) ),Min( Max( AMS,MDR ) ,Min( Const ,FirstVNF_CPU_Server ) ) ) * ( ( ( MRS + ACS ) - RRS ) / ( ( FirstVNF_RAM_Server + MDR ) - Min( RRS ,BR ) ) ) ) + Const ) / DDR ) ) * ( CRS / PN ) )", "choosing": "( ( ( Min( DS ,CS ) - MUM ) - CS ) / ( MUM / ( RRSe * RCSe ) ) )", "obj1": 0.19771863117870722, "obj2": 0.5822171558119359}, {"determining": "( ( BR / ( ARS + BR ) ) + ( CRS - FirstVNF_CPU ) )", "choosing": "( Min( DS ,( DS - ( ( CS / RMSe ) / Min( DS ,MUR ) ) ) ) - RRSe )", "obj1": 0.9657794676806084, "obj2": 0.012505475004254018}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( Max( ( ( PN - DDR ) / MRS ),( ( DDR * DDR ) / ( BR - RRS ) ) ) ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( Max( MLU,MUC ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.16920152091254753, "obj2": 0.5908419351340244}, {"determining": "( Max( ( FirstVNF_RAM / ARS ),( ( ACS * RRS ) - DDR ) ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( ( MLU + ( DS / CS ) ) - ( DS + MUC ) )", "obj1": 0.2965779467680608, "obj2": 0.500164548334479}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),MRS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) ) ) )", "obj1": 0.11216730038022814, "obj2": 0.6629037493185499}, {"determining": "( ( ( CRS - FirstVNF_CPU ) / ( BR / Const ) ) + ( DDR + ( CRS - FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( ( CS / Max( RRSe,( CS / Max( RRSe,RMSe ) ) ) ) / Max( RRSe,RMSe ) ) )", "obj1": 0.9391634980988594, "obj2": 0.027040160135658155}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,ACS ) / Min( FirstVNF_Mem ,RRS ) ) ) / Min( FirstVNF_CPU_Server ,( PN + MRS ) ) ) - ACS )", "choosing": "Min( ( MUM + MLU ) ,( Max( Max( ( ( RMSe / Min( Min( CS ,MUM ) ,( DS / DS ) ) ) + ( MUC / MUR ) ),MUR ),MUR ) - ( MLU * Max( MUM,( DS - MUR ) ) ) ) )", "obj1": 0.22053231939163498, "obj2": 0.5657728424429004}, {"determining": "( ( ( ( ACS * RRS ) - ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - CS ) )", "obj1": 0.3060836501901141, "obj2": 0.48711221959311257}, {"determining": "( ( ( ( ACS * RRS ) - DDR ) / MRS ) / ( Min( DDR ,( ACS * RRS ) ) * RRS ) )", "choosing": "( ( ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.09695817490494296, "obj2": 0.6685729712666721}, {"determining": "( ( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.09315589353612168, "obj2": 0.6923052986585173}, {"determining": "Max( Max( MDR,PN ),( PN * ( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - AMS ) ) ) * BR ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( ( MUM - ( CS * Min( MUC ,Max( MUM,MUM ) ) ) ) ,MUR ) + ( DS - CS ) ) ,MUC ) )", "obj1": 0.3650190114068441, "obj2": 0.42223195098843536}, {"determining": "( ( Max( FirstVNF_RAM,( CRS / ( FirstVNF_CPU_Server / ACS ) ) ) * ( ARS - RRS ) ) + Max( ( DDR - ( ARS + FirstVNF_RAM ) ),ARS ) )", "choosing": "( ( MUM - MUR ) / ( RRSe + ( ( Min( RRSe ,Max( Min( RMSe ,RCSe ),CS ) ) + Min( MUR ,MUR ) ) - Min( ( RRSe / ( Max( MUM,RRSe ) * DS ) ) ,MLU ) ) ) )", "obj1": 0.2262357414448669, "obj2": 0.5276172467395419}, {"determining": "Max( ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ),( PN * ( ( Const * BR ) * ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( DS * RRSe ) - Min( ( Min( MUC ,MUR ) + ( CS - RRSe ) ) ,MUC ) )", "obj1": 0.38022813688212925, "obj2": 0.419753539647457}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + MDR ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + RMSe ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 0.21482889733840305, "obj2": 0.5763414158924568}, {"determining": "( ( ( PN - DDR ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * BR ) )", "choosing": "( ( ( CS / RCSe ) / ( ( RCSe - DS ) / Max( MLU,MUC ) ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.9771863117870723, "obj2": 0.009192941734997859}, {"determining": "( ( ( ( ACS * RRS ) - DDR ) / MRS ) / ( ( ( ( ACS * RRS ) - DDR ) / MRS ) * RRS ) )", "choosing": "( ( RCSe / MUR ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.08555133079847908, "obj2": 0.6959288479454265}, {"determining": "( ( BR / ( BR / Const ) ) + ( ( DDR + ( CRS - FirstVNF_CPU ) ) + ( CRS - FirstVNF_CPU ) ) )", "choosing": "( Min( DS ,MUR ) - ( ( CS / Max( RRSe,( ( CS / Max( RRSe,RMSe ) ) / Max( RRSe,RMSe ) ) ) ) / Max( RRSe,RMSe ) ) )", "obj1": 0.9296577946768061, "obj2": 0.03545919053750954}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - Max( ( Min( RRS ,Max( RRS,FirstVNF_Mem_Server ) ) - Min( CRS ,Const ) ),MRS ) ) ) )", "choosing": "( ( Min( DS ,( DS / ( RMSe * Min( RMSe ,( CS - ( MUR * DS ) ) ) ) ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.9847908745247148, "obj2": 0.0022258139152641233}, {"determining": "( ( BR / ( ARS + BR ) ) + ( DDR + ( CRS - FirstVNF_CPU ) ) )", "choosing": "( Min( DS ,( Min( DS ,CS ) - ( ( CS / RMSe ) / Min( DS ,MUR ) ) ) ) - RRSe )", "obj1": 0.9163498098859315, "obj2": 0.04343834512666908}, {"determining": "( ( ( ( Min( PN ,FirstVNF_CPU_Server ) - MDR ) * ( DDR * FirstVNF_RAM ) ) * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) )", "choosing": "( Min( ( CS * MUR ) ,Max( ( Min( MUC ,( RCSe + RCSe ) ) + ( MUR / MUC ) ),DS ) ) + ( MUR / MUC ) )", "obj1": 0.7946768060836502, "obj2": 0.09064982016679025}, {"determining": "( ( ( MRS - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.0779467680608365, "obj2": 0.7029070156651926}, {"determining": "( ( CRS - FirstVNF_CPU ) + ( DDR + ( CRS - FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( ( CS / Max( RRSe,( CS / Max( ( CS / Max( RRSe,RMSe ) ),RMSe ) ) ) ) / Max( RRSe,RMSe ) ) )", "obj1": 0.9201520912547528, "obj2": 0.03961472123523658}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + ( MRS + FirstVNF_RAM_Server ) ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( ( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) ) - CS ) - ( DS / CS ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6667381789171105}, {"determining": "( ( ( CRS - FirstVNF_CPU ) / ( BR / Const ) ) + ( DDR + ( CRS - FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( ( CS / Max( Max( RRSe,RMSe ),( CS / Max( RRSe,RMSe ) ) ) ) / Max( RRSe,RMSe ) ) )", "obj1": 0.9334600760456274, "obj2": 0.028755958950749002}, {"determining": "( Max( MDR,ACS ) / ( Min( Min( Const ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Max( ( RRS * DDR ),BR ) ) ) ) ,AMS ) * BR ) )", "choosing": "( ( RRSe / RRSe ) - ( MUM * Max( ( MUC + Min( ( RMSe + DS ) ,CS ) ),( Max( Min( ( MLU - Max( RRSe,MLU ) ) ,( MLU - Max( RRSe,MLU ) ) ),DS ) + RMSe ) ) ) )", "obj1": 0.21673003802281368, "obj2": 0.5703829858987164}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( ( Min( FirstVNF_CPU ,Max( ARS,CRS ) ) - FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RMSe,( CS - RRSe ) ) * ( CS + RCSe ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 0.7889733840304183, "obj2": 0.09367491223533331}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.07224334600760456, "obj2": 0.7041774450935934}, {"determining": "( Min( ( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * Max( ( RRS * DDR ),BR ) ) ) * ( Min( Min( Const ,ARS ) ,AMS ) * BR ) ) ,FirstVNF_Mem_Server ) - Min( CRS ,Const ) )", "choosing": "Min( Max( MUR,( MLU - Max( RRSe,MLU ) ) ) ,( RRSe + ( ( MUC + Min( ( RMSe + DS ) ,CS ) ) - RMSe ) ) )", "obj1": 0.9923954372623575, "obj2": 0.001507222552340324}, {"determining": "( ( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) / ( Min( DDR ,( ( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) ) / MRS ) ) * RRS ) )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + ( ( MUR - CS ) - ( DS / CS ) ) )", "obj1": 0.07224334600760456, "obj2": 0.7041774450935934}, {"determining": "( ( BR / Const ) + ( DDR + ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( MDR - ( ( ( ARS + BR ) * ( ARS + FirstVNF_RAM_Server ) ) * ( ( AMS / FirstVNF_CPU ) - BR ) ) ) ) - FirstVNF_CPU ) ) )", "choosing": "( Min( DS ,MUR ) - RRSe )", "obj1": 0.9961977186311787, "obj2": 0.0005513730858376574}, {"determining": "( ( FirstVNF_CPU - Max( ( AMS * PN ),( ( Max( ( AMS * PN ),( ( FirstVNF_CPU_Server / PN ) * FirstVNF_RAM ) ) / PN ) * FirstVNF_RAM ) ) ) - Min( FirstVNF_Mem ,RRS ) )", "choosing": "( ( ( RMSe * MUC ) - MUR ) + ( RMSe * MUC ) )", "obj1": 0.9980988593155894, "obj2": 0.00041345875697113796}, {"determining": "( ACS - ( AMS / PN ) )", "choosing": "Max( ( ( CS - RRSe ) + ( ( RMSe - Max( ( RCSe + RCSe ),MUM ) ) - ( Max( RMSe,MLU ) + MUC ) ) ),( Min( MUR ,MUR ) - ( MUM * ( Max( RMSe,MLU ) + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( FirstVNF_CPU,MDR ),Max( FirstVNF_CPU,MRS ) ) ,( Max( CRS,FirstVNF_RAM_Server ) / ( Const * ( ( AMS * Const ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) )", "choosing": "( ( DS - MUR ) / ( Min( MUC ,MUR ) + ( Min( MUC ,MUR ) + ( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ( MDR - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( Max( CRS,FirstVNF_RAM_Server ) ,ACS ) ) + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS - MUR ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM + MDR ) / ( MRS / PN ) ) ,( ( BR * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / PN ) ) ) + Max( ( ( RRS + DDR ) * ( MDR / MDR ) ),( ( FirstVNF_RAM_Server * BR ) / ( AMS - PN ) ) ) )", "choosing": "Min( ( ( DS - RRSe ) * Max( MUM,DS ) ) ,Max( MUM,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ( FirstVNF_RAM / FirstVNF_CPU ) ) - Min( CRS ,Const ) )", "choosing": "Min( Max( MUR,( CS / CS ) ) ,Max( ( Min( MLU ,DS ) / RCSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) + Min( FirstVNF_CPU_Server ,CRS ) )", "choosing": "( Max( Min( CS ,Min( RCSe ,RCSe ) ),( RMSe / MUR ) ) - ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,RRSe ) + ( DS * MUM ) ),( ( ( Max( ( ( RCSe * Max( CS,MUM ) ) / ( ( MUC + RCSe ) * RRSe ) ),MUC ) * MLU ) * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( FirstVNF_RAM_Server + PN ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),( RRSe + RMSe ) ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Const ) ,( DDR - MRS ) ) * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( Min( DS ,RCSe ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN / ACS ) ,Max( CRS,MRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,( Min( RRS ,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUR * CS ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( RCSe,( RMSe + RCSe ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( MRS + DDR ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,MUC ) + Min( MUR ,CS ) ) - ( ( RMSe + RCSe ) * ( MUR * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,ACS ) / Min( FirstVNF_Mem ,RRS ) ) ) / PN ) - ACS )", "choosing": "Min( ( MUM + MLU ) ,( Max( Max( ( ( RMSe / Min( Min( CS ,MUM ) ,( DS / DS ) ) ) + Min( MUC ,Max( MUC,( RCSe + RMSe ) ) ) ),MUR ),MUR ) - ( MLU * Max( MUM,( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( DDR - FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,CRS ) ) ) / ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Max( CS,RMSe ) - Min( RRSe ,( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR * FirstVNF_Mem ) * ( DDR * FirstVNF_RAM ) ) + ACS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * MUR ) ,Max( RRSe,( Min( MUC ,RRSe ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + CRS ) - ( ARS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS * Max( RMSe,DS ) ) ,Max( RRSe,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * RRS ) - Max( ( MRS + FirstVNF_RAM_Server ),( Min( DDR ,FirstVNF_Mem_Server ) * RRS ) ) )", "choosing": "Max( ( Max( ( MUR - CS ),RRSe ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * MRS ) - Max( ( MRS + FirstVNF_RAM_Server ),ARS ) )", "choosing": "Max( ( Max( RCSe,MUR ) + ( DS * MUM ) ),( ( CS * RRSe ) * Max( DS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ACS ) )", "choosing": "( ( Min( MUC ,MLU ) * ( CS + RCSe ) ) - ( MUC + ( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - MDR ) ,( CRS - ( FirstVNF_CPU - ( Max( PN,( CRS - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,ACS ) ) ) ) )", "choosing": "( ( Min( MUC ,MLU ) * ( ( MUC - MUR ) + ( RCSe / ( MUR / MLU ) ) ) ) - ( Max( RCSe,RCSe ) - Min( RCSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * MRS ) - Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( MUC - MUR ) + ( RCSe / Min( ( ( MUM + RCSe ) + ( MUC / DS ) ) ,( ( DS * MLU ) + ( CS - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( PN,FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( RCSe ,RCSe ),RCSe ),( ( DS / CS ) - Max( MLU,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server * ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) )", "choosing": "( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) / Max( ( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( ( MLU / MUM ) - Min( MUC ,MLU ) ) ),Max( RCSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - ARS ) + FirstVNF_CPU_Server ) - PN ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MUC ,MUC ) * ( RCSe + CS ) ) / ( Min( Max( RMSe,RMSe ) ,( DS + CS ) ) - Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,MRS ) * ( CRS - ARS ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,ACS ) )", "choosing": "( ( ( MUC - MUC ) - Max( DS,CS ) ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ( Min( MDR ,FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem ) ) * Min( ( DDR - FirstVNF_RAM ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) )", "choosing": "( RRSe / Max( Min( MUC ,CS ),( MUM - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( ( DDR * FirstVNF_Mem_Server ) * ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RMSe ,CS ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,Max( ( PN * FirstVNF_Mem_Server ),Max( DDR,PN ) ) ) - ( DDR / BR ) )", "choosing": "( ( ( ( MLU - DS ) / Min( RCSe ,RCSe ) ) * Max( Max( MUR,DS ),Min( RMSe ,MUC ) ) ) * ( ( Min( CS ,DS ) * ( MUC - MUC ) ) / Max( ( MUR + MUM ),Min( CS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,Min( BR ,Const ) ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS - ( ( CS + RRSe ) / ( MUR - MLU ) ) ) / ( MUR / MUC ) ),( MUM - RMSe ) ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server * BR ),Min( PN ,CRS ) ),( ( CRS / FirstVNF_RAM ) - ( AMS + MRS ) ) ) + ( ( ( RRS * PN ) - ( FirstVNF_Mem_Server / BR ) ) / Min( ( ( ( BR / AMS ) * ( FirstVNF_Mem / DDR ) ) + Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Max( DDR,FirstVNF_CPU ) ) ) ,( RRS + DDR ) ) ) )", "choosing": "Max( ( Min( ( MUR - RRSe ) ,RCSe ) - ( ( RCSe + MUC ) * RRSe ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_RAM_Server ) * ( ACS + FirstVNF_Mem ) ) * Max( ( FirstVNF_Mem_Server * ARS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,ACS ) / ( Max( CRS,FirstVNF_Mem_Server ) - ( AMS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR * MUC ) * DS ) / RCSe ) + Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ARS ) * Min( Min( ( AMS + FirstVNF_CPU_Server ) ,( Const * FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem_Server,RRS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM - DS ) - ( ( RMSe / ( DS / MUM ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,ACS ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),RCSe ) ,Min( Max( ( RMSe + CS ),MUM ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Min( MRS ,RRS ) + ( ( AMS - BR ) - FirstVNF_Mem ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) / Min( ( BR * ARS ) ,( BR * FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_CPU + BR ) / ( DDR / FirstVNF_RAM ) ) / ( ( RRS - MDR ) / ( ACS * MDR ) ) ) )", "choosing": "Min( Max( Min( RRSe ,( DS - CS ) ),( ( ( Max( MLU,DS ) + ( RRSe * RCSe ) ) - MUR ) / ( MUC - MUC ) ) ) ,Min( Max( ( RMSe + CS ),MUM ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_CPU_Server ) + ( ( Min( FirstVNF_RAM ,MDR ) * ( MRS - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) - ( MUM * MUM ) ) ,( ( MUR - RRSe ) - ( RCSe + ( Min( MUM ,RMSe ) / ( RCSe / Max( ( MLU - MUM ),DS ) ) ) ) ) ) * ( Min( ( CS * CS ) ,( MUM * MLU ) ) * Max( Min( MUC ,MLU ),( MLU * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_RAM ) / ( BR * MRS ) ) - Min( ( DDR * PN ) ,( PN / BR ) ) ) / Max( ( ( FirstVNF_CPU_Server - BR ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ),( ( MDR + RRS ) - Max( AMS,MDR ) ) ) )", "choosing": "Min( Min( ( Min( RMSe ,MLU ) / Min( RCSe ,CS ) ) ,( Min( MLU ,RCSe ) / ( CS * RMSe ) ) ) ,( ( Max( RCSe,MUR ) / Max( MUM,MUC ) ) - ( ( MUM / MUM ) - ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * FirstVNF_RAM ) - Min( CRS ,Const ) )", "choosing": "Min( ( CS - ( MUR * DS ) ) ,( Min( MUR ,MUC ) + Max( ( MUR / MLU ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem_Server ) - ACS )", "choosing": "Min( ( Min( ( CS - RCSe ) ,( RRSe + RMSe ) ) - RCSe ) ,( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}]}