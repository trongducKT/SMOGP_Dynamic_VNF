{"1": [{"determining": "( ( MDR * MRS ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - DDR ) ,( AMS * ( DDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( DS / MUR ) * Max( CS,MUR ) ) - ( Min( RRSe ,RRSe ) - Min( RMSe ,RRSe ) ) ) + ( ( ( MUR - RCSe ) + Min( RCSe ,CS ) ) - Max( ( DS + DS ),( MUR - MLU ) ) ) )", "obj1": 0.4288939051918736, "obj2": 0.5542596549962293}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) + ( Const + BR ) )", "choosing": "Min( ( MUR + DS ) ,Max( CS,MUM ) )", "obj1": 0.44469525959367945, "obj2": 0.5198190841371626}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) / ( FirstVNF_RAM_Server * ARS ) )", "choosing": "Min( ( RCSe / RCSe ) ,Max( MLU,RCSe ) )", "obj1": 0.3927765237020316, "obj2": 0.5637316994885181}, {"determining": "( ( FirstVNF_CPU_Server / DDR ) * Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,RRSe ) - ( RMSe * MUC ) )", "obj1": 0.4853273137697517, "obj2": 0.48270812239290095}, {"determining": "( Min( DDR ,ACS ) / Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( MUM - MUM ) * ( RRSe * MUR ) )", "obj1": 0.3860045146726862, "obj2": 0.5896680717311533}, {"determining": "( ( Const * MDR ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( MLU + RCSe ) ,( MUM - DS ) )", "obj1": 0.36343115124153497, "obj2": 0.6139997160104722}, {"determining": "( ( DDR / Const ) + ( BR * MRS ) )", "choosing": "( ( MUM * MUR ) + Max( MUC,RCSe ) )", "obj1": 0.43115124153498874, "obj2": 0.5282298839229324}, {"determining": "( Max( MRS,CRS ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * MUR ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( ( ( Max( Max( AMS,Max( BR,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server + ( ( ARS / ACS ) * RRS ) ) ,DDR ) ) - DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( ( RRSe + DS ) - Max( MLU,RRSe ) ) * Min( ( Max( RCSe,( RCSe * RMSe ) ) * MUR ) ,Max( MLU,( Max( RRSe,( MLU + MUC ) ) - ( CS - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR + ARS ) ,Min( RRS ,DDR ) )", "choosing": "( ( MLU / DS ) + ( MLU - MUM ) )", "obj1": 0.3182844243792325, "obj2": 0.6614187153434397}, {"determining": "Min( Max( FirstVNF_RAM_Server,CRS ) ,Max( RRS,AMS ) )", "choosing": "( ( ( ( MUR + RRSe ) + MUM ) / MUM ) / ( CS - ( ( Max( MUM,( Min( ( RRSe / MUM ) ,RMSe ) + ( MUC - MLU ) ) ) - MUC ) - MLU ) ) )", "obj1": 0.4469525959367946, "obj2": 0.5116553405558252}, {"determining": "Min( ( FirstVNF_Mem_Server * AMS ) ,Max( ACS,RRS ) )", "choosing": "Min( ( MLU / MLU ) ,( RMSe - DS ) )", "obj1": 0.36794582392776526, "obj2": 0.5965689062638222}, {"determining": "Max( ( FirstVNF_CPU_Server / CRS ),( FirstVNF_Mem_Server * PN ) )", "choosing": "Max( Max( MUM,MLU ),Min( MUR ,MUM ) )", "obj1": 0.39954853273137697, "obj2": 0.5612025419460868}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( CS - RRSe ) ,Max( RRSe,CS ) )", "obj1": 0.9029345372460497, "obj2": 0.10481926966788314}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( MUC + RMSe ) * ( DS - MLU ) )", "obj1": 0.4762979683972912, "obj2": 0.4844853846049524}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( FirstVNF_Mem_Server - ( DDR / ( AMS + ( Min( ( FirstVNF_RAM_Server + MDR ) ,Const ) / Const ) ) ) ) )", "choosing": "Max( ( MUC + RCSe ),( MUC * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - FirstVNF_Mem_Server ),( AMS - CRS ) )", "choosing": "( ( RMSe / MUC ) + Max( CS,MUR ) )", "obj1": 0.4221218961625282, "obj2": 0.5491466781325279}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( AMS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - MUM ) )", "obj1": 0.510158013544018, "obj2": 0.4194586682536546}, {"determining": "( Max( FirstVNF_RAM,AMS ) + Max( Const,MRS ) )", "choosing": "Max( ( MUR / MLU ),( MLU + RCSe ) )", "obj1": 0.4604966139954853, "obj2": 0.5051705191870409}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( ARS / Const ) )", "choosing": "Min( ( MLU * MUC ) ,( MUR + RMSe ) )", "obj1": 0.4582392776523702, "obj2": 0.4885723682494277}, {"determining": "( ( ARS / FirstVNF_Mem ) + Min( DDR ,CRS ) )", "choosing": "( Max( MLU,MUR ) + ( MUM / MUR ) )", "obj1": 0.4469525959367946, "obj2": 0.5326127890203352}, {"determining": "Min( Max( RRS,BR ) ,( FirstVNF_Mem_Server - FirstVNF_RAM ) )", "choosing": "( ( MLU - MUR ) + Min( RRSe ,RMSe ) )", "obj1": 0.4288939051918736, "obj2": 0.526354239179438}, {"determining": "( Min( FirstVNF_RAM_Server ,AMS ) * ( DDR * CRS ) )", "choosing": "( ( RRSe * DS ) - Min( RMSe ,MLU ) )", "obj1": 0.42663656884875845, "obj2": 0.5330239486539782}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * ( RCSe / RCSe ) )", "obj1": 0.6704288939051919, "obj2": 0.2834839898827402}, {"determining": "Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( FirstVNF_RAM / DDR ) )", "choosing": "Min( ( RRSe - MLU ) ,( DS + MLU ) )", "obj1": 0.4040632054176072, "obj2": 0.570933660936842}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( RRS * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + MLU ) - ( MLU + RMSe ) )", "obj1": 0.3182844243792325, "obj2": 0.6302201536198722}, {"determining": "( ( MRS - Max( PN,Max( Min( FirstVNF_RAM_Server ,BR ),Max( CRS,FirstVNF_Mem ) ) ) ) / ( DDR + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "Max( ( RMSe * MUR ),Max( ( Min( RCSe ,CS ) / ( Min( MUC ,( MLU / MLU ) ) * RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( MDR,RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RRSe ),Min( MLU ,MLU ) )", "obj1": 0.3656884875846501, "obj2": 0.5596634892106223}, {"determining": "( ( PN + FirstVNF_CPU_Server ) + ( ARS - ARS ) )", "choosing": "( ( RCSe - MLU ) + Max( MUM,MUC ) )", "obj1": 0.40857787810383744, "obj2": 0.5381278882183069}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Max( ( ACS - FirstVNF_CPU ),( ACS - ARS ) )", "choosing": "( ( RMSe - RRSe ) / ( MLU + RMSe ) )", "obj1": 0.39503386004514673, "obj2": 0.5708442073106345}, {"determining": "( Max( PN,ARS ) * Max( PN,FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUR,MUC ) ,Max( MLU,MUM ) )", "obj1": 0.45372460496614, "obj2": 0.5243382503591658}, {"determining": "Max( Min( AMS ,FirstVNF_RAM ),Min( AMS ,AMS ) )", "choosing": "( Min( RRSe ,CS ) / Min( MUC ,RRSe ) )", "obj1": 0.3972911963882618, "obj2": 0.6027333195083338}, {"determining": "( ( FirstVNF_RAM / MDR ) + ( FirstVNF_Mem_Server - ACS ) )", "choosing": "Min( ( RCSe * MUR ) ,Max( DS,( RMSe + CS ) ) )", "obj1": 0.4650112866817156, "obj2": 0.5240737906440698}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,CRS ) + ( CRS * PN ) ) ,Max( ( ARS + FirstVNF_Mem ),( MDR + DDR ) ) )", "choosing": "Max( ( Max( DS,RRSe ) + Min( MLU ,MUC ) ),( ( MLU * MLU ) + ( MLU * MUC ) ) )", "obj1": 0.48081264108352145, "obj2": 0.5016739265363795}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( ( MUM - RRSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * RRS ) ,( DDR + MDR ) ) * ( ( ARS + ACS ) / ( Const + Const ) ) )", "choosing": "Min( Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) ,( ( MUR - DS ) + ( CS / RMSe ) ) )", "obj1": 0.42437923250564336, "obj2": 0.5371797402685202}, {"determining": "( Max( BR,FirstVNF_Mem ) + ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,RRS ) ) )", "choosing": "( ( ( RCSe * RMSe ) + Max( DS,RMSe ) ) * Min( ( CS / CS ) ,( MUM * MUR ) ) )", "obj1": 0.43115124153498874, "obj2": 0.5371563616327072}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,RRS ) - DDR ) / ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - CRS ) )", "choosing": "Min( ( ( CS + MLU ) - ( RRSe - MUM ) ) ,( ( MUM - MUR ) - ( RMSe + MUC ) ) )", "obj1": 0.582392776523702, "obj2": 0.3916657331591107}, {"determining": "Max( Max( MDR,CRS ),( MRS + FirstVNF_RAM ) )", "choosing": "Max( ( MLU * RMSe ),Min( ( MUC / RCSe ) ,CS ) )", "obj1": 0.3747178329571106, "obj2": 0.6050143887620242}, {"determining": "( Min( ( MRS / ARS ) ,( FirstVNF_CPU_Server * RRS ) ) * ( ( PN - AMS ) - ( Const - MRS ) ) )", "choosing": "( Max( DS,Max( MUR,DS ) ) / ( MUC / ( MLU / RMSe ) ) )", "obj1": 0.44469525959367945, "obj2": 0.5436048479975979}, {"determining": "( Min( Const ,AMS ) / ( FirstVNF_Mem / RRS ) )", "choosing": "( ( ( RRSe / MUC ) - ( MLU / RMSe ) ) / ( ( RMSe + RCSe ) + Max( MUC,MLU ) ) )", "obj1": 0.40632054176072235, "obj2": 0.5661389743012025}, {"determining": "Min( ( ( Const / RRS ) * Min( Const ,MRS ) ) ,( Max( RRS,RRS ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS * MUM ) + ( MUC - RRSe ) ),( ( DS / RMSe ) * ( RCSe * MUC ) ) )", "obj1": 0.4582392776523702, "obj2": 0.5401142706536662}, {"determining": "( ( ( RRS * ACS ) - Min( BR ,AMS ) ) * ( ( ( Max( RRS,Max( ACS,FirstVNF_CPU ) ) / ( Max( ( ( Const / FirstVNF_Mem_Server ) - Max( CRS,FirstVNF_RAM_Server ) ),FirstVNF_CPU ) / FirstVNF_Mem_Server ) ) - MDR ) - ( DDR - BR ) ) )", "choosing": "Min( ( RRSe / Min( MUC ,MUR ) ) ,( ( ( ( RRSe / ( ( ( RRSe - MUM ) - ( CS + DS ) ) + MLU ) ) * RRSe ) + MUC ) + ( DS / MUM ) ) )", "obj1": 0.9029345372460497, "obj2": 0.10743744293587709}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ARS ) * Min( ( FirstVNF_RAM + ( FirstVNF_RAM_Server + ( FirstVNF_Mem * ( BR + AMS ) ) ) ) ,FirstVNF_CPU_Server ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / ( ( CS * RMSe ) / Max( Max( ( CS - RCSe ),( MUC - ( MUM * CS ) ) ),CS ) ) )", "obj1": 0.6952595936794582, "obj2": 0.24903089243364052}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( MLU ,MUR ),( RMSe * RCSe ) ) * Max( ( MUC - ( MLU + Max( ( ( RRSe / ( RCSe + RMSe ) ) / MUR ),( MUR / MUC ) ) ) ),( MUM + MUC ) ) )", "obj1": 0.6478555304740407, "obj2": 0.32934998184020875}, {"determining": "( Max( ( FirstVNF_RAM_Server * ACS ),Min( AMS ,FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server - RRS ) ,Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) + Max( RCSe,DS ) ) * ( Min( RRSe ,RMSe ) / ( RCSe + RCSe ) ) )", "obj1": 0.5417607223476298, "obj2": 0.4274392731071995}, {"determining": "Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * ( FirstVNF_CPU * FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( RCSe * DS ) ,( RCSe / MUC ) ) * ( ( RCSe - MUM ) / CS ) )", "obj1": 0.5778781038374717, "obj2": 0.3836668514655997}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + Min( ( FirstVNF_RAM_Server + Min( Max( ( CRS * PN ),FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / ( RMSe * MLU ) ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "Max( Max( Const,( MDR / Const ) ),Max( ARS,( ACS * FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC + MUM ) + ( CS + MUM ) ) / Min( ( CS - MUR ) ,( MUC / MUR ) ) )", "obj1": 0.42437923250564336, "obj2": 0.5197874780524927}, {"determining": "Max( Max( BR,AMS ),Min( ( RRS - FirstVNF_RAM ) ,( MDR + PN ) ) )", "choosing": "( ( ( RRSe / RRSe ) - MUC ) / ( ( DS + MUR ) * ( MUR - RMSe ) ) )", "obj1": 0.4153498871331828, "obj2": 0.5430878023083054}, {"determining": "( Min( ( FirstVNF_CPU - RRS ) ,Min( DDR ,Const ) ) - ( ( AMS - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Max( ( MUR + MLU ),Max( MUM,CS ) ) - ( ( RCSe - RCSe ) / ( MUM + CS ) ) )", "obj1": 0.44469525959367945, "obj2": 0.5210385452217533}, {"determining": "( Max( ACS,Const ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / Max( BR,FirstVNF_CPU ) ) ,( ( CRS + PN ) * BR ) )", "choosing": "( ( RCSe - CS ) + ( MUR + RCSe ) )", "obj1": 0.3002257336343115, "obj2": 0.6824994910341768}, {"determining": "( Max( Min( FirstVNF_CPU ,PN ),Min( MRS ,BR ) ) * Max( ( MRS * ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUR - RMSe ) ,( RRSe * MLU ) ) ,( ( MUR * MUC ) + ( MUM / DS ) ) )", "obj1": 0.3927765237020316, "obj2": 0.5731368986544023}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - ( FirstVNF_CPU / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUC,RMSe ) * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "Max( ( MDR + BR ),( AMS / FirstVNF_RAM ) )", "choosing": "( ( Max( DS,RRSe ) / ( MUC - MLU ) ) - ( Max( DS,RMSe ) * Min( RRSe ,RMSe ) ) )", "obj1": 0.43792325056433407, "obj2": 0.5215646742641231}, {"determining": "( Min( Min( ARS ,MDR ) ,( CRS + Const ) ) * Max( ( FirstVNF_CPU_Server / FirstVNF_CPU ),( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RRSe ,MUM ) - Min( RMSe ,RRSe ) ) - ( ( MUC / MLU ) / ( MUR / MUM ) ) )", "obj1": 0.4153498871331828, "obj2": 0.5803106513184569}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( ( PN - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( MRS + AMS ) ) )", "choosing": "Max( ( ( RCSe - MUC ) - ( RMSe + CS ) ),( Min( RRSe ,( ( RRSe + ( MUM - ( ( RRSe - RCSe ) - ( DS * MUR ) ) ) ) + MLU ) ) + ( RRSe - DS ) ) )", "obj1": 0.3476297968397291, "obj2": 0.5977738280038474}, {"determining": "Min( ( FirstVNF_RAM - ARS ) ,Max( FirstVNF_CPU,CRS ) )", "choosing": "Max( ( MUM - DS ),( ( MUC * MUR ) + ( CS / ( MUR / ( ( RMSe / RMSe ) * Max( MUM,MUC ) ) ) ) ) )", "obj1": 0.417607223476298, "obj2": 0.5261770143279761}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,BR ) / Min( BR ,Const ) )", "choosing": "( ( ( MUC - RCSe ) * ( DS / RRSe ) ) * Max( MUR,( MUR + MLU ) ) )", "obj1": 0.38148984198645597, "obj2": 0.5968380624320966}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Max( DDR,FirstVNF_RAM ) ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( ( DS / MUC ) + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "Max( ( FirstVNF_RAM * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ),( MRS / Max( MDR,CRS ) ) )", "choosing": "Min( ( ( RRSe / DS ) * Min( CS ,MLU ) ) ,Min( Max( RRSe,MUR ) ,( RCSe / RCSe ) ) )", "obj1": 0.4582392776523702, "obj2": 0.496689447127742}, {"determining": "Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) )", "obj1": 0.9300225733634312, "obj2": 0.05254383215797778}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( CRS ,( CRS / FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS + PN ),Max( CRS,FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),( MUM * MUR ) ) / ( ( MUC + ( ( MUR + RRSe ) - ( MUR - Max( Max( MUC,MLU ),Max( RCSe,RMSe ) ) ) ) ) / ( RRSe - MUM ) ) ) * Max( ( Max( DS,RCSe ) * ( MUM + MUM ) ),Min( Max( RCSe,RCSe ) ,( MUC * MUR ) ) ) )", "obj1": 0.4221218961625282, "obj2": 0.5505173122729242}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( ( MDR - FirstVNF_Mem_Server ) / Max( DDR,MDR ) ) )", "choosing": "( ( CS * CS ) - ( MLU + MLU ) )", "obj1": 0.34988713318284426, "obj2": 0.6044975987921564}, {"determining": "( ( RRS * ( Const / FirstVNF_CPU_Server ) ) + Min( DDR ,( BR * ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) / ARS ) ) ) )", "choosing": "( Max( ( MLU - ( MUM - DS ) ),Min( MUR ,Max( ( DS / MLU ),CS ) ) ) * ( MUM - Min( RMSe ,( RMSe * ( ( Min( DS ,RRSe ) - MLU ) * MUR ) ) ) ) )", "obj1": 0.32054176072234764, "obj2": 0.6418227675882374}, {"determining": "Max( Min( FirstVNF_CPU ,FirstVNF_Mem ),( Max( ( FirstVNF_CPU + MDR ),Const ) + DDR ) )", "choosing": "( ( MLU - ( Max( RCSe,MLU ) / Max( ( MUC / ( DS / ( MUC + ( DS + RCSe ) ) ) ),( RRSe * ( RRSe - DS ) ) ) ) ) * ( ( MUR - DS ) * MUM ) )", "obj1": 0.37697516930022573, "obj2": 0.6098934413070106}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) - FirstVNF_Mem_Server ) - Max( ( ( DDR / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ),( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * Max( RCSe,Max( MUC,CS ) ) ) )", "obj1": 0.4672686230248307, "obj2": 0.48495873367723685}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem - AMS ) ),Max( FirstVNF_CPU_Server,Min( DDR ,DDR ) ) )", "choosing": "Max( ( Min( ( MUM - MUC ) ,( RMSe * MUC ) ) / Max( Max( RCSe,RRSe ),( MUR - RRSe ) ) ),( ( ( DS - MUR ) - ( CS + MUR ) ) - Max( ( RCSe - RMSe ),( RRSe - DS ) ) ) )", "obj1": 0.43340857787810383, "obj2": 0.5260476143684873}, {"determining": "( ( ( Max( BR,MRS ) + ( ( ( FirstVNF_CPU_Server + CRS ) * FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( DS * RCSe ) ) ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.3860045146726862, "obj2": 0.5718405389805519}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_Mem / MRS ) ) * Max( ( ( ( ( ARS + FirstVNF_Mem_Server ) + Min( ( DDR * PN ) ,FirstVNF_Mem ) ) + ( FirstVNF_RAM * ( FirstVNF_RAM * Const ) ) ) / DDR ),( PN + ARS ) ) )", "choosing": "( ( MLU - MLU ) - ( MLU * ( MLU * MUM ) ) )", "obj1": 0.4153498871331828, "obj2": 0.5432888047274433}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( ( BR / ACS ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 0.36343115124153497, "obj2": 0.5870897571567275}, {"determining": "( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( Min( CRS ,( ( BR * FirstVNF_CPU_Server ) / ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) * ( MUR - MLU ) ) + ( ( MUC * RRSe ) + Min( CS ,( MUM + RMSe ) ) ) ) * ( Max( ( MUR / DS ),( MUR / CS ) ) - ( ( DS - MUC ) * ( MLU * RMSe ) ) ) )", "obj1": 0.9322799097065463, "obj2": 0.06260113985985383}, {"determining": "( Max( ( PN - BR ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,MUC ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 0.45372460496614, "obj2": 0.4874778548118059}, {"determining": "Max( ( ( Const / MDR ) + RRS ),Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Min( RRSe ,RCSe ) ,( Max( MUR,CS ) - ( RCSe * MUM ) ) ) ,( ( DS - ( MUC + RRSe ) ) / Min( CS ,CS ) ) )", "obj1": 0.3860045146726862, "obj2": 0.620936582494573}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + Min( FirstVNF_RAM ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUR * RCSe ) - Max( MUM,RCSe ) ) * RMSe ) + ( RCSe / ( Max( CS,MUM ) + Max( MLU,DS ) ) ) )", "obj1": 0.3905191873589165, "obj2": 0.5642338475295439}, {"determining": "Min( Min( ( ( DDR * MDR ) - ( FirstVNF_RAM - DDR ) ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) ,( Min( ( MRS * MRS ) ,Max( MDR,FirstVNF_CPU ) ) + ( ( DDR - FirstVNF_CPU_Server ) + ( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( DS - MUC ) + ( MUM + MLU ) ) - ( RCSe / ( MLU / MUC ) ) ) - ( MUR + Max( RMSe,( MUC * DS ) ) ) )", "obj1": 0.7765237020316027, "obj2": 0.22513762805098458}, {"determining": "( ( Max( ( ACS - FirstVNF_CPU ),Max( PN,Const ) ) + ( Max( BR,MRS ) * ( Const * DDR ) ) ) + Max( ( ( DDR * RRS ) - Min( DDR ,ARS ) ),( Min( ARS ,Const ) + Max( DDR,AMS ) ) ) )", "choosing": "Min( Min( RMSe ,( RRSe * ( RCSe / CS ) ) ) ,( RMSe * MUR ) )", "obj1": 0.4672686230248307, "obj2": 0.4976614095824901}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( MUC ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.3837471783295711, "obj2": 0.5115931502792346}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / BR ) * ( BR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC - ( CS - MUC ) ) ,Min( MUM ,MLU ) )", "obj1": 0.43792325056433407, "obj2": 0.5105541343037163}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ARS ) + ( CRS / Const ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) - ( ( Max( AMS,FirstVNF_CPU_Server ) / DDR ) + MDR ) ) ) ,Min( ( ARS / DDR ) ,AMS ) )", "choosing": "( ( CS + Min( MUR ,RCSe ) ) - ( ( Max( Min( MUC ,MLU ),RRSe ) - Min( MLU ,MLU ) ) / ( ( RMSe + RRSe ) - Max( MUC,DS ) ) ) )", "obj1": 0.36343115124153497, "obj2": 0.6002067587892952}, {"determining": "( ( ( ( ARS / AMS ) * Max( ACS,MDR ) ) + Min( Max( FirstVNF_RAM_Server,PN ) ,Min( DDR ,Const ) ) ) * ( ( Min( MDR ,AMS ) * ( MDR + DDR ) ) * ( Min( FirstVNF_RAM ,ARS ) / ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RRSe + RRSe ) * ( RMSe / MUM ) ) ,Min( ( DS - MUM ) ,( RRSe + RMSe ) ) ) / ( Max( ( MLU + RMSe ),( DS + RCSe ) ) / Max( ( MUC - DS ),Min( RCSe ,MLU ) ) ) )", "obj1": 0.5033860045146726, "obj2": 0.46643850912622276}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - RRS ) + ( AMS * ARS ) )", "choosing": "( ( Min( RMSe ,MLU ) * Min( CS ,( MUM / RMSe ) ) ) / Max( RCSe,( DS * RMSe ) ) )", "obj1": 0.42663656884875845, "obj2": 0.6020536798608319}, {"determining": "( Max( AMS,PN ) - Min( PN ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( CS / RMSe ) + Max( DS,RMSe ) ) + ( ( MUR + RMSe ) / Max( MUC,MLU ) ) ) - ( ( ( CS + MUM ) / ( MUC + MUR ) ) / ( ( CS + RRSe ) / Min( RCSe ,RRSe ) ) ) )", "obj1": 0.42437923250564336, "obj2": 0.5695793381401296}, {"determining": "( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + ( Min( AMS ,FirstVNF_RAM_Server ) * ( AMS - ARS ) ) ) * ( ( Max( BR,ACS ) * Max( FirstVNF_Mem,FirstVNF_Mem ) ) + ( ( BR / Const ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( MUR / RCSe ) + MUR ) ,Max( Max( Min( RRSe ,CS ),Max( MUM,MLU ) ),Min( ( MUM / RRSe ) ,CS ) ) )", "obj1": 0.4762979683972912, "obj2": 0.4722253136769272}, {"determining": "( ( ( Max( FirstVNF_RAM,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( Max( MUC,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) )", "obj1": 0.909706546275395, "obj2": 0.09844036728203254}, {"determining": "Max( Max( BR,Max( MDR,FirstVNF_Mem ) ),( DDR + FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( MLU / ( MUR / RRSe ) ),( ( RCSe * RCSe ) + ( RCSe - CS ) ) ) ,( Max( MUC,RMSe ) * MLU ) )", "obj1": 0.48081264108352145, "obj2": 0.48502426087826284}, {"determining": "( Max( ARS,MRS ) * ( MRS + FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( DDR + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.5237020316027088, "obj2": 0.4168398688200789}, {"determining": "( ( Max( ( MRS / FirstVNF_RAM_Server ),( AMS * AMS ) ) * Max( ( FirstVNF_RAM_Server - AMS ),Max( MDR,RRS ) ) ) * Max( ( ( FirstVNF_RAM + ARS ) + ( Const + PN ) ),( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / ( MRS - AMS ) ) ) )", "choosing": "( ( ( Max( RRSe,RCSe ) * ( RMSe * RMSe ) ) + ( ( MUM * MUC ) - ( RMSe * CS ) ) ) / ( ( ( MUC - DS ) - Max( RMSe,DS ) ) - ( ( DS + MLU ) / ( MLU - RRSe ) ) ) )", "obj1": 0.36794582392776526, "obj2": 0.6101441054892549}], "2": [{"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( Max( RCSe,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( PN - AMS ) ) - ( RRS + Const ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( MUM - ( ( ( DS + ( MLU - MUC ) ) * Max( Min( MUC ,MUR ),( DS - DS ) ) ) + RRSe ) ) / ( ( MUM / ( ( MUC - Min( CS ,MUR ) ) * ( ( RCSe - MUR ) / Min( MUR ,MUR ) ) ) ) + ( ( ( ( RCSe - MUR ) - ( MUC * MUR ) ) / RMSe ) / DS ) ) ) / DS ) )", "obj1": 0.24153498871331827, "obj2": 0.6404094214822845}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,Min( ( DDR + ARS ) ,Min( RRS ,DDR ) ) ) )", "choosing": "Min( ( RMSe * MUR ) ,( MLU / DS ) )", "obj1": 0.7765237020316027, "obj2": 0.19228020597525955}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( ( DDR / BR ) * ( BR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RMSe - Min( ( MUC - ( CS - MUC ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.8690744920993227, "obj2": 0.13754589496578565}, {"determining": "( ( Max( FirstVNF_CPU_Server,Max( PN,Const ) ) + ( Max( BR,MRS ) * ( Const * DDR ) ) ) + Max( ( ( DDR * RRS ) - Min( DDR ,ARS ) ),( Min( ARS ,Const ) + Max( DDR,AMS ) ) ) )", "choosing": "Min( Min( RMSe ,( RRSe * ( DS / CS ) ) ) ,( RMSe * MUR ) )", "obj1": 0.5620767494356659, "obj2": 0.3576160233739684}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( RRS * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + MLU ) - ( MLU + RMSe ) )", "obj1": 0.3182844243792325, "obj2": 0.6302201536198722}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ARS ) * Min( ( FirstVNF_RAM + ( FirstVNF_RAM_Server + ( FirstVNF_Mem * ( BR + AMS ) ) ) ) ,FirstVNF_CPU_Server ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / ( ( CS * RMSe ) / Max( Max( ( CS - RCSe ),( MUC - ( MUM * CS ) ) ),CS ) ) )", "obj1": 0.6952595936794582, "obj2": 0.24903089243364052}, {"determining": "( PN / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RRSe ) ,( Max( MUM,MUC ) - CS ) )", "obj1": 0.6433408577878104, "obj2": 0.279510856432863}, {"determining": "Max( Max( MDR,RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RRSe ),Min( MLU ,MLU ) )", "obj1": 0.3656884875846501, "obj2": 0.5596634892106223}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - ( FirstVNF_CPU / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUC,RMSe ) * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - ( FirstVNF_CPU / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUC,RMSe ) * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9051918735891648, "obj2": 0.05360164125174252}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( DDR + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.5237020316027088, "obj2": 0.4168398688200789}, {"determining": "( ( ( RRS * ACS ) - Min( BR ,AMS ) ) / ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( Min( MLU ,MUR ),( RMSe * RCSe ) ) * Min( MUC ,MUR ) )", "obj1": 0.6884875846501128, "obj2": 0.25811794271463673}, {"determining": "( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( DS - MLU ) ,Max( RRSe,CS ) )", "obj1": 0.9548532731376975, "obj2": 0.03547563895977168}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.4582392776523702, "obj2": 0.45757195034361875}, {"determining": "( ( Min( ( ( Const / RRS ) * Min( Const ,MRS ) ) ,( Max( RRS,RRS ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / Max( ( MUC * Max( ( ( CS * MUM ) + ( MUC - RRSe ) ),( ( DS / RMSe ) * ( RCSe * MUC ) ) ) ),RMSe ) )", "obj1": 0.6072234762979684, "obj2": 0.3408912943597416}, {"determining": "( ( ( ( Max( FirstVNF_RAM,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) ) * ( MRS + FirstVNF_CPU ) )", "choosing": "( ( RRSe + MUM ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.8984198645598194, "obj2": 0.10485018873373557}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( Max( ( PN - BR ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,MUC ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 0.45372460496614, "obj2": 0.4874778548118059}, {"determining": "( ( FirstVNF_CPU_Server * ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) ) * ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( CS - RRSe ) ,Max( MUC,CS ) )", "obj1": 0.9006772009029346, "obj2": 0.10444203741073901}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,Max( MUM,MUR ) )", "obj1": 0.5259593679458239, "obj2": 0.42459727405707715}, {"determining": "( ( AMS * DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( MLU - Min( ( RMSe * MUR ) ,Min( DS ,MLU ) ) ) )", "obj1": 0.9796839729119639, "obj2": 0.014465558268548059}, {"determining": "( Max( ( FirstVNF_RAM_Server * ACS ),Min( AMS ,FirstVNF_RAM ) ) - Min( ( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_RAM ) ) ,Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) + Max( RCSe,DS ) ) * Min( ( RCSe * DS ) ,( RCSe / MUC ) ) )", "obj1": 0.6275395033860045, "obj2": 0.32188811299878956}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( AMS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - MUM ) )", "obj1": 0.510158013544018, "obj2": 0.4194586682536546}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * FirstVNF_CPU_Server )", "choosing": "( ( ( RMSe + MUC ) / MUC ) * ( RCSe / RCSe ) )", "obj1": 0.3431151241534989, "obj2": 0.5807434568809015}, {"determining": "( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + ( Min( AMS ,FirstVNF_RAM_Server ) * ( AMS - ARS ) ) ) * ( ( Max( BR,ACS ) * Max( FirstVNF_Mem,FirstVNF_Mem ) ) + ( ( ( ( Max( FirstVNF_RAM,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( MUR / RCSe ) + MUR ) ,Max( Max( Min( RRSe ,CS ),Max( MUM,MLU ) ),Min( ( ( RMSe + CS ) / RRSe ) ,CS ) ) )", "obj1": 0.6410835214446953, "obj2": 0.30677764227867366}, {"determining": "Max( ( FirstVNF_RAM_Server / ( FirstVNF_Mem - ( ( DDR / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ) ) ),Max( FirstVNF_CPU_Server,Min( DDR ,DDR ) ) )", "choosing": "Max( ( Min( ( MUM - MUC ) ,( RMSe * MUC ) ) / Max( Max( RCSe,RRSe ),Max( RCSe,Max( MUC,CS ) ) ) ),( ( ( DS - MUR ) - ( CS + MUR ) ) - Max( ( RCSe - RMSe ),( RRSe - DS ) ) ) )", "obj1": 0.3860045146726862, "obj2": 0.5315154731207075}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + Min( ( FirstVNF_RAM_Server + Min( Max( ( CRS * PN ),FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / ( RMSe * MLU ) ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( Const * ARS ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) * ( MUR - MLU ) ) + ( ( MUC * RRSe ) + ( ( MUR / RCSe ) + ( MUC - MUM ) ) ) ) * ( Max( ( MUR / DS ),( MUR / CS ) ) - ( ( DS - MUC ) * ( MLU * RMSe ) ) ) )", "obj1": 0.9367945823927766, "obj2": 0.04849092092313016}, {"determining": "( ( ( Max( BR,MRS ) + ( ( ( FirstVNF_CPU_Server + CRS ) * FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( DS * RCSe ) ) ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.6094808126410836, "obj2": 0.33779796040089133}, {"determining": "Max( RRS,Max( ARS,( ACS * FirstVNF_Mem ) ) )", "choosing": "( ( RCSe + ( CS + MUM ) ) / Min( ( CS - MUR ) ,( MUC / MUR ) ) )", "obj1": 0.40857787810383744, "obj2": 0.5234301733330852}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( Min( ARS ,Const ) + Max( DDR,AMS ) ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( Min( RMSe ,( RRSe * ( RCSe / CS ) ) ) - Min( MUC ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.43792325056433407, "obj2": 0.49915769199095344}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * MUR ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_CPU * FirstVNF_RAM ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( Min( ( RCSe * DS ) ,( RCSe / MUC ) ) * ( ( RCSe - MUM ) / CS ) ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3927765237020316, "obj2": 0.5286956228014614}, {"determining": "Max( Max( Const,( MDR / Const ) ),Max( ARS,( ACS * FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC + MUM ) + ( CS + MUM ) ) / Min( ( CS - MUR ) ,( MUC / MUR ) ) )", "obj1": 0.42437923250564336, "obj2": 0.5197874780524927}, {"determining": "( Min( ( FirstVNF_CPU_Server - MDR ) ,AMS ) / ( FirstVNF_Mem / RRS ) )", "choosing": "( DS / ( ( RMSe + RCSe ) + Max( MUC,MLU ) ) )", "obj1": 0.6343115124153499, "obj2": 0.3114835339643464}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Max( DDR,FirstVNF_RAM ) ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( ( DS / MUC ) + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) )", "obj1": 0.9300225733634312, "obj2": 0.05254383215797778}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "Max( ACS,Max( ARS,( ACS * FirstVNF_Mem ) ) )", "choosing": "( ( Max( MLU,MUR ) + ( CS + MUM ) ) / Min( ( CS - MUR ) ,( MUC / MUR ) ) )", "obj1": 0.43340857787810383, "obj2": 0.5009641563372055}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( MUC ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.3837471783295711, "obj2": 0.5115931502792346}, {"determining": "Min( ( PN / BR ) ,( Min( ( FirstVNF_Mem_Server * AMS ) ,Max( ACS,RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / DS ) / ( CS - RMSe ) )", "obj1": 0.42663656884875845, "obj2": 0.5229610295307145}, {"determining": "Min( ARS ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( RCSe - DS ) / Max( RRSe,MLU ) ),( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) )", "obj1": 0.9300225733634312, "obj2": 0.05254383215797778}, {"determining": "( Max( MRS,CRS ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( AMS,Max( BR,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server + ( ( ARS / ACS ) * RRS ) ) ,DDR ) ) - DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( ( RRSe + DS ) - Max( MLU,RRSe ) ) * Min( ( Max( RCSe,( RCSe * RMSe ) ) * MUR ) ,Max( MLU,( Max( RRSe,( MLU + MUC ) ) - ( CS - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( FirstVNF_Mem_Server - ( DDR / ( AMS + ( Min( ( FirstVNF_RAM_Server + MDR ) ,Const ) / Const ) ) ) ) )", "choosing": "Max( ( MUC + RCSe ),( MUC * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( PN,Max( Min( FirstVNF_RAM_Server ,BR ),Max( CRS,FirstVNF_Mem ) ) ) ) / ( DDR + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "Max( ( RMSe * MUR ),Max( ( Min( RCSe ,CS ) / ( Min( MUC ,( MLU / MLU ) ) * RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( ( MUM - RRSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,CRS ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( ( Min( MUM ,MUR ) * RCSe ) * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( AMS * FirstVNF_Mem ) ) ,( PN + MRS ) ) - Max( BR,( BR + FirstVNF_RAM ) ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( Min( RRSe ,Min( ( Min( MUC ,Max( MUM,Max( DS,CS ) ) ) * ( ( ( MLU * MLU ) / RMSe ) - RRSe ) ) ,( DS / RCSe ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * MUR ) ,Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( FirstVNF_RAM / DDR ) ) )", "choosing": "Max( Min( ( RRSe - MLU ) ,( DS + MLU ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( PN,Max( Min( FirstVNF_RAM_Server ,BR ),Max( CRS,FirstVNF_Mem ) ) ) ) / ( DDR + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "Max( ( RMSe * MUR ),Max( ( Min( RCSe ,CS ) / ( Min( MUC ,( MLU / MLU ) ) * RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + ( FirstVNF_Mem_Server - ACS ) ) ) ,( ( ACS / ARS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RMSe ) * ( MUR + CS ) ),( ( MUM - RRSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) ) ,( DDR + MDR ) ) * ( ( ARS + ACS ) / ( Const + Const ) ) )", "choosing": "Min( Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) ,( ( MUM + MLU ) + ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( Const + Const ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RRSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,RRS ) ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( ( RCSe * RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( MDR ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( MUC / RCSe ) ,CS ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - AMS ) - ( Const - MRS ) ) / ( FirstVNF_Mem / RRS ) )", "choosing": "( ( ( RRSe / MUC ) - ( MLU / RMSe ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - AMS ) - ( Const - MRS ) ) * Min( Const ,MRS ) ) ,( Max( RRS,RRS ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS * MUM ) + ( MUC - RRSe ) ),( ( DS / RMSe ) * ( RCSe * Max( MUR,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * ( RRS - FirstVNF_RAM ) )", "choosing": "( RRSe - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + ( CS / DS ) ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( ( ( MRS * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( MRS + AMS ) ) ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( Max( ( MUM - DS ),Max( RRSe,RCSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,Const ) * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( ( MUC - RCSe ) * ( DS / RRSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe + MUM ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,( Max( ( ARS + PN ),Max( CRS,FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,( Max( ( ARS + PN ),Max( CRS,FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ) ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),( MUM * MUR ) ) / ( ( DS * MUM ) / ( RRSe - ( ( RCSe - DS ) / Max( RRSe,MLU ) ) ) ) ) * Max( ( Max( DS,RCSe ) * ( MUM + MUM ) ),Min( Max( RCSe,RCSe ) ,( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( DDR / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( MUM * Max( RCSe,Max( MUC,CS ) ) ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( ( BR / ACS ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) ) )", "choosing": "Min( ( DS - MUC ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( ( BR / ACS ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - ( Min( FirstVNF_CPU_Server ,MDR ) + Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( ( MUR * RCSe ) * ( Max( Min( RMSe ,MUC ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + BR ) / MDR ) )", "choosing": "( ( MLU - ( MUR - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ) / BR ) * ( BR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC - Min( RMSe ,MUR ) ) ,Min( MUM ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * RCSe ) ) )", "obj1": 0.9300225733634312, "obj2": 0.05254383215797778}], "3": [{"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( PN - AMS ) ) - ( RRS + Const ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( MUM - ( ( ( DS + ( MLU - MUC ) ) * Max( Min( MUC ,MUR ),( DS - DS ) ) ) + RRSe ) ) / ( ( MUM / ( ( MUC - Min( CS ,MUR ) ) * ( ( RCSe - MUR ) / Min( MUR ,MUR ) ) ) ) + ( ( ( ( RCSe - MUR ) - ( MUC * MUR ) ) / RMSe ) / DS ) ) ) / DS ) )", "obj1": 0.24153498871331827, "obj2": 0.6404094214822845}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( Max( Const,FirstVNF_Mem_Server ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( ( CS * MUM ) + ( MUC - RRSe ) ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( Max( RCSe,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Max( ARS,( ACS * FirstVNF_Mem ) ) ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),PN ) )", "choosing": "Max( Max( ( RCSe + ( CS + MUM ) ),( MUR * MLU ) ),( ( MLU + RRSe ) / DS ) )", "obj1": 0.24153498871331827, "obj2": 0.6404094214822845}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,Min( ( DDR + ARS ) ,Min( RRS ,DDR ) ) ) )", "choosing": "Min( ( RMSe * MUR ) ,( MLU / DS ) )", "obj1": 0.7765237020316027, "obj2": 0.19228020597525955}, {"determining": "( ( Max( FirstVNF_CPU_Server,Max( PN,Const ) ) + ( Max( BR,MRS ) * ( Const * DDR ) ) ) + Max( ( ( DDR * RRS ) - Min( DDR ,ARS ) ),( Min( ARS ,Const ) + Max( DDR,AMS ) ) ) )", "choosing": "Min( Min( RMSe ,( RRSe * ( DS / CS ) ) ) ,( RMSe * MUR ) )", "obj1": 0.5620767494356659, "obj2": 0.3576160233739684}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( RRS * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + MLU ) - ( MLU + RMSe ) )", "obj1": 0.3182844243792325, "obj2": 0.6302201536198722}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( AMS / ( ( AMS * DDR ) - Max( FirstVNF_CPU,Min( ( DDR + ARS ) ,Min( RRS ,DDR ) ) ) ) ) )", "choosing": "Min( MUR ,( DS - MUM ) )", "obj1": 0.8194130925507901, "obj2": 0.16201560229934914}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / ( ( DDR / BR ) * ( BR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RMSe - Min( ( MUC - ( CS - MUC ) ) ,Min( MUM ,MLU ) ) ) )", "obj1": 0.8690744920993227, "obj2": 0.13754589496578565}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - ( FirstVNF_CPU / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUC,RMSe ) * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9051918735891648, "obj2": 0.05360164125174252}, {"determining": "( PN / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RRSe ) ,( Max( MUM,MUC ) - CS ) )", "obj1": 0.6433408577878104, "obj2": 0.279510856432863}, {"determining": "( ( Min( ( ( Const / RRS ) * Min( Const ,MRS ) ) ,( Max( RRS,RRS ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / Max( ( MUC * Max( ( ( CS * MUM ) + ( MUC - RRSe ) ),( ( DS / RMSe ) * ( RCSe * MUC ) ) ) ),RMSe ) )", "obj1": 0.6072234762979684, "obj2": 0.3408912943597416}, {"determining": "( ( ( Max( BR,MRS ) + ( ( ( ( Const - MRS ) + CRS ) * FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( Max( DS,Max( MUR,MUC ) ) / ( MUC / ( MLU / RMSe ) ) ) * RCSe ) ) ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.54627539503386, "obj2": 0.4090592665351672}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - ( FirstVNF_CPU / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUC,RMSe ) * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - ( MLU + Max( ( MUR * CS ),RMSe ) ) ) - Min( MUC ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.9164785553047404, "obj2": 0.028455890606430737}, {"determining": "( ( ( RRS * ACS ) - Min( BR ,AMS ) ) / ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( Min( MLU ,MUR ),( RMSe * RCSe ) ) * Min( MUC ,MUR ) )", "obj1": 0.6884875846501128, "obj2": 0.25811794271463673}, {"determining": "( ( FirstVNF_RAM / ( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * DS )", "obj1": 0.7291196388261851, "obj2": 0.22611156158264603}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( ( FirstVNF_RAM + CRS ) * ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( DS - MLU ) ,( DS - CS ) )", "obj1": 0.963882618510158, "obj2": 0.026968141577658023}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.4582392776523702, "obj2": 0.45757195034361875}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - ( ( MDR * MRS ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( ( MUM * RCSe ) * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 0.8893905191873589, "obj2": 0.1135241937016561}, {"determining": "( ( FirstVNF_CPU_Server * ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) ) * ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( CS - RRSe ) ,Max( MUC,CS ) )", "obj1": 0.9006772009029346, "obj2": 0.10444203741073901}, {"determining": "( ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_RAM - AMS ) ) + CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - DS ) ,( DS - CS ) )", "obj1": 0.6094808126410836, "obj2": 0.3171641065206668}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + ( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RCSe ,DS ) / Max( MLU,RMSe ) )", "obj1": 0.7155756207674944, "obj2": 0.2464256188054546}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3431151241534989, "obj2": 0.5753739430168371}, {"determining": "Max( Max( MDR,RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RRSe ),Min( MLU ,MLU ) )", "obj1": 0.3656884875846501, "obj2": 0.5596634892106223}, {"determining": "( Max( ( PN - BR ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,MUC ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 0.45372460496614, "obj2": 0.4874778548118059}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( MUC ,RCSe ) ) ,( RMSe * RCSe ) ) + ( RMSe - CS ) )", "obj1": 0.40632054176072235, "obj2": 0.5009520680215185}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( AMS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - MUM ) )", "obj1": 0.510158013544018, "obj2": 0.4194586682536546}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),Max( MDR,FirstVNF_RAM ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "Max( ( MDR / ARS ),Min( FirstVNF_CPU_Server ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU + RMSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( Max( RCSe,MUC ) / MUM ) ) )", "obj1": 0.3724604966139955, "obj2": 0.5503143321201488}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( Min( ARS ,Const ) + Max( DDR,AMS ) ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( Min( RMSe ,( RRSe * ( RCSe / CS ) ) ) - Min( MUC ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.43792325056433407, "obj2": 0.49915769199095344}, {"determining": "( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + ( Min( AMS ,FirstVNF_RAM_Server ) * ( AMS - ARS ) ) ) * ( ( Max( BR,ACS ) * Max( FirstVNF_Mem,FirstVNF_Mem ) ) + ( ( ( ( Max( FirstVNF_RAM,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( MUR / RCSe ) + MUR ) ,Max( Max( Min( RRSe ,CS ),Max( MUM,MLU ) ),Min( ( ( RMSe + CS ) / RRSe ) ,CS ) ) )", "obj1": 0.6410835214446953, "obj2": 0.30677764227867366}, {"determining": "( Min( ( FirstVNF_CPU_Server - MDR ) ,AMS ) / ( FirstVNF_Mem / RRS ) )", "choosing": "( DS / ( ( RMSe + RCSe ) + Max( MUC,MLU ) ) )", "obj1": 0.6343115124153499, "obj2": 0.3114835339643464}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - ( FirstVNF_CPU_Server * ( FirstVNF_CPU * FirstVNF_RAM ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( Min( ( RCSe * DS ) ,( RCSe / MUC ) ) * ( ( RCSe - MUM ) / CS ) ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3927765237020316, "obj2": 0.5286956228014614}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + Min( ( FirstVNF_RAM_Server + Min( Max( ( CRS * PN ),FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / ( RMSe * MLU ) ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ARS ) * Min( ( FirstVNF_RAM + ( FirstVNF_RAM_Server + ( FirstVNF_Mem * ( BR + AMS ) ) ) ) ,FirstVNF_CPU_Server ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / ( ( CS * RMSe ) / Max( Max( ( CS - RCSe ),( MUC - ( MUM * CS ) ) ),CS ) ) )", "obj1": 0.6952595936794582, "obj2": 0.24903089243364052}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,Max( MUM,MUR ) )", "obj1": 0.5259593679458239, "obj2": 0.42459727405707715}, {"determining": "( ( AMS * DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( MLU - Min( ( RMSe * MUR ) ,Min( DS ,MLU ) ) ) )", "obj1": 0.9796839729119639, "obj2": 0.014465558268548059}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,Max( Const,( MDR / Const ) ) ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),Min( ( CS - MUR ) ,( MUC / MUR ) ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.37697516930022573, "obj2": 0.529020348081487}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( MUC ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.3837471783295711, "obj2": 0.5115931502792346}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * MUR ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "Min( ( PN / BR ) ,( Min( ( RRS - AMS ) ,Max( ACS,RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / DS ) / ( ( ( MLU - Min( ( MUR + Max( Min( MUC ,RRSe ),RMSe ) ) ,MLU ) ) + ( Min( ( RRSe / MUM ) ,DS ) / MUR ) ) - ( ( DS / DS ) / ( CS - RMSe ) ) ) )", "obj1": 0.44243792325056436, "obj2": 0.49183375752563124}, {"determining": "( ( ( Max( Max( AMS,Max( BR,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server + ( ( ARS / ACS ) * RRS ) ) ,DDR ) ) - DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( ( RRSe + DS ) - Max( MLU,RRSe ) ) * Min( ( Max( RCSe,( RCSe * RMSe ) ) * MUR ) ,Max( MLU,( Max( RRSe,( MLU + MUC ) ) - ( CS - RRSe ) ) ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0010921176513893009}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( DDR + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.5237020316027088, "obj2": 0.4168398688200789}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( ( ( Max( FirstVNF_RAM,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) ) * ( MRS + FirstVNF_CPU ) )", "choosing": "( ( RRSe + MUM ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.8984198645598194, "obj2": 0.10485018873373557}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Max( DDR,FirstVNF_RAM ) ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( ( DS / MUC ) + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "( Min( AMS ,BR ) + FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUR ) + Min( Min( MUR ,DS ) ,RCSe ) )", "obj1": 0.5372460496613995, "obj2": 0.4134977541082568}, {"determining": "( Min( AMS ,BR ) + FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUR ) + Min( Min( MUR ,DS ) ,RCSe ) )", "obj1": 0.5372460496613995, "obj2": 0.4134977541082568}, {"determining": "( ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) ) * ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( Min( ( CS - RRSe ) ,Max( MUC,CS ) ) - MLU ) ,Max( RRSe,CS ) )", "obj1": 0.9006772009029346, "obj2": 0.10444203741073901}, {"determining": "( ( MDR * MRS ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( AMS,Max( BR,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server + ( ( ARS / ACS ) * RRS ) ) ,DDR ) ) - DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( ( RRSe + DS ) - Max( MLU,RRSe ) ) * Min( ( Max( RCSe,( RCSe * RMSe ) ) * MUR ) ,Max( MLU,( Max( RRSe,( MLU + MUC ) ) - ( CS - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( FirstVNF_Mem_Server - ( DDR / ( AMS + ( Min( ( FirstVNF_RAM_Server + MDR ) ,Const ) / Const ) ) ) ) )", "choosing": "Max( ( MUC + RCSe ),( MUC * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( PN,Max( Min( FirstVNF_RAM_Server ,BR ),Max( CRS,FirstVNF_Mem ) ) ) ) / ( DDR + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "Max( ( RMSe * MUR ),Max( ( Min( RCSe ,CS ) / ( Min( MUC ,( MLU / MLU ) ) * RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( ( MUM - RRSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,CRS ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( ( Min( MUM ,MUR ) * RCSe ) * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( AMS * FirstVNF_Mem ) ) ,( PN + MRS ) ) - Max( BR,( BR + FirstVNF_RAM ) ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( Min( RRSe ,Min( ( Min( MUC ,Max( MUM,Max( DS,CS ) ) ) * ( ( ( MLU * MLU ) / RMSe ) - RRSe ) ) ,( DS / RCSe ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * MUR ) ,Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( FirstVNF_RAM / DDR ) ) )", "choosing": "Max( Min( ( RRSe - MLU ) ,( DS + MLU ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( PN,Max( Min( FirstVNF_RAM_Server ,BR ),Max( CRS,FirstVNF_Mem ) ) ) ) / ( DDR + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "Max( ( RMSe * MUR ),Max( ( Min( RCSe ,CS ) / ( Min( MUC ,( MLU / MLU ) ) * RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + ( FirstVNF_Mem_Server - ACS ) ) ) ,( ( ACS / ARS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RMSe ) * ( MUR + CS ) ),( ( MUM - RRSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) ) ,( DDR + MDR ) ) * ( ( ARS + ACS ) / ( Const + Const ) ) )", "choosing": "Min( Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) ,( ( MUM + MLU ) + ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( Const + Const ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RRSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,RRS ) ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( ( RCSe * RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( MDR ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( MUC / RCSe ) ,CS ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - AMS ) - ( Const - MRS ) ) / ( FirstVNF_Mem / RRS ) )", "choosing": "( ( ( RRSe / MUC ) - ( MLU / RMSe ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - AMS ) - ( Const - MRS ) ) * Min( Const ,MRS ) ) ,( Max( RRS,RRS ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS * MUM ) + ( MUC - RRSe ) ),( ( DS / RMSe ) * ( RCSe * Max( MUR,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * ( RRS - FirstVNF_RAM ) )", "choosing": "( RRSe - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + ( CS / DS ) ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( ( ( MRS * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( MRS + AMS ) ) ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( Max( ( MUM - DS ),Max( RRSe,RCSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,Const ) * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( ( MUC - RCSe ) * ( DS / RRSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe + MUM ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,( Max( ( ARS + PN ),Max( CRS,FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,( Max( ( ARS + PN ),Max( CRS,FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ) ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),( MUM * MUR ) ) / ( ( DS * MUM ) / ( RRSe - ( ( RCSe - DS ) / Max( RRSe,MLU ) ) ) ) ) * Max( ( Max( DS,RCSe ) * ( MUM + MUM ) ),Min( Max( RCSe,RCSe ) ,( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( DDR / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( MUM * Max( RCSe,Max( MUC,CS ) ) ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( ( BR / ACS ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) ) )", "choosing": "Min( ( DS - MUC ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( ( BR / ACS ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - ( Min( FirstVNF_CPU_Server ,MDR ) + Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( ( MUR * RCSe ) * ( Max( Min( RMSe ,MUC ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + BR ) / MDR ) )", "choosing": "( ( MLU - ( MUR - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ) / BR ) * ( BR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC - Min( RMSe ,MUR ) ) ,Min( MUM ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) * ( Max( ARS,FirstVNF_Mem_Server ) + ( Const + BR ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( RMSe,RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,CRS ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( ( Min( MUM ,MUR ) * RCSe ) * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) - ( CRS + Min( ( ARS / Max( AMS,FirstVNF_Mem ) ) ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / Min( ( ( DS - Max( RCSe,( RRSe - MUC ) ) ) - Max( MUR,( ( Max( MUM,MLU ) / ( RCSe - CS ) ) - MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( CRS,( ( MDR - CRS ) * RRS ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( RMSe,RMSe ) ,Min( ( MUR + ( ( CS + MLU ) / MUR ) ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,( ( Const * MDR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Min( ( ( MUM - ( MUM - DS ) ) * ( RRSe * MUR ) ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - FirstVNF_Mem_Server )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) * FirstVNF_RAM_Server ),CRS ) + ( PN - ACS ) )", "choosing": "( Min( ( RRSe - CS ) ,Max( MLU,CS ) ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,( FirstVNF_RAM_Server * RRS ) ) )", "choosing": "Min( ( RMSe * MUR ) ,( ( MUM * MUR ) + Max( MUM,( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( PN - AMS ) ) - ( RRS + Const ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( MUM - ( ( ( DS + ( MLU - MUC ) ) * Max( Min( MUC ,MUR ),( DS - DS ) ) ) + RRSe ) ) / ( ( MUM / ( ( MUC - Min( CS ,MUR ) ) * ( ( RCSe - MUR ) / Min( MUR ,MUR ) ) ) ) + ( ( ( ( RCSe - MUR ) - ( MUC * MUR ) ) / RMSe ) / DS ) ) ) / DS ) )", "obj1": 0.24153498871331827, "obj2": 0.6404094214822845}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) ) ) - Max( Max( BR,FirstVNF_RAM ),PN ) )", "choosing": "Max( Max( ( RMSe * RMSe ),( MUR * MLU ) ),( ( MLU + RRSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( Max( Const,FirstVNF_Mem_Server ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( ( CS * MUM ) + ( MUC - RRSe ) ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Max( ARS,( ACS * FirstVNF_Mem ) ) ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),PN ) )", "choosing": "Max( Max( ( RCSe + ( CS + MUM ) ),( MUR * MLU ) ),( ( MLU + RRSe ) / DS ) )", "obj1": 0.24153498871331827, "obj2": 0.6404094214822845}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( ( PN - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( MRS + AMS ) ) )", "choosing": "Max( ( ( RCSe - MUC ) - ( RMSe + CS ) ),( Min( RRSe ,( ( RRSe + ( MUM - ( ( RRSe - RCSe ) - ( DS * MUR ) ) ) ) + MLU ) ) + ( RRSe - DS ) ) )", "obj1": 0.7336343115124153, "obj2": 0.11006217755896057}, {"determining": "( ( FirstVNF_Mem_Server - ( MDR / BR ) ) * ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / ACS ) ) * ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) ) ) )", "choosing": "( MUM * MLU )", "obj1": 0.8442437923250564, "obj2": 0.09783860746093076}, {"determining": "( ( AMS * Max( FirstVNF_CPU,Min( ( DDR + ARS ) ,( DDR * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_CPU,Min( ( DDR + ARS ) ,( DDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MLU / DS ) ,( MLU / DS ) )", "obj1": 0.5846501128668171, "obj2": 0.2723206700911215}, {"determining": "( ( FirstVNF_RAM / ( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * DS )", "obj1": 0.7291196388261851, "obj2": 0.22611156158264603}, {"determining": "( ( Max( FirstVNF_CPU_Server,Max( PN,Const ) ) + ( Max( BR,MRS ) * ( Const * DDR ) ) ) + Max( ( ( DDR * RRS ) - Min( DDR ,ARS ) ),( Min( ARS ,Const ) + Max( DDR,AMS ) ) ) )", "choosing": "Min( Min( RMSe ,( RRSe * ( DS / CS ) ) ) ,( RMSe * MUR ) )", "obj1": 0.5620767494356659, "obj2": 0.3576160233739684}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - ( FirstVNF_CPU / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUC,RMSe ) * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9051918735891648, "obj2": 0.05360164125174252}, {"determining": "Max( ACS,Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / Max( ( RMSe * CS ),( MUR * MLU ) ) )", "obj1": 0.2866817155756208, "obj2": 0.6046170523804109}, {"determining": "( Min( PN ,BR ) / ( ( FirstVNF_CPU_Server - MRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( MUC + RCSe ),( MUC + RMSe ) ) * ( DS / RRSe ) ) * Max( MUR,( MUR + MLU ) ) )", "obj1": 0.672686230248307, "obj2": 0.2624918557018886}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - ( FirstVNF_CPU / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUC,RMSe ) * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - ( MLU + Max( ( MUR * CS ),RMSe ) ) ) - Min( MUC ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.9164785553047404, "obj2": 0.028455890606430737}, {"determining": "( ( FirstVNF_RAM + CRS ) * ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( DS - MLU ) ,( DS - CS ) )", "obj1": 0.963882618510158, "obj2": 0.026968141577658023}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem_Server - Max( ( CRS - FirstVNF_Mem ),Min( PN ,( PN * DDR ) ) ) ) ,BR ) / Const ) + FirstVNF_Mem_Server ) ,( Const * FirstVNF_RAM ) )", "choosing": "( ( Min( MLU ,( ( ( MLU / ( Min( MLU ,DS ) / ( RMSe + RMSe ) ) ) / RCSe ) + ( MLU / RCSe ) ) ) / MUM ) / MUC )", "obj1": 0.5553047404063205, "obj2": 0.3889133241260538}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.4582392776523702, "obj2": 0.45757195034361875}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + ( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Min( RCSe ,DS ) / Max( MLU,RMSe ) )", "obj1": 0.7155756207674944, "obj2": 0.2464256188054546}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3431151241534989, "obj2": 0.5753739430168371}, {"determining": "Max( Max( MDR,RRS ),( FirstVNF_RAM * FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RRSe ),Min( MLU ,MLU ) )", "obj1": 0.3656884875846501, "obj2": 0.5596634892106223}, {"determining": "Min( ( PN / BR ) ,( Min( ( Min( ( FirstVNF_Mem_Server * AMS ) ,Max( ACS,RRS ) ) * FirstVNF_RAM ) ,Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / DS ) / ( CS - Max( MLU,MUR ) ) )", "obj1": 0.4153498871331828, "obj2": 0.4890578905040267}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( AMS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - MUM ) )", "obj1": 0.510158013544018, "obj2": 0.4194586682536546}, {"determining": "( Min( ( MRS / RRS ) ,( FirstVNF_CPU_Server * RRS ) ) * ( ( PN - ( CRS + DDR ) ) - ( Const - ( ( ( FirstVNF_CPU_Server + CRS ) * FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) )", "choosing": "( Max( DS,Max( Max( ( ( DS / RCSe ) / ( RMSe * RMSe ) ),( ( ( RMSe - MLU ) + ( MUC + ( MUM - MUR ) ) ) + DS ) ),MUC ) ) / ( MUC / ( MLU / RMSe ) ) )", "obj1": 0.435665914221219, "obj2": 0.4786557723618735}, {"determining": "Min( ( PN / BR ) ,( Min( Max( ACS,RRS ) ,Max( Min( Max( ACS,RRS ) ,Max( ACS,RRS ) ),RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / DS ) / ( ( CS - ( ( DS / DS ) / ( CS - RMSe ) ) ) - ( ( DS / DS ) / ( CS - RMSe ) ) ) )", "obj1": 0.4492099322799097, "obj2": 0.4770965104013033}, {"determining": "( ( ( Max( BR,MRS ) + ( ( ( ( Const - MRS ) + CRS ) * FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( Max( DS,Max( MUR,MUC ) ) / ( MUC / ( MLU / RMSe ) ) ) * RCSe ) ) ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.54627539503386, "obj2": 0.4090592665351672}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),Max( MDR,FirstVNF_RAM ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ARS ) * Min( ( FirstVNF_RAM + ( FirstVNF_RAM_Server + ( FirstVNF_Mem * ( BR + AMS ) ) ) ) ,FirstVNF_CPU_Server ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / ( ( CS * RMSe ) / Max( Max( ( CS - RCSe ),( MUC - ( MUM * CS ) ) ),CS ) ) )", "obj1": 0.6952595936794582, "obj2": 0.24903089243364052}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,Max( MUM,MUR ) )", "obj1": 0.5259593679458239, "obj2": 0.42459727405707715}, {"determining": "( ( AMS * DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( MLU - Min( ( RMSe * MUR ) ,Min( DS ,MLU ) ) ) )", "obj1": 0.9796839729119639, "obj2": 0.014465558268548059}, {"determining": "( ( ( RRS * ACS ) - Min( BR ,AMS ) ) / ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( Min( MLU ,MUR ),( RMSe * RCSe ) ) * Min( MUC ,MUR ) )", "obj1": 0.6884875846501128, "obj2": 0.25811794271463673}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( FirstVNF_CPU_Server * FirstVNF_CPU ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( MUC ,RCSe ) ) ,( RMSe * RCSe ) ) + ( RMSe - CS ) )", "obj1": 0.40632054176072235, "obj2": 0.5009520680215185}, {"determining": "Max( ( MDR / ARS ),Min( FirstVNF_CPU_Server ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU + RMSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( Max( RCSe,MUC ) / MUM ) ) )", "obj1": 0.3724604966139955, "obj2": 0.5503143321201488}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + Min( ( FirstVNF_RAM_Server + Min( Max( ( CRS * PN ),FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / ( RMSe * MLU ) ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ( Min( ( FirstVNF_Mem_Server * AMS ) ,Max( ACS,RRS ) ) * FirstVNF_RAM ) ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( DS / DS ) / ( CS - RMSe ) ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3972911963882618, "obj2": 0.5062647303453165}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( Max( CRS,FirstVNF_RAM_Server ) + ( DDR * MDR ) ) )", "choosing": "( ( MLU - ( CS + DS ) ) / Min( MLU ,Min( RRSe ,( Max( Min( RRSe ,RMSe ),RMSe ) / ( ( ( RCSe - Min( MUR ,MUR ) ) / RMSe ) - Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.3747178329571106, "obj2": 0.5365959005967065}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( MUC ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.3837471783295711, "obj2": 0.5115931502792346}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) - ( ACS * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( RMSe + ( RMSe - CS ) )", "obj1": 0.3792325056433409, "obj2": 0.5282351830050009}, {"determining": "( ( ( AMS * DDR ) * DDR ) - Max( ( ( AMS * DDR ) - Max( FirstVNF_CPU,Min( ( DDR + ARS ) ,( DDR * FirstVNF_RAM_Server ) ) ) ),FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( MLU / DS ) ) ,Min( CS ,MUM ) )", "obj1": 0.9909706546275395, "obj2": 0.008393994066213049}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( FirstVNF_CPU_Server ,( ARS + FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / ( ( MLU + RMSe ) / Max( MLU,MUR ) ) ) )", "obj1": 0.32505643340857787, "obj2": 0.5883378072823569}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( DDR + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.5237020316027088, "obj2": 0.4168398688200789}, {"determining": "Min( Min( FirstVNF_RAM_Server ,Max( DDR,FirstVNF_RAM ) ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( ( DS / MUC ) + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "( ( ( Max( Max( AMS,Max( BR,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server + ( ( ARS / ACS ) * RRS ) ) ,DDR ) ) - DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( ( RRSe + DS ) - Max( MLU,RRSe ) ) * Min( ( Max( RCSe,( RCSe * RMSe ) ) * MUR ) ,Max( MLU,( Max( RRSe,( MLU + MUC ) ) - ( CS - RRSe ) ) ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0010921176513893009}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * MUR ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( Min( AMS ,BR ) + FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUR ) + Min( Min( MUR ,DS ) ,RCSe ) )", "obj1": 0.5372460496613995, "obj2": 0.4134977541082568}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,Max( Const,( MDR / Const ) ) ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),Min( ( CS - MUR ) ,( MUC / MUR ) ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.37697516930022573, "obj2": 0.529020348081487}, {"determining": "( Min( AMS ,BR ) + FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUR ) + Min( Min( MUR ,DS ) ,RCSe ) )", "obj1": 0.5372460496613995, "obj2": 0.4134977541082568}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( Max( RCSe,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( AMS,Max( BR,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server + ( ( ARS / ACS ) * RRS ) ) ,DDR ) ) - DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( ( RRSe + DS ) - Max( MLU,RRSe ) ) * Min( ( Max( RCSe,( RCSe * RMSe ) ) * MUR ) ,Max( MLU,( Max( RRSe,( MLU + MUC ) ) - ( CS - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( FirstVNF_Mem_Server - ( DDR / ( AMS + ( Min( ( FirstVNF_RAM_Server + MDR ) ,Const ) / Const ) ) ) ) )", "choosing": "Max( ( MUC + RCSe ),( MUC * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( PN,Max( Min( FirstVNF_RAM_Server ,BR ),Max( CRS,FirstVNF_Mem ) ) ) ) / ( DDR + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "Max( ( RMSe * MUR ),Max( ( Min( RCSe ,CS ) / ( Min( MUC ,( MLU / MLU ) ) * RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( ( MUM - RRSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,CRS ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( ( Min( MUM ,MUR ) * RCSe ) * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( AMS * FirstVNF_Mem ) ) ,( PN + MRS ) ) - Max( BR,( BR + FirstVNF_RAM ) ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( Min( RRSe ,Min( ( Min( MUC ,Max( MUM,Max( DS,CS ) ) ) * ( ( ( MLU * MLU ) / RMSe ) - RRSe ) ) ,( DS / RCSe ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * MUR ) ,Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( FirstVNF_RAM / DDR ) ) )", "choosing": "Max( Min( ( RRSe - MLU ) ,( DS + MLU ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( PN,Max( Min( FirstVNF_RAM_Server ,BR ),Max( CRS,FirstVNF_Mem ) ) ) ) / ( DDR + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "Max( ( RMSe * MUR ),Max( ( Min( RCSe ,CS ) / ( Min( MUC ,( MLU / MLU ) ) * RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + ( FirstVNF_Mem_Server - ACS ) ) ) ,( ( ACS / ARS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RMSe ) * ( MUR + CS ) ),( ( MUM - RRSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) ) ,( DDR + MDR ) ) * ( ( ARS + ACS ) / ( Const + Const ) ) )", "choosing": "Min( Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) ,( ( MUM + MLU ) + ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( Const + Const ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RRSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,RRS ) ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( ( RCSe * RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( MDR ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( MUC / RCSe ) ,CS ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - AMS ) - ( Const - MRS ) ) / ( FirstVNF_Mem / RRS ) )", "choosing": "( ( ( RRSe / MUC ) - ( MLU / RMSe ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - AMS ) - ( Const - MRS ) ) * Min( Const ,MRS ) ) ,( Max( RRS,RRS ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS * MUM ) + ( MUC - RRSe ) ),( ( DS / RMSe ) * ( RCSe * Max( MUR,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * ( RRS - FirstVNF_RAM ) )", "choosing": "( RRSe - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + ( CS / DS ) ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( ( ( MRS * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( MRS + AMS ) ) ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( Max( ( MUM - DS ),Max( RRSe,RCSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,Const ) * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( ( MUC - RCSe ) * ( DS / RRSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe + MUM ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,( Max( ( ARS + PN ),Max( CRS,FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,( Max( ( ARS + PN ),Max( CRS,FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ) ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),( MUM * MUR ) ) / ( ( DS * MUM ) / ( RRSe - ( ( RCSe - DS ) / Max( RRSe,MLU ) ) ) ) ) * Max( ( Max( DS,RCSe ) * ( MUM + MUM ) ),Min( Max( RCSe,RCSe ) ,( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( DDR / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( MUM * Max( RCSe,Max( MUC,CS ) ) ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( ( BR / ACS ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) ) )", "choosing": "Min( ( DS - MUC ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( ( BR / ACS ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - ( Min( FirstVNF_CPU_Server ,MDR ) + Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( ( MUR * RCSe ) * ( Max( Min( RMSe ,MUC ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + BR ) / MDR ) )", "choosing": "( ( MLU - ( MUR - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ) / BR ) * ( BR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC - Min( RMSe ,MUR ) ) ,Min( MUM ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) * ( Max( ARS,FirstVNF_Mem_Server ) + ( Const + BR ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( RMSe,RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,CRS ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( ( Min( MUM ,MUR ) * RCSe ) * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) - ( CRS + Min( ( ARS / Max( AMS,FirstVNF_Mem ) ) ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / Min( ( ( DS - Max( RCSe,( RRSe - MUC ) ) ) - Max( MUR,( ( Max( MUM,MLU ) / ( RCSe - CS ) ) - MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( CRS,( ( MDR - CRS ) * RRS ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( RMSe,RMSe ) ,Min( ( MUR + ( ( CS + MLU ) / MUR ) ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,( ( Const * MDR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Min( ( ( MUM - ( MUM - DS ) ) * ( RRSe * MUR ) ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - FirstVNF_Mem_Server )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) * FirstVNF_RAM_Server ),CRS ) + ( PN - ACS ) )", "choosing": "( Min( ( RRSe - CS ) ,Max( MLU,CS ) ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,( FirstVNF_RAM_Server * RRS ) ) )", "choosing": "Min( ( RMSe * MUR ) ,( ( MUM * MUR ) + Max( MUM,( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( MUM * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,CRS ) ) ) ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "Min( Min( CS ,Max( ( ( Min( MUM ,MUR ) * RCSe ) * MUR ),RMSe ) ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( Const / ( ( CRS + Const ) * ( CRS - Max( RRS,CRS ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( ( Min( MUM ,MUR ) * RCSe ) * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Max( ( PN - BR ),MRS ) - ( Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,MUC ),Min( RRSe ,RCSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) ) ) - Max( Max( BR,FirstVNF_RAM ),PN ) )", "choosing": "Max( Max( ( RMSe * RMSe ),( MUR * MLU ) ),( ( MLU + RRSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),PN ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( MLU + RRSe ) / DS ) / DS ) )", "obj1": 0.23476297968397292, "obj2": 0.6641612844886811}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( ( PN - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( MRS + AMS ) ) )", "choosing": "Max( ( ( RCSe - MUC ) - ( RMSe + CS ) ),( Min( RRSe ,( ( RRSe + ( MUM - ( ( RRSe - RCSe ) - ( DS * MUR ) ) ) ) + MLU ) ) + ( RRSe - DS ) ) )", "obj1": 0.7336343115124153, "obj2": 0.11006217755896057}, {"determining": "( ( FirstVNF_Mem_Server - ( MDR / BR ) ) * ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / ACS ) ) * ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) ) ) )", "choosing": "( MUM * MLU )", "obj1": 0.8442437923250564, "obj2": 0.09783860746093076}, {"determining": "( ( FirstVNF_Mem_Server - ( MDR / BR ) ) * ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / ACS ) ) * ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( MUC ,RCSe ) ) ,RRSe ) * MLU )", "obj1": 0.7133182844243793, "obj2": 0.218258589855534}, {"determining": "( ( AMS * Max( FirstVNF_CPU,Min( ( DDR + ARS ) ,( DDR * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_CPU,Min( ( DDR + ARS ) ,( DDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MLU / DS ) ,( MLU / DS ) )", "obj1": 0.5846501128668171, "obj2": 0.2723206700911215}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - ( FirstVNF_CPU / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUC,RMSe ) * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9051918735891648, "obj2": 0.05360164125174252}, {"determining": "Max( ACS,Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / Max( ( RMSe * CS ),( MUR * MLU ) ) )", "obj1": 0.2866817155756208, "obj2": 0.6046170523804109}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( ( ( RMSe - MLU ) + ( MUC + ( MUM - MUR ) ) ) + DS ) ,( MUM / RMSe ) ) * ( DS * RCSe ) ) ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.5756207674943566, "obj2": 0.34114923075641646}, {"determining": "( Min( PN ,BR ) / ( ( FirstVNF_CPU_Server - MRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( MUC + RCSe ),( MUC + RMSe ) ) * ( DS / RRSe ) ) * Max( MUR,( MUR + MLU ) ) )", "obj1": 0.672686230248307, "obj2": 0.2624918557018886}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - ( FirstVNF_CPU / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUC,RMSe ) * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - ( MLU + Max( ( MUR * CS ),RMSe ) ) ) - Min( MUC ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.9164785553047404, "obj2": 0.028455890606430737}, {"determining": "( ( Max( FirstVNF_CPU_Server,Max( PN,Const ) ) + ( Max( BR,MRS ) * ( Const * DDR ) ) ) + Max( ( ( DDR * RRS ) - Min( DDR ,ARS ) ),( Min( ARS ,Const ) + Max( DDR,AMS ) ) ) )", "choosing": "Min( Min( RMSe ,( RRSe * ( DS / CS ) ) ) ,( RMSe * MUR ) )", "obj1": 0.5620767494356659, "obj2": 0.3576160233739684}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ARS ) * Min( ( FirstVNF_RAM + ( FirstVNF_RAM_Server + ( FirstVNF_Mem * ( BR + AMS ) ) ) ) ,FirstVNF_CPU_Server ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( Max( ( CRS - FirstVNF_Mem ),Min( PN ,( PN * DDR ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / ( ( CS * RMSe ) / Max( Max( ( ( MLU / ( Min( MLU ,DS ) / ( RMSe + RMSe ) ) ) / RCSe ),( MUC - ( MUM * CS ) ) ),CS ) ) )", "obj1": 0.3837471783295711, "obj2": 0.49915769470231397}, {"determining": "Min( ( PN / BR ) ,( Min( ( Min( ( FirstVNF_Mem_Server * AMS ) ,Max( ACS,RRS ) ) * FirstVNF_RAM ) ,Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / DS ) / ( CS - Max( MLU,MUR ) ) )", "obj1": 0.4153498871331828, "obj2": 0.4890578905040267}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - ( MDR / BR ) ) * ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( MUM * MLU ) + ( RMSe - CS ) )", "obj1": 0.5440180586907449, "obj2": 0.3881956522486626}, {"determining": "( ( Max( RRS,Max( ARS,( ACS * FirstVNF_Mem ) ) ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),PN ) )", "choosing": "Max( Max( ( RCSe + ( CS + MUM ) ),( MUR * MLU ) ),( ( MLU + RRSe ) / DS ) )", "obj1": 0.24153498871331827, "obj2": 0.6404094214822845}, {"determining": "Max( ( FirstVNF_Mem + ( Const / FirstVNF_RAM ) ),( FirstVNF_RAM / ( Max( ( FirstVNF_Mem + ( Const / FirstVNF_RAM ) ),( FirstVNF_RAM / ( ACS - PN ) ) ) - PN ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( DS + ( RRSe - RRSe ) ) )", "obj1": 0.6952595936794582, "obj2": 0.24301533946600476}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.4582392776523702, "obj2": 0.45757195034361875}, {"determining": "( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) / Min( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( MLU ,MUR ),( RMSe * RCSe ) ) * ( MUC - ( MLU + Max( ( MUR * CS ),RMSe ) ) ) )", "obj1": 0.3160270880361174, "obj2": 0.5936134593285014}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( AMS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - MUM ) )", "obj1": 0.510158013544018, "obj2": 0.4194586682536546}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),PN )", "choosing": "( ( ( MLU + RMSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) ) ) )", "obj1": 0.36343115124153497, "obj2": 0.5574792346854218}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,( FirstVNF_RAM_Server * ( ACS - PN ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( MUM * MUR ) + Max( MUM,( MUM - MLU ) ) ) )", "obj1": 0.9616252821670429, "obj2": 0.027688705166580754}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( PN - AMS ) ) - ( RRS + Const ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( MUM - ( ( ( DS + ( MLU - MUC ) ) * Max( Min( MUC ,MUR ),( DS - DS ) ) ) + RRSe ) ) / ( ( MUM / ( ( MUC - Min( CS ,MUR ) ) * ( ( RCSe - MUR ) / Min( MUR ,MUR ) ) ) ) + ( ( ( ( RCSe - MUR ) - ( MUC * MUR ) ) / RMSe ) / DS ) ) ) / DS ) )", "obj1": 0.24153498871331827, "obj2": 0.6404094214822845}, {"determining": "( Min( ( MRS / RRS ) ,( FirstVNF_CPU_Server * RRS ) ) * ( ( PN - ( CRS + DDR ) ) - ( Const - ( ( ( FirstVNF_CPU_Server + CRS ) * FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) )", "choosing": "( Max( DS,Max( Max( ( ( DS / RCSe ) / ( RMSe * RMSe ) ),( ( ( RMSe - MLU ) + ( MUC + ( MUM - MUR ) ) ) + DS ) ),MUC ) ) / ( MUC / ( MLU / RMSe ) ) )", "obj1": 0.435665914221219, "obj2": 0.4786557723618735}, {"determining": "Min( ( PN / BR ) ,( Min( Max( ACS,RRS ) ,Max( Min( Max( ACS,RRS ) ,Max( ACS,RRS ) ),RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / DS ) / ( ( CS - ( ( DS / DS ) / ( CS - RMSe ) ) ) - ( ( DS / DS ) / ( CS - RMSe ) ) ) )", "obj1": 0.4492099322799097, "obj2": 0.4770965104013033}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - MRS ) ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + ( Max( ( MUC + RCSe ),( MUC + RMSe ) ) + RMSe ) ) )", "obj1": 0.3656884875846501, "obj2": 0.5297131992276151}, {"determining": "( ( ( RRS * ACS ) - Min( BR ,AMS ) ) / ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( Min( MLU ,MUR ),( RMSe * RCSe ) ) * Min( MUC ,MUR ) )", "obj1": 0.6884875846501128, "obj2": 0.25811794271463673}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) - ( ACS * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( RMSe + ( RMSe - CS ) )", "obj1": 0.3792325056433409, "obj2": 0.5282351830050009}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,Max( MUM,MUR ) )", "obj1": 0.5259593679458239, "obj2": 0.42459727405707715}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( MRS * FirstVNF_CPU ) )", "choosing": "Max( ( MUC + ( ( DS * MUR ) + RCSe ) ),( MUC + RMSe ) )", "obj1": 0.5417607223476298, "obj2": 0.40461970693856864}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + Min( ( FirstVNF_RAM_Server + Min( Max( ( CRS * PN ),FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / ( RMSe * MLU ) ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3611738148984199, "obj2": 0.5694035168770932}, {"determining": "( Min( ( ACS / ( BR + ( ACS / ( ARS + FirstVNF_CPU ) ) ) ) ,( ACS / ( BR + ( ( Max( AMS,FirstVNF_RAM_Server ) - ( ( MDR - FirstVNF_Mem_Server ) / Max( DDR,MDR ) ) ) / ( ARS + FirstVNF_CPU ) ) ) ) ) - Max( BR,ACS ) )", "choosing": "Min( RCSe ,( Min( RRSe ,MLU ) / DS ) )", "obj1": 0.9774266365688488, "obj2": 0.02621746685141921}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( FirstVNF_CPU_Server ,( ARS + FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / ( ( MLU + RMSe ) / Max( MLU,MUR ) ) ) )", "obj1": 0.32505643340857787, "obj2": 0.5883378072823569}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3431151241534989, "obj2": 0.5753739430168371}, {"determining": "( ( ( AMS * DDR ) * DDR ) - Max( ( ( AMS * DDR ) - Max( FirstVNF_CPU,Min( ( DDR + ARS ) ,( DDR * FirstVNF_RAM_Server ) ) ) ),FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( MLU / DS ) ) ,Min( CS ,MUM ) )", "obj1": 0.9909706546275395, "obj2": 0.008393994066213049}, {"determining": "Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU + RMSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( Max( RCSe,( RMSe - ( RMSe + MUM ) ) ) / MUM ) ) )", "obj1": 0.345372460496614, "obj2": 0.5695507409083718}, {"determining": "( ( AMS * DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( MLU - Min( ( RMSe * MUR ) ,Min( DS ,MLU ) ) ) )", "obj1": 0.9796839729119639, "obj2": 0.014465558268548059}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( DDR + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.5237020316027088, "obj2": 0.4168398688200789}, {"determining": "( Min( AMS ,BR ) + FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUR ) + Min( Min( MUR ,DS ) ,RCSe ) )", "obj1": 0.5372460496613995, "obj2": 0.4134977541082568}, {"determining": "( ( ( Max( Max( AMS,Max( BR,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server + ( ( ARS / ACS ) * RRS ) ) ,DDR ) ) - DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( ( RRSe + DS ) - Max( MLU,RRSe ) ) * Min( ( Max( RCSe,( RCSe * RMSe ) ) * MUR ) ,Max( MLU,( Max( RRSe,( MLU + MUC ) ) - ( CS - RRSe ) ) ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0010921176513893009}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * MUR ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( ( FirstVNF_RAM + CRS ) * ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( DS - MLU ) ,( DS - CS ) )", "obj1": 0.963882618510158, "obj2": 0.026968141577658023}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,Max( Const,( MDR / Const ) ) ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),Min( ( CS - MUR ) ,( MUC / MUR ) ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.37697516930022573, "obj2": 0.529020348081487}, {"determining": "( Min( AMS ,BR ) + FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUR ) + Min( Min( MUR ,DS ) ,RCSe ) )", "obj1": 0.5372460496613995, "obj2": 0.4134977541082568}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( Max( Const,FirstVNF_Mem_Server ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( ( CS * MUM ) + ( MUC - RRSe ) ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( Max( RCSe,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( AMS,Max( BR,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server + ( ( ARS / ACS ) * RRS ) ) ,DDR ) ) - DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( ( RRSe + DS ) - Max( MLU,RRSe ) ) * Min( ( Max( RCSe,( RCSe * RMSe ) ) * MUR ) ,Max( MLU,( Max( RRSe,( MLU + MUC ) ) - ( CS - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( FirstVNF_Mem_Server - ( DDR / ( AMS + ( Min( ( FirstVNF_RAM_Server + MDR ) ,Const ) / Const ) ) ) ) )", "choosing": "Max( ( MUC + RCSe ),( MUC * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( PN,Max( Min( FirstVNF_RAM_Server ,BR ),Max( CRS,FirstVNF_Mem ) ) ) ) / ( DDR + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "Max( ( RMSe * MUR ),Max( ( Min( RCSe ,CS ) / ( Min( MUC ,( MLU / MLU ) ) * RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( ( MUM - RRSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,CRS ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( ( Min( MUM ,MUR ) * RCSe ) * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( AMS * FirstVNF_Mem ) ) ,( PN + MRS ) ) - Max( BR,( BR + FirstVNF_RAM ) ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( Min( RRSe ,Min( ( Min( MUC ,Max( MUM,Max( DS,CS ) ) ) * ( ( ( MLU * MLU ) / RMSe ) - RRSe ) ) ,( DS / RCSe ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * MUR ) ,Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( FirstVNF_RAM / DDR ) ) )", "choosing": "Max( Min( ( RRSe - MLU ) ,( DS + MLU ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( PN,Max( Min( FirstVNF_RAM_Server ,BR ),Max( CRS,FirstVNF_Mem ) ) ) ) / ( DDR + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "Max( ( RMSe * MUR ),Max( ( Min( RCSe ,CS ) / ( Min( MUC ,( MLU / MLU ) ) * RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + ( FirstVNF_Mem_Server - ACS ) ) ) ,( ( ACS / ARS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RMSe ) * ( MUR + CS ) ),( ( MUM - RRSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) ) ,( DDR + MDR ) ) * ( ( ARS + ACS ) / ( Const + Const ) ) )", "choosing": "Min( Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) ,( ( MUM + MLU ) + ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( Const + Const ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RRSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,RRS ) ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( ( RCSe * RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( MDR ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( MUC / RCSe ) ,CS ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - AMS ) - ( Const - MRS ) ) / ( FirstVNF_Mem / RRS ) )", "choosing": "( ( ( RRSe / MUC ) - ( MLU / RMSe ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - AMS ) - ( Const - MRS ) ) * Min( Const ,MRS ) ) ,( Max( RRS,RRS ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS * MUM ) + ( MUC - RRSe ) ),( ( DS / RMSe ) * ( RCSe * Max( MUR,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * ( RRS - FirstVNF_RAM ) )", "choosing": "( RRSe - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + ( CS / DS ) ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( ( ( MRS * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( MRS + AMS ) ) ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( Max( ( MUM - DS ),Max( RRSe,RCSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,Const ) * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( ( MUC - RCSe ) * ( DS / RRSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe + MUM ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,( Max( ( ARS + PN ),Max( CRS,FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,( Max( ( ARS + PN ),Max( CRS,FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ) ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),( MUM * MUR ) ) / ( ( DS * MUM ) / ( RRSe - ( ( RCSe - DS ) / Max( RRSe,MLU ) ) ) ) ) * Max( ( Max( DS,RCSe ) * ( MUM + MUM ) ),Min( Max( RCSe,RCSe ) ,( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( DDR / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( MUM * Max( RCSe,Max( MUC,CS ) ) ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( ( BR / ACS ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) ) )", "choosing": "Min( ( DS - MUC ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( ( BR / ACS ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - ( Min( FirstVNF_CPU_Server ,MDR ) + Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( ( MUR * RCSe ) * ( Max( Min( RMSe ,MUC ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + BR ) / MDR ) )", "choosing": "( ( MLU - ( MUR - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ) / BR ) * ( BR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC - Min( RMSe ,MUR ) ) ,Min( MUM ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) * ( Max( ARS,FirstVNF_Mem_Server ) + ( Const + BR ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( RMSe,RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,CRS ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( ( Min( MUM ,MUR ) * RCSe ) * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) - ( CRS + Min( ( ARS / Max( AMS,FirstVNF_Mem ) ) ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / Min( ( ( DS - Max( RCSe,( RRSe - MUC ) ) ) - Max( MUR,( ( Max( MUM,MLU ) / ( RCSe - CS ) ) - MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( CRS,( ( MDR - CRS ) * RRS ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( RMSe,RMSe ) ,Min( ( MUR + ( ( CS + MLU ) / MUR ) ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,( ( Const * MDR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Min( ( ( MUM - ( MUM - DS ) ) * ( RRSe * MUR ) ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - FirstVNF_Mem_Server )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) * FirstVNF_RAM_Server ),CRS ) + ( PN - ACS ) )", "choosing": "( Min( ( RRSe - CS ) ,Max( MLU,CS ) ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,( FirstVNF_RAM_Server * RRS ) ) )", "choosing": "Min( ( RMSe * MUR ) ,( ( MUM * MUR ) + Max( MUM,( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( MUM * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,CRS ) ) ) ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "Min( Min( CS ,Max( ( ( Min( MUM ,MUR ) * RCSe ) * MUR ),RMSe ) ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( PN - Max( Max( BR,FirstVNF_RAM ),Min( ( Min( FirstVNF_Mem ,PN ) - FirstVNF_RAM ) ,( MDR + PN ) ) ) ) ) - ( RRS + Const ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( MUM - ( ( ( ( DS + MUR ) + ( MLU - MUC ) ) * Max( Min( MUC ,MUR ),( DS - DS ) ) ) + RRSe ) ) / ( ( MUM / ( ( MUC - Min( CS ,MUR ) ) * ( ( RCSe - MUR ) / Min( MUR ,MUR ) ) ) ) + ( ( ( ( RCSe - MUR ) - ( MUC * MUR ) ) / RMSe ) / DS ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - BR ),MRS ) - ( Max( MDR,Max( FirstVNF_Mem_Server,CRS ) ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,MUC ),Min( RRSe ,RCSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),PN ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( MLU + RRSe ) / DS ) / DS ) )", "obj1": 0.23476297968397292, "obj2": 0.6641612844886811}, {"determining": "( ( FirstVNF_Mem_Server - ( MDR / BR ) ) * ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / ACS ) ) * ( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) ) ) )", "choosing": "( MUM * MLU )", "obj1": 0.8442437923250564, "obj2": 0.09783860746093076}, {"determining": "( ( FirstVNF_Mem_Server - ( MDR / BR ) ) * ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / ACS ) ) * ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( MUC ,RCSe ) ) ,RRSe ) * MLU )", "obj1": 0.7133182844243793, "obj2": 0.218258589855534}, {"determining": "( ( AMS * Max( FirstVNF_CPU,Min( ( DDR + ARS ) ,( DDR * FirstVNF_RAM_Server ) ) ) ) - Max( FirstVNF_CPU,Min( ( DDR + ARS ) ,( DDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MLU / DS ) ,( MLU / DS ) )", "obj1": 0.5846501128668171, "obj2": 0.2723206700911215}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( ( PN - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( MRS + AMS ) ) )", "choosing": "Max( ( ( RCSe - MUC ) - ( RMSe + CS ) ),( Min( RRSe ,( ( RRSe + ( MUM - ( ( RRSe - RCSe ) - ( DS * MUR ) ) ) ) + MLU ) ) + ( RRSe - DS ) ) )", "obj1": 0.7336343115124153, "obj2": 0.11006217755896057}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - ( FirstVNF_CPU / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUC,RMSe ) * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9051918735891648, "obj2": 0.05360164125174252}, {"determining": "Max( ACS,Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / Max( ( RMSe * CS ),( MUR * MLU ) ) )", "obj1": 0.2866817155756208, "obj2": 0.6046170523804109}, {"determining": "( ( ( MRS * FirstVNF_CPU ) + ( ( PN - FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( MRS + Min( AMS ,AMS ) ) ) )", "choosing": "Max( ( ( RCSe - MUC ) - ( RMSe + CS ) ),Min( ( Min( Min( ( MUR - MUR ) ,CS ) ,RMSe ) / DS ) ,CS ) )", "obj1": 0.7562076749435666, "obj2": 0.10044039448394694}, {"determining": "( Min( PN ,BR ) / ( ( FirstVNF_CPU_Server - MRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( MUC + RCSe ),( MUC + RMSe ) ) * ( DS / RRSe ) ) * Max( MUR,( MUR + MLU ) ) )", "obj1": 0.672686230248307, "obj2": 0.2624918557018886}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) - ( CRS + Min( ( ARS / Max( AMS,FirstVNF_Mem ) ) ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / Min( ( ( DS - Max( RCSe,( RRSe - MUC ) ) ) - Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) ) ) ,RCSe ) ) )", "obj1": 0.3476297968397291, "obj2": 0.5262694038799638}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ARS ) * Min( ( FirstVNF_RAM + ( FirstVNF_RAM_Server + ( FirstVNF_Mem * ( BR + AMS ) ) ) ) ,FirstVNF_CPU_Server ) ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( Max( ( CRS - FirstVNF_Mem ),Min( PN ,( PN * DDR ) ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / ( ( CS * RMSe ) / Max( Max( ( ( MLU / ( Min( MLU ,DS ) / ( RMSe + RMSe ) ) ) / RCSe ),( MUC - ( MUM * CS ) ) ),CS ) ) )", "obj1": 0.3837471783295711, "obj2": 0.49915769470231397}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( ( ( RMSe - MLU ) + ( MUC + ( MUM - MUR ) ) ) + DS ) ,( MUM / RMSe ) ) * ( DS * RCSe ) ) ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 0.5756207674943566, "obj2": 0.34114923075641646}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - ( MLU + Max( ( MUR * CS ),RMSe ) ) ) - Min( MUC ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.9164785553047404, "obj2": 0.028455890606430737}, {"determining": "( ( Max( FirstVNF_CPU_Server,Max( PN,Const ) ) + ( Max( BR,MRS ) * ( Const * DDR ) ) ) + Max( ( ( DDR * RRS ) - Min( DDR ,ARS ) ),( Min( ARS ,Const ) + Max( DDR,AMS ) ) ) )", "choosing": "Min( Min( RMSe ,( RRSe * ( DS / CS ) ) ) ,( RMSe * MUR ) )", "obj1": 0.5620767494356659, "obj2": 0.3576160233739684}, {"determining": "Min( ( PN / BR ) ,( Min( ( Min( ( FirstVNF_Mem_Server * AMS ) ,Max( ACS,RRS ) ) * FirstVNF_RAM ) ,Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / DS ) / ( CS - Max( MLU,MUR ) ) )", "obj1": 0.4153498871331828, "obj2": 0.4890578905040267}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - ( MDR / BR ) ) * ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) * AMS ) ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( ( MUM * MLU ) + ( RMSe - CS ) )", "obj1": 0.5440180586907449, "obj2": 0.3881956522486626}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( PN - AMS ) ) - ( RRS + Const ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( ( MUM - ( ( ( DS + ( MLU - MUC ) ) * Max( Min( MUC ,MUR ),( DS - DS ) ) ) + RRSe ) ) / ( ( MUM / ( ( MUC - Min( CS ,MUR ) ) * ( ( RCSe - MUR ) / Min( MUR ,MUR ) ) ) ) + ( ( ( ( RCSe - MUR ) - ( MUC * MUR ) ) / RMSe ) / DS ) ) ) / DS ) )", "obj1": 0.24153498871331827, "obj2": 0.6404094214822845}, {"determining": "Max( ( FirstVNF_Mem + ( Const / FirstVNF_RAM ) ),( FirstVNF_RAM / ( Max( ( FirstVNF_Mem + ( Const / FirstVNF_RAM ) ),( FirstVNF_RAM / ( ACS - PN ) ) ) - PN ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( DS + ( RRSe - RRSe ) ) )", "obj1": 0.6952595936794582, "obj2": 0.24301533946600476}, {"determining": "Max( FirstVNF_Mem,Min( FirstVNF_CPU_Server ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU + RMSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( Max( RCSe,( RMSe - ( RMSe + MUM ) ) ) / MUM ) ) )", "obj1": 0.345372460496614, "obj2": 0.5695507409083718}, {"determining": "( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) / Min( Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Max( Min( MLU ,MUR ),( RMSe * RCSe ) ) * ( MUC - ( MLU + Max( ( MUR * CS ),RMSe ) ) ) )", "obj1": 0.3160270880361174, "obj2": 0.5936134593285014}, {"determining": "( Max( MRS,( Max( FirstVNF_Mem_Server,ACS ) * FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,Min( Max( MLU,CS ) ,MUM ) ) )", "obj1": 0.4853273137697517, "obj2": 0.43084091886553133}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,( FirstVNF_RAM_Server * ( ACS - PN ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( MUM * MUR ) + Max( MUM,( MUM - MLU ) ) ) )", "obj1": 0.9616252821670429, "obj2": 0.027688705166580754}, {"determining": "( ( Max( RRS,Max( ARS,( ACS * FirstVNF_Mem ) ) ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),PN ) )", "choosing": "Max( Max( ( RCSe + ( CS + MUM ) ),( MUR * MLU ) ),( ( MLU + RRSe ) / DS ) )", "obj1": 0.24153498871331827, "obj2": 0.6404094214822845}, {"determining": "( Min( ( MRS / RRS ) ,( FirstVNF_CPU_Server * RRS ) ) * ( ( PN - ( CRS + DDR ) ) - ( Const - ( ( ( FirstVNF_CPU_Server + CRS ) * FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) )", "choosing": "( Max( DS,Max( Max( ( ( DS / RCSe ) / ( RMSe * RMSe ) ),( ( ( RMSe - MLU ) + ( MUC + ( MUM - MUR ) ) ) + DS ) ),MUC ) ) / ( MUC / ( MLU / RMSe ) ) )", "obj1": 0.435665914221219, "obj2": 0.4786557723618735}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - ( FirstVNF_CPU / ( Const * FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUC,RMSe ) * RMSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( AMS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - MUM ) )", "obj1": 0.510158013544018, "obj2": 0.4194586682536546}, {"determining": "Min( ( PN / BR ) ,( Min( Max( ACS,RRS ) ,Max( Min( Max( ACS,RRS ) ,Max( ACS,RRS ) ),RRS ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / DS ) / ( ( CS - ( ( DS / DS ) / ( CS - RMSe ) ) ) - ( ( DS / DS ) / ( CS - RMSe ) ) ) )", "obj1": 0.4492099322799097, "obj2": 0.4770965104013033}, {"determining": "( ( ( RRS * ACS ) - Min( BR ,AMS ) ) / ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( Min( MLU ,MUR ),( RMSe * RCSe ) ) * Min( MUC ,MUR ) )", "obj1": 0.6884875846501128, "obj2": 0.25811794271463673}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.4582392776523702, "obj2": 0.45757195034361875}, {"determining": "Min( ( PN / BR ) ,( Min( Max( ACS,RRS ) ,Max( ACS,( FirstVNF_CPU_Server / ACS ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( DS / DS ) / ( CS - ( ( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) ) / ( CS - RMSe ) ) ) )", "obj1": 0.4672686230248307, "obj2": 0.45643706428626113}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( MRS * FirstVNF_CPU ) )", "choosing": "Max( ( MUC + ( ( DS * MUR ) + RCSe ) ),( MUC + RMSe ) )", "obj1": 0.5417607223476298, "obj2": 0.40461970693856864}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + Min( ( FirstVNF_RAM_Server + Min( Max( ( CRS * PN ),FirstVNF_Mem ) ,Max( AMS,DDR ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / ( RMSe * MLU ) ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "Min( ( PN / Max( CRS,( MRS + DDR ) ) ) ,Max( RRS,AMS ) )", "choosing": "( ( DS / MUM ) / ( CS - ( ( Max( MUM,( Min( ( RRSe / MUM ) ,RMSe ) + ( ( MUM * MLU ) - MLU ) ) ) - Max( RCSe,RMSe ) ) - MLU ) ) )", "obj1": 0.5733634311512416, "obj2": 0.3431980100598658}, {"determining": "( Min( ( ACS / ( BR + ( ACS / ( ARS + FirstVNF_CPU ) ) ) ) ,( ACS / ( BR + ( ( Max( AMS,FirstVNF_RAM_Server ) - ( ( MDR - FirstVNF_Mem_Server ) / Max( DDR,MDR ) ) ) / ( ARS + FirstVNF_CPU ) ) ) ) ) - Max( BR,ACS ) )", "choosing": "Min( RCSe ,( Min( RRSe ,MLU ) / DS ) )", "obj1": 0.9774266365688488, "obj2": 0.02621746685141921}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( FirstVNF_CPU_Server ,( ARS + FirstVNF_RAM ) ) ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / ( ( MLU + RMSe ) / Max( MLU,MUR ) ) ) )", "obj1": 0.32505643340857787, "obj2": 0.5883378072823569}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3431151241534989, "obj2": 0.5753739430168371}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,Max( MUM,MUR ) )", "obj1": 0.5259593679458239, "obj2": 0.42459727405707715}, {"determining": "( ( ( AMS * DDR ) * DDR ) - Max( ( ( AMS * DDR ) - Max( FirstVNF_CPU,Min( ( DDR + ARS ) ,( DDR * FirstVNF_RAM_Server ) ) ) ),FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,( MLU / DS ) ) ,Min( CS ,MUM ) )", "obj1": 0.9909706546275395, "obj2": 0.008393994066213049}, {"determining": "( ( AMS * DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( MLU - Min( ( RMSe * MUR ) ,Min( DS ,MLU ) ) ) )", "obj1": 0.9796839729119639, "obj2": 0.014465558268548059}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( DDR + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.5237020316027088, "obj2": 0.4168398688200789}, {"determining": "( Min( AMS ,BR ) + FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUR ) + Min( Min( MUR ,DS ) ,RCSe ) )", "obj1": 0.5372460496613995, "obj2": 0.4134977541082568}, {"determining": "( ( ( Max( Max( AMS,Max( BR,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server + ( ( ARS / ACS ) * RRS ) ) ,DDR ) ) - DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( ( RRSe + DS ) - Max( MLU,RRSe ) ) * Min( ( Max( RCSe,( RCSe * RMSe ) ) * MUR ) ,Max( MLU,( Max( RRSe,( MLU + MUC ) ) - ( CS - RRSe ) ) ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0010921176513893009}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * MUR ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( ( FirstVNF_RAM + CRS ) * ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( DS - MLU ) ,( DS - CS ) )", "obj1": 0.963882618510158, "obj2": 0.026968141577658023}, {"determining": "( Min( AMS ,BR ) + FirstVNF_Mem_Server )", "choosing": "( ( MUM * MUR ) + Min( Min( MUR ,DS ) ,RCSe ) )", "obj1": 0.5372460496613995, "obj2": 0.4134977541082568}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) ) ) - Max( Max( BR,FirstVNF_RAM ),PN ) )", "choosing": "Max( Max( ( RMSe * RMSe ),( MUR * MLU ) ),( ( MLU + RRSe ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( Max( Const,FirstVNF_Mem_Server ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( ( CS * MUM ) + ( MUC - RRSe ) ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,Const ) * ( RRS - ARS ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( ( ARS * AMS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( Max( RCSe,DS ) ,( MUR - MUR ) ) * ( RRSe + MUM ) ),Max( ( RMSe + CS ),( MUC * Min( DS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( AMS,Max( BR,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) / Min( ( FirstVNF_RAM_Server + ( ( ARS / ACS ) * RRS ) ) ,DDR ) ) - DDR ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( ( ( RRSe + DS ) - Max( MLU,RRSe ) ) * Min( ( Max( RCSe,( RCSe * RMSe ) ) * MUR ) ,Max( MLU,( Max( RRSe,( MLU + MUC ) ) - ( CS - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( FirstVNF_Mem_Server - ( DDR / ( AMS + ( Min( ( FirstVNF_RAM_Server + MDR ) ,Const ) / Const ) ) ) ) )", "choosing": "Max( ( MUC + RCSe ),( MUC * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( PN,Max( Min( FirstVNF_RAM_Server ,BR ),Max( CRS,FirstVNF_Mem ) ) ) ) / ( DDR + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "Max( ( RMSe * MUR ),Max( ( Min( RCSe ,CS ) / ( Min( MUC ,( MLU / MLU ) ) * RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( ( MUM - RRSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,CRS ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( ( Min( MUM ,MUR ) * RCSe ) * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( AMS * FirstVNF_Mem ) ) ,( PN + MRS ) ) - Max( BR,( BR + FirstVNF_RAM ) ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( Min( RRSe ,Min( ( Min( MUC ,Max( MUM,Max( DS,CS ) ) ) * ( ( ( MLU * MLU ) / RMSe ) - RRSe ) ) ,( DS / RCSe ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * MUR ) ,Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / Max( Max( FirstVNF_CPU,FirstVNF_CPU ),( FirstVNF_RAM / DDR ) ) )", "choosing": "Max( Min( ( RRSe - MLU ) ,( DS + MLU ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Max( PN,Max( Min( FirstVNF_RAM_Server ,BR ),Max( CRS,FirstVNF_Mem ) ) ) ) / ( DDR + Min( FirstVNF_RAM ,MRS ) ) )", "choosing": "Max( ( RMSe * MUR ),Max( ( Min( RCSe ,CS ) / ( Min( MUC ,( MLU / MLU ) ) * RMSe ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Const ,RRS ) + ( ACS + ( FirstVNF_Mem_Server - ACS ) ) ) ,( ( ACS / ARS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RMSe ) * ( MUR + CS ) ),( ( MUM - RRSe ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) ) ,( DDR + MDR ) ) * ( ( ARS + ACS ) / ( Const + Const ) ) )", "choosing": "Min( Max( Min( RRSe ,MLU ),( RRSe - MUC ) ) ,( ( MUM + MLU ) + ( RCSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( Const + Const ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RRSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server / Min( FirstVNF_RAM_Server ,RRS ) ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( ( RCSe * RMSe ) + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( MDR ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( MUC / RCSe ) ,CS ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - AMS ) - ( Const - MRS ) ) / ( FirstVNF_Mem / RRS ) )", "choosing": "( ( ( RRSe / MUC ) - ( MLU / RMSe ) ) / MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - AMS ) - ( Const - MRS ) ) * Min( Const ,MRS ) ) ,( Max( RRS,RRS ) + ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( CS * MUM ) + ( MUC - RRSe ) ),( ( DS / RMSe ) * ( RCSe * Max( MUR,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * ( RRS - FirstVNF_RAM ) )", "choosing": "( RRSe - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,FirstVNF_CPU ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + ( CS / DS ) ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( ( ( MRS * FirstVNF_CPU ) + ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - ( ( AMS * MDR ) - ( MRS + AMS ) ) ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( CS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( Max( ( MUM - DS ),Max( RRSe,RCSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,Const ) * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( ( MUC - RCSe ) * ( DS / RRSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( ( RRSe + MUM ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,( Max( ( ARS + PN ),Max( CRS,FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,( Max( ( ARS + PN ),Max( CRS,FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_Mem_Server - MRS ) ,( AMS - CRS ) ) ) ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( DDR ,CRS ) + ( ACS + FirstVNF_RAM ) ) - Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS * CRS ) ) ) ,Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) ) )", "choosing": "( ( Max( Min( RCSe ,MUM ),( MUM * MUR ) ) / ( ( DS * MUM ) / ( RRSe - ( ( RCSe - DS ) / Max( RRSe,MLU ) ) ) ) ) * Max( ( Max( DS,RCSe ) * ( MUM + MUM ) ),Min( Max( RCSe,RCSe ) ,( MUC * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( DDR / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( MUM * Max( RCSe,Max( MUC,CS ) ) ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( ( BR / ACS ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) ) )", "choosing": "Min( ( DS - MUC ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ACS * ( PN + ( ( Const * ARS ) - FirstVNF_CPU_Server ) ) ) ,Max( ( DDR - Max( ( BR / ACS ),RRS ) ),MDR ) )", "choosing": "Min( ( ( ( RMSe - ( CS + Max( MUC,RMSe ) ) ) + ( RRSe + RMSe ) ) - ( ( RMSe + RRSe ) * Max( MUC,DS ) ) ) ,( ( ( MUR / RCSe ) + ( MUC - MUM ) ) / ( ( MUM + DS ) * Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - ( Min( FirstVNF_CPU_Server ,MDR ) + Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( ( MUR * RCSe ) * ( Max( Min( RMSe ,MUC ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + BR ) / MDR ) )", "choosing": "( ( MLU - ( MUR - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) - ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) / MDR ) ) / BR ) * ( BR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC - Min( RMSe ,MUR ) ) ,Min( MUM ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) * ( Max( ARS,FirstVNF_Mem_Server ) + ( Const + BR ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( RMSe,RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,CRS ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( ( Min( MUM ,MUR ) * RCSe ) * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) - ( CRS + Min( ( ARS / Max( AMS,FirstVNF_Mem ) ) ,AMS ) ) )", "choosing": "Min( Min( CS ,CS ) ,( MUM / Min( ( ( DS - Max( RCSe,( RRSe - MUC ) ) ) - Max( MUR,( ( Max( MUM,MLU ) / ( RCSe - CS ) ) - MUR ) ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * Max( CRS,( ( MDR - CRS ) * RRS ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( RMSe,RMSe ) ,Min( ( MUR + ( ( CS + MLU ) / MUR ) ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,( ( Const * MDR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Min( ( ( MUM - ( MUM - DS ) ) * ( RRSe * MUR ) ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - FirstVNF_Mem_Server )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_Mem_Server,ACS ) * FirstVNF_RAM_Server ),CRS ) + ( PN - ACS ) )", "choosing": "( Min( ( RRSe - CS ) ,Max( MLU,CS ) ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,( FirstVNF_RAM_Server * RRS ) ) )", "choosing": "Min( ( RMSe * MUR ) ,( ( MUM * MUR ) + Max( MUM,( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( ( ARS / ARS ) / ( ( CRS + Const ) * ( CRS - Max( RRS,( CRS + Min( FirstVNF_Mem_Server ,AMS ) ) ) ) ) ) ) - ( CRS + AMS ) )", "choosing": "Min( Max( ( MUM * MUR ),RMSe ) ,Min( ( MUR + DS ) ,Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}]}