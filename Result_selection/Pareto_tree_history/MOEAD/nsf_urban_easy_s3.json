{"1": [{"determining": "Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( DS * RCSe ) / Min( CS ,RRSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5128224882542715}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MLU ,RCSe ),( MUM + RRSe ) )", "obj1": 0.2773279352226721, "obj2": 0.6337425697064373}, {"determining": "( ( FirstVNF_CPU + Const ) / ( FirstVNF_RAM_Server - RRS ) )", "choosing": "( Max( DS,RMSe ) * ( MLU + MUR ) )", "obj1": 0.2692307692307692, "obj2": 0.6466103551471942}, {"determining": "( Min( ( FirstVNF_CPU_Server + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / ( RCSe + RMSe ) )", "obj1": 0.4251012145748988, "obj2": 0.5077250861057228}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) - Min( PN ,PN ) )", "choosing": "( ( MLU / DS ) + Min( CS ,CS ) )", "obj1": 0.08906882591093117, "obj2": 0.7876144869497492}, {"determining": "Min( ( PN + PN ) ,( FirstVNF_Mem / FirstVNF_Mem_Server ) )", "choosing": "Max( ( MLU - DS ),Max( RCSe,RMSe ) )", "obj1": 0.2631578947368421, "obj2": 0.6581274800878263}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( ARS - Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,Min( ( Min( MUC ,DS ) - RMSe ) ,MLU ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / RCSe ) + Min( RCSe ,MLU ) )", "obj1": 0.26720647773279355, "obj2": 0.6490594066574743}, {"determining": "( Min( ( BR * MRS ) ,MDR ) - Min( ( BR + MDR ) ,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( ( Max( MLU,CS ) - RCSe ) ,Max( ( MUM / ( ( DS - CS ) - MUC ) ),( ( Min( MLU ,RCSe ) + MLU ) - CS ) ) ),( RRSe / Max( ( MUM / MUM ),( MUR - MLU ) ) ) ) ,Min( Max( CS,( Max( DS,Min( ( MUR * RCSe ) ,( ( MUC / MUC ) + Max( DS,MLU ) ) ) ) * Max( CS,MUC ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,ACS ) + ( FirstVNF_CPU / CRS ) )", "choosing": "( ( MUC * CS ) + ( CS * DS ) )", "obj1": 0.3724696356275304, "obj2": 0.5893504765307388}, {"determining": "( ( AMS / AMS ) - Max( FirstVNF_RAM,RRS ) )", "choosing": "( ( RCSe / DS ) + ( RRSe + MUM ) )", "obj1": 0.09716599190283401, "obj2": 0.7794606631542517}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Max( RCSe,RCSe ) - ( MUC + RMSe ) )", "obj1": 0.242914979757085, "obj2": 0.7076490858269692}, {"determining": "Min( Min( PN ,PN ) ,( Const * FirstVNF_Mem ) )", "choosing": "( Min( MUM ,RMSe ) + ( RCSe * DS ) )", "obj1": 0.354251012145749, "obj2": 0.5673930337640878}, {"determining": "( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_RAM_Server + AMS ) )", "choosing": "( Min( RMSe ,CS ) - Max( MUM,RMSe ) )", "obj1": 0.25101214574898784, "obj2": 0.7431601574959871}, {"determining": "( ( FirstVNF_Mem_Server / BR ) + Min( BR ,PN ) )", "choosing": "( ( RMSe / MUC ) + Max( MUC,RCSe ) )", "obj1": 0.26720647773279355, "obj2": 0.6420621580885336}, {"determining": "( ( Const * DDR ) + Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "Min( ( MLU - MUC ) ,Max( CS,CS ) )", "obj1": 0.291497975708502, "obj2": 0.6663114634964014}, {"determining": "( Max( FirstVNF_Mem,DDR ) + ( BR / FirstVNF_Mem ) )", "choosing": "( Max( MUM,DS ) * ( MUC * RMSe ) )", "obj1": 0.27125506072874495, "obj2": 0.6420960948251272}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) + ( FirstVNF_CPU / ACS ) )", "choosing": "Min( ( MLU - MUC ) ,( MUM + MUM ) )", "obj1": 0.11538461538461539, "obj2": 0.7026554774739436}, {"determining": "( ( PN + AMS ) * ( ACS / MDR ) )", "choosing": "( ( RMSe + MLU ) + ( MUM - MLU ) )", "obj1": 0.2894736842105263, "obj2": 0.6382866068098884}, {"determining": "( Min( CRS ,ACS ) - ( BR + MRS ) )", "choosing": "( ( RRSe - MUR ) - Min( CS ,DS ) )", "obj1": 0.5404858299595142, "obj2": 0.4058967229110149}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) / ( BR / FirstVNF_Mem_Server ) )", "choosing": "( ( CS + MUR ) * Min( RCSe ,RRSe ) )", "obj1": 0.29554655870445345, "obj2": 0.6309421912848642}, {"determining": "( ( Const / MRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "Max( ( RMSe - MUR ),( CS / MUR ) )", "obj1": 0.20242914979757085, "obj2": 0.8361906654450365}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) * ( CRS / PN ) )", "choosing": "( ( RMSe + RMSe ) * ( RCSe * RMSe ) )", "obj1": 0.25708502024291496, "obj2": 0.6566220310811928}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.11538461538461539, "obj2": 0.7001265397547616}, {"determining": "Min( ( MRS / FirstVNF_RAM_Server ) ,Min( CRS ,MDR ) )", "choosing": "( Max( RMSe,MUC ) + ( MUM + MLU ) )", "obj1": 0.2611336032388664, "obj2": 0.667740708224011}, {"determining": "( ( FirstVNF_Mem + DDR ) / Min( FirstVNF_Mem ,( Min( ACS ,DDR ) + Min( PN ,Max( ( RRS + ARS ),Min( PN ,ARS ) ) ) ) ) )", "choosing": "( Max( RRSe,MUC ) - ( MUM - ( RRSe / Min( Max( MUC,RRSe ) ,RRSe ) ) ) )", "obj1": 0.29959514170040485, "obj2": 0.6549864069320402}, {"determining": "( ( Min( ( CRS + ( AMS + FirstVNF_Mem ) ) ,Max( Max( ( ACS - FirstVNF_CPU_Server ),ARS ),CRS ) ) / Min( Min( MDR ,MDR ) ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RRSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( MLU * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( DS - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 0.19230769230769232, "obj2": 0.8522353634229126}, {"determining": "Min( Max( PN,FirstVNF_CPU_Server ) ,Max( ARS,AMS ) )", "choosing": "( ( MLU - MLU ) - ( MLU / CS ) )", "obj1": 0.23279352226720648, "obj2": 0.7471599707759119}, {"determining": "( ( BR / PN ) / ( PN + DDR ) )", "choosing": "Max( Max( CS,MUC ),( MLU / MUM ) )", "obj1": 0.27530364372469635, "obj2": 0.6936263993338635}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Min( MUM ,RRSe ) ,Min( CS ,RCSe ) )", "obj1": 0.3441295546558704, "obj2": 0.5878464076952552}, {"determining": "Max( Min( DDR ,DDR ),Min( Const ,DDR ) )", "choosing": "( ( MUC / RCSe ) / ( CS - MUM ) )", "obj1": 0.1862348178137652, "obj2": 0.8108503537997909}, {"determining": "( ( MRS - Const ) + ( ARS + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( CS - RMSe ) + ( ( MUC / CS ) * RCSe ) )", "obj1": 0.08704453441295547, "obj2": 0.7960394532128413}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( MDR - ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem / FirstVNF_RAM ) ) + ( BR * ( CRS - AMS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( ( DS + MUR ) * ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( CRS ,BR ),( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,Min( CS ,DS ) ) )", "obj1": 0.3805668016194332, "obj2": 0.5239077166715586}, {"determining": "( Min( Min( BR ,Const ) ,( ACS + PN ) ) + ( ( BR + ARS ) - Max( FirstVNF_RAM,RRS ) ) )", "choosing": "Max( Min( CS ,RMSe ),( RRSe * RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.625668961516989}, {"determining": "( ( FirstVNF_CPU / ACS ) * Max( FirstVNF_RAM,ACS ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,CS ) * ( ( MUC + MUR ) + MUM ) )", "obj1": 0.2550607287449393, "obj2": 0.6724789971242385}, {"determining": "Max( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,( BR / FirstVNF_Mem ) ),( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( MDR * RRS ) ) )", "choosing": "( ( RMSe * DS ) + Min( ( MUR - RCSe ) ,RCSe ) )", "obj1": 0.37044534412955465, "obj2": 0.5655723545874863}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( DS * Max( Min( MUR ,( MUC - RCSe ) ),MUC ) ) - ( MUM / RCSe ) )", "obj1": 0.2631578947368421, "obj2": 0.6480896781757393}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server - ( ( Max( Const,FirstVNF_RAM ) - Max( DDR,FirstVNF_CPU ) ) + AMS ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU ) )", "choosing": "( Min( ( MUM + RRSe ) ,Max( MLU,MLU ) ) + ( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) / ( Min( ( RCSe - RMSe ) ,Min( ( ( DS - ( RCSe - MLU ) ) / Max( Max( DS,CS ),DS ) ) ,( ( ( MUC / MUR ) * MUR ) - CS ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * AMS ) ,( AMS + FirstVNF_RAM_Server ) ) ,( Min( MDR ,FirstVNF_Mem_Server ) * ( RRS + Const ) ) )", "choosing": "( ( DS / RCSe ) - Min( MUR ,( MLU + DS ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6812153346839519}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.21862348178137653, "obj2": 0.6918853296255758}, {"determining": "Min( ( Min( Max( PN,Min( ACS ,Min( Min( Min( MRS ,PN ) ,CRS ) ,ACS ) ) ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + RRS ) ) ,Min( ( ( MRS + Min( DDR ,Min( ( AMS + Min( MRS ,MRS ) ) ,AMS ) ) ) / Min( ( MDR * MRS ) ,PN ) ) ,( DDR - MDR ) ) )", "choosing": "( ( CS - MUR ) / ( Max( ( MUR * MUM ),RMSe ) / ( RRSe + Min( Min( Max( ( CS / ( MUM * MLU ) ),( RRSe / DS ) ) ,RRSe ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * BR ) + ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe * DS ),( MUR - MLU ) ) / Max( ( RMSe + MUC ),Min( CS ,MUC ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6443204732610726}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + Max( Const,Max( DDR,FirstVNF_RAM_Server ) ) ) * Min( Min( ( Const / Max( ARS,Max( PN,RRS ) ) ) ,( FirstVNF_RAM + ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( RMSe ,( ( CS + Min( MLU ,MUM ) ) / ( Min( MLU ,RRSe ) / ( RCSe * ( Min( MUM ,MUC ) + ( MUM + DS ) ) ) ) ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( Max( ( MRS * Min( ( ( AMS - ( Const / CRS ) ) * RRS ) ,BR ) ),( FirstVNF_CPU_Server / FirstVNF_RAM ) ),ACS ) )", "choosing": "( ( MUR * RRSe ) / ( ( ( CS + Min( Min( MUR ,Min( Max( MUC,CS ) ,( MUM * MUR ) ) ) ,RCSe ) ) - RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.917004048582996, "obj2": 0.07925806379548132}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "Max( ( Max( Const,MDR ) + ( Min( FirstVNF_Mem ,ACS ) * ACS ) ),Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( DS * MUR ) + Max( MUR,( Max( RMSe,( Min( ( MLU + ( MUR + RCSe ) ) ,CS ) + ( Min( Max( MUC,MUR ) ,RCSe ) + MLU ) ) ) * CS ) ) )", "obj1": 0.37044534412955465, "obj2": 0.5564006567470489}, {"determining": "( Max( ( CRS + ACS ),( AMS + RRS ) ) - ( ( FirstVNF_RAM_Server + MRS ) * Min( FirstVNF_Mem ,MRS ) ) )", "choosing": "( ( RMSe - MLU ) * Min( DS ,( RMSe + MUR ) ) )", "obj1": 0.2125506072874494, "obj2": 0.7078370727658152}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / ( ( DDR / DDR ) + ACS ) )", "choosing": "( Max( RMSe,RCSe ) - Max( ( CS * MLU ),MUC ) )", "obj1": 0.1902834008097166, "obj2": 0.7174741719081926}, {"determining": "( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( DDR - FirstVNF_CPU_Server ) ) - Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU * Const ) ) )", "choosing": "( ( RCSe + ( RMSe * RMSe ) ) - Max( ( RMSe - RMSe ),MLU ) )", "obj1": 0.20647773279352227, "obj2": 0.703560414106887}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - RMSe ) - Max( DS,DS ) ) )", "obj1": 0.5404858299595142, "obj2": 0.40264863865632533}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) / Min( MRS ,ARS ) ) - Min( ( MRS + CRS ) ,( FirstVNF_Mem_Server / MDR ) ) )", "choosing": "( ( Max( RCSe,DS ) / ( MUR + RRSe ) ) / ( ( RRSe - RRSe ) * Max( MUR,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( PN ,MDR ) / ( DDR - FirstVNF_RAM_Server ) ),( ( ARS * FirstVNF_CPU_Server ) / ( FirstVNF_RAM / BR ) ) )", "choosing": "( Min( CS ,DS ) - ( RMSe - ( RRSe / MUM ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6832839089409211}, {"determining": "Max( ( ( ACS / CRS ) - Max( FirstVNF_RAM_Server,PN ) ),Min( ( FirstVNF_CPU / Const ) ,( FirstVNF_CPU_Server + RRS ) ) )", "choosing": "( ( CS + ( MUR * DS ) ) + ( ( RCSe + MUM ) + Max( RCSe,DS ) ) )", "obj1": 0.32388663967611336, "obj2": 0.61084627926362}, {"determining": "( ( BR - MDR ) - ( FirstVNF_Mem - ( MDR / MDR ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( RCSe,MLU ) ) ,( ( MUM * MLU ) - MUC ) )", "obj1": 0.3785425101214575, "obj2": 0.5821524173561295}, {"determining": "Min( ( AMS + FirstVNF_CPU_Server ) ,( Const / FirstVNF_CPU ) )", "choosing": "( ( RCSe + DS ) / Max( MUM,RCSe ) )", "obj1": 0.3724696356275304, "obj2": 0.5732200261146002}, {"determining": "( ( Max( AMS,FirstVNF_Mem ) + ( MRS / FirstVNF_CPU_Server ) ) * ( ( AMS - FirstVNF_CPU ) + ( DDR / Const ) ) )", "choosing": "( ( Min( RCSe ,MUC ) / Max( RCSe,MUM ) ) + ( ( MUM * RCSe ) + Max( DS,RMSe ) ) )", "obj1": 0.2773279352226721, "obj2": 0.638221129076824}, {"determining": "( Max( ( ( ( ( Const * ACS ) / PN ) - Max( PN,FirstVNF_RAM ) ) * FirstVNF_RAM ),MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "( ( MUC - Min( RRSe ,( ( ( DS - ( MUC * Min( MUR ,MUC ) ) ) + MUM ) * ( CS + MUR ) ) ) ) - ( MUM - ( MUM * MUC ) ) )", "obj1": 0.2125506072874494, "obj2": 0.6569132076136777}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,MDR ) )", "choosing": "( ( ( RMSe + CS ) - Min( MUC ,DS ) ) - ( ( ( Max( RCSe,MUR ) / ( ( RRSe * ( MLU - MLU ) ) - Min( ( RCSe + MUC ) ,MUC ) ) ) + DS ) - ( RMSe - MUR ) ) )", "obj1": 0.3117408906882591, "obj2": 0.6361334618791129}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_Mem_Server ) + Min( FirstVNF_RAM ,DDR ) ) / ( Min( CRS ,FirstVNF_Mem ) + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( MUM * MUR ) / Max( Max( MUC,MUM ),RCSe ) )", "obj1": 0.2874493927125506, "obj2": 0.618644028631246}, {"determining": "( ( Min( FirstVNF_CPU_Server ,MDR ) * ( MRS * FirstVNF_CPU ) ) * ( ( Const + ACS ) + ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( Min( MLU ,RCSe ) * ( CS + RMSe ) ) * ( Min( MUR ,MUC ) * ( MUC * RMSe ) ) )", "obj1": 0.2854251012145749, "obj2": 0.6369114544374975}, {"determining": "( Max( ( CRS / MDR ),( BR * CRS ) ) + ( ( BR * FirstVNF_CPU_Server ) + Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe - DS ) * Max( RCSe,Min( MLU ,RRSe ) ) )", "obj1": 0.15182186234817813, "obj2": 0.7431591266351018}, {"determining": "( ( ( ( BR / ( AMS * AMS ) ) + DDR ) / DDR ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) )", "choosing": "( Min( Min( RCSe ,MUC ) ,( MUR * DS ) ) / Max( ( ( Max( RMSe,CS ) / ( DS + ( RRSe + RMSe ) ) ) / RMSe ),( RCSe / MUR ) ) )", "obj1": 0.402834008097166, "obj2": 0.511176306431869}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU ) / ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Max( ( ( MLU / RCSe ) * ( RCSe * RCSe ) ),Min( Max( MLU,MLU ) ,Min( MUC ,DS ) ) )", "obj1": 0.24493927125506074, "obj2": 0.6633166698544335}, {"determining": "( ( Max( PN,( ( PN / FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) + DDR ) / ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Min( ( MUC * MUR ) ,( ( RRSe * RMSe ) + ( MUR + RRSe ) ) ) + Max( ( ( MUM + MLU ) - ( CS - MUR ) ),( ( RRSe + MUC ) * ( MUC - MUM ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.6526178465251442}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ( ( ( BR - MDR ) / ARS ) * RRS ) )", "choosing": "( ( ( Min( MUC ,MUC ) + ( CS / RMSe ) ) - ( ( DS * RCSe ) * Max( MUR,RMSe ) ) ) - ( ( ( RMSe * MUM ) / Min( RMSe ,DS ) ) - ( ( MUC / RRSe ) / ( MUR - RMSe ) ) ) )", "obj1": 0.291497975708502, "obj2": 0.6922333008706938}, {"determining": "Min( ( Min( Max( PN,DDR ) ,Max( Const,PN ) ) / Min( ( Const * DDR ) ,Max( RRS,FirstVNF_CPU_Server ) ) ) ,( ( ( PN / ARS ) * Max( FirstVNF_CPU_Server,Const ) ) / Max( ( FirstVNF_Mem - Const ),( RRS / FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( ( DS - DS ) - CS ) + ( MLU / RMSe ) ),( RCSe * MUM ) )", "obj1": 0.2732793522267207, "obj2": 0.6284312112539658}, {"determining": "( Max( ( Min( DDR ,Const ) / ( MDR + ACS ) ),( ( FirstVNF_Mem / MDR ) * ( BR / DDR ) ) ) - Min( Min( ( MDR * MDR ) ,( FirstVNF_CPU_Server / Const ) ) ,( ( FirstVNF_RAM - CRS ) / ( MRS - FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RMSe * Max( MLU,RCSe ) ) / RRSe ),( ( MUR * ( MLU * RCSe ) ) - Min( RRSe ,( MUR - MUM ) ) ) )", "obj1": 0.17611336032388664, "obj2": 0.8082412863845331}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.37694756248107697}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( AMS ,MDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) + Max( ( BR - AMS ),( FirstVNF_RAM - CRS ) ) ) + ( CRS + MRS ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + MUC ) ) + ( ( RMSe * CS ) - MUC ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.29554655870445345, "obj2": 0.6218002741744703}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "( ( ( ( RCSe * DS ) + ( MUR + MUC ) ) * ( ( RRSe * RMSe ) - Min( MUR ,MUR ) ) ) / Min( ( ( DS * RCSe ) * Min( RRSe ,CS ) ) ,Min( Max( MUR,MLU ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / DDR ) * ( FirstVNF_CPU_Server / RRS ) ) - Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( FirstVNF_RAM * BR ) ) ,Min( ( PN / Const ) ,Min( ACS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem / MRS ) ) - ( Min( RRS ,ARS ) - Min( CRS ,FirstVNF_CPU ) ) ) * ( Max( ( FirstVNF_RAM_Server + Const ),( FirstVNF_RAM + ARS ) ) + Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),Max( FirstVNF_Mem,PN ) ) ) )", "choosing": "( ( ( ( MUR + RMSe ) - ( MLU * RMSe ) ) * Min( CS ,RRSe ) ) + Min( MUC ,( RRSe / RRSe ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6854232316448241}, {"determining": "( ( CRS / ARS ) + ( RRS / FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( DS - MLU ) ,( MLU / MUM ) ) + ( Min( DS ,MLU ) / ( RMSe + MUR ) ) ) ,Max( ( ( RCSe - DS ) + ( MLU + MUM ) ),Min( Min( MLU ,RRSe ) ,( RMSe / MUR ) ) ) )", "obj1": 0.242914979757085, "obj2": 0.6835836984578956}, {"determining": "( ( ( ( Const / FirstVNF_CPU ) * Min( ARS ,MDR ) ) + ( ( FirstVNF_Mem_Server - MDR ) + ( PN - BR ) ) ) - ( ( ( PN * MRS ) / ( AMS * ACS ) ) * ( Min( FirstVNF_Mem ,DDR ) + ( ACS - RRS ) ) ) )", "choosing": "( Max( Max( ( CS - DS ),Min( RRSe ,CS ) ),Min( ( RCSe + MLU ) ,( MUC - MUM ) ) ) + ( ( Min( RRSe ,RRSe ) + ( MUR * RCSe ) ) + ( ( MUM - RMSe ) + Max( MUC,MUC ) ) ) )", "obj1": 0.2975708502024291, "obj2": 0.6263927282181302}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) / ( AMS * Const ) ) - ( Min( MDR ,CRS ) - ( FirstVNF_CPU + PN ) ) ) + ( ( ( RRS / MRS ) * ( ARS * MDR ) ) + ( ( DDR - FirstVNF_CPU ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( MUC + MUC ) * Max( MUM,MUC ) ) ,Max( Max( RMSe,RCSe ),( MUM - MUR ) ) ) ,( Min( ( MLU / MUM ) ,Min( RRSe ,MUC ) ) / Min( ( MUR / MUC ) ,( MLU - DS ) ) ) )", "obj1": 0.2894736842105263, "obj2": 0.6321532214005453}, {"determining": "( ( ( ( FirstVNF_RAM_Server + PN ) * ( BR + BR ) ) + ( Max( RRS,AMS ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( Max( Max( DDR,BR ),( PN / CRS ) ) / Min( ( MRS - BR ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * Max( MLU,RCSe ) )", "obj1": 0.6700404858299596, "obj2": 0.3046338228423978}, {"determining": "( Max( Min( ACS ,( RRS / FirstVNF_CPU ) ),( Max( FirstVNF_CPU,Const ) - Max( MDR,MDR ) ) ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem ) + ( ARS / Const ) ) * ( ( DDR / FirstVNF_Mem_Server ) / Min( PN ,Const ) ) ) )", "choosing": "( Max( ( ( MUM * CS ) + ( MLU * RMSe ) ),( MUR / ( Max( MUC,( Max( RMSe,RCSe ) - Min( RCSe ,RRSe ) ) ) - MUC ) ) ) + ( ( ( RMSe / DS ) * ( MUR - RRSe ) ) / ( ( MUM * RMSe ) + ( RCSe / DS ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.690677699892899}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.0980620122233608}, {"determining": "Max( ( ( ( ARS + Min( FirstVNF_Mem_Server ,CRS ) ) + ARS ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_RAM ) ) ),( ( Max( ARS,FirstVNF_Mem_Server ) * ( AMS - MRS ) ) + Max( ( CRS + RRS ),Max( AMS,ARS ) ) ) )", "choosing": "( ( RCSe + RMSe ) - Min( ( RCSe * CS ) ,Max( Min( ( MUR / ( RMSe + RRSe ) ) ,MLU ),RRSe ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6132678687752842}, {"determining": "( Max( ( Max( Max( FirstVNF_Mem,AMS ),ACS ) / RRS ),( PN * FirstVNF_CPU_Server ) ) + ( Min( BR ,AMS ) * ( Max( RRS,ARS ) * Min( FirstVNF_CPU ,( MRS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( DS + DS ) ,( ( MLU - ( ( MUC + MLU ) * ( ( RCSe - RMSe ) - Min( MUR ,Min( MUR ,DS ) ) ) ) ) + ( RMSe + RMSe ) ) )", "obj1": 0.10931174089068826, "obj2": 0.712706651485258}, {"determining": "( ( Const * MDR ) * ( ( MDR / AMS ) - CRS ) )", "choosing": "Max( Min( Max( Max( RRSe,MUR ),( RRSe - RMSe ) ) ,( ( CS * CS ) + ( CS * RMSe ) ) ),( ( ( RRSe + CS ) + ( RCSe - RCSe ) ) / ( ( RRSe / CS ) / ( MUM + MUR ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.8182330599409355}, {"determining": "( ( FirstVNF_Mem_Server / Min( Max( FirstVNF_RAM,MDR ) ,MRS ) ) + Min( AMS ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RCSe + RCSe ) / ( MUC * RCSe ) ) ,( ( RMSe * MUC ) * ( RRSe + MUR ) ) ) + Max( ( ( CS + RRSe ) + Max( DS,RCSe ) ),( ( MLU - MUC ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.2834008097165992, "obj2": 0.6524477375774614}, {"determining": "Max( ( FirstVNF_Mem + AMS ),( Min( CRS ,( ( PN / ( CRS / Max( MDR,RRS ) ) ) + ACS ) ) / BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,( Max( MLU,( RMSe * MUM ) ) - CS ) ) + ( RRSe + ( MUM + MUC ) ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.10931174089068826, "obj2": 0.7040282695513016}, {"determining": "Max( ( CRS / FirstVNF_Mem_Server ),Min( Max( Const,FirstVNF_Mem_Server ) ,AMS ) )", "choosing": "( ( MLU + DS ) - ( Min( MUC ,MUR ) / ( Max( RRSe,Max( DS,RCSe ) ) + MUM ) ) )", "obj1": 0.11133603238866396, "obj2": 0.7816267931692942}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - Max( Max( RRS,Min( MRS ,RRS ) ),Min( ARS ,MDR ) ) )", "choosing": "Min( Max( MUR,( ( MLU / MUC ) / MUC ) ) ,Min( CS ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ACS + Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - MUR ) ,RMSe ) / Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( RRS * ( ARS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Min( ( MUM - MUC ) ,( MUM - RMSe ) ) * ( ( ( RCSe / ( RCSe + CS ) ) + MLU ) / ( CS - ( MUM / MLU ) ) ) ),( Min( Min( MUM ,RMSe ) ,( MUR - RMSe ) ) / ( ( RMSe / MLU ) * ( MUR / DS ) ) ) )", "obj1": 0.5141700404858299, "obj2": 0.423843854227582}, {"determining": "( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( ( ( ARS * AMS ) / DDR ) * CRS ) )", "choosing": "( ( ( ( MUC - Min( DS ,DS ) ) - MUM ) + MLU ) - Min( Max( Min( MUC ,CS ),( MUR * RMSe ) ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ACS - FirstVNF_RAM ) ,AMS ) * FirstVNF_RAM ) ,Max( ( PN + BR ),PN ) )", "choosing": "( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5779262965233699}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / RRSe ) )", "obj1": 0.24696356275303644, "obj2": 0.6713751347967798}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "Max( ( AMS * PN ),Min( AMS ,Const ) )", "choosing": "Max( ( Min( ( RRSe * MLU ) ,( MLU * RRSe ) ) + RCSe ),( MUC + Max( Max( RCSe,CS ),( MUR / RMSe ) ) ) )", "obj1": 0.30364372469635625, "obj2": 0.6514636811048643}], "2": [{"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,BR ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( ( MUR - RCSe ) - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR * MRS ) ,MDR ) - Min( ( BR + MDR ) ,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( ( Max( MLU,CS ) - RCSe ) ,Max( ( MUM / ( ( DS - CS ) - MUC ) ),( ( Min( MLU ,RCSe ) + MLU ) - CS ) ) ),( RRSe / Max( ( MUM / MUM ),( MUR - MLU ) ) ) ) ,Min( Max( CS,( Max( DS,Min( ( MUR * RCSe ) ,( ( MUC / MUC ) + Max( DS,MLU ) ) ) ) * Max( CS,MUC ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( MLU / ( MUM + DS ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7265073726362229}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.09806201222336078}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * ( CS * MLU ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.32503586753480657}, {"determining": "Max( ( Const + Min( FirstVNF_Mem ,( FirstVNF_Mem + DDR ) ) ),( FirstVNF_RAM_Server / ( Max( ( FirstVNF_RAM_Server - BR ),( Min( CRS ,( Const + ACS ) ) - BR ) ) - AMS ) ) )", "choosing": "( ( ( RRSe * ( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - Min( MUR ,MUC ) ) ) - ( ( ( MUC - RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) ) ) / DS ) - Min( MLU ,MLU ) )", "obj1": 0.1882591093117409, "obj2": 0.6816321334111606}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / ( ( DDR / DDR ) + ACS ) ),( DDR - FirstVNF_CPU_Server ) ) - Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU * Const ) ) )", "choosing": "( ( RCSe + ( RMSe * RMSe ) ) - Max( ( RMSe - Max( RMSe,RCSe ) ),MLU ) )", "obj1": 0.5020242914979757, "obj2": 0.4144286449590796}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.11538461538461539, "obj2": 0.7001265397547616}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.2549959501932851}, {"determining": "Min( ( Min( ( ACS - FirstVNF_RAM ) ,AMS ) * FirstVNF_RAM ) ,Max( ( PN + BR ),PN ) )", "choosing": "( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5779262965233699}, {"determining": "Min( ( AMS + ( MDR / MDR ) ) ,( Const / FirstVNF_CPU ) )", "choosing": "( ( RCSe + ( ( RMSe * RCSe ) + Max( RCSe,MLU ) ) ) / Max( MUM,RCSe ) )", "obj1": 0.23279352226720648, "obj2": 0.6552337358355483}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( ( BR + ACS ) / FirstVNF_CPU_Server ) * RRS ) ,BR ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / Max( CS,( DS - MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.07778541417624427}, {"determining": "Max( Min( CRS ,BR ),( FirstVNF_RAM_Server - ARS ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,Min( CS ,DS ) ) )", "obj1": 0.3805668016194332, "obj2": 0.5239077166715586}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe * DS ) / Max( RMSe,DS ) )", "obj1": 0.4311740890688259, "obj2": 0.5029610508278953}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "( ( MRS - Const ) + ( ARS + MDR ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.354251012145749, "obj2": 0.5476243883538581}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - RMSe ) - Max( DS,DS ) ) )", "obj1": 0.5404858299595142, "obj2": 0.40264863865632533}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( Max( Const,( Const / FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),ACS ) )", "choosing": "( ( MUC * RRSe ) / ( RRSe - Min( ( Min( DS ,MUM ) * RCSe ) ,MUM ) ) )", "obj1": 0.951417004048583, "obj2": 0.050474885393034394}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( ARS - Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,Min( ( Min( MUC ,DS ) - RMSe ) ,MLU ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "( ( FirstVNF_CPU / ACS ) * Max( FirstVNF_RAM,( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,CS ) * ( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( RCSe - MUR ) + ( MUR + MLU ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6700319169909537}, {"determining": "( ( ( Min( AMS ,MDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) + Max( ( BR - AMS ),( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) ) ) ) + ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.22766355603085353}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * ( AMS * PN ) ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( RRSe * MLU ) )", "obj1": 0.9696356275303644, "obj2": 0.029177548437635897}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * ( ACS - FirstVNF_RAM ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( ( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) ) + ( MUR - RCSe ) ),( MUR / RRSe ) )", "obj1": 0.35020242914979755, "obj2": 0.5592985664417529}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( RCSe - MUR ) + ( MUR + MLU ) ) )", "obj1": 0.6842105263157895, "obj2": 0.27499990446165595}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.37694756248107697}, {"determining": "( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_RAM_Server + AMS ) )", "choosing": "( Min( MUM ,RMSe ) + ( RCSe * DS ) )", "obj1": 0.3360323886639676, "obj2": 0.5741405244774012}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "( ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server * Const ) ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - ( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) ) ) - Max( DS,DS ) ) )", "obj1": 0.5404858299595142, "obj2": 0.40264863865632533}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( FirstVNF_CPU + Min( BR ,Min( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( MLU - MLU ) * Min( RRSe ,RCSe ) ) - MUC ) - MUR ) / ( ( MUM - MUC ) - ( RRSe * ( ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) - ( ( ( MUM - MUC ) + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) * Min( ( ( CS / MLU ) * RMSe ) ,MUR ) ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7132277289990919}, {"determining": "( ( Max( AMS,FirstVNF_Mem ) + ( MRS / FirstVNF_CPU_Server ) ) * ( ( AMS - FirstVNF_CPU ) + ( DDR / Const ) ) )", "choosing": "( ( MUC - Min( RRSe ,MUC ) ) - ( MUM - ( MUM * RCSe ) ) )", "obj1": 0.2125506072874494, "obj2": 0.6569132076136777}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.09806201222336078}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,Max( Max( ACS,PN ),BR ) )", "choosing": "Max( ( DS + MUC ),( CS + MUM ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( RRSe - RCSe ) * ( DS - Min( RMSe ,Max( CS,( ( MLU / RMSe ) - Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) ) ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.37694756248107697}, {"determining": "( Min( MRS ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( RRS * ( ARS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUC - Min( DS ,DS ) ) - MUM ) + MLU ) - Min( Max( Min( MUC ,CS ),( MUR * RMSe ) ) ,Max( MLU,RRSe ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7084280938975046}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.027738936596801298}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( Max( ( ( ( ( Const * ACS ) / PN ) - Max( PN,FirstVNF_RAM ) ) * FirstVNF_RAM ),MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "( ( MUC - Min( RRSe ,( ( ( DS - ( MUC * Min( MUR ,MUC ) ) ) + MUM ) * ( CS + MUR ) ) ) ) - ( MUM - ( MUM * MUC ) ) )", "obj1": 0.2125506072874494, "obj2": 0.6569132076136777}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( MDR - ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem / FirstVNF_RAM ) ) + ( BR * ( CRS - AMS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( ( DS + MUR ) * ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server - ( ( Max( Const,FirstVNF_RAM ) - Max( DDR,FirstVNF_CPU ) ) + AMS ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU ) )", "choosing": "( Min( ( MUM + RRSe ) ,Max( MLU,MLU ) ) + ( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) / ( Min( ( RCSe - RMSe ) ,Min( ( ( DS - ( RCSe - MLU ) ) / Max( Max( DS,CS ),DS ) ) ,( ( ( MUC / MUR ) * MUR ) - CS ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,Min( ACS ,Min( Min( Min( MRS ,PN ) ,CRS ) ,ACS ) ) ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + RRS ) ) ,Min( ( ( MRS + Min( DDR ,Min( ( AMS + Min( MRS ,MRS ) ) ,AMS ) ) ) / Min( ( MDR * MRS ) ,PN ) ) ,( DDR - MDR ) ) )", "choosing": "( ( CS - MUR ) / ( Max( ( MUR * MUM ),RMSe ) / ( RRSe + Min( Min( Max( ( CS / ( MUM * MLU ) ),( RRSe / DS ) ) ,RRSe ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + Max( Const,Max( DDR,FirstVNF_RAM_Server ) ) ) * Min( Min( ( Const / Max( ARS,Max( PN,RRS ) ) ) ,( FirstVNF_RAM + ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( RMSe ,( ( CS + Min( MLU ,MUM ) ) / ( Min( MLU ,RRSe ) / ( RCSe * ( Min( MUM ,MUC ) + ( MUM + DS ) ) ) ) ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) / Min( MRS ,ARS ) ) - Min( ( MRS + CRS ) ,( FirstVNF_Mem_Server / MDR ) ) )", "choosing": "( ( Max( RCSe,DS ) / ( MUR + RRSe ) ) / ( ( RRSe - RRSe ) * Max( MUR,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "( ( ( ( RCSe * DS ) + ( MUR + MUC ) ) * ( ( RRSe * RMSe ) - Min( MUR ,MUR ) ) ) / Min( ( ( DS * RCSe ) * Min( RRSe ,CS ) ) ,Min( Max( MUR,MLU ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / DDR ) * ( FirstVNF_CPU_Server / RRS ) ) - Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( FirstVNF_RAM * BR ) ) ,Min( ( PN / Const ) ,Min( ACS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - Max( Max( RRS,Min( MRS ,RRS ) ),Min( ARS ,MDR ) ) )", "choosing": "Min( Max( MUR,( ( MLU / MUC ) / MUC ) ) ,Min( CS ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ACS + Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - MUR ) ,RMSe ) / Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( ( ( ARS * AMS ) / DDR ) * CRS ) )", "choosing": "( ( ( ( MUC - Min( DS ,DS ) ) - MUM ) + MLU ) - Min( Max( Min( MUC ,CS ),( MUR * RMSe ) ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - MRS ) - Min( ( MRS + FirstVNF_Mem ) ,ACS ) ) - Max( ( FirstVNF_Mem - RRS ),( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Min( Min( ( ( ( ( RCSe - RRSe ) / Min( ( RCSe - ( MLU + RMSe ) ) ,Min( CS ,CS ) ) ) + Min( CS ,RMSe ) ) * MUM ) ,Min( DS ,MLU ) ) ,Max( Min( ( Max( ( Max( ( DS - MUM ),MUR ) + DS ),DS ) / RCSe ) ,Min( ( ( ( RCSe / MUM ) - RCSe ) + CS ) ,( ( Min( RRSe ,( MUC - MUR ) ) / ( ( RMSe - RRSe ) + DS ) ) / DS ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - RRS ) + Const ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Min( ( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUM ) ) ) ,( ( MUM - CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,Min( ACS ,CRS ) ) / ( ( Min( BR ,( ( Max( ACS,Const ) - FirstVNF_Mem_Server ) * ( ACS * ( MRS + FirstVNF_RAM_Server ) ) ) ) - Max( ( ( BR + FirstVNF_Mem_Server ) - ( DDR - RRS ) ),DDR ) ) / DDR ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / ( ( CS - ( ( MLU * RMSe ) / Max( ( MUC * ( RMSe + MUC ) ),( RMSe * Min( MUC ,MUC ) ) ) ) ) + MUR ) ) + ( ( Max( MUC,( MUM - ( MUC + ( ( RCSe - DS ) + RRSe ) ) ) ) + MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( MRS * ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - Min( CRS ,BR ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( DS * Max( Min( MUR ,( MUC - RCSe ) ),MUC ) ) - ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( DS * Max( Min( MUR ,( MUC - RCSe ) ),MUC ) ) - ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( DS * Max( Min( MUR ,( MUC - RCSe ) ),MUC ) ) - ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( DS * Max( Min( MUR ,( MUC - RCSe ) ),MUC ) ) - ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * AMS ) ,( AMS + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( ACS + FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) )", "choosing": "( ( DS / RCSe ) - Min( ( MUM * CS ) ,( MLU + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( ACS + FirstVNF_CPU_Server ) / FirstVNF_CPU ) )", "choosing": "( ( DS / RCSe ) - Min( MUR ,( MLU + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ( MDR * AMS ) ,( AMS + FirstVNF_RAM_Server ) ) ,( Min( MDR ,FirstVNF_Mem_Server ) * ( RRS + Const ) ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( MRS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,RMSe ),( RRSe - ( DS / RCSe ) ) ) / ( Min( MUC ,RCSe ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( MRS - FirstVNF_Mem ) ) )", "choosing": "( ( DS / RCSe ) - Min( MUR ,( MLU + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( MRS - FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe - DS ) ,( MUC - MLU ) ) / ( Min( MUC ,RCSe ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( MRS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUM,RMSe ),( RRSe - RCSe ) ) / ( Min( MUC ,RCSe ) / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_CPU_Server ) * ( Min( CRS ,FirstVNF_CPU_Server ) - Max( Const,MRS ) ) )", "choosing": "Min( ( MUC * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS - BR ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) - Max( Const,MRS ) ) )", "choosing": "( Max( ( RRSe * DS ),( MUR - MLU ) ) / Max( ( RMSe + MUC ),Min( CS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( ( FirstVNF_CPU * BR ) + ( AMS + FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),ACS ) )", "choosing": "( ( MUC * RRSe ) / ( Max( ( RRSe * DS ),( MUR - MLU ) ) / Max( ( RMSe + MUC ),Min( CS ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / CRS ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,MUM ) * RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR + ACS ) / ( MRS * Min( ( ( AMS - ( Const / CRS ) ) * RRS ) ,BR ) ) ),Const ) - ( DDR / CRS ) )", "choosing": "( ( ( CS + Min( MLU ,RCSe ) ) - RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / CRS ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,MUM ) * RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),( DDR - FirstVNF_CPU_Server ) ) - Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU * Const ) ) ) ) )", "choosing": "( ( MUR + MLU ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),( FirstVNF_CPU_Server / FirstVNF_Mem ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - RMSe ) - Max( DS,DS ) ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - RMSe ) - Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - RMSe ) - Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( AMS + FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem - ( MDR / MDR ) ) )", "choosing": "Min( ( ( RMSe * RCSe ) + Max( RCSe,MLU ) ) ,( ( ( RCSe + DS ) / Max( MUM,RCSe ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Max( ( ( BR + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / CRS ) )", "choosing": "( Min( RMSe ,CS ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,BR ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( ( MUR - RCSe ) - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( MLU / ( MUM + DS ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7265073726362229}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.09806201222336078}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * ( CS * MLU ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.32503586753480657}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / ( ( DDR / DDR ) + ACS ) ),( DDR - FirstVNF_CPU_Server ) ) - Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU * Const ) ) )", "choosing": "( ( RCSe + ( RMSe * RMSe ) ) - Max( ( RMSe - Max( RMSe,RCSe ) ),MLU ) )", "obj1": 0.5020242914979757, "obj2": 0.4144286449590796}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( ( ARS + Min( FirstVNF_Mem_Server ,CRS ) ) + ARS ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_RAM ) ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( MLU / ( CS + DS ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6780042023171302}, {"determining": "Min( ( Min( ( ACS - FirstVNF_RAM ) ,AMS ) * FirstVNF_RAM ) ,Max( ( PN + BR ),PN ) )", "choosing": "( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5779262965233699}, {"determining": "Min( ( AMS + ( MDR / MDR ) ) ,( Const / FirstVNF_CPU ) )", "choosing": "( ( RCSe + ( ( RMSe * RCSe ) + Max( RCSe,MLU ) ) ) / Max( MUM,RCSe ) )", "obj1": 0.23279352226720648, "obj2": 0.6552337358355483}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( ( BR + ACS ) / FirstVNF_CPU_Server ) * RRS ) ,BR ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / Max( CS,( DS - MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.07778541417624427}, {"determining": "( ( Min( BR ,PN ) + BR ) / FirstVNF_RAM )", "choosing": "( Min( RMSe ,( MLU - MUC ) ) - CS )", "obj1": 0.1194331983805668, "obj2": 0.6952818615420231}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - RMSe ) - Max( DS,DS ) ) )", "obj1": 0.5404858299595142, "obj2": 0.40264863865632533}, {"determining": "( ( MRS - Const ) + ( ARS + MDR ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.354251012145749, "obj2": 0.5476243883538581}, {"determining": "( ( Const * ( ( Const * DDR ) + Min( BR ,PN ) ) ) + Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "Min( ( MLU - MUC ) ,CS )", "obj1": 0.20445344129554655, "obj2": 0.6763231105881059}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( ARS - Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,Min( ( Min( MUC ,DS ) - RMSe ) ,MLU ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "Max( ( Const + ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MRS ) ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) / Max( MUR,MUR ) ) ,CS ) / DS ) )", "obj1": 0.3643724696356275, "obj2": 0.5186450283821954}, {"determining": "( ( ( Min( AMS ,MDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) + Max( ( BR - AMS ),( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) ) ) ) + ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.22766355603085353}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.2549959501932851}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.37694756248107697}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RCSe ,RRSe ),Min( Max( MLU,MLU ) ,Min( MUC ,DS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.2542427647058598}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * ( AMS * PN ) ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( RRSe * MLU ) )", "obj1": 0.9696356275303644, "obj2": 0.029177548437635897}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server * Const ) ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - ( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) ) ) - Max( DS,DS ) ) )", "obj1": 0.5404858299595142, "obj2": 0.40264863865632533}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "Max( ( CRS * BR ),Max( Const,( CRS * BR ) ) )", "choosing": "( ( ( RCSe - RRSe ) - RRSe ) * ( RRSe + DS ) )", "obj1": 0.08502024291497975, "obj2": 0.7121901889140073}, {"determining": "( Max( ( ( ( ( Const * ACS ) / PN ) - Max( PN,FirstVNF_RAM ) ) * FirstVNF_RAM ),MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "( ( MUC - Min( RRSe ,( ( ( DS - ( MUC * Min( MUR ,MUC ) ) ) + MUM ) * ( CS + MUR ) ) ) ) - ( MUM - ( MUM * MUC ) ) )", "obj1": 0.2125506072874494, "obj2": 0.6569132076136777}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( AMS - ( Const / CRS ) ) * RRS ) ,Max( ( ( BR + ACS ) / FirstVNF_CPU_Server ),Const ) ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( CS + ( DS - MUM ) ) - RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.9048582995951417, "obj2": 0.08577699236429566}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,Max( Max( ACS,PN ),BR ) )", "choosing": "Max( ( DS + MUC ),( CS + MUM ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( ( FirstVNF_CPU / ACS ) * Max( FirstVNF_RAM,( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,CS ) * ( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( RCSe - MUR ) + ( MUR + MLU ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6700319169909537}, {"determining": "( ( Const / BR ) / ( Const / BR ) )", "choosing": "( ( RMSe * ( RMSe * DS ) ) / CS )", "obj1": 0.3684210526315789, "obj2": 0.5162330448304651}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.09806201222336078}, {"determining": "Max( ( MDR * PN ),( ( Max( ACS,Const ) / ( Const / BR ) ) + FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MLU ,RCSe ),( MUM + ( RMSe * DS ) ) )", "obj1": 0.34210526315789475, "obj2": 0.570358690977065}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.37694756248107697}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.11538461538461539, "obj2": 0.7001265397547616}, {"determining": "( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_RAM_Server + AMS ) )", "choosing": "( Min( MUM ,RMSe ) + ( RCSe * DS ) )", "obj1": 0.3360323886639676, "obj2": 0.5741405244774012}, {"determining": "( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( Min( DS ,MUC ) / RCSe ) + Min( RCSe ,MLU ) )", "obj1": 0.3481781376518219, "obj2": 0.5600539665953017}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * ( ACS - FirstVNF_RAM ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( ( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) ) + ( MUR - RCSe ) ),( MUR / RRSe ) )", "obj1": 0.35020242914979755, "obj2": 0.5592985664417529}, {"determining": "( Min( MRS ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( RRS * ( ARS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUC - Min( DS ,DS ) ) - MUM ) + MLU ) - Min( Max( Min( MUC ,CS ),( MUR * RMSe ) ) ,Max( MLU,RRSe ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7084280938975046}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( RCSe - MUR ) + ( MUR + MLU ) ) )", "obj1": 0.6842105263157895, "obj2": 0.27499990446165595}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.027738936596801298}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "Max( ( CRS * Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) ) ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.09716599190283401, "obj2": 0.7054216826293}, {"determining": "Max( ( Min( CRS ,MDR ) * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( ( RCSe - RRSe ) * RMSe ) )", "obj1": 0.09919028340080972, "obj2": 0.7046190041651164}, {"determining": "( PN / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( RRSe - RCSe ) * ( DS - Min( RMSe ,Max( CS,( ( MLU / RMSe ) - Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) ) ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + ( RRSe + DS ) ) )", "obj1": 0.10121457489878542, "obj2": 0.7029021889885528}, {"determining": "( ( Max( AMS,FirstVNF_Mem ) + ( MRS / FirstVNF_CPU_Server ) ) * ( ( AMS - FirstVNF_CPU ) + ( DDR / Const ) ) )", "choosing": "( ( MUC - Min( RRSe ,MUC ) ) - ( MUM - ( MUM * RCSe ) ) )", "obj1": 0.2125506072874494, "obj2": 0.6569132076136777}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + Max( ( RMSe - MUR ),( CS / MUR ) ) ) )", "obj1": 0.10121457489878542, "obj2": 0.7029021889885528}, {"determining": "( Min( ( BR * MRS ) ,MDR ) - Min( ( BR + MDR ) ,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( ( Max( MLU,CS ) - RCSe ) ,Max( ( MUM / ( ( DS - CS ) - MUC ) ),( ( Min( MLU ,RCSe ) + MLU ) - CS ) ) ),( RRSe / Max( ( MUM / MUM ),( MUR - MLU ) ) ) ) ,Min( Max( CS,( Max( DS,Min( ( MUR * RCSe ) ,( ( MUC / MUC ) + Max( DS,MLU ) ) ) ) * Max( CS,MUC ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( MDR - ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem / FirstVNF_RAM ) ) + ( BR * ( CRS - AMS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( ( DS + MUR ) * ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server - ( ( Max( Const,FirstVNF_RAM ) - Max( DDR,FirstVNF_CPU ) ) + AMS ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU ) )", "choosing": "( Min( ( MUM + RRSe ) ,Max( MLU,MLU ) ) + ( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) / ( Min( ( RCSe - RMSe ) ,Min( ( ( DS - ( RCSe - MLU ) ) / Max( Max( DS,CS ),DS ) ) ,( ( ( MUC / MUR ) * MUR ) - CS ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,Min( ACS ,Min( Min( Min( MRS ,PN ) ,CRS ) ,ACS ) ) ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + RRS ) ) ,Min( ( ( MRS + Min( DDR ,Min( ( AMS + Min( MRS ,MRS ) ) ,AMS ) ) ) / Min( ( MDR * MRS ) ,PN ) ) ,( DDR - MDR ) ) )", "choosing": "( ( CS - MUR ) / ( Max( ( MUR * MUM ),RMSe ) / ( RRSe + Min( Min( Max( ( CS / ( MUM * MLU ) ),( RRSe / DS ) ) ,RRSe ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + Max( Const,Max( DDR,FirstVNF_RAM_Server ) ) ) * Min( Min( ( Const / Max( ARS,Max( PN,RRS ) ) ) ,( FirstVNF_RAM + ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( RMSe ,( ( CS + Min( MLU ,MUM ) ) / ( Min( MLU ,RRSe ) / ( RCSe * ( Min( MUM ,MUC ) + ( MUM + DS ) ) ) ) ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) / Min( MRS ,ARS ) ) - Min( ( MRS + CRS ) ,( FirstVNF_Mem_Server / MDR ) ) )", "choosing": "( ( Max( RCSe,DS ) / ( MUR + RRSe ) ) / ( ( RRSe - RRSe ) * Max( MUR,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "( ( ( ( RCSe * DS ) + ( MUR + MUC ) ) * ( ( RRSe * RMSe ) - Min( MUR ,MUR ) ) ) / Min( ( ( DS * RCSe ) * Min( RRSe ,CS ) ) ,Min( Max( MUR,MLU ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / DDR ) * ( FirstVNF_CPU_Server / RRS ) ) - Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( FirstVNF_RAM * BR ) ) ,Min( ( PN / Const ) ,Min( ACS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - Max( Max( RRS,Min( MRS ,RRS ) ),Min( ARS ,MDR ) ) )", "choosing": "Min( Max( MUR,( ( MLU / MUC ) / MUC ) ) ,Min( CS ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ACS + Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - MUR ) ,RMSe ) / Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( ( ( ARS * AMS ) / DDR ) * CRS ) )", "choosing": "( ( ( ( MUC - Min( DS ,DS ) ) - MUM ) + MLU ) - Min( Max( Min( MUC ,CS ),( MUR * RMSe ) ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - MRS ) - Min( ( MRS + FirstVNF_Mem ) ,ACS ) ) - Max( ( FirstVNF_Mem - RRS ),( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Min( Min( ( ( ( ( RCSe - RRSe ) / Min( ( RCSe - ( MLU + RMSe ) ) ,Min( CS ,CS ) ) ) + Min( CS ,RMSe ) ) * MUM ) ,Min( DS ,MLU ) ) ,Max( Min( ( Max( ( Max( ( DS - MUM ),MUR ) + DS ),DS ) / RCSe ) ,Min( ( ( ( RCSe / MUM ) - RCSe ) + CS ) ,( ( Min( RRSe ,( MUC - MUR ) ) / ( ( RMSe - RRSe ) + DS ) ) / DS ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - RRS ) + Const ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Min( ( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUM ) ) ) ,( ( MUM - CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,Min( ACS ,CRS ) ) / ( ( Min( BR ,( ( Max( ACS,Const ) - FirstVNF_Mem_Server ) * ( ACS * ( MRS + FirstVNF_RAM_Server ) ) ) ) - Max( ( ( BR + FirstVNF_Mem_Server ) - ( DDR - RRS ) ),DDR ) ) / DDR ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / ( ( CS - ( ( MLU * RMSe ) / Max( ( MUC * ( RMSe + MUC ) ),( RMSe * Min( MUC ,MUC ) ) ) ) ) + MUR ) ) + ( ( Max( MUC,( MUM - ( MUC + ( ( RCSe - DS ) + RRSe ) ) ) ) + MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( MRS * ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - Min( CRS ,BR ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( DS * Max( Min( MUR ,( MUC - RCSe ) ),MUC ) ) - ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( DS * Max( Min( MUR ,( MUC - RCSe ) ),MUC ) ) - ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( DS * Max( Min( MUR ,( MUC - RCSe ) ),MUC ) ) - ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( DS * Max( Min( MUR ,( MUC - RCSe ) ),MUC ) ) - ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR * AMS ) ,( AMS + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( ( ACS + FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) )", "choosing": "( ( DS / RCSe ) - Min( ( MUM * CS ) ,( MLU + DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( CRS + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( RCSe - RRSe ) * ( RRSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / CRS ) )", "choosing": "( Min( RMSe ,CS ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) / Min( PN ,( ( DDR - PN ) - ( ( Min( AMS ,( Min( MRS ,FirstVNF_RAM ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) - ( ( ACS * MDR ) - AMS ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( ( MUC + RMSe ) * MUM ) ,( Max( DS,( RCSe * MLU ) ) * ( RMSe * ( RRSe + CS ) ) ) ) - ( Max( MUM,RCSe ) / ( Min( Max( ( Max( CS,MLU ) * MUC ),( ( RMSe / ( RRSe / CS ) ) / ( MLU - CS ) ) ) ,Min( ( MUM * ( RMSe + RMSe ) ) ,MUR ) ) / RCSe ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.09806201222336078}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / ( ( DDR / DDR ) + ACS ) ),( DDR - FirstVNF_CPU_Server ) ) - Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU * Const ) ) )", "choosing": "( ( RCSe + ( RMSe * RMSe ) ) - Max( ( RMSe - Max( RMSe,RCSe ) ),MLU ) )", "obj1": 0.5020242914979757, "obj2": 0.4144286449590796}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( MLU / ( MUM + DS ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7265073726362229}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( ( ARS + Min( FirstVNF_Mem_Server ,CRS ) ) + ARS ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_RAM ) ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( MLU / ( CS + DS ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6780042023171302}, {"determining": "( ( MRS - Const ) + ( ARS + MDR ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.354251012145749, "obj2": 0.5476243883538581}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * ( CS * MLU ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.32503586753480657}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "( ( FirstVNF_CPU_Server + Min( BR ,PN ) ) / FirstVNF_RAM )", "choosing": "( Min( Max( MUC,RCSe ) ,CS ) - CS )", "obj1": 0.23481781376518218, "obj2": 0.627703250586987}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( ( BR + ACS ) / FirstVNF_CPU_Server ) * RRS ) ,BR ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / Max( CS,( DS - MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.07778541417624427}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - RMSe ) - Max( DS,DS ) ) )", "obj1": 0.5404858299595142, "obj2": 0.40264863865632533}, {"determining": "( ( Const * ( ( Const * DDR ) + Min( BR ,PN ) ) ) + Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "Min( ( MLU - MUC ) ,CS )", "obj1": 0.20445344129554655, "obj2": 0.6763231105881059}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( ARS - Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,Min( ( Min( MUC ,DS ) - RMSe ) ,MLU ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "Min( ( AMS + ( MDR / MDR ) ) ,( Const / FirstVNF_CPU ) )", "choosing": "( ( RCSe + ( ( RMSe * RCSe ) + Max( RCSe,MLU ) ) ) / Max( MUM,RCSe ) )", "obj1": 0.23279352226720648, "obj2": 0.6552337358355483}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.12955465587044535, "obj2": 0.6938910441757453}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( ( ( Min( AMS ,MDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) + Max( ( BR - AMS ),( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) ) ) ) + ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.22766355603085353}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "Max( ( Const + ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MRS ) ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) / Max( MUR,MUR ) ) ,CS ) / DS ) )", "obj1": 0.3643724696356275, "obj2": 0.5186450283821954}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.2549959501932851}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.37694756248107697}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RCSe ,RRSe ),Min( Max( MLU,MLU ) ,Min( MUC ,DS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.2542427647058598}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * ( AMS * PN ) ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( RRSe * MLU ) )", "obj1": 0.9696356275303644, "obj2": 0.029177548437635897}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server * Const ) ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - ( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) ) ) - Max( DS,DS ) ) )", "obj1": 0.5404858299595142, "obj2": 0.40264863865632533}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( ( Max( AMS,FirstVNF_Mem ) + ( MRS / FirstVNF_CPU_Server ) ) * ( ( AMS - FirstVNF_CPU ) + ( DDR / Const ) ) )", "choosing": "( ( MUC - Min( RRSe ,MUC ) ) - ( MUM - ( MUM * RCSe ) ) )", "obj1": 0.2125506072874494, "obj2": 0.6569132076136777}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( AMS - ( Const / CRS ) ) * RRS ) ,Max( ( ( BR + ACS ) / FirstVNF_CPU_Server ),Const ) ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( CS + ( DS - MUM ) ) - RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.9048582995951417, "obj2": 0.08577699236429566}, {"determining": "( ( FirstVNF_CPU / ACS ) * Max( FirstVNF_RAM,( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,CS ) * ( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( RCSe - MUR ) + ( MUR + MLU ) ) ) )", "obj1": 0.21052631578947367, "obj2": 0.6700319169909537}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.09806201222336078}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "Max( ( CRS * BR ),Max( Const,Min( ( MRS / FirstVNF_RAM_Server ) ,Min( CRS ,MDR ) ) ) )", "choosing": "( ( ( ( RCSe - RRSe ) * RMSe ) - RRSe ) * ( RRSe + DS ) )", "obj1": 0.08502024291497975, "obj2": 0.7121901889140073}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( Const / BR ) / ( Const / BR ) )", "choosing": "( ( RMSe * ( RMSe * DS ) ) / CS )", "obj1": 0.3684210526315789, "obj2": 0.5162330448304651}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5708502024291497, "obj2": 0.37694756248107697}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.11538461538461539, "obj2": 0.7001265397547616}, {"determining": "( Min( MRS ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( RRS * ( ARS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUC - Min( DS ,DS ) ) - MUM ) + MLU ) - Min( Max( Min( MUC ,CS ),( MUR * RMSe ) ) ,Max( MLU,RRSe ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7084280938975046}, {"determining": "( ( Min( BR ,PN ) + BR ) / FirstVNF_RAM )", "choosing": "( Min( RMSe ,( MLU - MUC ) ) - CS )", "obj1": 0.1194331983805668, "obj2": 0.6952818615420231}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( RCSe - MUR ) + ( MUR + MLU ) ) )", "obj1": 0.6842105263157895, "obj2": 0.27499990446165595}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.027738936596801298}, {"determining": "( ( BR / ( CRS * MRS ) ) + Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "Min( ( MLU - MUC ) ,( RRSe - ( Min( ( DS / ( ( CS / CS ) * DS ) ) ,CS ) + RMSe ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7037167232159074}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( RRSe - RCSe ) * ( DS - Min( RMSe ,Max( CS,( ( MLU / RMSe ) - Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) ) ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "Max( ( CRS * BR ),Max( Const,( CRS * BR ) ) )", "choosing": "( ( ( RCSe - RRSe ) - RRSe ) * ( RRSe + DS ) )", "obj1": 0.08502024291497975, "obj2": 0.7121901889140073}, {"determining": "( ( Const * DDR ) + Min( BR ,PN ) )", "choosing": "Min( ( ( RMSe / MUC ) - MUC ) ,Max( CS,CS ) )", "obj1": 0.10121457489878542, "obj2": 0.7023399548532102}, {"determining": "Max( ( Const + ( BR * ARS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) ,CS ) / DS ) )", "obj1": 0.36639676113360325, "obj2": 0.5163820077298169}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( PN / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "( Max( ( ( ( ( Const * ACS ) / PN ) - Max( PN,FirstVNF_RAM ) ) * FirstVNF_RAM ),MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "( ( MUC - Min( RRSe ,( ( ( DS - ( MUC * Min( MUR ,MUC ) ) ) + MUM ) * ( CS + MUR ) ) ) ) - ( MUM - ( MUM * MUC ) ) )", "obj1": 0.2125506072874494, "obj2": 0.6569132076136777}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,BR ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( ( MUR - RCSe ) - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR * MRS ) ,MDR ) - Min( ( BR + MDR ) ,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( ( Max( MLU,CS ) - RCSe ) ,Max( ( MUM / ( ( DS - CS ) - MUC ) ),( ( Min( MLU ,RCSe ) + MLU ) - CS ) ) ),( RRSe / Max( ( MUM / MUM ),( MUR - MLU ) ) ) ) ,Min( Max( CS,( Max( DS,Min( ( MUR * RCSe ) ,( ( MUC / MUC ) + Max( DS,MLU ) ) ) ) * Max( CS,MUC ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( MDR - ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem / FirstVNF_RAM ) ) + ( BR * ( CRS - AMS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( ( DS + MUR ) * ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server - ( ( Max( Const,FirstVNF_RAM ) - Max( DDR,FirstVNF_CPU ) ) + AMS ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU ) )", "choosing": "( Min( ( MUM + RRSe ) ,Max( MLU,MLU ) ) + ( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) / ( Min( ( RCSe - RMSe ) ,Min( ( ( DS - ( RCSe - MLU ) ) / Max( Max( DS,CS ),DS ) ) ,( ( ( MUC / MUR ) * MUR ) - CS ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,Min( ACS ,Min( Min( Min( MRS ,PN ) ,CRS ) ,ACS ) ) ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + RRS ) ) ,Min( ( ( MRS + Min( DDR ,Min( ( AMS + Min( MRS ,MRS ) ) ,AMS ) ) ) / Min( ( MDR * MRS ) ,PN ) ) ,( DDR - MDR ) ) )", "choosing": "( ( CS - MUR ) / ( Max( ( MUR * MUM ),RMSe ) / ( RRSe + Min( Min( Max( ( CS / ( MUM * MLU ) ),( RRSe / DS ) ) ,RRSe ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + Max( Const,Max( DDR,FirstVNF_RAM_Server ) ) ) * Min( Min( ( Const / Max( ARS,Max( PN,RRS ) ) ) ,( FirstVNF_RAM + ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( RMSe ,( ( CS + Min( MLU ,MUM ) ) / ( Min( MLU ,RRSe ) / ( RCSe * ( Min( MUM ,MUC ) + ( MUM + DS ) ) ) ) ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) / Min( MRS ,ARS ) ) - Min( ( MRS + CRS ) ,( FirstVNF_Mem_Server / MDR ) ) )", "choosing": "( ( Max( RCSe,DS ) / ( MUR + RRSe ) ) / ( ( RRSe - RRSe ) * Max( MUR,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU + ACS ) ,( FirstVNF_CPU_Server / CRS ) ) * ( ( Const * FirstVNF_RAM_Server ) + Max( MRS,MRS ) ) ) ,( Min( ( Const - MDR ) ,( ACS + BR ) ) - Max( ( AMS + FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,MRS ) ) ) )", "choosing": "( ( ( ( RCSe * DS ) + ( MUR + MUC ) ) * ( ( RRSe * RMSe ) - Min( MUR ,MUR ) ) ) / Min( ( ( DS * RCSe ) * Min( RRSe ,CS ) ) ,Min( Max( MUR,MLU ) ,( MUC / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) * Min( AMS ,FirstVNF_RAM ) ) - ( ( ARS + FirstVNF_CPU_Server ) - Max( PN,PN ) ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( ARS / FirstVNF_Mem_Server ) ) - ( ( MDR - ARS ) - ( MDR * PN ) ) ) )", "choosing": "Max( ( Max( ( MLU * RMSe ),Min( DS ,RRSe ) ) * ( ( RRSe - MUC ) + ( RRSe * MLU ) ) ),( Min( Min( CS ,RRSe ) ,Min( RCSe ,RMSe ) ) - ( ( RMSe - CS ) + ( RCSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / DDR ) * ( FirstVNF_CPU_Server / RRS ) ) - Max( Max( RRS,Const ),Min( RRS ,RRS ) ) ) + Min( Min( ( DDR * BR ) ,( FirstVNF_RAM * BR ) ) ,Min( ( PN / Const ) ,Min( ACS ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - Max( Max( RRS,Min( MRS ,RRS ) ),Min( ARS ,MDR ) ) )", "choosing": "Min( Max( MUR,( ( MLU / MUC ) / MUC ) ) ,Min( CS ,Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( DDR - FirstVNF_Mem_Server ) ) * ( FirstVNF_Mem * ( ACS + Min( PN ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( DS - MUR ) ,RMSe ) / Max( Min( MUR ,RCSe ),( RCSe / MUR ) ) ) ,( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) / ACS ) * ( ( ( ARS * AMS ) / DDR ) * CRS ) )", "choosing": "( ( ( ( MUC - Min( DS ,DS ) ) - MUM ) + MLU ) - Min( Max( Min( MUC ,CS ),( MUR * RMSe ) ) ,Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - MRS ) - Min( ( MRS + FirstVNF_Mem ) ,ACS ) ) - Max( ( FirstVNF_Mem - RRS ),( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Min( Min( ( ( ( ( RCSe - RRSe ) / Min( ( RCSe - ( MLU + RMSe ) ) ,Min( CS ,CS ) ) ) + Min( CS ,RMSe ) ) * MUM ) ,Min( DS ,MLU ) ) ,Max( Min( ( Max( ( Max( ( DS - MUM ),MUR ) + DS ),DS ) / RCSe ) ,Min( ( ( ( RCSe / MUM ) - RCSe ) + CS ) ,( ( Min( RRSe ,( MUC - MUR ) ) / ( ( RMSe - RRSe ) + DS ) ) / DS ) ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - RRS ) + Const ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Min( ( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUM ) ) ) ,( ( MUM - CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,Min( ACS ,CRS ) ) / ( ( Min( BR ,( ( Max( ACS,Const ) - FirstVNF_Mem_Server ) * ( ACS * ( MRS + FirstVNF_RAM_Server ) ) ) ) - Max( ( ( BR + FirstVNF_Mem_Server ) - ( DDR - RRS ) ),DDR ) ) / DDR ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / ( ( CS - ( ( MLU * RMSe ) / Max( ( MUC * ( RMSe + MUC ) ),( RMSe * Min( MUC ,MUC ) ) ) ) ) + MUR ) ) + ( ( Max( MUC,( MUM - ( MUC + ( ( RCSe - DS ) + RRSe ) ) ) ) + MLU ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) / ( MRS * ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - Min( CRS ,BR ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * MRS ) ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( DS * Max( Min( MUR ,( MUC - RCSe ) ),MUC ) ) - ( MUM / RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( CRS + FirstVNF_RAM_Server ) / Min( PN ,( ( DDR - PN ) - ( ( Min( AMS ,( Min( MRS ,FirstVNF_RAM ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) - ( ( ACS * MDR ) - AMS ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( ( MUC + RMSe ) * MUM ) ,( Max( DS,( RCSe * MLU ) ) * ( RMSe * ( RRSe + CS ) ) ) ) - ( Max( MUM,RCSe ) / ( Min( Max( ( Max( CS,MLU ) * MUC ),( ( RMSe / ( RRSe / CS ) ) / ( MLU - CS ) ) ) ,Min( ( MUM * ( RMSe + RMSe ) ) ,MUR ) ) / RCSe ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "( ( MDR - AMS ) / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( ( ( RCSe * MUM ) / MUC ) * MUM ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( RCSe - RRSe ) * ( RRSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RRSe - MUR ) - Min( CS ,DS ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.09806201222336078}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6599800774633041}, {"determining": "( Min( ( ( Min( ARS ,( ( MDR / FirstVNF_Mem_Server ) / MDR ) ) / ARS ) + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RRSe - ( ( CS + MUR ) * Max( ( RMSe - ( ( RCSe + RMSe ) + Max( RMSe,MUM ) ) ),( CS / MUR ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.20040485829959515, "obj2": 0.6309247343779684}, {"determining": "( ( MRS - Const ) + ( ARS + MDR ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.354251012145749, "obj2": 0.5476243883538581}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * ( CS * MLU ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.32503586753480657}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( ( ARS + Min( FirstVNF_Mem_Server ,CRS ) ) + ARS ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_RAM ) ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( MLU / ( CS + DS ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6780042023171302}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( ( FirstVNF_CPU_Server + Min( BR ,PN ) ) / FirstVNF_RAM )", "choosing": "( Min( Max( MUC,RCSe ) ,CS ) - CS )", "obj1": 0.23481781376518218, "obj2": 0.627703250586987}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / ( ( DDR / DDR ) + ACS ) ),( DDR - FirstVNF_CPU_Server ) ) - Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU * Const ) ) )", "choosing": "( ( RCSe + ( RMSe * RMSe ) ) - Max( ( RMSe - Max( RMSe,RCSe ) ),MLU ) )", "obj1": 0.5020242914979757, "obj2": 0.4144286449590796}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "( ( ( RCSe * MUM ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.4939271255060729, "obj2": 0.4269823722416688}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,MUC ) )", "obj1": 0.5688259109311741, "obj2": 0.3671366202421045}, {"determining": "( RRS / ( FirstVNF_RAM_Server - RRS ) )", "choosing": "( DS * ( MLU + MUR ) )", "obj1": 0.42105263157894735, "obj2": 0.49871600688247936}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( ( BR + ACS ) / FirstVNF_CPU_Server ) * RRS ) ,BR ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / Max( CS,( DS - MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.07778541417624427}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - RMSe ) - Max( DS,DS ) ) )", "obj1": 0.5404858299595142, "obj2": 0.40264863865632533}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),MUR )", "obj1": 0.4757085020242915, "obj2": 0.45260226615370486}, {"determining": "( ( ( Min( AMS ,MDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) + Max( ( BR - AMS ),( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) ) ) ) + ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.22766355603085353}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "Max( ( Const + ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MRS ) ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) / Max( MUR,MUR ) ) ,CS ) / DS ) )", "obj1": 0.3643724696356275, "obj2": 0.5186450283821954}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( MLU / ( MUM + DS ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7265073726362229}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * ( AMS * PN ) ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( RRSe * MLU ) )", "obj1": 0.9696356275303644, "obj2": 0.029177548437635897}, {"determining": "( ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server * Const ) ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - ( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) ) ) - Max( DS,DS ) ) )", "obj1": 0.5404858299595142, "obj2": 0.40264863865632533}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( AMS - ( Const / CRS ) ) * RRS ) ,Max( ( ( BR + ACS ) / FirstVNF_CPU_Server ),Const ) ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( CS + ( DS - MUM ) ) - RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.9048582995951417, "obj2": 0.08577699236429566}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RCSe ,RRSe ),Min( Max( MLU,MLU ) ,Min( MUC ,DS ) ) )", "obj1": 0.7145748987854251, "obj2": 0.2542427647058598}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.2549959501932851}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.12955465587044535, "obj2": 0.6938910441757453}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.09806201222336078}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.12955465587044535, "obj2": 0.6938910441757453}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( Const / BR ) / ( Const / BR ) )", "choosing": "( ( RMSe * ( RMSe * DS ) ) / CS )", "obj1": 0.3684210526315789, "obj2": 0.5162330448304651}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.11538461538461539, "obj2": 0.7001265397547616}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6761133603238867, "obj2": 0.2821400570558815}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "( ( Min( BR ,PN ) + BR ) / FirstVNF_RAM )", "choosing": "( Min( RMSe ,( MLU - MUC ) ) - CS )", "obj1": 0.1194331983805668, "obj2": 0.6952818615420231}, {"determining": "Max( ( CRS * BR ),Max( Const,( CRS * BR ) ) )", "choosing": "( ( ( RCSe - RRSe ) - RRSe ) * ( RRSe + DS ) )", "obj1": 0.08502024291497975, "obj2": 0.7121901889140073}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( Min( MRS ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( RRS * ( ARS - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUC - Min( DS ,DS ) ) - MUM ) + MLU ) - Min( Max( Min( MUC ,CS ),( MUR * RMSe ) ) ,Max( MLU,RRSe ) ) )", "obj1": 0.0951417004048583, "obj2": 0.7084280938975046}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( ARS - Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,Min( ( Min( MUC ,DS ) - RMSe ) ,MLU ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( RCSe - MUR ) + ( MUR + MLU ) ) )", "obj1": 0.6842105263157895, "obj2": 0.27499990446165595}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.027738936596801298}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( Const ,( Max( PN,PN ) - ( ( RRS + MDR ) - FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem,( AMS / Min( FirstVNF_CPU_Server ,PN ) ) ) ) / PN )", "choosing": "( ( ( Max( MUM,DS ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.09716599190283401, "obj2": 0.7030343227734178}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ARS ) + ( RRS / FirstVNF_CPU_Server ) ) / PN )", "choosing": "( ( ( ( RMSe / RMSe ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "Max( ( CRS * BR ),Max( Const,Min( ( MRS / FirstVNF_RAM_Server ) ,Min( CRS ,MDR ) ) ) )", "choosing": "( ( ( ( RCSe - RRSe ) * RMSe ) - RRSe ) * ( RRSe + DS ) )", "obj1": 0.08502024291497975, "obj2": 0.7121901889140073}, {"determining": "( ( Const * DDR ) + Min( BR ,PN ) )", "choosing": "Min( ( ( RMSe / MUC ) - MUC ) ,Max( CS,CS ) )", "obj1": 0.10121457489878542, "obj2": 0.7023399548532102}, {"determining": "Max( ( Const + ( BR * ARS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) ,CS ) / DS ) )", "obj1": 0.36639676113360325, "obj2": 0.5163820077298169}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( PN / ( Min( FirstVNF_Mem ,Max( FirstVNF_Mem,DDR ) ) + ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server + BR ) ),CRS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / Max( Min( CS ,MUC ),DS ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "( PN / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( RRSe - RCSe ) * ( DS - Min( RMSe ,Max( CS,( ( MLU / RMSe ) - Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) ) ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( Const ,( Max( PN,PN ) - ( ( RRS + MDR ) - FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem,( AMS / Min( FirstVNF_CPU_Server ,PN ) ) ) ) / PN )", "choosing": "( ( ( Max( MUM,DS ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.09716599190283401, "obj2": 0.7030343227734178}, {"determining": "( Max( ( ( BR + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / CRS ) )", "choosing": "( Min( RMSe ,CS ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,BR ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( ( MUR - RCSe ) - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR * MRS ) ,MDR ) - Min( ( BR + MDR ) ,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( ( Max( MLU,CS ) - RCSe ) ,Max( ( MUM / ( ( DS - CS ) - MUC ) ),( ( Min( MLU ,RCSe ) + MLU ) - CS ) ) ),( RRSe / Max( ( MUM / MUM ),( MUR - MLU ) ) ) ) ,Min( Max( CS,( Max( DS,Min( ( MUR * RCSe ) ,( ( MUC / MUC ) + Max( DS,MLU ) ) ) ) * Max( CS,MUC ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( MDR - ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem / FirstVNF_RAM ) ) + ( BR * ( CRS - AMS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( ( DS + MUR ) * ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server - ( ( Max( Const,FirstVNF_RAM ) - Max( DDR,FirstVNF_CPU ) ) + AMS ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU ) )", "choosing": "( Min( ( MUM + RRSe ) ,Max( MLU,MLU ) ) + ( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) / ( Min( ( RCSe - RMSe ) ,Min( ( ( DS - ( RCSe - MLU ) ) / Max( Max( DS,CS ),DS ) ) ,( ( ( MUC / MUR ) * MUR ) - CS ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,Min( ACS ,Min( Min( Min( MRS ,PN ) ,CRS ) ,ACS ) ) ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU_Server + RRS ) ) ,Min( ( ( MRS + Min( DDR ,Min( ( AMS + Min( MRS ,MRS ) ) ,AMS ) ) ) / Min( ( MDR * MRS ) ,PN ) ) ,( DDR - MDR ) ) )", "choosing": "( ( CS - MUR ) / ( Max( ( MUR * MUM ),RMSe ) / ( RRSe + Min( Min( Max( ( CS / ( MUM * MLU ) ),( RRSe / DS ) ) ,RRSe ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,FirstVNF_CPU_Server ) + Max( Const,Max( DDR,FirstVNF_RAM_Server ) ) ) * Min( Min( ( Const / Max( ARS,Max( PN,RRS ) ) ) ,( FirstVNF_RAM + ARS ) ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( RMSe ,( ( CS + Min( MLU ,MUM ) ) / ( Min( MLU ,RRSe ) / ( RCSe * ( Min( MUM ,MUC ) + ( MUM + DS ) ) ) ) ) ) * ( CS * DS ) ) ,( Min( DS ,MUM ) / ( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( PN * ARS ) ) * ( ( PN - Const ) - ( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( CS - CS ) / Max( RRSe,CS ) ) * ( ( DS / RCSe ) - ( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server * Const ),Min( ACS ,FirstVNF_CPU_Server ) ) * Min( ( RRS - CRS ) ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) )", "choosing": "( ( MUR + MUM ) / Max( MUR,( DS * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - FirstVNF_CPU_Server ) / Min( MRS ,ARS ) ) - Min( ( MRS + CRS ) ,( FirstVNF_Mem_Server / MDR ) ) )", "choosing": "( ( Max( RCSe,DS ) / ( MUR + RRSe ) ) / ( ( RRSe - RRSe ) * Max( MUR,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem ) - ( PN + Max( FirstVNF_RAM_Server,( CRS - Const ) ) ) )", "choosing": "( Min( DS ,RCSe ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,( CRS + FirstVNF_RAM_Server ) ) ) / PN )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ACS / FirstVNF_CPU_Server ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - AMS ) / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( ( ( RCSe * MUM ) / MUC ) * MUM ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / Max( ( Const / Const ),DDR ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.09806201222336078}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),Max( ( FirstVNF_RAM + MDR ),Const ) ) ) )", "choosing": "( Max( DS,RRSe ) * ( Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),RRSe ) * RCSe ) )", "obj1": 0.5344129554655871, "obj2": 0.39469046584561446}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6599800774633041}, {"determining": "( Min( ( ( Min( ARS ,( ( MDR / FirstVNF_Mem_Server ) / MDR ) ) / ARS ) + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RRSe - ( ( CS + MUR ) * Max( ( RMSe - ( ( RCSe + RMSe ) + Max( RMSe,MUM ) ) ),( CS / MUR ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.20040485829959515, "obj2": 0.6309247343779684}, {"determining": "( ( MRS - Const ) + ( ARS + MDR ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.354251012145749, "obj2": 0.5476243883538581}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * ( CS * MLU ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.6376518218623481, "obj2": 0.32503586753480657}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( ( ARS + Min( FirstVNF_Mem_Server ,CRS ) ) + ARS ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_RAM ) ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( MLU / ( CS + DS ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6780042023171302}, {"determining": "( ( FirstVNF_CPU_Server + Min( BR ,PN ) ) / FirstVNF_RAM )", "choosing": "( Min( Max( MUC,RCSe ) ,CS ) - CS )", "obj1": 0.23481781376518218, "obj2": 0.627703250586987}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / ( ( DDR / DDR ) + ACS ) ),( DDR - FirstVNF_CPU_Server ) ) - Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU * Const ) ) )", "choosing": "( ( RCSe + ( RMSe * RMSe ) ) - Max( ( RMSe - Max( RMSe,RCSe ) ),MLU ) )", "obj1": 0.5020242914979757, "obj2": 0.4144286449590796}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "( ( ( RCSe * MUM ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.4939271255060729, "obj2": 0.4269823722416688}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,MUC ) )", "obj1": 0.5688259109311741, "obj2": 0.3671366202421045}, {"determining": "( RRS / ( FirstVNF_RAM_Server - RRS ) )", "choosing": "( DS * ( MLU + MUR ) )", "obj1": 0.42105263157894735, "obj2": 0.49871600688247936}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) / Min( PN ,( ( DDR - PN ) - ( ( Min( AMS ,( Min( MRS ,FirstVNF_RAM ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) - ( ( ACS * MDR ) - AMS ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( ( MUC + RMSe ) * MUM ) ,( Max( DS,( RCSe * MLU ) ) * ( RMSe * ( RRSe + CS ) ) ) ) - ( Max( MUM,RCSe ) / ( Min( Max( ( Max( CS,MLU ) * MUC ),( ( RMSe / ( RRSe / CS ) ) / ( MLU - CS ) ) ) ,Min( ( MUM * ( RMSe + RMSe ) ) ,MUR ) ) / RCSe ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),MUR )", "obj1": 0.4757085020242915, "obj2": 0.45260226615370486}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( ( FirstVNF_CPU + ( Max( FirstVNF_RAM,( MRS * FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ),Const ) )", "choosing": "( Min( CS ,( ( MUR - DS ) * ( Max( ( MUC + ( Min( RRSe ,RRSe ) + MUR ) ),CS ) + DS ) ) ) * ( RCSe - RRSe ) )", "obj1": 0.9331983805668016, "obj2": 0.0687702706799427}, {"determining": "( ( ( Min( AMS ,MDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) + Max( ( BR - AMS ),( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) ) ) ) + ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.22766355603085353}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "Max( ( Const + ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MRS ) ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) / Max( MUR,MUR ) ) ,CS ) / DS ) )", "obj1": 0.3643724696356275, "obj2": 0.5186450283821954}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( ( BR + ACS ) / FirstVNF_CPU_Server ) * RRS ) ,BR ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / Max( CS,( DS - MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.07778541417624427}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * ( AMS * PN ) ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( RRSe * MLU ) )", "obj1": 0.9696356275303644, "obj2": 0.029177548437635897}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( MLU / ( MUM + DS ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7265073726362229}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( AMS - ( Const / CRS ) ) * RRS ) ,Max( ( ( BR + ACS ) / FirstVNF_CPU_Server ),Const ) ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( CS + ( DS - MUM ) ) - RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.9048582995951417, "obj2": 0.08577699236429566}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.12955465587044535, "obj2": 0.6938910441757453}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.09806201222336078}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.12955465587044535, "obj2": 0.6938910441757453}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( Const / BR ) / ( Const / BR ) )", "choosing": "( ( RMSe * ( RMSe * DS ) ) / CS )", "obj1": 0.3684210526315789, "obj2": 0.5162330448304651}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.11538461538461539, "obj2": 0.7001265397547616}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6761133603238867, "obj2": 0.2821400570558815}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( Min( BR ,PN ) + BR ) / FirstVNF_RAM )", "choosing": "( Min( RMSe ,( MLU - MUC ) ) - CS )", "obj1": 0.1194331983805668, "obj2": 0.6952818615420231}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( RRSe - MUR ) - Min( CS ,DS ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( ARS - Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,Min( ( Min( MUC ,DS ) - RMSe ) ,MLU ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.027738936596801298}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( RRSe - RCSe ) * ( DS - Min( RMSe ,Max( CS,( ( MLU / RMSe ) - Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) ) ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( ACS / FirstVNF_CPU_Server ) / ( AMS - ( AMS - Const ) ) )", "choosing": "( ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) / CS ) - Min( ( Min( MLU ,Max( MLU,( Max( ( RCSe / CS ),RRSe ) / RRSe ) ) ) / Max( MLU,( ( Min( Max( CS,CS ) ,MUC ) / CS ) - CS ) ) ) ,DS ) )", "obj1": 0.0951417004048583, "obj2": 0.7073170498936073}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( Const ,( Max( PN,PN ) - ( ( RRS + MDR ) - FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem,( AMS / Min( FirstVNF_CPU_Server ,PN ) ) ) ) / PN )", "choosing": "( ( ( Max( MUM,DS ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.09716599190283401, "obj2": 0.7030343227734178}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "( ( AMS - Const ) / ( AMS - Const ) )", "choosing": "( ( ( Max( MLU,( ( Min( Max( CS,CS ) ,MUC ) / CS ) - CS ) ) / RRSe ) / CS ) - Min( ( Min( MLU ,Max( MLU,Max( CS,RRSe ) ) ) / Max( MLU,( ( Min( Max( CS,CS ) ,MUC ) / CS ) - CS ) ) ) ,DS ) )", "obj1": 0.0931174089068826, "obj2": 0.7077105799390746}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "Max( ( AMS + FirstVNF_Mem ),( Min( CRS ,( MRS + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RCSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + CS ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7119908877160672}, {"determining": "( ( Const * DDR ) + Min( BR ,PN ) )", "choosing": "Min( ( ( RMSe / MUC ) - MUC ) ,Max( CS,CS ) )", "obj1": 0.10121457489878542, "obj2": 0.7023399548532102}, {"determining": "Max( ( Const + ( BR * ARS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) ,CS ) / DS ) )", "obj1": 0.36639676113360325, "obj2": 0.5163820077298169}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ARS ) + ( RRS / FirstVNF_CPU_Server ) ) / PN )", "choosing": "( ( ( ( RMSe / RMSe ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "Max( ( CRS * BR ),Max( Const,Min( ( MRS / FirstVNF_RAM_Server ) ,Min( CRS ,MDR ) ) ) )", "choosing": "( ( ( ( RCSe - RRSe ) * RMSe ) - RRSe ) * ( RRSe + DS ) )", "obj1": 0.08502024291497975, "obj2": 0.7121901889140073}, {"determining": "( PN / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ARS ) + ( RRS / FirstVNF_CPU_Server ) ) / PN )", "choosing": "( ( ( ( RMSe / RMSe ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( Const ,( Max( PN,PN ) - ( ( RRS + MDR ) - FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem,( AMS / Min( FirstVNF_CPU_Server ,PN ) ) ) ) / PN )", "choosing": "( ( ( Max( MUM,DS ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.09716599190283401, "obj2": 0.7030343227734178}, {"determining": "Max( ( CRS * BR ),Max( Const,( CRS * BR ) ) )", "choosing": "( ( ( RCSe - RRSe ) - RRSe ) * ( RRSe + DS ) )", "obj1": 0.08502024291497975, "obj2": 0.7121901889140073}, {"determining": "( CRS + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( ( RCSe - RRSe ) * ( RRSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / CRS ) )", "choosing": "( Min( RMSe ,CS ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,BR ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( ( MUR - RCSe ) - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR * MRS ) ,MDR ) - Min( ( BR + MDR ) ,FirstVNF_Mem ) )", "choosing": "Min( Max( Min( ( Max( MLU,CS ) - RCSe ) ,Max( ( MUM / ( ( DS - CS ) - MUC ) ),( ( Min( MLU ,RCSe ) + MLU ) - CS ) ) ),( RRSe / Max( ( MUM / MUM ),( MUR - MLU ) ) ) ) ,Min( Max( CS,( Max( DS,Min( ( MUR * RCSe ) ,( ( MUC / MUC ) + Max( DS,MLU ) ) ) ) * Max( CS,MUC ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( MDR - ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem / FirstVNF_RAM ) ) + ( BR * ( CRS - AMS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( ( DS + MUR ) * ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( FirstVNF_RAM + ( FirstVNF_CPU_Server - ( ( Max( Const,FirstVNF_RAM ) - Max( DDR,FirstVNF_CPU ) ) + AMS ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU ) )", "choosing": "( Min( ( MUM + RRSe ) ,Max( MLU,MLU ) ) + ( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) / ( Min( ( RCSe - RMSe ) ,Min( ( ( DS - ( RCSe - MLU ) ) / Max( Max( DS,CS ),DS ) ) ,( ( ( MUC / MUR ) * MUR ) - CS ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,( CRS + FirstVNF_RAM_Server ) ) ) / PN )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( RRS * FirstVNF_CPU ) + CRS ) + Min( ( Max( FirstVNF_Mem,RRS ) / Const ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( DS + MLU ) ,( MLU / ( MUM + ( Max( ( MUC / Min( RCSe ,Min( DS ,MUC ) ) ),( MUR * MUC ) ) * Min( RCSe ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_CPU_Server ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / Max( ( Const / Const ),DDR ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.09806201222336078}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( ( MRS - Const ) + ( ARS + MDR ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.354251012145749, "obj2": 0.5476243883538581}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),Max( ( FirstVNF_RAM + MDR ),Const ) ) ) )", "choosing": "( Max( DS,RRSe ) * ( Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),RRSe ) * RCSe ) )", "obj1": 0.5344129554655871, "obj2": 0.39469046584561446}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( ( FirstVNF_CPU_Server + Min( BR ,PN ) ) / FirstVNF_RAM )", "choosing": "( Min( Max( MUC,RCSe ) ,CS ) - CS )", "obj1": 0.23481781376518218, "obj2": 0.627703250586987}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / ( ( DDR / DDR ) + ACS ) ),( DDR - FirstVNF_CPU_Server ) ) - Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU * Const ) ) )", "choosing": "( ( RCSe + ( RMSe * RMSe ) ) - Max( ( RMSe - Max( RMSe,RCSe ) ),MLU ) )", "obj1": 0.5020242914979757, "obj2": 0.4144286449590796}, {"determining": "( Min( ( ( Min( ARS ,( ( MDR / FirstVNF_Mem_Server ) / MDR ) ) / ARS ) + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RRSe - ( ( CS + MUR ) * Max( ( RMSe - ( ( RCSe + RMSe ) + Max( RMSe,MUM ) ) ),( CS / MUR ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.20040485829959515, "obj2": 0.6309247343779684}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "( ( ( RCSe * MUM ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.4939271255060729, "obj2": 0.4269823722416688}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "( ( FirstVNF_Mem_Server / ( ( AMS - RRS ) * ( AMS / AMS ) ) ) / ( FirstVNF_CPU + ( FirstVNF_CPU - RRS ) ) )", "choosing": "( ( ( ( DS * ( ( Min( ( MUR - MUC ) ,CS ) + RRSe ) * ( MUM - ( MUC - RRSe ) ) ) ) * MUM ) / MUC ) / Max( MUC,MUM ) )", "obj1": 0.41700404858299595, "obj2": 0.4982990235800173}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - ( BR * CRS ) ) ) ) ) - DDR ) - RRS ) )", "choosing": "( Min( ( MUM + RRSe ) ,Min( DS ,Max( Min( RCSe ,( ( ( CS * RCSe ) - ( RRSe + DS ) ) / RCSe ) ),( RCSe * ( Min( ( CS / MUC ) ,( RRSe * RRSe ) ) / MUR ) ) ) ) ) + Min( ( ( MLU - CS ) * MUM ) ,( MUM * CS ) ) )", "obj1": 0.19230769230769232, "obj2": 0.6565919739947139}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe / ( DS / RRSe ) ) / ( RCSe + MUC ) ) / MUC ) / ( RCSe + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.06477732793522267, "obj2": 0.7425002603181122}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),MUR )", "obj1": 0.4757085020242915, "obj2": 0.45260226615370486}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6599800774633041}, {"determining": "( ( ( Min( AMS ,MDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) + Max( ( BR - AMS ),( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) ) ) ) + ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.22766355603085353}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) / Min( PN ,( ( DDR - PN ) - ( ( Min( AMS ,( Min( MRS ,FirstVNF_RAM ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) - ( ( ACS * MDR ) - AMS ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( ( MUC + RMSe ) * MUM ) ,( Max( DS,( RCSe * MLU ) ) * ( RMSe * ( RRSe + CS ) ) ) ) - ( Max( MUM,RCSe ) / ( Min( Max( ( Max( CS,MLU ) * MUC ),( ( RMSe / ( RRSe / CS ) ) / ( MLU - CS ) ) ) ,Min( ( MUM * ( RMSe + RMSe ) ) ,MUR ) ) / RCSe ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "Max( ( Const + ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MRS ) ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) / Max( MUR,MUR ) ) ,CS ) / DS ) )", "obj1": 0.3643724696356275, "obj2": 0.5186450283821954}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( ( MDR / ( Max( DDR,AMS ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) * Max( DS,RRSe ) )", "obj1": 0.5607287449392713, "obj2": 0.38512584451191445}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( ( ( Min( RCSe ,RCSe ) / ( ( ( CS + ( MUC - MUC ) ) - ( MLU - RRSe ) ) / MUC ) ) * MUM ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.14979757085020243, "obj2": 0.6859284422870391}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * ( AMS * PN ) ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( RRSe * MLU ) )", "obj1": 0.9696356275303644, "obj2": 0.029177548437635897}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( AMS - ( Const / CRS ) ) * RRS ) ,Max( ( ( BR + ACS ) / FirstVNF_CPU_Server ),Const ) ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( CS + ( DS - MUM ) ) - RCSe ) - Min( RMSe ,MUM ) ) )", "obj1": 0.9048582995951417, "obj2": 0.08577699236429566}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( ( BR + ACS ) / FirstVNF_CPU_Server ) * RRS ) ,BR ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / Max( CS,( DS - MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.07778541417624427}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "Min( ( ACS / FirstVNF_Mem ) ,Min( ( ( FirstVNF_CPU - ARS ) / ( BR * BR ) ) ,( Min( FirstVNF_CPU_Server ,MDR ) * ( CRS * MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + MLU ) * MUM ) / Min( DS ,MLU ) ),( ( Max( Max( Max( ( DS - RRSe ),DS ),Min( DS ,MUC ) ),RMSe ) - MUC ) / RCSe ) )", "obj1": 0.9008097165991903, "obj2": 0.09806201222336078}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( FirstVNF_Mem / ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( RCSe ,RCSe ) / ( ( ( CS + ( MUC - MUC ) ) - ( MLU - RRSe ) ) / MUC ) ) * MUM ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.16396761133603238, "obj2": 0.676402603786679}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( ( ARS + Min( FirstVNF_Mem_Server ,CRS ) ) + ARS ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_RAM ) ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUC / MUR ) ,( MLU / ( CS + DS ) ) )", "obj1": 0.15587044534412955, "obj2": 0.6780042023171302}, {"determining": "( ( Const / BR ) / ( Const / BR ) )", "choosing": "( ( RMSe * ( RMSe * DS ) ) / CS )", "obj1": 0.3684210526315789, "obj2": 0.5162330448304651}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ACS,( BR + MRS ) ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6962840715397454}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( ( FirstVNF_CPU + ( Max( FirstVNF_RAM,( MRS * FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ),Const ) )", "choosing": "( Min( CS ,( ( MUR - DS ) * ( Max( ( MUC + ( Min( RRSe ,RRSe ) + MUR ) ),CS ) + DS ) ) ) * ( RCSe - RRSe ) )", "obj1": 0.9331983805668016, "obj2": 0.0687702706799427}, {"determining": "( ( Max( ( BR - MDR ),Max( Const,FirstVNF_CPU_Server ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.12955465587044535, "obj2": 0.6938910441757453}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.12955465587044535, "obj2": 0.6938910441757453}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}, {"determining": "( ( Min( ( CRS + ( AMS + FirstVNF_Mem ) ) ,Max( Max( ( ACS - FirstVNF_CPU_Server ),ARS ),CRS ) ) / Min( Min( MDR ,MDR ) ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RRSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( MLU * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( DS - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "( ( Min( BR ,PN ) + BR ) / FirstVNF_RAM )", "choosing": "( Min( RMSe ,( MLU - MUC ) ) - CS )", "obj1": 0.1194331983805668, "obj2": 0.6952818615420231}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) ),MRS ) )", "choosing": "( RMSe / Min( RMSe ,MUR ) )", "obj1": 0.9311740890688259, "obj2": 0.06991128326430089}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( ARS - Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,Min( ( Min( MUC ,DS ) - RMSe ) ,MLU ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.027738936596801298}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( RRSe - MUR ) - Min( CS ,DS ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "( FirstVNF_Mem / ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( RCSe ,RCSe ) / ( ( ( CS + ( MUC - MUC ) ) - ( MLU - RRSe ) ) / MUC ) ) * MUM ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.16396761133603238, "obj2": 0.676402603786679}, {"determining": "( ( ACS / FirstVNF_CPU_Server ) / ( AMS - ( AMS - Const ) ) )", "choosing": "( ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) / CS ) - Min( ( Min( MLU ,Max( MLU,( Max( ( RCSe / CS ),RRSe ) / RRSe ) ) ) / Max( MLU,( ( Min( Max( CS,CS ) ,MUC ) / CS ) - CS ) ) ) ,DS ) )", "obj1": 0.0951417004048583, "obj2": 0.7073170498936073}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( Const ,( Max( PN,PN ) - ( ( RRS + MDR ) - FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem,( AMS / Min( FirstVNF_CPU_Server ,PN ) ) ) ) / PN )", "choosing": "( ( ( Max( MUM,DS ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.09716599190283401, "obj2": 0.7030343227734178}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( RRSe - RCSe ) * ( DS - Min( RMSe ,Max( CS,( ( MLU / RMSe ) - Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) ) ) ) ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( ( Const * DDR ) + Min( BR ,PN ) )", "choosing": "Min( ( ( RMSe / MUC ) - MUC ) ,Max( CS,CS ) )", "obj1": 0.10121457489878542, "obj2": 0.7023399548532102}, {"determining": "Max( ( Const + ( BR * ARS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) ,CS ) / DS ) )", "obj1": 0.36639676113360325, "obj2": 0.5163820077298169}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( Max( FirstVNF_Mem,( AMS / AMS ) ) + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,RCSe ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.09109311740890688, "obj2": 0.707390773508425}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "Max( ( CRS * BR ),Max( Const,( CRS * BR ) ) )", "choosing": "( ( ( RCSe - RRSe ) - RRSe ) * ( RRSe + DS ) )", "obj1": 0.08502024291497975, "obj2": 0.7121901889140073}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ARS ) + ( RRS / FirstVNF_CPU_Server ) ) / PN )", "choosing": "( ( ( ( RMSe / RMSe ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( FirstVNF_CPU + Min( BR ,Min( Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( MLU - MLU ) * Min( RRSe ,RCSe ) ) - MUC ) - MUR ) / ( ( MUM - MUC ) - ( RRSe * ( ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) - ( ( ( MUM - MUC ) + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) * Min( ( ( CS / MLU ) * RMSe ) ,MUR ) ) ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.7119155656958334}], "8": [{"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,( CRS + FirstVNF_RAM_Server ) ) ) / PN )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) ) - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * FirstVNF_CPU ) + CRS ) + Min( ( Max( FirstVNF_Mem,RRS ) / Const ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( DS + MLU ) ,( MLU / ( MUM + ( Max( ( MUC / Min( RCSe ,Min( DS ,MUC ) ) ),( MUR * MUC ) ) * Min( RCSe ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / Max( ( Const / Const ),DDR ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( ( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( RMSe - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.9008097165991903, "obj2": 0.08645167331526345}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( BR + MRS ),( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.14979757085020243, "obj2": 0.6731026793514701}, {"determining": "( ( MRS - Const ) + ( ARS + MDR ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.354251012145749, "obj2": 0.5476243883538581}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "( ( ( RCSe * MUM ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.4939271255060729, "obj2": 0.4269823722416688}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),Max( ( FirstVNF_RAM + MDR ),Const ) ) ) )", "choosing": "( Max( DS,RRSe ) * ( Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),RRSe ) * RCSe ) )", "obj1": 0.5344129554655871, "obj2": 0.39469046584561446}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6599800774633041}, {"determining": "Max( Min( ( FirstVNF_Mem_Server - ( MRS + Const ) ) ,( ARS + AMS ) ),( ( Const + ACS ) / ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( DS ,MUR ) / DS ) - Min( ( MUC / RMSe ) ,( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6147129182113017}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - ( BR * CRS ) ) ) ) ) - DDR ) - RRS ) )", "choosing": "( Min( ( MUM + RRSe ) ,Min( DS ,Max( Min( RCSe ,( ( ( CS * RCSe ) - ( RRSe + DS ) ) / RCSe ) ),( RCSe * ( Min( ( CS / MUC ) ,( RRSe * RRSe ) ) / MUR ) ) ) ) ) + Min( ( ( MLU - CS ) * MUM ) ,( MUM * CS ) ) )", "obj1": 0.19230769230769232, "obj2": 0.6565919739947139}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe / ( DS / RRSe ) ) / ( RCSe + MUC ) ) / MUC ) / ( RCSe + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.06477732793522267, "obj2": 0.7425002603181122}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Min( ( ( Min( ARS ,( ( MDR / FirstVNF_Mem_Server ) / MDR ) ) / ARS ) + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RRSe - ( ( CS + MUR ) * Max( ( RMSe - ( ( RCSe + RMSe ) + Max( RMSe,MUM ) ) ),( CS / MUR ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.20040485829959515, "obj2": 0.6309247343779684}, {"determining": "( FirstVNF_RAM_Server - ( ( BR / AMS ) + ( Max( DDR,FirstVNF_Mem ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( ( ( Max( ( RRSe - CS ),Max( MLU,RRSe ) ) * ( Max( MUM,RCSe ) - RRSe ) ) + CS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.4093331022809955}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),MUR )", "obj1": 0.4757085020242915, "obj2": 0.45260226615370486}, {"determining": "( ( FirstVNF_Mem_Server / ( ( AMS - RRS ) * ( AMS / AMS ) ) ) / ( FirstVNF_CPU + ( FirstVNF_CPU - RRS ) ) )", "choosing": "( ( ( ( DS * ( ( Min( ( MUR - MUC ) ,CS ) + RRSe ) * ( MUM - ( MUC - RRSe ) ) ) ) * MUM ) / MUC ) / Max( MUC,MUM ) )", "obj1": 0.41700404858299595, "obj2": 0.4982990235800173}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / ( ( DDR / DDR ) + ACS ) ),( DDR - FirstVNF_CPU_Server ) ) - Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU * Const ) ) )", "choosing": "( ( RCSe + ( RMSe * RMSe ) ) - Max( ( RMSe - Max( RMSe,RCSe ) ),MLU ) )", "obj1": 0.5020242914979757, "obj2": 0.4144286449590796}, {"determining": "( ( ( Min( AMS ,MDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) + Max( ( BR - AMS ),( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) ) ) ) + ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.22766355603085353}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) / Min( PN ,( ( DDR - PN ) - ( ( Min( AMS ,( Min( MRS ,FirstVNF_RAM ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) - ( ( ACS * MDR ) - AMS ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( ( MUC + RMSe ) * MUM ) ,( Max( DS,( RCSe * MLU ) ) * ( RMSe * ( RRSe + CS ) ) ) ) - ( Max( MUM,RCSe ) / ( Min( Max( ( Max( CS,MLU ) * MUC ),( ( RMSe / ( RRSe / CS ) ) / ( MLU - CS ) ) ) ,Min( ( MUM * ( RMSe + RMSe ) ) ,MUR ) ) / RCSe ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "Max( ( Const + ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MRS ) ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) / Max( MUR,MUR ) ) ,CS ) / DS ) )", "obj1": 0.3643724696356275, "obj2": 0.5186450283821954}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( ( MDR / ( Max( DDR,AMS ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) * Max( DS,RRSe ) )", "obj1": 0.5607287449392713, "obj2": 0.38512584451191445}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ),( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) - RCSe ) * ( DS - Min( RMSe ,Max( CS,( ( MLU / RMSe ) - Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) ) ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6307757883318823}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( Max( FirstVNF_RAM,( ACS + Max( ( PN * PN ),( FirstVNF_CPU - Const ) ) ) ) - ( ( Const / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / MLU ) + Min( RCSe ,MUR ) ) )", "obj1": 0.9919028340080972, "obj2": 0.009584209646344995}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * ( AMS * PN ) ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( RRSe * MLU ) )", "obj1": 0.9696356275303644, "obj2": 0.029177548437635897}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),( PN * ( FirstVNF_Mem - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * ( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5763178218096784}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( CS + Min( CS ,MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4251012145748988, "obj2": 0.48966760252805575}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( Const / BR ) / ( Const / BR ) )", "choosing": "( ( RMSe * ( RMSe * DS ) ) / CS )", "obj1": 0.3684210526315789, "obj2": 0.5162330448304651}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( ( FirstVNF_CPU + ( Max( FirstVNF_RAM,( MRS * FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ),Const ) )", "choosing": "( Min( CS ,( ( MUR - DS ) * ( Max( ( MUC + ( Min( RRSe ,RRSe ) + MUR ) ),CS ) + DS ) ) ) * ( RCSe - RRSe ) )", "obj1": 0.9331983805668016, "obj2": 0.0687702706799427}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.451417004048583, "obj2": 0.46628354657402027}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.451417004048583, "obj2": 0.46628354657402027}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( ( BR + ACS ) / FirstVNF_CPU_Server ) * RRS ) ,BR ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / Max( CS,( DS - MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.07778541417624427}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) ) ) )", "choosing": "( ( MLU + ( ( MLU + RMSe ) / Min( RMSe ,MUR ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.9210526315789473, "obj2": 0.07652527467217698}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) ),MRS ) )", "choosing": "( RMSe / Min( RMSe ,MUR ) )", "obj1": 0.9311740890688259, "obj2": 0.06991128326430089}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( ARS - Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,Min( ( Min( MUC ,DS ) - RMSe ) ,MLU ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( MLU + RMSe ) + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9089068825910931, "obj2": 0.08167843183106095}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.027738936596801298}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( RRSe - MUR ) - Min( CS ,DS ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.9048582995951417, "obj2": 0.08536225464728116}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( Const ,( Max( PN,PN ) - ( ( RRS + MDR ) - FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem,( AMS / Min( FirstVNF_CPU_Server ,PN ) ) ) ) / PN )", "choosing": "( ( ( Max( MUM,DS ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.09716599190283401, "obj2": 0.7030343227734178}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( CS + MUR ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4291497975708502, "obj2": 0.4871136383143551}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ARS ) + ( RRS / FirstVNF_CPU_Server ) ) / PN )", "choosing": "( ( ( ( RMSe / RMSe ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "Max( ( CRS * BR ),Max( Const,( CRS * BR ) ) )", "choosing": "( ( ( RCSe - RRSe ) - RRSe ) * ( RRSe + DS ) )", "obj1": 0.08502024291497975, "obj2": 0.7121901889140073}, {"determining": "( ( Const * DDR ) + Min( BR ,PN ) )", "choosing": "Min( ( ( RMSe / MUC ) - MUC ) ,Max( CS,CS ) )", "obj1": 0.10121457489878542, "obj2": 0.7023399548532102}, {"determining": "( ( Min( ( CRS + ( AMS + FirstVNF_Mem ) ) ,Max( Max( ( ACS - FirstVNF_CPU_Server ),ARS ),CRS ) ) / Min( Min( MDR ,MDR ) ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RRSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( MLU * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( DS - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "Max( ( Const + ( BR * ARS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) ,CS ) / DS ) )", "obj1": 0.36639676113360325, "obj2": 0.5163820077298169}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}], "9": [{"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,( CRS + FirstVNF_RAM_Server ) ) ) / PN )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) ) - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( RMSe + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / Max( ( Const / Const ),DDR ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( ( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( RMSe - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.9008097165991903, "obj2": 0.08645167331526345}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( ( FirstVNF_Mem_Server / Max( ( BR + MRS ),( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.14979757085020243, "obj2": 0.6731026793514701}, {"determining": "( ( MRS - Const ) + ( ARS + MDR ) )", "choosing": "( ( DS / MUR ) + Min( MUR ,RMSe ) )", "obj1": 0.354251012145749, "obj2": 0.5476243883538581}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "( Min( ( ( Min( ARS ,( ( MDR / FirstVNF_Mem_Server ) / MDR ) ) / ARS ) + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RRSe - ( ( CS + MUR ) * Max( ( RMSe - ( ( RCSe + RMSe ) + Max( RMSe,MUM ) ) ),( CS / MUR ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.20040485829959515, "obj2": 0.6309247343779684}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),Max( ( FirstVNF_RAM + MDR ),Const ) ) ) )", "choosing": "( Max( DS,RRSe ) * ( Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),RRSe ) * RCSe ) )", "obj1": 0.5344129554655871, "obj2": 0.39469046584561446}, {"determining": "Max( Min( ( FirstVNF_Mem_Server - ( MRS + Const ) ) ,( ARS + AMS ) ),( ( Const + ACS ) / ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( DS ,MUR ) / DS ) - Min( ( MUC / RMSe ) ,( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6147129182113017}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / ( MUC / RMSe ) ) / ( CS * MLU ) )", "obj1": 0.18016194331983806, "obj2": 0.6528778514800314}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe / ( DS / RRSe ) ) / ( RCSe + MUC ) ) / MUC ) / ( RCSe + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.06477732793522267, "obj2": 0.7425002603181122}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( FirstVNF_RAM_Server - ( ( BR / AMS ) + ( Max( DDR,FirstVNF_Mem ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( ( ( Max( ( RRSe - CS ),Max( MLU,RRSe ) ) * ( Max( MUM,RCSe ) - RRSe ) ) + CS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.4093331022809955}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6599800774633041}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / ( ( DDR / DDR ) + ACS ) ),( DDR - FirstVNF_CPU_Server ) ) - Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU * Const ) ) )", "choosing": "( ( RCSe + ( RMSe * RMSe ) ) - Max( ( RMSe - Max( RMSe,RCSe ) ),MLU ) )", "obj1": 0.5020242914979757, "obj2": 0.4144286449590796}, {"determining": "( ( FirstVNF_Mem_Server / ( ( AMS - RRS ) * ( AMS / AMS ) ) ) / ( FirstVNF_CPU + ( FirstVNF_CPU - RRS ) ) )", "choosing": "( ( ( ( DS * ( ( Min( ( MUR - MUC ) ,CS ) + RRSe ) * ( MUM - ( MUC - RRSe ) ) ) ) * MUM ) / MUC ) / Max( MUC,MUM ) )", "obj1": 0.41700404858299595, "obj2": 0.4982990235800173}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),MUR )", "obj1": 0.4757085020242915, "obj2": 0.45260226615370486}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) / Min( PN ,( ( DDR - PN ) - ( ( Min( AMS ,( Min( MRS ,FirstVNF_RAM ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) - ( ( ACS * MDR ) - AMS ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( ( MUC + RMSe ) * MUM ) ,( Max( DS,( RCSe * MLU ) ) * ( RMSe * ( RRSe + CS ) ) ) ) - ( Max( MUM,RCSe ) / ( Min( Max( ( Max( CS,MLU ) * MUC ),( ( RMSe / ( RRSe / CS ) ) / ( MLU - CS ) ) ) ,Min( ( MUM * ( RMSe + RMSe ) ) ,MUR ) ) / RCSe ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "Max( ( Const + ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MRS ) ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) / Max( MUR,MUR ) ) ,CS ) / DS ) )", "obj1": 0.3643724696356275, "obj2": 0.5186450283821954}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( ( MDR / ( Max( DDR,AMS ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) * Max( DS,RRSe ) )", "obj1": 0.5607287449392713, "obj2": 0.38512584451191445}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ),( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) - RCSe ) * ( DS - Min( RMSe ,Max( CS,( ( MLU / RMSe ) - Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) ) ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6307757883318823}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( Max( FirstVNF_RAM,( ACS + Max( ( PN * PN ),( FirstVNF_CPU - Const ) ) ) ) - ( ( Const / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / MLU ) + Min( RCSe ,MUR ) ) )", "obj1": 0.9919028340080972, "obj2": 0.009584209646344995}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * ( AMS * PN ) ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( RRSe * MLU ) )", "obj1": 0.9696356275303644, "obj2": 0.029177548437635897}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.7469635627530364, "obj2": 0.2383200204962132}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),( PN * ( FirstVNF_Mem - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * ( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5763178218096784}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( CS / RMSe ) ) + MUM ) )", "obj1": 0.7550607287449392, "obj2": 0.22517926165237778}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( CS + Min( CS ,MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4251012145748988, "obj2": 0.48966760252805575}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( Const / BR ) / ( Const / BR ) )", "choosing": "( ( RMSe * ( RMSe * DS ) ) / CS )", "obj1": 0.3684210526315789, "obj2": 0.5162330448304651}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "( ( ( Min( AMS ,MDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) + Max( ( BR - AMS ),( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) ) ) ) + ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.22766355603085353}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.44534412955465585, "obj2": 0.4680053201665027}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,Max( ( FirstVNF_CPU + ( Max( FirstVNF_RAM,( MRS * FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ),Const ) )", "choosing": "( Min( CS ,( ( MUR - DS ) * ( Max( ( MUC + ( Min( RRSe ,RRSe ) + MUR ) ),CS ) + DS ) ) ) * ( RCSe - RRSe ) )", "obj1": 0.9331983805668016, "obj2": 0.0687702706799427}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( ( BR + ACS ) / FirstVNF_CPU_Server ) * RRS ) ,BR ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / Max( CS,( DS - MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.07778541417624427}, {"determining": "Max( ( CRS * BR ),Max( Const,FirstVNF_Mem ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe + DS ) )", "obj1": 0.10323886639676114, "obj2": 0.7022013240017522}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) ) ) )", "choosing": "( ( MLU + ( ( MLU + RMSe ) / Min( RMSe ,MUR ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.9210526315789473, "obj2": 0.07652527467217698}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( ARS - Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,Min( ( Min( MUC ,DS ) - RMSe ) ,MLU ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( MLU + RMSe ) + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9089068825910931, "obj2": 0.08167843183106095}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( ( ( Min( RRSe ,MLU ) + MUC ) - MLU ) + ( ( MUR + MUM ) + ( MUM / MUM ) ) )", "obj1": 0.9757085020242915, "obj2": 0.027738936596801298}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( RRSe - MUR ) - Min( CS ,DS ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.451417004048583, "obj2": 0.46628354657402027}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "( ( Min( FirstVNF_RAM_Server ,ARS ) + ( RRS / FirstVNF_CPU_Server ) ) / PN )", "choosing": "( ( ( ( RMSe / RMSe ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.08906882591093117, "obj2": 0.7096198361298112}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( Min( FirstVNF_Mem_Server ,Min( Const ,( Max( PN,PN ) - ( ( RRS + MDR ) - FirstVNF_CPU ) ) ) ) / Max( FirstVNF_Mem,( AMS / Min( FirstVNF_CPU_Server ,PN ) ) ) ) / PN )", "choosing": "( ( ( Max( MUM,DS ) / ( MUC * CS ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.09716599190283401, "obj2": 0.7030343227734178}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( CS + MUR ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4291497975708502, "obj2": 0.4871136383143551}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.451417004048583, "obj2": 0.46628354657402027}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) ),MRS ) )", "choosing": "( RMSe / Min( RMSe ,MUR ) )", "obj1": 0.9311740890688259, "obj2": 0.06991128326430089}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.9048582995951417, "obj2": 0.08536225464728116}, {"determining": "Max( ( CRS * BR ),Max( Const,( CRS * BR ) ) )", "choosing": "( ( ( RCSe - RRSe ) - RRSe ) * ( RRSe + DS ) )", "obj1": 0.08502024291497975, "obj2": 0.7121901889140073}, {"determining": "( ( Const * DDR ) + Min( BR ,PN ) )", "choosing": "Min( ( ( RMSe / MUC ) - MUC ) ,Max( CS,CS ) )", "obj1": 0.10121457489878542, "obj2": 0.7023399548532102}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}], "10": [{"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,( CRS + FirstVNF_RAM_Server ) ) ) / PN )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( DDR - ARS ) * ARS ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( ( Min( Min( MUC ,( RMSe * MUC ) ) ,DS ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * DS ),Min( MUM ,CS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / Max( ( Const / Const ),DDR ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( ( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( RMSe - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.9008097165991903, "obj2": 0.08645167331526345}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,FirstVNF_CPU ) ) + ARS ),FirstVNF_CPU_Server ) - ( ACS + Min( FirstVNF_Mem ,ARS ) ) ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) * ( ( MLU - DS ) + Min( RCSe ,RCSe ) ) )", "obj1": 0.3340080971659919, "obj2": 0.5458845216620365}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "Max( ( Const + ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MRS ) ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) / Max( MUR,MUR ) ) ,CS ) / DS ) )", "obj1": 0.3643724696356275, "obj2": 0.5186450283821954}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),Max( ( FirstVNF_RAM + MDR ),Const ) ) ) )", "choosing": "( Max( DS,RRSe ) * ( Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),RRSe ) * RCSe ) )", "obj1": 0.5344129554655871, "obj2": 0.39469046584561446}, {"determining": "Max( Min( ( FirstVNF_Mem_Server - ( MRS + Const ) ) ,( ARS + AMS ) ),( ( Const + ACS ) / ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( DS ,MUR ) / DS ) - Min( ( MUC / RMSe ) ,( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6147129182113017}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe / ( DS / RRSe ) ) / ( RCSe + MUC ) ) / MUC ) / ( RCSe + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.06477732793522267, "obj2": 0.7425002603181122}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( FirstVNF_RAM_Server - ( ( BR / AMS ) + ( Max( DDR,FirstVNF_Mem ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( ( ( Max( ( RRSe - CS ),Max( MLU,RRSe ) ) * ( Max( MUM,RCSe ) - RRSe ) ) + CS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.4093331022809955}, {"determining": "( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / ( ( DDR / DDR ) + ACS ) ),( DDR - FirstVNF_CPU_Server ) ) - Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU * Const ) ) )", "choosing": "( ( RCSe + ( RMSe * RMSe ) ) - Max( ( RMSe - Max( RMSe,RCSe ) ),MLU ) )", "obj1": 0.5020242914979757, "obj2": 0.4144286449590796}, {"determining": "( ( FirstVNF_Mem_Server / ( ( AMS - RRS ) * ( AMS / AMS ) ) ) / ( FirstVNF_CPU + ( FirstVNF_CPU - RRS ) ) )", "choosing": "( ( ( ( DS * ( ( Min( ( MUR - MUC ) ,CS ) + RRSe ) * ( MUM - ( MUC - RRSe ) ) ) ) * MUM ) / MUC ) / Max( MUC,MUM ) )", "obj1": 0.41700404858299595, "obj2": 0.4982990235800173}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),MUR )", "obj1": 0.4757085020242915, "obj2": 0.45260226615370486}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) / Min( PN ,( ( DDR - PN ) - ( ( Min( AMS ,( Min( MRS ,FirstVNF_RAM ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) - ( ( ACS * MDR ) - AMS ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( ( MUC + RMSe ) * MUM ) ,( Max( DS,( RCSe * MLU ) ) * ( RMSe * ( RRSe + CS ) ) ) ) - ( Max( MUM,RCSe ) / ( Min( Max( ( Max( CS,MLU ) * MUC ),( ( RMSe / ( RRSe / CS ) ) / ( MLU - CS ) ) ) ,Min( ( MUM * ( RMSe + RMSe ) ) ,MUR ) ) / RCSe ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6599800774633041}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( MDR / ( ( MDR / ( Max( DDR,AMS ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) * Max( DS,RRSe ) )", "obj1": 0.5607287449392713, "obj2": 0.38512584451191445}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,FirstVNF_CPU ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.19635627530364372, "obj2": 0.6472847993663061}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ),( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) - RCSe ) * ( DS - Min( RMSe ,Max( CS,( ( MLU / RMSe ) - Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) ) ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6307757883318823}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( Max( FirstVNF_RAM,( ACS + Max( ( PN * PN ),( FirstVNF_CPU - Const ) ) ) ) - ( ( Const / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / MLU ) + Min( RCSe ,MUR ) ) )", "obj1": 0.9919028340080972, "obj2": 0.009584209646344995}, {"determining": "( Min( ( ( Min( ARS ,( ( MDR / FirstVNF_Mem_Server ) / MDR ) ) / ARS ) + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RRSe - ( ( CS + MUR ) * Max( ( RMSe - ( ( RCSe + RMSe ) + Max( RMSe,MUM ) ) ),( CS / MUR ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.20040485829959515, "obj2": 0.6309247343779684}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "( MDR / ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( MLU - DS ) + Min( RCSe ,RCSe ) ) )", "obj1": 0.7449392712550608, "obj2": 0.23418416264760614}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),( PN * ( FirstVNF_Mem - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * ( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5763178218096784}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / ( MUC / RMSe ) ) / ( CS * MLU ) )", "obj1": 0.18016194331983806, "obj2": 0.6528778514800314}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( MDR / ( Max( Min( ( Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( MUC * ( RCSe - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) ) ) * RCSe )", "obj1": 0.7530364372469636, "obj2": 0.22322420839764437}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( ( Const / BR ) / ( Const / BR ) )", "choosing": "( ( RMSe * ( RMSe * DS ) ) / CS )", "obj1": 0.3684210526315789, "obj2": 0.5162330448304651}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( CS + Min( CS ,MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4251012145748988, "obj2": 0.48966760252805575}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.44534412955465585, "obj2": 0.4680053201665027}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( Min( AMS ,MDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) + Max( ( BR - AMS ),( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) ) ) ) + ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.22766355603085353}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( ( DDR - AMS ) / AMS ) ) ),( ( ( FirstVNF_CPU_Server + RRS ) / Max( FirstVNF_Mem_Server,Const ) ) / Const ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( DS,( ( Max( Min( ( DS / RMSe ) ,MLU ),CS ) - CS ) / RRSe ) ) * RCSe ) * ( DS - ( MUM * Max( MLU,RMSe ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7082347057267857}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( ( BR + ACS ) / FirstVNF_CPU_Server ) * RRS ) ,BR ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / Max( CS,( DS - MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.07778541417624427}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) ) ) )", "choosing": "( ( MLU + ( ( MLU + RMSe ) / Min( RMSe ,MUR ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.9210526315789473, "obj2": 0.07652527467217698}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.4534412955465587, "obj2": 0.4633184111427929}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MRS )", "choosing": "( Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) / Min( RMSe ,MUR ) )", "obj1": 0.9271255060728745, "obj2": 0.07160191958988897}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( ARS - Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,Min( ( Min( MUC ,DS ) - RMSe ) ,MLU ) ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( MLU + RMSe ) + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9089068825910931, "obj2": 0.08167843183106095}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( RRSe - MUR ) - Min( CS ,DS ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( CS + MUR ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4291497975708502, "obj2": 0.4871136383143551}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.451417004048583, "obj2": 0.46628354657402027}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Max( RCSe,RMSe ),Min( DS ,MUC ) )", "obj1": 0.47368421052631576, "obj2": 0.45383756926822566}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.9048582995951417, "obj2": 0.08536225464728116}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( CS + MUR ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4291497975708502, "obj2": 0.4871136383143551}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.9048582995951417, "obj2": 0.08536225464728116}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.451417004048583, "obj2": 0.46628354657402027}], "11": [{"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,( CRS + FirstVNF_RAM_Server ) ) ) / PN )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( Max( ARS,FirstVNF_CPU ) * ( Min( MRS ,FirstVNF_CPU ) - PN ) )", "choosing": "( ( ( ( ( Min( DS ,MUR ) / ( Max( Max( RMSe,RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) ) - ( CS + Min( ( DS / ( MUC - RRSe ) ) ,MUC ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) * ARS ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( ( Min( Min( MUC ,( RMSe * MUC ) ) ,DS ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * DS ),Min( MUM ,CS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / Max( ( Const / Const ),DDR ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( ( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( RMSe - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.9008097165991903, "obj2": 0.08645167331526345}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,FirstVNF_CPU ) ) + ARS ),FirstVNF_CPU_Server ) - ( ACS + Min( FirstVNF_Mem ,ARS ) ) ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) * ( ( MLU - DS ) + Min( RCSe ,RCSe ) ) )", "obj1": 0.3340080971659919, "obj2": 0.5458845216620365}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "Max( ( Const + ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,MRS ) ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - AMS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( Min( ( ( ( Max( RRSe,MUC ) - ( MUM - MLU ) ) + RCSe ) / Max( MUR,MUR ) ) ,CS ) / DS ) )", "obj1": 0.3643724696356275, "obj2": 0.5186450283821954}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( FirstVNF_RAM_Server - ( ( BR / AMS ) + ( Max( DDR,FirstVNF_Mem ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( ( ( Max( ( RRSe - CS ),Max( MLU,RRSe ) ) * ( Max( MUM,RCSe ) - RRSe ) ) + CS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.4093331022809955}, {"determining": "Max( Min( ( FirstVNF_Mem_Server - ( MRS + Const ) ) ,( ARS + AMS ) ),( ( Const + ACS ) / ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( DS ,MUR ) / DS ) - Min( ( MUC / RMSe ) ,( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6147129182113017}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe / ( DS / RRSe ) ) / ( RCSe + MUC ) ) / MUC ) / ( RCSe + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.06477732793522267, "obj2": 0.7425002603181122}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),Max( ( FirstVNF_RAM + MDR ),Const ) ) ) )", "choosing": "( Max( DS,RRSe ) * ( Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),RRSe ) * RCSe ) )", "obj1": 0.5344129554655871, "obj2": 0.39469046584561446}, {"determining": "( ( FirstVNF_Mem_Server / ( ( AMS - RRS ) * ( AMS / AMS ) ) ) / ( FirstVNF_CPU + ( FirstVNF_CPU - RRS ) ) )", "choosing": "( ( ( ( DS * ( ( Min( ( MUR - MUC ) ,CS ) + RRSe ) * ( MUM - ( MUC - RRSe ) ) ) ) * MUM ) / MUC ) / Max( MUC,MUM ) )", "obj1": 0.41700404858299595, "obj2": 0.4982990235800173}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) / Min( PN ,( ( DDR - PN ) - ( ( Min( AMS ,( Min( MRS ,FirstVNF_RAM ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) - ( ( ACS * MDR ) - AMS ) ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( ( MUC + RMSe ) * MUM ) ,( Max( DS,( RCSe * MLU ) ) * ( RMSe * ( RRSe + CS ) ) ) ) - ( Max( MUM,RCSe ) / ( Min( Max( ( Max( CS,MLU ) * MUC ),( ( RMSe / ( RRSe / CS ) ) / ( MLU - CS ) ) ) ,Min( ( MUM * ( RMSe + RMSe ) ) ,MUR ) ) / RCSe ) ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6599800774633041}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,FirstVNF_CPU ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.19635627530364372, "obj2": 0.6472847993663061}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ),( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) - RCSe ) * ( DS - Min( RMSe ,Max( CS,( ( MLU / RMSe ) - Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) ) ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6307757883318823}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( Max( FirstVNF_RAM,( ACS + Max( ( PN * PN ),( FirstVNF_CPU - Const ) ) ) ) - ( ( Const / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / MLU ) + Min( RCSe ,MUR ) ) )", "obj1": 0.9919028340080972, "obj2": 0.009584209646344995}, {"determining": "( Min( ( ( Min( ARS ,( ( MDR / FirstVNF_Mem_Server ) / MDR ) ) / ARS ) + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RRSe - ( ( CS + MUR ) * Max( ( RMSe - ( ( RCSe + RMSe ) + Max( RMSe,MUM ) ) ),( CS / MUR ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.20040485829959515, "obj2": 0.6309247343779684}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "( MDR / ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( MLU - DS ) + Min( RCSe ,RCSe ) ) )", "obj1": 0.7449392712550608, "obj2": 0.23418416264760614}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),( PN * ( FirstVNF_Mem - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * ( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5763178218096784}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - Max( ( RRS * BR ),( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * Max( DS,RRSe ) ) ) ) / MLU ) + RRSe ) )", "obj1": 0.5506072874493927, "obj2": 0.3881007118481514}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / ( MUC / RMSe ) ) / ( CS * MLU ) )", "obj1": 0.18016194331983806, "obj2": 0.6528778514800314}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "( MDR / ( Max( Min( ( Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( MUC * ( RCSe - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) ) ) * RCSe )", "obj1": 0.7530364372469636, "obj2": 0.22322420839764437}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( ( Const / BR ) / ( Const / BR ) )", "choosing": "( ( RMSe * ( RMSe * DS ) ) / CS )", "obj1": 0.3684210526315789, "obj2": 0.5162330448304651}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( CS + Min( CS ,MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4251012145748988, "obj2": 0.48966760252805575}, {"determining": "( MDR / ( ( MDR / ( Max( DDR,AMS ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) * Max( DS,RRSe ) )", "obj1": 0.5607287449392713, "obj2": 0.38512584451191445}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.44534412955465585, "obj2": 0.4680053201665027}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( Min( AMS ,MDR ) + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) + Max( ( BR - AMS ),( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - RRS ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) ) ) ) + ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) )", "choosing": "( ( ( ( RCSe / MLU ) + ( RCSe + DS ) ) + ( Max( RRSe,RCSe ) * Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( CS * MUM ) / ( MLU + CS ) ) ) ) ) - ( ( ( MUC - MLU ) * ( RRSe / MUC ) ) - Max( ( RCSe * DS ),( MUR + RCSe ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.22766355603085353}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( ( DDR - AMS ) / AMS ) ) ),( ( ( FirstVNF_CPU_Server + RRS ) / Max( FirstVNF_Mem_Server,Const ) ) / Const ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( DS,( ( Max( Min( ( DS / RMSe ) ,MLU ),CS ) - CS ) / RRSe ) ) * RCSe ) * ( DS - ( MUM * Max( MLU,RMSe ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7082347057267857}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( ( BR + ACS ) / FirstVNF_CPU_Server ) * RRS ) ,BR ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / Max( CS,( DS - MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.07778541417624427}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) ) ) )", "choosing": "( ( MLU + ( ( MLU + RMSe ) / Min( RMSe ,MUR ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.9210526315789473, "obj2": 0.07652527467217698}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.4534412955465587, "obj2": 0.4633184111427929}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MRS )", "choosing": "( Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) / Min( RMSe ,MUR ) )", "obj1": 0.9271255060728745, "obj2": 0.07160191958988897}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( MLU + RMSe ) + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9089068825910931, "obj2": 0.08167843183106095}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( RRSe - MUR ) - Min( CS ,DS ) )", "obj1": 0.06275303643724696, "obj2": 0.7796599380891587}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( MUM - ( MUM * MUC ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4291497975708502, "obj2": 0.48690945990177903}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.451417004048583, "obj2": 0.46628354657402027}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( RMSe * ( ( MLU - DS ) + Min( RCSe ,RCSe ) ) ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.4331983805668016, "obj2": 0.48647342628920437}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.9048582995951417, "obj2": 0.08536225464728116}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.9048582995951417, "obj2": 0.08536225464728116}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( Max( RCSe,RMSe ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.451417004048583, "obj2": 0.46628354657402027}], "12": [{"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,( CRS + FirstVNF_RAM_Server ) ) ) / PN )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( RRS - ( ( ( FirstVNF_RAM_Server + AMS ) / ( RRS - FirstVNF_CPU_Server ) ) / ( RRS - ( PN - ACS ) ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( ( MUC * MUM ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) * ( Min( MRS ,FirstVNF_CPU ) - PN ) )", "choosing": "( ( ( ( ( Min( DS ,MUR ) / ( Max( Max( RMSe,RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) ) - ( CS + Min( ( DS / ( MUC - RRSe ) ) ,MUC ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / Max( ( Const / Const ),DDR ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( ( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( RMSe - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.9008097165991903, "obj2": 0.08645167331526345}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,FirstVNF_CPU ) ) + ARS ),FirstVNF_CPU_Server ) - ( ACS + Min( FirstVNF_Mem ,ARS ) ) ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) * ( ( MLU - DS ) + Min( RCSe ,RCSe ) ) )", "obj1": 0.3340080971659919, "obj2": 0.5458845216620365}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( Min( Const ,ARS ) / ( Min( Const ,ARS ) / MDR ) )", "choosing": "( ( Max( DS,( ( Max( Min( ( DS / RMSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - RMSe ) - DS ) )", "obj1": 0.06275303643724696, "obj2": 0.77763495290319}, {"determining": "( FirstVNF_RAM_Server - ( ( BR / AMS ) + ( Max( DDR,FirstVNF_Mem ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( ( ( Max( ( RRSe - CS ),Max( MLU,RRSe ) ) * ( Max( MUM,RCSe ) - RRSe ) ) + CS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.4093331022809955}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "Max( Min( ( FirstVNF_Mem_Server - ( MRS + Const ) ) ,( ARS + AMS ) ),( ( Const + ACS ) / ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( DS ,MUR ) / DS ) - Min( ( MUC / RMSe ) ,( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6147129182113017}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Max( FirstVNF_RAM,MDR ) / ( ( Min( ( AMS / Max( ( ARS - MDR ),Min( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,( MDR / ( MDR / FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server - Min( ( DDR - ( MDR + FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS + MUR ) * Max( ( ( RMSe - CS ) / MUR ),( MLU - MUR ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6816249722624461}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe / ( DS / RRSe ) ) / ( RCSe + MUC ) ) / MUC ) / ( RCSe + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.06477732793522267, "obj2": 0.7425002603181122}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),Max( ( FirstVNF_RAM + MDR ),Const ) ) ) )", "choosing": "( Max( DS,RRSe ) * ( Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),RRSe ) * RCSe ) )", "obj1": 0.5344129554655871, "obj2": 0.39469046584561446}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6599800774633041}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,FirstVNF_CPU ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.19635627530364372, "obj2": 0.6472847993663061}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ),( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) - RCSe ) * ( DS - Min( RMSe ,Max( CS,( ( MLU / RMSe ) - Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) ) ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6307757883318823}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( Min( ( ( Min( ARS ,( ( MDR / FirstVNF_Mem_Server ) / MDR ) ) / ARS ) + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RRSe - ( ( CS + MUR ) * Max( ( RMSe - ( ( RCSe + RMSe ) + Max( RMSe,MUM ) ) ),( CS / MUR ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.20040485829959515, "obj2": 0.6309247343779684}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),( PN * ( FirstVNF_Mem - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * ( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5763178218096784}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - Max( ( RRS * BR ),( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * Max( DS,RRSe ) ) ) ) / MLU ) + RRSe ) )", "obj1": 0.5506072874493927, "obj2": 0.3881007118481514}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / ( MUC / RMSe ) ) / ( CS * MLU ) )", "obj1": 0.18016194331983806, "obj2": 0.6528778514800314}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( FirstVNF_Mem_Server / ( ( AMS - RRS ) * ( AMS / AMS ) ) ) / ( FirstVNF_CPU + ( FirstVNF_CPU - RRS ) ) )", "choosing": "( ( ( ( DS * ( ( Min( ( MUR - MUC ) ,CS ) + RRSe ) * ( MUM - ( MUC - RRSe ) ) ) ) * MUM ) / MUC ) / Max( MUC,MUM ) )", "obj1": 0.41700404858299595, "obj2": 0.4982990235800173}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( MDR / ( ( MDR / ( Max( DDR,AMS ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) * Max( DS,RRSe ) )", "obj1": 0.5607287449392713, "obj2": 0.38512584451191445}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( CS + Min( CS ,MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4251012145748988, "obj2": 0.48966760252805575}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( ( BR + ACS ) / FirstVNF_CPU_Server ) * RRS ) ,BR ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / Max( CS,( DS - MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.07778541417624427}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( MDR / ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( RMSe * MLU ) / RRSe ),RCSe ) * RCSe )", "obj1": 0.902834008097166, "obj2": 0.07980739799481334}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( ( DDR - AMS ) / AMS ) ) ),( ( ( FirstVNF_CPU_Server + RRS ) / Max( FirstVNF_Mem_Server,Const ) ) / Const ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( DS,( ( Max( Min( ( DS / RMSe ) ,MLU ),CS ) - CS ) / RRSe ) ) * RCSe ) * ( DS - ( MUM * Max( MLU,RMSe ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7082347057267857}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( DDR - FirstVNF_RAM ) / ( RRS - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * ( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.4190283400809717, "obj2": 0.4975856186847448}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) ) ) )", "choosing": "( ( MLU + ( ( MLU + RMSe ) / Min( RMSe ,MUR ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.9210526315789473, "obj2": 0.07652527467217698}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MRS )", "choosing": "( Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) / Min( RMSe ,MUR ) )", "obj1": 0.9271255060728745, "obj2": 0.07160191958988897}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( MUM - ( MUM * MUC ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4291497975708502, "obj2": 0.48690945990177903}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( RMSe * ( ( MLU - DS ) + Min( RCSe ,RCSe ) ) ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.4331983805668016, "obj2": 0.48647342628920437}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "( ( ( DDR - ARS ) * ARS ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( ( Min( Min( MUC ,( RMSe * MUC ) ) ,DS ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * DS ),Min( MUM ,CS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( ( RCSe - MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR + FirstVNF_RAM ),MRS ) + FirstVNF_CPU ) / ( MDR - ( Max( ( MDR + FirstVNF_RAM ),MRS ) + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( ( ( MUM - ( CS * ( RMSe - RMSe ) ) ) - ( ( DS + MLU ) + ( MLU - DS ) ) ) - ( ( ( MUC - ( MUC + RCSe ) ) / Max( RMSe,CS ) ) / CS ) ),MLU ),Min( DS ,MUC ) ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( PN * ARS ) + FirstVNF_Mem ) ,( Min( MRS ,( DDR * FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * ( Const * FirstVNF_CPU ) ) + ACS ) ) ) - ACS ) / BR ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( ( MUM - DS ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,( CRS + FirstVNF_RAM_Server ) ) ) / PN )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( RRS - ( ( ( FirstVNF_RAM_Server + AMS ) / ( RRS - FirstVNF_CPU_Server ) ) / ( RRS - ( PN - ACS ) ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( ( MUC * MUM ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / Max( ( Const / Const ),DDR ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,FirstVNF_CPU ) ) + ARS ),FirstVNF_CPU_Server ) - ( ACS + Min( FirstVNF_Mem ,ARS ) ) ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) * ( ( MLU - DS ) + Min( RCSe ,RCSe ) ) )", "obj1": 0.3340080971659919, "obj2": 0.5458845216620365}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( ( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( RMSe - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.9008097165991903, "obj2": 0.08645167331526345}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( Min( Const ,ARS ) / ( Min( Const ,ARS ) / MDR ) )", "choosing": "( ( Max( DS,( ( Max( Min( ( DS / RMSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - RMSe ) - DS ) )", "obj1": 0.06275303643724696, "obj2": 0.77763495290319}, {"determining": "( FirstVNF_RAM_Server - ( ( BR / AMS ) + ( Max( DDR,FirstVNF_Mem ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( ( ( Max( ( RRSe - CS ),Max( MLU,RRSe ) ) * ( Max( MUM,RCSe ) - RRSe ) ) + CS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.4093331022809955}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "Max( Min( ( FirstVNF_Mem_Server - ( MRS + Const ) ) ,( ARS + AMS ) ),( ( Const + ACS ) / ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( DS ,MUR ) / DS ) - Min( ( MUC / RMSe ) ,( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6147129182113017}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Max( FirstVNF_RAM,MDR ) / ( ( Min( ( AMS / Max( ( ARS - MDR ),Min( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,( MDR / ( MDR / FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server - Min( ( DDR - ( MDR + FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS + MUR ) * Max( ( ( RMSe - CS ) / MUR ),( MLU - MUR ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6816249722624461}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe / ( DS / RRSe ) ) / ( RCSe + MUC ) ) / MUC ) / ( RCSe + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.06477732793522267, "obj2": 0.7425002603181122}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),Max( ( FirstVNF_RAM + MDR ),Const ) ) ) )", "choosing": "( Max( DS,RRSe ) * ( Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),RRSe ) * RCSe ) )", "obj1": 0.5344129554655871, "obj2": 0.39469046584561446}, {"determining": "( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Max( MLU,RRSe ) / Min( MLU ,DS ) ) + RRSe ) ) ) / RRSe ),RCSe ) * RCSe )", "obj1": 0.4068825910931174, "obj2": 0.49615437581661165}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6599800774633041}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,FirstVNF_CPU ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.19635627530364372, "obj2": 0.6472847993663061}, {"determining": "Max( ( CRS * BR ),( ( MRS * Max( ( MRS * Max( FirstVNF_Mem,( AMS - CRS ) ) ),( AMS - CRS ) ) ) * ACS ) )", "choosing": "( ( Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) - RCSe ) * ( DS - Min( RMSe ,Max( CS,( ( MLU / RMSe ) - Max( Min( ( MUM - RMSe ) ,RCSe ),CS ) ) ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.6307757883318823}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( Min( ( ( Min( ARS ,( ( MDR / FirstVNF_Mem_Server ) / MDR ) ) / ARS ) + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RRSe - ( ( CS + MUR ) * Max( ( RMSe - ( ( RCSe + RMSe ) + Max( RMSe,MUM ) ) ),( CS / MUR ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.20040485829959515, "obj2": 0.6309247343779684}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),( PN * ( FirstVNF_Mem - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * ( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5763178218096784}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - Max( ( RRS * BR ),( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * Max( DS,RRSe ) ) ) ) / MLU ) + RRSe ) )", "obj1": 0.5506072874493927, "obj2": 0.3881007118481514}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / ( MUC / RMSe ) ) / ( CS * MLU ) )", "obj1": 0.18016194331983806, "obj2": 0.6528778514800314}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( CS + Min( CS ,MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4251012145748988, "obj2": 0.48966760252805575}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( MDR / ( ( MDR / ( Max( DDR,AMS ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) * Max( DS,RRSe ) )", "obj1": 0.5607287449392713, "obj2": 0.38512584451191445}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Max( PN,FirstVNF_CPU ) - Max( ( ( MRS * Min( ( ( ( BR + ACS ) / FirstVNF_CPU_Server ) * RRS ) ,BR ) ) - DDR ),ACS ) )", "choosing": "( ( MUC * RRSe ) / Max( CS,( DS - MUM ) ) )", "obj1": 0.9109311740890689, "obj2": 0.07778541417624427}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( MDR / ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( RMSe * MLU ) / RRSe ),RCSe ) * RCSe )", "obj1": 0.902834008097166, "obj2": 0.07980739799481334}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( ( ( BR - PN ) / Min( MDR ,BR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( FirstVNF_CPU_Server - AMS ) ) ) - ( ( AMS + ( AMS * Min( ACS ,FirstVNF_Mem ) ) ) / ( ( MRS * MRS ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( Min( MUR ,MLU ) + Max( MLU,RRSe ) ) - ( MUM / RMSe ) ) / ( ( ( MLU + DS ) - ( MUR * MUM ) ) * Min( ( MUM / CS ) ,( MLU * RMSe ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.003171463938392207}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) ) ) )", "choosing": "( ( MLU + ( ( MLU + RMSe ) / Min( RMSe ,MUR ) ) ) / Min( RMSe ,MUR ) )", "obj1": 0.9210526315789473, "obj2": 0.07652527467217698}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * MRS )", "choosing": "( Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) / Min( RMSe ,MUR ) )", "obj1": 0.9271255060728745, "obj2": 0.07160191958988897}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( MUM - ( MUM * MUC ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4291497975708502, "obj2": 0.48690945990177903}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( RMSe * ( ( MLU - DS ) + Min( RCSe ,RCSe ) ) ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.4331983805668016, "obj2": 0.48647342628920437}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.9230769230769231, "obj2": 0.07402688416323615}, {"determining": "( Max( ARS,FirstVNF_CPU ) * ( Min( MRS ,FirstVNF_CPU ) - PN ) )", "choosing": "( ( ( ( ( Min( DS ,MUR ) / ( Max( Max( RMSe,RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) ) - ( CS + Min( ( DS / ( MUC - RRSe ) ) ,MUC ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) * ARS ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( ( Min( Min( MUC ,( RMSe * MUC ) ) ,DS ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * DS ),Min( MUM ,CS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( ( RCSe - MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,( CRS + FirstVNF_RAM_Server ) ) ) / PN )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( MDR / ( FirstVNF_CPU - Max( ( RRS * ( RRS / ( ( FirstVNF_RAM + PN ) / ( AMS - DDR ) ) ) ),( FirstVNF_RAM + Max( Min( ( DDR * AMS ) ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) - Max( RCSe,RMSe ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / Max( ( Const / Const ),DDR ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,FirstVNF_CPU ) ) + ARS ),FirstVNF_CPU_Server ) - ( ACS + Min( FirstVNF_Mem ,ARS ) ) ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) * ( ( MLU - DS ) + Min( RCSe ,RCSe ) ) )", "obj1": 0.3340080971659919, "obj2": 0.5458845216620365}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( MDR / ( Max( FirstVNF_RAM,Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( MRS - ( MDR / ( Max( FirstVNF_RAM,Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( MRS - BR ) ) ) ) ) )", "choosing": "( Max( ( RCSe * CS ),RCSe ) * RCSe )", "obj1": 0.6174089068825911, "obj2": 0.31590988694617467}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "Max( Min( ( FirstVNF_Mem_Server - ( MRS + Const ) ) ,( ARS + AMS ) ),( ( Const + ACS ) / ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( DS ,MUR ) / DS ) - Min( ( MUC / RMSe ) ,( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6147129182113017}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( Min( Const ,ARS ) / ( Min( Const ,ARS ) / MDR ) )", "choosing": "( ( Max( DS,( ( Max( Min( ( DS / RMSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - RMSe ) - DS ) )", "obj1": 0.06275303643724696, "obj2": 0.77763495290319}, {"determining": "( FirstVNF_RAM_Server - ( ( BR / AMS ) + ( Max( DDR,FirstVNF_Mem ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( ( ( Max( ( RRSe - CS ),Max( MLU,RRSe ) ) * ( Max( MUM,RCSe ) - RRSe ) ) + CS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.4093331022809955}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Max( FirstVNF_RAM,MDR ) / ( ( Min( ( AMS / Max( ( ARS - MDR ),Min( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,( MDR / ( MDR / FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server - Min( ( DDR - ( MDR + FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS + MUR ) * Max( ( ( RMSe - CS ) / MUR ),( MLU - MUR ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6816249722624461}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe / ( DS / RRSe ) ) / ( RCSe + MUC ) ) / MUC ) / ( RCSe + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.06477732793522267, "obj2": 0.7425002603181122}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),Max( ( FirstVNF_RAM + MDR ),Const ) ) ) )", "choosing": "( Max( DS,RRSe ) * ( Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),RRSe ) * RCSe ) )", "obj1": 0.5344129554655871, "obj2": 0.39469046584561446}, {"determining": "( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Max( MLU,RRSe ) / Min( MLU ,DS ) ) + RRSe ) ) ) / RRSe ),RCSe ) * RCSe )", "obj1": 0.4068825910931174, "obj2": 0.49615437581661165}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6599800774633041}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,FirstVNF_CPU ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.19635627530364372, "obj2": 0.6472847993663061}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.20647773279352227, "obj2": 0.6235885757523228}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( Min( ( ( Min( ARS ,( ( MDR / FirstVNF_Mem_Server ) / MDR ) ) / ARS ) + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RRSe - ( ( CS + MUR ) * Max( ( RMSe - ( ( RCSe + RMSe ) + Max( RMSe,MUM ) ) ),( CS / MUR ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.20040485829959515, "obj2": 0.6309247343779684}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),( PN * ( FirstVNF_Mem - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * ( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5763178218096784}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - Max( ( RRS * BR ),( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * Max( DS,RRSe ) ) ) ) / MLU ) + RRSe ) )", "obj1": 0.5506072874493927, "obj2": 0.3881007118481514}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / ( MUC / RMSe ) ) / ( CS * MLU ) )", "obj1": 0.18016194331983806, "obj2": 0.6528778514800314}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( CS + Min( CS ,MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4251012145748988, "obj2": 0.48966760252805575}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( CRS / ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,RRSe ) * ( Max( MLU,( RMSe - ( DS + ( RRSe + ( RCSe / RCSe ) ) ) ) ) / MLU ) )", "obj1": 0.9838056680161943, "obj2": 0.019591180017803477}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( MDR / ( ( MDR / ( Max( DDR,AMS ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) * Max( DS,RRSe ) )", "obj1": 0.5607287449392713, "obj2": 0.38512584451191445}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - PN ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( ( MLU - DS ) - Max( DS,DS ) ) )", "obj1": 0.43724696356275305, "obj2": 0.48572372208723585}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - Max( RRSe,( MUM - ( MUM * MUC ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.4291497975708502, "obj2": 0.48690945990177903}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( MDR / ( Max( ( Max( BR,FirstVNF_CPU_Server ) + ( Const / Max( ACS,( MRS / FirstVNF_Mem_Server ) ) ) ),Max( MRS,FirstVNF_Mem_Server ) ) - ( Max( ARS,FirstVNF_Mem ) + ( Min( Max( PN,FirstVNF_Mem ) ,ACS ) + ( CRS / Max( RRS,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( Max( ( RRSe / MUM ),( RMSe * ( ( MLU - DS ) + Min( RCSe ,RCSe ) ) ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.4331983805668016, "obj2": 0.48647342628920437}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( RRS - ( ( ( FirstVNF_RAM_Server + AMS ) / ( RRS - FirstVNF_CPU_Server ) ) / ( RRS - ( PN - ACS ) ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( ( MUC * MUM ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) * ( Min( MRS ,FirstVNF_CPU ) - PN ) )", "choosing": "( ( ( ( ( Min( DS ,MUR ) / ( Max( Max( RMSe,RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) ) - ( CS + Min( ( DS / ( MUC - RRSe ) ) ,MUC ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) * ARS ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( ( Min( Min( MUC ,( RMSe * MUC ) ) ,DS ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * DS ),Min( MUM ,CS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( ( RCSe - MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / Min( Const ,ARS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( ( ( MUM * ( CS * ( RMSe - RMSe ) ) ) - ( ( DS + MLU ) + ( MLU - DS ) ) ) - Max( MLU,( RRSe * ( MUC + MUM ) ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( Max( Max( ( ( ( MUM * ( CS * ( RMSe - RMSe ) ) ) - ( ( DS + MLU ) + ( MLU - DS ) ) ) - Max( MLU,( RRSe * ( MUC + MUM ) ) ) ),MLU ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( ( Min( Const ,ARS ) + MDR ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * ( MUM * ( CS * ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,( CRS + FirstVNF_RAM_Server ) ) ) / PN )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( MDR - Max( AMS,( MDR * PN ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( Max( Min( MUM ,MUM ),RMSe ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_CPU - Max( ( RRS * ( RRS / ( ( FirstVNF_RAM + PN ) / ( AMS - DDR ) ) ) ),( FirstVNF_RAM + Max( Min( ( DDR * AMS ) ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) - Max( RCSe,RMSe ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / Max( ( Const / Const ),DDR ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( PN + ACS ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) + DS ) - ( CS / RMSe ) ) )", "obj1": 0.3319838056680162, "obj2": 0.5456272608643883}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "Max( Min( ( FirstVNF_Mem_Server - ( MRS + Const ) ) ,( ARS + AMS ) ),( ( Const + ACS ) / ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( DS ,MUR ) / DS ) - Min( ( MUC / RMSe ) ,( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6147129182113017}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( Min( ( MDR * ( FirstVNF_RAM_Server - ACS ) ) ,( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Min( ( RCSe + RMSe ) ,Max( RMSe,DS ) ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.058704453441295545, "obj2": 0.7752651231135739}, {"determining": "( FirstVNF_RAM_Server - ( ( BR / AMS ) + ( Max( DDR,FirstVNF_Mem ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( ( ( Max( ( RRSe - CS ),Max( MLU,RRSe ) ) * ( Max( MUM,RCSe ) - RRSe ) ) + CS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5242914979757085, "obj2": 0.4093331022809955}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Max( FirstVNF_RAM,MDR ) / ( ( Min( ( AMS / Max( ( ARS - MDR ),Min( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,( MDR / ( MDR / FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM_Server - Min( ( DDR - ( MDR + FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( CS + MUR ) * Max( ( ( RMSe - CS ) / MUR ),( MLU - MUR ) ) )", "obj1": 0.13765182186234817, "obj2": 0.6816249722624461}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + MRS ) ) ) / ARS ) + ( MRS + MRS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe / ( DS / RRSe ) ) / ( RCSe + MUC ) ) / MUC ) / ( RCSe + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.06477732793522267, "obj2": 0.7425002603181122}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),Max( ( FirstVNF_RAM + MDR ),Const ) ) ) )", "choosing": "( Max( DS,RRSe ) * ( Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),RRSe ) * RCSe ) )", "obj1": 0.5344129554655871, "obj2": 0.39469046584561446}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6599800774633041}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,FirstVNF_CPU ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.19635627530364372, "obj2": 0.6472847993663061}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.20647773279352227, "obj2": 0.6235885757523228}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( Min( ( ( Min( ARS ,( ( MDR / FirstVNF_Mem_Server ) / MDR ) ) / ARS ) + Max( ARS,ACS ) ) ,FirstVNF_RAM_Server ) / ( Const / BR ) )", "choosing": "( ( RRSe - ( ( CS + MUR ) * Max( ( RMSe - ( ( RCSe + RMSe ) + Max( RMSe,MUM ) ) ),( CS / MUR ) ) ) ) - Min( CS ,DS ) )", "obj1": 0.20040485829959515, "obj2": 0.6309247343779684}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),( PN * ( FirstVNF_Mem - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * ( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5763178218096784}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - Max( ( RRS * BR ),( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * Max( DS,RRSe ) ) ) ) / MLU ) + RRSe ) )", "obj1": 0.5506072874493927, "obj2": 0.3881007118481514}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / ( MUC / RMSe ) ) / ( CS * MLU ) )", "obj1": 0.18016194331983806, "obj2": 0.6528778514800314}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( MDR / ( ( MDR / ( Max( DDR,AMS ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) * Max( DS,RRSe ) )", "obj1": 0.5607287449392713, "obj2": 0.38512584451191445}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( Max( MRS,FirstVNF_RAM_Server ) - DDR ) / RRS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MLU ) / RMSe ) - Min( Max( MUM,MLU ) ,MUR ) ) / MUM ) / MUR ) - DS ) * DS ) + Min( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) ,( MUM * CS ) ) )", "obj1": 0.9858299595141701, "obj2": 0.01558075376262678}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( CRS / ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,RRSe ) * ( Max( MLU,( RMSe - ( DS + ( RRSe + ( RCSe / RCSe ) ) ) ) ) / MLU ) )", "obj1": 0.9838056680161943, "obj2": 0.019591180017803477}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( RRS - ( ( ( FirstVNF_RAM_Server + AMS ) / ( RRS - FirstVNF_CPU_Server ) ) / ( RRS - ( PN - ACS ) ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( ( MUC * MUM ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) * ( Min( MRS ,FirstVNF_CPU ) - PN ) )", "choosing": "( ( ( ( ( Min( DS ,MUR ) / ( Max( Max( RMSe,RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) ) - ( CS + Min( ( DS / ( MUC - RRSe ) ) ,MUC ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) * ARS ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( ( Min( Min( MUC ,( RMSe * MUC ) ) ,DS ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * DS ),Min( MUM ,CS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( ( RCSe - MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / Min( Const ,ARS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( ( ( MUM * ( CS * ( RMSe - RMSe ) ) ) - ( ( DS + MLU ) + ( MLU - DS ) ) ) - Max( MLU,( RRSe * ( MUC + MUM ) ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( Max( Max( ( ( ( MUM * ( CS * ( RMSe - RMSe ) ) ) - ( ( DS + MLU ) + ( MLU - DS ) ) ) - Max( MLU,( RRSe * ( MUC + MUM ) ) ) ),MLU ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( ( Min( Const ,ARS ) + MDR ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * ( MUM * ( CS * ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( MUM * Max( ( RCSe - MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server - MDR ),Const ) / ( FirstVNF_CPU - Const ) )", "choosing": "( Max( Min( MUM ,Max( Max( Min( MUM ,RMSe ),RRSe ),Max( ( CS - ( MLU - RRSe ) ),RCSe ) ) ),DS ) * Max( ( MUR + DS ),Min( MUR ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( Max( FirstVNF_Mem_Server,Max( FirstVNF_Mem,( CRS + FirstVNF_RAM_Server ) ) ) / PN )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( MDR - Max( AMS,( MDR * PN ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( Max( Min( MUM ,MUM ),RMSe ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / Max( ( Const / Const ),DDR ) ) / Min( ( PN / FirstVNF_CPU ) ,Min( ARS ,MDR ) ) ) + Min( ( ( MDR / FirstVNF_Mem_Server ) / Max( FirstVNF_RAM_Server,RRS ) ) ,( ( RRS - ARS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Max( RCSe,RMSe ),( MLU - DS ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 0.05668016194331984, "obj2": 0.7900465083241761}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "Max( Min( ( FirstVNF_Mem_Server - ( MRS + Const ) ) ,( ARS + AMS ) ),( ( Const + ACS ) / ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( DS ,MUR ) / DS ) - Min( ( MUC / RMSe ) ,( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) )", "obj1": 0.22672064777327935, "obj2": 0.6147129182113017}, {"determining": "( ( Max( DDR,Min( MDR ,Const ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( ( DDR / ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( DS / ( MUR + ( CS + MUC ) ) ) + ( ( MLU / ( MUC - Max( MUR,( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,MUC ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.8947368421052632, "obj2": 0.11057489807047186}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( Min( ( MDR * ( FirstVNF_RAM_Server - ACS ) ) ,( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Min( ( RCSe + RMSe ) ,Max( RMSe,DS ) ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.058704453441295545, "obj2": 0.7752651231135739}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( Max( DS,Max( ( MUM / RMSe ),Min( ( CS * CS ) ,( CS - MUM ) ) ) ) * RCSe )", "obj1": 0.520242914979757, "obj2": 0.406517242323292}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( ( FirstVNF_RAM - Max( AMS,( MDR * PN ) ) ) / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / ( MUC / RMSe ) ) / ( CS * MLU ) )", "obj1": 0.18016194331983806, "obj2": 0.6528778514800314}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),Max( ( FirstVNF_RAM + MDR ),Const ) ) ) )", "choosing": "( Max( DS,RRSe ) * ( Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),RRSe ) * RCSe ) )", "obj1": 0.5344129554655871, "obj2": 0.39469046584561446}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "Max( ( MDR * PN ),( AMS + FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.17408906882591094, "obj2": 0.6599800774633041}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( PN + ACS ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) + DS ) - ( CS / RMSe ) ) )", "obj1": 0.3319838056680162, "obj2": 0.5456272608643883}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_Mem - ( ( ( FirstVNF_RAM * DDR ) * ( ACS - FirstVNF_Mem_Server ) ) - Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),( CRS * ARS ) ) ) ) * ( CRS * CRS ) ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( DS / MUC ) ),( ( RCSe + DS ) / ( MLU + CS ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUM ,RRSe ) ) ) )", "obj1": 0.5647773279352226, "obj2": 0.37910646332431686}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),( PN * ( FirstVNF_Mem - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * ( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5763178218096784}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - Max( ( RRS * BR ),( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * Max( DS,RRSe ) ) ) ) / MLU ) + RRSe ) )", "obj1": 0.5506072874493927, "obj2": 0.3881007118481514}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( MDR / ( ( MDR / ( Max( DDR,AMS ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) * Max( DS,RRSe ) )", "obj1": 0.5607287449392713, "obj2": 0.38512584451191445}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( Max( MRS,FirstVNF_RAM_Server ) - DDR ) / RRS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MLU ) / RMSe ) - Min( Max( MUM,MLU ) ,MUR ) ) / MUM ) / MUR ) - DS ) * DS ) + Min( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) ,( MUM * CS ) ) )", "obj1": 0.9858299595141701, "obj2": 0.01558075376262678}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( CRS / ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,RRSe ) * ( Max( MLU,( RMSe - ( DS + ( RRSe + ( RCSe / RCSe ) ) ) ) ) / MLU ) )", "obj1": 0.9838056680161943, "obj2": 0.019591180017803477}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( ( Min( Max( BR,CRS ) ,( FirstVNF_Mem / DDR ) ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( ARS,FirstVNF_RAM_Server ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( CRS + ACS ) ) ) )", "choosing": "( Max( Max( ( DS / CS ),( MUC + RRSe ) ),( ( MUR - RCSe ) - Max( RRSe,MUM ) ) ) - ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.023447649460959053}, {"determining": "( MDR / ( FirstVNF_CPU - Max( ( RRS * ( RRS / ( ( FirstVNF_RAM + PN ) / ( AMS - DDR ) ) ) ),( FirstVNF_RAM + Max( Min( ( DDR * AMS ) ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) - Max( RCSe,RMSe ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( RRS - ( ( ( FirstVNF_RAM_Server + AMS ) / ( RRS - FirstVNF_CPU_Server ) ) / ( RRS - ( PN - ACS ) ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( ( MUC * MUM ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) * ( Min( MRS ,FirstVNF_CPU ) - PN ) )", "choosing": "( ( ( ( ( Min( DS ,MUR ) / ( Max( Max( RMSe,RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) ) - ( CS + Min( ( DS / ( MUC - RRSe ) ) ,MUC ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) * ARS ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( ( Min( Min( MUC ,( RMSe * MUC ) ) ,DS ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * DS ),Min( MUM ,CS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( ( RCSe - MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / Min( Const ,ARS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( ( ( MUM * ( CS * ( RMSe - RMSe ) ) ) - ( ( DS + MLU ) + ( MLU - DS ) ) ) - Max( MLU,( RRSe * ( MUC + MUM ) ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( Max( Max( ( ( ( MUM * ( CS * ( RMSe - RMSe ) ) ) - ( ( DS + MLU ) + ( MLU - DS ) ) ) - Max( MLU,( RRSe * ( MUC + MUM ) ) ) ),MLU ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( ( Min( Const ,ARS ) + MDR ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * ( MUM * ( CS * ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( Max( ( FirstVNF_Mem_Server - PN ),( DDR + DDR ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( RCSe - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,RRSe ) / Min( MLU ,DS ) ) + RRSe ) ) ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7893630811807116}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( ( Max( DDR,Min( MDR ,Const ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( ( DDR / ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( DS / ( MUR + ( CS + MUC ) ) ) + ( ( MLU / ( MUC - Max( MUR,( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,MUC ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.8947368421052632, "obj2": 0.11057489807047186}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( Min( ( MDR * ( FirstVNF_RAM_Server - ACS ) ) ,( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Min( ( RCSe + RMSe ) ,Max( RMSe,DS ) ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.058704453441295545, "obj2": 0.7752651231135739}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( PN + ACS ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) + DS ) - ( CS / RMSe ) ) )", "obj1": 0.3319838056680162, "obj2": 0.5456272608643883}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),( PN * ( FirstVNF_Mem - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * ( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5763178218096784}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( MUM - Max( MUM,CS ) ),CS ) )", "obj1": 0.9757085020242915, "obj2": 0.02207512190755714}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( ( FirstVNF_CPU_Server - Max( AMS,ARS ) ) / ( PN - ( ARS / MRS ) ) )", "choosing": "( Max( DS,( ( CS - Max( Min( MLU ,MUM ),CS ) ) / RRSe ) ) * RCSe )", "obj1": 0.6700404858299596, "obj2": 0.2801356642270984}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( Max( MRS,FirstVNF_RAM_Server ) - DDR ) / RRS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MLU ) / RMSe ) - Min( Max( MUM,MLU ) ,MUR ) ) / MUM ) / MUR ) - DS ) * DS ) + Min( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) ,( MUM * CS ) ) )", "obj1": 0.9858299595141701, "obj2": 0.01558075376262678}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( CRS / ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,RRSe ) * ( Max( MLU,( RMSe - ( DS + ( RRSe + ( RCSe / RCSe ) ) ) ) ) / MLU ) )", "obj1": 0.9838056680161943, "obj2": 0.019591180017803477}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Max( RRS,FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( ( RRSe * MUM ) * ( MUC * RRSe ) ) - ( ( Max( MLU,DS ) + ( MUM - MUC ) ) + ( MUR + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.27809458833024975}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) - RCSe ),MUR ) - ( ( ( MUC - MUR ) - MLU ) - RCSe ) )", "obj1": 0.680161943319838, "obj2": 0.2779365208080216}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( MDR - Max( AMS,( MDR * PN ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( Max( Min( MUM ,MUM ),RMSe ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_CPU - Max( ( RRS * ( RRS / ( ( FirstVNF_RAM + PN ) / ( AMS - DDR ) ) ) ),( FirstVNF_RAM + Max( Min( ( DDR * AMS ) ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) - Max( RCSe,RMSe ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( RRS - ( ( ( FirstVNF_RAM_Server + AMS ) / ( RRS - FirstVNF_CPU_Server ) ) / ( RRS - ( PN - ACS ) ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( ( MUC * MUM ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) * ( Min( MRS ,FirstVNF_CPU ) - PN ) )", "choosing": "( ( ( ( ( Min( DS ,MUR ) / ( Max( Max( RMSe,RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) ) - ( CS + Min( ( DS / ( MUC - RRSe ) ) ,MUC ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) * ARS ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( ( Min( Min( MUC ,( RMSe * MUC ) ) ,DS ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * DS ),Min( MUM ,CS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( ( RCSe - MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / Min( Const ,ARS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( ( ( MUM * ( CS * ( RMSe - RMSe ) ) ) - ( ( DS + MLU ) + ( MLU - DS ) ) ) - Max( MLU,( RRSe * ( MUC + MUM ) ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( Max( Max( ( ( ( MUM * ( CS * ( RMSe - RMSe ) ) ) - ( ( DS + MLU ) + ( MLU - DS ) ) ) - Max( MLU,( RRSe * ( MUC + MUM ) ) ) ),MLU ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( ( Min( Const ,ARS ) + MDR ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * ( MUM * ( CS * ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( BR - ( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server - ( ( RRS * Max( ( FirstVNF_Mem_Server + MDR ),( RRS + MRS ) ) ) * ( MRS / FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( RCSe * Max( ( ( MUM + MLU ) * Max( ( Max( RMSe,CS ) - MUC ),MLU ) ),Max( RRSe,( Min( Min( ( DS + RMSe ) ,Min( CS ,( MLU + MUC ) ) ) ,MUR ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( BR - ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "( ( MUM + MLU ) * Max( ( Max( RMSe,CS ) - MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( BR - ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,( Min( Min( ( DS + RMSe ) ,Min( CS ,( MLU + MUC ) ) ) ,MUR ) - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( Max( ( FirstVNF_Mem_Server - ACS ),( DDR + ( CRS + CRS ) ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( RCSe - ( ( MLU / ( RRSe * MUM ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,RRSe ) / Min( MLU ,DS ) ) + RRSe ) ) ) ) )", "obj1": 0.05465587044534413, "obj2": 0.7895751479423513}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( ( Max( DDR,Min( MDR ,Const ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( ( DDR / ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( DS / ( MUR + ( CS + MUC ) ) ) + ( ( MLU / ( MUC - Max( MUR,( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,MUC ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.8947368421052632, "obj2": 0.11057489807047186}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( Min( ( MDR * ( FirstVNF_RAM_Server - ACS ) ) ,( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Min( ( RCSe + RMSe ) ,Max( RMSe,DS ) ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.058704453441295545, "obj2": 0.7752651231135739}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( PN + ACS ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) + DS ) - ( CS / RMSe ) ) )", "obj1": 0.3319838056680162, "obj2": 0.5456272608643883}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),( PN * ( FirstVNF_Mem - AMS ) ) ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * ( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) )", "obj1": 0.2773279352226721, "obj2": 0.5763178218096784}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( MUM - Max( MUM,CS ) ),CS ) )", "obj1": 0.9757085020242915, "obj2": 0.02207512190755714}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( AMS / AMS ) ) ) / PN ) ) / PN )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( Max( ACS,( PN / ( Const / BR ) ) ) / ( Const / BR ) )", "choosing": "( ( ( RMSe * DS ) / CS ) / Max( RMSe,DS ) )", "obj1": 0.3805668016194332, "obj2": 0.5069932137318093}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( Max( MRS,FirstVNF_RAM_Server ) - DDR ) / RRS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MLU ) / RMSe ) - Min( Max( MUM,MLU ) ,MUR ) ) / MUM ) / MUR ) - DS ) * DS ) + Min( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) ,( MUM * CS ) ) )", "obj1": 0.9858299595141701, "obj2": 0.01558075376262678}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( MDR / ( Max( ( FirstVNF_Mem_Server - PN ),( DDR + DDR ) ) + FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( RCSe - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,RRSe ) / Min( MLU ,DS ) ) + RRSe ) ) ) ) )", "obj1": 0.05668016194331984, "obj2": 0.7893630811807116}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( CRS / ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,RRSe ) * ( Max( MLU,( RMSe - ( DS + ( RRSe + ( RCSe / RCSe ) ) ) ) ) / MLU ) )", "obj1": 0.9838056680161943, "obj2": 0.019591180017803477}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( ( Min( Max( CRS,ACS ) ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,Max( AMS,AMS ) ) ) / PN )", "choosing": "( ( ( ( ( ( RMSe * MUR ) - MUR ) + RRSe ) * MUM ) / MUC ) / ( RCSe / RCSe ) )", "obj1": 0.3825910931174089, "obj2": 0.5047243406514375}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( ( PN + PN ) * ( Min( FirstVNF_CPU ,( FirstVNF_RAM / MDR ) ) + ( ACS / FirstVNF_CPU ) ) )", "choosing": "( RMSe / ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) )", "obj1": 0.2813765182186235, "obj2": 0.5732398705433648}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( MDR - Max( AMS,( MDR * PN ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( Max( Min( MUM ,MUM ),RMSe ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_CPU - Max( ( RRS * ( RRS / ( ( FirstVNF_RAM + PN ) / ( AMS - DDR ) ) ) ),( FirstVNF_RAM + Max( Min( ( DDR * AMS ) ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) - Max( RCSe,RMSe ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( RRS - ( ( ( FirstVNF_RAM_Server + AMS ) / ( RRS - FirstVNF_CPU_Server ) ) / ( RRS - ( PN - ACS ) ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( ( MUC * MUM ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) * ( Min( MRS ,FirstVNF_CPU ) - PN ) )", "choosing": "( ( ( ( ( Min( DS ,MUR ) / ( Max( Max( RMSe,RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) ) - ( CS + Min( ( DS / ( MUC - RRSe ) ) ,MUC ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) * ARS ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( ( Min( Min( MUC ,( RMSe * MUC ) ) ,DS ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * DS ),Min( MUM ,CS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( ( RCSe - MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / Min( Const ,ARS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( ( ( MUM * ( CS * ( RMSe - RMSe ) ) ) - ( ( DS + MLU ) + ( MLU - DS ) ) ) - Max( MLU,( RRSe * ( MUC + MUM ) ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( Max( Max( ( ( ( MUM * ( CS * ( RMSe - RMSe ) ) ) - ( ( DS + MLU ) + ( MLU - DS ) ) ) - Max( MLU,( RRSe * ( MUC + MUM ) ) ) ),MLU ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( ( Min( Const ,ARS ) + MDR ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * ( MUM * ( CS * ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( ( ACS * Min( ( MDR / FirstVNF_CPU ) ,( BR * ( ( ( DDR + FirstVNF_CPU_Server ) * RRS ) + DDR ) ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUR - MUM ) / Max( ( ( Min( ( ( ( MLU * CS ) / MUC ) - ( ( RMSe * RMSe ) - CS ) ) ,MLU ) / DS ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( Max( MRS,Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( CRS ,( Const + ACS ) ) - BR ) ) )", "choosing": "( ( ( RCSe - Min( CS ,( Max( RCSe,RCSe ) * MLU ) ) ) / MUR ) / Max( MUR,CS ) )", "obj1": 0.5688259109311741, "obj2": 0.3584321206764911}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( Max( DDR,Min( MDR ,Const ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( ( DDR / ( FirstVNF_CPU_Server - Min( ARS ,FirstVNF_Mem_Server ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( DS / ( MUR + ( CS + MUC ) ) ) + ( ( MLU / ( MUC - Max( MUR,( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,MUC ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.8947368421052632, "obj2": 0.11057489807047186}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( ( FirstVNF_CPU / Const ) - ( ARS / ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( Min( ( DS + MUC ) ,( DS / RRSe ) ) + ( Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) * ( Max( CS,MUR ) * ( ( Min( MUR ,RMSe ) - MUC ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.3287699424226478}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( PN + ACS ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) + DS ) - ( CS / RMSe ) ) )", "obj1": 0.3319838056680162, "obj2": 0.5456272608643883}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( MUM - Max( MUM,CS ) ),CS ) )", "obj1": 0.9757085020242915, "obj2": 0.02207512190755714}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( Max( MRS,FirstVNF_RAM_Server ) - DDR ) / RRS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MLU ) / RMSe ) - Min( Max( MUM,MLU ) ,MUR ) ) / MUM ) / MUR ) - DS ) * DS ) + Min( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) ,( MUM * CS ) ) )", "obj1": 0.9858299595141701, "obj2": 0.01558075376262678}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / ( PN * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) ) / PN ) ) ,MRS ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - ( RRSe / MUC ) ) ,MUR ) * MUC ) )", "obj1": 0.9655870445344129, "obj2": 0.023932634427702246}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( CRS / ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,RRSe ) * ( Max( MLU,( RMSe - ( DS + ( RRSe + ( RCSe / RCSe ) ) ) ) ) / MLU ) )", "obj1": 0.9838056680161943, "obj2": 0.019591180017803477}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,ARS ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MUR + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7014165546598696}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Min( ( ( PN + Max( CRS,FirstVNF_Mem_Server ) ) * AMS ) ,FirstVNF_Mem ) / ( ( Max( Max( ARS,FirstVNF_Mem_Server ),( Const + Const ) ) - ( PN + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MLU - ( MLU / Max( MUM,( ( ( DS + MUC ) * MUC ) + MUM ) ) ) ),( ( ( MLU + RMSe ) + ( Min( DS ,RMSe ) / RCSe ) ) / ( ( RCSe - RMSe ) / ( Min( ( Min( MUC ,MUR ) - RMSe ) ,Min( DS ,RRSe ) ) * ( RRSe - Max( RMSe,( MUC / RRSe ) ) ) ) ) ) ) * ( ( ( CS - Max( ( MUC / ( MUM + MUM ) ),RCSe ) ) - CS ) + ( DS / Max( RRSe,( Min( ( ( RMSe + RRSe ) + ( DS / CS ) ) ,MLU ) * MUC ) ) ) ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( MDR - Max( AMS,( MDR * PN ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( Max( Min( MUM ,MUM ),RMSe ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_CPU - Max( ( RRS * ( RRS / ( ( FirstVNF_RAM + PN ) / ( AMS - DDR ) ) ) ),( FirstVNF_RAM + Max( Min( ( DDR * AMS ) ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) - Max( RCSe,RMSe ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( RRS - ( ( ( FirstVNF_RAM_Server + AMS ) / ( RRS - FirstVNF_CPU_Server ) ) / ( RRS - ( PN - ACS ) ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( ( MUC * MUM ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) * ( Min( MRS ,FirstVNF_CPU ) - PN ) )", "choosing": "( ( ( ( ( Min( DS ,MUR ) / ( Max( Max( RMSe,RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) ) - ( CS + Min( ( DS / ( MUC - RRSe ) ) ,MUC ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) * ARS ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( ( Min( Min( MUC ,( RMSe * MUC ) ) ,DS ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * DS ),Min( MUM ,CS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( ( RCSe - MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / Min( Const ,ARS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( ( ( MUM * ( CS * ( RMSe - RMSe ) ) ) - ( ( DS + MLU ) + ( MLU - DS ) ) ) - Max( MLU,( RRSe * ( MUC + MUM ) ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * Min( ( MDR / FirstVNF_CPU ) ,( BR * ( ( ( DDR + FirstVNF_CPU_Server ) * RRS ) + DDR ) ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUR - MUM ) / Max( ( ( Min( ( ( ( MLU * CS ) / MUC ) - ( ( RMSe * RMSe ) - CS ) ) ,MLU ) / DS ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - Min( FirstVNF_Mem_Server ,Max( ( RRS - CRS ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "Min( ( RMSe + MLU ) ,( ( Min( ( DS + MUC ) ,( DS / RRSe ) ) - MUC ) * ( Min( RCSe ,MLU ) / ( RCSe / Min( RCSe ,CS ) ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.35021237973410124}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( ( FirstVNF_CPU / Const ) - ( ARS / ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( Min( ( DS + MUC ) ,( DS / RRSe ) ) + ( Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) * ( Max( CS,MUR ) * ( ( Min( MUR ,RMSe ) - MUC ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.3287699424226478}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( PN + ACS ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) + DS ) - ( CS / RMSe ) ) )", "obj1": 0.3319838056680162, "obj2": 0.5456272608643883}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "Min( ( ( ( PN / AMS ) + Min( ARS ,FirstVNF_CPU ) ) * Max( ( BR - FirstVNF_CPU_Server ),( FirstVNF_Mem - FirstVNF_CPU ) ) ) ,Max( Min( Max( PN,MDR ) ,( CRS - BR ) ),Min( ( DDR + BR ) ,( BR + RRS ) ) ) )", "choosing": "Max( ( MLU + ( MUR - RCSe ) ),( MUR / Max( ( DS / CS ),( MUC + RRSe ) ) ) )", "obj1": 0.45951417004048584, "obj2": 0.45933491566378887}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "Min( ( ( ( FirstVNF_CPU * AMS ) - Max( FirstVNF_CPU,CRS ) ) / ( ( FirstVNF_Mem_Server - BR ) * ( ACS * FirstVNF_RAM_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) ) * Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( DS,CS ) * RRSe ) + CS ),( ( RCSe + MUM ) / ( ( RCSe * MLU ) * ( MLU / MUC ) ) ) )", "obj1": 0.6659919028340081, "obj2": 0.2877305935666213}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( MUM - Max( MUM,CS ) ),CS ) )", "obj1": 0.9757085020242915, "obj2": 0.02207512190755714}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( Max( MRS,FirstVNF_RAM_Server ) - DDR ) / RRS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MLU ) / RMSe ) - Min( Max( MUM,MLU ) ,MUR ) ) / MUM ) / MUR ) - DS ) * DS ) + Min( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) ,( MUM * CS ) ) )", "obj1": 0.9858299595141701, "obj2": 0.01558075376262678}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / ( PN * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) ) / PN ) ) ,MRS ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - ( RRSe / MUC ) ) ,MUR ) * MUC ) )", "obj1": 0.9655870445344129, "obj2": 0.023932634427702246}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( CRS / ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,RRSe ) * ( Max( MLU,( RMSe - ( DS + ( RRSe + ( RCSe / RCSe ) ) ) ) ) / MLU ) )", "obj1": 0.9838056680161943, "obj2": 0.019591180017803477}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,ARS ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MUR + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7014165546598696}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( MDR - Max( AMS,( MDR * PN ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( Max( Min( MUM ,MUM ),RMSe ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_CPU - Max( ( RRS * ( RRS / ( ( FirstVNF_RAM + PN ) / ( AMS - DDR ) ) ) ),( FirstVNF_RAM + Max( Min( ( DDR * AMS ) ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) - Max( RCSe,RMSe ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( RRS - ( ( ( FirstVNF_RAM_Server + AMS ) / ( RRS - FirstVNF_CPU_Server ) ) / ( RRS - ( PN - ACS ) ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( ( MUC * MUM ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU ) * ( Min( MRS ,FirstVNF_CPU ) - PN ) )", "choosing": "( ( ( ( ( Min( DS ,MUR ) / ( Max( Max( RMSe,RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) ) - ( CS + Min( ( DS / ( MUC - RRSe ) ) ,MUC ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) * ARS ) * Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MLU + RMSe ) / Min( RMSe ,Min( ( Min( Min( MUC ,( RMSe * MUC ) ) ,DS ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * DS ),Min( MUM ,CS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / RRS ) ) - ARS ) )", "choosing": "( RCSe * Max( ( RCSe - MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - Min( FirstVNF_Mem_Server ,Max( ( RRS - CRS ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "Min( ( RMSe + MLU ) ,( ( Min( ( DS + MUC ) ,( DS / RRSe ) ) - MUC ) * ( Min( RCSe ,MLU ) / ( RCSe / Min( RCSe ,CS ) ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.35021237973410124}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( PN + ACS ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) + DS ) - ( CS / RMSe ) ) )", "obj1": 0.3319838056680162, "obj2": 0.5456272608643883}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( ( FirstVNF_CPU / Const ) - ( ARS / ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( Min( ( DS + MUC ) ,( DS / RRSe ) ) + ( Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) * ( Max( CS,MUR ) * ( ( Min( MUR ,RMSe ) - MUC ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.3287699424226478}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + Max( MUC,RMSe ) ) / ( ( ( MUC * MUM ) + Max( CS,RCSe ) ) - MUM ) ) ) - ( CS * MUC ) ) - RRSe ) * RRSe )", "obj1": 0.451417004048583, "obj2": 0.45429813849537404}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( ( Min( CS ,( MUC - RCSe ) ) * CS ) ,Max( Min( MUC ,( Max( ( DS - ( MUR + MLU ) ),RMSe ) * RCSe ) ),DS ) ) * RCSe )", "obj1": 0.6032388663967612, "obj2": 0.3386844119078087}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( ( Const / FirstVNF_Mem ) - ( ACS + DDR ) )", "choosing": "Min( ( DS + Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) ) ,( DS / RRSe ) )", "obj1": 0.6659919028340081, "obj2": 0.28642766882687243}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( MUM - Max( MUM,CS ) ),CS ) )", "obj1": 0.9757085020242915, "obj2": 0.02207512190755714}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( Max( MRS,FirstVNF_RAM_Server ) - DDR ) / RRS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MLU ) / RMSe ) - Min( Max( MUM,MLU ) ,MUR ) ) / MUM ) / MUR ) - DS ) * DS ) + Min( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) ,( MUM * CS ) ) )", "obj1": 0.9858299595141701, "obj2": 0.01558075376262678}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / ( PN * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) ) / PN ) ) ,MRS ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - ( RRSe / MUC ) ) ,MUR ) * MUC ) )", "obj1": 0.9655870445344129, "obj2": 0.023932634427702246}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( CRS / ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,RRSe ) * ( Max( MLU,( RMSe - ( DS + ( RRSe + ( RCSe / RCSe ) ) ) ) ) / MLU ) )", "obj1": 0.9838056680161943, "obj2": 0.019591180017803477}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,ARS ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MUR + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7014165546598696}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( ( ( ACS * Min( ( MDR / FirstVNF_CPU ) ,( BR * ( ( ( DDR + FirstVNF_CPU_Server ) * RRS ) + DDR ) ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUR - MUM ) / Max( ( ( Min( ( ( ( MLU * CS ) / MUC ) - ( ( RMSe * RMSe ) - CS ) ) ,MLU ) / DS ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( MDR - Max( AMS,( MDR * PN ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( Max( Min( MUM ,MUM ),RMSe ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_CPU - Max( ( RRS * ( RRS / ( ( FirstVNF_RAM + PN ) / ( AMS - DDR ) ) ) ),( FirstVNF_RAM + Max( Min( ( DDR * AMS ) ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) - Max( RCSe,RMSe ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( FirstVNF_RAM - Max( AMS,( RRS - ( ( ( FirstVNF_RAM_Server + AMS ) / ( RRS - FirstVNF_CPU_Server ) ) / ( RRS - ( PN - ACS ) ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( ( MUC * MUM ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( MRS / ( ( ( Max( Min( BR ,( Min( FirstVNF_Mem ,ACS ) * DDR ) ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe + MUM ) * MUC ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - Min( FirstVNF_Mem_Server ,Max( ( RRS - CRS ),( FirstVNF_CPU - Const ) ) ) )", "choosing": "Min( ( RMSe + MLU ) ,( ( Min( ( DS + MUC ) ,( DS / RRSe ) ) - MUC ) * ( Min( RCSe ,MLU ) / ( RCSe / Min( RCSe ,CS ) ) ) ) )", "obj1": 0.5688259109311741, "obj2": 0.35021237973410124}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( PN + ACS ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) + DS ) - ( CS / RMSe ) ) )", "obj1": 0.3319838056680162, "obj2": 0.5456272608643883}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( ( FirstVNF_CPU / Const ) - ( ARS / ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( Min( ( DS + MUC ) ,( DS / RRSe ) ) + ( Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) * ( Max( CS,MUR ) * ( ( Min( MUR ,RMSe ) - MUC ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.3287699424226478}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( ( ( Min( ACS ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) / ( FirstVNF_RAM_Server - ACS ) ) - ( ( RRS + Const ) - Min( ARS ,PN ) ) )", "choosing": "Max( Min( MUR ,Min( MUR ,RMSe ) ),( DS * CS ) )", "obj1": 0.5931174089068826, "obj2": 0.3448780927348592}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + Max( MUC,RMSe ) ) / ( ( ( MUC * MUM ) + Max( CS,RCSe ) ) - MUM ) ) ) - ( CS * MUC ) ) - RRSe ) * RRSe )", "obj1": 0.451417004048583, "obj2": 0.45429813849537404}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,Max( DS,CS ) ) * RCSe )", "obj1": 0.694331983805668, "obj2": 0.26293933462442587}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( ( Min( CS ,( MUC - RCSe ) ) * CS ) ,Max( Min( MUC ,( Max( ( DS - ( MUR + MLU ) ),RMSe ) * RCSe ) ),DS ) ) * RCSe )", "obj1": 0.6032388663967612, "obj2": 0.3386844119078087}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,RRS )", "choosing": "Max( ( MLU + MUR ),Min( DS ,MUC ) )", "obj1": 0.6396761133603239, "obj2": 0.306218882440451}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( ( Const / FirstVNF_Mem ) - ( ACS + DDR ) )", "choosing": "Min( ( DS + Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) ) ,( DS / RRSe ) )", "obj1": 0.6659919028340081, "obj2": 0.28642766882687243}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( MUM - Max( MUM,CS ) ),CS ) )", "obj1": 0.9757085020242915, "obj2": 0.02207512190755714}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * AMS ) ) - ( ( ( Max( MRS,FirstVNF_RAM_Server ) - DDR ) / RRS ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( ( ( MUR + MLU ) / RMSe ) - Min( Max( MUM,MLU ) ,MUR ) ) / MUM ) / MUR ) - DS ) * DS ) + Min( ( ( Max( DS,( DS + CS ) ) - CS ) * MUM ) ,( MUM * CS ) ) )", "obj1": 0.9858299595141701, "obj2": 0.01558075376262678}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / ( PN * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) ) / PN ) ) ,MRS ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - ( RRSe / MUC ) ) ,MUR ) * MUC ) )", "obj1": 0.9655870445344129, "obj2": 0.023932634427702246}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( CRS / ( MDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,RRSe ) * ( Max( MLU,( RMSe - ( DS + ( RRSe + ( RCSe / RCSe ) ) ) ) ) / MLU ) )", "obj1": 0.9838056680161943, "obj2": 0.019591180017803477}, {"determining": "( FirstVNF_RAM_Server - ( ( Max( DDR,CRS ) - BR ) + ( Max( DDR,CRS ) - BR ) ) )", "choosing": "Min( Max( ( MUC - MUC ),DS ) ,( MUM + ( Max( Max( ( MUC - MUC ),DS ),MUM ) * ( CS - Max( MUR,CS ) ) ) ) )", "obj1": 0.5951417004048583, "obj2": 0.3428700330313086}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( FirstVNF_Mem_Server / AMS ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,Max( Min( MLU ,MUM ),CS ) ) * RCSe )", "obj1": 0.6923076923076923, "obj2": 0.2658643103707206}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,ARS ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MUR + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7014165546598696}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * Min( ( MDR / FirstVNF_CPU ) ,( BR * ( ( ( DDR + FirstVNF_CPU_Server ) * RRS ) + DDR ) ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUR - MUM ) / Max( ( ( Min( ( ( ( MLU * CS ) / MUC ) - ( ( RMSe * RMSe ) - CS ) ) ,MLU ) / DS ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( MDR - Max( AMS,( MDR * PN ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( Max( Min( MUM ,MUM ),RMSe ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_CPU - Max( ( RRS * ( RRS / ( ( FirstVNF_RAM + PN ) / ( AMS - DDR ) ) ) ),( FirstVNF_RAM + Max( Min( ( DDR * AMS ) ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) - Max( RCSe,RMSe ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( BR ,( Min( FirstVNF_Mem ,ACS ) * DDR ) ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe + MUM ) * MUC ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( CRS / Max( ( BR - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( ( MUM - ( ( ( MUM * MUC ) + DS ) + ( MUR / Min( MUR ,MUM ) ) ) ) - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + RRSe ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.33654144973385225}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( FirstVNF_CPU / Const ) - ( ARS / ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( Min( ( DS + MUC ) ,( DS / RRSe ) ) + ( Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) * ( Max( CS,MUR ) * ( ( Min( MUR ,RMSe ) - MUC ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.3287699424226478}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ACS - ( ( Const / FirstVNF_CPU ) - ( ARS / ( ACS - ( CRS - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( RMSe + ( Max( ( MLU + CS ),MUM ) * ( Max( CS,MUR ) * ( ( MUC / CS ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.29848866307602934}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( PN + ACS ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) + DS ) - ( CS / RMSe ) ) )", "obj1": 0.3319838056680162, "obj2": 0.5456272608643883}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / ( PN * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) ) / PN ) ) ,MRS ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - ( RRSe / MUC ) ) ,MUR ) * MUC ) )", "obj1": 0.9655870445344129, "obj2": 0.023932634427702246}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + Max( MUC,RMSe ) ) / ( ( ( MUC * MUM ) + Max( CS,RCSe ) ) - MUM ) ) ) - ( CS * MUC ) ) - RRSe ) * RRSe )", "obj1": 0.451417004048583, "obj2": 0.45429813849537404}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( ( Const / FirstVNF_Mem ) - ( ACS + DDR ) )", "choosing": "Min( ( DS + Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) ) ,( DS / RRSe ) )", "obj1": 0.6659919028340081, "obj2": 0.28642766882687243}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) ) ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MUR + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7014165546598696}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,ARS ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MUR + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7014165546598696}, {"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * Min( ( MDR / FirstVNF_CPU ) ,( BR * ( ( ( DDR + FirstVNF_CPU_Server ) * RRS ) + DDR ) ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUR - MUM ) / Max( ( ( Min( ( ( ( MLU * CS ) / MUC ) - ( ( RMSe * RMSe ) - CS ) ) ,MLU ) / DS ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( MDR - Max( AMS,( MDR * PN ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( Max( Min( MUM ,MUM ),RMSe ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_CPU - Max( ( RRS * ( RRS / ( ( FirstVNF_RAM + PN ) / ( AMS - DDR ) ) ) ),( FirstVNF_RAM + Max( Min( ( DDR * AMS ) ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) - Max( RCSe,RMSe ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) / ( BR - ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "( Max( Max( ( ( RRSe * CS ) - ( ( ( RCSe / ( RMSe / MLU ) ) * ( CS * Min( MUC ,RMSe ) ) ) - ( Max( DS,MLU ) + ( MLU - DS ) ) ) ),RCSe ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / MRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,Max( ( MUC - MLU ),Max( Max( MLU,Min( ( RCSe / DS ) ,CS ) ),Max( MUR,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / ( MRS - Min( ( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ) * ACS ) ,Max( DDR,CRS ) ) ) ) - ( ( ( ( FirstVNF_Mem + ( FirstVNF_RAM / PN ) ) * AMS ) + ( ARS - BR ) ) + ACS ) )", "choosing": "Min( Max( ( RCSe * RMSe ),MUR ) ,Min( Max( CS,( ( DS - ( ( ( MLU + CS ) / MUR ) * ( MLU - ( MLU + RRSe ) ) ) ) * ( CS - RCSe ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( CRS / Max( ( BR - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( ( MUM - ( ( ( MUM * MUC ) + DS ) + ( MUR / Min( MUR ,MUM ) ) ) ) - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + RRSe ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.33654144973385225}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( FirstVNF_CPU / Const ) - ( ARS / ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( Min( ( DS + MUC ) ,( DS / RRSe ) ) + ( Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) * ( Max( CS,MUR ) * ( ( Min( MUR ,RMSe ) - MUC ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.3287699424226478}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ACS - ( ( Const / FirstVNF_CPU ) - ( ARS / ( ACS - ( CRS - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( RMSe + ( Max( ( MLU + CS ),MUM ) * ( Max( CS,MUR ) * ( ( MUC / CS ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.29848866307602934}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Max( BR,MDR ),FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe * DS ) / Max( RMSe,DS ) ) * MUM )", "obj1": 0.44534412955465585, "obj2": 0.4626279052247457}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / ( PN * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) ) / PN ) ) ,MRS ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - ( RRSe / MUC ) ) ,MUR ) * MUC ) )", "obj1": 0.9655870445344129, "obj2": 0.023932634427702246}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + Max( MUC,RMSe ) ) / ( ( ( MUC * MUM ) + Max( CS,RCSe ) ) - MUM ) ) ) - ( CS * MUC ) ) - RRSe ) * RRSe )", "obj1": 0.451417004048583, "obj2": 0.45429813849537404}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM / MUC ) ,( ( MLU - ( ( RCSe - ( RCSe - Max( RRSe,( CS + MUR ) ) ) ) / RMSe ) ) + MUM ) )", "obj1": 0.46558704453441296, "obj2": 0.45391680629718717}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( ( Const / FirstVNF_Mem ) - ( ACS + DDR ) )", "choosing": "Min( ( DS + Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) ) ,( DS / RRSe ) )", "obj1": 0.6659919028340081, "obj2": 0.28642766882687243}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( MDR / ( Max( ( ( FirstVNF_CPU / Max( ACS,DDR ) ) + Max( BR,FirstVNF_CPU_Server ) ),( ( PN * ( FirstVNF_Mem - AMS ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RCSe,( ( Max( RCSe,( Max( MUC,( MUM + CS ) ) - RMSe ) ) - CS ) / RRSe ) ) * RCSe )", "obj1": 0.7611336032388664, "obj2": 0.20423602676432567}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( FirstVNF_CPU_Server - RRS ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / ARS ) ) )", "choosing": "( ( MUM * RMSe ) - ( MUM / RCSe ) )", "obj1": 0.757085020242915, "obj2": 0.20431248535565666}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( ( Max( DDR,CRS ) / ( FirstVNF_Mem - Const ) ) / Max( ( FirstVNF_Mem_Server - RRS ),( FirstVNF_RAM * RRS ) ) ) + ( ( Max( MDR,MDR ) / ACS ) / ( ( CRS * FirstVNF_Mem ) * Min( RRS ,ACS ) ) ) )", "choosing": "( Max( Max( ( RMSe * MUR ),( MUC / DS ) ),( MUC + Max( ( MUM + MLU ),MUC ) ) ) - Min( ( ( MUR + RCSe ) + ( CS - RRSe ) ) ,( Min( MLU ,RCSe ) / Min( MUR ,RRSe ) ) ) )", "obj1": 0.44129554655870445, "obj2": 0.4767843249390232}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,ARS ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MUR + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7014165546598696}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) ) ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MUR + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7014165546598696}, {"determining": "( MRS / ( ( ( Max( Min( BR ,( Min( FirstVNF_Mem ,ACS ) * DDR ) ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe + MUM ) * MUC ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * Min( ( MDR / FirstVNF_CPU ) ,( BR * ( ( ( DDR + FirstVNF_CPU_Server ) * RRS ) + DDR ) ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUR - MUM ) / Max( ( ( Min( ( ( ( MLU * CS ) / MUC ) - ( ( RMSe * RMSe ) - CS ) ) ,MLU ) / DS ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( MDR - Max( AMS,( MDR * PN ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( Max( Min( MUM ,MUM ),RMSe ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_CPU - Max( ( RRS * ( RRS / ( ( FirstVNF_RAM + PN ) / ( AMS - DDR ) ) ) ),( FirstVNF_RAM + Max( Min( ( DDR * AMS ) ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) - Max( RCSe,RMSe ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) / ( BR - ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "( Max( Max( ( ( RRSe * CS ) - ( ( ( RCSe / ( RMSe / MLU ) ) * ( CS * Min( MUC ,RMSe ) ) ) - ( Max( DS,MLU ) + ( MLU - DS ) ) ) ),RCSe ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "( ( MRS - PN ) / ( ACS * Max( RRS,Max( ( DDR / FirstVNF_Mem ),RRS ) ) ) )", "choosing": "( Max( CS,DS ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( CRS / Max( ( BR - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( ( MUM - ( ( ( MUM * MUC ) + DS ) + ( MUR / Min( MUR ,MUM ) ) ) ) - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + RRSe ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.33654144973385225}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( FirstVNF_CPU / Const ) - ( ARS / ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( Min( ( DS + MUC ) ,( DS / RRSe ) ) + ( Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) * ( Max( CS,MUR ) * ( ( Min( MUR ,RMSe ) - MUC ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.3287699424226478}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( Max( ( DDR - Const ),MDR ) - ( ARS / MRS ) ) / Min( ( Max( Min( ( ACS + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ,Max( Min( DDR ,FirstVNF_CPU ),( CRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( ( RMSe * CS ) * MUR ) - ( MLU - MLU ) ) ,DS ) - ( ( ( MLU * RMSe ) - Min( MLU ,( ( ( MUC + DS ) - ( CS / RMSe ) ) / MLU ) ) ) - CS ) )", "obj1": 0.46963562753036436, "obj2": 0.44537863410833156}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ACS - ( ( Const / FirstVNF_CPU ) - ( ARS / ( ACS - ( CRS - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( RMSe + ( Max( ( MLU + CS ),MUM ) * ( Max( CS,MUR ) * ( ( MUC / CS ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.29848866307602934}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "Min( ( ( ( DDR * AMS ) + FirstVNF_Mem ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ARS ) ,FirstVNF_Mem_Server ) ,( ( MRS * Min( DDR ,RRS ) ) / Min( ( FirstVNF_RAM * MRS ) ,PN ) ) ) )", "choosing": "( Max( ( Max( MLU,Min( RCSe ,( MUC + ( MUR - ( CS + DS ) ) ) ) ) - CS ),( RRSe - RCSe ) ) / ( Max( ( MUM * MUR ),RMSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.631578947368421, "obj2": 0.31261247663947306}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.49190283400809715, "obj2": 0.426310906026079}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / ( PN * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) ) / PN ) ) ,MRS ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - ( RRSe / MUC ) ) ,MUR ) * MUC ) )", "obj1": 0.9655870445344129, "obj2": 0.023932634427702246}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( ( Const / FirstVNF_Mem ) - ( ACS + DDR ) )", "choosing": "Min( ( DS + Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) ) ,( DS / RRSe ) )", "obj1": 0.6659919028340081, "obj2": 0.28642766882687243}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( Max( DDR,( ( CRS + Min( ( FirstVNF_RAM / PN ) ,ACS ) ) * Const ) ) + Max( ( BR * RRS ),FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( MUC,RCSe ) * Max( MUR,( RMSe - ( CS - RMSe ) ) ) ) - Max( MUC,( RMSe / Max( RRSe,RMSe ) ) ) ) ,( Min( ( ( RCSe - ( MLU * ( MLU + Max( RRSe,MUR ) ) ) ) * MUC ) ,DS ) + CS ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( BR ,( Min( FirstVNF_Mem ,ACS ) * DDR ) ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe + MUM ) * MUC ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * Min( ( MDR / FirstVNF_CPU ) ,( BR * ( ( ( DDR + FirstVNF_CPU_Server ) * RRS ) + DDR ) ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUR - MUM ) / Max( ( ( Min( ( ( ( MLU * CS ) / MUC ) - ( ( RMSe * RMSe ) - CS ) ) ,MLU ) / DS ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( FirstVNF_CPU ,ACS ) ,( BR * Min( ( ARS * ( DDR + FirstVNF_CPU_Server ) ) ,DDR ) ) ) * ACS ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUM - Max( MUM,CS ) ) / Max( ( RRSe - DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( MDR - Max( AMS,( MDR * PN ) ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / ( Max( Max( Max( Min( MUM ,MUM ),RMSe ),RCSe ),RCSe ) + MUM ) ) - Min( Max( MUC,( MLU + RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_CPU - Max( ( RRS * ( RRS / ( ( FirstVNF_RAM + PN ) / ( AMS - DDR ) ) ) ),( FirstVNF_RAM + Max( Min( ( DDR * AMS ) ,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( MUR,RCSe ) - Max( RCSe,RMSe ) ) / Min( DS ,MUC ) ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( CRS / ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( RCSe - RRSe ) * ( RRSe - Min( ( ( RRSe * Min( MUC ,RMSe ) ) + MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) / ( BR - ( FirstVNF_RAM_Server * AMS ) ) )", "choosing": "( Max( Max( ( ( RRSe * CS ) - ( ( ( RCSe / ( RMSe / MLU ) ) * ( CS * Min( MUC ,RMSe ) ) ) - ( Max( DS,MLU ) + ( MLU - DS ) ) ) ),RCSe ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,ARS ) / ( ( Min( ( ARS - Min( BR ,( ( Const * CRS ) / ARS ) ) ) ,Min( MRS ,( ( PN / ( MDR / FirstVNF_RAM_Server ) ) + Const ) ) ) - FirstVNF_Mem ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( MUR + ( ( ( CS - Max( ( MUR + RCSe ),RMSe ) ) + ( MUM / RRSe ) ) * MUR ) ) ,MUC ) * RCSe )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "( Min( FirstVNF_RAM ,( ( ( ACS * PN ) - FirstVNF_Mem_Server ) + MDR ) ) * Max( CRS,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / ( ( MUC - ( Min( Min( Min( MLU ,Max( MLU,MUC ) ) ,MLU ) ,RMSe ) * MUC ) ) + ( ( MUR * ( MUM / RCSe ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / ( ACS * Max( RRS,Max( ( DDR / FirstVNF_Mem ),RRS ) ) ) )", "choosing": "( Max( CS,DS ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( CRS / Max( ( BR - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( ( MUM - ( ( ( MUM * MUC ) + DS ) + ( MUR / Min( MUR ,MUM ) ) ) ) - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + RRSe ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.33654144973385225}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) )", "choosing": "( Max( Max( ( Max( CS,RCSe ) - ( ( ( Max( RMSe,DS ) / ( MUM / MLU ) ) * ( MLU * Min( MUC ,RMSe ) ) ) - ( Max( MLU,DS ) + ( ( MUM + MUM ) - ( MUC + MUC ) ) ) ) ),RCSe ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 0.5991902834008097, "obj2": 0.331050946265753}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ACS - ( ( Const / FirstVNF_CPU ) - ( ARS / ( ACS - ( CRS - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( RMSe + ( Max( ( MLU + CS ),MUM ) * ( Max( CS,MUR ) * ( ( MUC / CS ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.29848866307602934}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Max( FirstVNF_RAM,Max( DDR,AMS ) ) - ( ( ( ACS * FirstVNF_Mem ) / DDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR * ( MUR + MUM ) ) / DS ) + ( ( ( MUC - ( MUR + ( ( RCSe + ( DS / RCSe ) ) * ( ( MUR + DS ) - RRSe ) ) ) ) / Max( MLU,( RMSe - DS ) ) ) + RRSe ) )", "obj1": 0.9291497975708503, "obj2": 0.06576515768242112}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( Max( ( RRS * DDR ),( FirstVNF_Mem_Server / ( RRS / ( CRS / MRS ) ) ) ) / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,( ( DS + MLU ) + ( MUC - DS ) ) ) * RCSe )", "obj1": 0.7004048582995951, "obj2": 0.24963454507682623}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * Max( CRS,( ( ( ACS * BR ) - Min( RRS ,PN ) ) + ( ( AMS * Max( FirstVNF_CPU,FirstVNF_CPU ) ) + DDR ) ) ) ) ,MRS ) )", "choosing": "Min( Max( ( RCSe * ( DS / ( ( RCSe / MLU ) - MUC ) ) ),MUR ) ,Min( Max( ( Max( CS,RCSe ) - ( ( ( Max( RMSe,DS ) / ( MUM / MLU ) ) * ( MLU * Min( MUC ,RMSe ) ) ) - ( Max( MLU,DS ) + ( ( MUM + MUM ) - ( MUC + MUC ) ) ) ) ),( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * ( CS - MUC ) ) ) ,MLU ) )", "obj1": 0.6255060728744939, "obj2": 0.3098677812270101}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( FirstVNF_CPU / Const ) - ( ARS / ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( Min( ( DS + MUC ) ,( DS / RRSe ) ) + ( Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) * ( Max( CS,MUR ) * ( ( Min( MUR ,RMSe ) - MUC ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.3287699424226478}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / ( PN * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) ) / PN ) ) ,MRS ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - ( RRSe / MUC ) ) ,MUR ) * MUC ) )", "obj1": 0.9655870445344129, "obj2": 0.023932634427702246}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( Const / FirstVNF_Mem ) - ( ACS + DDR ) )", "choosing": "Min( ( DS + Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) ) ,( DS / RRSe ) )", "obj1": 0.6659919028340081, "obj2": 0.28642766882687243}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( Min( PN ,ACS ),FirstVNF_RAM ) ) - ( Const + DDR ) )", "choosing": "Min( ( MUR / DS ) ,( ( ( RRSe + ( ( Min( MUC ,MUM ) + Max( MUC,RMSe ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - ( CS * MUC ) ) / RRSe ) )", "obj1": 0.9635627530364372, "obj2": 0.024732298588491592}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( BR + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - Min( MDR ,Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( DS,MUR ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0014821871321300114}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( BR ,( Min( FirstVNF_Mem ,ACS ) * DDR ) ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe + MUM ) * MUC ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / Min( Max( MDR,FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( ( Max( MUM,Min( Min( RMSe ,MLU ) ,RMSe ) ) * RRSe ) - MUR ) / Max( ( ( Min( MLU ,( ( ( MUM * CS ) / MUC ) - ( CS - ( RCSe * RMSe ) ) ) ) / MUR ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * Min( ( MDR / FirstVNF_CPU ) ,( BR * ( ( ( DDR + FirstVNF_CPU_Server ) * RRS ) + DDR ) ) ) ) * FirstVNF_CPU ) * ( Min( PN ,CRS ) - Const ) )", "choosing": "( ( MUR - MUM ) / Max( ( ( Min( ( ( ( MLU * CS ) / MUC ) - ( ( RMSe * RMSe ) - CS ) ) ,MLU ) / DS ) - MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( ( CS / ( MUC - Max( ( ( MLU * RMSe ) + ( ( RMSe / CS ) * ( RRSe / MUC ) ) ),( RCSe * CS ) ) ) ) + ( MUM * RMSe ) ) / ( MUC + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( ( ( ACS * PN ) - FirstVNF_Mem_Server ) + MDR ) ) * Max( CRS,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / ( ( MUC - ( Min( Min( Min( MLU ,Max( MLU,MUC ) ) ,MLU ) ,RMSe ) * MUC ) ) + ( ( MUR * ( MUM / RCSe ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( CRS / Max( ( BR - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( ( MUM - ( ( ( MUM * MUC ) + DS ) + ( MUR / Min( MUR ,MUM ) ) ) ) - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + RRSe ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.33654144973385225}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) )", "choosing": "( Max( Max( ( Max( CS,RCSe ) - ( ( ( Max( RMSe,DS ) / ( MUM / MLU ) ) * ( MLU * Min( MUC ,RMSe ) ) ) - ( Max( MLU,DS ) + ( ( MUM + MUM ) - ( MUC + MUC ) ) ) ) ),RCSe ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 0.5991902834008097, "obj2": 0.331050946265753}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ACS - ( ( Const / FirstVNF_CPU ) - ( ARS / ( ACS - ( CRS - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( RMSe + ( Max( ( MLU + CS ),MUM ) * ( Max( CS,MUR ) * ( ( MUC / CS ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.29848866307602934}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Max( DDR,Const ) ) + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - FirstVNF_Mem ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( MUR,RCSe ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9271255060728745, "obj2": 0.05937111752577768}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( ( AMS / Min( RRS ,ACS ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( ( ( ( MLU - MLU ) * RCSe ) - CS ) / MLU ) - ( MUM * CS ) ) / ( RCSe / RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24333639453323921}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( FirstVNF_CPU / Const ) - ( ARS / ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( Min( ( DS + MUC ) ,( DS / RRSe ) ) + ( Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) * ( Max( CS,MUR ) * ( ( Min( MUR ,RMSe ) - MUC ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.3287699424226478}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * Max( CRS,( ( ( ACS * BR ) - Min( RRS ,PN ) ) + ( ( AMS * Max( FirstVNF_CPU,FirstVNF_CPU ) ) + DDR ) ) ) ) ,MRS ) )", "choosing": "Min( Max( ( RCSe * ( DS / ( ( RCSe / MLU ) - MUC ) ) ),MUR ) ,Min( Max( ( Max( CS,RCSe ) - ( ( ( Max( RMSe,DS ) / ( MUM / MLU ) ) * ( MLU * Min( MUC ,RMSe ) ) ) - ( Max( MLU,DS ) + ( ( MUM + MUM ) - ( MUC + MUC ) ) ) ) ),( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * ( CS - MUC ) ) ) ,MLU ) )", "obj1": 0.6255060728744939, "obj2": 0.3098677812270101}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / ( PN * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) ) / PN ) ) ,MRS ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - ( RRSe / MUC ) ) ,MUR ) * MUC ) )", "obj1": 0.9655870445344129, "obj2": 0.023932634427702246}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( Const / FirstVNF_Mem ) - ( ACS + DDR ) )", "choosing": "Min( ( DS + Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) ) ,( DS / RRSe ) )", "obj1": 0.6659919028340081, "obj2": 0.28642766882687243}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) )", "choosing": "( Max( Max( ( Max( CS,RCSe ) - ( ( ( Max( RMSe,DS ) / ( MUM / MLU ) ) * ( MLU * Min( MUC ,RMSe ) ) ) - ( Max( MLU,DS ) + ( ( MUM + MUM ) - ( MUC + MUC ) ) ) ) ),RCSe ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 0.6214574898785425, "obj2": 0.31171198152163754}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( Min( PN ,ACS ),FirstVNF_RAM ) ) - ( Const + DDR ) )", "choosing": "Min( ( MUR / DS ) ,( ( ( RRSe + ( ( Min( MUC ,MUM ) + Max( MUC,RMSe ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - ( CS * MUC ) ) / RRSe ) )", "obj1": 0.9635627530364372, "obj2": 0.024732298588491592}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * RMSe )", "obj1": 0.7186234817813765, "obj2": 0.24232641339371128}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( DS,MLU ) )", "obj1": 0.9959514170040485, "obj2": 0.0013277381827081524}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( MDR - ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem / FirstVNF_RAM ) ) + ( BR * ( CRS - AMS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( ( DS + MUR ) * ( RRSe + CS ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0013277381827081524}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( MRS - PN ) / ( ACS * Max( RRS,Max( ( DDR / FirstVNF_Mem ),RRS ) ) ) )", "choosing": "( Max( CS,DS ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( BR ,( Min( FirstVNF_Mem ,ACS ) * DDR ) ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe + MUM ) * MUC ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "28": [{"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "Min( ( DS + DS ) ,( ( MLU - ( ( MUC + MLU ) * ( ( RCSe - RMSe ) - Min( MUR ,Min( MUR ,DS ) ) ) ) ) + ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( ( CS / ( MUC - Max( ( ( MLU * RMSe ) + ( ( RMSe / CS ) * ( RRSe / MUC ) ) ),( RCSe * CS ) ) ) ) + ( MUM * RMSe ) ) / ( MUC + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( CRS / Max( ( BR - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( ( MUM - ( ( ( MUM * MUC ) + DS ) + ( MUR / Min( MUR ,MUM ) ) ) ) - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + RRSe ) ) ) ) )", "obj1": 0.5526315789473685, "obj2": 0.33654144973385225}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) )", "choosing": "( Max( Max( ( Max( CS,RCSe ) - ( ( ( Max( RMSe,DS ) / ( MUM / MLU ) ) * ( MLU * Min( MUC ,RMSe ) ) ) - ( Max( MLU,DS ) + ( ( MUM + MUM ) - ( MUC + MUC ) ) ) ) ),RCSe ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 0.5991902834008097, "obj2": 0.331050946265753}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ACS - ( ( Const / FirstVNF_CPU ) - ( ARS / ( ACS - ( CRS - FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( RMSe + ( Max( ( MLU + CS ),MUM ) * ( Max( CS,MUR ) * ( ( MUC / CS ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6336032388663968, "obj2": 0.29848866307602934}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Max( DDR,Const ) ) + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - FirstVNF_Mem ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( MUR,RCSe ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9271255060728745, "obj2": 0.05937111752577768}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( RRS + FirstVNF_CPU_Server ) ) ,Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( MRS * FirstVNF_Mem ) / ( ( FirstVNF_RAM * MRS ) + PN ) ) ) )", "choosing": "Min( Max( RRSe,DS ) ,( MUC - MLU ) )", "obj1": 0.6639676113360324, "obj2": 0.29130561047335607}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( ( AMS / Min( RRS ,ACS ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( ( ( ( MLU - MLU ) * RCSe ) - CS ) / MLU ) - ( MUM * CS ) ) / ( RCSe / RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24333639453323921}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( FirstVNF_CPU / Const ) - ( ARS / ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) ) )", "choosing": "Min( Max( ( MUC - ( ( ( RCSe - MUR ) - MUM ) * MUC ) ),( ( RMSe + MUR ) * RMSe ) ) ,( Min( ( DS + MUC ) ,( DS / RRSe ) ) + ( Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) * ( Max( CS,MUR ) * ( ( Min( MUR ,RMSe ) - MUC ) * ( MUR * MLU ) ) ) ) ) )", "obj1": 0.6052631578947368, "obj2": 0.3287699424226478}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * Max( CRS,( ( ( ACS * BR ) - Min( RRS ,PN ) ) + ( ( AMS * Max( FirstVNF_CPU,FirstVNF_CPU ) ) + DDR ) ) ) ) ,MRS ) )", "choosing": "Min( Max( ( RCSe * ( DS / ( ( RCSe / MLU ) - MUC ) ) ),MUR ) ,Min( Max( ( Max( CS,RCSe ) - ( ( ( Max( RMSe,DS ) / ( MUM / MLU ) ) * ( MLU * Min( MUC ,RMSe ) ) ) - ( Max( MLU,DS ) + ( ( MUM + MUM ) - ( MUC + MUC ) ) ) ) ),( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * ( CS - MUC ) ) ) ,MLU ) )", "obj1": 0.6255060728744939, "obj2": 0.3098677812270101}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / ( PN * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) ) / PN ) ) ,MRS ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - ( RRSe / MUC ) ) ,MUR ) * MUC ) )", "obj1": 0.9655870445344129, "obj2": 0.023932634427702246}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( AMS / Min( RRS ,PN ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( MUC * ( Min( ( MUC / Min( Max( DS,DS ) ,DS ) ) ,RRSe ) - ( MLU * CS ) ) ) * ( ( Max( ( ( ( MLU - ( DS * RRSe ) ) / ( MUR + ( DS - MUM ) ) ) / DS ),RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24032301762538852}, {"determining": "( ( Const / FirstVNF_Mem ) - ( ACS + DDR ) )", "choosing": "Min( ( DS + Max( ( ( Max( ( MUC - CS ),Max( MLU,RRSe ) ) * ( Min( RRSe ,MUM ) - RRSe ) ) + CS ),MUM ) ) ,( DS / RRSe ) )", "obj1": 0.6659919028340081, "obj2": 0.28642766882687243}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) )", "choosing": "( Max( Max( ( Max( CS,RCSe ) - ( ( ( Max( RMSe,DS ) / ( MUM / MLU ) ) * ( MLU * Min( MUC ,RMSe ) ) ) - ( Max( MLU,DS ) + ( ( MUM + MUM ) - ( MUC + MUC ) ) ) ) ),RCSe ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 0.6214574898785425, "obj2": 0.31171198152163754}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( Min( PN ,ACS ),FirstVNF_RAM ) ) - ( Const + DDR ) )", "choosing": "Min( ( MUR / DS ) ,( ( ( RRSe + ( ( Min( MUC ,MUM ) + Max( MUC,RMSe ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - ( CS * MUC ) ) / RRSe ) )", "obj1": 0.9635627530364372, "obj2": 0.024732298588491592}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( DS,MLU ) )", "obj1": 0.9959514170040485, "obj2": 0.0013277381827081524}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( DS,MLU ) )", "obj1": 0.9959514170040485, "obj2": 0.0013277381827081524}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( Min( FirstVNF_RAM ,( ( ( ACS * PN ) - FirstVNF_Mem_Server ) + MDR ) ) * Max( CRS,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / ( ( MUC - ( Min( Min( Min( MLU ,Max( MLU,MUC ) ) ,MLU ) ,RMSe ) * MUC ) ) + ( ( MUR * ( MUM / RCSe ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / ( ACS * Max( RRS,Max( ( DDR / FirstVNF_Mem ),RRS ) ) ) )", "choosing": "( Max( CS,DS ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( BR ,( Min( FirstVNF_Mem ,ACS ) * DDR ) ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe + MUM ) * MUC ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "29": [{"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "Min( ( DS + DS ) ,( ( MLU - ( ( MUC + MLU ) * ( ( RCSe - RMSe ) - Min( MUR ,Min( MUR ,DS ) ) ) ) ) + ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( FirstVNF_CPU_Server - Max( Const,DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( RCSe + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( Min( Min( RMSe ,CS ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3316352797283562}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MRS / ( ( FirstVNF_Mem_Server - Max( ( CRS / ( BR * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) * ( MDR + ACS ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( MUC ,MUM ) + Min( ( MUM / DS ) ,Max( CS,DS ) ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - Min( RRSe ,RMSe ) ) / RRSe ) * RRSe )", "obj1": 0.6234817813765182, "obj2": 0.2855693924373377}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( ( ( FirstVNF_CPU * BR ) / AMS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) - FirstVNF_Mem_Server ) - Min( ARS ,( ( CRS / CRS ) / ( AMS * AMS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( RCSe * Min( ( Min( CS ,( MUC - Min( MUR ,MUC ) ) ) * CS ) ,Max( Min( MUC ,( RRSe * RMSe ) ),DS ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3142579575067485}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Max( DDR,Const ) ) + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - FirstVNF_Mem ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( MUR,RCSe ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9271255060728745, "obj2": 0.05937111752577768}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) )", "choosing": "( Max( Max( ( Max( CS,RCSe ) - ( ( ( Max( RMSe,DS ) / ( MUM / MLU ) ) * ( MLU * Min( MUC ,RMSe ) ) ) - ( Max( MLU,DS ) + ( ( MUM + MUM ) - ( MUC + MUC ) ) ) ) ),RCSe ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 0.6214574898785425, "obj2": 0.31171198152163754}, {"determining": "( ( AMS / Min( RRS ,ACS ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( ( ( ( MLU - MLU ) * RCSe ) - CS ) / MLU ) - ( MUM * CS ) ) / ( RCSe / RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24333639453323921}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( ( MRS + BR ) / ( MRS + Max( Min( MRS ,PN ),ACS ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( ( Min( DS ,Max( RCSe,( ( MUC + MUR ) + Min( RCSe ,RMSe ) ) ) ) - CS ) ,( ( DS * ( ( CS * ( ( MUM * MUC ) / MUC ) ) / MUR ) ) * MLU ) ) / ( MLU / ( CS - MUR ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6135224425622052}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "( Min( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / ( PN * ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) ) ) / PN ) ) ,MRS ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - ( RRSe / MUC ) ) ,MUR ) * MUC ) )", "obj1": 0.9655870445344129, "obj2": 0.023932634427702246}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( AMS / Min( RRS ,PN ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( MUC * ( Min( ( MUC / Min( Max( DS,DS ) ,DS ) ) ,RRSe ) - ( MLU * CS ) ) ) * ( ( Max( ( ( ( MLU - ( DS * RRSe ) ) / ( MUR + ( DS - MUM ) ) ) / DS ),RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24032301762538852}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( Min( PN ,ACS ),FirstVNF_RAM ) ) - ( Const + DDR ) )", "choosing": "Min( ( MUR / DS ) ,( ( ( RRSe + ( ( Min( MUC ,MUM ) + Max( MUC,RMSe ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - ( CS * MUC ) ) / RRSe ) )", "obj1": 0.9635627530364372, "obj2": 0.024732298588491592}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( DS,MLU ) )", "obj1": 0.9959514170040485, "obj2": 0.0013277381827081524}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( DS,MLU ) )", "obj1": 0.9959514170040485, "obj2": 0.0013277381827081524}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( ( CS / ( MUC - Max( ( ( MLU * RMSe ) + ( ( RMSe / CS ) * ( RRSe / MUC ) ) ),( RCSe * CS ) ) ) ) + ( MUM * RMSe ) ) / ( MUC + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( ( ( ACS * PN ) - FirstVNF_Mem_Server ) + MDR ) ) * Max( CRS,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / ( ( MUC - ( Min( Min( Min( MLU ,Max( MLU,MUC ) ) ,MLU ) ,RMSe ) * MUC ) ) + ( ( MUR * ( MUM / RCSe ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / ( ACS * Max( RRS,Max( ( DDR / FirstVNF_Mem ),RRS ) ) ) )", "choosing": "( Max( CS,DS ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( BR ,( Min( FirstVNF_Mem ,ACS ) * DDR ) ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe + MUM ) * MUC ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR - MRS ) ,( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ) ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) )", "choosing": "Min( Max( ( RCSe * ( DS / ( ( RCSe / MLU ) - MUC ) ) ),CS ) ,Min( Max( CS,( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * ( CS - MUC ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) / ( Min( ( ARS - Min( BR ,( ( Const * CRS ) / ARS ) ) ) ,Min( MRS ,( ( PN / ( MDR / FirstVNF_RAM_Server ) ) + Const ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 1.0, "obj2": 0.0}], "30": [{"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const - FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( MUR * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( FirstVNF_CPU_Server - Max( Const,DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( RCSe + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( Min( Min( RMSe ,CS ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3316352797283562}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( MRS / ( ( FirstVNF_Mem_Server - Max( ( CRS / ( BR * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) * ( MDR + ACS ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( MUC ,MUM ) + Min( ( MUM / DS ) ,Max( CS,DS ) ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - Min( RRSe ,RMSe ) ) / RRSe ) * RRSe )", "obj1": 0.6234817813765182, "obj2": 0.2855693924373377}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( ( ( FirstVNF_CPU * BR ) / AMS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) - FirstVNF_Mem_Server ) - Min( ARS ,( ( CRS / CRS ) / ( AMS * AMS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( RCSe * Min( ( Min( CS ,( MUC - Min( MUR ,MUC ) ) ) * CS ) ,Max( Min( MUC ,( RRSe * RMSe ) ),DS ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3142579575067485}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( RRS * ( RRS / ( Max( MRS,FirstVNF_RAM_Server ) - ( ( RRS / BR ) / FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "( Max( DS,Max( RCSe,( RMSe / CS ) ) ) * RCSe )", "obj1": 0.611336032388664, "obj2": 0.3126456484780436}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Max( DDR,Const ) ) + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - FirstVNF_Mem ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( MUR,RCSe ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9271255060728745, "obj2": 0.05937111752577768}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10418885323609885}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) )", "choosing": "( Max( Max( ( Max( CS,RCSe ) - ( ( ( Max( RMSe,DS ) / ( MUM / MLU ) ) * ( MLU * Min( MUC ,RMSe ) ) ) - ( Max( MLU,DS ) + ( ( MUM + MUM ) - ( MUC + MUC ) ) ) ) ),RCSe ),Min( DS ,MUC ) ) * Max( DS,RRSe ) )", "obj1": 0.6214574898785425, "obj2": 0.31171198152163754}, {"determining": "( ( AMS / Min( RRS ,ACS ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( ( ( ( MLU - MLU ) * RCSe ) - CS ) / MLU ) - ( MUM * CS ) ) / ( RCSe / RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24333639453323921}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( ( MRS + BR ) / ( MRS + Max( Min( MRS ,PN ),ACS ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( ( Min( DS ,Max( RCSe,( ( MUC + MUR ) + Min( RCSe ,RMSe ) ) ) ) - CS ) ,( ( DS * ( ( CS * ( ( MUM * MUC ) / MUC ) ) / MUR ) ) * MLU ) ) / ( MLU / ( CS - MUR ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6135224425622052}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( ( FirstVNF_RAM * ACS ) + DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS - Min( MLU ,Min( RMSe ,MUR ) ) ) + MUM ) ,RCSe ) / ( RCSe - Min( RCSe ,CS ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9615384615384616, "obj2": 0.021818375073299517}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( AMS / Min( RRS ,PN ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( MUC * ( Min( ( MUC / Min( Max( DS,DS ) ,DS ) ) ,RRSe ) - ( MLU * CS ) ) ) * ( ( Max( ( ( ( MLU - ( DS * RRSe ) ) / ( MUR + ( DS - MUM ) ) ) / DS ),RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24032301762538852}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( MDR / ( ( PN / ( Max( MDR,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) - ARS ) )", "choosing": "( RCSe * Max( RCSe,Max( ( MUM * Max( ( RCSe - MUC ),MLU ) ),DS ) ) )", "obj1": 0.9878542510121457, "obj2": 0.004788583852945641}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,( Min( ( Min( MUC ,RRSe ) + ( ( DS + RCSe ) / MUM ) ) ,MUR ) - DS ) ) / MLU ) * Max( DS,RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "Min( ( DS + DS ) ,( ( MLU - ( ( MUC + MLU ) * ( ( RCSe - RMSe ) - Min( MUR ,Min( MUR ,DS ) ) ) ) ) + ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( ( CS / ( MUC - Max( ( ( MLU * RMSe ) + ( ( RMSe / CS ) * ( RRSe / MUC ) ) ),( RCSe * CS ) ) ) ) + ( MUM * RMSe ) ) / ( MUC + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( ( ( ACS * PN ) - FirstVNF_Mem_Server ) + MDR ) ) * Max( CRS,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / ( ( MUC - ( Min( Min( Min( MLU ,Max( MLU,MUC ) ) ,MLU ) ,RMSe ) * MUC ) ) + ( ( MUR * ( MUM / RCSe ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / ( ACS * Max( RRS,Max( ( DDR / FirstVNF_Mem ),RRS ) ) ) )", "choosing": "( Max( CS,DS ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( BR ,( Min( FirstVNF_Mem ,ACS ) * DDR ) ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe + MUM ) * MUC ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR - MRS ) ,( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ) ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) )", "choosing": "Min( Max( ( RCSe * ( DS / ( ( RCSe / MLU ) - MUC ) ) ),CS ) ,Min( Max( CS,( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * ( CS - MUC ) ) ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) / ( Min( ( ARS - Min( BR ,( ( Const * CRS ) / ARS ) ) ) ,Min( MRS ,( ( PN / ( MDR / FirstVNF_RAM_Server ) ) + Const ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 1.0, "obj2": 0.0}], "31": [{"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const - FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( MUR * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( FirstVNF_CPU_Server - Max( Const,DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( RCSe + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( Min( Min( RMSe ,CS ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3316352797283562}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ( ( FirstVNF_CPU * BR ) / AMS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) - FirstVNF_Mem_Server ) - Min( ARS ,( ( CRS / CRS ) / ( AMS * AMS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( RCSe * Min( ( Min( CS ,( MUC - Min( MUR ,MUC ) ) ) * CS ) ,Max( Min( MUC ,( RRSe * RMSe ) ),DS ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3142579575067485}, {"determining": "( ( Min( MRS ,Min( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Max( DDR,BR ) ) ),ACS ) ,Max( ( MDR - FirstVNF_Mem_Server ),CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( PN / RRS ) ) ) / Min( ( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) ) ,( MDR / PN ) ) )", "choosing": "( ( Max( ( ( MLU / ( CS + ( RCSe - RCSe ) ) ) / RCSe ),Min( ( ( DS * ( DS - MUR ) ) / ( Min( Min( CS ,RMSe ) ,( CS + MLU ) ) - MUR ) ) ,RCSe ) ) + ( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * MLU ) ) * ( MLU - CS ) )", "obj1": 0.6032388663967612, "obj2": 0.2953343888264627}, {"determining": "( MRS / ( ( FirstVNF_Mem_Server - Max( ( CRS / ( BR * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) * ( MDR + ACS ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( MUC ,MUM ) + Min( ( MUM / DS ) ,Max( CS,DS ) ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - Min( RRSe ,RMSe ) ) / RRSe ) * RRSe )", "obj1": 0.6234817813765182, "obj2": 0.2855693924373377}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Max( DDR,Const ) ) + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - FirstVNF_Mem ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( MUR,RCSe ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9271255060728745, "obj2": 0.05937111752577768}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10418885323609885}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( ( AMS / Min( RRS ,ACS ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( ( ( ( MLU - MLU ) * RCSe ) - CS ) / MLU ) - ( MUM * CS ) ) / ( RCSe / RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24333639453323921}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( ( MRS + BR ) / ( MRS + Max( Min( MRS ,PN ),ACS ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( ( Min( DS ,Max( RCSe,( ( MUC + MUR ) + Min( RCSe ,RMSe ) ) ) ) - CS ) ,( ( DS * ( ( CS * ( ( MUM * MUC ) / MUC ) ) / MUR ) ) * MLU ) ) / ( MLU / ( CS - MUR ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6135224425622052}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( ( FirstVNF_RAM * ACS ) + DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS - Min( MLU ,Min( RMSe ,MUR ) ) ) + MUM ) ,RCSe ) / ( RCSe - Min( RCSe ,CS ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9615384615384616, "obj2": 0.021818375073299517}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ARS + ( ( FirstVNF_CPU * BR ) * Min( DDR ,RRS ) ) ) ,FirstVNF_RAM ) ) ) ) * ( ACS / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - MUC ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( CS + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) - Min( DS ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6869892846226053}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( AMS / Min( RRS ,PN ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( MUC * ( Min( ( MUC / Min( Max( DS,DS ) ,DS ) ) ,RRSe ) - ( MLU * CS ) ) ) * ( ( Max( ( ( ( MLU - ( DS * RRSe ) ) / ( MUR + ( DS - MUM ) ) ) / DS ),RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24032301762538852}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( DDR * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9878542510121457, "obj2": 0.004630158300462775}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RMSe + MLU ) ,( ( CS - MUC ) * ( Min( ( ( DS - Min( ( DS - MLU ) ,Min( RMSe ,CS ) ) ) + MUM ) ,RCSe ) / ( Min( RCSe ,CS ) - RCSe ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,( Min( ( Min( MUC ,RRSe ) + ( ( DS + RCSe ) / MUM ) ) ,MUR ) - DS ) ) / MLU ) * Max( DS,RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "Min( ( DS + DS ) ,( ( MLU - ( ( MUC + MLU ) * ( ( RCSe - RMSe ) - Min( MUR ,Min( MUR ,DS ) ) ) ) ) + ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( ( CS / ( MUC - Max( ( ( MLU * RMSe ) + ( ( RMSe / CS ) * ( RRSe / MUC ) ) ),( RCSe * CS ) ) ) ) + ( MUM * RMSe ) ) / ( MUC + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( ( ( ACS * PN ) - FirstVNF_Mem_Server ) + MDR ) ) * Max( CRS,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / ( ( MUC - ( Min( Min( Min( MLU ,Max( MLU,MUC ) ) ,MLU ) ,RMSe ) * MUC ) ) + ( ( MUR * ( MUM / RCSe ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / ( ACS * Max( RRS,Max( ( DDR / FirstVNF_Mem ),RRS ) ) ) )", "choosing": "( Max( CS,DS ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( ( ( Max( Min( BR ,( Min( FirstVNF_Mem ,ACS ) * DDR ) ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe + MUM ) * MUC ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "32": [{"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( FirstVNF_CPU_Server - Max( Const,DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( RCSe + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( Min( Min( RMSe ,CS ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3316352797283562}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ( ( FirstVNF_CPU * BR ) / AMS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) - FirstVNF_Mem_Server ) - Min( ARS ,( ( CRS / CRS ) / ( AMS * AMS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( RCSe * Min( ( Min( CS ,( MUC - Min( MUR ,MUC ) ) ) * CS ) ,Max( Min( MUC ,( RRSe * RMSe ) ),DS ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3142579575067485}, {"determining": "( ( Min( MRS ,Min( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Max( DDR,BR ) ) ),ACS ) ,Max( ( MDR - FirstVNF_Mem_Server ),CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( PN / RRS ) ) ) / Min( ( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) ) ,( MDR / PN ) ) )", "choosing": "( ( Max( ( ( MLU / ( CS + ( RCSe - RCSe ) ) ) / RCSe ),Min( ( ( DS * ( DS - MUR ) ) / ( Min( Min( CS ,RMSe ) ,( CS + MLU ) ) - MUR ) ) ,RCSe ) ) + ( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * MLU ) ) * ( MLU - CS ) )", "obj1": 0.6032388663967612, "obj2": 0.2953343888264627}, {"determining": "( MRS / ( ( FirstVNF_Mem_Server - Max( ( CRS / ( BR * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) * ( MDR + ACS ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( MUC ,MUM ) + Min( ( MUM / DS ) ,Max( CS,DS ) ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - Min( RRSe ,RMSe ) ) / RRSe ) * RRSe )", "obj1": 0.6234817813765182, "obj2": 0.2855693924373377}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( Min( ARS ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU_Server - Max( DDR,Const ) ) + FirstVNF_RAM_Server ) ) + ( BR * ( CRS * AMS ) ) ) - FirstVNF_Mem ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,Max( Min( ( ( Min( CS ,Min( Max( MUR,RCSe ) ,RCSe ) ) - ( Max( Min( CS ,MUR ),DS ) / ( ( DS + MUR ) * Max( RMSe,MUC ) ) ) ) * ( CS + DS ) ) ,DS ),RRSe ) )", "obj1": 0.9271255060728745, "obj2": 0.05937111752577768}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10418885323609885}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( ( AMS / Min( RRS ,ACS ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( ( ( ( MLU - MLU ) * RCSe ) - CS ) / MLU ) - ( MUM * CS ) ) / ( RCSe / RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24333639453323921}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( ( MRS + BR ) / ( MRS + Max( Min( MRS ,PN ),ACS ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( ( Min( DS ,Max( RCSe,( ( MUC + MUR ) + Min( RCSe ,RMSe ) ) ) ) - CS ) ,( ( DS * ( ( CS * ( ( MUM * MUC ) / MUC ) ) / MUR ) ) * MLU ) ) / ( MLU / ( CS - MUR ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6135224425622052}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem ) - ( ACS + DDR ) ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( ( DS + MUC ) - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9473684210526315, "obj2": 0.03533879597094122}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ARS + ( ( FirstVNF_CPU * BR ) * Min( DDR ,RRS ) ) ) ,FirstVNF_RAM ) ) ) ) * ( ACS / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - MUC ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( CS + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) - Min( DS ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6869892846226053}, {"determining": "( ( Min( ( PN - RRS ) ,Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) / Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * Max( ( MLU * RRSe ),MUM ) ),RRSe ),Min( ( ( Min( MUC ,( RRSe + MLU ) ) / MUM ) + DS ) ,( RRSe / DS ) ) ) ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 0.9676113360323887, "obj2": 0.021736301981108274}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( ( AMS / Min( RRS ,PN ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( MUC * ( Min( ( MUC / Min( Max( DS,DS ) ,DS ) ) ,RRSe ) - ( MLU * CS ) ) ) * ( ( Max( ( ( ( MLU - ( DS * RRSe ) ) / ( MUR + ( DS - MUM ) ) ) / DS ),RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24032301762538852}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( DDR * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9878542510121457, "obj2": 0.004630158300462775}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( Max( AMS,( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,( CS + CS ) ) ) / DS ) + Min( ( ( MUR - ( RRSe / MUR ) ) * Max( MUC,MLU ) ) ,RRSe ) ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / RMSe ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.19994695503938345}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( ( FirstVNF_RAM * ACS ) + DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS - Min( MLU ,Min( RMSe ,MUR ) ) ) + MUM ) ,RCSe ) / ( RCSe - Min( RCSe ,CS ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9615384615384616, "obj2": 0.021818375073299517}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( ( MDR + FirstVNF_Mem ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / PN ) ) - ( MRS / CRS ) ) * ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( ( ( ( DS / Min( MUM ,CS ) ) * Max( RMSe,( Min( MLU ,MLU ) + ( RMSe - ( RMSe / CS ) ) ) ) ) * RCSe ) - Max( ( MLU + RCSe ),RMSe ) ) ,( MUC - MLU ) )", "obj1": 0.9433198380566802, "obj2": 0.03565293091885776}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,( Min( ( Min( MUC ,RRSe ) + ( ( DS + RCSe ) / MUM ) ) ,MUR ) - DS ) ) / MLU ) * Max( DS,RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RMSe + MLU ) ,( ( CS - MUC ) * ( Min( ( ( DS - Min( ( DS - MLU ) ,Min( RMSe ,CS ) ) ) + MUM ) ,RCSe ) / ( Min( RCSe ,CS ) - RCSe ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const - FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( MUR * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "Min( ( DS + DS ) ,( ( MLU - ( ( MUC + MLU ) * ( ( RCSe - RMSe ) - Min( MUR ,Min( MUR ,DS ) ) ) ) ) + ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - FirstVNF_Mem ) / ( FirstVNF_CPU + ( Min( RRS ,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( ( BR * AMS ) - FirstVNF_CPU_Server ) ) ) ) + AMS ) ) )", "choosing": "( ( ( CS / ( MUC - Max( ( ( MLU * RMSe ) + ( ( RMSe / CS ) * ( RRSe / MUC ) ) ),( RCSe * CS ) ) ) ) + ( MUM * RMSe ) ) / ( MUC + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( ( ( ACS * PN ) - FirstVNF_Mem_Server ) + MDR ) ) * Max( CRS,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / ( ( MUC - ( Min( Min( Min( MLU ,Max( MLU,MUC ) ) ,MLU ) ,RMSe ) * MUC ) ) + ( ( MUR * ( MUM / RCSe ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / ( ACS * Max( RRS,Max( ( DDR / FirstVNF_Mem ),RRS ) ) ) )", "choosing": "( Max( CS,DS ) / Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "33": [{"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( FirstVNF_CPU_Server - Max( Const,DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( RCSe + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( Min( Min( RMSe ,CS ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3316352797283562}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ( ( FirstVNF_CPU * BR ) / AMS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) - FirstVNF_Mem_Server ) - Min( ARS ,( ( CRS / CRS ) / ( AMS * AMS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( RCSe * Min( ( Min( CS ,( MUC - Min( MUR ,MUC ) ) ) * CS ) ,Max( Min( MUC ,( RRSe * RMSe ) ),DS ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3142579575067485}, {"determining": "( ( Min( MRS ,Min( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Max( DDR,BR ) ) ),ACS ) ,Max( ( MDR - FirstVNF_Mem_Server ),CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( PN / RRS ) ) ) / Min( ( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) ) ,( MDR / PN ) ) )", "choosing": "( ( Max( ( ( MLU / ( CS + ( RCSe - RCSe ) ) ) / RCSe ),Min( ( ( DS * ( DS - MUR ) ) / ( Min( Min( CS ,RMSe ) ,( CS + MLU ) ) - MUR ) ) ,RCSe ) ) + ( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * MLU ) ) * ( MLU - CS ) )", "obj1": 0.6032388663967612, "obj2": 0.2953343888264627}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - ( DDR / ( FirstVNF_CPU_Server - Max( ( ( BR + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),DDR ) ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.27944235215745944}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( Min( ( ( BR / ( FirstVNF_CPU * ( CRS / ( BR * FirstVNF_RAM_Server ) ) ) ) + CRS ) ,FirstVNF_CPU ) - ( Min( FirstVNF_Mem_Server ,Max( DDR,RRS ) ) / ( Const - RRS ) ) )", "choosing": "Min( ( ( ( Min( DS ,( RMSe - RRSe ) ) / Min( RRSe ,( MUC - MUR ) ) ) / DS ) / DS ) ,Max( CS,DS ) )", "obj1": 0.9251012145748988, "obj2": 0.05745035868345035}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( DDR + Const ) )", "choosing": "Min( ( MUM / DS ) ,( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.025051172956175802}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10418885323609885}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( Max( FirstVNF_Mem_Server,Max( DDR,( Max( ( ARS / FirstVNF_RAM_Server ),( RRS + AMS ) ) + ACS ) ) ) / PN )", "choosing": "( Max( CS,( Max( MUR,DS ) / CS ) ) / Max( RCSe,RCSe ) )", "obj1": 0.22469635627530365, "obj2": 0.6137063142733852}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( MRS / ( ( FirstVNF_Mem_Server - Max( ( CRS / ( BR * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) * ( MDR + ACS ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( MUC ,MUM ) + Min( ( MUM / DS ) ,Max( CS,DS ) ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - Min( RRSe ,RMSe ) ) / RRSe ) * RRSe )", "obj1": 0.6234817813765182, "obj2": 0.2855693924373377}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( AMS / Min( RRS ,ACS ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( ( ( ( MLU - MLU ) * RCSe ) - CS ) / MLU ) - ( MUM * CS ) ) / ( RCSe / RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24333639453323921}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( ( MRS + BR ) / ( MRS + Max( Min( MRS ,PN ),ACS ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Min( ( Min( DS ,Max( RCSe,( ( MUC + MUR ) + Min( RCSe ,RMSe ) ) ) ) - CS ) ,( ( DS * ( ( CS * ( ( MUM * MUC ) / MUC ) ) / MUR ) ) * MLU ) ) / ( MLU / ( CS - MUR ) ) )", "obj1": 0.23076923076923078, "obj2": 0.6135224425622052}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ARS + ( ( FirstVNF_CPU * BR ) * Min( DDR ,RRS ) ) ) ,FirstVNF_RAM ) ) ) ) * ( ACS / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - MUC ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( CS + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) - Min( DS ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6869892846226053}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( ( AMS / Min( RRS ,PN ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( MUC * ( Min( ( MUC / Min( Max( DS,DS ) ,DS ) ) ,RRSe ) - ( MLU * CS ) ) ) * ( ( Max( ( ( ( MLU - ( DS * RRSe ) ) / ( MUR + ( DS - MUM ) ) ) / DS ),RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24032301762538852}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( BR + ( ARS + PN ) ) ) )", "choosing": "( ( ( CS / RCSe ) * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5373317827441102}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( ( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) ) / ( FirstVNF_Mem_Server / Max( ( CRS / ( RRS - MDR ) ),( BR + CRS ) ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( CS,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4939271255060729, "obj2": 0.4140592628206301}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( ( Min( ( PN - RRS ) ,Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) / Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * Max( ( MLU * RRSe ),MUM ) ),RRSe ),Min( ( ( Min( MUC ,( RRSe + MLU ) ) / MUM ) + DS ) ,( RRSe / DS ) ) ) ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 0.9676113360323887, "obj2": 0.021736301981108274}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( DDR * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9878542510121457, "obj2": 0.004630158300462775}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( Max( AMS,( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,( CS + CS ) ) ) / DS ) + Min( ( ( MUR - ( RRSe / MUR ) ) * Max( MUC,MLU ) ) ,RRSe ) ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / RMSe ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.19994695503938345}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( ( FirstVNF_RAM * ACS ) + DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS - Min( MLU ,Min( RMSe ,MUR ) ) ) + MUM ) ,RCSe ) / ( RCSe - Min( RCSe ,CS ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9615384615384616, "obj2": 0.021818375073299517}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( ( Min( MRS ,Min( FirstVNF_RAM ,Min( ( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / RRS ) / FirstVNF_CPU_Server ) ) ) ) / Min( FirstVNF_RAM_Server ,( ( Max( BR,BR ) / FirstVNF_Mem ) / CRS ) ) ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( Max( AMS,( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ,( ACS + MRS ) ) )", "choosing": "( ( ( ( DS / Max( ( MUC / MLU ),( ( MUM - ( CS + MUC ) ) * Max( MLU,Min( CS ,MUC ) ) ) ) ) + Min( ( ( MUR - ( RRSe / MUR ) ) * Max( MUC,MLU ) ) ,RRSe ) ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + Max( MLU,Min( CS ,MUC ) ) ) + Min( ( RCSe + ( MUR / RMSe ) ) ,MUR ) ) * RCSe ) ) + ( Min( MUC ,Max( ( ( Min( MUM ,DS ) * RRSe ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7173111095467889}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.4959514170040486, "obj2": 0.40991085506175323}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( DDR + Const ) )", "choosing": "Min( ( MUM / DS ) ,( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.025051172956175802}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( Min( ( PN - RRS ) ,Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) / Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * Max( ( MLU * DS ),MUM ) ),RRSe ),Max( ( MLU * DS ),MUM ) ) ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 0.9676113360323887, "obj2": 0.021736301981108274}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RMSe + MLU ) ,( ( CS - MUC ) * ( Min( ( ( DS - Min( ( DS - MLU ) ,Min( RMSe ,CS ) ) ) + MUM ) ,RCSe ) / ( Min( RCSe ,CS ) - RCSe ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,( Min( ( Min( MUC ,RRSe ) + ( ( DS + RCSe ) / MUM ) ) ,MUR ) - DS ) ) / MLU ) * Max( DS,RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const - FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( MUR * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "34": [{"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( FirstVNF_CPU_Server - Max( Const,DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( RCSe + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( Min( Min( RMSe ,CS ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3316352797283562}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ( ( FirstVNF_CPU * BR ) / AMS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) - FirstVNF_Mem_Server ) - Min( ARS ,( ( CRS / CRS ) / ( AMS * AMS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( RCSe * Min( ( Min( CS ,( MUC - Min( MUR ,MUC ) ) ) * CS ) ,Max( Min( MUC ,( RRSe * RMSe ) ),DS ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3142579575067485}, {"determining": "( ( Min( MRS ,Min( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Max( DDR,BR ) ) ),ACS ) ,Max( ( MDR - FirstVNF_Mem_Server ),CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( PN / RRS ) ) ) / Min( ( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) ) ,( MDR / PN ) ) )", "choosing": "( ( Max( ( ( MLU / ( CS + ( RCSe - RCSe ) ) ) / RCSe ),Min( ( ( DS * ( DS - MUR ) ) / ( Min( Min( CS ,RMSe ) ,( CS + MLU ) ) - MUR ) ) ,RCSe ) ) + ( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * MLU ) ) * ( MLU - CS ) )", "obj1": 0.6032388663967612, "obj2": 0.2953343888264627}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( ( Const / ( AMS / FirstVNF_RAM_Server ) ) - ( ACS / ( Max( ( FirstVNF_Mem - ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ),( ARS / MDR ) ) - ( Max( ( RRS / RRS ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( ( MLU * Min( CS ,( Max( MLU,CS ) - CS ) ) ) - ( MUC + Max( MUC,( Min( MUM ,MUM ) - ( RCSe / DS ) ) ) ) ) / ( MUM / MUC ) ) + ( Min( ( RCSe + MUC ) ,Min( MUM ,MUC ) ) - MUM ) ) ,( CS + ( RRSe - ( CS - RRSe ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5969958307260921}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ( ( FirstVNF_CPU * BR ) - ( Const / AMS ) ) + RRS ) ,FirstVNF_RAM ) ) ) ) * ( ( FirstVNF_RAM * ( RRS + DDR ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - ( Max( MUM,RRSe ) * ( DS + DS ) ) ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( ( MUM - MUC ) + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) * Min( ( ( MUM / CS ) * RMSe ) ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.406760493952309}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - ( DDR / ( FirstVNF_CPU_Server - Max( ( ( BR + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),DDR ) ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.27944235215745944}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( Min( ( ( BR / ( FirstVNF_CPU * ( CRS / ( BR * FirstVNF_RAM_Server ) ) ) ) + CRS ) ,FirstVNF_CPU ) - ( Min( FirstVNF_Mem_Server ,Max( DDR,RRS ) ) / ( Const - RRS ) ) )", "choosing": "Min( ( ( ( Min( DS ,( RMSe - RRSe ) ) / Min( RRSe ,( MUC - MUR ) ) ) / DS ) / DS ) ,Max( CS,DS ) )", "obj1": 0.9251012145748988, "obj2": 0.05745035868345035}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( DDR + Const ) )", "choosing": "Min( ( MUM / DS ) ,( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.025051172956175802}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10418885323609885}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( MRS / ( ( FirstVNF_Mem_Server - Max( ( CRS / ( BR * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) * ( MDR + ACS ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( MUC ,MUM ) + Min( ( MUM / DS ) ,Max( CS,DS ) ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - Min( RRSe ,RMSe ) ) / RRSe ) * RRSe )", "obj1": 0.6234817813765182, "obj2": 0.2855693924373377}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( AMS / Min( RRS ,ACS ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( ( ( ( MLU - MLU ) * RCSe ) - CS ) / MLU ) - ( MUM * CS ) ) / ( RCSe / RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24333639453323921}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ARS + ( ( FirstVNF_CPU * BR ) * Min( DDR ,RRS ) ) ) ,FirstVNF_RAM ) ) ) ) * ( ACS / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - MUC ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( CS + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) - Min( DS ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6869892846226053}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( ( AMS / Min( RRS ,PN ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( MUC * ( Min( ( MUC / Min( Max( DS,DS ) ,DS ) ) ,RRSe ) - ( MLU * CS ) ) ) * ( ( Max( ( ( ( MLU - ( DS * RRSe ) ) / ( MUR + ( DS - MUM ) ) ) / DS ),RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24032301762538852}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( BR + ( ARS + PN ) ) ) )", "choosing": "( ( ( CS / RCSe ) * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5373317827441102}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( ( Min( ( PN - RRS ) ,Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) / Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * Max( ( MLU * RRSe ),MUM ) ),RRSe ),Min( ( ( Min( MUC ,( RRSe + MLU ) ) / MUM ) + DS ) ,( RRSe / DS ) ) ) ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 0.9676113360323887, "obj2": 0.021736301981108274}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( DDR * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9878542510121457, "obj2": 0.004630158300462775}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( Max( AMS,( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,( CS + CS ) ) ) / DS ) + Min( ( ( MUR - ( RRSe / MUR ) ) * Max( MUC,MLU ) ) ,RRSe ) ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / RMSe ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.19994695503938345}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( ( FirstVNF_RAM * ACS ) + DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS - Min( MLU ,Min( RMSe ,MUR ) ) ) + MUM ) ,RCSe ) / ( RCSe - Min( RCSe ,CS ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9615384615384616, "obj2": 0.021818375073299517}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( ( Min( MRS ,Min( FirstVNF_RAM ,Min( ( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / RRS ) / FirstVNF_CPU_Server ) ) ) ) / Min( FirstVNF_RAM_Server ,( ( Max( BR,BR ) / FirstVNF_Mem ) / CRS ) ) ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( Max( AMS,( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ,( ACS + MRS ) ) )", "choosing": "( ( ( ( DS / Max( ( MUC / MLU ),( ( MUM - ( CS + MUC ) ) * Max( MLU,Min( CS ,MUC ) ) ) ) ) + Min( ( ( MUR - ( RRSe / MUR ) ) * Max( MUC,MLU ) ) ,RRSe ) ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + Max( MLU,Min( CS ,MUC ) ) ) + Min( ( RCSe + ( MUR / RMSe ) ) ,MUR ) ) * RCSe ) ) + ( Min( MUC ,Max( ( ( Min( MUM ,DS ) * RRSe ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7173111095467889}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( DDR + Const ) )", "choosing": "Min( ( MUM / DS ) ,( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.025051172956175802}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( Min( ( PN - RRS ) ,Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) / Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * Max( ( MLU * DS ),MUM ) ),RRSe ),Max( ( MLU * DS ),MUM ) ) ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 0.9676113360323887, "obj2": 0.021736301981108274}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,( Min( ( Min( MUC ,RRSe ) + ( ( DS + RCSe ) / MUM ) ) ,MUR ) - DS ) ) / MLU ) * Max( DS,RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RMSe + MLU ) ,( ( CS - MUC ) * ( Min( ( ( DS - Min( ( DS - MLU ) ,Min( RMSe ,CS ) ) ) + MUM ) ,RCSe ) / ( Min( RCSe ,CS ) - RCSe ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const - FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( MUR * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * ( BR * ( MRS / ( FirstVNF_RAM * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) ) - FirstVNF_RAM_Server ) / ( Max( ( Max( ( FirstVNF_RAM_Server - ACS ),MRS ) * RRS ),( FirstVNF_Mem_Server / MRS ) ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( CS ,RRSe ) * Max( ( ( ( Max( Min( MUC ,MUC ),Max( CS,CS ) ) * RCSe ) + ( ( MLU * MUR ) - ( ( MLU * MUC ) + RRSe ) ) ) + DS ),DS ) ) * ( ( Max( CS,MUC ) * ( MLU / MUR ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / Min( FirstVNF_CPU ,( ARS + FirstVNF_Mem ) ) ) ,Min( MRS ,( ( PN / ( MDR / FirstVNF_RAM_Server ) ) + Const ) ) ) - FirstVNF_Mem ) / Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * Max( ( MUM - MUC ),MUM ) ),RRSe ),Min( ( ( Min( MUC ,( RRSe + MLU ) ) / MUM ) + DS ) ,( RRSe / DS ) ) ) ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 1.0, "obj2": 0.0}], "35": [{"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( FirstVNF_CPU_Server - Max( Const,DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( RCSe + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( Min( Min( RMSe ,CS ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3316352797283562}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ( ACS + ARS ) / ( FirstVNF_CPU - Const ) )", "choosing": "( Max( ( MLU - ( MLU / Max( MUM,( MUM + ( ( DS - MLU ) * MUC ) ) ) ) ),RMSe ) * ( Max( MUC,RCSe ) + ( DS / Max( RRSe,( Min( ( Max( MUC,RRSe ) + ( CS / DS ) ) ,MLU ) * MUC ) ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.11811659695736686}, {"determining": "( ( ( FirstVNF_CPU * BR ) / AMS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) - FirstVNF_Mem_Server ) - Min( ARS ,( ( CRS / CRS ) / ( AMS * AMS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( RCSe * Min( ( Min( CS ,( MUC - Min( MUR ,MUC ) ) ) * CS ) ,Max( Min( MUC ,( RRSe * RMSe ) ),DS ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3142579575067485}, {"determining": "( ( Min( MRS ,Min( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Max( DDR,BR ) ) ),ACS ) ,Max( ( MDR - FirstVNF_Mem_Server ),CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( PN / RRS ) ) ) / Min( ( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) ) ,( MDR / PN ) ) )", "choosing": "( ( Max( ( ( MLU / ( CS + ( RCSe - RCSe ) ) ) / RCSe ),Min( ( ( DS * ( DS - MUR ) ) / ( Min( Min( CS ,RMSe ) ,( CS + MLU ) ) - MUR ) ) ,RCSe ) ) + ( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * MLU ) ) * ( MLU - CS ) )", "obj1": 0.6032388663967612, "obj2": 0.2953343888264627}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( ( Const / ( AMS / FirstVNF_RAM_Server ) ) - ( ACS / ( Max( ( FirstVNF_Mem - ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ),( ARS / MDR ) ) - ( Max( ( RRS / RRS ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( ( MLU * Min( CS ,( Max( MLU,CS ) - CS ) ) ) - ( MUC + Max( MUC,( Min( MUM ,MUM ) - ( RCSe / DS ) ) ) ) ) / ( MUM / MUC ) ) + ( Min( ( RCSe + MUC ) ,Min( MUM ,MUC ) ) - MUM ) ) ,( CS + ( RRSe - ( CS - RRSe ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5969958307260921}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ( ( FirstVNF_CPU * BR ) - ( Const / AMS ) ) + RRS ) ,FirstVNF_RAM ) ) ) ) * ( ( FirstVNF_RAM * ( RRS + DDR ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - ( Max( MUM,RRSe ) * ( DS + DS ) ) ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( ( MUM - MUC ) + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) * Min( ( ( MUM / CS ) * RMSe ) ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.406760493952309}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - ( DDR / ( FirstVNF_CPU_Server - Max( ( ( BR + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),DDR ) ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.27944235215745944}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( Min( ( ( BR / ( FirstVNF_CPU * ( CRS / ( BR * FirstVNF_RAM_Server ) ) ) ) + CRS ) ,FirstVNF_CPU ) - ( Min( FirstVNF_Mem_Server ,Max( DDR,RRS ) ) / ( Const - RRS ) ) )", "choosing": "Min( ( ( ( Min( DS ,( RMSe - RRSe ) ) / Min( RRSe ,( MUC - MUR ) ) ) / DS ) / DS ) ,Max( CS,DS ) )", "obj1": 0.9251012145748988, "obj2": 0.05745035868345035}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( DDR + Const ) )", "choosing": "Min( ( MUM / DS ) ,( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.025051172956175802}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10418885323609885}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( MRS / ( ( FirstVNF_Mem_Server - Max( ( CRS / ( BR * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) * ( MDR + ACS ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( MUC ,MUM ) + Min( ( MUM / DS ) ,Max( CS,DS ) ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - Min( RRSe ,RMSe ) ) / RRSe ) * RRSe )", "obj1": 0.6234817813765182, "obj2": 0.2855693924373377}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( AMS / Min( RRS ,ACS ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( ( ( ( MLU - MLU ) * RCSe ) - CS ) / MLU ) - ( MUM * CS ) ) / ( RCSe / RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24333639453323921}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ARS + ( ( FirstVNF_CPU * BR ) * Min( DDR ,RRS ) ) ) ,FirstVNF_RAM ) ) ) ) * ( ACS / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - MUC ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( CS + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) - Min( DS ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6869892846226053}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( ( AMS / Min( RRS ,PN ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( MUC * ( Min( ( MUC / Min( Max( DS,DS ) ,DS ) ) ,RRSe ) - ( MLU * CS ) ) ) * ( ( Max( ( ( ( MLU - ( DS * RRSe ) ) / ( MUR + ( DS - MUM ) ) ) / DS ),RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24032301762538852}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( BR + ( ARS + PN ) ) ) )", "choosing": "( ( ( CS / RCSe ) * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5373317827441102}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( ( Min( ( PN - RRS ) ,Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) / Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * Max( ( MLU * RRSe ),MUM ) ),RRSe ),Min( ( ( Min( MUC ,( RRSe + MLU ) ) / MUM ) + DS ) ,( RRSe / DS ) ) ) ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 0.9676113360323887, "obj2": 0.021736301981108274}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( DDR * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9878542510121457, "obj2": 0.004630158300462775}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( Max( AMS,( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,( CS + CS ) ) ) / DS ) + Min( ( ( MUR - ( RRSe / MUR ) ) * Max( MUC,MLU ) ) ,RRSe ) ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / RMSe ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.19994695503938345}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( ( FirstVNF_RAM * ACS ) + DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS - Min( MLU ,Min( RMSe ,MUR ) ) ) + MUM ) ,RCSe ) / ( RCSe - Min( RCSe ,CS ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9615384615384616, "obj2": 0.021818375073299517}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( ( Min( MRS ,Min( FirstVNF_RAM ,Min( ( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / RRS ) / FirstVNF_CPU_Server ) ) ) ) / Min( FirstVNF_RAM_Server ,( ( Max( BR,BR ) / FirstVNF_Mem ) / CRS ) ) ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( Max( AMS,( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ,( ACS + MRS ) ) )", "choosing": "( ( ( ( DS / Max( ( MUC / MLU ),( ( MUM - ( CS + MUC ) ) * Max( MLU,Min( CS ,MUC ) ) ) ) ) + Min( ( ( MUR - ( RRSe / MUR ) ) * Max( MUC,MLU ) ) ,RRSe ) ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + Max( MLU,Min( CS ,MUC ) ) ) + Min( ( RCSe + ( MUR / RMSe ) ) ,MUR ) ) * RCSe ) ) + ( Min( MUC ,Max( ( ( Min( MUM ,DS ) * RRSe ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7173111095467889}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( DDR + Const ) )", "choosing": "Min( ( MUM / DS ) ,( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.025051172956175802}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( Min( ( PN - RRS ) ,Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) / Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * Max( ( MLU * DS ),MUM ) ),RRSe ),Max( ( MLU * DS ),MUM ) ) ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 0.9676113360323887, "obj2": 0.021736301981108274}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RMSe + MLU ) ,( ( CS - MUC ) * ( Min( ( ( DS - Min( ( DS - MLU ) ,Min( RMSe ,CS ) ) ) + MUM ) ,RCSe ) / ( Min( RCSe ,CS ) - RCSe ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,( Min( ( Min( MUC ,RRSe ) + ( ( DS + RCSe ) / MUM ) ) ,MUR ) - DS ) ) / MLU ) * Max( DS,RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const - FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( MUR * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "36": [{"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( FirstVNF_CPU_Server - Max( Const,DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( RCSe + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( Min( Min( RMSe ,CS ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3316352797283562}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ( ACS + ARS ) / ( FirstVNF_CPU - Const ) )", "choosing": "( Max( ( MLU - ( MLU / Max( MUM,( MUM + ( ( DS - MLU ) * MUC ) ) ) ) ),RMSe ) * ( Max( MUC,RCSe ) + ( DS / Max( RRSe,( Min( ( Max( MUC,RRSe ) + ( CS / DS ) ) ,MLU ) * MUC ) ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.11811659695736686}, {"determining": "( ( ( FirstVNF_CPU * BR ) / AMS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) - FirstVNF_Mem_Server ) - Min( ARS ,( ( CRS / CRS ) / ( AMS * AMS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( RCSe * Min( ( Min( CS ,( MUC - Min( MUR ,MUC ) ) ) * CS ) ,Max( Min( MUC ,( RRSe * RMSe ) ),DS ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3142579575067485}, {"determining": "( ( Min( MRS ,Min( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Max( DDR,BR ) ) ),ACS ) ,Max( ( MDR - FirstVNF_Mem_Server ),CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( PN / RRS ) ) ) / Min( ( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) ) ,( MDR / PN ) ) )", "choosing": "( ( Max( ( ( MLU / ( CS + ( RCSe - RCSe ) ) ) / RCSe ),Min( ( ( DS * ( DS - MUR ) ) / ( Min( Min( CS ,RMSe ) ,( CS + MLU ) ) - MUR ) ) ,RCSe ) ) + ( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * MLU ) ) * ( MLU - CS ) )", "obj1": 0.6032388663967612, "obj2": 0.2953343888264627}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( ( Const / ( AMS / FirstVNF_RAM_Server ) ) - ( ACS / ( Max( ( FirstVNF_Mem - ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ),( ARS / MDR ) ) - ( Max( ( RRS / RRS ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( ( MLU * Min( CS ,( Max( MLU,CS ) - CS ) ) ) - ( MUC + Max( MUC,( Min( MUM ,MUM ) - ( RCSe / DS ) ) ) ) ) / ( MUM / MUC ) ) + ( Min( ( RCSe + MUC ) ,Min( MUM ,MUC ) ) - MUM ) ) ,( CS + ( RRSe - ( CS - RRSe ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5969958307260921}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ( ( FirstVNF_CPU * BR ) - ( Const / AMS ) ) + RRS ) ,FirstVNF_RAM ) ) ) ) * ( ( FirstVNF_RAM * ( RRS + DDR ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - ( Max( MUM,RRSe ) * ( DS + DS ) ) ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( ( MUM - MUC ) + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) * Min( ( ( MUM / CS ) * RMSe ) ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.406760493952309}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - ( DDR / ( FirstVNF_CPU_Server - Max( ( ( BR + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),DDR ) ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.27944235215745944}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( Min( ( ( BR / ( FirstVNF_CPU * ( CRS / ( BR * FirstVNF_RAM_Server ) ) ) ) + CRS ) ,FirstVNF_CPU ) - ( Min( FirstVNF_Mem_Server ,Max( DDR,RRS ) ) / ( Const - RRS ) ) )", "choosing": "Min( ( ( ( Min( DS ,( RMSe - RRSe ) ) / Min( RRSe ,( MUC - MUR ) ) ) / DS ) / DS ) ,Max( CS,DS ) )", "obj1": 0.9251012145748988, "obj2": 0.05745035868345035}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( DDR + Const ) )", "choosing": "Min( ( MUM / DS ) ,( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.025051172956175802}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10418885323609885}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( MRS / ( ( FirstVNF_Mem_Server - Max( ( CRS / ( BR * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) * ( MDR + ACS ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( MUC ,MUM ) + Min( ( MUM / DS ) ,Max( CS,DS ) ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - Min( RRSe ,RMSe ) ) / RRSe ) * RRSe )", "obj1": 0.6234817813765182, "obj2": 0.2855693924373377}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( ( AMS / Min( RRS ,ACS ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( ( ( ( MLU - MLU ) * RCSe ) - CS ) / MLU ) - ( MUM * CS ) ) / ( RCSe / RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24333639453323921}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( Min( ARS ,Const ) / ( FirstVNF_CPU * Min( ARS ,Const ) ) )", "choosing": "( ( Max( CS,( ( Max( Min( Max( RRSe,RRSe ) ,MLU ),CS ) - CS ) / RCSe ) ) * RCSe ) * ( ( RMSe - ( MUR + MUC ) ) / DS ) )", "obj1": 0.3340080971659919, "obj2": 0.5373347276385531}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "Min( ( PN + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ,( FirstVNF_Mem / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( RCSe,RRSe )", "obj1": 0.7246963562753036, "obj2": 0.23869030388999726}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ARS + ( ( FirstVNF_CPU * BR ) * Min( DDR ,RRS ) ) ) ,FirstVNF_RAM ) ) ) ) * ( ACS / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - MUC ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( CS + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) - Min( DS ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6869892846226053}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( ( AMS / Min( RRS ,PN ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( MUC * ( Min( ( MUC / Min( Max( DS,DS ) ,DS ) ) ,RRSe ) - ( MLU * CS ) ) ) * ( ( Max( ( ( ( MLU - ( DS * RRSe ) ) / ( MUR + ( DS - MUM ) ) ) / DS ),RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24032301762538852}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( BR + ( ARS + PN ) ) ) )", "choosing": "( ( ( CS / RCSe ) * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.3481781376518219, "obj2": 0.5373317827441102}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( ( Min( ( PN - RRS ) ,Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) / Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * Max( ( MLU * RRSe ),MUM ) ),RRSe ),Min( ( ( Min( MUC ,( RRSe + MLU ) ) / MUM ) + DS ) ,( RRSe / DS ) ) ) ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 0.9676113360323887, "obj2": 0.021736301981108274}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( DDR * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9878542510121457, "obj2": 0.004630158300462775}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( Max( AMS,( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,( CS + CS ) ) ) / DS ) + Min( ( ( MUR - ( RRSe / MUR ) ) * Max( MUC,MLU ) ) ,RRSe ) ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / RMSe ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.19994695503938345}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( ( FirstVNF_RAM * ACS ) + DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS - Min( MLU ,Min( RMSe ,MUR ) ) ) + MUM ) ,RCSe ) / ( RCSe - Min( RCSe ,CS ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9615384615384616, "obj2": 0.021818375073299517}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / ( ( FirstVNF_CPU * Const ) / AMS ) )", "choosing": "( Min( RCSe ,Max( Min( MUC ,( Min( MLU ,MUM ) * RCSe ) ),MUR ) ) * RCSe )", "obj1": 0.7206477732793523, "obj2": 0.24011177454963906}, {"determining": "( ( Min( MRS ,Min( FirstVNF_RAM ,Min( ( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / RRS ) / FirstVNF_CPU_Server ) ) ) ) / Min( FirstVNF_RAM_Server ,( ( Max( BR,BR ) / FirstVNF_Mem ) / CRS ) ) ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( Max( AMS,( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ,( ACS + MRS ) ) )", "choosing": "( ( ( ( DS / Max( ( MUC / MLU ),( ( MUM - ( CS + MUC ) ) * Max( MLU,Min( CS ,MUC ) ) ) ) ) + Min( ( ( MUR - ( RRSe / MUR ) ) * Max( MUC,MLU ) ) ,RRSe ) ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + Max( MLU,Min( CS ,MUC ) ) ) + Min( ( RCSe + ( MUR / RMSe ) ) ,MUR ) ) * RCSe ) ) + ( Min( MUC ,Max( ( ( Min( MUM ,DS ) * RRSe ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7173111095467889}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( Min( MUR ,RCSe ) + RRSe ) + RRSe ) ) ) / RRSe ),RCSe ) * ( ( MUC + DS ) - ( CS / RMSe ) ) )", "obj1": 0.354251012145749, "obj2": 0.5351400700331149}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( DDR + Const ) )", "choosing": "Min( ( MUM / DS ) ,( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.025051172956175802}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( Min( ( PN - RRS ) ,DDR ) - FirstVNF_Mem ) / Min( DDR ,( AMS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( Max( ( MUR * Max( ( MLU * ( RRSe / DS ) ),MUM ) ),RRSe ),Min( ( ( Min( MUC ,( RRSe + MLU ) ) / MUM ) + DS ) ,( RRSe / DS ) ) ) ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 0.9676113360323887, "obj2": 0.021736301981108274}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MLU,( Min( ( Min( MUC ,RRSe ) + ( ( DS + RCSe ) / MUM ) ) ,MUR ) - DS ) ) / MLU ) * Max( DS,RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( RMSe + MLU ) ,( ( CS - MUC ) * ( Min( ( ( DS - Min( ( DS - MLU ) ,Min( RMSe ,CS ) ) ) + MUM ) ,RCSe ) / ( Min( RCSe ,CS ) - RCSe ) ) ) )", "obj1": 0.9959514170040485, "obj2": 0.0013257068458454929}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const - FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( MUR * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "37": [{"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( FirstVNF_CPU_Server - Max( Const,DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( RCSe + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( Min( Min( RMSe ,CS ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3316352797283562}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ( ACS + ARS ) / ( FirstVNF_CPU - Const ) )", "choosing": "( Max( ( MLU - ( MLU / Max( MUM,( MUM + ( ( DS - MLU ) * MUC ) ) ) ) ),RMSe ) * ( Max( MUC,RCSe ) + ( DS / Max( RRSe,( Min( ( Max( MUC,RRSe ) + ( CS / DS ) ) ,MLU ) * MUC ) ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.11811659695736686}, {"determining": "( ( ( FirstVNF_CPU * BR ) / AMS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) - FirstVNF_Mem_Server ) - Min( ARS ,( ( CRS / CRS ) / ( AMS * AMS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( RCSe * Min( ( Min( CS ,( MUC - Min( MUR ,MUC ) ) ) * CS ) ,Max( Min( MUC ,( RRSe * RMSe ) ),DS ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3142579575067485}, {"determining": "( ( Min( MRS ,Min( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Max( DDR,BR ) ) ),ACS ) ,Max( ( MDR - FirstVNF_Mem_Server ),CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( PN / RRS ) ) ) / Min( ( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) ) ,( MDR / PN ) ) )", "choosing": "( ( Max( ( ( MLU / ( CS + ( RCSe - RCSe ) ) ) / RCSe ),Min( ( ( DS * ( DS - MUR ) ) / ( Min( Min( CS ,RMSe ) ,( CS + MLU ) ) - MUR ) ) ,RCSe ) ) + ( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * MLU ) ) * ( MLU - CS ) )", "obj1": 0.6032388663967612, "obj2": 0.2953343888264627}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / ( AMS / FirstVNF_RAM_Server ) ) - ( ACS / ( Max( ( FirstVNF_Mem - ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * ( AMS * CRS ) ) ) ),( ARS / MDR ) ) - ( Max( ( RRS / RRS ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( DS + ( ( RMSe - ( DS + Max( CS,( DS * Max( RMSe,RMSe ) ) ) ) ) / DS ) ) ,Min( Min( ( RRSe + RCSe ) ,CS ) ,DS ) )", "obj1": 0.32186234817813764, "obj2": 0.525007416101204}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ( ( FirstVNF_CPU * BR ) - ( Const / AMS ) ) + RRS ) ,FirstVNF_RAM ) ) ) ) * ( ( FirstVNF_RAM * ( RRS + DDR ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - ( Max( MUM,RRSe ) * ( DS + DS ) ) ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( ( MUM - MUC ) + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) * Min( ( ( MUM / CS ) * RMSe ) ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.406760493952309}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - ( DDR / ( FirstVNF_CPU_Server - Max( ( ( BR + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),DDR ) ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.27944235215745944}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( ( Const / ( AMS / FirstVNF_RAM_Server ) ) - ( ACS / ( Max( ( FirstVNF_Mem - ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ),( ARS / MDR ) ) - ( Max( ( RRS / RRS ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( ( MLU * Min( CS ,( Max( MLU,CS ) - CS ) ) ) - ( MUC + Max( MUC,( Min( MUM ,MUM ) - ( RCSe / DS ) ) ) ) ) / ( MUM / MUC ) ) + ( Min( ( RCSe + MUC ) ,Min( MUM ,MUC ) ) - MUM ) ) ,( CS + ( RRSe - ( CS - RRSe ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5969958307260921}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( Min( ( ( BR / ( FirstVNF_CPU * ( CRS / ( BR * FirstVNF_RAM_Server ) ) ) ) + CRS ) ,FirstVNF_CPU ) - ( Min( FirstVNF_Mem_Server ,Max( DDR,RRS ) ) / ( Const - RRS ) ) )", "choosing": "Min( ( ( ( Min( DS ,( RMSe - RRSe ) ) / Min( RRSe ,( MUC - MUR ) ) ) / DS ) / DS ) ,Max( CS,DS ) )", "obj1": 0.9251012145748988, "obj2": 0.05745035868345035}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( DDR + Const ) )", "choosing": "Min( ( MUM / DS ) ,( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.025051172956175802}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( ACS + Max( ( DDR - FirstVNF_RAM ),( ARS + ( Min( FirstVNF_CPU_Server ,ACS ) / PN ) ) ) ) / ( FirstVNF_CPU - Const ) )", "choosing": "( RCSe * Max( ( MUR + DS ),Max( RRSe,( Min( ( Max( MUC,RRSe ) + ( CS / DS ) ) ,MLU ) * MUC ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10405062675380605}, {"determining": "( MRS / ( ( FirstVNF_Mem_Server - Max( ( CRS / ( BR * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) * ( MDR + ACS ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( MUC ,MUM ) + Min( ( MUM / DS ) ,Max( CS,DS ) ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - Min( RRSe ,RMSe ) ) / RRSe ) * RRSe )", "obj1": 0.6234817813765182, "obj2": 0.2855693924373377}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ( AMS / Min( RRS ,ACS ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( ( ( ( MLU - MLU ) * RCSe ) - CS ) / MLU ) - ( MUM * CS ) ) / ( RCSe / RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24333639453323921}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( ( ( FirstVNF_CPU / AMS ) / ( ( FirstVNF_CPU / ( FirstVNF_Mem_Server * AMS ) ) * FirstVNF_RAM_Server ) ) - ( DDR + ( ( Const + RRS ) - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( MLU * Min( CS ,( Max( MLU,CS ) - Min( RCSe ,CS ) ) ) ) - ( MUC + Max( MUC,( Min( MUM ,MUM ) - ( RCSe / DS ) ) ) ) ) / ( MUM / MUC ) ) + ( Min( ( RCSe + MUC ) ,Min( MUM ,MUC ) ) - MUM ) ) ,( CS + ( RRSe - ( CS - RRSe ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6609855479008907}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( FirstVNF_Mem - ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ),( ARS / MDR ) ) - ( Max( ( RRS / RRS ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) / Min( ( ARS - ACS ) ,( Max( ( ACS / ( AMS * CRS ) ),FirstVNF_RAM_Server ) - DDR ) ) )", "choosing": "( Min( Max( ( Min( Min( ( RRSe + RCSe ) ,CS ) ,DS ) / MUM ),MUR ) ,DS ) / ( ( MLU / MUM ) - RRSe ) )", "obj1": 0.7186234817813765, "obj2": 0.23725255965315306}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( AMS / Min( RRS ,PN ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( MUC * ( Min( ( MUC / Min( Max( DS,DS ) ,DS ) ) ,RRSe ) - ( MLU * CS ) ) ) * ( ( Max( ( ( ( MLU - ( DS * RRSe ) ) / ( MUR + ( DS - MUM ) ) ) / DS ),RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24032301762538852}, {"determining": "( ( Const / ( AMS / FirstVNF_RAM_Server ) ) - ( ACS / ( Max( ( FirstVNF_Mem - ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ),( ARS / MDR ) ) - ( Max( ( RRS / RRS ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( ( MLU * Min( CS ,( Max( MLU,CS ) - CS ) ) ) - ( MUC + Max( MUC,( Min( MUM ,MUM ) - ( RCSe / DS ) ) ) ) ) / ( MUM / MUC ) ) + ( Min( ( RCSe + MUC ) ,Min( MUM ,MUC ) ) - MUM ) ) ,( CS + ( RRSe - ( CS - RRSe ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5969958307260921}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ARS + ( ( FirstVNF_CPU * BR ) * Min( DDR ,RRS ) ) ) ,FirstVNF_RAM ) ) ) ) * ( ACS / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - MUC ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( CS + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) - Min( DS ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6869892846226053}, {"determining": "( ( Min( ( PN - RRS ) ,Max( ARS,CRS ) ) - FirstVNF_Mem ) / Min( ( AMS + FirstVNF_RAM_Server ) ,DDR ) )", "choosing": "( Min( Max( Max( ( MUR * Max( ( MLU * DS ),( MUC - Min( MUR ,MUC ) ) ) ),RRSe ),Min( ( ( Min( MUC ,( MUR + MLU ) ) / RMSe ) + DS ) ,( RRSe / DS ) ) ) ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 0.9676113360323887, "obj2": 0.021736301981108267}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( DDR * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9878542510121457, "obj2": 0.004630158300462775}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( Max( AMS,( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( ( ( Min( MUM ,Min( MUM ,( CS + CS ) ) ) / DS ) + Min( ( ( MUR - ( RRSe / MUR ) ) * Max( MUC,MLU ) ) ,RRSe ) ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / RMSe ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 0.7591093117408907, "obj2": 0.19994695503938345}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( ( ACS + Max( ( ARS - FirstVNF_RAM ),( ARS + ( Min( FirstVNF_CPU_Server ,ACS ) / PN ) ) ) ) / ( FirstVNF_CPU - Const ) )", "choosing": "( Max( ( MLU - ( MLU / Max( MUM,( MUM + ( ( DS - MLU ) * MUC ) ) ) ) ),RMSe ) * ( Max( MUC,RCSe ) + ( DS / Max( RRSe,( Min( ( Max( MUC,RRSe ) + ( CS / DS ) ) ,MLU ) * MUC ) ) ) ) )", "obj1": 0.8805668016194332, "obj2": 0.11564474528854386}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( ( FirstVNF_RAM * ACS ) + DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS - Min( MLU ,Min( RMSe ,MUR ) ) ) + MUM ) ,RCSe ) / ( RCSe - Min( RCSe ,CS ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9615384615384616, "obj2": 0.021818375073299517}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( Min( MRS ,Min( FirstVNF_RAM ,Min( ( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / RRS ) / FirstVNF_CPU_Server ) ) ) ) / Min( FirstVNF_RAM_Server ,( ( Max( BR,BR ) / FirstVNF_Mem ) / CRS ) ) ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( Max( AMS,( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ,( ACS + MRS ) ) )", "choosing": "( ( ( ( DS / Max( ( MUC / MLU ),( ( MUM - ( CS + MUC ) ) * Max( MLU,Min( CS ,MUC ) ) ) ) ) + Min( ( ( MUR - ( RRSe / MUR ) ) * Max( MUC,MLU ) ) ,RRSe ) ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + Max( MLU,Min( CS ,MUC ) ) ) + Min( ( RCSe + ( MUR / RMSe ) ) ,MUR ) ) * RCSe ) ) + ( Min( MUC ,Max( ( ( Min( MUM ,DS ) * RRSe ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7173111095467889}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( ( ( CRS / FirstVNF_CPU_Server ) - ( Min( FirstVNF_CPU_Server ,PN ) / ( MDR - AMS ) ) ) - Max( ( Max( FirstVNF_RAM_Server,ARS ) * ( RRS * FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - ( PN + ACS ) ) ) )", "choosing": "( ( ( Max( RMSe,MLU ) * Max( MUM,MUM ) ) + Max( ( RRSe - RRSe ),( RCSe / RRSe ) ) ) - Min( Min( Max( MLU,CS ) ,MUR ) ,MUR ) )", "obj1": 0.9352226720647774, "obj2": 0.05472742582496648}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( DDR + Const ) )", "choosing": "Min( ( MUM / DS ) ,( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.025051172956175802}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( MUR + ( CS - ( ( MLU * MUR ) / Max( ( MUC * ( RMSe + MUC ) ),( RMSe * Min( MUC ,MUC ) ) ) ) ) ) ) + ( ( MLU / ( RCSe + Max( ( MUR - Max( ( RCSe * RCSe ),( DS / MUR ) ) ),( Min( Min( RMSe ,MUC ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0012320190188495938}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( MUR + ( CS - ( ( MLU * MUR ) / Max( ( MUC * ( RMSe + MUC ) ),( RMSe * Min( MUC ,MUC ) ) ) ) ) ) ) + ( ( MLU / ( RCSe + Max( ( MUR - Max( ( RCSe * RCSe ),( DS / MUR ) ) ),( Min( Min( RMSe ,MUC ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0012320190188495938}, {"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const - FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( MUR * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,( Min( FirstVNF_CPU ,Min( ( PN * FirstVNF_CPU ) ,( MRS + ( ( DDR - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) * AMS ) ) / MDR )", "choosing": "( Max( ( MLU - MUM ),RMSe ) * ( Max( MUC,RCSe ) + ( DS / Max( RRSe,( Min( ( Max( MUC,RRSe ) + ( CS / DS ) ) ,MLU ) * MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "38": [{"determining": "( ( Min( ( CRS + ( AMS + FirstVNF_Mem ) ) ,Max( Max( ( ACS - FirstVNF_CPU_Server ),ARS ),CRS ) ) / Min( Min( MDR ,MDR ) ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RRSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( MLU * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( DS - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( FirstVNF_Mem + Min( ( MDR * Max( AMS,Min( MRS ,Max( Const,AMS ) ) ) ) ,MDR ) ) )", "choosing": "( Max( ( ( RMSe - ( ( ( Min( RRSe ,MUM ) - RCSe ) - RRSe ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) ) ) - MUM ),( DS * Max( MUR,DS ) ) ) * RCSe )", "obj1": 0.05465587044534413, "obj2": 0.7680069305795039}, {"determining": "( ( ( PN + DDR ) - DDR ) - Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUC ) ,Min( CS ,RCSe ) )", "obj1": 0.7732793522267206, "obj2": 0.11871470810549867}, {"determining": "( FirstVNF_Mem / ( ( Max( Min( ( Min( MRS ,FirstVNF_CPU ) - PN ) ,( ARS + AMS ) ),( FirstVNF_RAM_Server / ( ( ARS + ( FirstVNF_CPU_Server + ARS ) ) - Max( AMS,( MDR * PN ) ) ) ) ) - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( MUC,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.4979757085020243, "obj2": 0.37222601321074766}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( FirstVNF_CPU_Server - Max( Const,DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,MUR ) ,( RCSe + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( Min( Min( RMSe ,CS ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) )", "obj1": 0.5506072874493927, "obj2": 0.3316352797283562}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * DDR ),( FirstVNF_Mem_Server / AMS ) ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( RCSe,RRSe ) * RCSe )", "obj1": 0.7672064777327935, "obj2": 0.19460818233189503}, {"determining": "( ( ACS + ARS ) / ( FirstVNF_CPU - Const ) )", "choosing": "( Max( ( MLU - ( MLU / Max( MUM,( MUM + ( ( DS - MLU ) * MUC ) ) ) ) ),RMSe ) * ( Max( MUC,RCSe ) + ( DS / Max( RRSe,( Min( ( Max( MUC,RRSe ) + ( CS / DS ) ) ,MLU ) * MUC ) ) ) ) )", "obj1": 0.8724696356275303, "obj2": 0.11811659695736686}, {"determining": "( ( ( FirstVNF_CPU * BR ) / AMS ) / ( ( ( ( FirstVNF_CPU_Server / DDR ) - FirstVNF_Mem_Server ) - Min( ARS ,( ( CRS / CRS ) / ( AMS * AMS ) ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( RCSe * Min( ( Min( CS ,( MUC - Min( MUR ,MUC ) ) ) * CS ) ,Max( Min( MUC ,( RRSe * RMSe ) ),DS ) ) )", "obj1": 0.5647773279352226, "obj2": 0.3142579575067485}, {"determining": "( ( Min( MRS ,Min( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Max( DDR,BR ) ) ),ACS ) ,Max( ( MDR - FirstVNF_Mem_Server ),CRS ) ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( PN / RRS ) ) ) / Min( ( Min( ( BR - MRS ) ,MDR ) - Min( ( DDR * FirstVNF_RAM ) ,MRS ) ) ,( MDR / PN ) ) )", "choosing": "( ( Max( ( ( MLU / ( CS + ( RCSe - RCSe ) ) ) / RCSe ),Min( ( ( DS * ( DS - MUR ) ) / ( Min( Min( CS ,RMSe ) ,( CS + MLU ) ) - MUR ) ) ,RCSe ) ) + ( ( DS - ( ( ( MLU + CS ) / MUR ) * ( RMSe - ( MLU + RRSe ) ) ) ) * MLU ) ) * ( MLU - CS ) )", "obj1": 0.6032388663967612, "obj2": 0.2953343888264627}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( PN - ( FirstVNF_RAM - MDR ) ) ,DDR ),( ( RRS * DDR ) * DDR ) ) ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + RCSe ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.1862348178137652, "obj2": 0.6178597511692215}, {"determining": "( ( Const / ( AMS / FirstVNF_RAM_Server ) ) - ( ACS / ( Max( ( FirstVNF_Mem - ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * ( AMS * CRS ) ) ) ),( ARS / MDR ) ) - ( Max( ( RRS / RRS ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( DS + ( ( RMSe - ( DS + Max( CS,( DS * Max( RMSe,RMSe ) ) ) ) ) / DS ) ) ,Min( Min( ( RRSe + RCSe ) ,CS ) ,DS ) )", "obj1": 0.32186234817813764, "obj2": 0.525007416101204}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ARS / ( ( FirstVNF_Mem_Server - CRS ) - ( ( DDR / ( ( PN / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) ) * ARS ) ) ) )", "choosing": "Min( ( RMSe + ( ( CS - DS ) / DS ) ) ,Min( RMSe ,( MLU * MUR ) ) )", "obj1": 0.42105263157894735, "obj2": 0.471541868382768}, {"determining": "( Max( ( ( ( AMS * ( FirstVNF_CPU / Const ) ) + FirstVNF_CPU ) / Min( ( ACS - CRS ) ,PN ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUM / ( MUC - Max( ( ( DS * RCSe ) - ( ( Min( MUM ,CS ) + MUR ) * MUM ) ),MUM ) ) ) - ( Min( ( Min( ( ( ( MUC + MUM ) - MUM ) - DS ) ,DS ) / RRSe ) ,( ( RRSe / MUR ) * ( MLU - Max( MUC,( ( RCSe / MUM ) + ( DS / RCSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.24898785425101214, "obj2": 0.5779049341399801}, {"determining": "( ( FirstVNF_Mem - ( ( ( ( MRS / CRS ) * ( CRS - MRS ) ) * MDR ) + ( FirstVNF_RAM * ( FirstVNF_Mem + RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.4331983805668016, "obj2": 0.4475799780419572}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ( ( FirstVNF_CPU * BR ) - ( Const / AMS ) ) + RRS ) ,FirstVNF_RAM ) ) ) ) * ( ( FirstVNF_RAM * ( RRS + DDR ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - ( Max( MUM,RRSe ) * ( DS + DS ) ) ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( ( MUM - MUC ) + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) * Min( ( ( MUM / CS ) * RMSe ) ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.4898785425101215, "obj2": 0.406760493952309}, {"determining": "( Max( ( ( Max( FirstVNF_Mem,( PN + ACS ) ) + ACS ) / FirstVNF_CPU_Server ),Const ) - ( DDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,MLU ) )", "obj1": 0.3623481781376518, "obj2": 0.5088694416864976}, {"determining": "( MDR / ( Max( Min( ( ( PN * ARS ) + Min( FirstVNF_Mem ,ARS ) ) ,RRS ),( FirstVNF_RAM / Const ) ) - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.7267206477732794, "obj2": 0.2214912482201763}, {"determining": "( ( PN / FirstVNF_Mem_Server ) + ( ( ( ( ( ( RRS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / BR ) * Min( CRS ,ARS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( ( RMSe - MUC ) ,CS ) - RMSe ) ,MUR ) ,Max( Max( MUC,Min( RCSe ,( ( ( RCSe - RRSe ) + ( Max( DS,CS ) / RRSe ) ) - ( MLU * DS ) ) ) ),( CS * Max( Min( ( Max( ( MUM / MUC ),MUR ) - CS ) ,DS ),( ( MUC + DS ) - CS ) ) ) ) )", "obj1": 0.2732793522267207, "obj2": 0.5568524350505866}, {"determining": "( Max( Const,( Const / FirstVNF_CPU_Server ) ) - ( DDR - CRS ) )", "choosing": "( ( Min( DS ,MUM ) * RCSe ) - Max( CS,( CS - MUM ) ) )", "obj1": 0.23684210526315788, "obj2": 0.5929761731298465}, {"determining": "( ( ( ACS - ( Max( MDR,FirstVNF_CPU ) / Max( ( ( ( AMS / ARS ) + CRS ) - DDR ),FirstVNF_CPU ) ) ) * FirstVNF_CPU ) * Max( BR,( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * ( MUR / DS ) ) * RRSe ) - MUR ) / Max( CS,( ( MUR * ( MUR * ( RRSe / RCSe ) ) ) + RRSe ) ) )", "obj1": 0.4493927125506073, "obj2": 0.43278768797577544}, {"determining": "( Min( ( ( BR / ( FirstVNF_CPU * ( CRS / ( BR * FirstVNF_RAM_Server ) ) ) ) + CRS ) ,FirstVNF_CPU ) - ( Min( FirstVNF_Mem_Server ,Max( DDR,RRS ) ) / ( Const - RRS ) ) )", "choosing": "Min( ( ( ( Min( DS ,( RMSe - RRSe ) ) / Min( RRSe ,( MUC - MUR ) ) ) / DS ) / DS ) ,Max( CS,DS ) )", "obj1": 0.9251012145748988, "obj2": 0.05745035868345035}, {"determining": "( ( ( ( ACS * CRS ) + ( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) / FirstVNF_Mem )", "choosing": "( ( MUC / MUM ) / ( DS / ( ( RCSe * ( ( ( MUR + ( RMSe * MLU ) ) + MUM ) / RMSe ) ) / ( MUR + ( RMSe * MLU ) ) ) ) )", "obj1": 0.39068825910931176, "obj2": 0.4839309071968202}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( ( RRS * DDR ),( ( FirstVNF_RAM_Server - Max( ( RRS * ( BR * FirstVNF_CPU_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) / AMS ) ) ) )", "choosing": "( Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),( CS - Max( Min( MLU ,( ( MUM / RRSe ) / ( ( MLU + MUC ) * RCSe ) ) ),CS ) ) ) * MUC )", "obj1": 0.6700404858299596, "obj2": 0.27673985494409026}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - ( DDR / ( FirstVNF_CPU_Server - Max( ( ( BR + FirstVNF_Mem_Server ) - ( ARS - RRS ) ),DDR ) ) ) ) )", "choosing": "Min( Max( MUM,MUR ) ,( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.27944235215745944}, {"determining": "( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem - CRS ),( Min( RRS ,( ( FirstVNF_CPU / ( Const - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU_Server ) ) / CRS ) ) )", "choosing": "( Max( ( ( CS - ( MUM - ( ( MLU / ( RRSe * CS ) ) + RRSe ) ) ) / DS ),RCSe ) * ( RCSe + ( CS - ( MUM - ( ( Max( MLU,( CS * CS ) ) * Min( MLU ,DS ) ) + ( MLU / ( RRSe * CS ) ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.07716161208966041}, {"determining": "( ( Max( FirstVNF_CPU,Min( ACS ,CRS ) ) / ( DDR / ( FirstVNF_CPU_Server - Max( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server - RRS ) ),DDR ) ) ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( DS / ( MUR + ( CS - ( ( MLU * MUR ) / Max( ( MUC * ( RMSe + MUC ) ),( RMSe * Max( DS,MLU ) ) ) ) ) ) ) + ( ( MLU / ( RCSe + Max( ( MUR - Max( ( RCSe * RCSe ),( DS / MUR ) ) ),( Min( Min( RMSe ,MUC ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9311740890688259, "obj2": 0.04583475763340958}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,( ( Min( Max( Min( PN ,Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ),CRS ) ,Max( AMS,ACS ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) ) / PN )", "choosing": "( Max( ( ( RMSe / ( DS / ( ( RCSe * DS ) - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) / ( Min( RMSe ,( RCSe * DS ) ) * RMSe ) )", "obj1": 0.06072874493927125, "obj2": 0.7385228415791389}, {"determining": "( ( Const / ( AMS / FirstVNF_RAM_Server ) ) - ( ACS / ( Max( ( FirstVNF_Mem - ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ),( ARS / MDR ) ) - ( Max( ( RRS / RRS ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( ( MLU * Min( CS ,( Max( MLU,CS ) - CS ) ) ) - ( MUC + Max( MUC,( Min( MUM ,MUM ) - ( RCSe / DS ) ) ) ) ) / ( MUM / MUC ) ) + ( Min( ( RCSe + MUC ) ,Min( MUM ,MUC ) ) - MUM ) ) ,( CS + ( RRSe - ( CS - RRSe ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5969958307260921}, {"determining": "( MDR / ( ( FirstVNF_RAM_Server - Max( ( ( Min( DDR ,FirstVNF_CPU_Server ) - FirstVNF_Mem_Server ) / ( BR * ( RRS - ( RRS / BR ) ) ) ),( FirstVNF_Mem_Server / AMS ) ) ) - Max( Min( ( RRS * FirstVNF_CPU_Server ) ,CRS ),( Max( FirstVNF_CPU_Server,DDR ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Min( MUC ,( MLU * ( CS - MUC ) ) ),( Min( MLU ,MUR ) - ( Min( CS ,( MUC - RCSe ) ) * MLU ) ) ) * MUC )", "obj1": 0.7510121457489879, "obj2": 0.20714083668866345}, {"determining": "( ( RRS + ( ( Min( Max( Min( PN ,ARS ),CRS ) ,Max( AMS,ACS ) ) + Const ) - ACS ) ) / MDR )", "choosing": "( Max( ( ( RMSe / ( DS / ( MUC - ( CS - MUC ) ) ) ) - ( RCSe + MUC ) ),MUC ) * RCSe )", "obj1": 0.8987854251012146, "obj2": 0.06978172335574362}, {"determining": "( ( ( PN * FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) + ( FirstVNF_CPU - ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe - ( MUC - ( ( MUR * MUR ) * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.4797570850202429, "obj2": 0.43219302065989573}, {"determining": "( ( ACS + Max( ( DDR - FirstVNF_RAM ),( ARS + ( Min( FirstVNF_CPU_Server ,ACS ) / PN ) ) ) ) / ( FirstVNF_CPU - Const ) )", "choosing": "( RCSe * Max( ( MUR + DS ),Max( RRSe,( Min( ( Max( MUC,RRSe ) + ( CS / DS ) ) ,MLU ) * MUC ) ) ) )", "obj1": 0.8846153846153846, "obj2": 0.10405062675380605}, {"determining": "( MRS / ( ( FirstVNF_Mem_Server - Max( ( CRS / ( BR * FirstVNF_RAM_Server ) ),FirstVNF_RAM ) ) * ( MDR + ACS ) ) )", "choosing": "( ( ( ( RRSe + ( ( Min( MUC ,MUM ) + Min( ( MUM / DS ) ,Max( CS,DS ) ) ) / ( ( ( MUC * RCSe ) + Max( CS,RCSe ) ) - ( MUR - ( DS - MUC ) ) ) ) ) - Min( RRSe ,RMSe ) ) / RRSe ) * RRSe )", "obj1": 0.6234817813765182, "obj2": 0.2855693924373377}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - ( MUC * MLU ) ) ,CS ) )", "obj1": 0.6902834008097166, "obj2": 0.2570842685985329}, {"determining": "( Min( ( CRS - RRS ) ,( ( ( ( MRS / CRS ) * ( FirstVNF_Mem - CRS ) ) + ( ( MRS + FirstVNF_CPU ) + BR ) ) + Min( CRS ,( CRS / FirstVNF_Mem ) ) ) ) / FirstVNF_Mem )", "choosing": "( ( MUC / ( CS * ( Max( ( MUM * RMSe ),( CS - MUM ) ) * Min( MUR ,Max( CS,Max( MUC,( RCSe / RMSe ) ) ) ) ) ) ) * Min( MLU ,( MUR - CS ) ) )", "obj1": 0.31376518218623484, "obj2": 0.5407115743527163}, {"determining": "( ( AMS / Min( RRS ,ACS ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( ( ( ( MLU - MLU ) * RCSe ) - CS ) / MLU ) - ( MUM * CS ) ) / ( RCSe / RCSe ) )", "obj1": 0.7004048582995951, "obj2": 0.24333639453323921}, {"determining": "( Min( ( ( Max( ( Min( Const ,Max( RRS,AMS ) ) + ARS ),FirstVNF_CPU_Server ) - FirstVNF_Mem ) + Min( FirstVNF_Mem ,( MDR + ( FirstVNF_CPU / MRS ) ) ) ) ,FirstVNF_RAM_Server ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * ( ( Max( ( RCSe / CS ),RRSe ) / RRSe ) - CS ) )", "obj1": 0.1417004048582996, "obj2": 0.6626849741159531}, {"determining": "( MDR / ( RRS - Max( ( DDR * RRS ),( AMS * Max( Min( ( ( RRS * DDR ) - ( FirstVNF_RAM - MDR ) ) ,DDR ),( RRS * DDR ) ) ) ) ) )", "choosing": "( ( ( DS / ( RRSe + ( ( Min( ( MUR / MUR ) ,CS ) + ( MUR / MUR ) ) / RCSe ) ) ) - RRSe ) * RRSe )", "obj1": 0.13157894736842105, "obj2": 0.6788522726758003}, {"determining": "( ( ( FirstVNF_CPU / AMS ) / ( ( FirstVNF_CPU / ( FirstVNF_Mem_Server * AMS ) ) * FirstVNF_RAM_Server ) ) - ( DDR + ( ( Const + RRS ) - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( MLU * Min( CS ,( Max( MLU,CS ) - Min( RCSe ,CS ) ) ) ) - ( MUC + Max( MUC,( Min( MUM ,MUM ) - ( RCSe / DS ) ) ) ) ) / ( MUM / MUC ) ) + ( Min( ( RCSe + MUC ) ,Min( MUM ,MUC ) ) - MUM ) ) ,( CS + ( RRSe - ( CS - RRSe ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.6609855479008907}, {"determining": "( ACS / ( Max( ACS,FirstVNF_CPU_Server ) / ( Const / BR ) ) )", "choosing": "( RMSe / ( ( Min( MUC ,( CS - Min( ( RMSe + MUM ) ,MUC ) ) ) - DS ) - DS ) )", "obj1": 0.3097165991902834, "obj2": 0.552400703091433}, {"determining": "( MDR / ( Max( ( RRS * ( RRS / ( FirstVNF_Mem_Server / AMS ) ) ),( ( ( RRS + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Const ) ) / FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( ( Min( ( Min( MUR ,DS ) + RRSe ) ,( ( RRSe / MUR ) * RRSe ) ) / RCSe ) - Max( CS,( DS - MUM ) ) )", "obj1": 0.2874493927125506, "obj2": 0.5534779381688977}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( DDR + Const ) )", "choosing": "Min( ( MUM / DS ) ,( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.025051172956175802}, {"determining": "( ( Max( ( DDR * AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - Min( Const ,MDR ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( RMSe - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.4817813765182186, "obj2": 0.41642108223005136}, {"determining": "( FirstVNF_Mem / ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1659919028340081, "obj2": 0.6482533563283529}, {"determining": "( MRS / ( ( ( Max( Min( ( ( PN + BR ) * DDR ) ,BR ),FirstVNF_CPU ) - Max( CRS,FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) + CRS ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( ( ( RRSe - MUR ) * ( RCSe + MUM ) ) ,( RCSe * Min( Min( Max( MUC,CS ) ,Max( MUR,DS ) ) ,Max( Min( MUM ,MUM ),( RMSe + MUC ) ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( FirstVNF_Mem - ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ),( ARS / MDR ) ) - ( Max( ( RRS / RRS ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) / Min( ( ARS - ACS ) ,( Max( ( ACS / ( AMS * CRS ) ),FirstVNF_RAM_Server ) - DDR ) ) )", "choosing": "( Min( Max( ( Min( Min( ( RRSe + RCSe ) ,CS ) ,DS ) / MUM ),MUR ) ,DS ) / ( ( MLU / MUM ) - RRSe ) )", "obj1": 0.7186234817813765, "obj2": 0.23725255965315306}, {"determining": "( FirstVNF_RAM_Server - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / MUC ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),( CS / DS ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.97165991902834, "obj2": 0.010087651442712052}, {"determining": "( ( FirstVNF_Mem_Server / Max( FirstVNF_Mem,( ( Max( ACS,Const ) / ( Const / BR ) ) / ( CRS * MRS ) ) ) ) / PN )", "choosing": "( Max( RMSe,DS ) / Min( RCSe ,( ( DS * ( MUR + Max( MUC,( Min( CS ,RMSe ) - Max( RMSe,RMSe ) ) ) ) ) - MUC ) ) )", "obj1": 0.06680161943319839, "obj2": 0.7323221794312635}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem / MRS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( ( MUC / RCSe ) + Min( RCSe ,MLU ) ),RMSe ),Min( DS ,MUC ) )", "obj1": 0.6862348178137652, "obj2": 0.2701952018151976}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,ARS ) ,( ( RRS / ARS ) + ( MRS + ( ( RRS / ARS ) + ( MRS + MRS ) ) ) ) ) / PN )", "choosing": "( ( ( ( RMSe / ( DS / RRSe ) ) / ( ( RMSe / ( DS / RRSe ) ) + MUC ) ) / MUC ) / Min( RCSe ,RCSe ) )", "obj1": 0.0728744939271255, "obj2": 0.7230412101506464}, {"determining": "( ( AMS / Min( RRS ,PN ) ) / ( ACS * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( MUC * ( Min( ( MUC / Min( Max( DS,DS ) ,DS ) ) ,RRSe ) - ( MLU * CS ) ) ) * ( ( Max( ( ( ( MLU - ( DS * RRSe ) ) / ( MUR + ( DS - MUM ) ) ) / DS ),RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 0.7145748987854251, "obj2": 0.24032301762538852}, {"determining": "( ( Const / ( AMS / FirstVNF_RAM_Server ) ) - ( ACS / ( Max( ( FirstVNF_Mem - ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ),( ARS / MDR ) ) - ( Max( ( RRS / RRS ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( ( ( MLU * Min( CS ,( Max( MLU,CS ) - CS ) ) ) - ( MUC + Max( MUC,( Min( MUM ,MUM ) - ( RCSe / DS ) ) ) ) ) / ( MUM / MUC ) ) + ( Min( ( RCSe + MUC ) ,Min( MUM ,MUC ) ) - MUM ) ) ,( CS + ( RRSe - ( CS - RRSe ) ) ) )", "obj1": 0.20647773279352227, "obj2": 0.5969958307260921}, {"determining": "( ( PN / Min( ( FirstVNF_CPU_Server / CRS ) ,( Const + Min( ( ARS + ( ( FirstVNF_CPU * BR ) * Min( DDR ,RRS ) ) ) ,FirstVNF_RAM ) ) ) ) * ( ACS / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * ( ( ( Max( MUM,RRSe ) * ( DS + DS ) ) * Min( DS ,DS ) ) - MUC ) ) - MUC ) - MUR ) / ( ( MUM - RRSe ) - ( RRSe * ( ( ( CS + Min( Max( MUC,MUM ) ,( DS * RCSe ) ) ) - Min( DS ,CS ) ) - ( ( ( ( MUC / RMSe ) / ( MUM / MLU ) ) + MUC ) / Max( DS,( Min( RRSe ,RCSe ) / RRSe ) ) ) ) ) ) )", "obj1": 0.12753036437246965, "obj2": 0.6869892846226053}, {"determining": "( ( Min( ( PN - RRS ) ,Max( ARS,CRS ) ) - FirstVNF_Mem ) / Min( ( AMS + FirstVNF_RAM_Server ) ,DDR ) )", "choosing": "( Min( Max( Max( ( MUR * Max( ( MLU * DS ),( MUC - Min( MUR ,MUC ) ) ) ),RRSe ),Min( ( ( Min( MUC ,( MUR + MLU ) ) / RMSe ) + DS ) ,( RRSe / DS ) ) ) ,( CS - Max( ( MUR + RCSe ),RMSe ) ) ) * MUM )", "obj1": 0.9676113360323887, "obj2": 0.021736301981108267}, {"determining": "( MDR / ( FirstVNF_Mem_Server / AMS ) )", "choosing": "( ( Max( DS,CS ) * RCSe ) * ( DS - RRSe ) )", "obj1": 0.10728744939271255, "obj2": 0.6929674651064213}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( ( RRS * ( RRS / FirstVNF_Mem_Server ) ),( FirstVNF_Mem_Server / AMS ) ) ) )", "choosing": "( Max( DS,RRSe ) * Max( Max( ( ( ( MUM - MUR ) - ( ( DS + MLU ) + ( MUC - DS ) ) ) - RRSe ),MLU ),CS ) )", "obj1": 0.6821862348178138, "obj2": 0.272945948527491}, {"determining": "( Max( Const,ACS ) / ( ( ( ACS / ( ( DDR + RRS ) / ( BR + ( ARS - AMS ) ) ) ) - DDR ) - RRS ) )", "choosing": "( ( ( ( ( ( ( ( RMSe + MLU ) / RMSe ) - Min( Max( CS,MLU ) ,MUR ) ) / MUM ) / MUR ) - Max( ( RRSe - CS ),Max( MLU,RRSe ) ) ) * DS ) / Max( Max( ( RRSe + MUC ),( MUM + RRSe ) ),RCSe ) )", "obj1": 0.9574898785425101, "obj2": 0.024861709738232835}, {"determining": "( ( MRS + PN ) - ( DDR * Max( ( ( Min( DDR ,BR ) - ( ARS / MRS ) ) * DDR ),ACS ) ) )", "choosing": "( ( DS - ( Max( Max( CS,MUM ),RMSe ) - RMSe ) ) / ( Max( ( DS + RRSe ),MUC ) + Min( DS ,Max( Min( Min( MUM ,Max( ( MUC * MUM ),DS ) ) ,RRSe ),RMSe ) ) ) )", "obj1": 0.9817813765182186, "obj2": 0.007543357084541545}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Max( Min( RRS ,FirstVNF_CPU_Server ),( BR - BR ) ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RCSe ) ) ) / RRSe ) * Max( DS,MUC ) ) ) ) )", "obj1": 0.757085020242915, "obj2": 0.20106783530060002}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / MDR ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + Max( MUC,( RCSe / RMSe ) ) ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.38866396761133604, "obj2": 0.4932052548440541}, {"determining": "( Min( MRS ,Const ) * Max( FirstVNF_Mem,Min( ( Const - FirstVNF_CPU ) ,AMS ) ) )", "choosing": "( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) / Min( RMSe ,Min( ( ( DS + Min( MUC ,( RMSe * MUC ) ) ) - RCSe ) ,( MUC - ( Max( ( ( RRSe / MUC ) * ( MUM + MUR ) ),( MUR + RRSe ) ) + DS ) ) ) ) )", "obj1": 0.08502024291497975, "obj2": 0.7067225272743942}, {"determining": "( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + BR ) )", "choosing": "( ( ( ( MUC * MUM ) - Min( MUM ,( RCSe * Min( ( Max( MUC,RRSe ) * Max( DS,MUR ) ) ,Max( Min( MUM ,MUM ),RMSe ) ) ) ) ) / Min( CS ,MUC ) ) * Max( RRSe,Min( MLU ,MLU ) ) )", "obj1": 0.1720647773279352, "obj2": 0.643747425217602}, {"determining": "( ( Max( ( ( Min( FirstVNF_RAM ,BR ) - ( ARS / MRS ) ) * ( ARS * Min( DDR ,BR ) ) ),ACS ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( Min( ( RMSe + MUC ) ,Min( RRSe ,MUM ) ),( CS + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.6977555741955647}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( DDR * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9878542510121457, "obj2": 0.004630158300462775}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - Min( ACS ,CRS ) ) - FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MUC ,MUC ) ,Max( DS,MLU ) )", "obj1": 0.7591093117408907, "obj2": 0.1953687677142918}, {"determining": "( ( Max( ( FirstVNF_Mem + Const ),ACS ) + RRS ) / ( ( Min( Max( Min( PN ,( FirstVNF_CPU_Server / PN ) ),CRS ) ,Max( AMS,FirstVNF_CPU ) ) / ARS ) + ( MRS + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - RMSe ) * MUM )", "obj1": 0.1214574898785425, "obj2": 0.6910374308436764}, {"determining": "Max( ( ( BR * ARS ) + Max( Const,Const ) ),( Min( CRS ,( Const + ACS ) ) - BR ) )", "choosing": "( Max( ( ( MLU + MUR ) - ( MUC / MLU ) ),( Max( MUR,MUR ) - ( ( ( CS + ( ( RMSe / RCSe ) - Max( RMSe,MUM ) ) ) / Max( ( ( MUC - CS ) / CS ),CS ) ) * CS ) ) ) - ( ( Max( MUC,RRSe ) + ( RRSe + RRSe ) ) * ( ( DS + ( Min( DS ,CS ) / DS ) ) * Max( RCSe,MUR ) ) ) )", "obj1": 0.08299595141700405, "obj2": 0.7145854401482846}, {"determining": "( Min( ACS ,Max( ( ( MRS - AMS ) - FirstVNF_RAM ),( ARS + ( ( Max( ACS,( Const + Const ) ) - ( PN + Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) / PN ) ) ) ) / ( FirstVNF_CPU - Const ) )", "choosing": "( Max( Min( MUM ,MUM ),DS ) * Max( ( MUR + DS ),Max( MUR,( ( CS - Max( ( MUC / ( MUM + MUM ) ),RCSe ) ) - CS ) ) ) )", "obj1": 0.8785425101214575, "obj2": 0.11225757445155891}, {"determining": "( ( FirstVNF_Mem_Server / Max( ACS,( BR + MRS ) ) ) / Max( ARS,FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * ( MUC - ( CS * ( MUR / ( Max( RMSe,CS ) / MUR ) ) ) ) ) / MUC ) / Min( CS ,MUR ) )", "obj1": 0.11538461538461539, "obj2": 0.6910992815349608}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Min( DDR ,CRS ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + DS ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3684210526315789, "obj2": 0.506085179956436}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) / ( Const - FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( RMSe * DS ) / ( CS + MUR ) ) + RCSe ) - RCSe ) + MLU ) * ( Max( MUC,MUR ) + Max( MUR,( ( ( MUM + Min( RCSe ,( CS - RRSe ) ) ) / RRSe ) * ( MLU - Max( ( RRSe / MLU ),( CS - Max( RCSe,RRSe ) ) ) ) ) ) ) )", "obj1": 0.8825910931174089, "obj2": 0.10822438016595795}, {"determining": "( Max( ARS,FirstVNF_CPU ) * Min( Max( MRS,Max( ( Const / ( Const / PN ) ),FirstVNF_CPU_Server ) ) ,MRS ) )", "choosing": "( MLU / ( CS * MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.7045062814230952}, {"determining": "( ( ( AMS / FirstVNF_RAM ) - FirstVNF_RAM_Server ) / ( Max( ( RRS * ( ( FirstVNF_CPU_Server / Const ) / RRS ) ),( FirstVNF_Mem_Server / RRS ) ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( DS * ( DS - MUR ) ) ,RRSe ) * ( CS + MLU ) ) * Min( RRSe ,MUR ) )", "obj1": 0.07692307692307693, "obj2": 0.7193969135237397}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( ( FirstVNF_RAM * ACS ) + DDR ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( ( DS - Min( MLU ,Min( RMSe ,MUR ) ) ) + MUM ) ,RCSe ) / ( RCSe - Min( RCSe ,CS ) ) ) ,Max( DS,MLU ) )", "obj1": 0.9615384615384616, "obj2": 0.021818375073299517}, {"determining": "( ( Max( ( FirstVNF_Mem_Server / AMS ),Min( Const ,MDR ) ) * FirstVNF_RAM ) - ( ( DDR / ( FirstVNF_CPU_Server - Max( DDR,Const ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( ( MUR + ( CS + ( ( ( RCSe + DS ) + ( MUC - MUM ) ) / ( RRSe + ( ( MLU + RCSe ) / RCSe ) ) ) ) ) / DS ) + ( ( MLU / ( MUC + Max( ( MUR - Max( Max( MUR,RRSe ),Min( MUC ,RRSe ) ) ),( ( MUR / Max( MUC,MLU ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9939271255060729, "obj2": 0.002223335803311402}, {"determining": "( ( Min( MRS ,Min( FirstVNF_RAM ,Min( ( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server / RRS ) / FirstVNF_CPU_Server ) ) ) ) / Min( FirstVNF_RAM_Server ,( ( Max( BR,BR ) / FirstVNF_Mem ) / CRS ) ) ) * Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( Max( AMS,( Min( FirstVNF_Mem_Server ,( PN / FirstVNF_CPU ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ) ,( ACS + MRS ) ) )", "choosing": "( ( ( ( DS / Max( ( MUC / MLU ),( ( MUM - ( CS + MUC ) ) * Max( MLU,Min( CS ,MUC ) ) ) ) ) + Min( ( ( MUR - ( RRSe / MUR ) ) * Max( MUC,MLU ) ) ,RRSe ) ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + Max( MLU,Min( CS ,MUC ) ) ) + Min( ( RCSe + ( MUR / RMSe ) ) ,MUR ) ) * RCSe ) ) + ( Min( MUC ,Max( ( ( Min( MUM ,DS ) * RRSe ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 0.08097165991902834, "obj2": 0.7173111095467889}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.5039392205328175}, {"determining": "( BR + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RRSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.3866396761133603, "obj2": 0.4977182852593123}, {"determining": "( ( Min( AMS ,Const ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( ( ARS * Min( DDR ,BR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( MLU + DS ) ) + RMSe ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.0931174089068826, "obj2": 0.7008502739646655}, {"determining": "( Min( Min( ( DDR - FirstVNF_RAM ) ,( ( ( ARS / RRS ) / MDR ) / PN ) ) ,MRS ) - MRS )", "choosing": "Min( Max( Min( Max( DS,( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) ),( RMSe / MUC ) ) ,( RRSe * Min( MUR ,MLU ) ) )", "obj1": 0.8765182186234818, "obj2": 0.1167603886935853}, {"determining": "( ( FirstVNF_RAM_Server - MDR ) - ( DDR + Const ) )", "choosing": "Min( ( MUM / DS ) ,( CS / Min( MUC ,Min( ( MUC - ( RCSe * RMSe ) ) ,MUR ) ) ) )", "obj1": 0.9412955465587044, "obj2": 0.025051172956175802}, {"determining": "( Max( ACS,Const ) / ( Const / BR ) )", "choosing": "( ( RMSe * DS ) / CS )", "obj1": 0.38461538461538464, "obj2": 0.498956801010353}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( ( ( AMS * CRS ) + FirstVNF_RAM ) / FirstVNF_RAM_Server )", "choosing": "( ( ( RCSe - Min( RMSe ,( Max( RCSe,RCSe ) - MLU ) ) ) / MUR ) / ( CS * MLU ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( ( BR / ( Min( Max( CRS,DDR ) ,( ( FirstVNF_CPU * FirstVNF_CPU ) * ACS ) ) - MRS ) ) / Min( DDR ,( CRS * RRS ) ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( Max( ( FirstVNF_CPU_Server - ( Const * BR ) ),Const ) / ( FirstVNF_CPU - Const ) )", "choosing": "( Max( Min( MUM ,Max( Max( Min( MUM ,RMSe ),RRSe ),Max( ( CS - ( MLU - RRSe ) ),( ( ( RCSe - RCSe ) - MUM ) + ( ( CS + MUM ) - ( MUC + MUC ) ) ) ) ) ),DS ) * Max( ( MUR + DS ),Min( MUR ,MUM ) ) )", "obj1": 0.8744939271255061, "obj2": 0.11797517233745805}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ( AMS * ( CRS + Const ) ) - ( Min( PN ,FirstVNF_CPU ) / FirstVNF_Mem ) ) ) - ( ACS + Max( DDR,CRS ) ) )", "choosing": "Min( Max( ( DS - MLU ),( MLU / MUC ) ) ,( Min( ( MUR - MUC ) ,MUR ) * MUC ) )", "obj1": 0.9979757085020243, "obj2": 0.0008256935143944651}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( ( ( FirstVNF_Mem / Const ) + ( ( Max( PN,FirstVNF_CPU ) - BR ) / CRS ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( DS / CS ) / ( RCSe + MUR ) ) ,Max( Max( MUC,Min( Min( Max( ( CS + RCSe ),RRSe ) ,Max( ( Max( RRSe,DS ) + ( DS - DS ) ),Max( MLU,RMSe ) ) ) ,( Min( ( RCSe - RRSe ) ,( RRSe / ( DS * CS ) ) ) - ( MLU * DS ) ) ) ),( ( DS + RCSe ) * Max( MUR,( RMSe - RRSe ) ) ) ) )", "obj1": 0.37449392712550605, "obj2": 0.5016749479166916}, {"determining": "( MDR / ( FirstVNF_RAM_Server - Max( Min( BR ,( FirstVNF_CPU_Server + ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * Min( DDR ,CRS ) ) ) ),ACS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * DS ) / ( CS + MUR ) ) ,RCSe ) - RCSe ) + MLU ) * Min( ( Max( ( ( ( ( MUC * MLU ) * MUM ) - ( MUR / MUC ) ) / ( RRSe - ( ( MUR + MUC ) / RMSe ) ) ),MUC ) - MUM ) ,CS ) )", "obj1": 0.3785425101214575, "obj2": 0.499341520852671}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( MUR + ( CS - ( ( MLU * MUR ) / Max( ( MUC * ( RMSe + MUC ) ),( RMSe * Min( MUC ,MUC ) ) ) ) ) ) ) + ( ( MLU / ( RCSe + Max( ( MUR - Max( ( RCSe * RCSe ),( DS / MUR ) ) ),( Min( Min( RMSe ,MUC ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0012320190188495938}, {"determining": "( ( Min( AMS ,DDR ) / ( Min( RRS ,FirstVNF_CPU ) / ARS ) ) / Min( DDR ,FirstVNF_RAM_Server ) )", "choosing": "( RMSe * Min( Max( ( MUM - RCSe ),( MUR + ( CS / MUM ) ) ) ,( MLU - ( ( Max( RCSe,( CS + DS ) ) + ( CS + ( RCSe - RCSe ) ) ) * Max( MUR,DS ) ) ) ) )", "obj1": 0.09716599190283401, "obj2": 0.7004126577514463}, {"determining": "( Min( ( AMS + AMS ) ,ACS ) / ( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + BR ) ) + ( BR * ( CRS * AMS ) ) ) - MDR ) - FirstVNF_Mem_Server ) )", "choosing": "( ( DS / ( MUR + ( CS - ( ( MLU * MUR ) / Max( ( MUC * ( RMSe + MUC ) ),( RMSe * Min( MUC ,MUC ) ) ) ) ) ) ) + ( ( MLU / ( RCSe + Max( ( MUR - Max( ( RCSe * RCSe ),( DS / MUR ) ) ),( Min( Min( RMSe ,MUC ) ,( RRSe - CS ) ) + Min( Min( RRSe ,RMSe ) ,CS ) ) ) ) ) + RRSe ) )", "obj1": 0.9959514170040485, "obj2": 0.0012320190188495938}, {"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM + ( FirstVNF_Mem + AMS ) ) ,MRS ) / Min( FirstVNF_RAM_Server ,( Const - AMS ) ) ) * Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( ( ( RMSe - MLU ) * RRSe ) - ( MLU * ( Max( ( Min( RMSe ,RMSe ) * MLU ),MUR ) * ( MLU / MUR ) ) ) ) - ( MUM - MUC ) ) / ( ( ( RCSe + MUM ) - MUC ) + ( Min( MUC ,Max( ( ( RRSe * Min( MUM ,DS ) ) + ( ( MUR / DS ) + RRSe ) ),Max( MUM,( RRSe - ( CS - MUC ) ) ) ) ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) / ( ACS * ( FirstVNF_Mem_Server / ( ( PN - Const ) * Max( RRS,BR ) ) ) ) )", "choosing": "( ( MUC * ( Min( RRSe ,( MUC / Min( Max( DS,( DS / MLU ) ) ,DS ) ) ) - ( MLU * CS ) ) ) * ( ( ( CS + RCSe ) - RCSe ) * Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) / ( ( ( RRS + Max( ( MDR * FirstVNF_CPU ),( Const / DDR ) ) ) * ACS ) * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( ( Min( ( RRSe / DS ) ,( Min( MUM ,Min( MUM ,( CS + CS ) ) ) - MLU ) ) - ( ( ( ( RMSe * RRSe ) + DS ) + Min( ( RCSe + ( MUR / MUM ) ) ,MUR ) ) * RCSe ) ) + ( RRSe + ( MUR * ( MUR / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( ( ( Const - FirstVNF_CPU_Server ) + ( Const - FirstVNF_CPU_Server ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Max( ( MLU / MUC ),( ( MUM - ( CS + MUC ) ) - Max( MLU,Min( MUC ,MUC ) ) ) ) / DS ) + RMSe ) + ( MUM - MUC ) ) / ( MUR * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}]}