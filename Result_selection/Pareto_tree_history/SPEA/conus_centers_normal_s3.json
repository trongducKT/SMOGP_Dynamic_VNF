{"1": [{"determining": "( ( FirstVNF_RAM * DDR ) * ( MRS / PN ) )", "choosing": "( ( MLU / MUC ) + ( RMSe + DS ) )", "obj1": 0.46041666666666664, "obj2": 0.49905152499213845}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / MRS ) / ( RRS - CRS ) )", "choosing": "Min( ( MLU * MUR ) ,Max( MUM,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS * MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( ( BR / FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.6131075630837798}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.30416666666666664, "obj2": 0.6326448314605979}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( CRS / ACS ) )", "choosing": "( ( RCSe - RMSe ) - Max( RRSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / ACS ) ,FirstVNF_Mem ) + ( ( DDR * FirstVNF_RAM ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe * RCSe ) / ( RRSe * MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5966931197980082}, {"determining": "( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( ( BR / BR ) * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( DS + DS ) ) * Min( ( MLU + CS ) ,( RCSe * MUC ) ) )", "obj1": 0.48541666666666666, "obj2": 0.4479664051459192}, {"determining": "( ( ( MRS - ACS ) + Min( PN ,MRS ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + Const ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,MUR ) + Min( MUC ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0966559768032317}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.47291666666666665, "obj2": 0.48027292190427606}, {"determining": "Min( ( Const * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server * ACS ) + ARS ) )", "choosing": "( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,RMSe ) / ( MUM * ( ( DS + MLU ) - ( DS * MUR ) ) ) )", "obj1": 0.37916666666666665, "obj2": 0.5503250293100734}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + Min( PN ,PN ) )", "choosing": "( ( MLU - ( ( MUC * DS ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.32916666666666666, "obj2": 0.6042172953342906}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( Max( ( MUM - CS ),MUR ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7479166666666667, "obj2": 0.22766062310629334}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * Min( DS ,RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.5138374900122431}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( MUC,MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / CS ) ) ) )", "obj1": 0.525, "obj2": 0.41314859807024856}, {"determining": "Max( ( MRS / ( FirstVNF_CPU + ( DDR / ACS ) ) ),( MRS * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( ( CS * RCSe ),Max( MUM,MUM ) ),Max( ( CS - MUC ),( RCSe / MUM ) ) ),Max( Min( ( MUR * MLU ) ,( RCSe + MUR ) ),( Max( DS,DS ) + ( RMSe + CS ) ) ) )", "obj1": 0.46875, "obj2": 0.49259052609960013}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( ( ( FirstVNF_Mem * MDR ) * Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) + MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.4041666666666667, "obj2": 0.529512587500365}], "2": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / MRS ) / ( RRS - CRS ) )", "choosing": "Min( ( MLU * MUR ) ,Max( MUM,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS * MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( ( BR / FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.6131075630837798}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( CRS / ACS ) )", "choosing": "( ( RCSe - RMSe ) - Max( RRSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( ( BR / BR ) * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( DS + DS ) ) * Min( ( MLU + CS ) ,( RCSe * MUC ) ) )", "obj1": 0.48541666666666666, "obj2": 0.4479664051459192}, {"determining": "( ( ( MRS - ACS ) + Min( PN ,MRS ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + Min( PN ,PN ) )", "choosing": "( ( MLU - ( ( MUC * DS ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.32916666666666666, "obj2": 0.6042172953342906}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( Max( ( MUM - CS ),MUR ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7479166666666667, "obj2": 0.22766062310629334}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * Min( DS ,RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.5138374900122431}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( FirstVNF_CPU / ( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) ) * ( PN + FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( MLU - Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( MUC,MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / CS ) ) ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.5138374900122431}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.5138374900122431}, {"determining": "( ( AMS - BR ) * ( ( MDR / DDR ) - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,( ( MUR / CS ) * ( CS - MUR ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.6958333333333333, "obj2": 0.29597251932453783}, {"determining": "Min( ( MDR / DDR ) ,( FirstVNF_Mem_Server + Const ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.3958333333333333, "obj2": 0.527446275474888}, {"determining": "( Min( ( FirstVNF_CPU * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( Min( ( FirstVNF_CPU * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( ( CRS / RRS ) * Max( CRS,ACS ) ) ) )", "choosing": "Min( Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) ) ,( CS * DS ) )", "obj1": 0.51875, "obj2": 0.4086161138554988}, {"determining": "Max( ( MRS / ( FirstVNF_CPU + ( DDR / ACS ) ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUR + DS ) * ( CS * DS ) )", "obj1": 0.5145833333333333, "obj2": 0.4254968792211627}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Max( BR,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( MLU,( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.11948723114536326}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( ( RRSe / MLU ),( DS - MLU ) )", "obj1": 0.46041666666666664, "obj2": 0.4634209694487701}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Const ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( RCSe,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.43125, "obj2": 0.49774288724369814}, {"determining": "( Min( ( FirstVNF_Mem / ACS ) ,FirstVNF_Mem ) + ( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( DS / ( RRSe * MLU ) )", "obj1": 0.5125, "obj2": 0.4319277637626929}, {"determining": "( ( FirstVNF_RAM * DDR ) * ( MRS / PN ) )", "choosing": "( ( MLU / MUC ) + ( RMSe + DS ) )", "obj1": 0.60625, "obj2": 0.33751842635759166}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / RMSe ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( FirstVNF_CPU * PN ) + Min( PN ,MRS ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.32916666666666666, "obj2": 0.6042172953342906}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( CS - RRSe ) ) )", "obj1": 0.34375, "obj2": 0.570959246494179}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Const ) ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,RMSe ) )", "obj1": 0.32708333333333334, "obj2": 0.6131075630837798}, {"determining": "( ( Max( ( ( Max( Min( ( FirstVNF_Mem - Const ) ,Max( MRS,MDR ) ),Min( ( FirstVNF_Mem * ARS ) ,( CRS - FirstVNF_CPU ) ) ) - Min( ( ( MDR / MDR ) - ( BR + FirstVNF_Mem_Server ) ) ,Max( ( FirstVNF_Mem - RRS ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) - ( ( Min( ( ACS - ACS ) ,Min( AMS ,ACS ) ) + Min( Min( MRS ,ACS ) ,Min( AMS ,FirstVNF_CPU ) ) ) - ( Min( ( FirstVNF_RAM + MRS ) ,( BR - DDR ) ) * Max( Min( FirstVNF_Mem_Server ,AMS ),( FirstVNF_Mem + Const ) ) ) ) ),Min( Min( Max( ( ( AMS - ARS ) * Max( DDR,AMS ) ),( Max( PN,PN ) + Min( BR ,FirstVNF_CPU ) ) ) ,Min( ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_CPU + DDR ) ) ,( Min( PN ,FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * DDR ) ) ) ) ,( ( Min( ( MDR - BR ) ,( MDR / BR ) ) - Max( ( AMS * DDR ),( FirstVNF_CPU - CRS ) ) ) / ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( DDR - ACS ) ) + ( Min( ACS ,FirstVNF_Mem_Server ) / ( CRS / FirstVNF_CPU_Server ) ) ) ) ) ) * Max( Max( Min( ( ( ( AMS - MRS ) - ( AMS * ACS ) ) - ( Min( BR ,FirstVNF_RAM_Server ) + Min( CRS ,FirstVNF_RAM_Server ) ) ) ,Max( ( Max( ARS,ACS ) + ( ARS / ACS ) ),( Min( FirstVNF_Mem_Server ,MRS ) + ( PN - RRS ) ) ) ),( ( Min( ( FirstVNF_Mem + MRS ) ,( FirstVNF_RAM_Server - DDR ) ) - ( ( PN * MDR ) * ( CRS - RRS ) ) ) + ( ( ( DDR - MDR ) / ( FirstVNF_CPU_Server - BR ) ) + Min( ( FirstVNF_CPU * BR ) ,( FirstVNF_CPU - MDR ) ) ) ) ),( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_CPU ),( MRS * Const ) ) * ( ( FirstVNF_CPU / Const ) / Max( MRS,CRS ) ) ) - Min( Min( Min( CRS ,BR ) ,Min( ACS ,Const ) ) ,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) ) ) / ( Max( ( ( Const - FirstVNF_Mem ) * Max( Const,FirstVNF_CPU_Server ) ),( Max( MDR,FirstVNF_RAM ) - Min( PN ,FirstVNF_Mem ) ) ) - ( ( ( ARS * CRS ) - ( ARS / CRS ) ) * ( ( MRS - FirstVNF_RAM ) + ( PN * FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( ( ( ( ( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / ( AMS + FirstVNF_CPU ) ) / ( ( AMS * RRS ) - Min( RRS ,PN ) ) ) * ( Max( Max( PN,FirstVNF_RAM ),( FirstVNF_Mem / DDR ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - Min( DDR ,Const ) ) ) ) + Max( ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) + ( ( CRS - BR ) - Max( BR,FirstVNF_Mem_Server ) ) ),( ( ( PN * MDR ) / ( FirstVNF_CPU * DDR ) ) * ( ( FirstVNF_RAM / FirstVNF_RAM ) + Min( CRS ,DDR ) ) ) ) ) / Min( ( ( ( ( CRS - FirstVNF_RAM ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) - Max( ( AMS - CRS ),Max( ARS,RRS ) ) ) / ( Min( ( FirstVNF_RAM_Server * DDR ) ,( PN * RRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( ARS - ACS ) ) ) ) ,( ( ( ( FirstVNF_Mem * MDR ) / ( MDR / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU - FirstVNF_CPU ) ,( ACS - AMS ) ) ) - ( Min( ( MRS - RRS ) ,Max( ARS,FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server / ARS ),( DDR * MDR ) ) ) ) ) ) + ( ( ( Max( ( ( ARS - FirstVNF_Mem ) - ( AMS / CRS ) ),( Max( PN,PN ) + ( MDR / FirstVNF_Mem_Server ) ) ) - Max( Min( ( ARS / PN ) ,( FirstVNF_RAM_Server / AMS ) ),( ( Const + BR ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) * Min( ( Max( ( DDR * DDR ),( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM_Server * MDR ) * ( FirstVNF_CPU * DDR ) ) ) ,( Max( Max( FirstVNF_CPU,MDR ),( DDR + Const ) ) + ( ( FirstVNF_CPU - ACS ) * Min( RRS ,PN ) ) ) ) ) + ( Min( ( ( ( FirstVNF_CPU + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * Max( Min( BR ,ACS ),Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ,Min( Max( ( ARS / PN ),( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ,( Min( CRS ,FirstVNF_RAM_Server ) + ( PN * RRS ) ) ) ) * Min( ( ( ( PN * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,Const ) ) * Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) ,( ( ( DDR - FirstVNF_CPU ) - Max( FirstVNF_Mem,Const ) ) - Min( ( DDR - FirstVNF_Mem_Server ) ,( DDR * FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( Min( DS ,RMSe ) + ( CS * CS ) ) + ( Max( RCSe,DS ) / ( DS / MUR ) ) ) / ( ( ( MLU - DS ) - ( CS * RCSe ) ) + Min( ( MLU - CS ) ,Min( MUC ,DS ) ) ) ) / ( Max( Max( ( DS - MLU ),Min( MUR ,RRSe ) ),Min( ( CS * CS ) ,Min( MUR ,MUR ) ) ) + Max( Min( Min( RRSe ,DS ) ,( MUR * MUC ) ),Min( Max( CS,RRSe ) ,Min( MUC ,MUM ) ) ) ) ) * Min( ( Max( ( ( DS - MLU ) - Min( MUM ,MUC ) ),Min( ( MUM + MLU ) ,( RCSe - MUR ) ) ) + ( ( Min( MUC ,RCSe ) - Max( RMSe,MUR ) ) + ( ( MUR + CS ) - ( DS * CS ) ) ) ) ,Min( Max( ( Min( MUR ,MUR ) - ( CS + CS ) ),Min( ( RRSe + RRSe ) ,( RCSe - RMSe ) ) ) ,Max( ( Max( MLU,MUC ) * Max( RRSe,MUC ) ),( ( MUC * MLU ) * ( MUM / MUR ) ) ) ) ) ),Min( ( Max( ( ( Max( CS,RMSe ) / ( MUR * RRSe ) ) - Max( ( MLU - MUC ),Min( MLU ,MUR ) ) ),( ( Min( RRSe ,RMSe ) + ( MUR - CS ) ) / Max( Min( MUR ,DS ),Max( CS,CS ) ) ) ) + ( ( Max( Max( MUR,RCSe ),Max( MUC,DS ) ) / Min( ( MUM * MUR ) ,( RRSe + MUR ) ) ) / Min( ( ( MUR * RCSe ) + ( CS - MUM ) ) ,( ( MUM + MUC ) - Min( MUR ,MLU ) ) ) ) ) ,( Min( ( Max( ( CS + RMSe ),( MUR + MUC ) ) / ( Min( RRSe ,MLU ) - ( RMSe - MLU ) ) ) ,Min( ( ( MUR - MUC ) + Min( MUR ,RCSe ) ) ,( ( RCSe * CS ) - Min( MUR ,RRSe ) ) ) ) / ( ( Max( Max( MUC,CS ),( MLU / MUC ) ) / ( ( MUR * MLU ) * Min( MUR ,MUM ) ) ) - Min( ( ( MLU + RRSe ) + Min( RMSe ,MLU ) ) ,( ( DS + MUM ) * ( DS / MUC ) ) ) ) ) ) ) * ( ( ( Max( ( ( ( CS - RMSe ) / ( RMSe + CS ) ) + Min( ( RMSe * MUR ) ,( RRSe / CS ) ) ),Min( ( ( RCSe * MUM ) / ( MLU / RRSe ) ) ,( Min( MUM ,RCSe ) + Max( RCSe,MUC ) ) ) ) / ( ( Min( Max( DS,CS ) ,Min( MUR ,MLU ) ) - ( Min( DS ,MUM ) * ( RRSe / MUM ) ) ) * Max( ( ( RMSe / CS ) * ( MUM + RMSe ) ),( Max( RMSe,RCSe ) / ( MUM + MUR ) ) ) ) ) - ( ( Min( Min( Max( MLU,RRSe ) ,( RRSe * DS ) ) ,( Max( MUR,MLU ) * ( CS - CS ) ) ) / ( Max( Min( RRSe ,MLU ),( CS - RMSe ) ) - ( ( CS / MUC ) / Min( DS ,RRSe ) ) ) ) * ( ( Max( Max( RCSe,RRSe ),Max( CS,RMSe ) ) / ( ( RCSe * MUC ) * Max( MUM,DS ) ) ) + ( ( ( MLU + RMSe ) / ( CS - CS ) ) + Min( ( MUC * DS ) ,( CS / CS ) ) ) ) ) ) * ( ( ( ( ( Max( MUR,MUR ) * ( RRSe - RCSe ) ) - ( ( RCSe - MUR ) - ( RCSe * MUC ) ) ) / ( ( Min( MUR ,RCSe ) + Min( MLU ,MUM ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ) * Max( ( ( ( DS / MUR ) / Max( RMSe,MUR ) ) / Min( Max( RMSe,MUM ) ,( MLU / MUM ) ) ),Max( ( Max( DS,RRSe ) - Min( RMSe ,MUR ) ),( Min( DS ,RCSe ) * ( MUR * CS ) ) ) ) ) / ( ( ( Max( ( RRSe + MUR ),Max( RCSe,RRSe ) ) / ( Max( RCSe,MUR ) + ( RRSe * CS ) ) ) + Max( ( ( RMSe * RRSe ) - Max( MUR,RMSe ) ),( ( MLU + RRSe ) - ( MLU * MUR ) ) ) ) / ( Max( Max( Min( MUM ,MLU ),Min( CS ,MUM ) ),Min( ( RMSe + RMSe ) ,( RMSe / CS ) ) ) * ( ( Max( MLU,MUM ) + ( RMSe / RCSe ) ) / Max( ( MUC / MUR ),Min( RMSe ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.45416666666666666, "obj2": 0.48361097065438047}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + ( Const - MDR ) ) )", "choosing": "( RMSe * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7541666666666667, "obj2": 0.21534596103623596}, {"determining": "( ( BR / FirstVNF_CPU ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUC ) / ( DS - MUR ) )", "obj1": 0.275, "obj2": 0.6681765610678607}, {"determining": "( ( ACS - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + Max( MUC,CS ) )", "obj1": 0.9270833333333334, "obj2": 0.06380496486972101}, {"determining": "( ( AMS - BR ) * Min( Max( PN,PN ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - MUR ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),MLU ) ) )", "obj1": 0.2791666666666667, "obj2": 0.6548552538933924}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "Max( Max( Min( CS ,MUC ),( MUM - RRSe ) ),( ( CS - DS ) - ( CS - RRSe ) ) )", "obj1": 0.29583333333333334, "obj2": 0.6315736324857479}, {"determining": "( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( DDR * FirstVNF_RAM ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe * RCSe ) / MUR )", "obj1": 0.3416666666666667, "obj2": 0.5871764874567117}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( MRS / PN ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.5916666666666667, "obj2": 0.34335393906622796}, {"determining": "Max( ( ACS + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( MUR + DS ) - ( CS * DS ) )", "obj1": 0.4166666666666667, "obj2": 0.5198229785256884}, {"determining": "Min( ( Const * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server * ACS ) + ARS ) )", "choosing": "( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,RMSe ) / ( MUM * ( ( DS + MLU ) - ( DS * MUR ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.552830288892515}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( ACS / DDR ) ) - ( ( FirstVNF_Mem / MRS ) / Max( MRS,CRS ) ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * MUR )", "obj1": 0.7083333333333334, "obj2": 0.2662115844056805}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / Max( ( ( FirstVNF_CPU * CRS ) - Max( RRS,FirstVNF_CPU_Server ) ),Max( ( MDR / FirstVNF_CPU ),( AMS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RMSe - ( ( RRSe + MLU ) + ( RCSe + DS ) ) ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7395833333333334, "obj2": 0.24779605533709126}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( Const * CRS ) / Const ) + Const ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * CS ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( ( CS / RMSe ) + DS ),( MLU - MUC ) ) ) )", "obj1": 0.9625, "obj2": 0.03524764764463163}, {"determining": "Max( ( ( FirstVNF_CPU * CRS ) - Max( RRS,FirstVNF_CPU_Server ) ),Max( ( MDR / FirstVNF_RAM ),( AMS * FirstVNF_RAM ) ) )", "choosing": "( ( MUR / RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.6131075630837798}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + Const ) )", "choosing": "( ( MUC * Min( RRSe ,CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) )", "obj1": 0.9104166666666667, "obj2": 0.1005415833948445}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - Max( RRSe,MUC ) ) ) / Min( MUC ,MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5398431102827566}, {"determining": "Max( ( Min( Min( Max( ( ( Max( FirstVNF_Mem,DDR ) / ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) / ( Max( Const,MRS ) - ( FirstVNF_RAM + CRS ) ) ),( ( ( MDR / MRS ) - Min( RRS ,FirstVNF_RAM_Server ) ) / ( ( BR - MRS ) - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) ,( ( Max( Max( FirstVNF_Mem,PN ),( Const * AMS ) ) - ( ( FirstVNF_CPU - MDR ) + ( Const * CRS ) ) ) - Min( Min( ( BR - CRS ) ,( FirstVNF_Mem + PN ) ) ,( ( DDR - FirstVNF_RAM ) + Min( RRS ,FirstVNF_RAM ) ) ) ) ) ,( ( ( ( Max( FirstVNF_CPU,AMS ) - Min( MRS ,Const ) ) * ( Min( DDR ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) + Max( ( ( ARS / PN ) + ( PN / MDR ) ),( Max( Const,FirstVNF_CPU ) * ( PN + MRS ) ) ) ) - ( ( Max( ( Const * FirstVNF_CPU_Server ),Min( Const ,FirstVNF_RAM ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) / Min( DDR ,BR ) ) ) * ( Min( ( FirstVNF_RAM / FirstVNF_RAM ) ,( FirstVNF_RAM_Server * CRS ) ) / ( Min( FirstVNF_RAM_Server ,CRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) ) ) * ( ( ( ( Min( ( CRS * MRS ) ,( FirstVNF_RAM_Server / DDR ) ) - Min( Max( FirstVNF_CPU_Server,DDR ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) * Min( ( Min( ACS ,FirstVNF_RAM ) - Min( ACS ,FirstVNF_Mem_Server ) ) ,Min( ( ARS / FirstVNF_RAM_Server ) ,Max( DDR,FirstVNF_CPU ) ) ) ) * ( ( Min( ( ARS / AMS ) ,Max( ARS,DDR ) ) * ( Max( ARS,FirstVNF_Mem_Server ) / Max( BR,ACS ) ) ) / ( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - Min( RRS ,BR ) ) * ( Max( FirstVNF_Mem,MDR ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) ) ) - Min( ( ( Max( ( ARS + AMS ),Min( ACS ,MRS ) ) * Max( ( PN * DDR ),( MRS * Const ) ) ) / ( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) / ( FirstVNF_Mem + DDR ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( MDR - MDR ) ) ) ) ,Max( ( Min( ( PN + ACS ) ,( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem / FirstVNF_CPU ) ,( AMS / CRS ) ) ),( ( ( MDR - AMS ) + Min( MRS ,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,PN ) ) ) ) ) ) ),( ( Max( Min( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( CRS + PN ) ) * ( ( FirstVNF_CPU + CRS ) / ( CRS / PN ) ) ) ,( ( ( CRS * FirstVNF_RAM_Server ) - ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ),( ( ( ( PN / FirstVNF_RAM_Server ) + Max( Const,ACS ) ) * Min( Min( FirstVNF_Mem ,FirstVNF_Mem ) ,( MDR + FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Const / AMS ) ) * ( ( CRS * DDR ) - ( RRS * FirstVNF_Mem_Server ) ) ) ) ) / ( Max( ( Min( ( AMS / AMS ) ,Min( ACS ,FirstVNF_Mem ) ) + ( ( FirstVNF_Mem - BR ) * ( ARS + MDR ) ) ),( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Max( MRS,Const ) ) / ( ( BR + RRS ) - Min( FirstVNF_CPU_Server ,PN ) ) ) ) + Max( ( ( Max( ACS,PN ) / Min( MDR ,MRS ) ) / ( ( FirstVNF_CPU / MDR ) / Min( Const ,ARS ) ) ),( ( ( Const * Const ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) + Max( Min( FirstVNF_RAM ,DDR ),( Const * FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Min( ( ( Max( FirstVNF_Mem,MDR ) - ( FirstVNF_CPU_Server * RRS ) ) / ( ( RRS / BR ) - ( FirstVNF_RAM + DDR ) ) ) ,( ( ( AMS / FirstVNF_CPU ) + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) / ( Min( Const ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) ) + Min( ( ( ( DDR + FirstVNF_Mem_Server ) * ( RRS / DDR ) ) / ( ( MRS + FirstVNF_CPU ) + Max( FirstVNF_RAM_Server,ACS ) ) ) ,Max( Min( Max( Const,ARS ) ,Min( CRS ,ACS ) ),( ( MRS + ARS ) * ( PN / BR ) ) ) ) ) - ( Max( Min( ( ( Const / MRS ) * ( FirstVNF_RAM / AMS ) ) ,Max( Min( FirstVNF_CPU ,MDR ),( BR / FirstVNF_RAM ) ) ),( ( Min( ARS ,RRS ) / ( PN / Const ) ) * ( ( FirstVNF_CPU_Server + PN ) * Min( ACS ,MRS ) ) ) ) - ( Min( Max( ( FirstVNF_Mem_Server - PN ),( PN + CRS ) ) ,Max( ( FirstVNF_Mem - ACS ),( BR * Const ) ) ) - ( ( ( ARS / CRS ) - ( PN / MDR ) ) + ( ( FirstVNF_CPU + RRS ) * ( ACS / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe + RMSe ) * ( RRSe + ( RCSe * MUM ) ) ),( Min( MUC ,RMSe ) / Min( ( MUM * MUR ) ,MLU ) ) )", "obj1": 0.9125, "obj2": 0.07824077351319096}], "3": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS * MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( ( BR / FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.6131075630837798}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + Min( PN ,PN ) )", "choosing": "( ( MLU - ( ( MUC * DS ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.32916666666666666, "obj2": 0.6042172953342906}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * Min( DS ,RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( ( RRSe / MLU ),( DS - MLU ) )", "obj1": 0.46041666666666664, "obj2": 0.4634209694487701}, {"determining": "( ( FirstVNF_RAM * DDR ) * ( MRS / PN ) )", "choosing": "( ( MLU / MUC ) + ( RMSe + DS ) )", "obj1": 0.60625, "obj2": 0.33751842635759166}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / RMSe ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( FirstVNF_CPU * PN ) + Min( PN ,MRS ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.32916666666666666, "obj2": 0.6042172953342906}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( ( MUR + RMSe ) / Min( RMSe ,MUR ) ) ,MUC ) - ( MUM - RRSe ) ),( ( MLU - DS ) - ( CS - RRSe ) ) )", "obj1": 0.34375, "obj2": 0.570959246494179}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Const ) ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,RMSe ) )", "obj1": 0.32708333333333334, "obj2": 0.6131075630837798}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( BR / FirstVNF_CPU ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUC ) / ( DS - MUR ) )", "obj1": 0.275, "obj2": 0.6681765610678607}, {"determining": "( ( AMS - BR ) * Min( Max( PN,PN ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - MUR ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),MLU ) ) )", "obj1": 0.2791666666666667, "obj2": 0.6548552538933924}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) )", "choosing": "Max( Max( Min( CS ,MUC ),( MUM - RRSe ) ),( ( CS - DS ) - ( CS - RRSe ) ) )", "obj1": 0.29583333333333334, "obj2": 0.6315736324857479}, {"determining": "( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( DDR * FirstVNF_RAM ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe * RCSe ) / MUR )", "obj1": 0.3416666666666667, "obj2": 0.5871764874567117}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( MRS / PN ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.5916666666666667, "obj2": 0.34335393906622796}, {"determining": "Min( ( Const * FirstVNF_CPU ) ,( ( FirstVNF_CPU_Server * ACS ) + ARS ) )", "choosing": "( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,RMSe ) / ( MUM * ( ( DS + MLU ) - ( DS * MUR ) ) ) )", "obj1": 0.3458333333333333, "obj2": 0.552830288892515}, {"determining": "Max( ( ( FirstVNF_CPU * CRS ) - Max( RRS,FirstVNF_CPU_Server ) ),Max( ( MDR / FirstVNF_RAM ),( AMS * FirstVNF_RAM ) ) )", "choosing": "( ( MUR / RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.6131075630837798}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - Max( RRSe,MUC ) ) ) / Min( MUC ,MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5398431102827566}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server + PN ) ) / ( ACS / BR ) )", "choosing": "( ( ( ( RMSe / MUM ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.42291666666666666, "obj2": 0.48575421309032535}, {"determining": "( ( AMS - BR ) * Max( Max( PN,PN ),( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),MLU ) ) )", "obj1": 0.25416666666666665, "obj2": 0.6858346283127088}, {"determining": "( ( AMS - BR ) * Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),MLU ) ) )", "obj1": 0.2791666666666667, "obj2": 0.6548552538933924}, {"determining": "Max( ( RRS + CRS ),( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,DS ) )", "obj1": 0.32708333333333334, "obj2": 0.6131075630837798}, {"determining": "Max( ( ACS + CRS ),( MRS / ( FirstVNF_CPU + ( DDR / ACS ) ) ) )", "choosing": "( ( MUR + DS ) - CS )", "obj1": 0.48333333333333334, "obj2": 0.4397611409075082}, {"determining": "( ( FirstVNF_Mem / Const ) * ( Const - MDR ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.2833333333333333, "obj2": 0.6541322215101605}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server + Const ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( RCSe,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.4125, "obj2": 0.5050758933396421}, {"determining": "( Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) * FirstVNF_RAM )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,RMSe ) )", "obj1": 0.32083333333333336, "obj2": 0.6221579603284415}, {"determining": "( ( FirstVNF_CPU / ( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) ) * ( PN + FirstVNF_CPU ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.32916666666666666, "obj2": 0.6042172953342906}, {"determining": "( MRS * Min( FirstVNF_RAM ,DDR ) )", "choosing": "Max( Max( ( ( RRSe + RRSe ) * ( DS - RCSe ) ),Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUM * RMSe ) + ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.49166666666666664, "obj2": 0.4247246469528654}, {"determining": "( ( AMS - BR ) * Max( Max( PN,PN ),MRS ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / MLU ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),MLU ) ) )", "obj1": 0.2791666666666667, "obj2": 0.6548552538933924}, {"determining": "( ( AMS - BR ) * Max( Max( PN,PN ),Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),MLU ) ) )", "obj1": 0.2791666666666667, "obj2": 0.6548552538933924}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( MRS / PN ) )", "choosing": "( ( MLU / MLU ) + ( RMSe + DS ) )", "obj1": 0.60625, "obj2": 0.33751842635759166}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( MRS / PN ) )", "choosing": "Min( Min( Min( ( MUC * DS ) ,MUR ) ,( RRSe * DS ) ) ,( CS * DS ) )", "obj1": 0.6208333333333333, "obj2": 0.32590154268454946}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( BR / FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.33125, "obj2": 0.5985027408155156}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( ( RRSe / MLU ),( DS - MLU ) )", "obj1": 0.46041666666666664, "obj2": 0.4634209694487701}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( CS - DS ) - ( CS - RRSe ) ) )", "obj1": 0.44166666666666665, "obj2": 0.47866794669932056}, {"determining": "Min( ( AMS - BR ) ,( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * Min( DS ,RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( FirstVNF_CPU / ( ( Max( ( RRS + AMS ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) ) * ( PN + FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * CS ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) / ( RMSe / DS ) ) + Max( ( ( CS / RMSe ) + DS ),( MLU - MUC ) ) ) )", "obj1": 0.45, "obj2": 0.47316792342840525}, {"determining": "( Min( ( ( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( Min( ( FirstVNF_CPU * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( ( CRS / RRS ) * Max( CRS,ACS ) ) ) )", "choosing": "Min( Min( Min( DS ,( MLU - CS ) ) ,( RRSe * DS ) ) ,( CS * DS ) )", "obj1": 0.43125, "obj2": 0.48285724480440734}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),MUR )", "obj1": 0.41875, "obj2": 0.4957229369488302}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.4979166666666667, "obj2": 0.3931647564789108}, {"determining": "( ( BR + Const ) * ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( RRSe + RMSe ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.225, "obj2": 0.7042798794762707}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.4979166666666667, "obj2": 0.3931647564789108}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.46458333333333335, "obj2": 0.45936951143409194}, {"determining": "( ( FirstVNF_CPU * PN ) + Min( PN ,MRS ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.32916666666666666, "obj2": 0.6042172953342906}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( Min( ARS ,RRS ) * MDR ) - MRS ) ),( MRS + CRS ) )", "choosing": "( ( MUM * ( ( RCSe - RMSe ) - ( ( ( MUM + CS ) / MUC ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}], "4": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS * MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server + PN ) ) / ( ACS / BR ) )", "choosing": "( ( ( ( RMSe / MUM ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.42291666666666666, "obj2": 0.48575421309032535}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( CS - DS ) - ( CS - RRSe ) ) )", "obj1": 0.44166666666666665, "obj2": 0.47866794669932056}, {"determining": "( ( FirstVNF_CPU / ( ( Max( ( RRS + AMS ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) ) * ( PN + FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * CS ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) / ( RMSe / DS ) ) + Max( ( ( CS / RMSe ) + DS ),( MLU - MUC ) ) ) )", "obj1": 0.45, "obj2": 0.47316792342840525}, {"determining": "( Min( ( ( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( Min( ( FirstVNF_CPU * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( ( CRS / RRS ) * Max( CRS,ACS ) ) ) )", "choosing": "Min( Min( Min( DS ,( MLU - CS ) ) ,( RRSe * DS ) ) ,( CS * DS ) )", "obj1": 0.43125, "obj2": 0.48285724480440734}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.4979166666666667, "obj2": 0.3931647564789108}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.4979166666666667, "obj2": 0.3931647564789108}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( Min( ARS ,RRS ) * MDR ) - MRS ) ),( MRS + CRS ) )", "choosing": "( ( MUM * ( ( RCSe - RMSe ) - ( ( ( MUM + CS ) / MUC ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( FirstVNF_RAM - DDR ) * Max( CRS,FirstVNF_Mem ) )", "choosing": "( ( Max( ( ( MUC / MUC ) + Max( MUC,MUR ) ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( ( MUM / MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.8520833333333333, "obj2": 0.14966634902277826}, {"determining": "( ( FirstVNF_RAM - DDR ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) + Max( MUC,MUR ) )", "obj1": 0.89375, "obj2": 0.08983109410100394}, {"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RRSe / MLU ),( DS - MLU ) ) / Min( RMSe ,MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6515637294542153}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Max( DDR,FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( ( RRSe / ( MUR + RMSe ) ),( DS - MLU ) )", "obj1": 0.4583333333333333, "obj2": 0.4427528671787234}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + Min( PN ,PN ) )", "choosing": "( ( MLU - ( ( MUC * DS ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.2833333333333333, "obj2": 0.6481959440216789}, {"determining": "( ( Max( DDR,ACS ) * Min( FirstVNF_CPU_Server ,PN ) ) / ( ACS / BR ) )", "choosing": "( ( ( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,MUM ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.33125, "obj2": 0.5525656711108647}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( ( FirstVNF_CPU_Server + PN ) + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.28133850485566547}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) / ( ACS / BR ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5563267657214882}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUC ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4, "obj2": 0.502412019678919}, {"determining": "Max( ( ( ( FirstVNF_Mem / Const ) * ( Const - MDR ) ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * Max( ( RCSe - RMSe ),( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.3229166666666667, "obj2": 0.5928265705689036}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.2916666666666667, "obj2": 0.5958866313199498}, {"determining": "( ( FirstVNF_CPU / ( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) ) * ( PN + FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * CS ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( ( CS / RMSe ) + DS ),( MLU - MUC ) ) ) )", "obj1": 0.45, "obj2": 0.47316792342840525}, {"determining": "( ( AMS - BR ) * Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),RCSe ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.42291666666666666, "obj2": 0.48575421309032535}, {"determining": "Min( ( ( ( ( Max( ( ( ACS / MDR ) / ( FirstVNF_CPU / ARS ) ),Max( ( DDR / FirstVNF_CPU ),( FirstVNF_RAM / CRS ) ) ) * Max( ( Min( RRS ,FirstVNF_RAM_Server ) * ( Const - MRS ) ),( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Max( ( ( PN - ARS ) - ( ACS * DDR ) ),Max( ( PN + FirstVNF_Mem ),Min( PN ,Const ) ) ) - ( ( ( FirstVNF_RAM / FirstVNF_CPU ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) * ( ( RRS * FirstVNF_Mem ) / Min( ARS ,PN ) ) ) ) ) + ( Max( ( ( ( FirstVNF_RAM_Server + ARS ) + ( PN * FirstVNF_Mem ) ) * ( ( AMS * CRS ) - Min( AMS ,ARS ) ) ),Max( ( ( RRS + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * BR ) ),( ( PN - FirstVNF_RAM ) + ( RRS - MRS ) ) ) ) / Min( Min( ( ( FirstVNF_RAM * MDR ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ,( ( BR / FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server * Const ) ) ) ,Max( ( Max( PN,FirstVNF_CPU ) * ( FirstVNF_RAM_Server / PN ) ),( Min( RRS ,MDR ) / ( CRS - Const ) ) ) ) ) ) * Min( ( Max( Min( ( Min( RRS ,DDR ) - ( AMS * CRS ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) * Min( AMS ,FirstVNF_Mem ) ) ),( ( ( FirstVNF_Mem - AMS ) * Max( FirstVNF_CPU,CRS ) ) / ( ( BR + ARS ) * ( CRS / CRS ) ) ) ) - ( Max( ( ( PN + DDR ) + Max( FirstVNF_RAM,ARS ) ),( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( AMS / FirstVNF_Mem ) ) ) - ( Min( Max( FirstVNF_Mem,FirstVNF_RAM ) ,Max( ACS,ACS ) ) * Min( ( BR - FirstVNF_RAM ) ,Max( AMS,CRS ) ) ) ) ) ,( ( ( ( ( FirstVNF_Mem + MDR ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( FirstVNF_Mem_Server + MRS ) + ( FirstVNF_RAM * MRS ) ) ) - Min( ( ( FirstVNF_CPU / AMS ) / Max( ACS,FirstVNF_CPU_Server ) ) ,Min( ( AMS / FirstVNF_RAM ) ,( AMS + RRS ) ) ) ) + Min( ( Max( ( BR * MRS ),( FirstVNF_Mem_Server + MDR ) ) / ( ( FirstVNF_CPU - BR ) + ( FirstVNF_Mem + BR ) ) ) ,Min( ( Max( FirstVNF_CPU,DDR ) / ( PN - CRS ) ) ,( Max( BR,ARS ) + ( DDR + FirstVNF_Mem_Server ) ) ) ) ) ) ) ,( Min( ( Max( ( ( Min( RRS ,FirstVNF_CPU ) * ( AMS * FirstVNF_RAM_Server ) ) + Min( Max( BR,FirstVNF_Mem ) ,Max( PN,FirstVNF_RAM ) ) ),( ( Min( FirstVNF_Mem_Server ,MDR ) * ( FirstVNF_Mem + FirstVNF_CPU ) ) * Max( Min( ARS ,AMS ),( ARS + FirstVNF_Mem ) ) ) ) - Max( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( BR * FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server - RRS ) / Min( Const ,FirstVNF_CPU_Server ) ) ),Max( Min( ( ARS + FirstVNF_CPU ) ,Max( PN,BR ) ),( ( AMS - FirstVNF_CPU_Server ) / ( BR - ARS ) ) ) ) ) ,( ( ( ( Max( CRS,MDR ) + ( AMS + MDR ) ) / Min( ( PN / ARS ) ,( AMS + Const ) ) ) / ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( Max( DDR,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / ARS ) ) ) ) * ( Max( Min( ( FirstVNF_RAM_Server + BR ) ,Max( FirstVNF_CPU_Server,PN ) ),( ( AMS + CRS ) * ( FirstVNF_RAM - DDR ) ) ) - ( Min( Min( FirstVNF_Mem_Server ,ARS ) ,( ACS * MDR ) ) / Min( ( FirstVNF_RAM + DDR ) ,Max( Const,FirstVNF_RAM ) ) ) ) ) ) - Max( ( ( ( ( Max( MRS,Const ) * ( Const + FirstVNF_Mem ) ) / Min( ( ARS * DDR ) ,( CRS + MDR ) ) ) * ( ( ( Const + MRS ) * Min( FirstVNF_CPU ,ARS ) ) - ( ( FirstVNF_CPU_Server - MRS ) * Max( MRS,DDR ) ) ) ) * ( Min( ( Min( AMS ,Const ) / Max( CRS,CRS ) ) ,Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ),( RRS * RRS ) ) ) / ( ( Min( DDR ,FirstVNF_Mem ) / Max( MRS,CRS ) ) + Max( ( FirstVNF_RAM + FirstVNF_RAM ),( FirstVNF_RAM - ACS ) ) ) ) ),( ( Max( ( Min( AMS ,AMS ) - ( FirstVNF_CPU_Server * PN ) ),Min( ( Const - ARS ) ,Max( FirstVNF_RAM,AMS ) ) ) * ( Min( ( DDR * MRS ) ,Min( ACS ,AMS ) ) - ( Max( MDR,FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server - CRS ) ) ) ) * Min( Max( ( Max( MRS,FirstVNF_Mem ) / ( CRS + AMS ) ),( Max( FirstVNF_RAM,RRS ) + ( BR - Const ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( ACS + FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - Max( BR,Const ) ) ) ) ) ) ) )", "choosing": "( ( MUM + MUM ) + Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - Max( RRSe,MUC ) ) ) / Min( MUC ,MLU ) )", "obj1": 0.3375, "obj2": 0.5303016071350961}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( MUC - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.41458333333333336, "obj2": 0.4886249816441643}, {"determining": "( ( ( Max( RRS,( ( BR / FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,MUR ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + Min( PN ,MRS ) )", "choosing": "( ( MLU - ( ( MUC * DS ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.2833333333333333, "obj2": 0.6481959440216789}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem ) * ( Const / ACS ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUC * RMSe ) * RCSe ),( MUR + MLU ) )", "obj1": 0.5875, "obj2": 0.3220306825636472}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + Min( PN ,MRS ) )", "choosing": "( ( MLU - ( ( MUC * DS ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.2833333333333333, "obj2": 0.6481959440216789}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( CS - DS ) - ( CS - RRSe ) ) )", "obj1": 0.44166666666666665, "obj2": 0.47866794669932056}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,MRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( Max( MUR,MUR ) - ( Min( RMSe ,CS ) / ( DS - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "( MRS * ( ( FirstVNF_RAM - DDR ) - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( RMSe * RMSe ) + ( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( ( MUR * MLU ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.75, "obj2": 0.18740548722432285}, {"determining": "Max( ( Min( ( AMS - BR ) ,( FirstVNF_RAM - DDR ) ) + CRS ),( MRS / ( FirstVNF_CPU + ( DDR / ACS ) ) ) )", "choosing": "( ( Min( ( ( RRSe + RRSe ) * Min( DS ,RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ) + DS ) - CS )", "obj1": 0.4791666666666667, "obj2": 0.4187019316973663}, {"determining": "Min( ( AMS - BR ) ,( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( MUR + DS ) - RCSe )", "obj1": 0.5833333333333334, "obj2": 0.34020640791567786}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( RMSe / DS ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6936332574418593}, {"determining": "( ( MDR / FirstVNF_RAM ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( ( RRSe / MLU ),( ( MUR / RMSe ) / Min( RMSe ,MUR ) ) )", "obj1": 0.9958333333333333, "obj2": 0.005103731088654079}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ( ( BR / Const ) * ( Const - MDR ) ) - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / ( Min( RMSe ,MUM ) / ( DS - MUR ) ) ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.36875, "obj2": 0.524442303945202}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_Mem_Server - RRS ) * MDR ),MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / ( MUM / MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( AMS - BR ) * ( ( ( FirstVNF_CPU * PN ) + Min( PN ,MRS ) ) - DDR ) )", "choosing": "Max( ( MLU - ( ( MUC * RMSe ) * RCSe ) ),( ( CS - DS ) - ( CS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) * ( ( MRS / PN ) - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS * ( ( MUR * RCSe ) * ( RCSe / MUC ) ) ) )", "obj1": 0.9395833333333333, "obj2": 0.06190335630135101}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.4979166666666667, "obj2": 0.3931647564789108}, {"determining": "( ( BR + Const ) * ( AMS / ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * RRSe ) )", "obj1": 0.2520833333333333, "obj2": 0.6508794356770509}, {"determining": "( ( ( PN * BR ) - FirstVNF_RAM ) / ( FirstVNF_Mem / DDR ) )", "choosing": "Min( ( MUM * Min( MLU ,RMSe ) ) ,Min( ( ( ( MLU - ( RCSe + RRSe ) ) - CS ) + ( RMSe / MUM ) ) ,( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU ) + ( MRS - FirstVNF_Mem ) ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),( ( MUC / MUC ) + Min( MUC ,MUR ) ) )", "obj1": 0.825, "obj2": 0.17811335582630183}, {"determining": "( ( ( AMS - BR ) - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( Min( ( MUC / RCSe ) ,( CS - CS ) ) + Max( MUC,MUR ) )", "obj1": 0.9458333333333333, "obj2": 0.04868526634445208}, {"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS * MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( Min( ( ( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( Min( ( FirstVNF_CPU * PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( ( CRS / RRS ) * Max( CRS,ACS ) ) ) )", "choosing": "Min( Min( Min( DS ,( MLU - CS ) ) ,( RRSe * DS ) ) ,( CS * DS ) )", "obj1": 0.43125, "obj2": 0.48285724480440734}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.4979166666666667, "obj2": 0.3931647564789108}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.4979166666666667, "obj2": 0.3931647564789108}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( Min( ARS ,RRS ) * MDR ) - MRS ) ),( MRS + CRS ) )", "choosing": "( ( MUM * ( ( RCSe - RMSe ) - ( ( ( MUM + CS ) / MUC ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( PN / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RRSe / MLU ),( DS - MLU ) ) / Min( RMSe ,MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6515637294542153}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Max( DDR,FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( ( RRSe / ( MUR + RMSe ) ),( DS - MLU ) )", "obj1": 0.4583333333333333, "obj2": 0.4427528671787234}, {"determining": "( ( Max( DDR,ACS ) * Min( FirstVNF_CPU_Server ,PN ) ) / ( ACS / BR ) )", "choosing": "( ( ( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,MUM ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.33125, "obj2": 0.5525656711108647}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) / ( ACS / BR ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5563267657214882}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUC ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4, "obj2": 0.502412019678919}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.2916666666666667, "obj2": 0.5958866313199498}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( DDR / FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - Max( RRSe,MUC ) ) ) / Min( MUC ,MLU ) )", "obj1": 0.3375, "obj2": 0.5303016071350961}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem ) * ( Const / ACS ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUC * RMSe ) * RCSe ),( MUR + MLU ) )", "obj1": 0.5875, "obj2": 0.3220306825636472}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "Min( ( AMS - BR ) ,( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( MUR + DS ) - RCSe )", "obj1": 0.5833333333333334, "obj2": 0.34020640791567786}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( RMSe / DS ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6936332574418593}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_Mem_Server - RRS ) * MDR ),MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / ( MUM / MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.4979166666666667, "obj2": 0.3931647564789108}, {"determining": "( ( BR + Const ) * ( AMS / ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * RRSe ) )", "obj1": 0.2520833333333333, "obj2": 0.6508794356770509}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( ( RRSe / MLU ),( DS - MLU ) ) / Min( RMSe ,MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6515637294542153}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.2916666666666667, "obj2": 0.5958866313199498}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( Max( FirstVNF_RAM_Server,( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) * ( FirstVNF_CPU_Server + PN ) ) / ( ACS / BR ) )", "choosing": "( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( Max( MUR,MUR ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.4395833333333333, "obj2": 0.47701180611498956}, {"determining": "( ( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) / ( ACS / BR ) )", "choosing": "( ( ( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) ,( RCSe * CS ) ) ) )", "obj1": 0.5104166666666666, "obj2": 0.37431865180515583}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - MUC ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server + PN ) ) / ( ACS / BR ) )", "choosing": "( ( ( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.33125, "obj2": 0.5525656711108647}, {"determining": "Max( ( Min( ( AMS - BR ) ,( FirstVNF_RAM / DDR ) ) + CRS ),( MRS / ( FirstVNF_CPU + ( DDR / ACS ) ) ) )", "choosing": "( ( Min( Max( ( RRSe + RRSe ),Min( DS ,RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ) + DS ) - CS )", "obj1": 0.4791666666666667, "obj2": 0.41298285252245903}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) / ( ACS / BR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS * ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) )", "obj1": 0.25833333333333336, "obj2": 0.6426260972466712}, {"determining": "( ( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server + PN ) ) / ( ACS / BR ) )", "choosing": "( ( ( ( RMSe / MUM ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5660907845932676}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server * PN ) ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( RCSe ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( MLU - CS ) )", "obj1": 0.48125, "obj2": 0.40636871484820036}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4, "obj2": 0.502412019678919}, {"determining": "( ( Max( DDR,ACS ) * ( FirstVNF_Mem + PN ) ) / ( ACS / BR ) )", "choosing": "( ( ( Min( ( ( MUM / CS ) - Min( MUM ,RRSe ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.33125, "obj2": 0.5525656711108647}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ( ( BR / Const ) * ( Const - MDR ) ) - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5563267657214882}, {"determining": "( ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) / ( ACS / BR ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.32916666666666666, "obj2": 0.5563267657214882}, {"determining": "( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server + PN ) ) / AMS )", "choosing": "( ( ( Min( Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( CS - DS ) - ( CS - RRSe ) ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5936853535773667}, {"determining": "( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( Min( CS ,MUC ) - ( MUM - RRSe ) ),( ( CS - DS ) - ( CS - RRSe ) ) )", "obj1": 0.44583333333333336, "obj2": 0.4664083110688349}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const * DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( Max( RRSe,MUR ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.6, "obj2": 0.2912906555028959}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * CS ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( ( CS / RMSe ) + DS ),( MLU - MUC ) ) ) )", "obj1": 0.5791666666666667, "obj2": 0.3566900158428398}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.48476051293973155}, {"determining": "( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server + PN ) ) / ( ACS / BR ) )", "choosing": "( ( ( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.33125, "obj2": 0.5525656711108647}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( RMSe / DS ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6936332574418593}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.50625, "obj2": 0.3786528065805211}, {"determining": "( PN / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RRSe / MLU ),( DS - MLU ) ) / Min( RMSe ,MUR ) )", "obj1": 0.24791666666666667, "obj2": 0.6515637294542153}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( BR * ARS ) )", "choosing": "( ( MUR * ( ( CS - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( ( Max( PN,MRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( Min( RMSe ,CS ) / ( DS - MUC ) ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.63125, "obj2": 0.2832885440021676}, {"determining": "( ( AMS * ( FirstVNF_CPU + MRS ) ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( Min( ( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ,MUC ) - ( MUM - RRSe ) ),( ( CS - DS ) - ( CS - RRSe ) ) )", "obj1": 0.45416666666666666, "obj2": 0.4567584992261074}, {"determining": "( ( BR + Const ) * ( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( MUC * MUR ) )", "obj1": 0.46041666666666664, "obj2": 0.4206912423450569}], "6": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( Min( ARS ,RRS ) * MDR ) - MRS ) ),( MRS + CRS ) )", "choosing": "( ( MUM * ( ( RCSe - RMSe ) - ( ( ( MUM + CS ) / MUC ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Max( DDR,FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( ( RRSe / ( MUR + RMSe ) ),( DS - MLU ) )", "obj1": 0.4583333333333333, "obj2": 0.4427528671787234}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem ) * ( Const / ACS ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( MUC * RMSe ) * RCSe ),( MUR + MLU ) )", "obj1": 0.5875, "obj2": 0.3220306825636472}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "Min( ( AMS - BR ) ,( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( MUR + DS ) - RCSe )", "obj1": 0.5833333333333334, "obj2": 0.34020640791567786}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( RMSe / DS ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6936332574418593}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_Mem_Server - RRS ) * MDR ),MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / ( MUM / MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) / ( ACS / BR ) )", "choosing": "( ( ( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) ,( RCSe * CS ) ) ) )", "obj1": 0.5104166666666666, "obj2": 0.37431865180515583}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - MUC ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server * PN ) ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( RCSe ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( MLU - CS ) )", "obj1": 0.48125, "obj2": 0.40636871484820036}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const * DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( Max( RRSe,MUR ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.6, "obj2": 0.2912906555028959}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.48476051293973155}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( RMSe / DS ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6936332574418593}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.50625, "obj2": 0.3786528065805211}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( BR * ARS ) )", "choosing": "( ( MUR * ( ( CS - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "( ( BR + Const ) * ( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( MUC * MUR ) )", "obj1": 0.46041666666666664, "obj2": 0.4206912423450569}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( Const / FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe + MUR ) )", "obj1": 0.21875, "obj2": 0.7056452177094403}, {"determining": "Min( ( AMS - ACS ) ,( FirstVNF_RAM - DDR ) )", "choosing": "( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) + DS ) - CS )", "obj1": 0.5458333333333333, "obj2": 0.35112520645453177}, {"determining": "Min( ( AMS - BR ) ,( FirstVNF_RAM - DDR ) )", "choosing": "( ( MUR + DS ) - CS )", "obj1": 0.5833333333333334, "obj2": 0.34020640791567786}, {"determining": "( MDR / ( ACS / BR ) )", "choosing": "( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,( DS * MUR ) ),( Max( MUR,MUR ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.44166666666666665, "obj2": 0.4484104341308059}, {"determining": "( ( BR / Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.4125, "obj2": 0.46241250533211864}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,Const ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.50625, "obj2": 0.3786528065805211}, {"determining": "( ( BR + Const ) * ( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) ) )", "choosing": "( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6989764854048844}, {"determining": "Max( ( ( MRS * Min( ( ( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) ,Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( ( ( MDR - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( Min( DS ,( RMSe - CS ) ),( DS - DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.3125, "obj2": 0.5585261713540765}, {"determining": "( ( ( DDR - ACS ) * ( FirstVNF_CPU_Server + BR ) ) / AMS )", "choosing": "( ( ( MUM / CS ) - ( MUM - MUM ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4906906577959808}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUC * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server + PN ) ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( MLU - CS ) )", "obj1": 0.4791666666666667, "obj2": 0.4124123507603143}, {"determining": "( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server + PN ) ) / ( ACS / ( ( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) / ( ACS / BR ) ) ) )", "choosing": "( ( ( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ),MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.49583333333333335, "obj2": 0.3917404313071457}, {"determining": "( ( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) ) / ( ACS / BR ) )", "choosing": "( ( ( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Max( RMSe,RCSe ) ) / Max( Max( MUM,MUC ),DS ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.49583333333333335, "obj2": 0.3917404313071457}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( RMSe / DS ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MUM ,RCSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6936332574418593}, {"determining": "( FirstVNF_Mem + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC * MUC ) + ( MUR * ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - Max( RRSe,MUC ) ) ) )", "obj1": 0.375, "obj2": 0.5170562841880397}, {"determining": "Max( ( FirstVNF_CPU * CRS ),( DDR - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / RCSe ) - Min( DS ,MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS / ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) * Min( ( ( RCSe - RRSe ) / MUR ) ,CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "( ( FirstVNF_RAM + MRS ) * ( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / Max( ( RRSe / ( MUR + RMSe ) ),( DS - MLU ) ) ) ) / ( MUC * MUR ) )", "obj1": 0.4666666666666667, "obj2": 0.41722016922030347}, {"determining": "( ( BR + Const ) * ( ( AMS - BR ) * ( FirstVNF_RAM - DDR ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( MUC * MUR ) )", "obj1": 0.46041666666666664, "obj2": 0.4206912423450569}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Max( DDR,FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( ( RRSe / ( MUR + RMSe ) ),( DS - MLU ) )", "obj1": 0.4583333333333333, "obj2": 0.4427528671787234}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.28125, "obj2": 0.5821506593190047}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / MDR ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.31875, "obj2": 0.5485107979494558}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const - DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUR ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.48476051293973155}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) + Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + ( CRS + Const ) ) ) ,FirstVNF_Mem ) + ( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server + PN ) ) * ( ARS - DDR ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( CS - CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.41875, "obj2": 0.45917625202978296}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}, {"determining": "( ( Max( DDR,ACS ) * ( RRS + PN ) ) / ( ACS / BR ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( RCSe - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.366458943147615}], "7": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( Min( ARS ,RRS ) * MDR ) - MRS ) ),( MRS + CRS ) )", "choosing": "( ( MUM * ( ( RCSe - RMSe ) - ( ( ( MUM + CS ) / MUC ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( RMSe / DS ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6936332574418593}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_Mem_Server - RRS ) * MDR ),MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / ( MUM / MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.48476051293973155}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( RMSe / DS ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6936332574418593}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( BR * ARS ) )", "choosing": "( ( MUR * ( ( CS - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( Const / FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe + MUR ) )", "obj1": 0.21875, "obj2": 0.7056452177094403}, {"determining": "( ( BR / Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * ( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) ) )", "choosing": "( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6989764854048844}, {"determining": "Max( ( ( MRS * Min( ( ( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) ,Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( ( ( MDR - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( Min( DS ,( RMSe - CS ) ),( DS - DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.3125, "obj2": 0.5585261713540765}, {"determining": "( ( ( DDR - ACS ) * ( FirstVNF_CPU_Server + BR ) ) / AMS )", "choosing": "( ( ( MUM / CS ) - ( MUM - MUM ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4906906577959808}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUC * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( RMSe / DS ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MUM ,RCSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6936332574418593}, {"determining": "Max( ( FirstVNF_CPU * CRS ),( DDR - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / RCSe ) - Min( DS ,MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS / ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) * Min( ( ( RCSe - RRSe ) / MUR ) ,CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.28125, "obj2": 0.5821506593190047}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / MDR ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.31875, "obj2": 0.5485107979494558}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const - DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUR ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.48476051293973155}, {"determining": "( ( Max( DDR,ACS ) * ( RRS + PN ) ) / ( ACS / BR ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( RCSe - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( MDR - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Max( ( ( MRS * PN ) - ( ( ( ARS - DDR ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MLU - RMSe ) / MUR ) / CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Max( ( ( DDR * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) - MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( ( AMS * AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Const ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUC ,MUM ) ) ,Min( Min( CS ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.48476051293973155}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( ( RMSe / DS ),Min( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6936332574418593}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( AMS * ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / Min( MUM ,MUM ) ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_RAM - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "Max( ( RMSe / DS ),Min( ( ( CS * RMSe ) + Max( MUC,RMSe ) ) ,Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6936332574418593}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( FirstVNF_Mem_Server * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( Min( ARS ,RRS ) * MDR ) - MRS ) ),( MRS + CRS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM + CS ) / MUR ) + CS ) ) ) + Min( MUM ,MLU ) )", "obj1": 0.29375, "obj2": 0.5716556893810395}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server + BR ) ) / AMS )", "choosing": "( ( ( MUM / CS ) - Min( MUM ,MUM ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4906906577959808}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - ARS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM / CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Max( ( ( CRS / FirstVNF_RAM ) / CRS ),( MRS * ARS ) )", "choosing": "( Min( ( ( MUM / CS ) - Min( RCSe ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.30625, "obj2": 0.5657644217301425}, {"determining": "Max( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),( CRS - AMS ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / CS ) - Min( DS ,MUM ) ) - MUC ) / Min( CS ,MLU ) )", "obj1": 0.38125, "obj2": 0.49476416469864015}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - ( MUM + MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "Max( ( FirstVNF_CPU + CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - ( MUM * MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.37916666666666665, "obj2": 0.5084912245778608}, {"determining": "( ( BR + Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS * MUR ) )", "obj1": 0.21875, "obj2": 0.7056452177094403}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.25625, "obj2": 0.6078249710587131}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server + PN ) ) * ( ARS - ( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server + PN ) ) * ( ARS - DDR ) ) ) ) ) )", "choosing": "( Max( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ),( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.3645833333333333, "obj2": 0.5127664969336976}, {"determining": "( MDR / ( ACS / BR ) )", "choosing": "( Max( Min( DS ,( MLU - CS ) ),( DS - MLU ) ) / Min( RMSe ,MUR ) )", "obj1": 0.3125, "obj2": 0.5585261713540765}], "8": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.48476051293973155}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( BR * ARS ) )", "choosing": "( ( MUR * ( ( CS - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "( ( BR / Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( ( DDR - ACS ) * ( FirstVNF_CPU_Server + BR ) ) / AMS )", "choosing": "( ( ( MUM / CS ) - ( MUM - MUM ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4906906577959808}, {"determining": "Max( ( FirstVNF_CPU * CRS ),( DDR - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / RCSe ) - Min( DS ,MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS / ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) * Min( ( ( RCSe - RRSe ) / MUR ) ,CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.28125, "obj2": 0.5821506593190047}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const - DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUR ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.48476051293973155}, {"determining": "Max( ( MDR - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Max( ( ( MRS * PN ) - ( ( ( ARS - DDR ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MLU - RMSe ) / MUR ) / CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Max( ( ( DDR * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) - MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( ( AMS * AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - Const ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUC ,MUM ) ) ,Min( Min( CS ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.48476051293973155}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( AMS * ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / Min( MUM ,MUM ) ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server + BR ) ) / AMS )", "choosing": "( ( ( MUM / CS ) - Min( MUM ,MUM ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4906906577959808}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Max( ( ( CRS / FirstVNF_RAM ) / CRS ),( MRS * ARS ) )", "choosing": "( Min( ( ( MUM / CS ) - Min( RCSe ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.30625, "obj2": 0.5657644217301425}, {"determining": "Max( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),( CRS - AMS ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / CS ) - Min( DS ,MUM ) ) - MUC ) / Min( CS ,MLU ) )", "obj1": 0.38125, "obj2": 0.49476416469864015}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - ( MUM + MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "Max( ( FirstVNF_CPU + CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - ( MUM * MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.25625, "obj2": 0.6078249710587131}, {"determining": "( Max( ( MDR - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( ( MUR * ( ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) - ( ( ( MUM - CS ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.43125, "obj2": 0.4538371775219077}, {"determining": "Max( ( MDR - ( ( ( ARS - RRS ) * ( FirstVNF_RAM - DDR ) ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( MUM / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.34375, "obj2": 0.518255317574785}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( MUC / CS ) ) / ( DS * MUR ) )", "obj1": 0.2375, "obj2": 0.6159163654846452}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / MDR ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( MDR - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.3125, "obj2": 0.5474280085582036}, {"determining": "( ( FirstVNF_RAM - DDR ) * ARS )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.4666666666666667, "obj2": 0.402577494826782}, {"determining": "Max( ( FirstVNF_CPU / CRS ),Const )", "choosing": "( ( MLU - CS ) / Min( MUM ,MLU ) )", "obj1": 0.275, "obj2": 0.5950152661446548}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MUM ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Min( ( Max( Max( ( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - Max( ( ACS / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_RAM / AMS ) + ( DDR - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem - PN ) * ( BR + MDR ) ) ) ),Min( ( Min( Max( MDR,ACS ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( FirstVNF_CPU + DDR ),( RRS * FirstVNF_CPU ) ) ) ,( Min( ( ACS + FirstVNF_CPU ) ,Min( MDR ,MRS ) ) * ( ( RRS / FirstVNF_CPU_Server ) + Min( BR ,FirstVNF_Mem ) ) ) ) ),Max( Max( ( Max( Min( ACS ,ARS ),Min( BR ,FirstVNF_RAM ) ) / ( ( ACS - FirstVNF_RAM_Server ) / ( BR + FirstVNF_Mem ) ) ),( Max( Max( MRS,FirstVNF_Mem_Server ),Min( MDR ,FirstVNF_CPU_Server ) ) * ( Max( MDR,FirstVNF_RAM_Server ) + ( FirstVNF_Mem / MDR ) ) ) ),( ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - ( CRS / MDR ) ) - ( ( FirstVNF_CPU_Server / AMS ) * ( PN * DDR ) ) ) * ( ( ( ACS - PN ) * Min( MDR ,Const ) ) * ( ( PN / ACS ) / Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) ) - ( Min( ( Min( Max( Max( ACS,FirstVNF_Mem_Server ),( BR + FirstVNF_CPU ) ) ,( Max( ARS,ACS ) * ( FirstVNF_Mem_Server * Const ) ) ) + Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ,( Max( RRS,BR ) - Min( Const ,FirstVNF_RAM_Server ) ) ) ) ,( Max( ( Max( CRS,FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),Max( ( CRS * AMS ),( ARS - PN ) ) ) * ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / Min( RRS ,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU_Server + MRS ) / ( PN - MDR ) ) ) ) ) * Min( Max( ( ( ( FirstVNF_Mem + PN ) / Max( PN,RRS ) ) * ( ( DDR + MRS ) * ( DDR * ACS ) ) ),Max( ( ( FirstVNF_Mem * ARS ) - ( CRS - Const ) ),Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ,( CRS / FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU * BR ) * Min( FirstVNF_RAM ,FirstVNF_CPU ) ) / Max( Min( ARS ,FirstVNF_CPU_Server ),Max( Const,FirstVNF_Mem_Server ) ) ) * Max( Max( ( ARS * FirstVNF_RAM_Server ),Max( FirstVNF_Mem,FirstVNF_RAM ) ),( Max( CRS,AMS ) - Min( BR ,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,( ( ( ( Min( ( Min( MRS ,FirstVNF_CPU ) + Max( FirstVNF_CPU,FirstVNF_RAM ) ) ,( Min( PN ,Const ) - Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_RAM_Server + Const ) / Min( FirstVNF_CPU_Server ,DDR ) ) + ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) + Max( FirstVNF_Mem_Server,PN ) ) ) ) - ( ( Min( ( BR - CRS ) ,Max( FirstVNF_Mem_Server,CRS ) ) + ( ( DDR - DDR ) * Min( ARS ,FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_RAM + Const ) / Max( RRS,FirstVNF_RAM_Server ) ) / Min( ( MDR * FirstVNF_CPU ) ,Min( MDR ,ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_RAM - CRS ) * ( DDR * MRS ) ) + ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( CRS + FirstVNF_CPU ) ) ),Min( Min( Max( Const,AMS ) ,Min( PN ,FirstVNF_RAM ) ) ,( Max( DDR,FirstVNF_Mem ) / ( ACS * MRS ) ) ) ) / ( Min( ( ( RRS * MDR ) - Min( ARS ,AMS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - ( ( Min( FirstVNF_RAM_Server ,CRS ) - ( FirstVNF_RAM * RRS ) ) - Max( ( MDR * MRS ),( ARS - MRS ) ) ) ) ) ) * ( ( Max( ( ( ( FirstVNF_RAM / MDR ) * ( FirstVNF_Mem * AMS ) ) / ( ( FirstVNF_RAM_Server + DDR ) * ( RRS + AMS ) ) ),( ( Min( FirstVNF_RAM_Server ,ARS ) + Min( DDR ,MRS ) ) * ( Max( ARS,DDR ) / ( MDR / RRS ) ) ) ) / ( ( ( ( DDR - Const ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server / ACS ) + ( CRS * BR ) ) ) - Min( Max( Max( FirstVNF_Mem,BR ),( MRS - FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_Mem_Server ,BR ) / ( BR + BR ) ) ) ) ) / ( ( Min( Max( ( ACS * RRS ),( AMS / FirstVNF_Mem ) ) ,( Max( FirstVNF_Mem_Server,PN ) - ( CRS / MDR ) ) ) / Min( ( ( MDR + CRS ) + ( FirstVNF_RAM_Server * PN ) ) ,( Max( AMS,Const ) * ( ARS * PN ) ) ) ) + ( Max( Max( Max( MRS,AMS ),( DDR * PN ) ),( ( MDR / FirstVNF_RAM_Server ) + ( ACS - FirstVNF_Mem_Server ) ) ) - ( Min( ( FirstVNF_Mem + Const ) ,( MRS - CRS ) ) * Min( ( BR * MDR ) ,( Const + MRS ) ) ) ) ) ) ) )", "choosing": "Max( Min( Min( ( Max( Max( ( ( MUC - RRSe ) * ( MUM / RMSe ) ),( Min( RRSe ,MUM ) - ( MLU * DS ) ) ),Max( Min( ( MUC + RCSe ) ,( CS / MUR ) ),( ( RMSe + DS ) / Max( MLU,RRSe ) ) ) ) + ( ( ( ( DS + DS ) * Max( DS,MUC ) ) - Min( ( RCSe * RRSe ) ,Min( RMSe ,MUM ) ) ) + ( Max( ( MUC - RRSe ),Max( MUC,RMSe ) ) / ( ( MLU * MUM ) - ( RCSe * DS ) ) ) ) ) ,Min( ( Max( ( ( RCSe / DS ) + ( RRSe / MUM ) ),Min( ( MUC - MUM ) ,( RCSe + RMSe ) ) ) * Max( Max( Min( RRSe ,MUR ),Min( MUR ,MUR ) ),( ( RCSe * CS ) + ( DS + RCSe ) ) ) ) ,( ( Max( ( MUR - RMSe ),( DS - RCSe ) ) + Min( ( DS + RMSe ) ,Min( RRSe ,MUM ) ) ) / ( ( Min( MLU ,MUC ) * Max( CS,RRSe ) ) - ( ( MUM + MUR ) * Min( RCSe ,RRSe ) ) ) ) ) ) ,( Min( ( ( ( ( CS + RMSe ) * ( MUR * MLU ) ) / ( ( MLU * MLU ) - Min( DS ,RMSe ) ) ) / ( Min( ( MUR * RMSe ) ,( CS - RRSe ) ) + ( ( RCSe * MUC ) / ( CS / MLU ) ) ) ) ,( ( Max( Max( MUR,MLU ),Max( RMSe,RRSe ) ) * ( Min( RRSe ,MLU ) - Max( DS,RCSe ) ) ) / Min( ( Max( RRSe,MUC ) + ( MLU - MLU ) ) ,Max( ( MUC + RCSe ),( MUC / MLU ) ) ) ) ) * ( Min( ( ( Min( RMSe ,DS ) / ( MUC + CS ) ) - ( ( CS / RCSe ) - ( MLU / MLU ) ) ) ,( ( ( RRSe + RMSe ) * Max( RCSe,CS ) ) / Max( Min( MUM ,RRSe ),( RMSe + MLU ) ) ) ) / Min( Max( Max( ( MUR + RMSe ),( MUM * CS ) ),( Max( DS,CS ) * Min( MUC ,RRSe ) ) ) ,Min( ( ( MUR * RCSe ) - ( MLU / MUR ) ) ,Min( ( MUC - RRSe ) ,Max( MUC,RRSe ) ) ) ) ) ) ),Min( ( ( ( ( Min( ( MUC * MUC ) ,( RRSe - DS ) ) / ( Min( RRSe ,CS ) + Max( MUC,CS ) ) ) + ( ( ( MLU - MUC ) * ( MUC + MUC ) ) / ( ( CS * MUC ) * Min( RMSe ,DS ) ) ) ) * ( ( ( ( MUR * MUC ) / ( RCSe - RCSe ) ) + Min( ( RCSe * RCSe ) ,( DS + CS ) ) ) + ( ( ( RRSe / DS ) + ( RMSe - RCSe ) ) / ( ( MUM * RCSe ) - Min( RMSe ,MUC ) ) ) ) ) - Max( ( Min( ( ( CS + RCSe ) / Max( MUC,RRSe ) ) ,( ( DS + RCSe ) / ( RRSe - DS ) ) ) + Min( ( ( RCSe * CS ) / ( RMSe / RRSe ) ) ,( Max( MLU,MUR ) * Min( MUC ,RMSe ) ) ) ),( Min( ( ( MUM - MUM ) / ( MUM - MUM ) ) ,( Max( RCSe,RCSe ) * ( RMSe - CS ) ) ) * Max( ( ( RCSe * RMSe ) * ( MUR / RRSe ) ),( ( RMSe / MUR ) * ( MUM * RCSe ) ) ) ) ) ) ,( ( ( Max( ( Max( RCSe,CS ) / ( CS * RCSe ) ),( ( CS * RCSe ) * ( RRSe + RCSe ) ) ) * ( ( Max( DS,MLU ) + ( MUM * RRSe ) ) / Max( ( MUR - RRSe ),( MUR + MUC ) ) ) ) - ( ( ( Max( DS,MUC ) / ( MUC / CS ) ) - Min( ( MUM / DS ) ,( MUR / MUR ) ) ) - Min( ( ( CS + RMSe ) / ( MUR / RRSe ) ) ,Min( Min( MUC ,MUC ) ,( MLU * MUM ) ) ) ) ) / ( ( ( ( ( MUC - MUR ) * Min( RCSe ,MUR ) ) - ( Max( MLU,MUM ) - Min( RCSe ,MUC ) ) ) / ( ( ( MUC * CS ) - ( DS + MUM ) ) * Max( ( MUM / DS ),( RMSe + CS ) ) ) ) * ( ( Max( ( MUR * MLU ),( MUC * MUC ) ) / ( ( MUM * DS ) / Min( RCSe ,DS ) ) ) - ( ( ( MUC - RRSe ) - Min( MUR ,MUC ) ) + Max( ( MUC + DS ),( RRSe / MUM ) ) ) ) ) ) ) )", "obj1": 0.6375, "obj2": 0.31263461246668334}, {"determining": "( ( BR + Const ) * ( ( BR + Const ) * ( MRS * ( FirstVNF_CPU + MRS ) ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.20833333333333334, "obj2": 0.6640935439139635}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * BR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( Min( RMSe ,MUM ) / ( DS * MUR ) ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.575, "obj2": 0.35142373461688825}, {"determining": "( Min( Const ,Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Min( MLU ,( ( RRSe + DS ) / RRSe ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( Const - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU / CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ) / Min( MUC ,MLU ) )", "obj1": 0.3729166666666667, "obj2": 0.5003684250333408}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( Const / FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe + MUR ) )", "obj1": 0.5458333333333333, "obj2": 0.38617780171889693}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( MUM / CS ) - Min( MUM ,MUM ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4906906577959808}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.25625, "obj2": 0.6078249710587131}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Max( ( ( MRS * Min( ( ( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) ,Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( ( ( MDR - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( Min( DS ,( RMSe - CS ) ),( DS - DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.29375, "obj2": 0.5680832126916088}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "( ( BR + Const ) * ( Const - FirstVNF_RAM ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.3645833333333333, "obj2": 0.511474683581223}, {"determining": "( ( BR + FirstVNF_Mem_Server ) * ( Const / FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,MUM ) / ( RRSe + MUR ) )", "obj1": 0.5458333333333333, "obj2": 0.38617780171889693}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( ( RRSe * RCSe ) / MUR ) ) )", "obj1": 0.4083333333333333, "obj2": 0.48476051293973155}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.28125, "obj2": 0.5821506593190047}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( ( MUM - RMSe ) / MUR ) + CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.35208333333333336, "obj2": 0.5174812195312677}, {"determining": "Max( ( ( CRS / FirstVNF_RAM ) / CRS ),( MRS * ARS ) )", "choosing": "( Min( ( ( MUM / CS ) - Min( RCSe ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( MLU - CS ) ) ) / Min( MUM ,MLU ) )", "obj1": 0.30625, "obj2": 0.5657644217301425}], "9": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU * CRS ),( DDR - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / RCSe ) - Min( DS ,MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.28125, "obj2": 0.5821506593190047}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - ( MUM + MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "Max( ( FirstVNF_CPU + CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - ( MUM * MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( MUC / CS ) ) / ( DS * MUR ) )", "obj1": 0.2375, "obj2": 0.6159163654846452}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / MDR ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( FirstVNF_RAM - DDR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.3125, "obj2": 0.5474280085582036}, {"determining": "Max( ( FirstVNF_CPU / CRS ),Const )", "choosing": "( ( MLU - CS ) / Min( MUM ,MLU ) )", "obj1": 0.275, "obj2": 0.5950152661446548}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * ( ( BR + Const ) * ( MRS * ( FirstVNF_CPU + MRS ) ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.20833333333333334, "obj2": 0.6640935439139635}, {"determining": "( Min( Const ,Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Min( MLU ,( ( RRSe + DS ) / RRSe ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( Const - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU / CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( ( MRS * Min( ( ( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) ) * PN ) ,Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( ( ( MDR - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( Min( DS ,( RMSe - CS ) ),( DS - DS ) ) / Min( RMSe ,MUR ) )", "obj1": 0.29375, "obj2": 0.5680832126916088}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.28125, "obj2": 0.5821506593190047}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.28125, "obj2": 0.5821506593190047}, {"determining": "( ( Max( DDR,ACS ) * ( FirstVNF_CPU_Server + BR ) ) / AMS )", "choosing": "( Max( MLU,( MUC / CS ) ) / ( DS * MUR ) )", "obj1": 0.2375, "obj2": 0.6159163654846452}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - FirstVNF_CPU ) * MDR ) - MRS ) ),( MRS / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.28125, "obj2": 0.5821506593190047}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR / Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "( ARS * Max( AMS,( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUM - CS ) ) * Max( MLU,( ( RRSe + RMSe ) * CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( DDR / CRS ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( DS + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - ( MUM + MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.30625, "obj2": 0.5628388064875263}, {"determining": "Max( ( FirstVNF_CPU / Const ),Const )", "choosing": "( ( MLU - CS ) / Min( MUM ,MLU ) )", "obj1": 0.275, "obj2": 0.5950152661446548}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.28125, "obj2": 0.5821506593190047}, {"determining": "( ( BR + Const ) * ( ( BR + Const ) * ( MRS * ( FirstVNF_CPU + MRS ) ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21666666666666667, "obj2": 0.646289549012904}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( ( ( BR * Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) ) * ARS ) )", "choosing": "( ( MUR * ( ( RCSe - RMSe ) - ( ( Min( MUM ,RMSe ) / MUR ) + CS ) ) ) / Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.5101490481774041}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR / Const ) * ( AMS * Max( ( MDR - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( Max( BR,Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RMSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) + MRS ) ) )", "choosing": "( Max( MUC,( MUC / CS ) ) / ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.25625, "obj2": 0.6057383638523216}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ) - ( MUM + MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32083333333333336, "obj2": 0.5444174914173395}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.32708333333333334, "obj2": 0.5273711446862288}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( ( MUR * ( ( ( MUM / CS ) - ( MUM + MUM ) ) - MUC ) ) / Min( MUC ,MLU ) )", "obj1": 0.30625, "obj2": 0.5628388064875263}, {"determining": "Max( ( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ),( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / MDR ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( ( MLU - CS ) / Min( MUM ,MLU ) )", "obj1": 0.275, "obj2": 0.5950152661446548}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MLU * MUR ) ) / ( DS - MUR ) )", "obj1": 0.28125, "obj2": 0.5821506593190047}, {"determining": "Max( ( FirstVNF_CPU + CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ARS,( MRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( ( DS * MUR ) + MUR ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.225, "obj2": 0.6338482446074183}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( CRS * ( AMS + MRS ) ) )", "choosing": "( Max( MLU,( MUC + CS ) ) / ( DS * MUR ) )", "obj1": 0.2375, "obj2": 0.6159163654846452}, {"determining": "Max( ( MRS / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RCSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( MUC / CS ) ) / ( DS * MUR ) )", "obj1": 0.2375, "obj2": 0.6159163654846452}, {"determining": "Max( ( ( CRS / FirstVNF_RAM ) / CRS ),( MRS * ARS ) )", "choosing": "( ( ( RMSe * RMSe ) + ( MUM * MUR ) ) / ( DS - MUR ) )", "obj1": 0.28125, "obj2": 0.5821506593190047}], "10": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / MDR ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( Min( Const ,Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Min( MLU ,( ( RRSe + DS ) / RRSe ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( Const - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU / CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - FirstVNF_CPU ) * MDR ) - MRS ) ),( MRS / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR / Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ARS * Max( AMS,( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUM - CS ) ) * Max( MLU,( ( RRSe + RMSe ) * CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( DDR / CRS ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( DS + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR / Const ) * ( AMS * Max( ( MDR - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( Max( BR,Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RMSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ),( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / MDR ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU + CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ARS,( MRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( ( DS * MUR ) + MUR ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.225, "obj2": 0.6338482446074183}, {"determining": "Max( ( MRS / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RCSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / MDR ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( FirstVNF_RAM_Server + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( MUC * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ARS * ( FirstVNF_Mem * ( FirstVNF_Mem_Server + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RRSe - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ARS * Max( AMS,( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( MLU,( MUC / CS ) ) / ( DS * MUR ) )", "obj1": 0.19375, "obj2": 0.6888763868902676}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - MRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( RMSe * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ARS,( FirstVNF_CPU - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( MLU ,( MLU - CS ) ),Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.225, "obj2": 0.6338482446074183}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR / Const ) * ( AMS * ( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.225, "obj2": 0.6338482446074183}, {"determining": "Max( ARS,( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ARS * Max( AMS,( FirstVNF_CPU + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( MLU * ( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( ( MRS * PN ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MLU ,CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * CRS )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU + CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU / FirstVNF_CPU_Server ),BR )", "choosing": "( Max( MLU,Max( Max( ( ( MUM / CS ) - Min( MUM ,MUM ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ),CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "Max( ( FirstVNF_CPU - CRS ),( PN - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MLU ) ) - MUC ),Max( RRSe,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23125, "obj2": 0.625524202079183}, {"determining": "( ( Const + Const ) * Max( ( FirstVNF_CPU / CRS ),( FirstVNF_RAM - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MUR,( ( ( DS * MUR ) + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.225, "obj2": 0.6338482446074183}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.6587380962008249}], "11": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( MLU,( MUC / CS ) ) / ( DS * MUR ) )", "obj1": 0.19375, "obj2": 0.6888763868902676}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19791666666666666, "obj2": 0.6587380962008249}, {"determining": "Max( ( ( PN / AMS ) - ( ( BR * MDR ) - MRS ) ),( MRS / ARS ) )", "choosing": "( Max( MLU,( ( Max( ( ( MUM / CS ) - Min( MUM ,MUM ) ),Max( MLU,( ( RRSe + RMSe ) - CS ) ) ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24375, "obj2": 0.607132050606327}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / RMSe ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6367034275748176}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( CRS - FirstVNF_Mem ),( MRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( ( DS * MUR ) + MUR ) / CS ) ) ) / CS ) ) / ( ( ( RRSe + RMSe ) / CS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( MUC * MUR ) )", "obj1": 0.30416666666666664, "obj2": 0.5559907516355134}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( CRS - FirstVNF_Mem ) ) + MRS ) ) )", "choosing": "( Max( MLU,( MUC / Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RCSe ) / CS ) ) ) ) ) / ( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( MUC / CS ) ) / ( DS * MUR ) )", "obj1": 0.19375, "obj2": 0.6888763868902676}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( Max( MLU,( ( RRSe + RMSe ) / CS ) ) * MUR ) )", "obj1": 0.33541666666666664, "obj2": 0.5197926889623693}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( CRS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + Min( MUM ,MUM ) ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.9979166666666667, "obj2": 0.0014720387396231472}, {"determining": "Max( ARS,( ( ARS - FirstVNF_CPU ) * MDR ) )", "choosing": "( Max( MLU,( Max( Min( MLU ,( MLU - CS ) ),Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) ) / CS ) ) / ( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) ) )", "obj1": 0.5520833333333334, "obj2": 0.3731146366983376}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( ( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24375, "obj2": 0.607132050606327}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU ) + ( CRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( ( DS * MUR ) + MUR ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.50625, "obj2": 0.398829245418997}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - MRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( RMSe * MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.5264344573297703}, {"determining": "Max( ( Max( ( MDR - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( MRS + ARS ) ) / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MUR - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.20833333333333334, "obj2": 0.6559653027577586}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / DS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.22708333333333333, "obj2": 0.6238870833280177}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,Min( ACS ,RRS ) ) + ( Min( ( FirstVNF_Mem * MDR ) ,Min( AMS ,ARS ) ) - Const ) )", "choosing": "( Min( MUM ,( CS - RRSe ) ) + ( ( MUM + MUC ) + ( ( MLU - MUM ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + Const ) * ( AMS * ( BR / Const ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) ) ) / ( DS * MUR ) )", "obj1": 0.225, "obj2": 0.6314022753358126}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( Max( DS,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "( ( BR + Const ) * ( AMS * ( Max( ARS,( FirstVNF_CPU - FirstVNF_Mem ) ) + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) * MUR ) )", "obj1": 0.2875, "obj2": 0.5714024217476013}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU ) * CRS )", "choosing": "( Max( MLU,( Max( ( ( ( MUC + MUR ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.5, "obj2": 0.4006031815573738}, {"determining": "( ( FirstVNF_RAM - FirstVNF_CPU ) + ( CRS * FirstVNF_Mem ) )", "choosing": "( ( MUC + MUC ) + ( MUC + MUR ) )", "obj1": 0.6166666666666667, "obj2": 0.3255857758978875}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( ( CRS - FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( DS ,( MUC - CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6641207366790493}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.21041666666666667, "obj2": 0.6486471372195021}, {"determining": "( ( ( PN * ( Const / DDR ) ) / MDR ) - ( Min( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) ,FirstVNF_Mem ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.43753168056667446}, {"determining": "( ( BR * FirstVNF_CPU ) - ( ( Min( BR ,CRS ) - FirstVNF_Mem ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( ( Max( MUM,DS ) * Min( MUC ,DS ) ) / Max( Min( DS ,MUC ),( MLU / DS ) ) ) + ( ( Max( MLU,MUR ) + Min( MLU ,RRSe ) ) + ( Min( MUM ,RRSe ) * ( MLU / CS ) ) ) ) - ( ( ( ( MUR * MUR ) + Max( RMSe,RRSe ) ) * Max( ( RCSe * CS ),( MUM * RMSe ) ) ) - ( ( ( RMSe - CS ) - ( RCSe * MUC ) ) * Min( ( MLU + RRSe ) ,( MUM - MUR ) ) ) ) ) / Min( Min( Max( ( ( DS * RRSe ) - Min( MUM ,MLU ) ),( ( MUC - MUC ) / Max( MUR,MUM ) ) ) ,( ( ( CS / MUM ) / Max( MUR,MUM ) ) - Max( Min( RRSe ,MLU ),Max( RRSe,MUR ) ) ) ) ,Max( ( Max( ( MUC / MUM ),( MUM * DS ) ) + ( ( MUM / RCSe ) / ( MUC * DS ) ) ),( Min( ( MLU * RCSe ) ,( MUM / MUM ) ) / Min( Min( DS ,CS ) ,( RCSe - CS ) ) ) ) ) ) + Max( ( ( Max( ( ( RCSe - RMSe ) / ( MUM + CS ) ),( ( RMSe / RCSe ) / ( RMSe + CS ) ) ) + ( ( ( RRSe - DS ) / ( CS * DS ) ) + ( Min( MUR ,MUC ) + Min( CS ,MUR ) ) ) ) / ( ( ( Max( MUR,DS ) * Min( MUM ,MUM ) ) * ( Max( CS,CS ) - ( RRSe + MUR ) ) ) + ( Max( Min( MUM ,RRSe ),Min( RRSe ,CS ) ) * Min( ( MUC + MLU ) ,Max( MUR,MUM ) ) ) ) ),( ( ( ( Min( RMSe ,RCSe ) * Max( DS,RCSe ) ) / ( Max( MLU,DS ) / ( CS * MUM ) ) ) - Min( ( ( MLU + MUC ) * Min( RCSe ,MLU ) ) ,( Min( CS ,MUC ) / ( MLU * MUC ) ) ) ) - Max( ( Min( Max( RRSe,CS ) ,( RCSe * CS ) ) / Min( ( RRSe + MLU ) ,( MUC + MUM ) ) ),( ( Max( MUR,CS ) * Max( RMSe,MLU ) ) + ( ( RMSe / MLU ) * ( DS + MUC ) ) ) ) ) ) ) + Max( ( Min( ( Min( ( ( MUR * MLU ) + Max( RRSe,MUM ) ) ,Max( ( DS + RCSe ),( MLU / DS ) ) ) + ( ( Max( CS,DS ) * Max( MUR,MLU ) ) + ( ( MUM + MUR ) + Max( CS,RMSe ) ) ) ) ,( ( ( ( MLU + RMSe ) * ( RRSe - MUC ) ) + ( ( MUR * RCSe ) + ( MUC / MLU ) ) ) * ( ( Min( RRSe ,CS ) * Max( DS,DS ) ) * ( ( MLU - RMSe ) / Max( RCSe,MUC ) ) ) ) ) - ( Max( ( ( Min( RMSe ,MLU ) / ( RRSe * CS ) ) / Max( Min( MUR ,MUR ),( CS + CS ) ) ),( Min( ( RMSe + CS ) ,( CS - RMSe ) ) * Max( ( MUC / MUM ),( MUR - DS ) ) ) ) / ( ( ( ( DS + MUR ) * ( CS + CS ) ) * ( ( CS + RRSe ) / ( MUC - MUR ) ) ) * Max( Max( ( RCSe / MUC ),Max( RCSe,DS ) ),Max( ( MUR - RRSe ),Min( RRSe ,MUC ) ) ) ) ) ),( ( Max( ( Min( ( RRSe + RMSe ) ,( RCSe * MUM ) ) + Min( ( MLU - MUC ) ,Max( MUM,MLU ) ) ),( ( ( CS * CS ) / Min( RCSe ,MUM ) ) - Max( ( CS / RRSe ),( RRSe + RRSe ) ) ) ) * ( ( ( ( MUR * MLU ) / ( RMSe * RMSe ) ) - ( ( CS - CS ) / Min( MUC ,MUM ) ) ) / Max( ( ( DS + RMSe ) + ( RCSe - RMSe ) ),Min( ( DS + CS ) ,( CS - MLU ) ) ) ) ) - ( Max( ( ( Min( RCSe ,MUR ) * ( CS - RMSe ) ) * Max( Min( MLU ,RMSe ),( RRSe * MUR ) ) ),( Max( Max( MLU,MLU ),( RRSe - RMSe ) ) * Min( ( MUC / RRSe ) ,( MLU + MLU ) ) ) ) + ( ( Max( ( CS + RCSe ),( MLU * MUM ) ) - ( ( RMSe / RCSe ) + ( CS - CS ) ) ) - Max( ( ( RCSe - RCSe ) * ( DS + CS ) ),( ( RMSe * MUR ) + ( MLU + CS ) ) ) ) ) ) ) )", "obj1": 0.84375, "obj2": 0.14514571665162354}, {"determining": "Max( ( ( FirstVNF_Mem / ( MRS * ARS ) ) / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ),( Max( Min( DS ,( MLU - Min( DS ,( MUC - CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23541666666666666, "obj2": 0.6153432239990068}, {"determining": "Max( ( ( FirstVNF_Mem / ( Min( AMS ,AMS ) + Min( CRS ,Const ) ) ) / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,( ( DS + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23333333333333334, "obj2": 0.6224321319550744}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + ( AMS * ( FirstVNF_CPU + MRS ) ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( ( RRSe + RMSe ) + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.2520833333333333, "obj2": 0.5926947139696328}, {"determining": "( ( Const + Const ) * ( PN - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),( ( RRSe + RMSe ) / CS ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Max( ( ( ( FirstVNF_Mem - FirstVNF_Mem ) + ( FirstVNF_Mem_Server - DDR ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ACS + FirstVNF_CPU_Server ) ) ),( ( ( DDR / BR ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) + ( ARS * ACS ) ) ) ) ,Max( ( ( ( FirstVNF_CPU / FirstVNF_RAM ) * ( DDR + RRS ) ) + ( ( ACS + MRS ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ),( ( ( ACS - FirstVNF_CPU ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( Min( ARS ,MRS ) / ( FirstVNF_RAM / AMS ) ) ) ) ) - Min( ( ( Max( ( AMS / ACS ),Min( AMS ,Const ) ) / ( ( DDR + Const ) + Max( BR,ARS ) ) ) + ( ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ACS * ACS ) ) + Min( ( ACS + ACS ) ,Min( FirstVNF_RAM ,FirstVNF_RAM ) ) ) ) ,Max( Max( ( ( BR + RRS ) + Max( Const,MDR ) ),Min( Min( FirstVNF_RAM ,MRS ) ,( PN + CRS ) ) ),( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / Max( ACS,AMS ) ) * ( Min( DDR ,FirstVNF_Mem ) * ( PN / MRS ) ) ) ) ) ),( ( Min( ( ( ( Const + ARS ) + Max( ARS,Const ) ) * ( Max( AMS,Const ) - ( MDR + MDR ) ) ) ,( Min( ( FirstVNF_Mem / BR ) ,( MRS + ACS ) ) - Min( Max( ACS,BR ) ,( BR - RRS ) ) ) ) + ( ( ( ( FirstVNF_Mem - CRS ) - ( RRS - FirstVNF_Mem_Server ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( MDR * FirstVNF_RAM ) ) ) / Max( Min( Max( BR,MRS ) ,Max( FirstVNF_RAM_Server,Const ) ),( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( DDR - MRS ) ) ) ) ) + Max( ( Min( ( Min( Const ,BR ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( AMS - MDR ) - ( FirstVNF_CPU_Server - ACS ) ) ) - ( Min( ( CRS / FirstVNF_CPU ) ,( FirstVNF_RAM + CRS ) ) * Min( ( BR * RRS ) ,Min( FirstVNF_CPU ,MDR ) ) ) ),( ( Max( Max( FirstVNF_RAM,PN ),( AMS / FirstVNF_CPU ) ) / Min( ( FirstVNF_RAM - RRS ) ,( BR - FirstVNF_RAM_Server ) ) ) - Max( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),Max( FirstVNF_Mem_Server,CRS ) ),( ( MDR - DDR ) * ( BR * FirstVNF_CPU ) ) ) ) ) ) ) + ( ( Max( ( Max( Min( ( AMS / PN ) ,( RRS - FirstVNF_CPU_Server ) ),Min( ( Const + MDR ) ,( CRS * CRS ) ) ) - ( ( ( BR + CRS ) - ( ACS + FirstVNF_RAM_Server ) ) / ( Max( DDR,FirstVNF_CPU ) + Min( FirstVNF_RAM ,RRS ) ) ) ),( ( ( ( Const + FirstVNF_RAM_Server ) - Max( MDR,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( ACS + ACS ) ) ) + ( Min( ( FirstVNF_RAM * PN ) ,Min( CRS ,CRS ) ) - Min( Max( BR,ARS ) ,( FirstVNF_RAM_Server + CRS ) ) ) ) ) / ( Min( ( ( ( FirstVNF_Mem_Server - ACS ) + ( RRS / PN ) ) / Min( ( RRS / BR ) ,( MDR / MDR ) ) ) ,( ( ( PN + FirstVNF_RAM ) / ( FirstVNF_CPU_Server - ACS ) ) * Min( ( BR * FirstVNF_CPU_Server ) ,( FirstVNF_Mem - MDR ) ) ) ) / ( ( ( Max( BR,FirstVNF_RAM_Server ) / ( FirstVNF_RAM - Const ) ) - ( Max( AMS,DDR ) - ( MDR / MDR ) ) ) * Max( Min( ( FirstVNF_CPU / MDR ) ,( MRS - DDR ) ),( ( FirstVNF_CPU_Server * ACS ) * ( Const + FirstVNF_Mem ) ) ) ) ) ) - ( ( ( ( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem_Server,MDR ) ) * Min( ( ACS * BR ) ,( DDR * BR ) ) ) / ( Max( ( MRS / BR ),( DDR - FirstVNF_CPU_Server ) ) / Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_Mem + BR ) ) ) ) / ( ( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU / BR ) ) / ( ( Const - BR ) + ( AMS / RRS ) ) ) / ( Max( ( Const - PN ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) + ( ( FirstVNF_Mem * Const ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) ) + Min( Min( ( Max( ( Const * FirstVNF_RAM ),( DDR / FirstVNF_CPU_Server ) ) * Min( Min( FirstVNF_RAM_Server ,AMS ) ,Min( FirstVNF_RAM_Server ,MDR ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) + Min( MDR ,Const ) ),Min( Max( AMS,FirstVNF_CPU_Server ) ,( Const * CRS ) ) ) ) ,Min( Min( Max( Min( BR ,MDR ),( FirstVNF_CPU / FirstVNF_RAM ) ) ,( ( FirstVNF_CPU / RRS ) + ( DDR * ARS ) ) ) ,( ( Max( MRS,FirstVNF_Mem ) / ( FirstVNF_CPU_Server - MDR ) ) * Max( ( MRS / FirstVNF_Mem ),( FirstVNF_Mem_Server * ARS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( Max( ( ( Min( Min( MUR ,MLU ) ,( RCSe - CS ) ) + Max( ( MUM - RMSe ),( MUC + MUC ) ) ) - ( ( ( RRSe / CS ) - ( RRSe - RCSe ) ) + Min( ( MUM + CS ) ,( CS / RMSe ) ) ) ),( ( ( Max( RMSe,RRSe ) * ( RCSe - MUR ) ) + ( Min( CS ,MUM ) * ( MUC / RMSe ) ) ) - ( ( Max( MUC,MLU ) + ( RCSe / RCSe ) ) + ( ( MLU - MUR ) * ( MUM * MLU ) ) ) ) ) / ( ( ( Max( ( MUC + MUC ),( MUM + RMSe ) ) * ( Min( MUC ,RRSe ) / Max( CS,MUM ) ) ) + Max( ( ( MLU + MUR ) * Max( MUC,CS ) ),( ( RRSe + CS ) + ( DS - MUC ) ) ) ) - ( ( ( Max( RMSe,RCSe ) - ( RMSe - RRSe ) ) * ( Min( DS ,RCSe ) * ( MUC * CS ) ) ) * ( Min( ( RMSe + MUR ) ,( MUC + MUR ) ) * ( Min( MUM ,DS ) * ( RRSe * MUR ) ) ) ) ) ) * ( ( ( ( Min( Max( MLU,MUM ) ,Min( RRSe ,MUR ) ) / Min( Min( MUR ,RMSe ) ,( MUM - MUR ) ) ) / Min( Min( ( RRSe - DS ) ,( MLU + CS ) ) ,Min( ( MUM * RCSe ) ,Max( MUC,MUM ) ) ) ) - ( Max( ( Min( CS ,MLU ) * ( MUR / RRSe ) ),( Max( RRSe,RRSe ) / Max( RMSe,MUC ) ) ) - Min( Max( Max( DS,MLU ),Min( MLU ,CS ) ) ,( Max( MUR,CS ) / ( MUR * MUC ) ) ) ) ) + ( ( ( ( Max( MLU,CS ) + ( MUR / MUC ) ) - ( Min( RCSe ,DS ) + ( MUR * MUC ) ) ) + ( ( Max( RRSe,DS ) / Max( MUR,MUC ) ) - Max( ( DS * RMSe ),( MUC - RRSe ) ) ) ) + ( ( ( ( MUR * MUC ) + Max( MUC,MUR ) ) * Max( ( MLU * MUC ),( MUM * MUM ) ) ) - Max( Max( ( MUR + MUC ),( RCSe * MLU ) ),( Max( MUC,RRSe ) + ( CS - CS ) ) ) ) ) ) ),Min( ( ( ( ( ( ( MUC - RCSe ) + Max( MUR,RRSe ) ) + Max( ( MUR + CS ),( RCSe - CS ) ) ) - Max( ( ( RCSe / MUM ) * ( MUR + MUC ) ),( Min( CS ,DS ) * ( RRSe + MUC ) ) ) ) - ( Min( Max( ( RRSe / RRSe ),( RCSe / RRSe ) ) ,( Min( MUR ,RCSe ) - Max( RRSe,CS ) ) ) + Min( Max( Max( DS,RRSe ),Min( MUR ,MUC ) ) ,Min( Min( MLU ,MUC ) ,( RMSe / MLU ) ) ) ) ) / ( Max( Max( Min( Min( RRSe ,MLU ) ,Max( RCSe,RCSe ) ),( Max( RCSe,MUR ) + Max( DS,CS ) ) ),( ( Min( DS ,RCSe ) * ( MLU * MLU ) ) + ( Max( RCSe,MUM ) / Max( MLU,MUM ) ) ) ) / ( Max( ( ( MUM - MUC ) * ( MUM * MUC ) ),( Max( MUC,MLU ) + ( DS - DS ) ) ) + ( ( Max( RRSe,MUR ) - ( RCSe * MUC ) ) - Min( ( MUC * MUR ) ,Min( DS ,RMSe ) ) ) ) ) ) ,Max( Max( Max( Min( ( ( RRSe + DS ) * Min( RMSe ,RMSe ) ) ,Min( ( MLU / RCSe ) ,Min( CS ,MUM ) ) ),( ( Max( DS,MUM ) * Max( DS,RRSe ) ) / ( ( DS - RCSe ) / ( DS / MLU ) ) ) ),Max( ( ( ( MUM / RCSe ) + Min( RCSe ,MUM ) ) * Min( ( RCSe * RRSe ) ,( MUR - RCSe ) ) ),( Max( Min( RRSe ,DS ),( DS * RRSe ) ) / Max( Min( RRSe ,RMSe ),( RRSe / MUM ) ) ) ) ),( ( ( Min( ( MUC * CS ) ,( RRSe - MUC ) ) - Min( Max( MUR,MUC ) ,( RMSe - RCSe ) ) ) + ( Max( ( DS - MLU ),( MLU + MLU ) ) * Max( ( DS - MUM ),( CS - MUC ) ) ) ) * Min( Min( ( Max( RRSe,CS ) / ( DS - RRSe ) ) ,( Max( RMSe,MUC ) * Min( CS ,MUC ) ) ) ,( Min( Max( MUM,MUC ) ,Min( RCSe ,RRSe ) ) + Min( ( RCSe + RCSe ) ,Min( MUC ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.91875, "obj2": 0.07740231847181511}], "12": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( ( PN / AMS ) - ( ( BR * MDR ) - MRS ) ),( MRS / ARS ) )", "choosing": "( Max( MLU,( ( Max( ( ( MUM / CS ) - Min( MUM ,MUM ) ),Max( MLU,( ( RRSe + RMSe ) - CS ) ) ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24375, "obj2": 0.607132050606327}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / RMSe ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6367034275748176}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( ( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24375, "obj2": 0.607132050606327}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / DS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + FirstVNF_CPU ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.22708333333333333, "obj2": 0.6238870833280177}, {"determining": "( ( BR + Const ) * ( AMS * ( BR / Const ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) ) ) / ( DS * MUR ) )", "obj1": 0.225, "obj2": 0.6314022753358126}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( Max( DS,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "( ( BR + Const ) * ( AMS * ( Max( ARS,( FirstVNF_CPU - FirstVNF_Mem ) ) + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) * MUR ) )", "obj1": 0.2875, "obj2": 0.5714024217476013}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.21041666666666667, "obj2": 0.6486471372195021}, {"determining": "Max( ( ( FirstVNF_Mem / ( MRS * ARS ) ) / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ),( Max( Min( DS ,( MLU - Min( DS ,( MUC - CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23541666666666666, "obj2": 0.6153432239990068}, {"determining": "( ( BR + Const ) * ( AMS * ( FirstVNF_CPU + ( AMS * ( FirstVNF_CPU + MRS ) ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( ( RRSe + RMSe ) + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.2520833333333333, "obj2": 0.5926947139696328}, {"determining": "Max( ARS,( ( ARS - FirstVNF_CPU ) * MDR ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - MRS ) * Max( FirstVNF_CPU_Server,( MRS - FirstVNF_Mem ) ) ) - MRS ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( ( Max( Min( CS ,CS ),Max( MLU,Min( ( RRSe + RMSe ) ,CS ) ) ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24375, "obj2": 0.607132050606327}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * FirstVNF_CPU ) )", "choosing": "( Max( MLU,( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "( ( BR + Const ) * ( AMS * ( Max( ARS,( ( BR * MDR ) - MRS ) ) + MRS ) ) )", "choosing": "( Max( MLU,( ( Max( ( ( MUM / CS ) - Min( MUM ,MUM ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) / CS ) ) / ( Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) * MUR ) )", "obj1": 0.26458333333333334, "obj2": 0.5911353533907846}, {"determining": "Max( ( ( PN * AMS ) - ( ( BR * MDR ) - MRS ) ),( MRS / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) * MUR ) )", "obj1": 0.2875, "obj2": 0.5714024217476013}, {"determining": "( ( BR + Const ) * ( AMS * ( Max( ARS,( FirstVNF_CPU - FirstVNF_Mem ) ) + MRS ) ) )", "choosing": "( Max( MLU,( ( Max( ( ( MUM / CS ) - Min( MUM ,MUM ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24375, "obj2": 0.607132050606327}, {"determining": "Max( ( ( PN * AMS ) - ( CRS * FirstVNF_Mem ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( ( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + CS ) / CS ) ) ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24375, "obj2": 0.607132050606327}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( ( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24375, "obj2": 0.607132050606327}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),FirstVNF_CPU )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6367034275748176}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( MLU,( Max( ( ( ( MUM / MUM ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( MUC * MUR ) )", "obj1": 0.3020833333333333, "obj2": 0.5668107600121965}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - FirstVNF_RAM_Server ) ),FirstVNF_Mem )", "choosing": "( Max( MLU,( ( Max( Min( Min( MLU ,CS ) ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24375, "obj2": 0.607132050606327}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( ( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24375, "obj2": 0.607132050606327}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - AMS ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( AMS * ( BR / Const ) ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) ) / ( DS * MUR ) )", "obj1": 0.1875, "obj2": 0.6821094575586255}, {"determining": "( ( BR + Const ) * ( AMS * ( BR / Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) ) ) / ( DS * MUR ) )", "obj1": 0.225, "obj2": 0.6314022753358126}, {"determining": "( ( BR + PN ) * ( AMS * ( BR / Const ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU + CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) ) ) / ( DS * MUR ) )", "obj1": 0.225, "obj2": 0.6314022753358126}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6367034275748176}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( Min( DS ,( MLU - CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / MUR ) ) ) / CS ) ) / ( DS * CS ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "( ( BR + Const ) * ( AMS * ( Max( ARS,( MRS - FirstVNF_Mem ) ) + MRS ) ) )", "choosing": "( Max( MLU,( Max( Min( RMSe ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) * MUR ) )", "obj1": 0.2875, "obj2": 0.5714024217476013}, {"determining": "Max( ARS,( ( ARS - FirstVNF_CPU ) + MDR ) )", "choosing": "( Max( ( DS - ( MLU * CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * CS ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.23333333333333334, "obj2": 0.621770855789115}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6904948328299724}, {"determining": "Max( ( ( MRS * PN ) - ( ( MRS * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MLU ,CS ) ),Max( MLU,( ( RRSe + ( MLU - CS ) ) / CS ) ) ) / CS ) ) / ( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) )", "obj1": 0.28958333333333336, "obj2": 0.5680344736966968}, {"determining": "( ( BR + Const ) * ( AMS * ( ( MDR - ( ( ( ARS - RRS ) * MDR ) - MRS ) ) / Const ) ) )", "choosing": "( Max( MLU,( Max( MUR,Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) ) ) / ( DS * MUR ) )", "obj1": 0.225, "obj2": 0.6314022753358126}, {"determining": "( ( FirstVNF_Mem + Const ) * ( AMS * ( BR / Const ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( MLU + RMSe ) / CS ) ) ) / ( DS * MUR ) ) ) / ( DS * MUR ) )", "obj1": 0.1875, "obj2": 0.6821094575586255}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - MRS ) * MDR ) - MRS ) ),( MRS + ARS ) )", "choosing": "( Max( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ),( Max( Min( DS ,( MLU - Min( DS ,( MUC - CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23541666666666666, "obj2": 0.6153432239990068}, {"determining": "Max( ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( Max( MUC,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ),( Max( Min( DS ,( MLU - Min( DS ,( MUC - CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23541666666666666, "obj2": 0.6153432239990068}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ),( Max( Min( DS ,( MLU - Min( DS ,( MUC - CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23541666666666666, "obj2": 0.6153432239990068}, {"determining": "( ( BR + Const ) * ( AMS * ( ( PN * AMS ) / Const ) ) )", "choosing": "( ( ( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) / CS ) / ( DS * MUR ) )", "obj1": 0.24375, "obj2": 0.607132050606327}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * Const ) - MRS ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( ( Max( Min( DS ,MLU ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24583333333333332, "obj2": 0.6056077721039226}, {"determining": "( ( BR + Const ) * ( AMS * ( BR / Const ) ) )", "choosing": "( Max( MLU,( ( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24375, "obj2": 0.607132050606327}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) ) ) / ( DS * MUR ) )", "obj1": 0.225, "obj2": 0.6314022753358126}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.22708333333333333, "obj2": 0.6238870833280177}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21666666666666667, "obj2": 0.6440804230493868}, {"determining": "Max( ( BR / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUC ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}], "13": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / RMSe ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6367034275748176}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / DS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( Max( DS,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.21041666666666667, "obj2": 0.6486471372195021}, {"determining": "Max( ARS,( ( ARS - FirstVNF_CPU ) * MDR ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * FirstVNF_CPU ) )", "choosing": "( Max( MLU,( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "Max( ( ( PN * AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),FirstVNF_CPU )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6367034275748176}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - AMS ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6367034275748176}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( Min( DS ,( MLU - CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / MUR ) ) ) / CS ) ) / ( DS * CS ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ARS,( ( ARS - FirstVNF_CPU ) + MDR ) )", "choosing": "( Max( ( DS - ( MLU * CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * CS ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6904948328299724}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21666666666666667, "obj2": 0.6440804230493868}, {"determining": "Max( ( BR / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUC ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "( ( FirstVNF_RAM + Const ) * ( AMS * ( BR / Const ) ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.21041666666666667, "obj2": 0.6486471372195021}, {"determining": "Max( ARS,( ( ARS - FirstVNF_CPU ) * MDR ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ARS,( ( ARS + FirstVNF_CPU ) * MDR ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MUC,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21666666666666667, "obj2": 0.6440804230493868}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS - FirstVNF_Mem ) )", "choosing": "( ( MLU * ( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * FirstVNF_CPU ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( AMS * ( BR / Const ) ) ),( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) )", "choosing": "( ( Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( Min( DS ,( MLU - Min( DS ,( MUC - CS ) ) ) ) * MUR ) ) / ( DS * MUR ) )", "obj1": 0.1875, "obj2": 0.6801191138061311}, {"determining": "( ( BR + Const ) * ( AMS * ( BR / Const ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( ARS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( ( Min( DS ,( MLU - CS ) ) * Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) / CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.2125, "obj2": 0.6462483660882617}, {"determining": "Max( ( FirstVNF_CPU - CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( ( ( DS - ( MLU - CS ) ) - Max( RMSe,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "( ( BR + Const ) * ( AMS * ( ( PN * AMS ) / Const ) ) )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6367034275748176}, {"determining": "Max( ARS,( ( ARS - FirstVNF_CPU ) * MDR ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),( MLU + Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( FirstVNF_CPU + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUR ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20625, "obj2": 0.651574192849032}, {"determining": "Max( Max( ( FirstVNF_CPU / ACS ),( CRS - FirstVNF_Mem ) ),( CRS - RRS ) )", "choosing": "( ( ( DS - ( MLU - CS ) ) - Max( MLU,( ( RRSe + RMSe ) / MUM ) ) ) / ( DS * MUR ) )", "obj1": 0.21666666666666667, "obj2": 0.6440804230493868}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / CRS ),( ARS - FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( ( RRSe - RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6367034275748176}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),FirstVNF_CPU ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( ( RRSe + MLU ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21875, "obj2": 0.6401913477632721}, {"determining": "Max( ARS,( ( ARS - FirstVNF_CPU ) * MDR ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( Max( ( PN / CRS ),( CRS - FirstVNF_Mem ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - Max( RCSe,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6367034275748176}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( ( ARS - RRS ) * MDR ) )", "choosing": "( Max( MLU,Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.2125, "obj2": 0.6462483660882617}, {"determining": "Max( ( CRS / FirstVNF_CPU_Server ),( CRS / ARS ) )", "choosing": "( Max( Min( RCSe ,( MLU - Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS + MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6367034275748176}, {"determining": "Max( ( ( PN - AMS ) - ( ( ( FirstVNF_RAM_Server - RRS ) * MDR ) - MRS ) ),FirstVNF_CPU )", "choosing": "( Max( ( MUR / ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ( FirstVNF_CPU / CRS ),ARS )", "choosing": "( Max( ( DS - ( RRSe + RMSe ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.2125, "obj2": 0.6462483660882617}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( ARS,( Max( ARS,FirstVNF_CPU ) * MDR ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + CS ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "( ( BR + Const ) * ( AMS * ( BR / Const ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6445273903231126}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( CRS - ( BR + Const ) ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6367034275748176}], "14": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.21041666666666667, "obj2": 0.6486471372195021}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * FirstVNF_CPU ) )", "choosing": "( Max( MLU,( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( Min( DS ,( MLU - CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / MUR ) ) ) / CS ) ) / ( DS * CS ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "( ( FirstVNF_RAM + Const ) * ( AMS * ( BR / Const ) ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.21041666666666667, "obj2": 0.6486471372195021}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS - FirstVNF_Mem ) )", "choosing": "( ( MLU * ( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( ARS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( ( Min( DS ,( MLU - CS ) ) * Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) / CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.2125, "obj2": 0.6462483660882617}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),( MLU + Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( FirstVNF_CPU + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUR ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20625, "obj2": 0.651574192849032}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),FirstVNF_CPU ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( ( RRSe + MLU ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21875, "obj2": 0.6401913477632721}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( ( ARS - RRS ) * MDR ) )", "choosing": "( Max( MLU,Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.2125, "obj2": 0.6462483660882617}, {"determining": "Max( ( FirstVNF_CPU / CRS ),ARS )", "choosing": "( Max( ( DS - ( RRSe + RMSe ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.2125, "obj2": 0.6462483660882617}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ),( CRS / Max( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ),( CRS - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),( MLU - ( ( DS + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6304032943533895}, {"determining": "Max( Max( ( FirstVNF_CPU / ACS ),( CRS - FirstVNF_Mem ) ),( CRS - RRS ) )", "choosing": "( ( ( DS - ( MLU - CS ) ) - Max( MLU,( ( RRSe + RMSe ) / MUM ) ) ) / ( DS * MUR ) )", "obj1": 0.4979166666666667, "obj2": 0.4368685562985372}, {"determining": "Max( Max( ( FirstVNF_CPU / ACS ),( CRS - FirstVNF_Mem ) ),( CRS - RRS ) )", "choosing": "( ( ( DS - ( MLU - CS ) ) - Max( MLU,( ( RRSe + RMSe ) / MUM ) ) ) / ( DS * MUR ) )", "obj1": 0.4979166666666667, "obj2": 0.4368685562985372}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.24166666666666667, "obj2": 0.617047530246024}, {"determining": "Max( ( ( FirstVNF_CPU / CRS ) / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.2375, "obj2": 0.6200956890484111}, {"determining": "Max( ARS,( ( ARS - FirstVNF_CPU ) * MDR ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21666666666666667, "obj2": 0.6420526438422518}, {"determining": "( ( BR + Const ) * ( AMS * ( Max( ARS,( ( ARS - FirstVNF_CPU ) * MDR ) ) / Const ) ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) )", "obj1": 0.2916666666666667, "obj2": 0.5582935986928806}, {"determining": "Max( ARS,( ( ARS - FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( RRSe * MUR ) )", "obj1": 0.21041666666666667, "obj2": 0.6486471372195021}, {"determining": "Max( ( FirstVNF_CPU / CRS ),ARS )", "choosing": "( Max( ( DS - ( RRSe + RMSe ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.2125, "obj2": 0.6462483660882617}, {"determining": "( ( CRS / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + Max( AMS,DDR ) )", "choosing": "( ( ( ( RMSe - ( ( ( RMSe + ( RRSe - DS ) ) + MUR ) * CS ) ) + RMSe ) * Min( ( ( CS + Max( ( RRSe * ( MUC + RMSe ) ),( MUR / RRSe ) ) ) - RMSe ) ,CS ) ) * ( Max( ( Min( ( MUC / MUM ) ,DS ) / ( MUM + RMSe ) ),MUM ) * ( DS * MUR ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5382225158225284}, {"determining": "Max( ( FirstVNF_CPU / CRS ),Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS - ( ( DS - ( MLU - CS ) ) - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.2125, "obj2": 0.6462483660882617}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,( RRSe + RMSe ) ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20625, "obj2": 0.651574192849032}, {"determining": "Max( ( ( PN - AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20625, "obj2": 0.651574192849032}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ) - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - Max( MLU,( CS / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21458333333333332, "obj2": 0.6424749268465837}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( ( ARS - RRS ) * MDR ) )", "choosing": "( Max( MLU,Max( MLU,( ( RRSe + RMSe ) / DS ) ) ) / ( DS * MUR ) )", "obj1": 0.2125, "obj2": 0.6462483660882617}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - AMS ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) + ( DS * MUR ) )", "obj1": 0.4625, "obj2": 0.46162278146432895}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + ARS ) ) + MRS ) ) )", "choosing": "( Max( Max( DS,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.2125, "obj2": 0.6462483660882617}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( ( ( FirstVNF_RAM_Server - RRS ) * MDR ) * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / ( ( RRSe + RMSe ) / CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23333333333333334, "obj2": 0.6217969421890769}, {"determining": "Max( ( CRS / ( ( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) / ( MRS + ARS ) ) + MRS ) ),( MRS + ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) + MUC ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( ( FirstVNF_CPU / CRS ) + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.1875, "obj2": 0.6800255355680649}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( FirstVNF_CPU / Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ) / ( DS * MUR ) )", "obj1": 0.21666666666666667, "obj2": 0.6420526438422518}, {"determining": "Max( Max( ( FirstVNF_CPU / ACS ),( CRS - FirstVNF_Mem ) ),FirstVNF_Mem )", "choosing": "( ( ( DS - ( MLU - CS ) ) - Max( MLU,( ( RRSe + RMSe ) / MUM ) ) ) / ( DS * MUR ) )", "obj1": 0.49375, "obj2": 0.45365156967196035}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( RMSe,( ( RRSe + RMSe ) / CS ) ) ) / ( ( RRSe + RMSe ) * MUR ) )", "obj1": 0.31875, "obj2": 0.5520026354622679}, {"determining": "Max( ( CRS / FirstVNF_CPU_Server ),( CRS / ARS ) )", "choosing": "( Max( Min( RCSe ,( MLU - Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS + MUR ) )", "obj1": 0.37083333333333335, "obj2": 0.5025914679217612}, {"determining": "Max( ( CRS / FirstVNF_CPU_Server ),( CRS / ARS ) )", "choosing": "( Max( Min( RCSe ,( MLU - Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS + MUR ) )", "obj1": 0.37083333333333335, "obj2": 0.5025914679217612}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.21041666666666667, "obj2": 0.6486471372195021}, {"determining": "Max( ARS,( ( ARS - ( FirstVNF_CPU / CRS ) ) * MDR ) )", "choosing": "( Max( Max( MLU,( ( RRSe + RMSe ) / CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.2125, "obj2": 0.6462483660882617}, {"determining": "Max( ( ( MRS * ( PN * AMS ) ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,DS ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.21041666666666667, "obj2": 0.6486471372195021}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / MDR ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + ( DS * MUR ) ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22291666666666668, "obj2": 0.629014688202981}, {"determining": "Max( ARS,( ( ARS + FirstVNF_CPU ) * MDR ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.21666666666666667, "obj2": 0.6420526438422518}, {"determining": "( ( BR + Const ) * ( AMS * ( ARS - FirstVNF_CPU ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / DS ) ) ) / ( DS * MUR ) )", "obj1": 0.28541666666666665, "obj2": 0.6036452002444394}, {"determining": "Max( ( BR + Const ),DDR )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * RRSe ) )", "obj1": 0.18125, "obj2": 0.6856847350904242}, {"determining": "( ( BR + ( ( PN + MRS ) * ( ARS - DDR ) ) ) * ( AMS * FirstVNF_CPU ) )", "choosing": "( Max( MLU,( MUC / Min( ( RRSe + DS ) ,RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "Max( ( BR + FirstVNF_RAM_Server ),( MRS * RRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "( ( BR + Const ) * ( AMS * ( ( ( ARS - FirstVNF_CPU ) * MDR ) / Const ) ) )", "choosing": "( Max( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.25833333333333336, "obj2": 0.6083012027398365}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ),( CRS / FirstVNF_Mem ) )", "choosing": "( ( MLU + ( Max( ( ( ( CS / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.21041666666666667, "obj2": 0.6486471372195021}], "15": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * FirstVNF_CPU ) )", "choosing": "( Max( MLU,( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( Min( DS ,( MLU - CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / MUR ) ) ) / CS ) ) / ( DS * CS ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( MRS - FirstVNF_Mem ) )", "choosing": "( ( MLU * ( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),( MLU + Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( FirstVNF_CPU + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUR ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20625, "obj2": 0.651574192849032}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ),( CRS / Max( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ),( CRS - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),( MLU - ( ( DS + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6304032943533895}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,( RRSe + RMSe ) ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20625, "obj2": 0.651574192849032}, {"determining": "Max( ( ( PN - AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20625, "obj2": 0.651574192849032}, {"determining": "Max( ( CRS / ( ( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) / ( MRS + ARS ) ) + MRS ) ),( MRS + ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) + MUC ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( ( FirstVNF_CPU / CRS ) + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.1875, "obj2": 0.6800255355680649}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "( ( BR + Const ) * Max( ( FirstVNF_CPU / MDR ),( CRS - FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + ( DS * MUR ) ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22291666666666668, "obj2": 0.629014688202981}, {"determining": "( ( BR + ( ( PN + MRS ) * ( ARS - DDR ) ) ) * ( AMS * FirstVNF_CPU ) )", "choosing": "( Max( MLU,( MUC / Min( ( RRSe + DS ) ,RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "Max( ( BR + FirstVNF_RAM_Server ),( MRS * RRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "( ( BR + Const ) * ( AMS * ( ( ( ARS - FirstVNF_CPU ) * MDR ) / Const ) ) )", "choosing": "( Max( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.25833333333333336, "obj2": 0.6083012027398365}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( ( ARS - RRS ) * MDR ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * ( ( ( FirstVNF_RAM_Server - RRS ) * MDR ) * ARS ) ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,( RRSe + RMSe ) ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20625, "obj2": 0.651574192849032}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( ( ( ARS - RRS ) * MDR ) - MRS ) )", "choosing": "( Max( MLU,( Max( ( ( MUM / CS ) - Min( MUM ,( RRSe + RMSe ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23541666666666666, "obj2": 0.6152289549930211}, {"determining": "Max( ( FirstVNF_CPU / CRS ),ARS )", "choosing": "( Max( ( DS - ( RRSe + RMSe ) ),Max( MLU,( ( RRSe + DS ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.25416666666666665, "obj2": 0.6113864428797074}, {"determining": "Max( ( CRS / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * PN ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),( MLU / Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( MUC + CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_Mem_Server ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) + CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR + DDR ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( Max( ( BR + Const ),( MRS * ARS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18125, "obj2": 0.6828624056962976}, {"determining": "Max( ( ( PN - AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20625, "obj2": 0.651574192849032}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) * ( AMS * ( BR / Const ) ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( ( MUC / ( ( RRSe + DS ) / RRSe ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.23958333333333334, "obj2": 0.6152110968924178}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),FirstVNF_CPU ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "Max( ( ( PN - AMS ) - ( ( Max( ( FirstVNF_CPU / ACS ),( CRS - FirstVNF_Mem ) ) * MDR ) - MRS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( RMSe ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20625, "obj2": 0.651574192849032}, {"determining": "Max( Max( ( FirstVNF_CPU / FirstVNF_RAM ),( CRS - FirstVNF_Mem ) ),( CRS - RRS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * RMSe ) )", "obj1": 0.20625, "obj2": 0.651574192849032}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * ( ( ARS - FirstVNF_CPU ) * MDR ) ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),( ( RRSe + RMSe ) / CS ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),Max( ( ( FirstVNF_CPU / CRS ) + Const ),( MRS * ARS ) ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( MUR,Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20833333333333334, "obj2": 0.6355633709721499}, {"determining": "Max( ( ( ( ( MRS * AMS ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) / CRS ) + Const ),Max( MRS,ARS ) )", "choosing": "( ( MLU / ( ( ( RRSe + RMSe ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19375, "obj2": 0.6682696725071229}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS / MRS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe * RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( ( FirstVNF_CPU / CRS ) + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.1875, "obj2": 0.6800255355680649}, {"determining": "( ( MDR / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + Max( AMS,DDR ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.1875, "obj2": 0.6800255355680649}, {"determining": "Max( ( ( FirstVNF_CPU / CRS ) + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "( ( FirstVNF_RAM + Const ) * ( AMS * ( FirstVNF_RAM / Const ) ) )", "choosing": "( ( MLU - ( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * FirstVNF_CPU ) )", "choosing": "( Max( MLU,( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "Max( ( BR + FirstVNF_RAM_Server ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( FirstVNF_RAM + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( FirstVNF_Mem_Server + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUR + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( FirstVNF_CPU / CRS ),MDR )", "choosing": "( Max( MLU,Max( MLU,( ( ( RRSe + RMSe ) / CS ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22708333333333333, "obj2": 0.6211574235810299}, {"determining": "( ( BR + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) * ( AMS * FirstVNF_CPU ) )", "choosing": "( Max( MLU,( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,( RRSe + RMSe ) ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20625, "obj2": 0.651574192849032}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ),( CRS - Max( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ),( CRS - FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( DS - ( MLU - CS ) ),Max( MLU,( ( DS + RMSe ) / CS ) ) ) / ( DS * MUR ) )", "obj1": 0.22083333333333333, "obj2": 0.6304032943533895}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) - MRS ) ),( Const + ARS ) )", "choosing": "( Max( MLU,( MUC / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.709662600769485}], "16": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( Min( DS ,( MLU - CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / MUR ) ) ) / CS ) ) / ( DS * CS ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),( MLU + Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( FirstVNF_CPU + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUR ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( CRS / ( ( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) / ( MRS + ARS ) ) + MRS ) ),( MRS + ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) + MUC ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( BR + FirstVNF_RAM_Server ),( MRS * RRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( ( ARS - RRS ) * MDR ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * PN ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),( MLU / Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( MUC + CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_Mem_Server ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) + CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR + DDR ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( Max( ( BR + Const ),( MRS * ARS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18125, "obj2": 0.6828624056962976}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * ( ( ARS - FirstVNF_CPU ) * MDR ) ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),( ( RRSe + RMSe ) / CS ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( ( ( ( MRS * AMS ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) / CRS ) + Const ),Max( MRS,ARS ) )", "choosing": "( ( MLU / ( ( ( RRSe + RMSe ) / CS ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19375, "obj2": 0.6682696725071229}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS / MRS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe * RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( ( FirstVNF_CPU / CRS ) + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( BR + FirstVNF_RAM_Server ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( FirstVNF_Mem_Server + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUR + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( ( ( ARS - FirstVNF_CPU ) * MDR ) / Const ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( MUC - ( RRSe + RMSe ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe - RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUC ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( Max( Max( ( FirstVNF_CPU / CRS ),FirstVNF_CPU ),( CRS - FirstVNF_Mem ) ) * ARS ) )", "choosing": "( Max( MLU,( Max( Max( RRSe,Max( MLU,Max( Max( RRSe,RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),FirstVNF_CPU ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR + Const ),( ( FirstVNF_CPU / CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * RRSe ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( ( ARS - DDR ) * MDR ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * RRSe ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( CRS + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Min( Min( DS ,( MUC - CS ) ) ,Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( BR + BR ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( Max( RRSe,RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS / MRS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe * RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS + Const ),( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MLU,( Max( MLU,Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * RCSe ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( ( FirstVNF_CPU / CRS ) + Const ),( ARS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( RCSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( Max( DDR,( MRS * ARS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,Max( RRSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18125, "obj2": 0.6828624056962976}, {"determining": "Max( ( ( PN - AMS ) - ( MRS + ARS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( ( RRSe + RMSe ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6755650173991276}, {"determining": "Max( ( ( PN - AMS ) - ( Max( ( FirstVNF_CPU / CRS ),( CRS - FirstVNF_Mem ) ) * ( AMS * ( BR / Const ) ) ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / ( ( RRSe + DS ) / RRSe ) ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.689569780018996}, {"determining": "Max( ( ( PN - AMS ) - ( ( ( ARS - RRS ) * MDR ) - MRS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( ( MUC / ( ( RRSe + DS ) / RRSe ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6755650173991276}, {"determining": "Max( ( FirstVNF_CPU * CRS ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RRSe ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( BR + Const ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUR,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * RRSe ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( ( ( RRSe + RMSe ) / ( DS * MUR ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.16666666666666666, "obj2": 0.6983089628317749}, {"determining": "( ( MDR / Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) + Max( AMS,DDR ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6719384211918016}], "17": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( Min( DS ,( MLU - CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / MUR ) ) ) / CS ) ) / ( DS * CS ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),( MLU + Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( ( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) / ( MRS + ARS ) ) + MRS ) ),( MRS + ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) + MUC ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( ( ARS - RRS ) * MDR ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * PN ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),( MLU / Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( MUC + CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_Mem_Server ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) + CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( Max( ( BR + Const ),( MRS * ARS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18125, "obj2": 0.6828624056962976}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * ( ( ARS - FirstVNF_CPU ) * MDR ) ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),( ( RRSe + RMSe ) / CS ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS / MRS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe * RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( FirstVNF_Mem_Server + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUR + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( ( ( ARS - FirstVNF_CPU ) * MDR ) / Const ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( MUC - ( RRSe + RMSe ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe - RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUC ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( Max( Max( ( FirstVNF_CPU / CRS ),FirstVNF_CPU ),( CRS - FirstVNF_Mem ) ) * ARS ) )", "choosing": "( Max( MLU,( Max( Max( RRSe,Max( MLU,Max( Max( RRSe,RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),FirstVNF_CPU ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) * ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( Max( RRSe,RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS / MRS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe * RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( Max( DDR,( MRS * ARS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,Max( RRSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18125, "obj2": 0.6828624056962976}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( ( ( RRSe + RMSe ) / ( DS * MUR ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.16666666666666666, "obj2": 0.6983089628317749}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),FirstVNF_CPU ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) * CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( ( ( ARS - FirstVNF_CPU ) * MDR ) / Const ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( MUC - ( RRSe + RMSe ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( ( ( ARS - FirstVNF_CPU_Server ) * MDR ) / Const ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( MUC - ( RRSe + RMSe ) ) ) ) + CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR + Const ),Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) ,MRS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( Max( RMSe,RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MRS * RRS ),( ( CRS - DDR ) * MDR ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / Max( DS,CS ) )", "obj1": 0.17916666666666667, "obj2": 0.68425415917009}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6616014982275942}, {"determining": "Max( ( FirstVNF_CPU / CRS ),( ( ARS - RRS ) * MDR ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR + FirstVNF_RAM_Server ),( MRS * RRS ) )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,Max( RRSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18125, "obj2": 0.6828624056962976}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) - FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( ( MLU - ( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.16666666666666666, "obj2": 0.6983089628317749}, {"determining": "Max( ( BR + MDR ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RCSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( ( ( RRSe + RMSe ) / ( DS * MUR ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.16666666666666666, "obj2": 0.6983089628317749}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( Max( ( FirstVNF_Mem_Server - RRS ),FirstVNF_Mem ) - MRS ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),( MLU / ( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe - RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( BR + FirstVNF_RAM_Server ),( MRS * RRS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + DS ) / CS ),Max( MLU,Max( ( RRSe - RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( ( ( ( MRS * AMS ) - ( ( ( CRS - RRS ) * FirstVNF_Mem ) - MRS ) ) / CRS ) + Const ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),DS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( FirstVNF_RAM_Server / ( Max( ( ( MRS * FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Min( MLU ,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( Max( Max( ( FirstVNF_CPU / CRS ),FirstVNF_CPU ),( CRS - FirstVNF_Mem ) ) * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ),MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( RMSe,( Max( Max( RRSe,Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}, {"determining": "Max( Max( ( BR + Const ),( MRS * ARS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( ( ( ( MUM / CS ) - Min( MUM ,MUM ) ) - MUC ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18125, "obj2": 0.6828624056962976}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_Mem_Server ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( RRSe,Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19583333333333333, "obj2": 0.6556111273232011}], "18": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( ( ( RRSe + RMSe ) / ( DS * MUR ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.16666666666666666, "obj2": 0.6983089628317749}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MRS * RRS ),( ( CRS - DDR ) * MDR ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / Max( DS,CS ) )", "obj1": 0.17916666666666667, "obj2": 0.68425415917009}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6616014982275942}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) - FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( ( MLU - ( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.16666666666666666, "obj2": 0.6983089628317749}, {"determining": "Max( ( BR + MDR ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RCSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( ( ( RRSe + RMSe ) / ( DS * MUR ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.16666666666666666, "obj2": 0.6983089628317749}, {"determining": "Max( ( FirstVNF_RAM_Server / ( Max( ( ( MRS * FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Min( MLU ,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( Max( MLU,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),Max( MRS,ARS ) ) * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + MLU ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.1875, "obj2": 0.6641630415224334}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / RMSe ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6616014982275942}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_Mem_Server ) ),( MRS * ( MRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / ( ( RRSe + RMSe ) / CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) + CS ) ) / ( DS * MUR ) )", "obj1": 0.17708333333333334, "obj2": 0.6975445188450464}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) )", "obj1": 0.4625, "obj2": 0.48799427550828783}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RMSe + RMSe ),MLU ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( ( ( ARS - FirstVNF_CPU_Server ) * MDR ) / Const ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.2375, "obj2": 0.6295293346036487}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( MUC - ( RRSe + RMSe ) ) ) ) + CS ) ) / ( DS * MUR ) )", "obj1": 0.17708333333333334, "obj2": 0.6975445188450464}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_Mem_Server,BR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ) - ( ( ( RRS * DDR ) + Max( DDR,AMS ) ) / Min( ( ARS / MRS ) ,Min( BR ,DDR ) ) ) ) / Min( ( Max( ( FirstVNF_RAM_Server - ACS ),( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) / Max( ( MDR + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ,Min( Min( Min( RRS ,RRS ) ,( CRS + MRS ) ) ,Min( Max( ACS,DDR ) ,Max( FirstVNF_CPU,DDR ) ) ) ) ) + Min( ( ( ( Min( CRS ,BR ) - Max( FirstVNF_RAM,ACS ) ) + ( ( MDR / Const ) * ( MRS + ACS ) ) ) / ( ( ( RRS + MDR ) - Min( MDR ,MDR ) ) / Min( ( MDR * MDR ) ,( FirstVNF_RAM / FirstVNF_RAM ) ) ) ) ,( Min( ( ( ACS * FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,BR ) ) ,( Min( ARS ,Const ) * ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) + Max( Min( ( BR + FirstVNF_Mem ) ,Min( PN ,FirstVNF_RAM ) ),( ( CRS * BR ) + Max( ARS,FirstVNF_RAM ) ) ) ) ) ) / ( Max( Max( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + ( FirstVNF_Mem - FirstVNF_CPU_Server ) ),( ( MDR * CRS ) * ( FirstVNF_CPU + ARS ) ) ),( ( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) / ( Min( Const ,ACS ) / Min( ACS ,FirstVNF_RAM ) ) ) ),Min( Min( Min( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ,Min( MDR ,MDR ) ) ,( ( MRS / MDR ) / ( Const - MRS ) ) ) ,( ( ( PN - FirstVNF_CPU_Server ) + Max( ACS,FirstVNF_CPU ) ) / Min( ( FirstVNF_Mem - CRS ) ,( FirstVNF_RAM_Server / MDR ) ) ) ) ) * ( ( ( ( Max( FirstVNF_RAM_Server,CRS ) / ( PN / FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_CPU + ARS ) ,( DDR * FirstVNF_Mem ) ) ) + ( Max( ( FirstVNF_Mem / BR ),( FirstVNF_RAM / FirstVNF_Mem ) ) / ( Min( CRS ,MDR ) + ( MDR / FirstVNF_Mem_Server ) ) ) ) + Max( ( Max( ( ARS * ARS ),( ACS + FirstVNF_RAM ) ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) ),Max( ( ( ARS * FirstVNF_CPU ) + Max( FirstVNF_Mem,FirstVNF_RAM ) ),Max( ( BR + FirstVNF_RAM ),( FirstVNF_RAM + Const ) ) ) ) ) ) ) ,( Max( ( Max( ( ( Max( ACS,ARS ) + ( FirstVNF_CPU_Server - MDR ) ) + Max( ( MRS / MDR ),( FirstVNF_RAM * FirstVNF_RAM ) ) ),( ( Max( AMS,ACS ) / ( DDR + FirstVNF_Mem_Server ) ) + Min( ( MRS - AMS ) ,( BR * CRS ) ) ) ) + ( Min( Max( ( FirstVNF_RAM + FirstVNF_Mem ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,( Max( ACS,FirstVNF_CPU_Server ) / ( PN * AMS ) ) ) / ( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,( ARS - FirstVNF_Mem_Server ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ),( ( ( Min( Max( BR,PN ) ,( CRS / PN ) ) - Max( ( ARS - FirstVNF_Mem ),Min( AMS ,ACS ) ) ) / ( Min( Min( DDR ,RRS ) ,( AMS + ACS ) ) / ( ( AMS / ARS ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) / ( ( ( ( FirstVNF_CPU + Const ) - Max( MRS,MDR ) ) + ( ( FirstVNF_Mem - MRS ) + Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,Min( MDR ,ACS ) ) ) ) ) ) * ( ( ( ( ( ( Const / MDR ) - Max( AMS,PN ) ) / ( ( Const + ACS ) / ( ARS * FirstVNF_CPU ) ) ) + Max( Min( Min( Const ,CRS ) ,Max( FirstVNF_Mem_Server,ARS ) ),Max( ( BR - FirstVNF_RAM_Server ),Max( FirstVNF_Mem,CRS ) ) ) ) + ( Min( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,DDR ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * Max( CRS,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_CPU + PN ) - ( ACS - ACS ) ) - Min( Max( ACS,ACS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ) - ( ( ( Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) + Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) + Max( Max( ( DDR * Const ),( MRS * MDR ) ),Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( FirstVNF_Mem * CRS ) ) ) ) - Max( ( ( ( Const + FirstVNF_CPU ) * ( MDR * DDR ) ) - ( ( FirstVNF_Mem_Server * DDR ) + ( RRS * FirstVNF_RAM ) ) ),( ( ( BR - PN ) / ( Const + ACS ) ) + ( ( ARS * FirstVNF_CPU ) + ( BR + RRS ) ) ) ) ) ) ) )", "choosing": "( ( DS * ( MUM / RRSe ) ) + Max( RMSe,( RMSe / Max( Max( MUC,RRSe ),Min( DS ,( MUR + ( MUC - RRSe ) ) ) ) ) ) )", "obj1": 0.4666666666666667, "obj2": 0.47096268150674936}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe - RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) * MUR ) )", "obj1": 0.53125, "obj2": 0.3750548509305921}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * CS ) )", "obj1": 0.17916666666666667, "obj2": 0.68425415917009}, {"determining": "( ( Max( MRS,RRS ) - BR ) * ( ARS - Max( ACS,DDR ) ) )", "choosing": "( ( ( ( Min( Min( ( ( MUC + MUM ) / ( CS / DS ) ) ,Max( ( MUR - MUM ),( MLU + MUR ) ) ) ,( Min( ( RRSe * RRSe ) ,( MLU - RMSe ) ) - Min( Max( MUR,RRSe ) ,( RCSe + MUR ) ) ) ) * ( ( ( ( DS * RRSe ) - ( CS - MUR ) ) * Max( ( CS * RRSe ),( MUR / MUC ) ) ) / ( ( ( MUR - MUM ) * Min( MLU ,CS ) ) / ( ( RRSe - RCSe ) - ( MUR + MLU ) ) ) ) ) + ( ( ( ( ( RCSe / MUC ) - ( MLU + MUC ) ) - Max( ( RCSe / DS ),( MUR - MLU ) ) ) * ( ( ( RMSe / DS ) * ( DS / CS ) ) / Max( ( MUC * RCSe ),( MUM - MUR ) ) ) ) / Min( Min( Min( ( RMSe - RCSe ) ,Min( MUR ,RRSe ) ) ,Max( Max( MLU,MUR ),Max( MUM,MLU ) ) ) ,( Max( Max( RMSe,RMSe ),Max( RMSe,MUR ) ) - ( Min( MUR ,MUR ) / Min( RCSe ,MUC ) ) ) ) ) ) - ( Min( Min( ( ( Max( MUR,RCSe ) + ( MUR * DS ) ) / ( ( RRSe / CS ) + ( MLU / MUM ) ) ) ,( Max( Min( MUC ,MLU ),Max( MUM,RMSe ) ) * ( ( CS / MUR ) * ( RRSe / RRSe ) ) ) ) ,Min( Min( ( ( RRSe / CS ) - ( RMSe - MUM ) ) ,( Min( RRSe ,RMSe ) - ( RRSe - MUM ) ) ) ,( Max( ( RCSe * MUR ),( RCSe * CS ) ) * Max( ( RCSe - CS ),( CS + RCSe ) ) ) ) ) / ( ( ( Max( ( MLU - MLU ),Max( CS,RMSe ) ) * ( Min( RMSe ,MLU ) - ( MUR * MUR ) ) ) + ( ( ( RCSe - MUM ) / ( RRSe - RMSe ) ) * ( ( MUR / MUR ) + ( MLU / MUR ) ) ) ) - Min( ( Max( ( RCSe + RMSe ),( MUM / MUC ) ) + ( Max( CS,MLU ) + ( RCSe + RRSe ) ) ) ,Max( ( ( MUR + RRSe ) * ( RCSe * CS ) ),Max( ( RCSe + CS ),Min( MLU ,MUR ) ) ) ) ) ) ) - ( Min( ( ( Max( ( Max( RMSe,RMSe ) - ( MUC - MLU ) ),Max( ( DS - MUC ),Min( RMSe ,CS ) ) ) / Max( ( Max( RMSe,MLU ) / ( RMSe * DS ) ),Min( Max( MLU,MUR ) ,( RMSe / RMSe ) ) ) ) + Min( Max( ( ( MUR / RMSe ) + ( RCSe - CS ) ),Max( ( MUR + RRSe ),Min( MUM ,RCSe ) ) ) ,Min( ( Min( MLU ,RRSe ) - Max( MUC,CS ) ) ,( ( MUR + CS ) + Max( MUC,MUM ) ) ) ) ) ,Min( Max( ( ( Max( RCSe,MUR ) + ( RRSe * CS ) ) + ( Max( MLU,RCSe ) * ( MUC - MUR ) ) ),Min( ( Max( RMSe,MUC ) - Min( MLU ,MUM ) ) ,( Max( RCSe,DS ) + ( MUC / RMSe ) ) ) ) ,( ( ( Min( MUR ,CS ) / ( MLU / MUM ) ) / ( Max( MUM,RMSe ) * ( MUR * MLU ) ) ) / Max( ( Max( RCSe,CS ) - ( RRSe / MLU ) ),( ( MUM * RRSe ) / ( MUC * MUR ) ) ) ) ) ) / ( ( Min( ( ( ( RRSe * MUR ) + Max( MUR,RCSe ) ) / Max( ( RMSe - MUR ),Max( DS,MUM ) ) ) ,Max( ( ( MUC + MUC ) * ( MUM * RRSe ) ),Max( Min( MLU ,RRSe ),( RRSe - CS ) ) ) ) / Min( ( ( Max( RCSe,MUR ) - Min( DS ,MUM ) ) * ( Max( CS,MUC ) / ( RCSe + MUC ) ) ) ,( ( ( MUR - CS ) * ( RRSe + RCSe ) ) * ( Min( CS ,RCSe ) - ( DS / CS ) ) ) ) ) + Min( ( ( ( ( RRSe * MUC ) - Min( CS ,MUC ) ) - Max( ( RMSe * MLU ),( CS + MUC ) ) ) - ( ( Max( DS,RMSe ) / ( MUM / MLU ) ) + ( Max( MLU,MUR ) + Min( CS ,RMSe ) ) ) ) ,Max( ( Max( ( MUC * MUR ),( CS - MUR ) ) + Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ),( ( Max( MLU,CS ) * Min( CS ,MLU ) ) / Max( ( DS - DS ),( MLU + CS ) ) ) ) ) ) ) )", "obj1": 0.6875, "obj2": 0.3129885110657894}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( ( ( RRSe + RMSe ) / ( DS * MUR ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.16666666666666666, "obj2": 0.6983089628317749}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) + CS ) ) / ( DS * MUR ) )", "obj1": 0.17708333333333334, "obj2": 0.6975445188450464}, {"determining": "( Max( ( FirstVNF_CPU / CRS ),FirstVNF_CPU ) * ( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) * CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Min( ( ( ( FirstVNF_Mem_Server - MDR ) * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) * ( Max( RRS,FirstVNF_CPU_Server ) + ( MDR + Const ) ) ) ,( ( ( FirstVNF_CPU / Const ) - Min( CRS ,FirstVNF_Mem_Server ) ) * ( ( AMS / PN ) * Min( Const ,ARS ) ) ) ) / ( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) / ( FirstVNF_Mem_Server + CRS ) ) - Max( ( FirstVNF_CPU * AMS ),Max( ARS,RRS ) ) ) / ( ( ( CRS + ACS ) * ( ACS * AMS ) ) + ( ( FirstVNF_RAM / BR ) * ( MRS + AMS ) ) ) ) ) * ( ( ( Max( ( FirstVNF_Mem_Server + FirstVNF_RAM ),( AMS / AMS ) ) * ( ( RRS / CRS ) + Min( Const ,DDR ) ) ) / Min( Min( ( RRS / RRS ) ,( Const * FirstVNF_RAM ) ) ,( ( CRS * MDR ) - Max( MRS,FirstVNF_RAM_Server ) ) ) ) * Min( ( ( ( Const + FirstVNF_Mem_Server ) / Max( Const,BR ) ) - ( Min( AMS ,FirstVNF_Mem ) + Min( ACS ,BR ) ) ) ,( ( ( RRS - CRS ) / Min( ARS ,AMS ) ) / Min( Min( FirstVNF_CPU ,MDR ) ,( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) ) ),( ( ( ( ( Min( BR ,ARS ) + ( RRS * Const ) ) - ( ( DDR - FirstVNF_RAM ) + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) * ( Max( ( CRS + DDR ),( PN - BR ) ) - ( ( BR + FirstVNF_CPU ) / Min( Const ,RRS ) ) ) ) + Min( ( ( Max( ACS,FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) + Max( Max( AMS,MDR ),Min( PN ,CRS ) ) ) ,( ( Max( MRS,DDR ) * ( FirstVNF_CPU + CRS ) ) - ( Max( MDR,FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,PN ) ) ) ) ) / ( ( ( ( Max( CRS,CRS ) + ( DDR - FirstVNF_Mem ) ) - ( ( FirstVNF_RAM_Server * MRS ) - Min( AMS ,Const ) ) ) + ( ( Min( FirstVNF_RAM_Server ,MDR ) + Min( Const ,Const ) ) / ( ( RRS - MRS ) * Max( AMS,FirstVNF_Mem_Server ) ) ) ) - ( ( Max( ( FirstVNF_Mem_Server - RRS ),( BR / MDR ) ) + Min( Min( DDR ,ACS ) ,( BR - FirstVNF_RAM_Server ) ) ) / Min( ( Max( MDR,DDR ) - Min( Const ,FirstVNF_RAM ) ) ,Max( ( ARS + FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) ) ) ) - Max( Min( ( ( ( ( ( FirstVNF_CPU * PN ) / ( FirstVNF_CPU - Const ) ) * ( ( AMS * MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) / ( ( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / PN ) ) / Max( ( FirstVNF_RAM - CRS ),( PN * FirstVNF_RAM_Server ) ) ) ) * ( ( ( ( CRS * PN ) - ( BR + PN ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_CPU * DDR ) ) ) * Max( Min( Max( Const,FirstVNF_RAM ) ,Max( Const,MDR ) ),Max( ( DDR + FirstVNF_RAM_Server ),Max( FirstVNF_Mem,BR ) ) ) ) ) ,( Min( ( ( ( AMS + FirstVNF_RAM ) / ( CRS - ACS ) ) + Max( ( FirstVNF_CPU * FirstVNF_Mem ),( FirstVNF_Mem - BR ) ) ) ,Min( ( ( PN - DDR ) * Min( FirstVNF_RAM ,MRS ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( BR * PN ) ) ) ) * ( ( ( ( BR + FirstVNF_CPU ) - ( FirstVNF_CPU_Server / AMS ) ) - ( ( ACS - PN ) + ( PN * RRS ) ) ) / ( Min( ( BR * FirstVNF_CPU ) ,( FirstVNF_RAM_Server - RRS ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,Max( ACS,FirstVNF_Mem ) ) ) ) ) ),( Max( Min( ( ( Max( DDR,ARS ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) / ( ( MRS * FirstVNF_CPU ) + ( FirstVNF_Mem * CRS ) ) ) ,( ( ( CRS - RRS ) + Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * ( ( DDR - FirstVNF_Mem ) - ( RRS * FirstVNF_Mem ) ) ) ),( ( ( ( MDR - BR ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * Max( ( MDR - ACS ),Min( AMS ,PN ) ) ) - ( Min( ( RRS - MRS ) ,Min( FirstVNF_Mem ,AMS ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( CRS + RRS ) ) ) ) ) + ( ( Max( ( ( ACS / BR ) - Min( CRS ,FirstVNF_RAM ) ),Max( ( RRS * FirstVNF_CPU_Server ),( Const * PN ) ) ) * Max( Max( ( FirstVNF_CPU_Server - AMS ),( FirstVNF_CPU + RRS ) ),( ( AMS + CRS ) / ( ACS * MRS ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_RAM + FirstVNF_CPU ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( MDR,PN ) ) ) / Max( ( Min( RRS ,CRS ) * ( MRS * ACS ) ),( Max( FirstVNF_Mem_Server,BR ) + ( Const / AMS ) ) ) ) ) ) ) )", "choosing": "Max( ( ( Min( ( ( ( ( MUM * MUM ) - ( MUM - RCSe ) ) + Max( ( DS - RMSe ),( MUM - DS ) ) ) / Min( Max( ( RRSe * MUC ),( RRSe + MLU ) ) ,( ( DS / DS ) * Min( MUM ,MUC ) ) ) ) ,( Max( ( Min( RMSe ,RCSe ) - ( CS - MUC ) ),( Min( MLU ,RRSe ) / Max( RCSe,MUM ) ) ) + ( ( ( MUR + RCSe ) * Min( RCSe ,RMSe ) ) * ( ( MUC + CS ) + Max( CS,RMSe ) ) ) ) ) - ( ( ( ( ( MLU * RCSe ) - ( MUM / DS ) ) / ( Max( RCSe,CS ) / Min( RRSe ,MLU ) ) ) / Min( Max( ( CS * MUM ),( RMSe * RRSe ) ) ,( ( MUC + RRSe ) * Min( DS ,MUC ) ) ) ) - ( Min( Min( Max( MUC,RMSe ) ,Min( CS ,MLU ) ) ,( ( MLU + DS ) + ( RMSe - MUR ) ) ) / ( Min( Max( DS,RMSe ) ,( RMSe * RCSe ) ) / Min( ( RRSe / RMSe ) ,( CS * RCSe ) ) ) ) ) ) * ( ( ( Min( ( ( RRSe + RMSe ) - ( MUM / RCSe ) ) ,( ( DS * MUM ) / ( RMSe - MLU ) ) ) / ( ( Min( MUM ,MUM ) - ( DS / MUM ) ) / ( ( CS * MUR ) + ( RMSe + RRSe ) ) ) ) + ( ( ( ( DS + RMSe ) * ( RCSe / MLU ) ) / ( Min( MUC ,RCSe ) / Max( DS,RMSe ) ) ) - ( Min( ( MUR / RRSe ) ,( MUM + DS ) ) / Min( Min( MUR ,CS ) ,( MLU + MLU ) ) ) ) ) / Max( Max( Min( Max( ( MUM - CS ),( RMSe / CS ) ) ,( ( MUR * MUM ) - ( MUC * RMSe ) ) ),( ( ( MUC + DS ) / ( MUC + CS ) ) - ( ( RCSe + MUC ) - Max( RRSe,RRSe ) ) ) ),Min( Min( ( Max( RMSe,MLU ) / ( MUR - MUM ) ) ,( Max( RMSe,MUM ) - ( RMSe + CS ) ) ) ,( Min( ( CS + MLU ) ,Max( RRSe,RMSe ) ) * Min( ( RRSe + MUM ) ,Min( MUC ,MLU ) ) ) ) ) ) ),( Max( Max( ( ( ( Min( DS ,MUC ) - Max( RRSe,MUC ) ) - ( ( DS - MUM ) + ( RCSe / RCSe ) ) ) - ( ( Max( RRSe,RRSe ) * ( DS * RRSe ) ) - ( ( MUM + MLU ) / Min( MUM ,RMSe ) ) ) ),Min( ( ( Max( RMSe,RRSe ) + ( MLU - RCSe ) ) * ( ( RMSe * MLU ) + ( RRSe * MUM ) ) ) ,( ( Max( RMSe,DS ) + ( DS - MLU ) ) + ( Min( MUM ,RMSe ) - ( RCSe - DS ) ) ) ) ),Max( ( ( ( ( DS * MUR ) / ( RCSe - RCSe ) ) + Max( Max( MUR,RRSe ),( MUC + MUM ) ) ) + Min( ( Max( CS,RCSe ) + ( RRSe * CS ) ) ,( ( RCSe / MUC ) - Max( MUR,RRSe ) ) ) ),Min( ( ( Min( DS ,RCSe ) * Min( MUR ,MUM ) ) + Min( ( RRSe * RCSe ) ,Min( RRSe ,MUM ) ) ) ,( ( ( CS / RRSe ) + ( MUR - DS ) ) / ( ( RMSe * RMSe ) + ( RRSe + MUC ) ) ) ) ) ) - ( ( ( ( ( ( MUM * DS ) * Max( RRSe,RCSe ) ) - ( Min( CS ,RCSe ) * ( RRSe - RCSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Min( RRSe ,CS ) ) * ( ( MUR * MUR ) / Min( MLU ,MUC ) ) ) ) * ( Max( ( Max( CS,DS ) + ( RCSe - DS ) ),( ( RRSe - RRSe ) - ( MUC * MUC ) ) ) - Min( ( Min( RMSe ,RCSe ) - ( DS + MUR ) ) ,( ( MUC + RCSe ) / Max( MUR,MUC ) ) ) ) ) + ( Min( Max( Max( ( MLU + MLU ),( DS / RCSe ) ),Min( ( MUM * CS ) ,( MLU * DS ) ) ) ,( Max( ( RCSe - RCSe ),Max( MUM,MLU ) ) / Max( Min( MUC ,MUR ),Max( CS,MLU ) ) ) ) - Min( ( ( ( MLU + CS ) * Max( RCSe,RRSe ) ) * Min( ( DS / MUC ) ,( RRSe / DS ) ) ) ,( Min( Max( CS,MUC ) ,( CS * RRSe ) ) * Min( ( DS / RMSe ) ,Min( MUR ,MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( BR + Const ),( BR * RRS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( Max( Min( DS ,( MLU - CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS + MUR ) )", "obj1": 0.18125, "obj2": 0.6772302421741039}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) )", "choosing": "( ( MUC + MUC ) + ( MUC * ( Max( Max( RRSe,Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.5045922656654862}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( Max( Max( ( FirstVNF_CPU / CRS ),FirstVNF_CPU ),( CRS - FirstVNF_Mem ) ) * ARS ) )", "choosing": "( ( MUC + MUC ) + ( MUC * MUR ) )", "obj1": 0.40625, "obj2": 0.5204821357787334}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ARS - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MLU + RMSe ),CS ) ) ),Max( Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.16666666666666666, "obj2": 0.6983089628317749}, {"determining": "Max( ( BR + FirstVNF_RAM_Server ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( ( ( RRSe + RMSe ) / ( DS * MUR ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.16666666666666666, "obj2": 0.6983089628317749}, {"determining": "Max( ( BR + MDR ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RCSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( ( ( RRSe + RMSe ) / ( DS * MUR ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.16666666666666666, "obj2": 0.6983089628317749}, {"determining": "( Max( MRS,AMS ) - ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( ( Min( ( ( ( ( ( MUM + RRSe ) * ( RCSe - RCSe ) ) - Min( ( RCSe / DS ) ,( DS * CS ) ) ) * Max( ( Min( CS ,MUC ) - ( MLU + RRSe ) ),( ( RMSe * MUR ) / ( RRSe * MLU ) ) ) ) * ( Max( ( Max( RCSe,RCSe ) - ( RRSe * RCSe ) ),Min( ( MUC * MUC ) ,Max( CS,RRSe ) ) ) - Min( Min( ( RCSe / CS ) ,( MUR * DS ) ) ,Max( ( MUM - MUC ),( RRSe + MLU ) ) ) ) ) ,( Min( ( Min( ( MUR + DS ) ,Min( DS ,MUC ) ) * ( ( RCSe + MUM ) - Max( MUC,CS ) ) ) ,( Max( Min( MUM ,MUM ),( MUC - MUR ) ) * ( ( RRSe - DS ) + ( CS + RMSe ) ) ) ) * Max( ( ( Min( RMSe ,CS ) + ( RMSe / MUC ) ) + Max( Min( RRSe ,MUR ),( RMSe / MUR ) ) ),Max( ( ( MLU - RRSe ) - ( MUC / CS ) ),( ( CS - MUM ) / Min( MUR ,MUM ) ) ) ) ) ) - ( ( ( Max( ( Min( DS ,MLU ) * Min( CS ,MUR ) ),( ( MLU + RMSe ) + ( CS * MUR ) ) ) - ( ( ( DS + MUR ) * Min( MUM ,RCSe ) ) - ( ( MUR / CS ) - ( RRSe * DS ) ) ) ) - ( Max( Min( ( RRSe * RRSe ) ,Min( DS ,MUM ) ),( Min( RCSe ,DS ) + Min( DS ,RCSe ) ) ) / ( ( Min( CS ,MLU ) / ( MUC - MUM ) ) - Max( Max( MUM,RCSe ),Max( RRSe,MLU ) ) ) ) ) + Max( Min( Min( ( ( MUR - MUC ) * Min( DS ,MUM ) ) ,( ( DS + MUM ) * ( DS - MUR ) ) ) ,Min( ( ( CS * MUR ) - Min( MUM ,RCSe ) ) ,Min( ( MLU * MUM ) ,( RRSe - RRSe ) ) ) ),Min( Max( ( Max( MUM,MUM ) - ( RRSe * RCSe ) ),Max( ( MUM * MUR ),( MUR - MUM ) ) ) ,Min( ( Max( MUM,MUC ) + Max( MLU,DS ) ) ,( ( MLU + RRSe ) - ( RMSe / RCSe ) ) ) ) ) ) ) / Min( ( ( ( ( Min( Max( MUC,MUR ) ,Min( MUC ,MLU ) ) + Max( ( RRSe - MUR ),( MUC + RCSe ) ) ) - ( ( Min( RMSe ,CS ) - Max( MUM,RCSe ) ) - Max( ( MUR - CS ),( RCSe * MUC ) ) ) ) / Min( ( Min( ( MUR + MUR ) ,( MUM * CS ) ) - ( Min( MUC ,DS ) * Max( MUM,DS ) ) ) ,( ( ( MUM * CS ) + ( MUR / DS ) ) * ( ( MLU - RCSe ) / Max( RCSe,MUM ) ) ) ) ) * Min( Max( ( Min( ( CS - RMSe ) ,Max( MUC,RRSe ) ) - ( ( RRSe - RMSe ) - ( RMSe * MUM ) ) ),Min( ( Max( MUR,MLU ) * Min( DS ,RCSe ) ) ,( Max( MUC,RMSe ) + Min( MUC ,MLU ) ) ) ) ,( Min( ( ( MUR + MLU ) - Max( MUC,MUC ) ) ,( Min( RMSe ,MUM ) * Max( MUC,RCSe ) ) ) * ( ( ( MUM * DS ) - ( RCSe / RMSe ) ) - ( ( MUC + RMSe ) / ( MUM * MUC ) ) ) ) ) ) ,Max( ( ( Min( ( ( MUM / RRSe ) / Max( RRSe,MUC ) ) ,( ( DS - MUM ) + ( DS * RCSe ) ) ) - ( ( Max( CS,MUM ) - ( RCSe * MUC ) ) - Max( Max( RMSe,CS ),Max( RMSe,DS ) ) ) ) + ( ( ( ( MUC - RMSe ) + Min( RCSe ,RCSe ) ) / ( Min( MLU ,RMSe ) / Min( MUR ,RRSe ) ) ) - ( ( ( RRSe / MUC ) / Min( DS ,MUR ) ) + ( ( RMSe * RRSe ) - Max( DS,RRSe ) ) ) ) ),Max( ( Min( ( ( DS - DS ) + ( RRSe + RCSe ) ) ,( ( MUM / MUM ) / ( MUR * MUM ) ) ) + ( ( Max( RRSe,MUC ) + ( MUC - RCSe ) ) * Max( ( RMSe + MLU ),( CS + MUC ) ) ) ),( ( ( ( MUR + RCSe ) * Max( MLU,DS ) ) * Min( Min( MUR ,RRSe ) ,Max( RRSe,MUR ) ) ) - Max( ( ( MUR + CS ) * ( MLU * RMSe ) ),Max( Min( DS ,MUM ),Min( DS ,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR + Const ),( ARS * ARS ) )", "choosing": "( Max( MLU,( Max( MLU,( ( RRSe + RMSe ) / CS ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19375, "obj2": 0.6539683812537627}, {"determining": "Max( ( MRS * RRS ),( ( CRS - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) * MDR ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( RRSe + RMSe ) ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / Max( DS,CS ) )", "obj1": 0.21666666666666667, "obj2": 0.6351219204934168}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * PN ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) + CS ),Max( MLU,CS ) ),Max( MLU,( MUC + CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20416666666666666, "obj2": 0.6417795437293063}, {"determining": "Max( Max( DDR,( MRS * ( FirstVNF_Mem_Server - RRS ) ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( CS,Max( MLU,Max( RRSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18125, "obj2": 0.6772302421741039}, {"determining": "Max( ( BR + Const ),FirstVNF_Mem )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5477141259740361}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}], "19": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6616014982275942}, {"determining": "Max( ( FirstVNF_RAM_Server / ( Max( ( ( MRS * FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Min( MLU ,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( Max( MLU,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),Max( MRS,ARS ) ) * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + MLU ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.1875, "obj2": 0.6641630415224334}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / RMSe ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6616014982275942}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RMSe + RMSe ),MLU ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( ( ( ARS - FirstVNF_CPU_Server ) * MDR ) / Const ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.2375, "obj2": 0.6295293346036487}, {"determining": "Max( Max( ( BR + Const ),( BR * RRS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( Max( Min( DS ,( MLU - CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS + MUR ) )", "obj1": 0.18125, "obj2": 0.6772302421741039}, {"determining": "Max( ( BR + Const ),( ARS * ARS ) )", "choosing": "( Max( MLU,( Max( MLU,( ( RRSe + RMSe ) / CS ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.19375, "obj2": 0.6539683812537627}, {"determining": "Max( ( MRS * RRS ),( ( CRS - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) * MDR ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( RRSe + RMSe ) ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / Max( DS,CS ) )", "obj1": 0.21666666666666667, "obj2": 0.6351219204934168}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * PN ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) + CS ),Max( MLU,CS ) ),Max( MLU,( MUC + CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20416666666666666, "obj2": 0.6417795437293063}, {"determining": "Max( Max( DDR,( MRS * ( FirstVNF_Mem_Server - RRS ) ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( CS,Max( MLU,Max( RRSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18125, "obj2": 0.6772302421741039}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server + RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + CS ) / CS ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6616014982275942}, {"determining": "Max( Max( ( BR + Const ),( MRS * RRS ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( Max( Min( DS ,( MLU - CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18125, "obj2": 0.6772302421741039}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( RRSe + RMSe ) ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / Max( DS,CS ) )", "obj1": 0.21666666666666667, "obj2": 0.6351219204934168}, {"determining": "Max( ( BR + Const ),FirstVNF_Mem )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) )", "obj1": 0.30625, "obj2": 0.551793452326987}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6616014982275942}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( FirstVNF_CPU / CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.1875, "obj2": 0.6641630415224334}, {"determining": "Max( ( CRS / ( Max( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( ( RRSe + RMSe ),CS ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6616014982275942}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6616014982275942}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( Max( MLU,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) + MRS ) * Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) * ( RCSe * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.16875, "obj2": 0.6914212355264601}, {"determining": "Max( Max( ( FirstVNF_CPU / CRS ),FirstVNF_CPU ),( CRS - FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) * CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.275, "obj2": 0.6248894859119605}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( Max( MLU,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6616014982275942}, {"determining": "Max( ( FirstVNF_RAM_Server / Min( Max( ( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) ,MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) ) / CS ) ) / ( DS * CS ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( Max( MLU,Max( ( RRSe + RMSe ),CS ) ),MLU ),Max( MLU,( ( RRSe + RMSe ) / MUC ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( MUC + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18958333333333333, "obj2": 0.6616014982275942}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * PN ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,CS ) ),Max( ( DS * RMSe ),( MUC + CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.20416666666666666, "obj2": 0.6417795437293063}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * PN ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.16666666666666666, "obj2": 0.6942644718034288}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.17708333333333334, "obj2": 0.6869171609118178}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * PN ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) + CS ),Max( MLU,CS ) ),Max( MLU,( MUC + CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18333333333333332, "obj2": 0.6721054223741502}, {"determining": "Max( Max( DDR,FirstVNF_RAM_Server ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( CS,Max( ( ( RRSe + RMSe ) / ( DS * MUR ) ),( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18125, "obj2": 0.6772302421741039}, {"determining": "Max( Max( DDR,( MRS * ( FirstVNF_Mem_Server - RRS ) ) ),FirstVNF_CPU )", "choosing": "( ( MLU + ( Max( CS,Max( MLU,Max( RRSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18125, "obj2": 0.6772302421741039}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_Mem_Server ) ),( MRS * ( MRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MLU,( Max( Max( Max( MLU,Max( ( MUC + RMSe ),CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) + CS ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.6793275136260906}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( Max( MLU,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.1875, "obj2": 0.6641630415224334}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}], "20": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( FirstVNF_RAM_Server / ( Max( ( ( MRS * FirstVNF_RAM_Server ) + ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Min( MLU ,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( Max( MLU,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RMSe + RMSe ),MLU ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( Max( MLU,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) + MRS ) * Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) * ( RCSe * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.16875, "obj2": 0.6914212355264601}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( Max( MLU,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( FirstVNF_RAM_Server / Min( Max( ( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) ,MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) / CS ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( ( DS * MUR ) + RMSe ) / CS ) ) ) / CS ) ) / ( DS * CS ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( CRS / ( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Max( Max( MLU,Max( ( RRSe + RMSe ),CS ) ),MLU ),Max( MLU,( ( RRSe + RMSe ) / MUC ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18541666666666667, "obj2": 0.6667771651472392}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * PN ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.16666666666666666, "obj2": 0.6942644718034288}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.17708333333333334, "obj2": 0.6869171609118178}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * PN ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) + CS ),Max( MLU,CS ) ),Max( MLU,( MUC + CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18333333333333332, "obj2": 0.6721054223741502}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_Mem_Server ) ),( MRS * ( MRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MLU,( Max( Max( Max( MLU,Max( ( MUC + RMSe ),CS ) ),Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) + CS ) ) / ( DS * MUR ) )", "obj1": 0.17916666666666667, "obj2": 0.6793275136260906}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + MUR ) / CS ),Max( MLU,Max( ( RMSe + RMSe ),MLU ) ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.175, "obj2": 0.6892367117006496}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * PN ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.17708333333333334, "obj2": 0.6869171609118178}, {"determining": "Max( Min( BR ,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) / ARS ) )", "choosing": "( Max( MLU,( ( Max( ( ( RRSe + RMSe ) + CS ),Max( MLU,CS ) ) / Max( MLU,( MUC + CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18333333333333332, "obj2": 0.6721054223741502}, {"determining": "Max( ( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + RMSe ) / CS ) ) ),( MLU * Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.17708333333333334, "obj2": 0.6869171609118178}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.17708333333333334, "obj2": 0.6869171609118178}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * PN ) )", "choosing": "( Max( MLU,( Max( Max( ( ( RRSe + RMSe ) + CS ),Max( MLU,CS ) ),Max( MLU,( MUC + CS ) ) ) / CS ) ) / ( DS * MUR ) )", "obj1": 0.18333333333333332, "obj2": 0.6721054223741502}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.16875, "obj2": 0.6914212355264601}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.17708333333333334, "obj2": 0.6869171609118178}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.17708333333333334, "obj2": 0.6869171609118178}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.16666666666666666, "obj2": 0.6942644718034288}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( MLU,Max( ( RRSe + RMSe ),CS ) ) ) )", "obj1": 0.18125, "obj2": 0.675825885669562}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.16875, "obj2": 0.6914212355264601}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}], "21": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( PN - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( RCSe,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),( DDR * ARS ) )", "choosing": "( Max( MUM,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( CS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU * ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + DDR ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS * ( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) + CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) ,MRS ) ),( RRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( MLU + RMSe ) - CS ) ),Max( MLU,Max( RMSe,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * ACS ) - CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC + CS ) ),Max( CS,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Min( DS ,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const + ( ( ( Const - RRS ) * FirstVNF_Mem ) / MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR / ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_CPU_Server ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUM,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) / ( Max( ( BR + Const ),( BR / Const ) ) - MRS ) ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( Min( MUC ,Max( MUC,CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( RRS,Max( BR,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( DS * ( DS * MUR ) ),( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / Min( DS ,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ARS ),Min( BR ,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( Min( DS ,( CS - CS ) ),( ( RRSe + RMSe ) + ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR - Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) - CS ) ),Max( MLU,Max( MLU,( ( RMSe + MUR ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,( MUC - CS ) ),Max( ( MUC + MUC ),Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MLU ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( CS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ( MRS + ARS ) - DDR ) * FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + MUR ) / CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / Min( DS ,MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),RRS )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( ACS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RCSe ) / CS ),( ( RRSe + RMSe ) * ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR + Const ),Max( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( RCSe * RCSe ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - MUC ) ),Max( MLU,Max( CS,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) * AMS ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) / Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( Min( DDR ,RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,Max( MLU,( ( MUR + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( MLU * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}], "22": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( PN - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( RCSe,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),( DDR * ARS ) )", "choosing": "( Max( MUM,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( CS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU * ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + DDR ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS * ( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) + CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) ,MRS ) ),( RRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( MLU + RMSe ) - CS ) ),Max( MLU,Max( RMSe,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * ACS ) - CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC + CS ) ),Max( CS,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Min( DS ,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const + ( ( ( Const - RRS ) * FirstVNF_Mem ) / MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR / ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_CPU_Server ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUM,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) / ( Max( ( BR + Const ),( BR / Const ) ) - MRS ) ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( Min( MUC ,Max( MUC,CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( RRS,Max( BR,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( DS * ( DS * MUR ) ),( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / Min( DS ,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ARS ),Min( BR ,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( Min( DS ,( CS - CS ) ),( ( RRSe + RMSe ) + ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR - Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) - CS ) ),Max( MLU,Max( MLU,( ( RMSe + MUR ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,( MUC - CS ) ),Max( ( MUC + MUC ),Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MLU ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( CS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ( MRS + ARS ) - DDR ) * FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + MUR ) / CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / Min( DS ,MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),RRS )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( ACS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RCSe ) / CS ),( ( RRSe + RMSe ) * ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR + Const ),Max( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( RCSe * RCSe ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - MUC ) ),Max( MLU,Max( CS,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) * AMS ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) / Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( Min( DDR ,RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,Max( MLU,( ( MUR + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( MLU * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}], "23": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( PN - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( RCSe,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),( DDR * ARS ) )", "choosing": "( Max( MUM,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( CS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU * ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + DDR ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS * ( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) + CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) ,MRS ) ),( RRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( MLU + RMSe ) - CS ) ),Max( MLU,Max( RMSe,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * ACS ) - CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC + CS ) ),Max( CS,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Min( DS ,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const + ( ( ( Const - RRS ) * FirstVNF_Mem ) / MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR / ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_CPU_Server ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUM,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) / ( Max( ( BR + Const ),( BR / Const ) ) - MRS ) ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( Min( MUC ,Max( MUC,CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( RRS,Max( BR,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( DS * ( DS * MUR ) ),( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / Min( DS ,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ARS ),Min( BR ,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( Min( DS ,( CS - CS ) ),( ( RRSe + RMSe ) + ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR - Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) - CS ) ),Max( MLU,Max( MLU,( ( RMSe + MUR ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,( MUC - CS ) ),Max( ( MUC + MUC ),Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MLU ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( CS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ( MRS + ARS ) - DDR ) * FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + MUR ) / CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / Min( DS ,MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),RRS )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( ACS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RCSe ) / CS ),( ( RRSe + RMSe ) * ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR + Const ),Max( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( RCSe * RCSe ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - MUC ) ),Max( MLU,Max( CS,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) * AMS ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) / Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( Min( DDR ,RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,Max( MLU,( ( MUR + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( MLU * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}], "24": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( PN - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( RCSe,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),( DDR * ARS ) )", "choosing": "( Max( MUM,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( CS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU * ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + DDR ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS * ( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) + CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) ,MRS ) ),( RRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( MLU + RMSe ) - CS ) ),Max( MLU,Max( RMSe,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * ACS ) - CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC + CS ) ),Max( CS,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Min( DS ,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const + ( ( ( Const - RRS ) * FirstVNF_Mem ) / MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR / ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_CPU_Server ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUM,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) / ( Max( ( BR + Const ),( BR / Const ) ) - MRS ) ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( Min( MUC ,Max( MUC,CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( RRS,Max( BR,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( DS * ( DS * MUR ) ),( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / Min( DS ,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ARS ),Min( BR ,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( Min( DS ,( CS - CS ) ),( ( RRSe + RMSe ) + ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR - Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) - CS ) ),Max( MLU,Max( MLU,( ( RMSe + MUR ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,( MUC - CS ) ),Max( ( MUC + MUC ),Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MLU ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( CS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ( MRS + ARS ) - DDR ) * FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + MUR ) / CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / Min( DS ,MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),RRS )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( ACS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RCSe ) / CS ),( ( RRSe + RMSe ) * ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR + Const ),Max( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( RCSe * RCSe ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - MUC ) ),Max( MLU,Max( CS,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) * AMS ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) / Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( Min( DDR ,RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,Max( MLU,( ( MUR + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( MLU * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}], "25": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( PN - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( RCSe,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),( DDR * ARS ) )", "choosing": "( Max( MUM,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( CS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU * ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + DDR ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS * ( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) + CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) ,MRS ) ),( RRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( MLU + RMSe ) - CS ) ),Max( MLU,Max( RMSe,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * ACS ) - CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC + CS ) ),Max( CS,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Min( DS ,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const + ( ( ( Const - RRS ) * FirstVNF_Mem ) / MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR / ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_CPU_Server ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUM,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) / ( Max( ( BR + Const ),( BR / Const ) ) - MRS ) ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( Min( MUC ,Max( MUC,CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( RRS,Max( BR,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( DS * ( DS * MUR ) ),( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / Min( DS ,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ARS ),Min( BR ,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( Min( DS ,( CS - CS ) ),( ( RRSe + RMSe ) + ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR - Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) - CS ) ),Max( MLU,Max( MLU,( ( RMSe + MUR ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,( MUC - CS ) ),Max( ( MUC + MUC ),Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MLU ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( CS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ( MRS + ARS ) - DDR ) * FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + MUR ) / CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / Min( DS ,MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),RRS )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( ACS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RCSe ) / CS ),( ( RRSe + RMSe ) * ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR + Const ),Max( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( RCSe * RCSe ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - MUC ) ),Max( MLU,Max( CS,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) * AMS ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) / Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( Min( DDR ,RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,Max( MLU,( ( MUR + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( MLU * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}], "26": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( PN - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( RCSe,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),( DDR * ARS ) )", "choosing": "( Max( MUM,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( CS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU * ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + DDR ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS * ( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) + CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) ,MRS ) ),( RRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( MLU + RMSe ) - CS ) ),Max( MLU,Max( RMSe,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * ACS ) - CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC + CS ) ),Max( CS,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Min( DS ,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const + ( ( ( Const - RRS ) * FirstVNF_Mem ) / MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR / ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_CPU_Server ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUM,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) / ( Max( ( BR + Const ),( BR / Const ) ) - MRS ) ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( Min( MUC ,Max( MUC,CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( RRS,Max( BR,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( DS * ( DS * MUR ) ),( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / Min( DS ,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ARS ),Min( BR ,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( Min( DS ,( CS - CS ) ),( ( RRSe + RMSe ) + ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR - Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) - CS ) ),Max( MLU,Max( MLU,( ( RMSe + MUR ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,( MUC - CS ) ),Max( ( MUC + MUC ),Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MLU ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( CS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ( MRS + ARS ) - DDR ) * FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + MUR ) / CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / Min( DS ,MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),RRS )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( ACS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RCSe ) / CS ),( ( RRSe + RMSe ) * ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR + Const ),Max( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( RCSe * RCSe ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - MUC ) ),Max( MLU,Max( CS,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) * AMS ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) / Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( Min( DDR ,RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,Max( MLU,( ( MUR + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( MLU * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}], "27": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( PN - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( RCSe,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),( DDR * ARS ) )", "choosing": "( Max( MUM,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( CS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU * ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + DDR ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS * ( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) + CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) ,MRS ) ),( RRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( MLU + RMSe ) - CS ) ),Max( MLU,Max( RMSe,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * ACS ) - CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC + CS ) ),Max( CS,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Min( DS ,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const + ( ( ( Const - RRS ) * FirstVNF_Mem ) / MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR / ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_CPU_Server ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUM,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) / ( Max( ( BR + Const ),( BR / Const ) ) - MRS ) ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( Min( MUC ,Max( MUC,CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( RRS,Max( BR,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( DS * ( DS * MUR ) ),( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / Min( DS ,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ARS ),Min( BR ,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( Min( DS ,( CS - CS ) ),( ( RRSe + RMSe ) + ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR - Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) - CS ) ),Max( MLU,Max( MLU,( ( RMSe + MUR ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,( MUC - CS ) ),Max( ( MUC + MUC ),Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MLU ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( CS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ( MRS + ARS ) - DDR ) * FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + MUR ) / CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / Min( DS ,MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),RRS )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( ACS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RCSe ) / CS ),( ( RRSe + RMSe ) * ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR + Const ),Max( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( RCSe * RCSe ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - MUC ) ),Max( MLU,Max( CS,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) * AMS ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) / Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( Min( DDR ,RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,Max( MLU,( ( MUR + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( MLU * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}], "28": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( PN - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( RCSe,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),( DDR * ARS ) )", "choosing": "( Max( MUM,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( CS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU * ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + DDR ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS * ( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) + CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) ,MRS ) ),( RRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( MLU + RMSe ) - CS ) ),Max( MLU,Max( RMSe,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * ACS ) - CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC + CS ) ),Max( CS,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Min( DS ,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const + ( ( ( Const - RRS ) * FirstVNF_Mem ) / MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR / ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_CPU_Server ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUM,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) / ( Max( ( BR + Const ),( BR / Const ) ) - MRS ) ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( Min( MUC ,Max( MUC,CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( RRS,Max( BR,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( DS * ( DS * MUR ) ),( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / Min( DS ,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ARS ),Min( BR ,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( Min( DS ,( CS - CS ) ),( ( RRSe + RMSe ) + ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR - Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) - CS ) ),Max( MLU,Max( MLU,( ( RMSe + MUR ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,( MUC - CS ) ),Max( ( MUC + MUC ),Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MLU ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( CS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ( MRS + ARS ) - DDR ) * FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + MUR ) / CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / Min( DS ,MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),RRS )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( ACS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RCSe ) / CS ),( ( RRSe + RMSe ) * ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR + Const ),Max( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( RCSe * RCSe ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - MUC ) ),Max( MLU,Max( CS,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) * AMS ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) / Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( Min( DDR ,RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,Max( MLU,( ( MUR + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( MLU * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}], "29": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( PN - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( RCSe,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),( DDR * ARS ) )", "choosing": "( Max( MUM,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( CS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU * ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + DDR ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS * ( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) + CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) ,MRS ) ),( RRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( MLU + RMSe ) - CS ) ),Max( MLU,Max( RMSe,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * ACS ) - CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC + CS ) ),Max( CS,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Min( DS ,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const + ( ( ( Const - RRS ) * FirstVNF_Mem ) / MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR / ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_CPU_Server ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUM,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) / ( Max( ( BR + Const ),( BR / Const ) ) - MRS ) ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( Min( MUC ,Max( MUC,CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( RRS,Max( BR,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( DS * ( DS * MUR ) ),( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / Min( DS ,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ARS ),Min( BR ,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( Min( DS ,( CS - CS ) ),( ( RRSe + RMSe ) + ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR - Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) - CS ) ),Max( MLU,Max( MLU,( ( RMSe + MUR ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,( MUC - CS ) ),Max( ( MUC + MUC ),Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MLU ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( CS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ( MRS + ARS ) - DDR ) * FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + MUR ) / CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / Min( DS ,MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),RRS )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( ACS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RCSe ) / CS ),( ( RRSe + RMSe ) * ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR + Const ),Max( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( RCSe * RCSe ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - MUC ) ),Max( MLU,Max( CS,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) * AMS ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) / Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( Min( DDR ,RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,Max( MLU,( ( MUR + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( MLU * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}], "30": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( PN - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( RCSe,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),( DDR * ARS ) )", "choosing": "( Max( MUM,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( CS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU * ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + DDR ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS * ( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) + CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) ,MRS ) ),( RRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( MLU + RMSe ) - CS ) ),Max( MLU,Max( RMSe,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * ACS ) - CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC + CS ) ),Max( CS,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Min( DS ,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const + ( ( ( Const - RRS ) * FirstVNF_Mem ) / MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR / ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_CPU_Server ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUM,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) / ( Max( ( BR + Const ),( BR / Const ) ) - MRS ) ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( Min( MUC ,Max( MUC,CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( RRS,Max( BR,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( DS * ( DS * MUR ) ),( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / Min( DS ,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ARS ),Min( BR ,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( Min( DS ,( CS - CS ) ),( ( RRSe + RMSe ) + ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR - Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) - CS ) ),Max( MLU,Max( MLU,( ( RMSe + MUR ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,( MUC - CS ) ),Max( ( MUC + MUC ),Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MLU ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( CS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ( MRS + ARS ) - DDR ) * FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + MUR ) / CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / Min( DS ,MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),RRS )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( ACS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RCSe ) / CS ),( ( RRSe + RMSe ) * ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR + Const ),Max( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( RCSe * RCSe ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - MUC ) ),Max( MLU,Max( CS,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) * AMS ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) / Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( Min( DDR ,RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,Max( MLU,( ( MUR + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / FirstVNF_RAM ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MUC + MUC ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15208333333333332, "obj2": 0.7418793644428137}], "31": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( PN - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( RCSe,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),( DDR * ARS ) )", "choosing": "( Max( MUM,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( CS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU * ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + DDR ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS * ( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) + CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) ,MRS ) ),( RRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( MLU + RMSe ) - CS ) ),Max( MLU,Max( RMSe,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * ACS ) - CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC + CS ) ),Max( CS,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Min( DS ,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const + ( ( ( Const - RRS ) * FirstVNF_Mem ) / MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR / ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_CPU_Server ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUM,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) / ( Max( ( BR + Const ),( BR / Const ) ) - MRS ) ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( Min( MUC ,Max( MUC,CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( RRS,Max( BR,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( DS * ( DS * MUR ) ),( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / Min( DS ,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ARS ),Min( BR ,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( Min( DS ,( CS - CS ) ),( ( RRSe + RMSe ) + ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR - Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) - CS ) ),Max( MLU,Max( MLU,( ( RMSe + MUR ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,( MUC - CS ) ),Max( ( MUC + MUC ),Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MLU ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( CS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ( MRS + ARS ) - DDR ) * FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + MUR ) / CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / Min( DS ,MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),RRS )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( ACS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RCSe ) / CS ),( ( RRSe + RMSe ) * ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR + Const ),Max( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( RCSe * RCSe ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - MUC ) ),Max( MLU,Max( CS,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) * AMS ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) / Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( Min( DDR ,RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,Max( MLU,( ( MUR + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * Const ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / FirstVNF_RAM ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MUC + MUC ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15208333333333332, "obj2": 0.7418793644428137}], "32": [{"determining": "( ( FirstVNF_RAM / FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe + MUC ) + Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - Const ),( ( ( ( AMS * RRS ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,Min( Max( Min( MUM ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) / ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MLU * Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( BR - Const ) * MDR ) ),( MRS * FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) * ( MLU + ( MLU - ( ( RRSe + RMSe ) / ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ) ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( ( DS * MUR ) ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / FirstVNF_Mem ) - MRS ) / ACS ) )", "choosing": "( Max( MLU,( Max( Min( MUR ,( RCSe - MUC ) ),Max( MLU,( MLU / ( ( RRSe + RMSe ) / Max( DS,MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) / ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Min( FirstVNF_CPU ,( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * ACS ) - MRS ) ),( MRS + ARS ) ) + DDR ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,DS ) ),Max( MLU,Max( MLU,( ( RRSe + MLU ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Min( Min( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( ARS + RRS ) - FirstVNF_Mem ) - MRS ) ),FirstVNF_Mem ) ,MRS ) ,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) + RCSe ) ),Max( MLU,Max( RMSe,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RRSe ) ) / ( MLU * ( DS - MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) / FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( RCSe,( RRSe / ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - RRS ) * FirstVNF_CPU ) - ARS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS / ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS * ARS ) ) + MRS ) ),( ARS * Const ) )", "choosing": "( ( MLU / ( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MUM * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ),( DDR + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ( ( MRS * FirstVNF_Mem ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * FirstVNF_Mem ) - MRS ) ) ),( Min( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * FirstVNF_Mem ) ,MRS ) * ARS ) )", "choosing": "( Max( RMSe,( Max( Min( ( DS * MUR ) ,( RRSe - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( Max( FirstVNF_Mem_Server,RRS ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ),( MRS + ARS ) ) + MRS ) ),( MRS + FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,Min( Max( Min( MUR ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) ,CS ) ) / ( DS * ( RRSe * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MDR ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * RRS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MUR,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / MUC ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR / Const ),( BR + Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - RMSe ) ),Max( MLU,Max( Min( DS ,( MUC - CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),Max( ( ( ( BR - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + CS ) / ( DS - MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS / MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( CRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server / RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - DS ) ),Max( MLU,( MLU + ( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( ( MRS - FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS / ( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ACS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS + MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU_Server * ( MRS * ( FirstVNF_CPU - BR ) ) ),FirstVNF_CPU )", "choosing": "( Max( MLU,( Max( Min( Max( DS,MUR ) ,( MUC + CS ) ),Max( MLU,( MLU * ( ( RRSe + MUC ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS + MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_RAM_Server ) - ( ( ( DDR + RRS ) * AMS ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),MRS )", "choosing": "( Max( MLU,( Max( Min( MUC ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS - ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( CRS,( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + RRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( RCSe ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / Max( RCSe,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( MRS * FirstVNF_Mem ) - ( ( ( PN - MRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),( MRS * ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( RCSe,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + AMS ) ) + MRS ) ),( DDR * ARS ) )", "choosing": "( Max( MUM,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( CS * Max( DS,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU * ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) / MRS ) ),( MRS + DDR ) ) + MRS ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( ( DS * ( MUC - CS ) ),Max( MLU,Min( MLU ,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) + CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( PN / Min( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem ) - MRS ) ),Min( MRS ,ARS ) ) ,MRS ) ),( RRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( MLU + RMSe ) - CS ) ),Max( MLU,Max( RMSe,( Max( RRSe,RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( MUM * ( DS * MUM ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( DDR - RRS ) * FirstVNF_Mem ) - MRS ) ) * ACS ) - CRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC + CS ) ),Max( CS,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * Min( DS ,MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const + ( ( ( Const - RRS ) * FirstVNF_Mem ) / MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( MLU * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR / ( Max( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + MRS ) ),Max( MRS,ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( MUC,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( Max( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + FirstVNF_CPU_Server ) ),( MRS * FirstVNF_Mem ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MUM,Max( MLU,( ( RRSe + RMSe ) + ( DS * MUR ) ) ) ) ) / CS ) ) / ( RMSe * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) / ( Max( ( BR + Const ),( BR / Const ) ) - MRS ) ) * FirstVNF_Mem ) - MRS ) + ARS ) )", "choosing": "( Max( MLU,( Max( Min( MUC ,Max( MUC,CS ) ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) / RMSe ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( RRS,Max( BR,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( DS * ( DS * MUR ) ),( ( RRSe + RMSe ) / ( DS * RMSe ) ) ) ) ) / CS ) ) / Min( DS ,( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + ARS ),Min( BR ,Const ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( Min( DS ,( CS - CS ) ),( ( RRSe + RMSe ) + ( MUR * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR - Const ),( ( ( ( ( ARS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) / FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( ( RRSe + RMSe ) - CS ) ),Max( MLU,Max( MLU,( ( RMSe + MUR ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Min( MLU ,( Max( Min( DS ,( MUC - CS ) ),Max( ( MUC + MUC ),Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MLU ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - Const ) / FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,Min( MUC ,CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( CS * MUR ) ) ) ) ) / CS ) ) / ( CS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ( MRS + ARS ) - DDR ) * FirstVNF_Mem ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - ( ( RRSe + MUR ) / CS ) ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / Min( DS ,MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) - MRS ) ),( MRS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),RRS )", "choosing": "( Max( MLU,( Max( Min( DS ,Max( ( RRSe + RMSe ),CS ) ),Max( MLU,Max( ( ( RRSe + RMSe ) / CS ),( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( FirstVNF_CPU / ( Max( ( Min( MRS ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - BR ) * FirstVNF_Mem ) - MRS ) ),( ACS + ARS ) ) + ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_Mem ) ) ),( MRS * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( ( ( RRSe + RCSe ) / CS ),( ( RRSe + RMSe ) * ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( MDR + Const ),Max( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ),ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( RCSe * RCSe ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ( ( ( Const - RRS ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - MUC ) ),Max( MLU,Max( CS,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) ) ) * AMS ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( ( Min( DS ,( MUC - CS ) ) / Max( MUC,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / ( ( ARS - DDR ) * MDR ) ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),Max( MLU,Max( MLU,( ( RRSe + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( BR + Const ),( ( ( ( Const - ( ( Min( DDR ,RRS ) * FirstVNF_Mem ) - MRS ) ) * FirstVNF_Mem ) - MRS ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUM - CS ) ),Max( MLU,Max( MLU,( ( MUR + RMSe ) / ( DS * MUR ) ) ) ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15416666666666667, "obj2": 0.7195946483187242}, {"determining": "Max( ( CRS / FirstVNF_RAM ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MUC + MUC ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15208333333333332, "obj2": 0.7418793644428137}, {"determining": "Max( Max( BR,Const ),( ( ( ( FirstVNF_Mem_Server - RRS ) * FirstVNF_CPU ) * FirstVNF_Mem ) * ARS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MUC + MUC ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15208333333333332, "obj2": 0.7418793644428137}, {"determining": "Max( ( CRS / FirstVNF_RAM ),( MRS * MRS ) )", "choosing": "( Max( MLU,( Max( Min( DS ,( MUC - CS ) ),( MUC + MUC ) ) / CS ) ) / ( DS * ( DS * MUR ) ) )", "obj1": 0.15208333333333332, "obj2": 0.7418793644428137}]}