{"1": [{"determining": "Max( ( FirstVNF_Mem * Const ),( BR - ARS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - MUR ),( MLU / MUC ) )", "obj1": 0.3333333333333333, "obj2": 0.5864421441667573}, {"determining": "( ( AMS - AMS ) - ( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( RMSe / RRSe ) + ( RRSe + MLU ) )", "obj1": 0.6270833333333333, "obj2": 0.3509471011393343}, {"determining": "( ( MRS - ACS ) * ( MDR - PN ) )", "choosing": "( ( MLU + MUM ) - ( RMSe / MUM ) )", "obj1": 0.76875, "obj2": 0.10413244319451917}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Max( RMSe,MLU ) / ( MUC + MUM ) )", "obj1": 0.32708333333333334, "obj2": 0.6142812874738417}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_RAM_Server * ARS ) / ARS ) ) * Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "( ( RRSe - RRSe ) * ( Min( ( CS + RMSe ) ,RCSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) + ( CRS + DDR ) )", "choosing": "( ( MUC * RRSe ) / Min( MLU ,DS ) )", "obj1": 0.26458333333333334, "obj2": 0.6869733740505921}, {"determining": "Max( Min( FirstVNF_CPU_Server ,ACS ),( FirstVNF_CPU_Server * PN ) )", "choosing": "Max( Min( MLU ,DS ),Max( RRSe,RMSe ) )", "obj1": 0.41875, "obj2": 0.5224590234543528}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU - ( DDR + ( RRS - MRS ) ) ) )", "choosing": "Min( Min( CS ,Min( MLU ,MLU ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Const,DDR ) ,( FirstVNF_Mem_Server * MRS ) )", "choosing": "( Min( CS ,RCSe ) / ( CS + MUC ) )", "obj1": 0.3770833333333333, "obj2": 0.5471774836865361}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU - MDR ),( FirstVNF_Mem * PN ) )", "choosing": "( Min( RMSe ,DS ) / ( MUM - RCSe ) )", "obj1": 0.3645833333333333, "obj2": 0.5683270441890566}, {"determining": "( ( ARS - FirstVNF_RAM ) / ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( MUM * MUR ) * Min( MUR ,MUR ) )", "obj1": 0.48541666666666666, "obj2": 0.4610983465290468}, {"determining": "( Min( RRS ,FirstVNF_Mem ) / ( ( ( ( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * PN ) ) * Max( FirstVNF_CPU,AMS ) ) * ACS ) / AMS ) * FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( ( Min( Min( RCSe ,Max( ( MLU * ( MLU + ( MUC * RRSe ) ) ),CS ) ) ,Max( ( ( MUC - RCSe ) / CS ),( MUR + MUR ) ) ) / ( MLU - Min( ( DS - MUM ) ,( ( MUR - RMSe ) + RCSe ) ) ) ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + ACS ) / Min( ARS ,MDR ) ) + ( Max( Const,FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "( ( MLU + Min( DS ,RCSe ) ) - Max( Min( DS ,MLU ),( MLU * CS ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4715994225181417}, {"determining": "( ( DDR + Max( FirstVNF_CPU_Server,( CRS - DDR ) ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,CS ) / Min( RCSe ,( Min( ( MLU * CS ) ,( RMSe / CS ) ) / ( ( CS + DS ) * RCSe ) ) ) ) + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( RRS ,Const ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RCSe,MLU ) ,( RMSe / CS ) ) / Max( ( CS - RRSe ),( MUM - MLU ) ) )", "obj1": 0.34791666666666665, "obj2": 0.582920549887349}, {"determining": "( Min( MDR ,MRS ) - Min( ARS ,AMS ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RCSe * Min( ( MUC / ( RMSe - MUR ) ) ,RCSe ) ) ) + ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,DDR ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem_Server + MDR ) ,( BR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUM / RCSe ) * RRSe ) / ( MUR - ( MLU + MUC ) ) )", "obj1": 0.3104166666666667, "obj2": 0.6344452861369629}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_RAM * BR ) ) ,( Max( MDR,FirstVNF_RAM_Server ) * Min( PN ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * RRSe ) ) )", "obj1": 0.36041666666666666, "obj2": 0.5715785085367914}, {"determining": "( Max( ( ACS + FirstVNF_RAM ),( DDR + DDR ) ) - ( ( MRS * BR ) - ( CRS - PN ) ) )", "choosing": "( Min( ( MLU + MUM ) ,( DS / MLU ) ) / ( Min( RMSe ,MUC ) - ( MUC - RRSe ) ) )", "obj1": 0.39375, "obj2": 0.5450575617014621}, {"determining": "( ( FirstVNF_RAM_Server - ( Const + MDR ) ) * ( DDR / FirstVNF_RAM ) )", "choosing": "( ( ( DS * MUM ) * MUR ) * Max( MUC,( DS + CS ) ) )", "obj1": 0.5, "obj2": 0.4391999989639286}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( MRS + Const ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUM ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,ACS ) * ( Const + FirstVNF_Mem_Server ) ) * ( Max( MDR,FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( ( Max( MRS,FirstVNF_CPU ) - Max( MDR,MDR ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS / Min( MLU ,Max( MUC,CS ) ) ) / ( CS - ( Min( RMSe ,MUR ) - RCSe ) ) )", "obj1": 0.9291666666666667, "obj2": 0.0656738576790449}, {"determining": "Max( ( Max( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) / AMS ),( DDR / MDR ) ) / ( ( DDR + BR ) - ( FirstVNF_RAM / MDR ) ) ),( ( ( FirstVNF_CPU + BR ) / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) - ( ( MRS + MRS ) - ( CRS - RRS ) ) ) )", "choosing": "( ( Min( Max( MUM,MLU ) ,( CS / DS ) ) - ( ( MUC + CS ) * ( CS * RMSe ) ) ) + ( ( ( CS * MUR ) + Max( ( MUR / MUC ),RRSe ) ) * ( ( RMSe + MUC ) + Min( CS ,RCSe ) ) ) )", "obj1": 0.7583333333333333, "obj2": 0.23585040263555368}, {"determining": "Max( ( ( ( PN / AMS ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) / Max( ACS,RRS ) ) ),( Max( Min( MRS ,Const ),( ACS + BR ) ) - Max( ( MDR + MDR ),( CRS - RRS ) ) ) )", "choosing": "( Max( RCSe,MUR ) + ( MUM * RMSe ) )", "obj1": 0.42291666666666666, "obj2": 0.5018951084190271}, {"determining": "( ( Max( Min( DDR ,ARS ),Min( AMS ,RRS ) ) + Max( ( RRS - FirstVNF_CPU ),( MDR + MRS ) ) ) * Max( Max( Max( RRS,ARS ),( RRS / ARS ) ),( ( MDR / ACS ) / Min( CRS ,MDR ) ) ) )", "choosing": "( Min( DS ,MLU ) - Max( Max( CS,DS ),( ( RCSe * MUM ) + ( RRSe / MUC ) ) ) )", "obj1": 0.40625, "obj2": 0.5280438955713963}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,DDR ) + ( ACS + ARS ) ) + ( Max( AMS,BR ) - ( ACS + FirstVNF_RAM_Server ) ) ) ,( Max( ( DDR * RRS ),( FirstVNF_Mem + RRS ) ) + ( ( PN * MRS ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe * Min( MUM ,MUM ) ) + ( Min( ( RMSe / MUC ) ,( DS + MUR ) ) / DS ) )", "obj1": 0.24166666666666667, "obj2": 0.7115461336622612}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - Const ) ) ) ,( Min( FirstVNF_RAM ,Const ) / ( ( MDR - ACS ) / Min( Const ,BR ) ) ) )", "choosing": "( ( Min( ( RRSe - RRSe ) ,Min( MUR ,( RCSe - Min( DS ,Min( MUC ,( RMSe * MUC ) ) ) ) ) ) / RCSe ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) - ( DDR + DDR ) ) * Max( ( FirstVNF_CPU - PN ),( CRS * FirstVNF_Mem_Server ) ) ) ,Max( ( Min( RRS ,BR ) + ( MRS * Const ) ),Min( Max( MRS,BR ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MUM * MUR ) * ( RMSe - RRSe ) ) / ( Max( RMSe,MUC ) + ( MUC - RRSe ) ) ) + ( ( Min( MLU ,RCSe ) + ( RCSe - MUM ) ) / ( Max( RCSe,CS ) - ( MLU / RCSe ) ) ) )", "obj1": 0.675, "obj2": 0.2699910520469801}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),Min( MLU ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM / ARS ) * PN ) ) / ( ( AMS / AMS ) + ( PN * ARS ) ) ) / Min( ( ( BR + DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( RCSe ,DS ) ) ) / Min( MLU ,Max( ( Min( MUC ,CS ) * MUC ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Max( FirstVNF_CPU_Server,Const ) ) / ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,MUM ) + ( MLU - MUM ) )", "obj1": 0.3125, "obj2": 0.6291928402222066}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( RRS / Max( FirstVNF_CPU,( Max( MDR,DDR ) - DDR ) ) ) ) ) * ( Min( ( FirstVNF_CPU + ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * CS ) ) * Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( Max( BR,FirstVNF_RAM_Server ) - ( ACS - DDR ) ) ) + ( Min( ( ARS - FirstVNF_CPU ) ,( BR + PN ) ) / Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( Max( RRSe,RRSe ) / ( DS - RRSe ) )", "obj1": 0.2875, "obj2": 0.6511940383896782}, {"determining": "( ( FirstVNF_CPU_Server * ( PN / ( DDR / MRS ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUC ) ,( MUM + MUM ) ) - Max( Max( CS,RRSe ),( RCSe + CS ) ) ) + ( Max( CS,CS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( Min( BR ,BR ) ,Max( ARS,FirstVNF_CPU_Server ) ) ,Min( ( DDR + FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ),( ( Min( AMS ,FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM ) ) - ( Max( ARS,FirstVNF_RAM ) / ( FirstVNF_RAM * ARS ) ) ) )", "choosing": "Min( ( ( ( MLU - DS ) - Max( RMSe,RCSe ) ) / Min( Min( CS ,DS ) ,Min( RRSe ,RMSe ) ) ) ,Max( ( ( CS + RRSe ) + ( MUC * CS ) ),( Max( RMSe,MUM ) * ( RCSe - RCSe ) ) ) )", "obj1": 0.27708333333333335, "obj2": 0.6621508180569373}], "2": [{"determining": "Max( ( FirstVNF_Mem * Const ),( BR - ARS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - MUR ),( MLU / MUC ) )", "obj1": 0.3333333333333333, "obj2": 0.5864421441667573}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_RAM_Server * ARS ) / ARS ) ) * Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "( ( RRSe - RRSe ) * ( Min( ( CS + RMSe ) ,RCSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU - ( DDR + ( RRS - MRS ) ) ) )", "choosing": "Min( Min( CS ,Min( MLU ,MLU ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) / ( ( ( ( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * PN ) ) * Max( FirstVNF_CPU,AMS ) ) * ACS ) / AMS ) * FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( ( Min( Min( RCSe ,Max( ( MLU * ( MLU + ( MUC * RRSe ) ) ),CS ) ) ,Max( ( ( MUC - RCSe ) / CS ),( MUR + MUR ) ) ) / ( MLU - Min( ( DS - MUM ) ,( ( MUR - RMSe ) + RCSe ) ) ) ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + Max( FirstVNF_CPU_Server,( CRS - DDR ) ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,CS ) / Min( RCSe ,( Min( ( MLU * CS ) ,( RMSe / CS ) ) / ( ( CS + DS ) * RCSe ) ) ) ) + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,MRS ) - Min( ARS ,AMS ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RCSe * Min( ( MUC / ( RMSe - MUR ) ) ,RCSe ) ) ) + ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( MRS + Const ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUM ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - Const ) ) ) ,( Min( FirstVNF_RAM ,Const ) / ( ( MDR - ACS ) / Min( Const ,BR ) ) ) )", "choosing": "( ( Min( ( RRSe - RRSe ) ,Min( MUR ,( RCSe - Min( DS ,Min( MUC ,( RMSe * MUC ) ) ) ) ) ) / RCSe ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),Min( MLU ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM / ARS ) * PN ) ) / ( ( AMS / AMS ) + ( PN * ARS ) ) ) / Min( ( ( BR + DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( RCSe ,DS ) ) ) / Min( MLU ,Max( ( Min( MUC ,CS ) * MUC ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( RRS / Max( FirstVNF_CPU,( Max( MDR,DDR ) - DDR ) ) ) ) ) * ( Min( ( FirstVNF_CPU + ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * CS ) ) * Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( PN / ( DDR / MRS ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUC ) ,( MUM + MUM ) ) - Max( Max( CS,RRSe ),( RCSe + CS ) ) ) + ( Max( CS,CS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Max( MRS,DDR ) ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( Max( Max( MUR,MLU ),MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( ( MRS - AMS ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( ( ( Min( MUR ,Max( Min( MLU ,CS ),MLU ) ) * Min( ( RMSe / MUC ) ,MLU ) ) / RCSe ) + ( MUC - ( RRSe / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ACS * ACS ) * MDR ) ,( MDR * FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - MDR ) ) )", "choosing": "Max( Max( CS,MUC ),( Min( MUR ,RRSe ) * ( ( DS - Max( DS,RMSe ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( ( FirstVNF_RAM / FirstVNF_RAM ) * MDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( ( RCSe + RRSe ) / MUC ) * Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),Max( MUC,( MLU / Max( RCSe,Max( CS,( DS * ( MUR / MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( DDR + ( Max( ( ( CRS / FirstVNF_RAM ) - ARS ),FirstVNF_Mem_Server ) / MRS ) ) - FirstVNF_CPU ) ,( DDR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( MUR * ( MUM / MLU ) ) + CS ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / FirstVNF_Mem_Server ) - ( ( DDR / FirstVNF_Mem_Server ) * Max( ACS,FirstVNF_CPU_Server ) ) ) - MDR ) - MDR )", "choosing": "Max( ( ( ( DS - RCSe ) + Min( ( MUR + Min( MUR ,( ( MUC * MUR ) * ( RRSe * MUC ) ) ) ) ,MUR ) ) / ( ( Min( RMSe ,CS ) - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( CS,DS ) ) - ( ( RMSe / DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS + MRS ) ,Max( ACS,( ACS - BR ) ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( BR,Const ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Min( Min( RRSe ,RRSe ) ,Max( Min( Max( CS,( ( MUM / ( RRSe + ( DS - MUR ) ) ) / MUR ) ) ,MUR ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,( Max( ARS,Const ) / DDR ) ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( MLU + MUM ) - ( DS - Max( ( Max( RMSe,RMSe ) + MUM ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( MUM * MUR ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / FirstVNF_RAM_Server )", "choosing": "Min( Min( CS ,DS ) ,Max( Max( ( DS * DS ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( BR ,CRS ) )", "choosing": "( Max( Max( ( DS * DS ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) + ( ( ( MLU * RRSe ) + ( RRSe * DS ) ) + ( Max( MUR,RRSe ) + ( MUM / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,BR ) - ( DDR / MDR ) ) / ( ( ARS * MDR ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * MUR ) / ( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( DDR ,CRS ) ) - ( Max( Max( ( FirstVNF_Mem + RRS ),AMS ),Const ) - ( CRS - PN ) ) ) * ( MDR + ACS ) )", "choosing": "( ( ( ( ( MUR + RMSe ) / MUC ) - ( MUC / RRSe ) ) - Max( Max( Max( ( MUR / CS ),( RRSe * RCSe ) ),CS ),Max( RRSe,RRSe ) ) ) + ( ( ( MUR * RMSe ) + ( DS * CS ) ) * Min( ( ( ( CS / RRSe ) / RMSe ) * MUR ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( Const ,Max( DDR,AMS ) ) ,CRS ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) / ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MUR,RMSe ) ,Max( MLU,CS ) ) ) + Max( CS,( ( ( RCSe - RCSe ) * RRSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( PN / Max( AMS,ACS ) ) ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * ( RCSe / MUC ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * Min( FirstVNF_CPU ,( ( PN - ( Min( Min( FirstVNF_CPU ,CRS ) ,ACS ) / Const ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) + Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR * FirstVNF_RAM ) - FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server + ACS ) / Const ) )", "choosing": "( ( MUR + ( ( RCSe - MUR ) + ( MUM - RRSe ) ) ) / ( Min( ( MUM * RCSe ) ,DS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const / DDR ) ,FirstVNF_CPU ) + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe * MUC ) / RRSe ) / ( Min( ( MUM * RCSe ) ,DS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( Max( Min( BR ,FirstVNF_CPU_Server ),Min( CRS ,CRS ) ) * DDR ) ) )", "choosing": "( Max( MLU,( ( RCSe * ( Max( Max( ( CS / CS ),RCSe ),MUC ) * ( MUR + CS ) ) ) - ( RMSe / Max( RRSe,RRSe ) ) ) ) + ( MUR + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( MDR - FirstVNF_RAM_Server ),( Max( AMS,Max( PN,AMS ) ) * Const ) ) )", "choosing": "( ( DS * RMSe ) / ( MUR * ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,DDR ) ,( FirstVNF_Mem_Server * Max( ( ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ),AMS ) ) ) ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM / RRSe ) - MLU ) + Max( Min( CS ,RCSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MDR ) - ( AMS + ( FirstVNF_RAM_Server - ( CRS - CRS ) ) ) )", "choosing": "( ( MUR * Min( Max( RCSe,( CS - Min( ( MUM * DS ) ,DS ) ) ) ,( DS / DS ) ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * Max( Const,Max( ACS,Max( BR,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( MUC ,CS ) ,( Min( MLU ,CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS * DDR ) ,( ( MRS / ( MDR * MDR ) ) * ( FirstVNF_RAM_Server - ( MDR + ACS ) ) ) )", "choosing": "( ( RCSe - ( RRSe + ( Min( Max( ( ( CS / MLU ) / DS ),MUM ) ,( RMSe * MUR ) ) / RRSe ) ) ) + ( ( RRSe + MLU ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * MUR ) * Max( MUC,( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) / ( ( Const * BR ) * ( MRS + ( FirstVNF_RAM / RRS ) ) ) ) )", "choosing": "Max( Min( ( ( MLU / RMSe ) + ( RRSe - MLU ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( ( RMSe - Max( CS,( RMSe * ( RMSe / RMSe ) ) ) ),CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( ( FirstVNF_RAM_Server + ( PN / Max( AMS,ACS ) ) ) ,MDR ) ) )", "choosing": "Min( Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * ( RCSe / MUC ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( RRS * Max( Min( Min( DDR ,Min( Max( FirstVNF_RAM,MRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,DDR ),FirstVNF_RAM_Server ) ) ) - ( FirstVNF_RAM_Server + ( RRS / ARS ) ) )", "choosing": "Min( ( DS + ( ( ( RRSe * Min( MUR ,MLU ) ) * ( RRSe / MUC ) ) * ( RMSe * ( Max( Min( RCSe ,CS ),MUC ) + ( RRSe - ( Max( DS,MUR ) + ( RMSe + CS ) ) ) ) ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( ( Max( ( FirstVNF_Mem * ACS ),PN ) + CRS ) / ( AMS * ACS ) ) ) )", "choosing": "Min( Min( ( Max( MLU,( DS / ( RMSe - ( Min( RRSe ,DS ) * ( DS / MUR ) ) ) ) ) - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,CS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) * ( FirstVNF_RAM_Server - Const ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( ( RRSe + ( ( ( RCSe / Min( MUR ,DS ) ) * ( RRSe * ( MUR / MLU ) ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( ( MRS - AMS ) ,( ( MDR - ACS ) / Min( Const ,BR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( Min( ( RRSe - RRSe ) ,Min( MUR ,RMSe ) ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( BR / AMS ) + Min( ( MRS - AMS ) ,MRS ) ) / ( RRS + AMS ) ) + ( Max( ACS,PN ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,FirstVNF_CPU_Server ),( FirstVNF_RAM / ACS ) ) / ( ( MDR - ACS ) / ( PN + RRS ) ) ) )", "choosing": "( ( Min( ( CS - RRSe ) ,Min( MUR ,RMSe ) ) / MUM ) + Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( Max( BR,FirstVNF_CPU ) ,MRS ) - ( AMS + RRS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,( ( MDR / MDR ) + FirstVNF_RAM ) ),( FirstVNF_RAM / ACS ) ) / ( ( Max( FirstVNF_Mem_Server,AMS ) - ACS ) / ( Const + BR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Max( MUR,( ( ( Min( Max( Min( MLU ,MLU ),MLU ) ,MUR ) - Min( ( MUC / RMSe ) ,MLU ) ) * RCSe ) + ( MUR * ( DS - Max( MUM,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( MRS ,( ( ARS * MRS ) - AMS ) ) )", "choosing": "( ( Min( ( ( DS / RCSe ) + Min( ( MUC / MUR ) ,Max( ( RRSe / Max( RMSe,MUR ) ),( ( CS * RCSe ) - ( DS + RCSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) + MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS - FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( Const / BR ),( Max( FirstVNF_RAM_Server,ACS ) * MRS ) ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) )", "choosing": "( ( CS - Min( Min( ( RCSe * RMSe ) ,MUM ) ,RCSe ) ) + ( ( MUC + ( MUM * ( MUC + MUM ) ) ) + Min( MUR ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( CS * DS ) + ( ( MUC + ( MUC * MUM ) ) + ( MUR - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - ( ACS - CRS ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * ( Max( MUR,MUR ) * Max( RRSe,MUC ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server - MDR ) ,MDR ) * DDR ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Max( CRS,ACS ) ,( ACS * PN ) ) ) )", "choosing": "( ( CS - ( ( ( ( CS / CS ) / RRSe ) / ( CS / Min( DS ,MLU ) ) ) + Max( RMSe,( Min( ( MUR * MUM ) ,( CS - RCSe ) ) / RMSe ) ) ) ) - ( ( Max( ( DS / CS ),( Max( Min( Max( MUR,CS ) ,MUC ),( ( RCSe - MUM ) * Max( RCSe,RRSe ) ) ) / RCSe ) ) * Min( RRSe ,MUM ) ) * ( ( MUM * CS ) * Min( DS ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( Min( ACS ,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + ( ( CS / MLU ) * MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( CS / RCSe ) / ( ( CS / MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - ( Const - ACS ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC / CS ) - ( MUC * RRSe ) ) - ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) * ( BR / BR ) ) / ( ( ( ( FirstVNF_RAM + CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - Max( MRS,FirstVNF_RAM ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - Min( MRS ,ACS ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( MUC,RCSe ) ,( Max( RRSe,RCSe ) * ( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - FirstVNF_RAM ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RRSe / RRSe ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( RRS ,Const ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) ) ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + ( Min( Max( RCSe,MLU ) ,( RMSe / CS ) ) / Max( ( CS - RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( ( MRS - AMS ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( ( ( Min( MUR ,Max( Min( MLU ,CS ),MLU ) ) * Min( ( RMSe / MUC ) ,MLU ) ) / RCSe ) + ( MUC - ( RRSe / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - ( DDR - FirstVNF_RAM_Server ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUC + RMSe ) - ( Max( MUM,MLU ) - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( ( AMS - AMS ) - ( FirstVNF_CPU_Server - AMS ) ) + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( MLU + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Min( ( PN - MRS ) ,DDR ) )", "choosing": "( ( ( RRSe + ( ( MUM * MUC ) * MUM ) ) / Min( ( Max( DS,( Max( Max( MUR,RMSe ),RCSe ) + Min( ( MUC / MLU ) ,( DS + MUC ) ) ) ) - ( ( CS / RRSe ) * Min( MUM ,RRSe ) ) ) ,MUM ) ) + ( RRSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( Min( ( BR - ( BR - Min( CRS ,( FirstVNF_Mem + RRS ) ) ) ) ,CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * MUR ) * Min( MUR ,Max( RRSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( ( Min( MRS ,RRS ) + ( FirstVNF_CPU_Server - AMS ) ) + Max( Min( ARS ,FirstVNF_CPU_Server ),( BR + BR ) ) ) * Max( Min( Max( BR,FirstVNF_RAM ) ,( ACS - CRS ) ),( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( Max( MUR,MUR ) * Max( RRSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ARS,ACS ) ,Min( AMS ,Const ) ) / ( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) ) )", "choosing": "( ( Max( RMSe,RMSe ) * ( MUM / MUM ) ) / ( ( RCSe + CS ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const * BR ) * ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( Const + ( ACS / CRS ) ) ) )", "choosing": "( Min( ( RRSe * MUM ) ,( RCSe - ( MUM - RRSe ) ) ) * ( ( MUM + RRSe ) * ( Max( ( Min( DS ,DS ) - ( RCSe + MUC ) ),CS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,DDR ) + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / ( RCSe - MUM ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe * MUM ) ,( CS - MUM ) ) * ( ( MUM + RRSe ) * ( CS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / Max( BR,ARS ) ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( DS + DS ),( MLU / MUC ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / CRS ) * Min( RRS ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,( ACS - PN ) ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( Max( ( MLU + ( ( MUR * Min( ( RCSe - MUC ) ,( RMSe / RMSe ) ) ) + DS ) ),RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) + DS ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / ( ( BR + AMS ) / CRS ) ) ) ) ) )", "choosing": "( ( MUC * RMSe ) + Max( CS,Min( Min( Max( ( ( CS + MUR ) + ( MUM - MUC ) ),RCSe ) ,MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * ( CRS - FirstVNF_Mem ) )", "choosing": "( ( Max( DS,Max( ( Max( Min( RRSe ,Min( MUM ,RRSe ) ),MLU ) / RCSe ),Min( CS ,RRSe ) ) ) - RRSe ) * ( MUM + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MDR / RRS ) ) ) - ( Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) / ( Max( Const,BR ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( ( ( RMSe + CS ) + Max( MUC,( MUM - Max( MUM,RRSe ) ) ) ) + Min( MUC ,Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( ( MDR - ( ( FirstVNF_Mem - FirstVNF_RAM ) - CRS ) ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( AMS,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( MUM + ( ( ( DS * CS ) + ( ( ( Min( MLU ,MUC ) - ( ( DS - MLU ) / ( MUR / MUR ) ) ) - Min( RRSe ,MLU ) ) * RMSe ) ) * Min( Max( MLU,CS ) ,Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Max( MDR,RRS ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_RAM_Server * BR ) ) * ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / ( ( MUR - ( DS - MUR ) ) * MUC ) ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Max( Max( MLU,RMSe ),Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,AMS ) ,( ( DDR - ( MDR / CRS ) ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) )", "choosing": "( ( MUR - MUR ) * ( Min( MLU ,MLU ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Max( ( FirstVNF_Mem * Const ),( BR - ARS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - MUR ),( MLU / MUC ) )", "obj1": 0.3333333333333333, "obj2": 0.5864421441667573}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_RAM_Server * ARS ) / ARS ) ) * Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "( ( RRSe - RRSe ) * ( Min( ( CS + RMSe ) ,RCSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU - ( DDR + ( RRS - MRS ) ) ) )", "choosing": "Min( Min( CS ,Min( MLU ,MLU ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) / ( ( ( ( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * PN ) ) * Max( FirstVNF_CPU,AMS ) ) * ACS ) / AMS ) * FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( ( Min( Min( RCSe ,Max( ( MLU * ( MLU + ( MUC * RRSe ) ) ),CS ) ) ,Max( ( ( MUC - RCSe ) / CS ),( MUR + MUR ) ) ) / ( MLU - Min( ( DS - MUM ) ,( ( MUR - RMSe ) + RCSe ) ) ) ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + Max( FirstVNF_CPU_Server,( CRS - DDR ) ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,CS ) / Min( RCSe ,( Min( ( MLU * CS ) ,( RMSe / CS ) ) / ( ( CS + DS ) * RCSe ) ) ) ) + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,MRS ) - Min( ARS ,AMS ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RCSe * Min( ( MUC / ( RMSe - MUR ) ) ,RCSe ) ) ) + ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( MRS + Const ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUM ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - Const ) ) ) ,( Min( FirstVNF_RAM ,Const ) / ( ( MDR - ACS ) / Min( Const ,BR ) ) ) )", "choosing": "( ( Min( ( RRSe - RRSe ) ,Min( MUR ,( RCSe - Min( DS ,Min( MUC ,( RMSe * MUC ) ) ) ) ) ) / RCSe ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),Min( MLU ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM / ARS ) * PN ) ) / ( ( AMS / AMS ) + ( PN * ARS ) ) ) / Min( ( ( BR + DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( RCSe ,DS ) ) ) / Min( MLU ,Max( ( Min( MUC ,CS ) * MUC ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( RRS / Max( FirstVNF_CPU,( Max( MDR,DDR ) - DDR ) ) ) ) ) * ( Min( ( FirstVNF_CPU + ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * CS ) ) * Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( PN / ( DDR / MRS ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUC ) ,( MUM + MUM ) ) - Max( Max( CS,RRSe ),( RCSe + CS ) ) ) + ( Max( CS,CS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Max( MRS,DDR ) ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( Max( Max( MUR,MLU ),MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( ( MRS - AMS ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( ( ( Min( MUR ,Max( Min( MLU ,CS ),MLU ) ) * Min( ( RMSe / MUC ) ,MLU ) ) / RCSe ) + ( MUC - ( RRSe / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ACS * ACS ) * MDR ) ,( MDR * FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - MDR ) ) )", "choosing": "Max( Max( CS,MUC ),( Min( MUR ,RRSe ) * ( ( DS - Max( DS,RMSe ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( ( FirstVNF_RAM / FirstVNF_RAM ) * MDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( ( RCSe + RRSe ) / MUC ) * Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),Max( MUC,( MLU / Max( RCSe,Max( CS,( DS * ( MUR / MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( DDR + ( Max( ( ( CRS / FirstVNF_RAM ) - ARS ),FirstVNF_Mem_Server ) / MRS ) ) - FirstVNF_CPU ) ,( DDR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( MUR * ( MUM / MLU ) ) + CS ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / FirstVNF_Mem_Server ) - ( ( DDR / FirstVNF_Mem_Server ) * Max( ACS,FirstVNF_CPU_Server ) ) ) - MDR ) - MDR )", "choosing": "Max( ( ( ( DS - RCSe ) + Min( ( MUR + Min( MUR ,( ( MUC * MUR ) * ( RRSe * MUC ) ) ) ) ,MUR ) ) / ( ( Min( RMSe ,CS ) - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( CS,DS ) ) - ( ( RMSe / DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS + MRS ) ,Max( ACS,( ACS - BR ) ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( BR,Const ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Min( Min( RRSe ,RRSe ) ,Max( Min( Max( CS,( ( MUM / ( RRSe + ( DS - MUR ) ) ) / MUR ) ) ,MUR ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,( Max( ARS,Const ) / DDR ) ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( MLU + MUM ) - ( DS - Max( ( Max( RMSe,RMSe ) + MUM ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( MUM * MUR ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / FirstVNF_RAM_Server )", "choosing": "Min( Min( CS ,DS ) ,Max( Max( ( DS * DS ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( BR ,CRS ) )", "choosing": "( Max( Max( ( DS * DS ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) + ( ( ( MLU * RRSe ) + ( RRSe * DS ) ) + ( Max( MUR,RRSe ) + ( MUM / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,BR ) - ( DDR / MDR ) ) / ( ( ARS * MDR ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * MUR ) / ( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( DDR ,CRS ) ) - ( Max( Max( ( FirstVNF_Mem + RRS ),AMS ),Const ) - ( CRS - PN ) ) ) * ( MDR + ACS ) )", "choosing": "( ( ( ( ( MUR + RMSe ) / MUC ) - ( MUC / RRSe ) ) - Max( Max( Max( ( MUR / CS ),( RRSe * RCSe ) ),CS ),Max( RRSe,RRSe ) ) ) + ( ( ( MUR * RMSe ) + ( DS * CS ) ) * Min( ( ( ( CS / RRSe ) / RMSe ) * MUR ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( Const ,Max( DDR,AMS ) ) ,CRS ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) / ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MUR,RMSe ) ,Max( MLU,CS ) ) ) + Max( CS,( ( ( RCSe - RCSe ) * RRSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( PN / Max( AMS,ACS ) ) ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * ( RCSe / MUC ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * Min( FirstVNF_CPU ,( ( PN - ( Min( Min( FirstVNF_CPU ,CRS ) ,ACS ) / Const ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) + Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR * FirstVNF_RAM ) - FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server + ACS ) / Const ) )", "choosing": "( ( MUR + ( ( RCSe - MUR ) + ( MUM - RRSe ) ) ) / ( Min( ( MUM * RCSe ) ,DS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const / DDR ) ,FirstVNF_CPU ) + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe * MUC ) / RRSe ) / ( Min( ( MUM * RCSe ) ,DS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( Max( Min( BR ,FirstVNF_CPU_Server ),Min( CRS ,CRS ) ) * DDR ) ) )", "choosing": "( Max( MLU,( ( RCSe * ( Max( Max( ( CS / CS ),RCSe ),MUC ) * ( MUR + CS ) ) ) - ( RMSe / Max( RRSe,RRSe ) ) ) ) + ( MUR + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( MDR - FirstVNF_RAM_Server ),( Max( AMS,Max( PN,AMS ) ) * Const ) ) )", "choosing": "( ( DS * RMSe ) / ( MUR * ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,DDR ) ,( FirstVNF_Mem_Server * Max( ( ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ),AMS ) ) ) ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM / RRSe ) - MLU ) + Max( Min( CS ,RCSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MDR ) - ( AMS + ( FirstVNF_RAM_Server - ( CRS - CRS ) ) ) )", "choosing": "( ( MUR * Min( Max( RCSe,( CS - Min( ( MUM * DS ) ,DS ) ) ) ,( DS / DS ) ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * Max( Const,Max( ACS,Max( BR,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( MUC ,CS ) ,( Min( MLU ,CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS * DDR ) ,( ( MRS / ( MDR * MDR ) ) * ( FirstVNF_RAM_Server - ( MDR + ACS ) ) ) )", "choosing": "( ( RCSe - ( RRSe + ( Min( Max( ( ( CS / MLU ) / DS ),MUM ) ,( RMSe * MUR ) ) / RRSe ) ) ) + ( ( RRSe + MLU ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * MUR ) * Max( MUC,( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) / ( ( Const * BR ) * ( MRS + ( FirstVNF_RAM / RRS ) ) ) ) )", "choosing": "Max( Min( ( ( MLU / RMSe ) + ( RRSe - MLU ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( ( RMSe - Max( CS,( RMSe * ( RMSe / RMSe ) ) ) ),CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( ( FirstVNF_RAM_Server + ( PN / Max( AMS,ACS ) ) ) ,MDR ) ) )", "choosing": "Min( Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * ( RCSe / MUC ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( RRS * Max( Min( Min( DDR ,Min( Max( FirstVNF_RAM,MRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,DDR ),FirstVNF_RAM_Server ) ) ) - ( FirstVNF_RAM_Server + ( RRS / ARS ) ) )", "choosing": "Min( ( DS + ( ( ( RRSe * Min( MUR ,MLU ) ) * ( RRSe / MUC ) ) * ( RMSe * ( Max( Min( RCSe ,CS ),MUC ) + ( RRSe - ( Max( DS,MUR ) + ( RMSe + CS ) ) ) ) ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( ( Max( ( FirstVNF_Mem * ACS ),PN ) + CRS ) / ( AMS * ACS ) ) ) )", "choosing": "Min( Min( ( Max( MLU,( DS / ( RMSe - ( Min( RRSe ,DS ) * ( DS / MUR ) ) ) ) ) - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,CS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) * ( FirstVNF_RAM_Server - Const ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( ( RRSe + ( ( ( RCSe / Min( MUR ,DS ) ) * ( RRSe * ( MUR / MLU ) ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( ( MRS - AMS ) ,( ( MDR - ACS ) / Min( Const ,BR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( Min( ( RRSe - RRSe ) ,Min( MUR ,RMSe ) ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( BR / AMS ) + Min( ( MRS - AMS ) ,MRS ) ) / ( RRS + AMS ) ) + ( Max( ACS,PN ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,FirstVNF_CPU_Server ),( FirstVNF_RAM / ACS ) ) / ( ( MDR - ACS ) / ( PN + RRS ) ) ) )", "choosing": "( ( Min( ( CS - RRSe ) ,Min( MUR ,RMSe ) ) / MUM ) + Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( Max( BR,FirstVNF_CPU ) ,MRS ) - ( AMS + RRS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,( ( MDR / MDR ) + FirstVNF_RAM ) ),( FirstVNF_RAM / ACS ) ) / ( ( Max( FirstVNF_Mem_Server,AMS ) - ACS ) / ( Const + BR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Max( MUR,( ( ( Min( Max( Min( MLU ,MLU ),MLU ) ,MUR ) - Min( ( MUC / RMSe ) ,MLU ) ) * RCSe ) + ( MUR * ( DS - Max( MUM,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( MRS ,( ( ARS * MRS ) - AMS ) ) )", "choosing": "( ( Min( ( ( DS / RCSe ) + Min( ( MUC / MUR ) ,Max( ( RRSe / Max( RMSe,MUR ) ),( ( CS * RCSe ) - ( DS + RCSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) + MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS - FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( Const / BR ),( Max( FirstVNF_RAM_Server,ACS ) * MRS ) ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) )", "choosing": "( ( CS - Min( Min( ( RCSe * RMSe ) ,MUM ) ,RCSe ) ) + ( ( MUC + ( MUM * ( MUC + MUM ) ) ) + Min( MUR ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( CS * DS ) + ( ( MUC + ( MUC * MUM ) ) + ( MUR - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - ( ACS - CRS ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * ( Max( MUR,MUR ) * Max( RRSe,MUC ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server - MDR ) ,MDR ) * DDR ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Max( CRS,ACS ) ,( ACS * PN ) ) ) )", "choosing": "( ( CS - ( ( ( ( CS / CS ) / RRSe ) / ( CS / Min( DS ,MLU ) ) ) + Max( RMSe,( Min( ( MUR * MUM ) ,( CS - RCSe ) ) / RMSe ) ) ) ) - ( ( Max( ( DS / CS ),( Max( Min( Max( MUR,CS ) ,MUC ),( ( RCSe - MUM ) * Max( RCSe,RRSe ) ) ) / RCSe ) ) * Min( RRSe ,MUM ) ) * ( ( MUM * CS ) * Min( DS ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( Min( ACS ,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + ( ( CS / MLU ) * MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( CS / RCSe ) / ( ( CS / MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - ( Const - ACS ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC / CS ) - ( MUC * RRSe ) ) - ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) * ( BR / BR ) ) / ( ( ( ( FirstVNF_RAM + CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - Max( MRS,FirstVNF_RAM ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - Min( MRS ,ACS ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( MUC,RCSe ) ,( Max( RRSe,RCSe ) * ( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - FirstVNF_RAM ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RRSe / RRSe ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( RRS ,Const ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) ) ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + ( Min( Max( RCSe,MLU ) ,( RMSe / CS ) ) / Max( ( CS - RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( ( MRS - AMS ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( ( ( Min( MUR ,Max( Min( MLU ,CS ),MLU ) ) * Min( ( RMSe / MUC ) ,MLU ) ) / RCSe ) + ( MUC - ( RRSe / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - ( DDR - FirstVNF_RAM_Server ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUC + RMSe ) - ( Max( MUM,MLU ) - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( ( AMS - AMS ) - ( FirstVNF_CPU_Server - AMS ) ) + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( MLU + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Min( ( PN - MRS ) ,DDR ) )", "choosing": "( ( ( RRSe + ( ( MUM * MUC ) * MUM ) ) / Min( ( Max( DS,( Max( Max( MUR,RMSe ),RCSe ) + Min( ( MUC / MLU ) ,( DS + MUC ) ) ) ) - ( ( CS / RRSe ) * Min( MUM ,RRSe ) ) ) ,MUM ) ) + ( RRSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( Min( ( BR - ( BR - Min( CRS ,( FirstVNF_Mem + RRS ) ) ) ) ,CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * MUR ) * Min( MUR ,Max( RRSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( ( Min( MRS ,RRS ) + ( FirstVNF_CPU_Server - AMS ) ) + Max( Min( ARS ,FirstVNF_CPU_Server ),( BR + BR ) ) ) * Max( Min( Max( BR,FirstVNF_RAM ) ,( ACS - CRS ) ),( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( Max( MUR,MUR ) * Max( RRSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ARS,ACS ) ,Min( AMS ,Const ) ) / ( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) ) )", "choosing": "( ( Max( RMSe,RMSe ) * ( MUM / MUM ) ) / ( ( RCSe + CS ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const * BR ) * ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( Const + ( ACS / CRS ) ) ) )", "choosing": "( Min( ( RRSe * MUM ) ,( RCSe - ( MUM - RRSe ) ) ) * ( ( MUM + RRSe ) * ( Max( ( Min( DS ,DS ) - ( RCSe + MUC ) ),CS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,DDR ) + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / ( RCSe - MUM ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe * MUM ) ,( CS - MUM ) ) * ( ( MUM + RRSe ) * ( CS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / Max( BR,ARS ) ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( DS + DS ),( MLU / MUC ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / CRS ) * Min( RRS ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,( ACS - PN ) ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( Max( ( MLU + ( ( MUR * Min( ( RCSe - MUC ) ,( RMSe / RMSe ) ) ) + DS ) ),RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) + DS ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / ( ( BR + AMS ) / CRS ) ) ) ) ) )", "choosing": "( ( MUC * RMSe ) + Max( CS,Min( Min( Max( ( ( CS + MUR ) + ( MUM - MUC ) ),RCSe ) ,MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * ( CRS - FirstVNF_Mem ) )", "choosing": "( ( Max( DS,Max( ( Max( Min( RRSe ,Min( MUM ,RRSe ) ),MLU ) / RCSe ),Min( CS ,RRSe ) ) ) - RRSe ) * ( MUM + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MDR / RRS ) ) ) - ( Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) / ( Max( Const,BR ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( ( ( RMSe + CS ) + Max( MUC,( MUM - Max( MUM,RRSe ) ) ) ) + Min( MUC ,Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( ( MDR - ( ( FirstVNF_Mem - FirstVNF_RAM ) - CRS ) ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( AMS,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( MUM + ( ( ( DS * CS ) + ( ( ( Min( MLU ,MUC ) - ( ( DS - MLU ) / ( MUR / MUR ) ) ) - Min( RRSe ,MLU ) ) * RMSe ) ) * Min( Max( MLU,CS ) ,Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Max( MDR,RRS ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_RAM_Server * BR ) ) * ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / ( ( MUR - ( DS - MUR ) ) * MUC ) ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Max( Max( MLU,RMSe ),Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,AMS ) ,( ( DDR - ( MDR / CRS ) ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) )", "choosing": "( ( MUR - MUR ) * ( Min( MLU ,MLU ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Max( ( FirstVNF_Mem * Const ),( BR - ARS ) )", "choosing": "Max( ( ( RCSe + RRSe ) - MUR ),( MLU / MUC ) )", "obj1": 0.3333333333333333, "obj2": 0.5864421441667573}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_RAM_Server * ARS ) / ARS ) ) * Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "( ( RRSe - RRSe ) * ( Min( ( CS + RMSe ) ,RCSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU - ( DDR + ( RRS - MRS ) ) ) )", "choosing": "Min( Min( CS ,Min( MLU ,MLU ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) / ( ( ( ( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * PN ) ) * Max( FirstVNF_CPU,AMS ) ) * ACS ) / AMS ) * FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( ( Min( Min( RCSe ,Max( ( MLU * ( MLU + ( MUC * RRSe ) ) ),CS ) ) ,Max( ( ( MUC - RCSe ) / CS ),( MUR + MUR ) ) ) / ( MLU - Min( ( DS - MUM ) ,( ( MUR - RMSe ) + RCSe ) ) ) ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + Max( FirstVNF_CPU_Server,( CRS - DDR ) ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,CS ) / Min( RCSe ,( Min( ( MLU * CS ) ,( RMSe / CS ) ) / ( ( CS + DS ) * RCSe ) ) ) ) + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,MRS ) - Min( ARS ,AMS ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RCSe * Min( ( MUC / ( RMSe - MUR ) ) ,RCSe ) ) ) + ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( MRS + Const ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUM ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - Const ) ) ) ,( Min( FirstVNF_RAM ,Const ) / ( ( MDR - ACS ) / Min( Const ,BR ) ) ) )", "choosing": "( ( Min( ( RRSe - RRSe ) ,Min( MUR ,( RCSe - Min( DS ,Min( MUC ,( RMSe * MUC ) ) ) ) ) ) / RCSe ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),Min( MLU ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM / ARS ) * PN ) ) / ( ( AMS / AMS ) + ( PN * ARS ) ) ) / Min( ( ( BR + DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( RCSe ,DS ) ) ) / Min( MLU ,Max( ( Min( MUC ,CS ) * MUC ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( RRS / Max( FirstVNF_CPU,( Max( MDR,DDR ) - DDR ) ) ) ) ) * ( Min( ( FirstVNF_CPU + ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * CS ) ) * Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( PN / ( DDR / MRS ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUC ) ,( MUM + MUM ) ) - Max( Max( CS,RRSe ),( RCSe + CS ) ) ) + ( Max( CS,CS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Max( MRS,DDR ) ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( Max( Max( MUR,MLU ),MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( ( MRS - AMS ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( ( ( Min( MUR ,Max( Min( MLU ,CS ),MLU ) ) * Min( ( RMSe / MUC ) ,MLU ) ) / RCSe ) + ( MUC - ( RRSe / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ACS * ACS ) * MDR ) ,( MDR * FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - MDR ) ) )", "choosing": "Max( Max( CS,MUC ),( Min( MUR ,RRSe ) * ( ( DS - Max( DS,RMSe ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( ( FirstVNF_RAM / FirstVNF_RAM ) * MDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( ( RCSe + RRSe ) / MUC ) * Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),Max( MUC,( MLU / Max( RCSe,Max( CS,( DS * ( MUR / MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( DDR + ( Max( ( ( CRS / FirstVNF_RAM ) - ARS ),FirstVNF_Mem_Server ) / MRS ) ) - FirstVNF_CPU ) ,( DDR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( MUR * ( MUM / MLU ) ) + CS ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / FirstVNF_Mem_Server ) - ( ( DDR / FirstVNF_Mem_Server ) * Max( ACS,FirstVNF_CPU_Server ) ) ) - MDR ) - MDR )", "choosing": "Max( ( ( ( DS - RCSe ) + Min( ( MUR + Min( MUR ,( ( MUC * MUR ) * ( RRSe * MUC ) ) ) ) ,MUR ) ) / ( ( Min( RMSe ,CS ) - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( CS,DS ) ) - ( ( RMSe / DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS + MRS ) ,Max( ACS,( ACS - BR ) ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( BR,Const ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Min( Min( RRSe ,RRSe ) ,Max( Min( Max( CS,( ( MUM / ( RRSe + ( DS - MUR ) ) ) / MUR ) ) ,MUR ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,( Max( ARS,Const ) / DDR ) ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( MLU + MUM ) - ( DS - Max( ( Max( RMSe,RMSe ) + MUM ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( MUM * MUR ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / FirstVNF_RAM_Server )", "choosing": "Min( Min( CS ,DS ) ,Max( Max( ( DS * DS ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( BR ,CRS ) )", "choosing": "( Max( Max( ( DS * DS ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) + ( ( ( MLU * RRSe ) + ( RRSe * DS ) ) + ( Max( MUR,RRSe ) + ( MUM / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,BR ) - ( DDR / MDR ) ) / ( ( ARS * MDR ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * MUR ) / ( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( DDR ,CRS ) ) - ( Max( Max( ( FirstVNF_Mem + RRS ),AMS ),Const ) - ( CRS - PN ) ) ) * ( MDR + ACS ) )", "choosing": "( ( ( ( ( MUR + RMSe ) / MUC ) - ( MUC / RRSe ) ) - Max( Max( Max( ( MUR / CS ),( RRSe * RCSe ) ),CS ),Max( RRSe,RRSe ) ) ) + ( ( ( MUR * RMSe ) + ( DS * CS ) ) * Min( ( ( ( CS / RRSe ) / RMSe ) * MUR ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( Const ,Max( DDR,AMS ) ) ,CRS ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) / ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MUR,RMSe ) ,Max( MLU,CS ) ) ) + Max( CS,( ( ( RCSe - RCSe ) * RRSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( PN / Max( AMS,ACS ) ) ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * ( RCSe / MUC ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * Min( FirstVNF_CPU ,( ( PN - ( Min( Min( FirstVNF_CPU ,CRS ) ,ACS ) / Const ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) + Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR * FirstVNF_RAM ) - FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server + ACS ) / Const ) )", "choosing": "( ( MUR + ( ( RCSe - MUR ) + ( MUM - RRSe ) ) ) / ( Min( ( MUM * RCSe ) ,DS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const / DDR ) ,FirstVNF_CPU ) + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe * MUC ) / RRSe ) / ( Min( ( MUM * RCSe ) ,DS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( Max( Min( BR ,FirstVNF_CPU_Server ),Min( CRS ,CRS ) ) * DDR ) ) )", "choosing": "( Max( MLU,( ( RCSe * ( Max( Max( ( CS / CS ),RCSe ),MUC ) * ( MUR + CS ) ) ) - ( RMSe / Max( RRSe,RRSe ) ) ) ) + ( MUR + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( MDR - FirstVNF_RAM_Server ),( Max( AMS,Max( PN,AMS ) ) * Const ) ) )", "choosing": "( ( DS * RMSe ) / ( MUR * ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,DDR ) ,( FirstVNF_Mem_Server * Max( ( ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ),AMS ) ) ) ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM / RRSe ) - MLU ) + Max( Min( CS ,RCSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MDR ) - ( AMS + ( FirstVNF_RAM_Server - ( CRS - CRS ) ) ) )", "choosing": "( ( MUR * Min( Max( RCSe,( CS - Min( ( MUM * DS ) ,DS ) ) ) ,( DS / DS ) ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * Max( Const,Max( ACS,Max( BR,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( MUC ,CS ) ,( Min( MLU ,CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS * DDR ) ,( ( MRS / ( MDR * MDR ) ) * ( FirstVNF_RAM_Server - ( MDR + ACS ) ) ) )", "choosing": "( ( RCSe - ( RRSe + ( Min( Max( ( ( CS / MLU ) / DS ),MUM ) ,( RMSe * MUR ) ) / RRSe ) ) ) + ( ( RRSe + MLU ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * MUR ) * Max( MUC,( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) / ( ( Const * BR ) * ( MRS + ( FirstVNF_RAM / RRS ) ) ) ) )", "choosing": "Max( Min( ( ( MLU / RMSe ) + ( RRSe - MLU ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( ( RMSe - Max( CS,( RMSe * ( RMSe / RMSe ) ) ) ),CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( ( FirstVNF_RAM_Server + ( PN / Max( AMS,ACS ) ) ) ,MDR ) ) )", "choosing": "Min( Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * ( RCSe / MUC ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( RRS * Max( Min( Min( DDR ,Min( Max( FirstVNF_RAM,MRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,DDR ),FirstVNF_RAM_Server ) ) ) - ( FirstVNF_RAM_Server + ( RRS / ARS ) ) )", "choosing": "Min( ( DS + ( ( ( RRSe * Min( MUR ,MLU ) ) * ( RRSe / MUC ) ) * ( RMSe * ( Max( Min( RCSe ,CS ),MUC ) + ( RRSe - ( Max( DS,MUR ) + ( RMSe + CS ) ) ) ) ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( ( Max( ( FirstVNF_Mem * ACS ),PN ) + CRS ) / ( AMS * ACS ) ) ) )", "choosing": "Min( Min( ( Max( MLU,( DS / ( RMSe - ( Min( RRSe ,DS ) * ( DS / MUR ) ) ) ) ) - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,CS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) * ( FirstVNF_RAM_Server - Const ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( ( RRSe + ( ( ( RCSe / Min( MUR ,DS ) ) * ( RRSe * ( MUR / MLU ) ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( ( MRS - AMS ) ,( ( MDR - ACS ) / Min( Const ,BR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( Min( ( RRSe - RRSe ) ,Min( MUR ,RMSe ) ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( BR / AMS ) + Min( ( MRS - AMS ) ,MRS ) ) / ( RRS + AMS ) ) + ( Max( ACS,PN ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,FirstVNF_CPU_Server ),( FirstVNF_RAM / ACS ) ) / ( ( MDR - ACS ) / ( PN + RRS ) ) ) )", "choosing": "( ( Min( ( CS - RRSe ) ,Min( MUR ,RMSe ) ) / MUM ) + Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( Max( BR,FirstVNF_CPU ) ,MRS ) - ( AMS + RRS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,( ( MDR / MDR ) + FirstVNF_RAM ) ),( FirstVNF_RAM / ACS ) ) / ( ( Max( FirstVNF_Mem_Server,AMS ) - ACS ) / ( Const + BR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Max( MUR,( ( ( Min( Max( Min( MLU ,MLU ),MLU ) ,MUR ) - Min( ( MUC / RMSe ) ,MLU ) ) * RCSe ) + ( MUR * ( DS - Max( MUM,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( MRS ,( ( ARS * MRS ) - AMS ) ) )", "choosing": "( ( Min( ( ( DS / RCSe ) + Min( ( MUC / MUR ) ,Max( ( RRSe / Max( RMSe,MUR ) ),( ( CS * RCSe ) - ( DS + RCSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) + MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS - FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( Const / BR ),( Max( FirstVNF_RAM_Server,ACS ) * MRS ) ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) )", "choosing": "( ( CS - Min( Min( ( RCSe * RMSe ) ,MUM ) ,RCSe ) ) + ( ( MUC + ( MUM * ( MUC + MUM ) ) ) + Min( MUR ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( CS * DS ) + ( ( MUC + ( MUC * MUM ) ) + ( MUR - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - ( ACS - CRS ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * ( Max( MUR,MUR ) * Max( RRSe,MUC ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server - MDR ) ,MDR ) * DDR ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Max( CRS,ACS ) ,( ACS * PN ) ) ) )", "choosing": "( ( CS - ( ( ( ( CS / CS ) / RRSe ) / ( CS / Min( DS ,MLU ) ) ) + Max( RMSe,( Min( ( MUR * MUM ) ,( CS - RCSe ) ) / RMSe ) ) ) ) - ( ( Max( ( DS / CS ),( Max( Min( Max( MUR,CS ) ,MUC ),( ( RCSe - MUM ) * Max( RCSe,RRSe ) ) ) / RCSe ) ) * Min( RRSe ,MUM ) ) * ( ( MUM * CS ) * Min( DS ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( Min( ACS ,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + ( ( CS / MLU ) * MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( CS / RCSe ) / ( ( CS / MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - ( Const - ACS ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC / CS ) - ( MUC * RRSe ) ) - ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_RAM_Server ) * ( BR / BR ) ) / ( ( ( ( FirstVNF_RAM + CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - Max( MRS,FirstVNF_RAM ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - Min( MRS ,ACS ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( MUC,RCSe ) ,( Max( RRSe,RCSe ) * ( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MLU,RMSe ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS - FirstVNF_RAM ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RRSe / RRSe ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,( ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) / Min( RRS ,Const ) ) + Min( ( MRS / MRS ) ,( BR * FirstVNF_RAM_Server ) ) ) ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + ( Min( Max( RCSe,MLU ) ,( RMSe / CS ) ) / Max( ( CS - RRSe ),( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( ( MRS - AMS ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( ( ( Min( MUR ,Max( Min( MLU ,CS ),MLU ) ) * Min( ( RMSe / MUC ) ,MLU ) ) / RCSe ) + ( MUC - ( RRSe / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / CRS ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - ( DDR - FirstVNF_RAM_Server ) ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUC + RMSe ) - ( Max( MUM,MLU ) - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ( ( AMS - AMS ) - ( FirstVNF_CPU_Server - AMS ) ) + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( MLU + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Min( ( PN - MRS ) ,DDR ) )", "choosing": "( ( ( RRSe + ( ( MUM * MUC ) * MUM ) ) / Min( ( Max( DS,( Max( Max( MUR,RMSe ),RCSe ) + Min( ( MUC / MLU ) ,( DS + MUC ) ) ) ) - ( ( CS / RRSe ) * Min( MUM ,RRSe ) ) ) ,MUM ) ) + ( RRSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( Min( ( BR - ( BR - Min( CRS ,( FirstVNF_Mem + RRS ) ) ) ) ,CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * MUR ) * Min( MUR ,Max( RRSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( ( Min( MRS ,RRS ) + ( FirstVNF_CPU_Server - AMS ) ) + Max( Min( ARS ,FirstVNF_CPU_Server ),( BR + BR ) ) ) * Max( Min( Max( BR,FirstVNF_RAM ) ,( ACS - CRS ) ),( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( Max( MUR,MUR ) * Max( RRSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ARS,ACS ) ,Min( AMS ,Const ) ) / ( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) ) )", "choosing": "( ( Max( RMSe,RMSe ) * ( MUM / MUM ) ) / ( ( RCSe + CS ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( MUC * RRSe ) ,( MUM + MUM ) ) - Max( ( CS / RRSe ),( RCSe + CS ) ) ) + Min( Max( ( RMSe - CS ),( RMSe * RCSe ) ) ,Min( Max( RMSe,DS ) ,( MUC * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const * BR ) * ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( Const + ( ACS / CRS ) ) ) )", "choosing": "( Min( ( RRSe * MUM ) ,( RCSe - ( MUM - RRSe ) ) ) * ( ( MUM + RRSe ) * ( Max( ( Min( DS ,DS ) - ( RCSe + MUC ) ),CS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,DDR ) + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / ( RCSe - MUM ) ) ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe * MUM ) ,( CS - MUM ) ) * ( ( MUM + RRSe ) * ( CS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / Max( BR,ARS ) ) * Min( PN ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( DS + DS ),( MLU / MUC ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / CRS ) * Min( RRS ,FirstVNF_RAM_Server ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( PN ,( ACS - PN ) ) ) )", "choosing": "Min( ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ,( Max( ( MLU + ( ( MUR * Min( ( RCSe - MUC ) ,( RMSe / RMSe ) ) ) + DS ) ),RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) + DS ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RMSe * RMSe ) + Max( CS,Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) - Max( AMS,BR ) ) / ( ( ACS + MRS ) / ( FirstVNF_CPU * Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / ( ( BR + AMS ) / CRS ) ) ) ) ) )", "choosing": "( ( MUC * RMSe ) + Max( CS,Min( Min( Max( ( ( CS + MUR ) + ( MUM - MUC ) ),RCSe ) ,MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * ( CRS - FirstVNF_Mem ) )", "choosing": "( ( Max( DS,Max( ( Max( Min( RRSe ,Min( MUM ,RRSe ) ),MLU ) / RCSe ),Min( CS ,RRSe ) ) ) - RRSe ) * ( MUM + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MDR / RRS ) ) ) - ( Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) / ( Max( Const,BR ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( ( ( RMSe + CS ) + Max( MUC,( MUM - Max( MUM,RRSe ) ) ) ) + Min( MUC ,Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( ( MDR - ( ( FirstVNF_Mem - FirstVNF_RAM ) - CRS ) ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( AMS,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( MUM + ( ( ( DS * CS ) + ( ( ( Min( MLU ,MUC ) - ( ( DS - MLU ) / ( MUR / MUR ) ) ) - Min( RRSe ,MLU ) ) * RMSe ) ) * Min( Max( MLU,CS ) ,Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - Max( MDR,RRS ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,( FirstVNF_RAM_Server * BR ) ) * ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) + ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / ( ( MUR - ( DS - MUR ) ) * MUC ) ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Max( Max( MLU,RMSe ),Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,AMS ) ,( ( DDR - ( MDR / CRS ) ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) )", "choosing": "( ( MUR - MUR ) * ( Min( MLU ,MLU ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_RAM_Server * ARS ) / ARS ) ) * Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "( ( RRSe - RRSe ) * ( Min( ( CS + RMSe ) ,RCSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU - ( DDR + ( RRS - MRS ) ) ) )", "choosing": "Min( Min( CS ,Min( MLU ,MLU ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) / ( ( ( ( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * PN ) ) * Max( FirstVNF_CPU,AMS ) ) * ACS ) / AMS ) * FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( ( Min( Min( RCSe ,Max( ( MLU * ( MLU + ( MUC * RRSe ) ) ),CS ) ) ,Max( ( ( MUC - RCSe ) / CS ),( MUR + MUR ) ) ) / ( MLU - Min( ( DS - MUM ) ,( ( MUR - RMSe ) + RCSe ) ) ) ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + Max( FirstVNF_CPU_Server,( CRS - DDR ) ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,CS ) / Min( RCSe ,( Min( ( MLU * CS ) ,( RMSe / CS ) ) / ( ( CS + DS ) * RCSe ) ) ) ) + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,MRS ) - Min( ARS ,AMS ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RCSe * Min( ( MUC / ( RMSe - MUR ) ) ,RCSe ) ) ) + ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( MRS + Const ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUM ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - Const ) ) ) ,( Min( FirstVNF_RAM ,Const ) / ( ( MDR - ACS ) / Min( Const ,BR ) ) ) )", "choosing": "( ( Min( ( RRSe - RRSe ) ,Min( MUR ,( RCSe - Min( DS ,Min( MUC ,( RMSe * MUC ) ) ) ) ) ) / RCSe ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),Min( MLU ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM / ARS ) * PN ) ) / ( ( AMS / AMS ) + ( PN * ARS ) ) ) / Min( ( ( BR + DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( RCSe ,DS ) ) ) / Min( MLU ,Max( ( Min( MUC ,CS ) * MUC ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( RRS / Max( FirstVNF_CPU,( Max( MDR,DDR ) - DDR ) ) ) ) ) * ( Min( ( FirstVNF_CPU + ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * CS ) ) * Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( PN / ( DDR / MRS ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUC ) ,( MUM + MUM ) ) - Max( Max( CS,RRSe ),( RCSe + CS ) ) ) + ( Max( CS,CS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Max( MRS,DDR ) ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( Max( Max( MUR,MLU ),MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( ( MRS - AMS ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( ( ( Min( MUR ,Max( Min( MLU ,CS ),MLU ) ) * Min( ( RMSe / MUC ) ,MLU ) ) / RCSe ) + ( MUC - ( RRSe / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ACS * ACS ) * MDR ) ,( MDR * FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - MDR ) ) )", "choosing": "Max( Max( CS,MUC ),( Min( MUR ,RRSe ) * ( ( DS - Max( DS,RMSe ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( ( FirstVNF_RAM / FirstVNF_RAM ) * MDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( ( RCSe + RRSe ) / MUC ) * Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),Max( MUC,( MLU / Max( RCSe,Max( CS,( DS * ( MUR / MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( DDR + ( Max( ( ( CRS / FirstVNF_RAM ) - ARS ),FirstVNF_Mem_Server ) / MRS ) ) - FirstVNF_CPU ) ,( DDR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( MUR * ( MUM / MLU ) ) + CS ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / FirstVNF_Mem_Server ) - ( ( DDR / FirstVNF_Mem_Server ) * Max( ACS,FirstVNF_CPU_Server ) ) ) - MDR ) - MDR )", "choosing": "Max( ( ( ( DS - RCSe ) + Min( ( MUR + Min( MUR ,( ( MUC * MUR ) * ( RRSe * MUC ) ) ) ) ,MUR ) ) / ( ( Min( RMSe ,CS ) - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( CS,DS ) ) - ( ( RMSe / DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS + MRS ) ,Max( ACS,( ACS - BR ) ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( BR,Const ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Min( Min( RRSe ,RRSe ) ,Max( Min( Max( CS,( ( MUM / ( RRSe + ( DS - MUR ) ) ) / MUR ) ) ,MUR ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,( Max( ARS,Const ) / DDR ) ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( MLU + MUM ) - ( DS - Max( ( Max( RMSe,RMSe ) + MUM ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( MUM * MUR ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / FirstVNF_RAM_Server )", "choosing": "Min( Min( CS ,DS ) ,Max( Max( ( DS * DS ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( BR ,CRS ) )", "choosing": "( Max( Max( ( DS * DS ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) + ( ( ( MLU * RRSe ) + ( RRSe * DS ) ) + ( Max( MUR,RRSe ) + ( MUM / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,BR ) - ( DDR / MDR ) ) / ( ( ARS * MDR ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * MUR ) / ( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( DDR ,CRS ) ) - ( Max( Max( ( FirstVNF_Mem + RRS ),AMS ),Const ) - ( CRS - PN ) ) ) * ( MDR + ACS ) )", "choosing": "( ( ( ( ( MUR + RMSe ) / MUC ) - ( MUC / RRSe ) ) - Max( Max( Max( ( MUR / CS ),( RRSe * RCSe ) ),CS ),Max( RRSe,RRSe ) ) ) + ( ( ( MUR * RMSe ) + ( DS * CS ) ) * Min( ( ( ( CS / RRSe ) / RMSe ) * MUR ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( Const ,Max( DDR,AMS ) ) ,CRS ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) / ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MUR,RMSe ) ,Max( MLU,CS ) ) ) + Max( CS,( ( ( RCSe - RCSe ) * RRSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( PN / Max( AMS,ACS ) ) ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * ( RCSe / MUC ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * Min( FirstVNF_CPU ,( ( PN - ( Min( Min( FirstVNF_CPU ,CRS ) ,ACS ) / Const ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) + Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR * FirstVNF_RAM ) - FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server + ACS ) / Const ) )", "choosing": "( ( MUR + ( ( RCSe - MUR ) + ( MUM - RRSe ) ) ) / ( Min( ( MUM * RCSe ) ,DS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const / DDR ) ,FirstVNF_CPU ) + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe * MUC ) / RRSe ) / ( Min( ( MUM * RCSe ) ,DS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( Max( Min( BR ,FirstVNF_CPU_Server ),Min( CRS ,CRS ) ) * DDR ) ) )", "choosing": "( Max( MLU,( ( RCSe * ( Max( Max( ( CS / CS ),RCSe ),MUC ) * ( MUR + CS ) ) ) - ( RMSe / Max( RRSe,RRSe ) ) ) ) + ( MUR + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( MDR - FirstVNF_RAM_Server ),( Max( AMS,Max( PN,AMS ) ) * Const ) ) )", "choosing": "( ( DS * RMSe ) / ( MUR * ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,DDR ) ,( FirstVNF_Mem_Server * Max( ( ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ),AMS ) ) ) ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM / RRSe ) - MLU ) + Max( Min( CS ,RCSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MDR ) - ( AMS + ( FirstVNF_RAM_Server - ( CRS - CRS ) ) ) )", "choosing": "( ( MUR * Min( Max( RCSe,( CS - Min( ( MUM * DS ) ,DS ) ) ) ,( DS / DS ) ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * Max( Const,Max( ACS,Max( BR,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( MUC ,CS ) ,( Min( MLU ,CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS * DDR ) ,( ( MRS / ( MDR * MDR ) ) * ( FirstVNF_RAM_Server - ( MDR + ACS ) ) ) )", "choosing": "( ( RCSe - ( RRSe + ( Min( Max( ( ( CS / MLU ) / DS ),MUM ) ,( RMSe * MUR ) ) / RRSe ) ) ) + ( ( RRSe + MLU ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * MUR ) * Max( MUC,( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) - ( Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) / ( ( Const * BR ) * ( MRS + ( FirstVNF_RAM / RRS ) ) ) ) )", "choosing": "Max( Min( ( ( MLU / RMSe ) + ( RRSe - MLU ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( ( RMSe - Max( CS,( RMSe * ( RMSe / RMSe ) ) ) ),CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "( ( ( MLU / RMSe ) + ( RRSe * MUR ) ) + ( RRSe / ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( ( FirstVNF_RAM_Server + ( PN / Max( AMS,ACS ) ) ) ,MDR ) ) )", "choosing": "Min( Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * ( RCSe / MUC ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,( RRS * Max( Min( Min( DDR ,Min( Max( FirstVNF_RAM,MRS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ,DDR ),FirstVNF_RAM_Server ) ) ) - ( FirstVNF_RAM_Server + ( RRS / ARS ) ) )", "choosing": "Min( ( DS + ( ( ( RRSe * Min( MUR ,MLU ) ) * ( RRSe / MUC ) ) * ( RMSe * ( Max( Min( RCSe ,CS ),MUC ) + ( RRSe - ( Max( DS,MUR ) + ( RMSe + CS ) ) ) ) ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( ( Max( ( FirstVNF_Mem * ACS ),PN ) + CRS ) / ( AMS * ACS ) ) ) )", "choosing": "Min( Min( ( Max( MLU,( DS / ( RMSe - ( Min( RRSe ,DS ) * ( DS / MUR ) ) ) ) ) - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,CS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) * ( FirstVNF_RAM_Server - Const ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( ( RRSe + ( ( ( RCSe / Min( MUR ,DS ) ) * ( RRSe * ( MUR / MLU ) ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( ( MRS - AMS ) ,( ( MDR - ACS ) / Min( Const ,BR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( Min( ( RRSe - RRSe ) ,Min( MUR ,RMSe ) ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( BR / AMS ) + Min( ( MRS - AMS ) ,MRS ) ) / ( RRS + AMS ) ) + ( Max( ACS,PN ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,FirstVNF_CPU_Server ),( FirstVNF_RAM / ACS ) ) / ( ( MDR - ACS ) / ( PN + RRS ) ) ) )", "choosing": "( ( Min( ( CS - RRSe ) ,Min( MUR ,RMSe ) ) / MUM ) + Max( RMSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( Max( BR,FirstVNF_CPU ) ,MRS ) - ( AMS + RRS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,( ( MDR / MDR ) + FirstVNF_RAM ) ),( FirstVNF_RAM / ACS ) ) / ( ( Max( FirstVNF_Mem_Server,AMS ) - ACS ) / ( Const + BR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Max( MUR,( ( ( Min( Max( Min( MLU ,MLU ),MLU ) ,MUR ) - Min( ( MUC / RMSe ) ,MLU ) ) * RCSe ) + ( MUR * ( DS - Max( MUM,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( MRS ,( ( ARS * MRS ) - AMS ) ) )", "choosing": "( ( Min( ( ( DS / RCSe ) + Min( ( MUC / MUR ) ,Max( ( RRSe / Max( RMSe,MUR ) ),( ( CS * RCSe ) - ( DS + RCSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) + MUM ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ARS - FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( Const / BR ),( Max( FirstVNF_RAM_Server,ACS ) * MRS ) ) ) * ( ( AMS / FirstVNF_CPU ) * AMS ) )", "choosing": "( ( CS - Min( Min( ( RCSe * RMSe ) ,MUM ) ,RCSe ) ) + ( ( MUC + ( MUM * ( MUC + MUM ) ) ) + Min( MUR ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( CS * DS ) + ( ( MUC + ( MUC * MUM ) ) + ( MUR - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - ( ACS - CRS ) ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * ( Max( MUR,MUR ) * Max( RRSe,MUC ) ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_RAM_Server - MDR ) ,MDR ) * DDR ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Max( CRS,ACS ) ,( ACS * PN ) ) ) )", "choosing": "( ( CS - ( ( ( ( CS / CS ) / RRSe ) / ( CS / Min( DS ,MLU ) ) ) + Max( RMSe,( Min( ( MUR * MUM ) ,( CS - RCSe ) ) / RMSe ) ) ) ) - ( ( Max( ( DS / CS ),( Max( Min( Max( MUR,CS ) ,MUC ),( ( RCSe - MUM ) * Max( RCSe,RRSe ) ) ) / RCSe ) ) * Min( RRSe ,MUM ) ) * ( ( MUM * CS ) * Min( DS ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( Min( ACS ,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + ( ( CS / MLU ) * MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( CS / RCSe ) / ( ( CS / MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - ( Const - ACS ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC / CS ) - ( MUC * RRSe ) ) - ( ( MUM + RMSe ) - ( RCSe - RCSe ) ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( CS / RCSe ) / ( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) * MUR ) )", "obj1": 0.43125, "obj2": 0.49698870097231584}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,FirstVNF_CPU_Server ),( FirstVNF_RAM / ACS ) ) / ( ( MDR - ACS ) / Min( Const ,BR ) ) ) ) ,CRS ) / ( MDR / RRS ) ) ) - ( Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) / ( Max( Const,BR ) * ( FirstVNF_RAM + ARS ) ) ) )", "choosing": "( ( ( RMSe + CS ) + Max( MUC,( MUM - Max( MUM,RRSe ) ) ) ) + ( Min( ( RRSe - RRSe ) ,Min( MUR ,RMSe ) ) / MUM ) )", "obj1": 0.9916666666666667, "obj2": 0.011647568971812456}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM * MUR ) * Min( MUR ,Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * ( RCSe / MUC ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) ) ) )", "obj1": 0.4270833333333333, "obj2": 0.5064025394759916}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - CRS ) ,AMS ) - ( ( FirstVNF_CPU * Const ) - ( CRS - PN ) ) ) )", "choosing": "( ( ( MLU / MUM ) / RCSe ) * ( ( MUM + RRSe ) * ( CS / CS ) ) )", "obj1": 0.95, "obj2": 0.04898882044111302}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( BR ,( ( DDR - ( MDR / CRS ) ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( CS ,DS ) ,MUR )", "obj1": 0.5604166666666667, "obj2": 0.37609561735681535}, {"determining": "( ( ( ( FirstVNF_CPU_Server * ( PN / ( DDR / MRS ) ) ) + ( RRS / Min( PN ,MDR ) ) ) / Max( FirstVNF_RAM,Const ) ) * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MLU / ( ( MUM - MLU ) - ( MUR * CS ) ) ) / DS ) * MUC ) * CS ) * Min( CS ,RRSe ) ) + ( MUM - RRSe ) )", "obj1": 0.4583333333333333, "obj2": 0.444609533957136}, {"determining": "( ( FirstVNF_CPU_Server * ( PN / ( DDR / MRS ) ) ) + ( RRS / ( CRS / Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( Min( ( RRSe * MUC ) ,( MUM + MUM ) ) - Max( Max( CS,RRSe ),( RCSe + CS ) ) ) + ( ( ( MLU / ( ( MUM - MLU ) - ( MUR * RRSe ) ) ) / DS ) * MUC ) )", "obj1": 0.50625, "obj2": 0.425666367015938}, {"determining": "( ( CRS / Max( FirstVNF_RAM,Const ) ) * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MLU / ( ( MUM - MLU ) - ( MUR * RRSe ) ) ) / DS ) * MUC ) * CS ) * Min( CS ,RRSe ) ) + ( MUM - RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.4016225542028331}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * ( FirstVNF_CPU + ( ( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe * MUM ) ,( Max( MUR,MUR ) - MUM ) ) * ( ( MUM + RRSe ) * ( CS / CS ) ) )", "obj1": 0.93125, "obj2": 0.06579736961442871}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * ( FirstVNF_CPU - ( Max( BR,( ARS * FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,( RMSe / ( MLU * RCSe ) ) ) * Min( RRSe ,MUC ) )", "obj1": 0.9479166666666666, "obj2": 0.05013832047970581}, {"determining": "( ( FirstVNF_CPU_Server * ( ARS * DDR ) ) + ( RRS / Min( ( ( PN + MRS ) * ( FirstVNF_RAM * ( Max( DDR,Const ) * Const ) ) ) ,MRS ) ) )", "choosing": "( ( MUM + MUR ) + ( Max( CS,Max( CS,Min( Min( RMSe ,RRSe ) ,MUM ) ) ) + MUC ) )", "obj1": 0.41458333333333336, "obj2": 0.5152956890382665}, {"determining": "( ( PN - Max( BR,DDR ) ) / FirstVNF_RAM_Server )", "choosing": "Min( Min( CS ,DS ) ,Max( ( MUM - RRSe ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) )", "obj1": 0.9979166666666667, "obj2": 0.0009792328435661026}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( RCSe / CS ) )", "obj1": 0.32916666666666666, "obj2": 0.5398310453199259}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_RAM_Server * ARS ) / ARS ) ) * Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "Min( Max( ( DS + DS ),( MLU / MUC ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 0.94375, "obj2": 0.056032672288944874}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( CRS + FirstVNF_CPU_Server ) / ( RRS - ( ARS / AMS ) ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / Max( ( MUC / MUC ),Min( MLU ,( MUM * MLU ) ) ) ) ) )", "obj1": 0.45, "obj2": 0.49063283728755325}, {"determining": "( ( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( ACS,FirstVNF_RAM ) ) - ( Const - Max( ARS,FirstVNF_Mem ) ) ) - MDR ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( ( DS - RCSe ) + ( ( MUR + Min( MUR ,( DS - Min( MUM ,RCSe ) ) ) ) - MUR ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 0.68125, "obj2": 0.1828904043429606}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * PN ) ) * Max( FirstVNF_CPU,AMS ) ) / ( ( ARS * MDR ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * MUR ) / Min( Min( RCSe ,Max( ( MLU * ( MLU + ( MUC * RRSe ) ) ),CS ) ) ,Max( ( ( MUC - RCSe ) / CS ),( MUR + MUR ) ) ) )", "obj1": 0.90625, "obj2": 0.07420202146084756}, {"determining": "( Min( RRS ,FirstVNF_Mem ) / ( ( ( ( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * PN ) ) * Max( FirstVNF_CPU,AMS ) ) * ACS ) / AMS ) * FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( ( RCSe * MUR ) / ( DS - RRSe ) )", "obj1": 0.2833333333333333, "obj2": 0.6399586078690574}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( PN / Max( AMS,ACS ) ) ) ) ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( ( Min( MRS ,RRS ) + ( FirstVNF_CPU_Server - AMS ) ) + Max( Min( ARS ,FirstVNF_CPU_Server ),( BR + BR ) ) ) * Max( Min( Max( BR,FirstVNF_RAM ) ,( ACS - CRS ) ),( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( MUR ,MUM ) ) ) / ( ( ( DS / MLU ) * Min( MUC ,CS ) ) / Max( ( RMSe * MUR ),Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) ) ) ) )", "obj1": 0.38125, "obj2": 0.5390726708337806}, {"determining": "( ( Max( MRS,FirstVNF_CPU ) / AMS ) + Min( ( MRS - AMS ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( ( ( Min( MUR ,Max( Min( MLU ,CS ),MLU ) ) * ( RCSe / MUC ) ) / RCSe ) + ( MUC - ( RRSe / RCSe ) ) ) ) )", "obj1": 0.8875, "obj2": 0.10895607941562287}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,FirstVNF_CPU_Server ),( FirstVNF_RAM / ACS ) ) / ( ( MDR - ( ( DDR / ( MDR * MDR ) ) * ( FirstVNF_RAM_Server - ( MDR + ACS ) ) ) ) / Min( Const ,BR ) ) ) )", "choosing": "( ( Min( ( RRSe - ( RMSe + DS ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 0.31875, "obj2": 0.6153123263116899}, {"determining": "( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( ACS,FirstVNF_RAM ) ) - ( Const - Max( ARS,FirstVNF_Mem ) ) ) - MDR )", "choosing": "Max( Min( ( ( DS - RCSe ) + ( ( MUR + Min( MUR ,( DS - Min( MUM ,RCSe ) ) ) ) - MUR ) ) ,( ( Min( RMSe ,CS ) - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 0.24375, "obj2": 0.7218503846350997}, {"determining": "Min( Min( ( ( DDR + ( Max( ( ( CRS / FirstVNF_RAM ) - ARS ),FirstVNF_Mem_Server ) / MRS ) ) - FirstVNF_CPU ) ,( DDR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( MUR * ( MUM / MLU ) ) + CS ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 0.8270833333333333, "obj2": 0.16358622379299523}, {"determining": "Min( Min( ( ( DDR + ( Max( ( ( CRS / FirstVNF_RAM ) - ARS ),FirstVNF_Mem_Server ) / MRS ) ) - FirstVNF_CPU ) ,( DDR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( MUR * ( MUM / MLU ) ) + CS ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 0.8270833333333333, "obj2": 0.16358622379299523}, {"determining": "Min( Min( ( ( DDR + ( Max( ( ( CRS / FirstVNF_RAM ) - ARS ),FirstVNF_Mem_Server ) / MRS ) ) - FirstVNF_CPU ) ,( DDR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( MUR * ( MUM / MLU ) ) + CS ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 0.8270833333333333, "obj2": 0.16358622379299523}, {"determining": "Min( Min( ( ( DDR + ( Max( ( ( PN / CRS ) - ARS ),FirstVNF_Mem_Server ) / MRS ) ) - FirstVNF_CPU ) ,( DDR * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ,( Max( BR,ARS ) / ( DDR - FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe - DS ) - Max( DS,RMSe ) ) * ( ( RCSe + ( MLU * ( Min( DS ,( ( MUM * DS ) * ( MUR - RMSe ) ) ) / MUC ) ) ) / RCSe ) )", "obj1": 0.8270833333333333, "obj2": 0.16358622379299523}, {"determining": "Min( ( ( Min( Max( BR,FirstVNF_CPU ) ,MRS ) - ( AMS + RRS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,( ( MDR / MDR ) + FirstVNF_RAM ) ),( FirstVNF_RAM / ACS ) ) / ( ( Max( FirstVNF_Mem_Server,AMS ) - ACS ) / ( Const + BR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Max( MUR,( ( ( Min( Max( Min( MLU ,MLU ),MLU ) ,MUR ) - Min( ( MUC / RMSe ) ,MLU ) ) * RCSe ) + ( MUR * ( DS - Max( MUM,RMSe ) ) ) ) ) )", "obj1": 0.6375, "obj2": 0.31446670021307227}, {"determining": "Min( ( ( Min( Max( BR,FirstVNF_CPU ) ,MRS ) - ( AMS + RRS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,( ( MDR / MDR ) + FirstVNF_RAM ) ),( FirstVNF_RAM / ACS ) ) / ( ( Max( FirstVNF_Mem_Server,AMS ) - ACS ) / ( Const + BR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Max( MUR,( ( ( Min( Max( Min( MLU ,MLU ),MLU ) ,MUR ) - Min( ( MUC / RMSe ) ,MLU ) ) * RCSe ) + ( MUR * ( DS - Max( MUM,RMSe ) ) ) ) ) )", "obj1": 0.6375, "obj2": 0.31446670021307227}, {"determining": "Min( ( ( Min( Max( BR,FirstVNF_CPU ) ,MRS ) - ( AMS + RRS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,( ( MDR / MDR ) + FirstVNF_RAM ) ),( FirstVNF_RAM / ACS ) ) / ( ( Max( FirstVNF_Mem_Server,AMS ) - ACS ) / ( Const + BR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Max( MUR,( ( ( Min( Max( Min( MLU ,MLU ),MLU ) ,MUR ) - Min( ( MUC / RMSe ) ,MLU ) ) * RCSe ) + ( MUR * ( DS - Max( MUM,RMSe ) ) ) ) ) )", "obj1": 0.6375, "obj2": 0.31446670021307227}, {"determining": "Min( ( ( Min( Max( BR,FirstVNF_CPU ) ,MRS ) - ( AMS + RRS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,( ( MDR / MDR ) + FirstVNF_RAM ) ),( FirstVNF_RAM / ACS ) ) / ( ( Max( FirstVNF_Mem_Server,AMS ) - ACS ) / ( Const + BR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Max( MUR,( ( ( Min( Max( Min( MLU ,MLU ),MLU ) ,MUR ) - Min( ( MUC / RMSe ) ,MLU ) ) * RCSe ) + ( MUR * ( DS - Max( MUM,RMSe ) ) ) ) ) )", "obj1": 0.6375, "obj2": 0.31446670021307227}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) )", "choosing": "( ( DS * RMSe ) / ( MUR * ( Min( MUR ,( RCSe - Min( DS ,Min( MUC ,DS ) ) ) ) / MLU ) ) )", "obj1": 0.9958333333333333, "obj2": 0.00554127530591895}, {"determining": "( ( MRS + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( MUR + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 0.5729166666666666, "obj2": 0.32186932400919477}], "6": [{"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_RAM_Server * ARS ) / ARS ) ) * Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "( ( RRSe - RRSe ) * ( Min( ( CS + RMSe ) ,RCSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( FirstVNF_CPU - ( DDR + ( RRS - MRS ) ) ) )", "choosing": "Min( Min( CS ,Min( MLU ,MLU ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,FirstVNF_Mem ) / ( ( ( ( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * PN ) ) * Max( FirstVNF_CPU,AMS ) ) * ACS ) / AMS ) * FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( ( Min( Min( RCSe ,Max( ( MLU * ( MLU + ( MUC * RRSe ) ) ),CS ) ) ,Max( ( ( MUC - RCSe ) / CS ),( MUR + MUR ) ) ) / ( MLU - Min( ( DS - MUM ) ,( ( MUR - RMSe ) + RCSe ) ) ) ) - ( RMSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) / ( ( MDR - ( PN + FirstVNF_Mem ) ) + Max( AMS,( FirstVNF_CPU_Server + Min( AMS ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MLU,CS ) + Max( CS,Min( ( ( Max( Max( Min( RCSe ,DS ),MUR ),Max( RMSe,DS ) ) - DS ) / MLU ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( MUR + MUR ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + Max( FirstVNF_CPU_Server,( CRS - DDR ) ) ) / ( ( RRS - FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ) )", "choosing": "Min( ( ( ( Max( MUC,CS ) / Min( RCSe ,( Min( ( MLU * CS ) ,( RMSe / CS ) ) / ( ( CS + DS ) * RCSe ) ) ) ) + RMSe ) - ( RCSe - RCSe ) ) ,( Max( RRSe,RCSe ) * Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( DS - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - RRS ) - Min( ARS ,ARS ) ) - ( ( RRS + BR ) * Min( FirstVNF_Mem ,MDR ) ) )", "choosing": "Min( Min( ( RRSe - RMSe ) ,( RMSe * RRSe ) ) ,( Min( DS ,DS ) / ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,MRS ) - Min( ARS ,AMS ) )", "choosing": "( ( Min( MUC ,MUM ) / ( RCSe * Min( ( MUC / ( RMSe - MUR ) ) ,RCSe ) ) ) + ( CS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RCSe ) + ( RRSe - MUR ) ) ,( ( DS - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Max( FirstVNF_RAM,FirstVNF_RAM ) ) * ( ( MRS + Const ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / MUM ) + ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * ( Max( CRS,MDR ) + ( FirstVNF_Mem_Server + DDR ) ) ) ,( ( ( Const / FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + Min( Min( CRS ,ACS ) ,( RRS + PN ) ) ) )", "choosing": "( ( ( Max( RRSe,DS ) + ( RRSe / RRSe ) ) + Min( ( MUR + MUM ) ,( MLU * RCSe ) ) ) - ( ( ( MUM / MLU ) * Min( RRSe ,MUM ) ) * ( Min( DS ,CS ) + ( MUM * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - Const ) ) ) ,( Min( FirstVNF_RAM ,Const ) / ( ( MDR - ACS ) / Min( Const ,BR ) ) ) )", "choosing": "( ( Min( ( RRSe - RRSe ) ,Min( MUR ,( RCSe - Min( DS ,Min( MUC ,( RMSe * MUC ) ) ) ) ) ) / RCSe ) + ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + FirstVNF_CPU_Server ) / ( RRS - ( ARS / AMS ) ) )", "choosing": "Max( ( MUC / MUC ),Min( MLU ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( RRSe - RCSe ) + ( DS + CS ) ),( Max( DS,DS ) / ( RRSe - DS ) ) ) + ( RCSe - ( RRSe + ( RCSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( FirstVNF_RAM / ARS ) * PN ) ) / ( ( AMS / AMS ) + ( PN * ARS ) ) ) / Min( ( ( BR + DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( AMS / Const ) ) ) )", "choosing": "( ( ( ( RMSe + RMSe ) + ( CS - MUR ) ) + Min( ( MUM * MUC ) ,Min( RCSe ,DS ) ) ) / Min( MLU ,Max( ( Min( MUC ,CS ) * MUC ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( RRS / Max( FirstVNF_CPU,( Max( MDR,DDR ) - DDR ) ) ) ) ) * ( Min( ( FirstVNF_CPU + ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( ( ( DS * CS ) + ( MUR * CS ) ) * Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( PN / ( DDR / MRS ) ) ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( Min( ( RRSe * MUC ) ,( MUM + MUM ) ) - Max( Max( CS,RRSe ),( RCSe + CS ) ) ) + ( Max( CS,CS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Max( MRS,DDR ) ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( Max( Max( MUR,MLU ),MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RRSe ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - AMS ) ,( ACS + PN ) ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) + Min( ( MRS - AMS ) ,MRS ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( ( ( Min( MUR ,Max( Min( MLU ,CS ),MLU ) ) * Min( ( RMSe / MUC ) ,MLU ) ) / RCSe ) + ( MUC - ( RRSe / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ACS * ACS ) * MDR ) ,( MDR * FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - RRS ) + ( ACS - MDR ) ) )", "choosing": "Max( Max( CS,MUC ),( Min( MUR ,RRSe ) * ( ( DS - Max( DS,RMSe ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( ( FirstVNF_RAM / FirstVNF_RAM ) * MDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( ( RCSe + RRSe ) / MUC ) * Max( ( Min( MUR ,MUR ) / ( DS / MLU ) ),Max( MUC,( MLU / Max( RCSe,Max( CS,( DS * ( MUR / MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( DDR + ( Max( ( ( CRS / FirstVNF_RAM ) - ARS ),FirstVNF_Mem_Server ) / MRS ) ) - FirstVNF_CPU ) ,( DDR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( MUR * ( MUM / MLU ) ) + CS ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / FirstVNF_Mem_Server ) - ( ( DDR / FirstVNF_Mem_Server ) * Max( ACS,FirstVNF_CPU_Server ) ) ) - MDR ) - MDR )", "choosing": "Max( ( ( ( DS - RCSe ) + Min( ( MUR + Min( MUR ,( ( MUC * MUR ) * ( RRSe * MUC ) ) ) ) ,MUR ) ) / ( ( Min( RMSe ,CS ) - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( CS,DS ) ) - ( ( RMSe / DS ) - ( RMSe / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS + MRS ) ,Max( ACS,( ACS - BR ) ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( BR,Const ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) )", "choosing": "Min( Min( RRSe ,RRSe ) ,Max( Min( Max( CS,( ( MUM / ( RRSe + ( DS - MUR ) ) ) / MUR ) ) ,MUR ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,( Max( ARS,Const ) / DDR ) ) - FirstVNF_CPU_Server ) - Const ) + ( RRS / Min( PN ,MDR ) ) )", "choosing": "( ( MLU + MUM ) - ( DS - Max( ( Max( RMSe,RMSe ) + MUM ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Const - FirstVNF_CPU ) ,( BR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( BR,PN ) ) )", "choosing": "( ( MUM * MUR ) * Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / FirstVNF_RAM_Server )", "choosing": "Min( Min( CS ,DS ) ,Max( Max( ( DS * DS ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( BR ,CRS ) )", "choosing": "( Max( Max( ( DS * DS ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) + ( ( ( MLU * RRSe ) + ( RRSe * DS ) ) + ( Max( MUR,RRSe ) + ( MUM / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,BR ) - ( DDR / MDR ) ) / ( ( ARS * MDR ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * MUR ) / ( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( DDR ,CRS ) ) - ( Max( Max( ( FirstVNF_Mem + RRS ),AMS ),Const ) - ( CRS - PN ) ) ) * ( MDR + ACS ) )", "choosing": "( ( ( ( ( MUR + RMSe ) / MUC ) - ( MUC / RRSe ) ) - Max( Max( Max( ( MUR / CS ),( RRSe * RCSe ) ),CS ),Max( RRSe,RRSe ) ) ) + ( ( ( MUR * RMSe ) + ( DS * CS ) ) * Min( ( ( ( CS / RRSe ) / RMSe ) * MUR ) ,Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( Const ,Max( DDR,AMS ) ) ,CRS ) * ( FirstVNF_RAM / FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) / ( CRS - PN ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( DS * CS ) + ( MUR * RMSe ) ) * Min( Max( MUR,RMSe ) ,Max( MLU,CS ) ) ) + Max( CS,( ( ( RCSe - RCSe ) * RRSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_CPU ) - ( FirstVNF_RAM_Server + ( PN / Max( AMS,ACS ) ) ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * ( RCSe / MUC ) ) * ( ( Max( RCSe,MUC ) + ( RRSe - RMSe ) ) * RMSe ) ) ) ,( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) * Min( FirstVNF_CPU ,( ( PN - ( Min( Min( FirstVNF_CPU ,CRS ) ,ACS ) / Const ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe * ( CS / RRSe ) ) + Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR * FirstVNF_RAM ) - FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server + ACS ) / Const ) )", "choosing": "( ( MUR + ( ( RCSe - MUR ) + ( MUM - RRSe ) ) ) / ( Min( ( MUM * RCSe ) ,DS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const / DDR ) ,FirstVNF_CPU ) + FirstVNF_CPU ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe * MUC ) / RRSe ) / ( Min( ( MUM * RCSe ) ,DS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( CRS - FirstVNF_RAM_Server ),( Max( Min( BR ,FirstVNF_CPU_Server ),Min( CRS ,CRS ) ) * DDR ) ) )", "choosing": "( Max( MLU,( ( RCSe * ( Max( Max( ( CS / CS ),RCSe ),MUC ) * ( MUR + CS ) ) ) - ( RMSe / Max( RRSe,RRSe ) ) ) ) + ( MUR + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - Max( ( MDR - FirstVNF_RAM_Server ),( Max( AMS,Max( PN,AMS ) ) * Const ) ) )", "choosing": "( ( DS * RMSe ) / ( MUR * ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( Const,DDR ) ,( FirstVNF_Mem_Server * Max( ( ( Min( FirstVNF_CPU ,MRS ) + FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ),AMS ) ) ) ,AMS ) - ( AMS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUM / RRSe ) - MLU ) + Max( Min( CS ,RCSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MDR ) - ( AMS + ( FirstVNF_RAM_Server - ( CRS - CRS ) ) ) )", "choosing": "( ( MUR * Min( Max( RCSe,( CS - Min( ( MUM * DS ) ,DS ) ) ) ,( DS / DS ) ) ) + ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) / Min( ( ( BR * DDR ) + ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * Max( Const,Max( ACS,Max( BR,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( MUC ,CS ) ,( Min( MLU ,CS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS * DDR ) ,( ( MRS / ( MDR * MDR ) ) * ( FirstVNF_RAM_Server - ( MDR + ACS ) ) ) )", "choosing": "( ( RCSe - ( RRSe + ( Min( Max( ( ( CS / MLU ) / DS ),MUM ) ,( RMSe * MUR ) ) / RRSe ) ) ) + ( ( RRSe + MLU ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,BR ) * Max( RRS,MDR ) ) + ( ( BR / ARS ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ,Min( ( Min( FirstVNF_CPU_Server ,Const ) + Min( RRS ,BR ) ) ,Max( ( ACS - FirstVNF_CPU ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * MUR ) * Max( MUC,( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - CRS ) ,AMS ) - ( ( FirstVNF_CPU * Const ) - ( CRS - PN ) ) ) )", "choosing": "( ( ( MLU / MUM ) / RCSe ) * ( ( MUM + RRSe ) * ( CS / CS ) ) )", "obj1": 0.95, "obj2": 0.04898882044111302}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( BR ,( ( DDR - ( MDR / CRS ) ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( CS ,DS ) ,MUR )", "obj1": 0.5604166666666667, "obj2": 0.37609561735681535}, {"determining": "( ( ( ( FirstVNF_CPU_Server * ( PN / ( DDR / MRS ) ) ) + ( RRS / Min( PN ,MDR ) ) ) / Max( FirstVNF_RAM,Const ) ) * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MLU / ( ( MUM - MLU ) - ( MUR * CS ) ) ) / DS ) * MUC ) * CS ) * Min( CS ,RRSe ) ) + ( MUM - RRSe ) )", "obj1": 0.4583333333333333, "obj2": 0.444609533957136}, {"determining": "( ( CRS / Max( FirstVNF_RAM,Const ) ) * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MLU / ( ( MUM - MLU ) - ( MUR * RRSe ) ) ) / DS ) * MUC ) * CS ) * Min( CS ,RRSe ) ) + ( MUM - RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.4016225542028331}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * ( FirstVNF_CPU + ( ( ( ( Min( Const ,BR ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) / ( ( CRS * FirstVNF_CPU_Server ) + ( PN * ARS ) ) ) - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RRSe * MUM ) ,( Max( MUR,MUR ) - MUM ) ) * ( ( MUM + RRSe ) * ( CS / CS ) ) )", "obj1": 0.93125, "obj2": 0.06579736961442871}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * ( FirstVNF_CPU - ( Max( BR,( ARS * FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) )", "choosing": "( Max( MUR,( RMSe / ( MLU * RCSe ) ) ) * Min( RRSe ,MUC ) )", "obj1": 0.9479166666666666, "obj2": 0.05013832047970581}, {"determining": "( ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - ( Min( ARS ,AMS ) - ( AMS + FirstVNF_CPU_Server ) ) ) ) ) * ( Min( Max( FirstVNF_CPU,ARS ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( CS / MUC ) - ( MUC / RRSe ) ) - Min( Max( MUM,CS ) ,Max( RRSe,RRSe ) ) ) + ( RCSe / CS ) )", "obj1": 0.32916666666666666, "obj2": 0.5398310453199259}, {"determining": "( ( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( ACS,FirstVNF_RAM ) ) - ( Const - Max( ARS,FirstVNF_Mem ) ) ) - MDR ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( ( DS - RCSe ) + ( ( MUR + Min( MUR ,( DS - Min( MUM ,RCSe ) ) ) ) - MUR ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 0.68125, "obj2": 0.1828904043429606}, {"determining": "( Min( RRS ,FirstVNF_Mem ) / ( ( ( ( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * PN ) ) * Max( FirstVNF_CPU,AMS ) ) * ACS ) / AMS ) * FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( ( RCSe * MUR ) / ( DS - RRSe ) )", "obj1": 0.2833333333333333, "obj2": 0.6399586078690574}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,FirstVNF_CPU_Server ),( FirstVNF_RAM / ACS ) ) / ( ( MDR - ( ( DDR / ( MDR * MDR ) ) * ( FirstVNF_RAM_Server - ( MDR + ACS ) ) ) ) / Min( Const ,BR ) ) ) )", "choosing": "( ( Min( ( RRSe - ( RMSe + DS ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 0.31875, "obj2": 0.6153123263116899}, {"determining": "( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( ACS,FirstVNF_RAM ) ) - ( Const - Max( ARS,FirstVNF_Mem ) ) ) - MDR )", "choosing": "Max( Min( ( ( DS - RCSe ) + ( ( MUR + Min( MUR ,( DS - Min( MUM ,RCSe ) ) ) ) - MUR ) ) ,( ( Min( RMSe ,CS ) - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 0.24375, "obj2": 0.7218503846350997}, {"determining": "( ( FirstVNF_CPU_Server - ( Const - Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) - MDR )", "choosing": "Max( Min( ( ( DS - RCSe ) + Min( ( MUR + Min( MUR ,( Max( MUC,MUR ) * MUM ) ) ) ,MUR ) ) ,( ( Min( RMSe ,CS ) - DS ) / Min( MUC ,MUM ) ) ),( ( ( MUC * CS ) - Max( CS,DS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 0.225, "obj2": 0.7405553339798678}, {"determining": "( Min( RRS ,BR ) / FirstVNF_RAM_Server )", "choosing": "Min( Min( CS ,DS ) ,CS )", "obj1": 0.5708333333333333, "obj2": 0.3651851167933325}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * ( FirstVNF_CPU + ( ( PN - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUR,MUR ) * Max( RRSe,MUC ) )", "obj1": 0.9479166666666666, "obj2": 0.05013832047970581}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * PN ) ) * Max( FirstVNF_CPU,AMS ) ) / ( Min( ( ( ACS * ACS ) * MDR ) ,( MDR * FirstVNF_RAM ) ) * ( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * MUR ) / Max( CS,MUC ) )", "obj1": 0.90625, "obj2": 0.07150947341716334}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ) )", "choosing": "( Min( ( RRSe * MUM ) ,MUR ) * Min( DS ,Min( MUC ,DS ) ) )", "obj1": 0.9520833333333333, "obj2": 0.04512202401697412}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * ( ( Min( FirstVNF_RAM ,CRS ) * Min( FirstVNF_RAM ,FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU,Const ) - ( CRS - PN ) ) ) )", "choosing": "( ( Min( ( RRSe - RRSe ) ,Min( MUR ,( RCSe - Min( DS ,Min( MUC ,DS ) ) ) ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 0.94375, "obj2": 0.051568789789892724}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( BR ,( ( DDR - ( MDR / CRS ) ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( CS ,DS ) ,MUR )", "obj1": 0.5604166666666667, "obj2": 0.37609561735681535}, {"determining": "( ( CRS - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( CRS - PN ) ) ) * ( Min( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ,Max( FirstVNF_RAM_Server,BR ) ) * ( ( FirstVNF_RAM_Server - ( Const - ACS ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUC / CS ) - ( MUC * RRSe ) ) - ( ( MUM + RMSe ) - ( MUC + ( MUC * MUM ) ) ) ) + ( DS - CS ) )", "obj1": 0.3770833333333333, "obj2": 0.4937873526874148}, {"determining": "( ( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( ACS,FirstVNF_RAM ) ) - ( Const - Max( ARS,FirstVNF_Mem ) ) ) - MDR ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "( ( CS / RCSe ) / ( ( CS / MLU ) * MUR ) )", "obj1": 0.65625, "obj2": 0.21309472877968483}, {"determining": "( Const + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MLU ) - Min( MUR ,Max( CS,( MLU / MUC ) ) ) ) )", "obj1": 0.3104166666666667, "obj2": 0.6362992628136314}, {"determining": "( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( ACS,FirstVNF_RAM ) ) - ( Const - Max( ARS,FirstVNF_Mem ) ) ) - MDR )", "choosing": "Max( Min( ( ( DS - RCSe ) + ( ( MUR + Min( MUR ,( DS - Min( MUM ,RCSe ) ) ) ) - MUR ) ) ,( ( Min( RMSe ,CS ) - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 0.24375, "obj2": 0.7218503846350997}, {"determining": "( ( ARS / AMS ) * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MLU / ( ( MUM - MLU ) - MUC ) ) / DS ) * MUC ) * CS ) * Min( CS ,RRSe ) ) + ( MUM - RRSe ) )", "obj1": 0.44166666666666665, "obj2": 0.4762774184778149}, {"determining": "( Min( RRS ,FirstVNF_Mem ) / ( ( ( ( ( ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * PN ) ) * Max( FirstVNF_CPU,AMS ) ) * ACS ) / AMS ) * FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "( ( RCSe * MUR ) / ( DS - RRSe ) )", "obj1": 0.27708333333333335, "obj2": 0.6588856516759338}, {"determining": "( ( Max( MRS,FirstVNF_CPU ) / AMS ) + Min( ( MRS - AMS ) ,MRS ) )", "choosing": "( ( DS * RMSe ) / ( MUR * ( Min( MUR ,( RCSe - Min( DS ,Min( MUC ,DS ) ) ) ) / MLU ) ) )", "obj1": 0.9395833333333333, "obj2": 0.06026000518536481}, {"determining": "( ( CRS / Max( FirstVNF_RAM,Const ) ) * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MLU / ( ( MUM - MLU ) - ( MUR * RRSe ) ) ) / DS ) * MUC ) * CS ) * Min( CS ,RRSe ) ) + ( MUM - RRSe ) )", "obj1": 0.5166666666666667, "obj2": 0.4016225542028331}, {"determining": "( ( PN - FirstVNF_CPU ) + ( BR / AMS ) )", "choosing": "Max( ( MUC - RRSe ),( ( MUM + MUC ) - Min( MUR ,Max( CS,( MLU / RMSe ) ) ) ) )", "obj1": 0.9979166666666667, "obj2": 0.0006653924456461514}, {"determining": "( ( FirstVNF_RAM - ( ( FirstVNF_RAM_Server * ARS ) / ARS ) ) * Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "Max( ( MUC - RRSe ),Min( MUR ,( ( ( Min( MUR ,Max( Min( MLU ,CS ),MLU ) ) * Min( ( RMSe / MUC ) ,MLU ) ) / RCSe ) + ( MUC - ( RRSe / RCSe ) ) ) ) )", "obj1": 0.9416666666666667, "obj2": 0.05885619682195201}, {"determining": "( ( ( ( FirstVNF_CPU_Server * ( PN / ( DDR / MRS ) ) ) + ( RRS / Min( PN ,MDR ) ) ) / Max( FirstVNF_RAM,Const ) ) * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MLU / ( ( MUM - MLU ) - ( MUR * CS ) ) ) / DS ) * MUC ) * CS ) * Min( CS ,RRSe ) ) + ( MUM - RRSe ) )", "obj1": 0.41041666666666665, "obj2": 0.4841315114859864}, {"determining": "( ( CRS / Max( FirstVNF_RAM,Const ) ) * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( ( MLU / ( ( MUM - MLU ) - ( MUR * RRSe ) ) ) / DS ) * MUC ) * CS ) * Min( CS ,RRSe ) ) + ( MUM - RRSe ) )", "obj1": 0.4791666666666667, "obj2": 0.4219955360756666}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / Min( BR ,( ( DDR - ( MDR / CRS ) ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( CS ,DS ) ,MUR )", "obj1": 0.5583333333333333, "obj2": 0.3800974650859693}, {"determining": "( ( ( ( Min( Min( MRS ,MRS ) ,Max( ACS,FirstVNF_RAM ) ) - ( Min( Const ,CRS ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( ( Max( Const,BR ) * ( FirstVNF_CPU + ARS ) ) / Max( ( PN * FirstVNF_RAM ),Max( RRS,ARS ) ) ) ) + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( MLU * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 0.8520833333333333, "obj2": 0.0830624184948555}, {"determining": "Min( ( ( Min( Max( BR,FirstVNF_CPU ) ,MRS ) - ( AMS + RRS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,( ( MDR / MDR ) + FirstVNF_RAM ) ),( FirstVNF_RAM / ACS ) ) / ( ( Max( FirstVNF_Mem_Server,AMS ) - ACS ) / ( Const + BR ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - Max( DS,RMSe ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 0.325, "obj2": 0.6018784269942721}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,FirstVNF_CPU_Server ),( FirstVNF_RAM / ACS ) ) / ( ( MDR - ( ( DDR / ( MDR * MDR ) ) * ( FirstVNF_RAM_Server - ( MDR + ACS ) ) ) ) / Min( Const ,BR ) ) ) )", "choosing": "( ( Min( ( RRSe - ( RMSe + DS ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 0.31875, "obj2": 0.6153123263116899}, {"determining": "( ( ( ARS - FirstVNF_CPU_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) - ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) )", "choosing": "Max( ( MUC - RRSe ),Max( MUR,( ( ( Min( Max( Min( MLU ,MLU ),MLU ) ,MUR ) - Min( ( MUC / RMSe ) ,MLU ) ) * RCSe ) + ( MUR * ( DS - Max( MUM,RMSe ) ) ) ) ) )", "obj1": 0.9916666666666667, "obj2": 0.010485853998262018}, {"determining": "( ( PN - Min( Const ,Max( DDR,AMS ) ) ) / FirstVNF_RAM_Server )", "choosing": "Min( Min( CS ,DS ) ,Max( Max( ( DS * Max( CS,( ( ( RCSe - RCSe ) * RRSe ) - MUC ) ) ),( RRSe * MUM ) ),( ( RRSe / MUC ) - ( DS + RRSe ) ) ) )", "obj1": 0.9958333333333333, "obj2": 0.002122501450223485}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - AMS ) / ( RRS + AMS ) ) + ( Max( ACS,RRS ) / ( FirstVNF_Mem - MDR ) ) ) ,( Max( Min( ACS ,FirstVNF_CPU_Server ),( FirstVNF_RAM / ACS ) ) / ( ( MDR - ( ( DDR / ( MDR * MDR ) ) * ( FirstVNF_RAM_Server - ( MDR + ACS ) ) ) ) / Min( Const ,BR ) ) ) )", "choosing": "( ( Min( ( RRSe - ( RMSe + DS ) ) ,Min( MUR ,RMSe ) ) / MUM ) + ( RMSe * RCSe ) )", "obj1": 0.31875, "obj2": 0.6153123263116899}, {"determining": "( Min( FirstVNF_Mem ,( Max( ARS,Const ) / DDR ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( MUR + ( DS - RMSe ) ) ) ) ) ,( ( MLU + MUM ) - ( DS - Max( ( Max( RMSe,RMSe ) + MUM ),MUC ) ) ) )", "obj1": 0.6375, "obj2": 0.270227847497648}, {"determining": "( ( MRS + ( PN + ( FirstVNF_RAM * ACS ) ) ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( DS + ( ( ( RRSe * ( MUR / MLU ) ) * Max( RCSe,MUC ) ) * ( RMSe * ( MUR + ( DS - RMSe ) ) ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 0.5729166666666666, "obj2": 0.3099384891905343}, {"determining": "( ( FirstVNF_RAM * CRS ) - Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( FirstVNF_RAM ,CRS ) ) )", "choosing": "Min( ( MUR / CS ) ,( DS / CS ) )", "obj1": 0.95625, "obj2": 0.039644021762459805}, {"determining": "( ( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( ACS,FirstVNF_RAM ) ) - ( Const - Max( ARS,FirstVNF_Mem ) ) ) - MDR ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "( ( Min( ( RRSe * MUC ) ,( MUM + MUM ) ) - Max( Max( CS,RRSe ),( RCSe + CS ) ) ) + ( Max( CS,CS ) + MUC ) )", "obj1": 0.7041666666666667, "obj2": 0.1741560038818411}, {"determining": "Min( Min( ( ( DDR + Max( ( CRS - FirstVNF_RAM_Server ),( MRS * Const ) ) ) - FirstVNF_CPU ) ,( DDR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( MUR + ( ( CS / MLU ) * MUR ) ) + Max( ( MUR + RCSe ),( RMSe / RCSe ) ) ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 0.81875, "obj2": 0.1596350768801862}, {"determining": "( ( ( ( DDR + ( Max( ( ( CRS / FirstVNF_RAM ) - ARS ),FirstVNF_Mem_Server ) / MRS ) ) - FirstVNF_CPU ) - ( Const - Max( ARS,FirstVNF_Mem ) ) ) - MDR )", "choosing": "Max( Min( ( ( DS - RCSe ) + ( ( MUR + Min( MUR ,( DS - Min( MUM ,RCSe ) ) ) ) - MUR ) ) ,( ( ( RCSe + RRSe ) / RCSe ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 0.2520833333333333, "obj2": 0.7077511638707936}, {"determining": "Min( Min( ( ( DDR + ( Max( ( ( CRS / FirstVNF_RAM ) - ARS ),FirstVNF_Mem_Server ) / MRS ) ) - FirstVNF_CPU ) ,( DDR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( MUR * ( MUM / MLU ) ) + CS ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 0.8083333333333333, "obj2": 0.16402972458487064}, {"determining": "( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( ACS,FirstVNF_RAM ) ) - ( Const - Max( ARS,FirstVNF_Mem ) ) ) - MDR )", "choosing": "Max( Min( ( ( DS - RCSe ) + ( ( MUR + Min( MUR ,( DS - Min( MUM ,RCSe ) ) ) ) - MUR ) ) ,( ( Min( RMSe ,CS ) - DS ) / Min( RCSe ,MUM ) ) ),( ( ( MUC * CS ) - Max( DS,CS ) ) - ( ( RMSe - DS ) - ( RMSe / DS ) ) ) )", "obj1": 0.26666666666666666, "obj2": 0.6827379856040213}, {"determining": "( ( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,( PN + ( FirstVNF_RAM * ACS ) ) ) - ( Const - Max( ARS,FirstVNF_Mem ) ) ) - MDR ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( RMSe * ( Max( RMSe,CS ) + ( DS - RMSe ) ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 0.7166666666666667, "obj2": 0.16451939205834565}, {"determining": "( ( ( Min( Min( MRS ,FirstVNF_Mem_Server ) ,Max( ACS,FirstVNF_RAM ) ) - ( Const - Max( ARS,FirstVNF_Mem ) ) ) - MDR ) - Min( ( MDR / Const ) ,AMS ) )", "choosing": "Min( ( ( DS - RCSe ) + ( ( MUR + Min( MUR ,( DS - Min( MUM ,RCSe ) ) ) ) - MUR ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 0.69375, "obj2": 0.17457614893195278}, {"determining": "Min( Min( ( ( DDR + ( RRS / MRS ) ) - FirstVNF_CPU ) ,( DDR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( MUR * Min( MUR ,RMSe ) ) + CS ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 0.825, "obj2": 0.15259697286566976}, {"determining": "Min( Min( ( ( DDR + ( Max( ( ( CRS / FirstVNF_RAM ) - ARS ),FirstVNF_Mem_Server ) / MRS ) ) - FirstVNF_CPU ) ,( DDR * DDR ) ) ,( ( DDR - FirstVNF_CPU ) / Max( FirstVNF_RAM_Server,PN ) ) )", "choosing": "( ( Max( RMSe,DS ) - ( ( MUR * ( MUM / MLU ) ) + CS ) ) * ( ( RCSe + RRSe ) / RCSe ) )", "obj1": 0.8166666666666667, "obj2": 0.1603172029355958}]}