{"1": [{"determining": "( ( ACS * PN ) * Min( ARS ,Const ) )", "choosing": "( Min( RCSe ,MUM ) - ( MUC * RCSe ) )", "obj1": 0.178, "obj2": 0.6284635684278945}, {"determining": "( Max( PN,CRS ) - ( MDR / ARS ) )", "choosing": "( Max( RRSe,MUR ) * ( RMSe / MUC ) )", "obj1": 0.768, "obj2": 0.08980791884731523}, {"determining": "( Max( FirstVNF_RAM_Server,RRS ) + ( MRS * ARS ) )", "choosing": "( Min( RMSe ,MUR ) - ( MUC * MUM ) )", "obj1": 0.21, "obj2": 0.6162928130765166}, {"determining": "Max( ( Const / FirstVNF_RAM ),( CRS / BR ) )", "choosing": "Min( Min( RCSe ,MUM ) ,Min( DS ,MUC ) )", "obj1": 0.616, "obj2": 0.28534962151815335}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / ( PN / FirstVNF_CPU ) )", "choosing": "( ( DS + DS ) + Max( MUR,RCSe ) )", "obj1": 0.546, "obj2": 0.34481783767636115}, {"determining": "( ( ( CRS + FirstVNF_CPU ) / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "( ( RRSe + MLU ) / Max( MUR,Max( MLU,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / ( Const - FirstVNF_RAM ) )", "choosing": "Min( Min( MUR ,CS ) ,( MLU * MUC ) )", "obj1": 0.924, "obj2": 0.07135276862448389}, {"determining": "Min( Min( ARS ,DDR ) ,Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( DS + RMSe ),Min( MUR ,RMSe ) )", "obj1": 0.494, "obj2": 0.3933952390473589}, {"determining": "( Max( BR,MDR ) * ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MUR ) * ( DS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( RMSe * MUR ) * ( MLU - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - DDR ) - ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( Min( RRSe ,MLU ) * ( RCSe - RRSe ) )", "obj1": 0.47, "obj2": 0.422116320615473}, {"determining": "( ( ARS / Min( FirstVNF_RAM_Server ,AMS ) ) - ( ARS / BR ) )", "choosing": "( Min( ( MUM + RRSe ) ,( CS / RRSe ) ) + ( ( RRSe + CS ) / ( DS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,RRS ) + Max( ( FirstVNF_Mem * ACS ),Max( RRS,PN ) ) )", "choosing": "Max( ( ( MUC - RCSe ) - ( RCSe - MUC ) ),( Max( RMSe,MUC ) + ( DS / CS ) ) )", "obj1": 0.514, "obj2": 0.3698409861153265}, {"determining": "Min( ( Const - AMS ) ,( ( MRS + ( PN / FirstVNF_Mem_Server ) ) * ( DDR + MDR ) ) )", "choosing": "( ( ( MLU - MUM ) / Min( RMSe ,CS ) ) / ( RRSe - ( ( ( ( ( MUR * MUR ) + MUM ) - RRSe ) * RCSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( DDR * MRS ) ) ,Max( ( FirstVNF_Mem - ARS ),( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "( Max( ( DS * MLU ),Min( DS ,MUC ) ) + ( ( RRSe / CS ) + Min( MUR ,RMSe ) ) )", "obj1": 0.426, "obj2": 0.42462086074025196}, {"determining": "( Min( CRS ,BR ) * Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "Max( ( Min( MUC ,( MUC / Max( Min( CS ,Min( ( RCSe / CS ) ,RCSe ) ),( RRSe * ( MLU * DS ) ) ) ) ) + ( DS + MUM ) ),( Max( CS,MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.932, "obj2": 0.06327967529756304}, {"determining": "( ( ( BR / MDR ) - Max( Const,Const ) ) - ( Max( ARS,ACS ) / ( ARS / DDR ) ) )", "choosing": "Min( ( ( DS + CS ) - ( MUR * DS ) ) ,( Max( RMSe,RRSe ) * ( RCSe + DS ) ) )", "obj1": 0.972, "obj2": 0.012605011350498272}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( RRS - FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM,CRS ) ,( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / RRSe ),( ( MUC - DS ) * ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + MDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( ( MUR - RCSe ) * Max( MUC,MUM ) ) - ( ( CS - MUR ) * Max( RMSe,RMSe ) ) )", "obj1": 0.334, "obj2": 0.4781140036766235}, {"determining": "( Max( ( FirstVNF_CPU_Server / Const ),( Min( Const ,( ( BR - FirstVNF_CPU_Server ) / ( ( ARS + ( DDR * RRS ) ) + BR ) ) ) / ( FirstVNF_Mem_Server - RRS ) ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( CRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / Max( ( Min( RRSe ,MUC ) + RCSe ),RRSe ) ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + BR ) ) + ( Max( DDR,ARS ) * ( AMS / FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUR ,DS ) - ( MUM + CS ) ) - Min( ( MUC - DS ) ,Min( MUR ,DS ) ) )", "obj1": 0.222, "obj2": 0.5576473366286285}, {"determining": "Max( ( ( PN * FirstVNF_CPU ) - ( MDR - FirstVNF_CPU_Server ) ),( ( AMS * CRS ) - ( ARS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.372, "obj2": 0.460467334185349}, {"determining": "( ( ( ARS - FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - MDR ) ) - ( ( BR + Const ) / Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RCSe ) / Min( RMSe ,RRSe ) ) - ( Min( MLU ,RRSe ) * ( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( BR - Const ) * ( RRS - BR ) ),( Max( FirstVNF_Mem_Server,RRS ) + ( MRS / RRS ) ) )", "choosing": "( ( ( MUM - RCSe ) + ( MUM - RCSe ) ) * ( ( MLU + RCSe ) / ( DS * DS ) ) )", "obj1": 0.158, "obj2": 0.6738087413531961}, {"determining": "Min( ( DDR * FirstVNF_RAM ) ,( MRS - PN ) )", "choosing": "( ( MUC * Min( MLU ,MUR ) ) + Min( Max( MUR,RRSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( DDR / ACS ) ) + ( DDR + Max( CRS,BR ) ) ) - ( RRS * ( CRS + CRS ) ) )", "choosing": "Min( ( Max( Min( RMSe ,RMSe ),Max( RRSe,RCSe ) ) / Min( Max( MUR,RCSe ) ,( DS + MUC ) ) ) ,( Min( ( RRSe - MLU ) ,( DS - CS ) ) - ( Min( MLU ,RRSe ) - ( DS + RCSe ) ) ) )", "obj1": 0.296, "obj2": 0.5212834603298429}, {"determining": "Max( ( MDR - DDR ),Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( MUR - MUR ) - ( CS * RCSe ) )", "obj1": 0.214, "obj2": 0.5635633958709746}, {"determining": "( ( ( ( FirstVNF_Mem / MDR ) + ( CRS / RRS ) ) + Min( ( Max( BR,Max( FirstVNF_Mem_Server,( RRS * FirstVNF_Mem_Server ) ) ) - ARS ) ,RRS ) ) - ( ( ( FirstVNF_Mem + AMS ) / ( MDR / FirstVNF_RAM_Server ) ) / ( Min( BR ,FirstVNF_CPU_Server ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUC ,RMSe ) * RCSe ) / ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.244, "obj2": 0.5358203488068761}, {"determining": "Min( ( ( ACS - FirstVNF_Mem_Server ) - FirstVNF_RAM ) ,Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + AMS ) ) ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Max( ( ( MUM / RCSe ) + Min( RRSe ,RRSe ) ),( Max( RRSe,RCSe ) + ( MUR - RRSe ) ) ) / Min( ( ( MLU / CS ) + ( RCSe / MLU ) ) ,( Min( RCSe ,RRSe ) * ( RRSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - ARS ) - ( RRS + FirstVNF_RAM ) ) * ( ( MRS * FirstVNF_Mem ) / Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - ( AMS - PN ) ) ,Max( ( BR / Max( ( ( MRS * Max( MDR,ACS ) ) * CRS ),BR ) ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( ( MUR - RCSe ) + Max( ( RRSe + RMSe ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU ) - ( Min( DDR ,ACS ) + MRS ) )", "choosing": "( ( Min( DS ,MUR ) - MUC ) / ( Min( MUM ,( RCSe / MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + MRS ) / ( ACS - FirstVNF_CPU_Server ) ) / ( ( MDR + CRS ) + Max( FirstVNF_Mem,ARS ) ) ) - ( ( Max( ACS,FirstVNF_CPU ) * ( FirstVNF_RAM_Server * ARS ) ) / ( Min( RRS ,DDR ) - ( ACS - RRS ) ) ) )", "choosing": "( ( ( Max( MUR,RRSe ) / ( MUR + RRSe ) ) * ( ( MUR / DS ) / Min( RRSe ,MUC ) ) ) * Min( Min( Max( RRSe,RMSe ) ,Max( MUC,MLU ) ) ,Min( ( RMSe + MUC ) ,( MLU * MUM ) ) ) )", "obj1": 0.134, "obj2": 0.677263787506372}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,ARS ) * ( RRS - DDR ) ),Min( ( RRS / ACS ) ,( FirstVNF_Mem + DDR ) ) ) - ( ( Min( CRS ,MDR ) * Min( BR ,FirstVNF_Mem_Server ) ) + ( ( Const / CRS ) * ( MRS - Const ) ) ) )", "choosing": "( ( RCSe * RMSe ) - Max( ( CS + MLU ),( DS + DS ) ) )", "obj1": 0.204, "obj2": 0.6220344760199087}, {"determining": "( ( PN / FirstVNF_CPU_Server ) + ( FirstVNF_Mem - FirstVNF_RAM ) )", "choosing": "( Min( ( RMSe - CS ) ,MUR ) / Min( CS ,CS ) )", "obj1": 0.672, "obj2": 0.22597702888030322}, {"determining": "( ( ( ( MRS - CRS ) * ( AMS - PN ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( Min( ( Const + ARS ) ,( AMS - FirstVNF_CPU ) ) / ( ( Const / ARS ) + ( MDR + RRS ) ) ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( RMSe / MUM ) / DS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / ARS ) ,( Max( ( FirstVNF_RAM_Server / MDR ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) + ( ( PN - RRS ) / ACS ) ) )", "choosing": "( ( ( Min( CS ,MUR ) * Min( DS ,MUC ) ) - ( ( DS / MUC ) * ( RMSe + MUM ) ) ) * Max( ( ( MLU / CS ) / Min( MUC ,RMSe ) ),Max( ( RCSe * CS ),( MUC * RRSe ) ) ) )", "obj1": 0.082, "obj2": 0.8056690264949188}, {"determining": "( ( ( ( PN * ( DDR / MRS ) ) * ( FirstVNF_Mem_Server * BR ) ) - Min( ( RRS - Min( BR ,RRS ) ) ,Min( Const ,FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_Mem / AMS ) * ( AMS * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) / Min( ( CRS + FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MUR / MLU ) * Max( RRSe,DS ) ) ,( MUC + CS ) ) - ( ( Min( ( ( MUM / RRSe ) * Min( DS ,( RMSe - DS ) ) ) ,RCSe ) - Max( MUC,RCSe ) ) * Max( Max( CS,DS ),Max( MUC,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ACS,AMS ),Min( MDR ,FirstVNF_RAM ) ) - ( Max( MRS,MDR ) - ( ACS + MRS ) ) ) ,( FirstVNF_CPU_Server + ACS ) )", "choosing": "Max( Max( Max( Max( RMSe,( MUM + Min( MUM ,MLU ) ) ),( MUM * CS ) ),Max( ( Min( MUM ,MUM ) + RRSe ),( RCSe * RMSe ) ) ),Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "Max( ( Max( Max( RMSe,CS ),( MUM - RCSe ) ) + ( Min( DS ,DS ) * ( RMSe / RCSe ) ) ),( ( ( MUC / MUM ) - Max( MUM,CS ) ) / ( ( MUR * CS ) + ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) / ( CRS + ( FirstVNF_Mem * PN ) ) )", "choosing": "( ( ( ( RRSe / MUC ) - ( RCSe / MUC ) ) / ( ( CS / DS ) / ( MUR - CS ) ) ) - ( ( Min( DS ,RCSe ) * Min( MUM ,MUC ) ) * Min( ( MUR * CS ) ,( MLU * DS ) ) ) )", "obj1": 0.122, "obj2": 0.6879808095867638}], "2": [{"determining": "( Max( PN,CRS ) - ( MDR / ARS ) )", "choosing": "( Max( RRSe,MUR ) * ( RMSe / MUC ) )", "obj1": 0.768, "obj2": 0.08980791884731523}, {"determining": "( ( ( CRS + FirstVNF_CPU ) / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "( ( RRSe + MLU ) / Max( MUR,Max( MLU,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,MDR ) * ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MUR ) * ( DS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( RMSe * MUR ) * ( MLU - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Min( FirstVNF_RAM_Server ,AMS ) ) - ( ARS / BR ) )", "choosing": "( Min( ( MUM + RRSe ) ,( CS / RRSe ) ) + ( ( RRSe + CS ) / ( DS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,RRS ) + Max( ( FirstVNF_Mem * ACS ),Max( RRS,PN ) ) )", "choosing": "Max( ( ( MUC - RCSe ) - ( RCSe - MUC ) ),( Max( RMSe,MUC ) + ( DS / CS ) ) )", "obj1": 0.514, "obj2": 0.3698409861153265}, {"determining": "Min( ( Const - AMS ) ,( ( MRS + ( PN / FirstVNF_Mem_Server ) ) * ( DDR + MDR ) ) )", "choosing": "( ( ( MLU - MUM ) / Min( RMSe ,CS ) ) / ( RRSe - ( ( ( ( ( MUR * MUR ) + MUM ) - RRSe ) * RCSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) - ( DDR * MRS ) ) ,Max( ( FirstVNF_Mem - ARS ),( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "( Max( ( DS * MLU ),Min( DS ,MUC ) ) + ( ( RRSe / CS ) + Min( MUR ,RMSe ) ) )", "obj1": 0.426, "obj2": 0.42462086074025196}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( RRS - FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM,CRS ) ,( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / RRSe ),( ( MUC - DS ) * ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + MDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( ( MUR - RCSe ) * Max( MUC,MUM ) ) - ( ( CS - MUR ) * Max( RMSe,RMSe ) ) )", "obj1": 0.334, "obj2": 0.4781140036766235}, {"determining": "( Max( ( FirstVNF_CPU_Server / Const ),( Min( Const ,( ( BR - FirstVNF_CPU_Server ) / ( ( ARS + ( DDR * RRS ) ) + BR ) ) ) / ( FirstVNF_Mem_Server - RRS ) ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( CRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / Max( ( Min( RRSe ,MUC ) + RCSe ),RRSe ) ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + BR ) ) + ( Max( DDR,ARS ) * ( AMS / FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUR ,DS ) - ( MUM + CS ) ) - Min( ( MUC - DS ) ,Min( MUR ,DS ) ) )", "obj1": 0.222, "obj2": 0.5576473366286285}, {"determining": "Max( ( ( PN * FirstVNF_CPU ) - ( MDR - FirstVNF_CPU_Server ) ),( ( AMS * CRS ) - ( ARS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.372, "obj2": 0.460467334185349}, {"determining": "( ( ( ARS - FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - MDR ) ) - ( ( BR + Const ) / Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RCSe ) / Min( RMSe ,RRSe ) ) - ( Min( MLU ,RRSe ) * ( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR * FirstVNF_RAM ) ,( MRS - PN ) )", "choosing": "( ( MUC * Min( MLU ,MUR ) ) + Min( Max( MUR,RRSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( DDR / ACS ) ) + ( DDR + Max( CRS,BR ) ) ) - ( RRS * ( CRS + CRS ) ) )", "choosing": "Min( ( Max( Min( RMSe ,RMSe ),Max( RRSe,RCSe ) ) / Min( Max( MUR,RCSe ) ,( DS + MUC ) ) ) ,( Min( ( RRSe - MLU ) ,( DS - CS ) ) - ( Min( MLU ,RRSe ) - ( DS + RCSe ) ) ) )", "obj1": 0.296, "obj2": 0.5212834603298429}, {"determining": "( ( ( ( FirstVNF_Mem / MDR ) + ( CRS / RRS ) ) + Min( ( Max( BR,Max( FirstVNF_Mem_Server,( RRS * FirstVNF_Mem_Server ) ) ) - ARS ) ,RRS ) ) - ( ( ( FirstVNF_Mem + AMS ) / ( MDR / FirstVNF_RAM_Server ) ) / ( Min( BR ,FirstVNF_CPU_Server ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUC ,RMSe ) * RCSe ) / ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.244, "obj2": 0.5358203488068761}, {"determining": "Min( ( ( ACS - FirstVNF_Mem_Server ) - FirstVNF_RAM ) ,Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + AMS ) ) ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Max( ( ( MUM / RCSe ) + Min( RRSe ,RRSe ) ),( Max( RRSe,RCSe ) + ( MUR - RRSe ) ) ) / Min( ( ( MLU / CS ) + ( RCSe / MLU ) ) ,( Min( RCSe ,RRSe ) * ( RRSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - ARS ) - ( RRS + FirstVNF_RAM ) ) * ( ( MRS * FirstVNF_Mem ) / Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - ( AMS - PN ) ) ,Max( ( BR / Max( ( ( MRS * Max( MDR,ACS ) ) * CRS ),BR ) ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( ( MUR - RCSe ) + Max( ( RRSe + RMSe ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU ) - ( Min( DDR ,ACS ) + MRS ) )", "choosing": "( ( Min( DS ,MUR ) - MUC ) / ( Min( MUM ,( RCSe / MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS + MRS ) / ( ACS - FirstVNF_CPU_Server ) ) / ( ( MDR + CRS ) + Max( FirstVNF_Mem,ARS ) ) ) - ( ( Max( ACS,FirstVNF_CPU ) * ( FirstVNF_RAM_Server * ARS ) ) / ( Min( RRS ,DDR ) - ( ACS - RRS ) ) ) )", "choosing": "( ( ( Max( MUR,RRSe ) / ( MUR + RRSe ) ) * ( ( MUR / DS ) / Min( RRSe ,MUC ) ) ) * Min( Min( Max( RRSe,RMSe ) ,Max( MUC,MLU ) ) ,Min( ( RMSe + MUC ) ,( MLU * MUM ) ) ) )", "obj1": 0.134, "obj2": 0.677263787506372}, {"determining": "( ( ( ( MRS - CRS ) * ( AMS - PN ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( Min( ( Const + ARS ) ,( AMS - FirstVNF_CPU ) ) / ( ( Const / ARS ) + ( MDR + RRS ) ) ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( RMSe / MUM ) / DS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * ( DDR / MRS ) ) * ( FirstVNF_Mem_Server * BR ) ) - Min( ( RRS - Min( BR ,RRS ) ) ,Min( Const ,FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_Mem / AMS ) * ( AMS * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) / Min( ( CRS + FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MUR / MLU ) * Max( RRSe,DS ) ) ,( MUC + CS ) ) - ( ( Min( ( ( MUM / RRSe ) * Min( DS ,( RMSe - DS ) ) ) ,RCSe ) - Max( MUC,RCSe ) ) * Max( Max( CS,DS ),Max( MUC,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ACS,AMS ),Min( MDR ,FirstVNF_RAM ) ) - ( Max( MRS,MDR ) - ( ACS + MRS ) ) ) ,( FirstVNF_CPU_Server + ACS ) )", "choosing": "Max( Max( Max( Max( RMSe,( MUM + Min( MUM ,MLU ) ) ),( MUM * CS ) ),Max( ( Min( MUM ,MUM ) + RRSe ),( RCSe * RMSe ) ) ),Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "Max( ( Max( Max( RMSe,CS ),( MUM - RCSe ) ) + ( Min( DS ,DS ) * ( RMSe / RCSe ) ) ),( ( ( MUC / MUM ) - Max( MUM,CS ) ) / ( ( MUR * CS ) + ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) / ( CRS + ( FirstVNF_Mem * PN ) ) )", "choosing": "( ( ( ( RRSe / MUC ) - ( RCSe / MUC ) ) / ( ( CS / DS ) / ( MUR - CS ) ) ) - ( ( Min( DS ,RCSe ) * Min( MUM ,MUC ) ) * Min( ( MUR * CS ) ,( MLU * DS ) ) ) )", "obj1": 0.122, "obj2": 0.6879808095867638}, {"determining": "( ( ( ( MRS - ARS ) - ( RRS + FirstVNF_RAM ) ) * ( ( MRS * FirstVNF_Mem ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ARS ) ,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( AMS - PN ) ) ,Max( ( Const / FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RRSe ,( Max( MUM,MLU ) + Max( RMSe,Max( ( RRSe / Min( RMSe ,Min( MUM ,MUC ) ) ),( DS - MUM ) ) ) ) ) + ( MUM * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR * FirstVNF_RAM ) ,( MRS - PN ) ) - ( ARS / BR ) )", "choosing": "( Min( ( MUM + RRSe ) ,( ( MUC * Min( MLU ,MUR ) ) + Min( Max( MUR,RRSe ) ,RRSe ) ) ) + ( ( RRSe + CS ) / ( DS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - PN ) ,( RRS / FirstVNF_RAM ) )", "choosing": "( ( MUC * Min( MUM ,MUR ) ) + ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) / ARS ) - Max( CRS,PN ) )", "choosing": "( ( RCSe * MUC ) + ( ( RCSe + ( ( MUM * MUC ) * ( ( ( ( MUC * RMSe ) + RRSe ) + ( Max( MLU,CS ) - MUC ) ) * ( ( ( CS + RRSe ) + MUC ) - ( MUC + ( MUC - RRSe ) ) ) ) ) ) / ( DS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( ( ARS * ( FirstVNF_RAM - FirstVNF_CPU ) ) / ( RRS - FirstVNF_RAM ) ) ) - RRS ) / Max( ARS,FirstVNF_RAM_Server ) ) / Min( ( RRS - FirstVNF_RAM ) ,( Const / RRS ) ) ) ,( Min( Max( DDR,FirstVNF_CPU ) ,( MRS / AMS ) ) - Max( Min( FirstVNF_Mem ,MRS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( CS,( CS - RRSe ) ) - Min( RCSe ,CS ) ) / ( Max( RMSe,MUC ) - ( MUR / RCSe ) ) ) / Max( ( ( DS / RCSe ) + Max( MUC,RRSe ) ),Max( ( CS * MLU ),( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS * FirstVNF_RAM ) / Max( ARS,FirstVNF_RAM_Server ) ) / ( Min( MRS ,Max( MRS,MRS ) ) - AMS ) ) ,Min( ( ( BR - FirstVNF_RAM ) / ( RRS + FirstVNF_RAM_Server ) ) ,( Min( CRS ,MRS ) / ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "( Max( ( MUC * MLU ),Min( MUC ,( MUM + CS ) ) ) * ( Max( RRSe,MUM ) * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / ( ARS * FirstVNF_RAM_Server ) ) / Max( CRS,BR ) ) ,( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( ( Max( RMSe,CS ) - Min( RCSe ,CS ) ) / Max( ( MUR - RRSe ),( MUM * ( ( MUR - ( Min( RMSe ,RRSe ) * ( MLU + RMSe ) ) ) + CS ) ) ) ) / Max( ( ( CS * MLU ) - ( MUC - RCSe ) ),( ( DS / RCSe ) + Max( MUC,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ACS,FirstVNF_RAM ),( MDR / FirstVNF_RAM ) ) - ( Max( MRS,MDR ) - ( MRS - FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) * ( FirstVNF_CPU_Server - AMS ) ) / ( ( FirstVNF_CPU_Server - RRS ) + ( FirstVNF_RAM - FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( RCSe ,MUM ) ,Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Max( BR,FirstVNF_Mem ),ARS ),Const )", "choosing": "( ( MUC + MUC ) / ( Min( ( CS / Min( RMSe ,RCSe ) ) ,CS ) / MUM ) )", "obj1": 0.318, "obj2": 0.5009301419342949}, {"determining": "( ( FirstVNF_Mem - DDR ) - ( FirstVNF_Mem + AMS ) )", "choosing": "( Min( RRSe ,( ( RRSe - RCSe ) * ( RRSe * RCSe ) ) ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - DDR ) - ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( Min( RRSe ,MLU ) * ( RCSe - RRSe ) )", "obj1": 0.472, "obj2": 0.4062126214523871}, {"determining": "( Max( RRS,RRS ) + ( ( BR - DDR ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( RCSe + MUR ) * Max( Max( MUM,CS ),( CS / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( ( MDR / FirstVNF_CPU_Server ) + ( Const / RRS ) ) * Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + DDR ) ) ),( MDR / FirstVNF_RAM ) ) - ( Max( MRS,MDR ) - ( MRS - FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) * ( FirstVNF_CPU_Server - AMS ) ) / ( ( FirstVNF_CPU_Server - RRS ) + ( FirstVNF_RAM - FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( ( RMSe / MUC ) - Min( RRSe ,RCSe ) ),Max( Max( RMSe,MUC ),( MUM * CS ) ) ),Min( ( Min( DS ,DS ) - ( RRSe * DS ) ) ,( ( RCSe + MUC ) + Min( MUC ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ACS,FirstVNF_RAM ),( MDR / FirstVNF_RAM ) ) - ( Max( MRS,MDR ) - ( MRS - FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) * ( FirstVNF_CPU_Server - AMS ) ) / ( ( FirstVNF_CPU_Server - RRS ) + ( FirstVNF_RAM - FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( MUC ,MUR ) + ( DS + MUM ) ),( Max( CS,MUC ) / ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ACS,AMS ),Min( MDR ,FirstVNF_RAM ) ) - ( Max( MRS,MDR ) - ( ACS + MRS ) ) ) ,( FirstVNF_CPU_Server + ACS ) )", "choosing": "Max( Max( Max( Max( RMSe,( MUM + Min( MUM ,MLU ) ) ),( MUM * CS ) ),Max( ( Min( MUM ,MUM ) + RRSe ),( RCSe * RMSe ) ) ),Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ACS,AMS ),Min( MDR ,FirstVNF_RAM ) ) - ( Max( MRS,MDR ) - ( ACS + MRS ) ) ) ,( FirstVNF_CPU_Server + ACS ) )", "choosing": "Max( Max( Max( Max( RMSe,( MUM + Min( MUM ,MLU ) ) ),( MUM * CS ) ),Max( ( Min( MUM ,MUM ) + RRSe ),( RCSe * RMSe ) ) ),Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ACS,AMS ),Min( MDR ,FirstVNF_RAM ) ) - ( Max( MRS,MDR ) - ( ACS + MRS ) ) ) ,( FirstVNF_CPU_Server + ACS ) )", "choosing": "Max( Max( Max( Max( RMSe,( MUM + Min( MUM ,MLU ) ) ),( MUM * CS ) ),Max( ( Min( MUM ,MUM ) + RRSe ),( RCSe * RMSe ) ) ),Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ACS,FirstVNF_RAM ),Min( MDR ,FirstVNF_RAM ) ) - ( Max( MRS,MDR ) - ( MRS - FirstVNF_Mem_Server ) ) ) ,Min( CRS ,DDR ) )", "choosing": "Max( Max( ( Min( RRSe ,RCSe ) - ( RCSe * RMSe ) ),Max( Max( RMSe,MUC ),( MUM * CS ) ) ),Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / MDR ) + ( CRS + RRS ) ) + Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( Const - ACS ) ) ) - ( ( ( FirstVNF_Mem + AMS ) / ( MDR / FirstVNF_RAM_Server ) ) / ( Min( BR ,FirstVNF_CPU_Server ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RCSe ) + ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / MDR ) + ( CRS / RRS ) ) + Min( ( Max( BR,Max( FirstVNF_Mem_Server,( RRS * FirstVNF_Mem_Server ) ) ) - ARS ) ,RRS ) ) - ( ( ( FirstVNF_Mem + AMS ) / ( MDR / FirstVNF_RAM_Server ) ) / ( Min( BR ,FirstVNF_CPU_Server ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUC ,RMSe ) * RCSe ) / ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / MDR ) + ( CRS / RRS ) ) + Min( ( Max( BR,Max( FirstVNF_Mem_Server,( RRS * FirstVNF_Mem_Server ) ) ) - ARS ) ,RRS ) ) - ( ( ( FirstVNF_Mem + AMS ) / ( MDR / FirstVNF_RAM_Server ) ) / ( Min( BR ,FirstVNF_CPU_Server ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUC ,RMSe ) * RCSe ) / ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / MDR ) + ( CRS / RRS ) ) + Min( ( Max( BR,Max( FirstVNF_Mem_Server,( RRS * FirstVNF_Mem_Server ) ) ) - ARS ) ,RRS ) ) - ( ( ( FirstVNF_Mem + AMS ) / ( MDR / FirstVNF_RAM_Server ) ) / ( Min( BR ,FirstVNF_CPU_Server ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUC ,RMSe ) * RCSe ) / ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / MDR ) + ( CRS / RRS ) ) + Min( ( Max( BR,Max( FirstVNF_Mem_Server,( RRS * FirstVNF_Mem_Server ) ) ) - ARS ) ,RRS ) ) - ( ( ( FirstVNF_Mem + AMS ) / ( MDR / FirstVNF_RAM_Server ) ) / ( Min( BR ,FirstVNF_CPU_Server ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUC ,RMSe ) * RCSe ) / ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server + BR ) - ( FirstVNF_Mem + AMS ) ) * CRS ) ) ,Min( PN ,BR ) )", "choosing": "( ( MLU + Min( MUC ,RCSe ) ) + ( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Const ,MRS ),( ACS - FirstVNF_Mem ) ) / Min( ( Const * RRS ) ,( ( Max( ( FirstVNF_CPU_Server / Const ),Min( BR ,BR ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( CRS - FirstVNF_Mem_Server ) ) ) - MRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) / ( MUM + MUR ) ) + Max( DS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server / Const ),Min( BR ,BR ) ) * ( MDR - ( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) * ( MDR / FirstVNF_Mem ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe + DS ) / ( ( MLU / Max( Min( CS ,DS ),( MUC / Max( ( MUR + Min( CS ,MUC ) ),( MUM - MUR ) ) ) ) ) - ( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server / Const ),( Min( Const ,( ( BR - FirstVNF_CPU_Server ) / ( ( ARS + ( DDR * RRS ) ) + BR ) ) ) / ( FirstVNF_Mem_Server - RRS ) ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( CRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / Max( ( Min( RRSe ,MUC ) + RCSe ),RRSe ) ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server / Const ),( Min( Const ,( ( BR - FirstVNF_CPU_Server ) / ( ( ARS + ( DDR * RRS ) ) + BR ) ) ) / ( FirstVNF_Mem_Server - RRS ) ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( CRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / Max( ( Min( RRSe ,MUC ) + RCSe ),RRSe ) ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server / Const ),( Min( Const ,( ( BR - FirstVNF_CPU_Server ) / ( ( ARS + ( DDR * RRS ) ) + BR ) ) ) / ( FirstVNF_Mem_Server - RRS ) ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( CRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / Max( ( Min( RRSe ,MUC ) + RCSe ),RRSe ) ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server / Const ),( Min( FirstVNF_RAM_Server ,( ( ( ARS + FirstVNF_CPU_Server ) + BR ) / ( BR - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - RRS ) ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( CRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe + MLU ) / ( MLU / Max( ( RCSe + RCSe ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + ( ( BR + Const ) + BR ) ) / FirstVNF_RAM ),( CRS / Const ) )", "choosing": "Min( ( ( MUC + MUM ) - MUC ) ,RCSe )", "obj1": 0.606, "obj2": 0.28781859254619796}, {"determining": "( Max( ( AMS + ( ( ACS / MDR ) + Max( Const,Max( ( ( FirstVNF_RAM_Server / PN ) / DDR ),BR ) ) ) ),( MDR * CRS ) ) + ( ( ( ( Min( CRS ,MDR ) * Min( BR ,FirstVNF_Mem_Server ) ) + ( ( Const / CRS ) * ( MRS - Const ) ) ) - DDR ) - Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( DS + RCSe ) * Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,ARS ) * ( RRS - DDR ) ),Min( ( RRS / ACS ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) - ( ( Max( DDR,FirstVNF_Mem_Server ) / Min( MRS ,ACS ) ) + ( Max( ( AMS + AMS ),( MDR * CRS ) ) * ( MRS - Const ) ) ) )", "choosing": "( ( RCSe * RMSe ) - Max( MLU,Min( MUR ,( MUR * ( ( Min( MLU ,( MUC * MLU ) ) - ( ( RMSe / RCSe ) * Min( RCSe ,RRSe ) ) ) - MUM ) ) ) ) )", "obj1": 0.156, "obj2": 0.6559817986442039}, {"determining": "( ( AMS - MDR ) + ( ARS / DDR ) )", "choosing": "( Min( MUC ,RRSe ) / Min( CS ,Min( ( ( DS + CS ) - ( MUR * DS ) ) ,( Max( RMSe,RRSe ) * ( RCSe + DS ) ) ) ) )", "obj1": 0.302, "obj2": 0.5137952398150518}, {"determining": "Min( ( Const - AMS ) ,RRS )", "choosing": "( ( Max( RMSe,CS ) / ( MLU - MUM ) ) / Max( ( DS * RMSe ),Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( ( MRS + PN ) * ( DDR + MDR ) ) )", "choosing": "( ( Max( RMSe,CS ) / ( MLU - MUM ) ) / Max( ( DS * RMSe ),Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server / Const ),( Min( FirstVNF_RAM_Server ,( ARS / ( BR - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - RRS ) ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( CRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe + MLU ) / ( MLU / Max( ( Min( RMSe ,MUR ) - ( MUC * MUM ) ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS + FirstVNF_CPU_Server ) + BR ) / ( BR - FirstVNF_CPU_Server ) ) + ( MRS * ARS ) )", "choosing": "( Min( RMSe ,MUR ) - ( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server / Const ),( Min( FirstVNF_RAM_Server ,( ( ( ARS + FirstVNF_CPU_Server ) + BR ) / ( BR - FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem_Server - RRS ) ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( CRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe + MLU ) / ( MLU / Max( ( RCSe + RCSe ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,MDR ) * ACS ),( FirstVNF_Mem_Server / ( Const + FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - CS ) ,RRSe ) * ( MLU * ( MUC * CS ) ) )", "obj1": 0.362, "obj2": 0.4713663815626233}, {"determining": "( Max( Max( ( Max( FirstVNF_RAM_Server,MDR ) * ACS ),( FirstVNF_Mem_Server / ( Const + FirstVNF_CPU ) ) ),Min( ( RRS / ACS ) ,Max( FirstVNF_Mem,DDR ) ) ) - ( ( Min( CRS ,MDR ) * Min( BR ,FirstVNF_Mem_Server ) ) + ( ( Min( ( MDR / FirstVNF_Mem_Server ) ,BR ) / CRS ) * ( MRS - Const ) ) ) )", "choosing": "( Min( ( MUR - CS ) ,MUR ) - Min( ( MUC - Max( RCSe,MUR ) ) ,Max( MLU,( MUC * MUM ) ) ) )", "obj1": 0.192, "obj2": 0.5946850137346277}, {"determining": "( ( ( ( ARS / ( FirstVNF_CPU_Server + ACS ) ) - Max( ( FirstVNF_RAM_Server * MRS ),( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem ) * ( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( DS - ( ( MUC + DS ) * ( MUC - ( MUR + ( Max( ( RCSe / DS ),Min( DS ,DS ) ) - RCSe ) ) ) ) ) / ( DS - MLU ) )", "obj1": 0.448, "obj2": 0.41917356239093706}, {"determining": "( Max( Min( Const ,MRS ),( BR - ( MDR * BR ) ) ) / Min( ( Const * RRS ) ,( AMS - MRS ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.372, "obj2": 0.460467334185349}, {"determining": "( ( FirstVNF_Mem - DDR ) - ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( Max( ( ( MUR * MLU ) / MLU ),Min( Max( CS,MLU ) ,( MUM * CS ) ) ) + ( MLU + MUR ) )", "obj1": 0.518, "obj2": 0.3669347257712404}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) / ARS ) - Max( ( FirstVNF_RAM_Server * MRS ),( FirstVNF_RAM - Min( Const ,CRS ) ) ) )", "choosing": "( ( ( MUC + DS ) * ( MLU / MUC ) ) - ( ( Min( ( Max( RRSe,MUR ) - ( MLU * MUM ) ) ,( Min( CS ,MUM ) + ( RMSe + RMSe ) ) ) * ( ( ( RCSe - MUM ) * ( RRSe / MUM ) ) / ( ( MUR / DS ) * ( DS / RMSe ) ) ) ) * Min( RMSe ,MLU ) ) )", "obj1": 0.42, "obj2": 0.4394210102498998}, {"determining": "Max( ( ( MRS * CRS ) - DDR ),Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( MUR - MUR ) - ( CS * RMSe ) )", "obj1": 0.208, "obj2": 0.561339197535682}, {"determining": "Max( ( MDR - DDR ),Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( MUR - MUR ) - ( CS * RCSe ) )", "obj1": 0.262, "obj2": 0.5298103787228704}, {"determining": "Max( ( ( BR - Const ) * ( ( ( ( MRS - CRS ) * ( AMS - PN ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( Min( ( Const + ARS ) ,( AMS - FirstVNF_CPU ) ) / ( ( Const / ARS ) + ( MDR + RRS ) ) ) ) ),( Max( FirstVNF_Mem_Server,RRS ) + ( MRS / RRS ) ) )", "choosing": "( ( ( MUM - RCSe ) + ( RMSe / MUM ) ) * ( ( MLU + RCSe ) / ( DS * DS ) ) )", "obj1": 0.062, "obj2": 0.7550940491150763}, {"determining": "( ( ( ( MRS - CRS ) * ( AMS - PN ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( RRS - BR ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( ( ( ( MUM - RCSe ) + ( MUM - RCSe ) ) * ( ( MLU + RCSe ) / ( DS * DS ) ) ) / MUM ) / DS ) * RMSe ) )", "obj1": 0.542, "obj2": 0.3180576506120647}, {"determining": "Max( ( ( BR - Const ) * ( RRS - BR ) ),( Max( FirstVNF_Mem_Server,RRS ) + ( MRS / RRS ) ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( RMSe / MUM ) / DS ) * RMSe ) )", "obj1": 0.058, "obj2": 0.7642923479295062}, {"determining": "( ( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( ( ( RRSe / MUC ) - ( MUC / RCSe ) ) / ( ( CS / DS ) / ( MLU - CS ) ) ) - ( RCSe * ( ( ( RMSe + RRSe ) + MUC ) + DS ) ) )", "obj1": 0.09, "obj2": 0.7011054077386905}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) / ( CRS + ( FirstVNF_Mem * PN ) ) )", "choosing": "( ( ( ( RRSe / MUC ) - ( RCSe / MUC ) ) / ( ( CS / DS ) / ( MUR - CS ) ) ) - ( ( Min( DS ,RCSe ) * Min( MUM ,MUC ) ) * Min( ( MUR * CS ) ,( MLU * DS ) ) ) )", "obj1": 0.122, "obj2": 0.6879808095867638}, {"determining": "Min( Min( Const ,CRS ) ,Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "( Max( ( DS * MLU ),Min( DS ,MUC ) ) + ( ( RRSe / CS ) + Min( MUR ,RMSe ) ) )", "obj1": 0.41, "obj2": 0.4412843259843493}, {"determining": "( ( ( RRS / ( DDR / ACS ) ) + ( DDR + Max( CRS,BR ) ) ) - ( RRS * ( CRS + CRS ) ) )", "choosing": "Min( ( Max( Min( RMSe ,RMSe ),Max( RRSe,RCSe ) ) / Min( Max( MUR,RCSe ) ,( DS + MUC ) ) ) ,( Min( ( RRSe - MLU ) ,( DS - CS ) ) - ( Min( MLU ,RRSe ) - ( DS + RCSe ) ) ) )", "obj1": 0.296, "obj2": 0.5212834603298429}, {"determining": "( ( ( RRS / ( ( AMS + CRS ) / ACS ) ) + ( DDR + Max( CRS,BR ) ) ) - ( RRS * ( CRS + ARS ) ) )", "choosing": "Min( ( Max( Min( RMSe ,RMSe ),( RRSe + RCSe ) ) / Min( Min( RMSe ,( RRSe + RRSe ) ) ,RRSe ) ) ,( Min( ( RRSe - MLU ) ,( DS - CS ) ) - ( Min( MLU ,RRSe ) - ( DS + RCSe ) ) ) )", "obj1": 0.296, "obj2": 0.5212834603298429}, {"determining": "( Max( PN,CRS ) - ( Min( PN ,AMS ) - ( DDR + FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,DS ) * ( RMSe / MUC ) )", "obj1": 0.484, "obj2": 0.38414923126969763}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server - ( ARS - Min( ( Const - CRS ) ,( MDR + MRS ) ) ) ) )", "choosing": "( Min( Max( MUC,RRSe ) ,Max( MUM,RMSe ) ) * ( MUC - ( CS + ( ( MLU * MUC ) + DS ) ) ) )", "obj1": 0.168, "obj2": 0.627028649504976}, {"determining": "( ( Max( ( FirstVNF_CPU * FirstVNF_CPU ),Min( FirstVNF_RAM ,FirstVNF_Mem ) ) + MDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( ( MUR - RCSe ) * Max( MUC,MUM ) ) - ( ( CS - MUR ) * MLU ) )", "obj1": 0.312, "obj2": 0.5017339040859766}, {"determining": "Max( Max( FirstVNF_Mem,( DDR - ( Min( ( Min( ( AMS * ACS ) ,MRS ) + ACS ) ,ACS ) - Min( Min( PN ,AMS ) ,FirstVNF_CPU ) ) ) ),( FirstVNF_CPU * ( ACS * AMS ) ) )", "choosing": "Min( ( MLU + Max( RMSe,( Max( RCSe,( Max( Min( MUM ,RCSe ),( MUR - RRSe ) ) * DS ) ) + RRSe ) ) ) ,( ( ( MUC / Min( ( ( ( RCSe + MLU ) * ( MUC * RRSe ) ) - RRSe ) ,( Min( MUC ,RRSe ) * ( Max( MUC,RRSe ) - MUC ) ) ) ) * Max( MUC,RMSe ) ) - ( ( CS - MUR ) * Max( Min( MUM ,( Max( ( MUR + DS ),Max( RCSe,MUR ) ) - MLU ) ),RMSe ) ) ) )", "obj1": 0.322, "obj2": 0.4862168949718407}, {"determining": "( ( AMS + MDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( ( MUR - RCSe ) * Max( MUC,MUM ) ) - ( ( CS - MUR ) * Max( RMSe,RMSe ) ) )", "obj1": 0.32, "obj2": 0.4910755186139643}, {"determining": "( ( ( Max( RRS,PN ) / ( DDR / ACS ) ) + ( DDR + Max( CRS,BR ) ) ) - ( RRS * ( CRS + CRS ) ) )", "choosing": "Min( ( Max( Min( RMSe ,RMSe ),Max( RRSe,RCSe ) ) / Min( Max( MUR,RCSe ) ,( DS + MUC ) ) ) ,( Min( ( RRSe - MLU ) ,( DS - CS ) ) - ( ( Max( RMSe,MUC ) + ( DS / CS ) ) - ( DS + RCSe ) ) ) )", "obj1": 0.392, "obj2": 0.44329237088596696}, {"determining": "( ( DDR / ACS ) + Max( ( FirstVNF_Mem * ACS ),Max( RRS,PN ) ) )", "choosing": "Max( ( ( ( DS - CS ) - RCSe ) - ( RCSe - MUC ) ),( Max( RMSe,MUC ) + ( DS / CS ) ) )", "obj1": 0.508, "obj2": 0.3732972821548703}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,RRS ) + Max( ( FirstVNF_Mem * ACS ),Max( RRS,PN ) ) )", "choosing": "Max( ( ( MUC - RCSe ) - ( RCSe - MUC ) ),( Max( RMSe,MUC ) + ( DS / CS ) ) )", "obj1": 0.53, "obj2": 0.3599898763599443}, {"determining": "( ( FirstVNF_RAM_Server / MDR ) / ( CRS + ( FirstVNF_Mem * PN ) ) )", "choosing": "( ( ( ( RRSe / MUC ) - ( RCSe / MUC ) ) / ( ( CS / DS ) / ( MUR - CS ) ) ) - ( ( Min( DS ,RCSe ) * Min( MUM ,MUC ) ) * Min( ( MUR * CS ) ,( MLU * DS ) ) ) )", "obj1": 0.074, "obj2": 0.7367539691994985}, {"determining": "Max( ( FirstVNF_RAM_Server / RRS ),( ARS - Max( ( FirstVNF_RAM_Server + MDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( MUR ,( ( MUM / ( DS * MUM ) ) - RRSe ) ) ) - Min( ( MUC + DS ) ,( MUC + DS ) ) )", "obj1": 0.154, "obj2": 0.6671761053716575}, {"determining": "( ( FirstVNF_Mem_Server / BR ) / ( PN / FirstVNF_CPU ) )", "choosing": "( ( DS + DS ) + Max( MUR,( RCSe - MUR ) ) )", "obj1": 0.54, "obj2": 0.35591282991136997}], "3": [{"determining": "( Max( PN,CRS ) - ( MDR / ARS ) )", "choosing": "( Max( RRSe,MUR ) * ( RMSe / MUC ) )", "obj1": 0.768, "obj2": 0.08980791884731523}, {"determining": "( ( ( CRS + FirstVNF_CPU ) / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "( ( RRSe + MLU ) / Max( MUR,Max( MLU,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,MDR ) * ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MUR ) * ( DS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( RMSe * MUR ) * ( MLU - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Min( FirstVNF_RAM_Server ,AMS ) ) - ( ARS / BR ) )", "choosing": "( Min( ( MUM + RRSe ) ,( CS / RRSe ) ) + ( ( RRSe + CS ) / ( DS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( ( MRS + ( PN / FirstVNF_Mem_Server ) ) * ( DDR + MDR ) ) )", "choosing": "( ( ( MLU - MUM ) / Min( RMSe ,CS ) ) / ( RRSe - ( ( ( ( ( MUR * MUR ) + MUM ) - RRSe ) * RCSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( RRS - FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM,CRS ) ,( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / RRSe ),( ( MUC - DS ) * ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + MDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( ( MUR - RCSe ) * Max( MUC,MUM ) ) - ( ( CS - MUR ) * Max( RMSe,RMSe ) ) )", "obj1": 0.334, "obj2": 0.4781140036766235}, {"determining": "( Max( ( FirstVNF_CPU_Server / Const ),( Min( Const ,( ( BR - FirstVNF_CPU_Server ) / ( ( ARS + ( DDR * RRS ) ) + BR ) ) ) / ( FirstVNF_Mem_Server - RRS ) ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( CRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / Max( ( Min( RRSe ,MUC ) + RCSe ),RRSe ) ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + BR ) ) + ( Max( DDR,ARS ) * ( AMS / FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUR ,DS ) - ( MUM + CS ) ) - Min( ( MUC - DS ) ,Min( MUR ,DS ) ) )", "obj1": 0.222, "obj2": 0.5576473366286285}, {"determining": "Max( ( ( PN * FirstVNF_CPU ) - ( MDR - FirstVNF_CPU_Server ) ),( ( AMS * CRS ) - ( ARS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.372, "obj2": 0.460467334185349}, {"determining": "( ( ( ARS - FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - MDR ) ) - ( ( BR + Const ) / Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RCSe ) / Min( RMSe ,RRSe ) ) - ( Min( MLU ,RRSe ) * ( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR * FirstVNF_RAM ) ,( MRS - PN ) )", "choosing": "( ( MUC * Min( MLU ,MUR ) ) + Min( Max( MUR,RRSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / MDR ) + ( CRS / RRS ) ) + Min( ( Max( BR,Max( FirstVNF_Mem_Server,( RRS * FirstVNF_Mem_Server ) ) ) - ARS ) ,RRS ) ) - ( ( ( FirstVNF_Mem + AMS ) / ( MDR / FirstVNF_RAM_Server ) ) / ( Min( BR ,FirstVNF_CPU_Server ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUC ,RMSe ) * RCSe ) / ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.244, "obj2": 0.5358203488068761}, {"determining": "Min( ( ( ACS - FirstVNF_Mem_Server ) - FirstVNF_RAM ) ,Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + AMS ) ) ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Max( ( ( MUM / RCSe ) + Min( RRSe ,RRSe ) ),( Max( RRSe,RCSe ) + ( MUR - RRSe ) ) ) / Min( ( ( MLU / CS ) + ( RCSe / MLU ) ) ,( Min( RCSe ,RRSe ) * ( RRSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - ARS ) - ( RRS + FirstVNF_RAM ) ) * ( ( MRS * FirstVNF_Mem ) / Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - ( AMS - PN ) ) ,Max( ( BR / Max( ( ( MRS * Max( MDR,ACS ) ) * CRS ),BR ) ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( ( MUR - RCSe ) + Max( ( RRSe + RMSe ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU ) - ( Min( DDR ,ACS ) + MRS ) )", "choosing": "( ( Min( DS ,MUR ) - MUC ) / ( Min( MUM ,( RCSe / MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - CRS ) * ( AMS - PN ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( Min( ( Const + ARS ) ,( AMS - FirstVNF_CPU ) ) / ( ( Const / ARS ) + ( MDR + RRS ) ) ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( RMSe / MUM ) / DS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * ( DDR / MRS ) ) * ( FirstVNF_Mem_Server * BR ) ) - Min( ( RRS - Min( BR ,RRS ) ) ,Min( Const ,FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_Mem / AMS ) * ( AMS * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) / Min( ( CRS + FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MUR / MLU ) * Max( RRSe,DS ) ) ,( MUC + CS ) ) - ( ( Min( ( ( MUM / RRSe ) * Min( DS ,( RMSe - DS ) ) ) ,RCSe ) - Max( MUC,RCSe ) ) * Max( Max( CS,DS ),Max( MUC,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ACS,AMS ),Min( MDR ,FirstVNF_RAM ) ) - ( Max( MRS,MDR ) - ( ACS + MRS ) ) ) ,( FirstVNF_CPU_Server + ACS ) )", "choosing": "Max( Max( Max( Max( RMSe,( MUM + Min( MUM ,MLU ) ) ),( MUM * CS ) ),Max( ( Min( MUM ,MUM ) + RRSe ),( RCSe * RMSe ) ) ),Min( MUM ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) - ( DDR + FirstVNF_RAM ) )", "choosing": "Max( ( Max( Max( RMSe,CS ),( MUM - RCSe ) ) + ( Min( DS ,DS ) * ( RMSe / RCSe ) ) ),( ( ( MUC / MUM ) - Max( MUM,CS ) ) / ( ( MUR * CS ) + ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - ARS ) - ( RRS + FirstVNF_RAM ) ) * ( ( MRS * FirstVNF_Mem ) / Min( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) - ARS ) ,FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( AMS - PN ) ) ,Max( ( Const / FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RRSe ,( Max( MUM,MLU ) + Max( RMSe,Max( ( RRSe / Min( RMSe ,Min( MUM ,MUC ) ) ),( DS - MUM ) ) ) ) ) + ( MUM * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR * FirstVNF_RAM ) ,( MRS - PN ) ) - ( ARS / BR ) )", "choosing": "( Min( ( MUM + RRSe ) ,( ( MUC * Min( MLU ,MUR ) ) + Min( Max( MUR,RRSe ) ,RRSe ) ) ) + ( ( RRSe + CS ) / ( DS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - PN ) ,( RRS / FirstVNF_RAM ) )", "choosing": "( ( MUC * Min( MUM ,MUR ) ) + ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,AMS ) / ARS ) - Max( CRS,PN ) )", "choosing": "( ( RCSe * MUC ) + ( ( RCSe + ( ( MUM * MUC ) * ( ( ( ( MUC * RMSe ) + RRSe ) + ( Max( MLU,CS ) - MUC ) ) * ( ( ( CS + RRSe ) + MUC ) - ( MUC + ( MUC - RRSe ) ) ) ) ) ) / ( DS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( ( ARS * ( FirstVNF_RAM - FirstVNF_CPU ) ) / ( RRS - FirstVNF_RAM ) ) ) - RRS ) / Max( ARS,FirstVNF_RAM_Server ) ) / Min( ( RRS - FirstVNF_RAM ) ,( Const / RRS ) ) ) ,( Min( Max( DDR,FirstVNF_CPU ) ,( MRS / AMS ) ) - Max( Min( FirstVNF_Mem ,MRS ),FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( CS,( CS - RRSe ) ) - Min( RCSe ,CS ) ) / ( Max( RMSe,MUC ) - ( MUR / RCSe ) ) ) / Max( ( ( DS / RCSe ) + Max( MUC,RRSe ) ),Max( ( CS * MLU ),( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS * FirstVNF_RAM ) / Max( ARS,FirstVNF_RAM_Server ) ) / ( Min( MRS ,Max( MRS,MRS ) ) - AMS ) ) ,Min( ( ( BR - FirstVNF_RAM ) / ( RRS + FirstVNF_RAM_Server ) ) ,( Min( CRS ,MRS ) / ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "( Max( ( MUC * MLU ),Min( MUC ,( MUM + CS ) ) ) * ( Max( RRSe,MUM ) * ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / ( ARS * FirstVNF_RAM_Server ) ) / Max( CRS,BR ) ) ,( FirstVNF_CPU_Server * ARS ) )", "choosing": "( ( ( Max( RMSe,CS ) - Min( RCSe ,CS ) ) / Max( ( MUR - RRSe ),( MUM * ( ( MUR - ( Min( RMSe ,RRSe ) * ( MLU + RMSe ) ) ) + CS ) ) ) ) / Max( ( ( CS * MLU ) - ( MUC - RCSe ) ),( ( DS / RCSe ) + Max( MUC,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ACS,FirstVNF_RAM ),( MDR / FirstVNF_RAM ) ) - ( Max( MRS,MDR ) - ( MRS - FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) * ( FirstVNF_CPU_Server - AMS ) ) / ( ( FirstVNF_CPU_Server - RRS ) + ( FirstVNF_RAM - FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( RCSe ,MUM ) ,Min( DS ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - DDR ) - ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( Min( RRSe ,MLU ) * ( RCSe - RRSe ) )", "obj1": 0.472, "obj2": 0.4062126214523871}, {"determining": "Max( ( ( FirstVNF_CPU_Server + ( ( BR + Const ) + BR ) ) / FirstVNF_RAM ),( CRS / Const ) )", "choosing": "Min( ( ( MUC + MUM ) - MUC ) ,RCSe )", "obj1": 0.606, "obj2": 0.28781859254619796}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,MDR ) * ACS ),( FirstVNF_Mem_Server / ( Const + FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - CS ) ,RRSe ) * ( MLU * ( MUC * CS ) ) )", "obj1": 0.362, "obj2": 0.4713663815626233}, {"determining": "( Max( Max( ( Max( FirstVNF_RAM_Server,MDR ) * ACS ),( FirstVNF_Mem_Server / ( Const + FirstVNF_CPU ) ) ),Min( ( RRS / ACS ) ,Max( FirstVNF_Mem,DDR ) ) ) - ( ( Min( CRS ,MDR ) * Min( BR ,FirstVNF_Mem_Server ) ) + ( ( Min( ( MDR / FirstVNF_Mem_Server ) ,BR ) / CRS ) * ( MRS - Const ) ) ) )", "choosing": "( Min( ( MUR - CS ) ,MUR ) - Min( ( MUC - Max( RCSe,MUR ) ) ,Max( MLU,( MUC * MUM ) ) ) )", "obj1": 0.192, "obj2": 0.5946850137346277}, {"determining": "( ( ( ( ARS / ( FirstVNF_CPU_Server + ACS ) ) - Max( ( FirstVNF_RAM_Server * MRS ),( FirstVNF_RAM - ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem ) * ( BR - FirstVNF_RAM_Server ) )", "choosing": "( ( DS - ( ( MUC + DS ) * ( MUC - ( MUR + ( Max( ( RCSe / DS ),Min( DS ,DS ) ) - RCSe ) ) ) ) ) / ( DS - MLU ) )", "obj1": 0.448, "obj2": 0.41917356239093706}, {"determining": "( Max( Min( Const ,MRS ),( BR - ( MDR * BR ) ) ) / Min( ( Const * RRS ) ,( AMS - MRS ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.372, "obj2": 0.460467334185349}, {"determining": "Max( ( ( MRS * CRS ) - DDR ),Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( MUR - MUR ) - ( CS * RMSe ) )", "obj1": 0.208, "obj2": 0.561339197535682}, {"determining": "Max( ( ( BR - Const ) * ( ( ( ( MRS - CRS ) * ( AMS - PN ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( Min( ( Const + ARS ) ,( AMS - FirstVNF_CPU ) ) / ( ( Const / ARS ) + ( MDR + RRS ) ) ) ) ),( Max( FirstVNF_Mem_Server,RRS ) + ( MRS / RRS ) ) )", "choosing": "( ( ( MUM - RCSe ) + ( RMSe / MUM ) ) * ( ( MLU + RCSe ) / ( DS * DS ) ) )", "obj1": 0.062, "obj2": 0.7550940491150763}, {"determining": "( ( ( ( MRS - CRS ) * ( AMS - PN ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( RRS - BR ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( ( ( ( MUM - RCSe ) + ( MUM - RCSe ) ) * ( ( MLU + RCSe ) / ( DS * DS ) ) ) / MUM ) / DS ) * RMSe ) )", "obj1": 0.542, "obj2": 0.3180576506120647}, {"determining": "( ( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( ( ( RRSe / MUC ) - ( MUC / RCSe ) ) / ( ( CS / DS ) / ( MLU - CS ) ) ) - ( RCSe * ( ( ( RMSe + RRSe ) + MUC ) + DS ) ) )", "obj1": 0.09, "obj2": 0.7011054077386905}, {"determining": "( Max( PN,CRS ) - ( Min( PN ,AMS ) - ( DDR + FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,DS ) * ( RMSe / MUC ) )", "obj1": 0.484, "obj2": 0.38414923126969763}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server - ( ARS - Min( ( Const - CRS ) ,( MDR + MRS ) ) ) ) )", "choosing": "( Min( Max( MUC,RRSe ) ,Max( MUM,RMSe ) ) * ( MUC - ( CS + ( ( MLU * MUC ) + DS ) ) ) )", "obj1": 0.168, "obj2": 0.627028649504976}, {"determining": "Max( Max( FirstVNF_Mem,( DDR - ( Min( ( Min( ( AMS * ACS ) ,MRS ) + ACS ) ,ACS ) - Min( Min( PN ,AMS ) ,FirstVNF_CPU ) ) ) ),( FirstVNF_CPU * ( ACS * AMS ) ) )", "choosing": "Min( ( MLU + Max( RMSe,( Max( RCSe,( Max( Min( MUM ,RCSe ),( MUR - RRSe ) ) * DS ) ) + RRSe ) ) ) ,( ( ( MUC / Min( ( ( ( RCSe + MLU ) * ( MUC * RRSe ) ) - RRSe ) ,( Min( MUC ,RRSe ) * ( Max( MUC,RRSe ) - MUC ) ) ) ) * Max( MUC,RMSe ) ) - ( ( CS - MUR ) * Max( Min( MUM ,( Max( ( MUR + DS ),Max( RCSe,MUR ) ) - MLU ) ),RMSe ) ) ) )", "obj1": 0.322, "obj2": 0.4862168949718407}, {"determining": "( ( AMS + MDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( ( MUR - RCSe ) * Max( MUC,MUM ) ) - ( ( CS - MUR ) * Max( RMSe,RMSe ) ) )", "obj1": 0.32, "obj2": 0.4910755186139643}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU_Server ) ,RRS ) + Max( ( FirstVNF_Mem * ACS ),Max( RRS,PN ) ) )", "choosing": "Max( ( ( MUC - RCSe ) - ( RCSe - MUC ) ),( Max( RMSe,MUC ) + ( DS / CS ) ) )", "obj1": 0.53, "obj2": 0.3599898763599443}, {"determining": "( ( FirstVNF_Mem_Server / BR ) / ( PN / FirstVNF_CPU ) )", "choosing": "( ( DS + DS ) + Max( MUR,( RCSe - MUR ) ) )", "obj1": 0.54, "obj2": 0.35591282991136997}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + BR ) ) + ( Max( DDR,ARS ) * ( AMS / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUC - RCSe ) - ( RCSe - MUC ) ),( Max( RMSe,MUC ) + ( DS / CS ) ) )", "obj1": 0.516, "obj2": 0.3640002555769791}, {"determining": "( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem * PN ) ) )", "choosing": "( ( ( ( RRSe / MUC ) - CS ) / ( ( CS / DS ) / ( MUR - CS ) ) ) - ( ( Min( DS ,RCSe ) * Min( MUM ,MUC ) ) * Min( ( MUR * CS ) ,( MLU * DS ) ) ) )", "obj1": 0.13, "obj2": 0.6334203271181391}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.416, "obj2": 0.42460226966848724}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.416, "obj2": 0.42460226966848724}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.416, "obj2": 0.42460226966848724}, {"determining": "( ( ( Max( RRS,PN ) / ( DDR / ACS ) ) + ( DDR + Max( CRS,BR ) ) ) - ( RRS * ( CRS + ( FirstVNF_Mem * PN ) ) ) )", "choosing": "Min( ( Max( Min( RMSe ,RMSe ),Max( RRSe,RCSe ) ) / Min( Max( MUR,RCSe ) ,( DS + MUC ) ) ) ,( Min( ( RRSe - MLU ) ,( DS - CS ) ) - ( ( Max( RMSe,MUC ) + ( DS / CS ) ) - ( DS + RCSe ) ) ) )", "obj1": 0.376, "obj2": 0.45306580900890364}, {"determining": "( Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,RRS ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( MUC - RCSe ) - ( RCSe - MUC ) ),( Min( ( RMSe / MUM ) ,MUR ) * ( DS / CS ) ) )", "obj1": 0.486, "obj2": 0.3796217275573013}, {"determining": "( ( Max( Max( ACS,FirstVNF_RAM ),Min( MDR ,FirstVNF_RAM ) ) + ( DDR + Max( CRS,BR ) ) ) - ( RRS * ( CRS + CRS ) ) )", "choosing": "Min( ( Max( Min( RMSe ,RMSe ),Max( RRSe,RCSe ) ) / Min( Max( MUR,RCSe ) ,( DS + MUC ) ) ) ,( Min( ( Max( RMSe,( MUM + Min( MUM ,MLU ) ) ) - MLU ) ,( DS - CS ) ) - ( ( Max( RMSe,MUC ) + ( DS / CS ) ) - ( DS + RCSe ) ) ) )", "obj1": 0.392, "obj2": 0.4406608003796087}, {"determining": "Max( ( ( MRS * CRS ) - DDR ),Max( FirstVNF_RAM,AMS ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( MUR / MUR ),( MLU / CS ) ),RCSe ) )", "obj1": 0.25, "obj2": 0.5298722152517997}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( Const + RRS ),( ACS + FirstVNF_CPU ) ) ,Max( ( DDR * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "( ( MUR - MUR ) - ( CS * RMSe ) )", "obj1": 0.232, "obj2": 0.5489116129039653}, {"determining": "( ( PN / FirstVNF_CPU_Server ) + ( ARS / DDR ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.372, "obj2": 0.460467334185349}, {"determining": "( Max( Max( ( Max( FirstVNF_RAM_Server,MDR ) * ACS ),( FirstVNF_Mem_Server / ( Const + FirstVNF_CPU ) ) ),Min( ( RRS / ACS ) ,( FirstVNF_Mem + DDR ) ) ) - ( ( Min( CRS ,MDR ) * Min( BR ,FirstVNF_Mem_Server ) ) + ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUR - CS ) ,RRSe ) - Max( ( CS + MLU ),( ( Min( MUC ,RMSe ) * RCSe ) + DS ) ) )", "obj1": 0.204, "obj2": 0.5883739883665535}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server + BR ) - ( FirstVNF_Mem - AMS ) ) * ( BR / DDR ) ) ) ,Min( BR ,PN ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( MUR / MUR ),( MLU / CS ) ),RCSe ) )", "obj1": 0.244, "obj2": 0.5358203488068761}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.416, "obj2": 0.42460226966848724}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.256, "obj2": 0.5235296244077726}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.416, "obj2": 0.42460226966848724}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.256, "obj2": 0.5235296244077726}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.416, "obj2": 0.42460226966848724}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.256, "obj2": 0.5235296244077726}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.256, "obj2": 0.5235296244077726}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( ARS,FirstVNF_RAM_Server ) ) / Min( ( RRS - FirstVNF_RAM ) ,( Const / RRS ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_CPU * Max( FirstVNF_Mem_Server,ARS ) ) ) ,MDR ) )", "choosing": "( ( ( Max( CS,RMSe ) - Min( RCSe ,CS ) ) / Max( ( ( DS / MUC ) * Min( RMSe ,MUR ) ),MUR ) ) / Max( ( ( ( CS / DS ) / RCSe ) + Max( MUC,RRSe ) ),Max( ( CS * MLU ),( MUC - RCSe ) ) ) )", "obj1": 0.396, "obj2": 0.4308623019191335}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ( ( ( FirstVNF_CPU * ARS ) + AMS ) - ( FirstVNF_Mem - AMS ) ) * ( BR / DDR ) ) ) ,Min( BR ,PN ) )", "choosing": "Min( Min( RCSe ,MUM ) ,Min( DS ,MUC ) )", "obj1": 0.604, "obj2": 0.29321545894023926}, {"determining": "( ( ( ( MRS - CRS ) * ( AMS - ( ( AMS - BR ) + ( Const + MDR ) ) ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( RRS - BR ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( ( MUM - RCSe ) + ( RMSe / MUM ) ) * ( ( MLU + RCSe ) / ( DS * DS ) ) ) ),( ( ( ( ( ( MUM - RCSe ) + ( MUM - RCSe ) ) * ( ( MLU + RCSe ) / ( DS * DS ) ) ) / MUM ) / DS ) * RMSe ) )", "obj1": 0.068, "obj2": 0.7267980424747564}, {"determining": "( ( RRS - BR ) - ( ( ( MRS - CRS ) * ( AMS - ( ( DDR / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) ) * ( ( AMS - BR ) + ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( ( ( CS * RMSe ) * ( ( RCSe + Max( CS,CS ) ) / ( DS * DS ) ) ) / DS ) / DS ) * RMSe ) )", "obj1": 0.544, "obj2": 0.314459476138041}, {"determining": "( ( AMS + MDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( ( MUR - RCSe ) * Max( MUC,MUM ) ) - ( ( CS - MUR ) * Max( RMSe,RMSe ) ) )", "obj1": 0.334, "obj2": 0.4781140036766235}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.416, "obj2": 0.42460226966848724}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.416, "obj2": 0.42460226966848724}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.416, "obj2": 0.42460226966848724}, {"determining": "Min( Min( BR ,PN ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.416, "obj2": 0.42460226966848724}, {"determining": "( Max( Max( ( Max( FirstVNF_RAM_Server,Min( ( RRS - FirstVNF_RAM ) ,( Const / RRS ) ) ) * ACS ),( FirstVNF_Mem_Server / ( Const + FirstVNF_CPU ) ) ),Min( ( RRS / ACS ) ,( FirstVNF_Mem + DDR ) ) ) - ( ( Min( CRS ,MDR ) * Min( BR ,FirstVNF_Mem_Server ) ) + ( ( Const / CRS ) * ( MRS - Const ) ) ) )", "choosing": "( Min( ( MUR - CS ) ,RRSe ) - ( DS / RCSe ) )", "obj1": 0.17, "obj2": 0.6250535238954819}, {"determining": "Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR + ( AMS * Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - MUM ) - ( RCSe + CS ) )", "obj1": 0.24, "obj2": 0.5418591870397291}, {"determining": "( ( FirstVNF_Mem_Server / BR ) / ( PN / FirstVNF_CPU ) )", "choosing": "( ( DS + DS ) + Max( MUR,( RCSe - MUR ) ) )", "obj1": 0.54, "obj2": 0.35591282991136997}, {"determining": "( ( ( CRS + FirstVNF_CPU ) / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "( ( ( MUR - RCSe ) * Max( MUC,MUM ) ) - ( ( CS - MUR ) * Max( RMSe,RMSe ) ) )", "obj1": 0.314, "obj2": 0.4912041275031408}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( ARS,FirstVNF_RAM_Server ) ) / Min( ( RRS - FirstVNF_RAM ) ,( Const / RRS ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_CPU * Max( FirstVNF_Mem_Server,ARS ) ) ) ,( ( BR - MRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( ( Max( MUM,MLU ) + Max( RMSe,MLU ) ) / Max( ( ( DS / RCSe ) + Max( MUC,RRSe ) ),Max( ( CS * MLU ),( MUC - RCSe ) ) ) )", "obj1": 0.488, "obj2": 0.36600007415704017}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( ARS,FirstVNF_RAM_Server ) ) / Min( ( RRS - FirstVNF_RAM ) ,( Const / RRS ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( FirstVNF_CPU / MDR ) ,MRS ) / ( ( DDR + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) - Min( RCSe ,CS ) ) / ( ( DS + MUC ) - RCSe ) ) / Max( ( ( DS / RCSe ) + Max( MUC,RRSe ) ),Max( ( CS * MLU ),( Min( MUM ,RCSe ) - RCSe ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Max( Max( Max( MRS,ARS ),( PN - ARS ) ),Const )", "choosing": "( MUM / ( ( RCSe * MUC ) + ( ( MUC + MUC ) / CS ) ) )", "obj1": 0.312, "obj2": 0.49234350539286453}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) / ( DDR + Max( CRS,BR ) ) )", "choosing": "( MLU * ( MUC - ( CS + ( ( MLU * MUC ) + DS ) ) ) )", "obj1": 0.094, "obj2": 0.6664141050464274}, {"determining": "( ( ( DDR + ( CRS + BR ) ) + Min( ( MDR + AMS ) ,ACS ) ) - ( ACS + Max( Min( Const ,( FirstVNF_RAM_Server - MDR ) ),Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM * Min( FirstVNF_Mem ,PN ) ) ) ) ) )", "choosing": "( Min( Max( MUM,RMSe ) ,( MLU * RRSe ) ) * Min( RMSe ,( RCSe / CS ) ) )", "obj1": 0.168, "obj2": 0.627028649504976}, {"determining": "( ( ARS / ( FirstVNF_CPU * FirstVNF_Mem ) ) - ( DDR - MDR ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RRSe ) ) + ( Max( MUM,Max( MLU,( Min( ( Max( DS,MUC ) - MLU ) ,( RMSe / MLU ) ) + MUC ) ) ) - Max( Min( MUM ,( Min( DS ,MUM ) + ( RRSe - MUM ) ) ),MUC ) ) )", "obj1": 0.61, "obj2": 0.2835722736268456}, {"determining": "Max( ( Const / FirstVNF_RAM ),( CRS / Const ) )", "choosing": "Min( RCSe ,Min( DS ,MUC ) )", "obj1": 0.606, "obj2": 0.28781859254619796}, {"determining": "( ( FirstVNF_Mem - DDR ) - ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( ( DS - ( ( MUC + DS ) * ( MUC - ( MUR + ( Max( ( RCSe / DS ),Min( DS ,DS ) ) - RCSe ) ) ) ) ) / ( DS - MLU ) )", "obj1": 0.504, "obj2": 0.36417312444861194}, {"determining": "Max( ( MDR - DDR ),Max( FirstVNF_RAM,( Min( ( ( MRS / DDR ) + AMS ) ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server - ( ARS - Min( ( Const - CRS ) ,( RRS + MRS ) ) ) ) ) ) )", "choosing": "( Max( MUM,( ( MUC / Min( RMSe ,CS ) ) / RCSe ) ) - ( CS * RCSe ) )", "obj1": 0.286, "obj2": 0.5049982988109468}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server - ( Max( ( MDR - DDR ),Max( FirstVNF_RAM,AMS ) ) - Min( ( Const - CRS ) ,( MDR + MRS ) ) ) ) )", "choosing": "( Min( Max( MUC,RRSe ) ,Max( MUM,RMSe ) ) * ( ( MUR - MUR ) - ( CS + ( ( MLU * MUC ) + DS ) ) ) )", "obj1": 0.188, "obj2": 0.6099366546535554}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server - ( ARS - Min( ( Const - CRS ) ,( MDR + MRS ) ) ) ) )", "choosing": "( Min( Max( MUC,RRSe ) ,Max( MUM,RMSe ) ) * ( MUC - ( CS + ( ( MLU * MUC ) + DS ) ) ) )", "obj1": 0.168, "obj2": 0.627028649504976}], "4": [{"determining": "( Max( PN,CRS ) - ( MDR / ARS ) )", "choosing": "( Max( RRSe,MUR ) * ( RMSe / MUC ) )", "obj1": 0.768, "obj2": 0.08980791884731523}, {"determining": "( ( ( CRS + FirstVNF_CPU ) / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "( ( RRSe + MLU ) / Max( MUR,Max( MLU,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,MDR ) * ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - MUR ) * ( DS + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server + BR ) )", "choosing": "( ( RMSe * MUR ) * ( MLU - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Min( FirstVNF_RAM_Server ,AMS ) ) - ( ARS / BR ) )", "choosing": "( Min( ( MUM + RRSe ) ,( CS / RRSe ) ) + ( ( RRSe + CS ) / ( DS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( ( MRS + ( PN / FirstVNF_Mem_Server ) ) * ( DDR + MDR ) ) )", "choosing": "( ( ( MLU - MUM ) / Min( RMSe ,CS ) ) / ( RRSe - ( ( ( ( ( MUR * MUR ) + MUM ) - RRSe ) * RCSe ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( RRS - FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM,CRS ) ,( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / RRSe ),( ( MUC - DS ) * ( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server / Const ),( Min( Const ,( ( BR - FirstVNF_CPU_Server ) / ( ( ARS + ( DDR * RRS ) ) + BR ) ) ) / ( FirstVNF_Mem_Server - RRS ) ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( CRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / Max( ( Min( RRSe ,MUC ) + RCSe ),RRSe ) ) / ( RRSe + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + BR ) ) + ( Max( DDR,ARS ) * ( AMS / FirstVNF_RAM ) ) )", "choosing": "( ( Min( MUR ,DS ) - ( MUM + CS ) ) - Min( ( MUC - DS ) ,Min( MUR ,DS ) ) )", "obj1": 0.222, "obj2": 0.5576473366286285}, {"determining": "Max( ( ( PN * FirstVNF_CPU ) - ( MDR - FirstVNF_CPU_Server ) ),( ( AMS * CRS ) - ( ARS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.372, "obj2": 0.460467334185349}, {"determining": "( ( ( ARS - FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server - MDR ) ) - ( ( BR + Const ) / Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS + RCSe ) / Min( RMSe ,RRSe ) ) - ( Min( MLU ,RRSe ) * ( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR * FirstVNF_RAM ) ,( MRS - PN ) )", "choosing": "( ( MUC * Min( MLU ,MUR ) ) + Min( Max( MUR,RRSe ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / MDR ) + ( CRS / RRS ) ) + Min( ( Max( BR,Max( FirstVNF_Mem_Server,( RRS * FirstVNF_Mem_Server ) ) ) - ARS ) ,RRS ) ) - ( ( ( FirstVNF_Mem + AMS ) / ( MDR / FirstVNF_RAM_Server ) ) / ( Min( BR ,FirstVNF_CPU_Server ) * ( ARS / FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( MUC ,RMSe ) * RCSe ) / ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - FirstVNF_Mem_Server ) - FirstVNF_RAM ) ,Min( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server + AMS ) ) ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Max( ( ( MUM / RCSe ) + Min( RRSe ,RRSe ) ),( Max( RRSe,RCSe ) + ( MUR - RRSe ) ) ) / Min( ( ( MLU / CS ) + ( RCSe / MLU ) ) ,( Min( RCSe ,RRSe ) * ( RRSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - ARS ) - ( RRS + FirstVNF_RAM ) ) * ( ( MRS * FirstVNF_Mem ) / Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - ( AMS - PN ) ) ,Max( ( BR / Max( ( ( MRS * Max( MDR,ACS ) ) * CRS ),BR ) ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( ( MUR - RCSe ) + Max( ( RRSe + RMSe ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU ) - ( Min( DDR ,ACS ) + MRS ) )", "choosing": "( ( Min( DS ,MUR ) - MUC ) / ( Min( MUM ,( RCSe / MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - CRS ) * ( AMS - PN ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( Min( ( Const + ARS ) ,( AMS - FirstVNF_CPU ) ) / ( ( Const / ARS ) + ( MDR + RRS ) ) ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( RMSe / MUM ) / DS ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * ( DDR / MRS ) ) * ( FirstVNF_Mem_Server * BR ) ) - Min( ( RRS - Min( BR ,RRS ) ) ,Min( Const ,FirstVNF_RAM ) ) ) / ( ( ( FirstVNF_Mem / AMS ) * ( AMS * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) / Min( ( CRS + FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( MUR / MLU ) * Max( RRSe,DS ) ) ,( MUC + CS ) ) - ( ( Min( ( ( MUM / RRSe ) * Min( DS ,( RMSe - DS ) ) ) ,RCSe ) - Max( MUC,RCSe ) ) * Max( Max( CS,DS ),Max( MUC,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + ( ( BR + Const ) + BR ) ) / FirstVNF_RAM ),( CRS / Const ) )", "choosing": "Min( ( ( MUC + MUM ) - MUC ) ,RCSe )", "obj1": 0.606, "obj2": 0.28781859254619796}, {"determining": "( Max( Min( Const ,MRS ),( BR - ( MDR * BR ) ) ) / Min( ( Const * RRS ) ,( AMS - MRS ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.372, "obj2": 0.460467334185349}, {"determining": "Max( ( ( MRS * CRS ) - DDR ),Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( MUR - MUR ) - ( CS * RMSe ) )", "obj1": 0.208, "obj2": 0.561339197535682}, {"determining": "( ( ( ( MRS - CRS ) * ( AMS - PN ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( RRS - BR ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( ( ( ( MUM - RCSe ) + ( MUM - RCSe ) ) * ( ( MLU + RCSe ) / ( DS * DS ) ) ) / MUM ) / DS ) * RMSe ) )", "obj1": 0.542, "obj2": 0.3180576506120647}, {"determining": "( ( FirstVNF_CPU_Server + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) / Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( ( ( RRSe / MUC ) - ( MUC / RCSe ) ) / ( ( CS / DS ) / ( MLU - CS ) ) ) - ( RCSe * ( ( ( RMSe + RRSe ) + MUC ) + DS ) ) )", "obj1": 0.09, "obj2": 0.7011054077386905}, {"determining": "Max( Max( FirstVNF_Mem,( DDR - ( Min( ( Min( ( AMS * ACS ) ,MRS ) + ACS ) ,ACS ) - Min( Min( PN ,AMS ) ,FirstVNF_CPU ) ) ) ),( FirstVNF_CPU * ( ACS * AMS ) ) )", "choosing": "Min( ( MLU + Max( RMSe,( Max( RCSe,( Max( Min( MUM ,RCSe ),( MUR - RRSe ) ) * DS ) ) + RRSe ) ) ) ,( ( ( MUC / Min( ( ( ( RCSe + MLU ) * ( MUC * RRSe ) ) - RRSe ) ,( Min( MUC ,RRSe ) * ( Max( MUC,RRSe ) - MUC ) ) ) ) * Max( MUC,RMSe ) ) - ( ( CS - MUR ) * Max( Min( MUM ,( Max( ( MUR + DS ),Max( RCSe,MUR ) ) - MLU ) ),RMSe ) ) ) )", "obj1": 0.322, "obj2": 0.4862168949718407}, {"determining": "( FirstVNF_Mem / ( CRS + ( FirstVNF_Mem * PN ) ) )", "choosing": "( ( ( ( RRSe / MUC ) - CS ) / ( ( CS / DS ) / ( MUR - CS ) ) ) - ( ( Min( DS ,RCSe ) * Min( MUM ,MUC ) ) * Min( ( MUR * CS ) ,( MLU * DS ) ) ) )", "obj1": 0.13, "obj2": 0.6334203271181391}, {"determining": "( ( ( Max( RRS,PN ) / ( DDR / ACS ) ) + ( DDR + Max( CRS,BR ) ) ) - ( RRS * ( CRS + ( FirstVNF_Mem * PN ) ) ) )", "choosing": "Min( ( Max( Min( RMSe ,RMSe ),Max( RRSe,RCSe ) ) / Min( Max( MUR,RCSe ) ,( DS + MUC ) ) ) ,( Min( ( RRSe - MLU ) ,( DS - CS ) ) - ( ( Max( RMSe,MUC ) + ( DS / CS ) ) - ( DS + RCSe ) ) ) )", "obj1": 0.376, "obj2": 0.45306580900890364}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( Const + RRS ),( ACS + FirstVNF_CPU ) ) ,Max( ( DDR * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "( ( MUR - MUR ) - ( CS * RMSe ) )", "obj1": 0.232, "obj2": 0.5489116129039653}, {"determining": "( ( PN / FirstVNF_CPU_Server ) + ( ARS / DDR ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.372, "obj2": 0.460467334185349}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.256, "obj2": 0.5235296244077726}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.256, "obj2": 0.5235296244077726}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.256, "obj2": 0.5235296244077726}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.256, "obj2": 0.5235296244077726}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( ARS,FirstVNF_RAM_Server ) ) / Min( ( RRS - FirstVNF_RAM ) ,( Const / RRS ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_CPU * Max( FirstVNF_Mem_Server,ARS ) ) ) ,MDR ) )", "choosing": "( ( ( Max( CS,RMSe ) - Min( RCSe ,CS ) ) / Max( ( ( DS / MUC ) * Min( RMSe ,MUR ) ),MUR ) ) / Max( ( ( ( CS / DS ) / RCSe ) + Max( MUC,RRSe ) ),Max( ( CS * MLU ),( MUC - RCSe ) ) ) )", "obj1": 0.396, "obj2": 0.4308623019191335}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ( ( ( FirstVNF_CPU * ARS ) + AMS ) - ( FirstVNF_Mem - AMS ) ) * ( BR / DDR ) ) ) ,Min( BR ,PN ) )", "choosing": "Min( Min( RCSe ,MUM ) ,Min( DS ,MUC ) )", "obj1": 0.604, "obj2": 0.29321545894023926}, {"determining": "( ( RRS - BR ) - ( ( ( MRS - CRS ) * ( AMS - ( ( DDR / ( CRS + FirstVNF_CPU_Server ) ) - MDR ) ) ) * ( ( AMS - BR ) + ( FirstVNF_RAM - RRS ) ) ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( ( ( CS * RMSe ) * ( ( RCSe + Max( CS,CS ) ) / ( DS * DS ) ) ) / DS ) / DS ) * RMSe ) )", "obj1": 0.544, "obj2": 0.314459476138041}, {"determining": "Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR + ( AMS * Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR - MUM ) - ( RCSe + CS ) )", "obj1": 0.24, "obj2": 0.5418591870397291}, {"determining": "( ( ( CRS + FirstVNF_CPU ) / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "( ( ( MUR - RCSe ) * Max( MUC,MUM ) ) - ( ( CS - MUR ) * Max( RMSe,RMSe ) ) )", "obj1": 0.314, "obj2": 0.4912041275031408}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( MRS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( AMS / FirstVNF_CPU ) ,MRS ) / ( ( DDR + CRS ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( Min( ( RMSe / RCSe ) ,( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( RRSe,MUC ) ) * ( CS / ( MLU - ( RRSe + Min( Min( ( MLU * MUR ) ,RMSe ) ,Min( MUM ,MUC ) ) ) ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( ARS,FirstVNF_RAM_Server ) ) / Min( ( RRS - FirstVNF_RAM ) ,( Const / RRS ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( FirstVNF_CPU / MDR ) ,MRS ) / ( ( DDR + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) - Min( RCSe ,CS ) ) / ( ( DS + MUC ) - RCSe ) ) / Max( ( ( DS / RCSe ) + Max( MUC,RRSe ) ),Max( ( CS * MLU ),( Min( MUM ,RCSe ) - RCSe ) ) ) )", "obj1": 0.05, "obj2": 0.755509600309784}, {"determining": "Max( Max( Max( MRS,ARS ),( PN - ARS ) ),Const )", "choosing": "( MUM / ( ( RCSe * MUC ) + ( ( MUC + MUC ) / CS ) ) )", "obj1": 0.312, "obj2": 0.49234350539286453}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) / ( DDR + Max( CRS,BR ) ) )", "choosing": "( MLU * ( MUC - ( CS + ( ( MLU * MUC ) + DS ) ) ) )", "obj1": 0.094, "obj2": 0.6664141050464274}, {"determining": "( ( ARS / ( FirstVNF_CPU * FirstVNF_Mem ) ) - ( DDR - MDR ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RRSe ) ) + ( Max( MUM,Max( MLU,( Min( ( Max( DS,MUC ) - MLU ) ,( RMSe / MLU ) ) + MUC ) ) ) - Max( Min( MUM ,( Min( DS ,MUM ) + ( RRSe - MUM ) ) ),MUC ) ) )", "obj1": 0.61, "obj2": 0.2835722736268456}, {"determining": "Max( ( Const / FirstVNF_RAM ),( CRS / Const ) )", "choosing": "Min( RCSe ,Min( DS ,MUC ) )", "obj1": 0.606, "obj2": 0.28781859254619796}, {"determining": "Min( Min( ( Const + ARS ) ,PN ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR - Min( CS ,Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( RMSe / MUM ) / DS ) * RMSe ) ) ) ) + ( DS / RCSe ) )", "obj1": 0.43, "obj2": 0.41757612076868067}, {"determining": "Min( Min( BR ,PN ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.406, "obj2": 0.4202421263338905}, {"determining": "Min( Min( BR ,PN ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.384, "obj2": 0.4369187670338573}, {"determining": "Max( ( ( MRS * CRS ) - DDR ),Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( ( ( CS + RMSe ) - Min( RCSe ,CS ) ) / ( ( DS + MUC ) - RCSe ) ) / Max( ( ( DS / RCSe ) + Max( MUC,RRSe ) ),Max( ( CS * MLU ),( Min( MUM ,RCSe ) - RCSe ) ) ) )", "obj1": 0.046, "obj2": 0.7581594492017544}, {"determining": "( Max( Min( Const ,MRS ),( BR - ( MDR * BR ) ) ) / Min( ( Const * RRS ) ,( AMS - MRS ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.372, "obj2": 0.460467334185349}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( ( Min( DS ,MUR ) - MUC ) / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.242, "obj2": 0.5301679323675818}, {"determining": "( Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,RRS ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( MUC - RCSe ) - ( RCSe - MUC ) ),( Min( ( RMSe / MUM ) ,MUR ) * ( DS / CS ) ) )", "obj1": 0.528, "obj2": 0.33498602617153156}, {"determining": "( Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,RRS ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( MUC - RCSe ) - ( RCSe - MUC ) ),( Min( ( RMSe / MUM ) ,MUR ) * ( DS / CS ) ) )", "obj1": 0.528, "obj2": 0.33498602617153156}, {"determining": "( Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,RRS ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( MUC - RCSe ) - ( RCSe - MUC ) ),( Min( ( RMSe / MUM ) ,MUR ) * ( DS / CS ) ) )", "obj1": 0.528, "obj2": 0.33498602617153156}, {"determining": "( Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,RRS ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( MUC - RCSe ) - ( RCSe - MUC ) ),( Min( ( RMSe / MUM ) ,MUR ) * ( DS / CS ) ) )", "obj1": 0.528, "obj2": 0.33498602617153156}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) / ( DDR + Max( Const,BR ) ) )", "choosing": "( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ) * ( MUC - ( CS + ( ( MLU * MUC ) + DS ) ) ) )", "obj1": 0.068, "obj2": 0.7021206773967689}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.256, "obj2": 0.5235296244077726}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) / ( DDR + Max( CRS,BR ) ) )", "choosing": "( MLU * ( MUC - ( CS + ( ( MLU * MUC ) + DS ) ) ) )", "obj1": 0.094, "obj2": 0.6664141050464274}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( MUR / MUR ),( MLU / CS ) ),RCSe ) )", "obj1": 0.256, "obj2": 0.5235296244077726}, {"determining": "( ( ( ( MRS - ARS ) - ( RRS + FirstVNF_RAM ) ) * ( ( MRS * FirstVNF_Mem ) / Min( FirstVNF_CPU ,AMS ) ) ) * Min( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - ( AMS - PN ) ) ,Max( ( BR / Max( ( ( MRS * Max( MDR,ACS ) ) * CRS ),BR ) ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "( ( MUR - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.458, "obj2": 0.3737634019026705}, {"determining": "Max( Max( MRS,Max( MRS,ARS ) ),Const )", "choosing": "( Max( MUM,RMSe ) - ( CS * RCSe ) )", "obj1": 0.238, "obj2": 0.5420695608005984}, {"determining": "Max( ( MDR - DDR ),Max( FirstVNF_RAM,( Min( RRS ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server - ( ARS - Min( ( Const - CRS ) ,( MDR + MRS ) ) ) ) ) ) )", "choosing": "( ( MUC + ( ( MUC + MUC ) / CS ) ) / CS )", "obj1": 0.328, "obj2": 0.47208343252357376}, {"determining": "Max( ( ( PN * FirstVNF_CPU ) - ( MDR - FirstVNF_CPU_Server ) ),( ( AMS * CRS ) - ( ARS - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.372, "obj2": 0.460467334185349}, {"determining": "Max( ( MDR - DDR ),Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( MUR - MUR ) - ( CS * RCSe ) )", "obj1": 0.254, "obj2": 0.5285230046168906}, {"determining": "Max( ( Const / FirstVNF_RAM ),( CRS / Const ) )", "choosing": "Min( RCSe ,Min( DS ,MUC ) )", "obj1": 0.606, "obj2": 0.28781859254619796}, {"determining": "( Max( Min( Const ,MRS ),( BR - ( MDR * BR ) ) ) / Min( ( Const * RRS ) ,( AMS - MRS ) ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.372, "obj2": 0.460467334185349}, {"determining": "Max( ( ( MRS * CRS ) - DDR ),Max( FirstVNF_RAM,AMS ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( MUR / MUR ),( MLU / CS ) ),RCSe ) )", "obj1": 0.244, "obj2": 0.5296679747804189}, {"determining": "Max( ( Const / ( Const + FirstVNF_CPU ) ),( CRS / Const ) )", "choosing": "Min( RCSe ,Min( ( MUR - CS ) ,MUC ) )", "obj1": 0.356, "obj2": 0.4638796178118175}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,MDR ) * ACS ),( Const / FirstVNF_RAM ) )", "choosing": "( Min( ( MUR - CS ) ,RRSe ) * Min( DS ,MUC ) )", "obj1": 0.452, "obj2": 0.3890894341842811}, {"determining": "Max( ( Const / FirstVNF_RAM ),( CRS / Const ) )", "choosing": "Min( RCSe ,Min( DS ,MUC ) )", "obj1": 0.606, "obj2": 0.28781859254619796}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( ARS,FirstVNF_RAM_Server ) ) / Min( ( RRS - FirstVNF_RAM ) ,( Const / RRS ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( MDR ,MRS ) / ( ( DDR + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) - Min( RCSe ,CS ) ) / ( ( DS + MUC ) - RCSe ) ) / Max( ( ( DS / RCSe ) + Max( MUC,RRSe ) ),Max( ( CS * MLU ),( Min( MUM ,Min( Max( MUC,RRSe ) ,Max( MUM,RMSe ) ) ) - RCSe ) ) ) )", "obj1": 0.062, "obj2": 0.7422768543627585}, {"determining": "( ( ( ( MRS - CRS ) * ( AMS - PN ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( RRS - BR ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( ( ( ( MUM - RCSe ) + ( MUM - RCSe ) ) * ( ( MLU + RCSe ) / ( DS * DS ) ) ) / MUM ) / DS ) * RMSe ) )", "obj1": 0.564, "obj2": 0.2989593513998757}, {"determining": "( ( AMS + Min( ( DDR * FirstVNF_RAM ) ,( MRS - PN ) ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( ( MUR - RCSe ) * Max( MUC,MUM ) ) - ( ( CS - MUR ) * Max( Min( MLU ,MUR ),RMSe ) ) )", "obj1": 0.348, "obj2": 0.46512631810022714}, {"determining": "( ( ( ( MRS - CRS ) * ( AMS - PN ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( RRS - BR ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( ( ( ( MUM - RCSe ) + ( MUM - RCSe ) ) * ( ( MLU + RCSe ) / ( DS * DS ) ) ) / MUM ) / DS ) * RMSe ) )", "obj1": 0.554, "obj2": 0.3038660784214437}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( ARS,FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_CPU_Server ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( FirstVNF_CPU / MDR ) ,MRS ) / ( ( DDR + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( ( ( Max( CS,RMSe ) - Min( RCSe ,CS ) ) / Max( ( ( DS / MUC ) * Min( RMSe ,MUR ) ),MUR ) ) / Max( ( ( ( CS / DS ) / RCSe ) + Max( MUC,RRSe ) ),Max( ( CS * MLU ),( MUC - RCSe ) ) ) )", "obj1": 0.438, "obj2": 0.397101285349014}, {"determining": "Max( ( ( FirstVNF_CPU_Server + ( ( BR + Const ) + BR ) ) / FirstVNF_RAM ),( CRS / Const ) )", "choosing": "( ( ( MUR - RCSe ) * Max( MUC,MUM ) ) - ( ( CS - MUR ) * Max( RMSe,RMSe ) ) )", "obj1": 0.316, "obj2": 0.4884558772011442}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( ARS,FirstVNF_RAM_Server ) ) / ( Min( FirstVNF_CPU_Server ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( FirstVNF_CPU / MDR ) ,MRS ) / ( ( DDR + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.256, "obj2": 0.5235296244077726}, {"determining": "( Max( Max( ( Max( FirstVNF_RAM_Server,Min( ( RRS - FirstVNF_RAM ) ,( Const / RRS ) ) ) * ACS ),( FirstVNF_Mem_Server / ( Const + FirstVNF_CPU ) ) ),Min( ( RRS / ACS ) ,( FirstVNF_Mem + DDR ) ) ) - Max( FirstVNF_RAM,CRS ) )", "choosing": "( Min( ( ( MUR / RRSe ) - CS ) ,RRSe ) - ( DS / RCSe ) )", "obj1": 0.19, "obj2": 0.5644134038619356}, {"determining": "( ( ( CRS + FirstVNF_CPU ) / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,MDR ) )", "choosing": "( ( ( MUR - RCSe ) * Max( MUC,MUM ) ) - ( ( CS - MUR ) * Max( RMSe,RMSe ) ) )", "obj1": 0.314, "obj2": 0.4912041275031408}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + Min( RRS ,RRS ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( RCSe,Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.258, "obj2": 0.5204038988488914}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "( ( ( RMSe / RCSe ) - ( DS * RMSe ) ) / ( ( ( DS / RCSe ) + Max( MUC,RRSe ) ) * Max( ( Min( MUM ,( ( MUM * MUM ) - CS ) ) - RCSe ),( CS * MLU ) ) ) )", "obj1": 0.168, "obj2": 0.6103238838964467}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( ARS,FirstVNF_RAM_Server ) ) / ( Min( RRS ,RRS ) * Min( ( BR / CRS ) ,( CRS / DDR ) ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( FirstVNF_CPU / AMS ) ,MRS ) / ( ( DDR + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.262, "obj2": 0.5108353683223071}, {"determining": "( ( ( RRS / ( DDR / ACS ) ) + ( Max( FirstVNF_RAM,AMS ) + Max( CRS,BR ) ) ) - ( RRS * ( CRS + CRS ) ) )", "choosing": "( ( CS * RCSe ) * ( MUC - ( CS + ( ( MLU * MUC ) + DS ) ) ) )", "obj1": 0.17, "obj2": 0.596970470542086}, {"determining": "Max( ( MDR - DDR ),Max( FirstVNF_RAM,AMS ) )", "choosing": "( Min( Max( MUC,RRSe ) ,Max( MUM,RMSe ) ) * ( MUC - ( CS + ( ( MLU * MUC ) + DS ) ) ) )", "obj1": 0.164, "obj2": 0.6120332654655343}, {"determining": "( ( ( RRS / ( DDR / ACS ) ) + ( DDR + Max( CRS,BR ) ) ) - ( RRS * ( CRS + CRS ) ) )", "choosing": "( ( MUR - MUR ) - ( CS * RCSe ) )", "obj1": 0.224, "obj2": 0.5517889167356893}, {"determining": "Min( Min( ( Min( ( BR / CRS ) ,( CRS / DDR ) ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( MUC / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.552, "obj2": 0.30819657250270904}, {"determining": "Min( Min( ( Max( FirstVNF_RAM_Server,ACS ) + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,( ( DDR * MRS ) + ( FirstVNF_CPU / Const ) ) ) ,Min( Max( ( FirstVNF_CPU_Server / ARS ),( ACS + FirstVNF_CPU ) ) ,Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),( ARS - Const ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( CS / Max( ( ( RRSe + CS ) / DS ),MUR ) ),( MLU / CS ) ),RCSe ) )", "obj1": 0.262, "obj2": 0.5108353683223071}, {"determining": "Min( ( ( ACS + AMS ) * Const ) ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server / ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.384, "obj2": 0.4369187670338573}, {"determining": "( ( ( ( MRS - CRS ) * ( AMS - PN ) ) * ( ( AMS - BR ) + ( Const + MDR ) ) ) - ( RRS - BR ) )", "choosing": "Max( Max( ( MUC * ( RRSe + MUM ) ),( ( RMSe / RCSe ) * MLU ) ),( ( ( ( ( ( MUM - RCSe ) + ( MUM - RCSe ) ) * ( ( MLU + RCSe ) / ( DS * DS ) ) ) / MUM ) / DS ) * RMSe ) )", "obj1": 0.542, "obj2": 0.3180576506120647}, {"determining": "( ( Max( Max( ACS,FirstVNF_RAM ),( MDR / FirstVNF_RAM ) ) / MDR ) / Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( ( ( RRSe / MUC ) - Min( Min( RCSe ,MUM ) ,Min( DS ,MUC ) ) ) / ( ( CS / DS ) / ( MUR - CS ) ) ) - ( RCSe * Min( ( MUR * CS ) ,( MLU * DS ) ) ) )", "obj1": 0.118, "obj2": 0.6583339459539896}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,MDR ) * ACS ),( FirstVNF_Mem_Server / ( Const + FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - CS ) ,RRSe ) - ( DS / RCSe ) )", "obj1": 0.162, "obj2": 0.6269271820489074}, {"determining": "( ( FirstVNF_Mem_Server / BR ) / ( PN / FirstVNF_CPU ) )", "choosing": "( ( Min( MUR ,RRSe ) - Min( CS ,RMSe ) ) + ( DS / RCSe ) )", "obj1": 0.38, "obj2": 0.44696489917810506}, {"determining": "Min( ( ( ( MRS - FirstVNF_RAM ) / Max( ARS,FirstVNF_RAM_Server ) ) / Min( ( RRS - FirstVNF_RAM ) ,( Const / RRS ) ) ) ,Min( ( Min( CRS ,MRS ) / ( FirstVNF_Mem_Server * Max( ( Min( ( FirstVNF_CPU / MDR ) ,MRS ) / ( ( DDR + FirstVNF_CPU_Server ) / FirstVNF_RAM ) ),( CRS + MRS ) ) ) ) ,( ( FirstVNF_RAM - BR ) / ( RRS + RRS ) ) ) )", "choosing": "( ( ( ( CS + RMSe ) - Min( RCSe ,CS ) ) / ( ( DS + MUC ) - RCSe ) ) / Max( ( ( DS / RCSe ) + Max( MUC,RRSe ) ),Max( ( CS * MLU ),( Min( MUM ,RCSe ) - RCSe ) ) ) )", "obj1": 0.056, "obj2": 0.7535736742517533}, {"determining": "( ( FirstVNF_Mem - DDR ) - ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( Max( Max( RCSe,CS ),( MUM + RRSe ) ) - Min( ( MUC * RCSe ) ,( RRSe * CS ) ) )", "obj1": 0.482, "obj2": 0.3601120705387467}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem_Server + BR ) - ( AMS - AMS ) ) * ( BR / DDR ) ) ) ,Min( BR ,PN ) )", "choosing": "Max( ( MLU * CS ),Max( Max( Max( MUM,RMSe ),( MLU / CS ) ),RCSe ) )", "obj1": 0.284, "obj2": 0.49933105127312494}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server - ( Max( ( MDR - DDR ),Max( FirstVNF_RAM,AMS ) ) - Min( ( Const - CRS ) ,( MDR + MRS ) ) ) ) )", "choosing": "Max( ( MLU * CS ),Max( Max( ( MUR / MUR ),( MLU / CS ) ),RCSe ) )", "obj1": 0.28, "obj2": 0.4999157670872915}, {"determining": "( Max( FirstVNF_RAM,BR ) - ( MDR + Const ) )", "choosing": "( ( MUR - MUM ) - ( RCSe + CS ) )", "obj1": 0.518, "obj2": 0.34181745959181165}]}