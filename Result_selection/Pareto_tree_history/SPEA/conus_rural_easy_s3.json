{"1": [{"determining": "Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,RMSe ) / ( DS + MLU ) )", "obj1": 0.11, "obj2": 0.7292189139824652}, {"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( MRS,FirstVNF_Mem_Server ),Max( CRS,FirstVNF_CPU ) )", "choosing": "Min( ( RMSe / RMSe ) ,Min( MUC ,RMSe ) )", "obj1": 0.222, "obj2": 0.6057338105093132}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.168, "obj2": 0.6719638728558843}, {"determining": "( ( ( ACS + AMS ) - MRS ) * ( RRS * ( PN * MRS ) ) )", "choosing": "Max( ( Min( MUR ,MUR ) - Max( MUR,CS ) ),( Min( MUM ,MUC ) + ( MUM * DS ) ) )", "obj1": 0.48, "obj2": 0.41314532347589755}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( ACS + RRS ) ) - Max( ( MRS - PN ),( Const / DDR ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "Min( ( ( MUC * MLU ) * CS ) ,Min( MLU ,RMSe ) )", "obj1": 0.904, "obj2": 0.11172783511801274}, {"determining": "Min( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ,( Min( PN ,ACS ) / ( Const / RRS ) ) )", "choosing": "Min( Min( ( RMSe + RCSe ) ,( RCSe - MLU ) ) ,( ( RRSe - CS ) * ( RMSe / RRSe ) ) )", "obj1": 0.164, "obj2": 0.6783101183636094}, {"determining": "( ( ( FirstVNF_RAM_Server * Const ) + ( FirstVNF_CPU + MRS ) ) + ( Max( FirstVNF_CPU_Server,ACS ) + Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RCSe - RCSe ) - ( RRSe - MUR ) ) + Min( ( MUC + RRSe ) ,( RCSe * RRSe ) ) )", "obj1": 0.508, "obj2": 0.39155114627974297}, {"determining": "Max( ( Const * CRS ),( ( ACS * AMS ) / MDR ) )", "choosing": "( ( RRSe * Min( MUC ,CS ) ) * ( RRSe + DS ) )", "obj1": 0.426, "obj2": 0.48392185163692386}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.798, "obj2": 0.14519646993790725}, {"determining": "Max( ( MRS * RRS ),( FirstVNF_RAM_Server - RRS ) )", "choosing": "( Min( MUC ,Min( RRSe ,DS ) ) - ( RCSe * MUM ) )", "obj1": 0.294, "obj2": 0.5615949018216759}, {"determining": "Min( ( ( ARS + AMS ) - ( PN / PN ) ) ,( ( PN / AMS ) * ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( DS ,MLU ) / ( CS + MUM ) ),Max( ( MUC * MUC ),( RRSe - MUR ) ) )", "obj1": 0.594, "obj2": 0.28217953390565664}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( MUR * RRSe ) )", "obj1": 0.704, "obj2": 0.17157918207857759}, {"determining": "Min( ( Max( ( MRS * FirstVNF_Mem ),( CRS - CRS ) ) + ( Min( PN ,FirstVNF_RAM ) + ( BR + FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + ( Max( BR,ACS ) + ( RRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUC * DS ) - Min( RRSe ,DS ) )", "obj1": 0.314, "obj2": 0.5352336961584884}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( ( DDR - ( BR / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - DS ) ) ) )", "obj1": 0.082, "obj2": 0.7553015587604724}, {"determining": "( ( ( ( PN * RRS ) + Min( FirstVNF_Mem ,CRS ) ) - ( Min( FirstVNF_Mem ,PN ) - ( RRS - ACS ) ) ) - ( ( Min( Const ,FirstVNF_CPU ) / Max( ARS,Const ) ) - Min( ( AMS + RRS ) ,( Const * CRS ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS * BR ) + ( ACS - CRS ) ) / ( ( DDR - FirstVNF_RAM_Server ) + ( FirstVNF_RAM / ACS ) ) ) ,( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( RRS + PN ) ) / Max( ( FirstVNF_RAM_Server - RRS ),Min( MRS ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( ( MLU / MUC ),( MLU * RCSe ) ),Max( Max( RCSe,DS ),Min( MUC ,RMSe ) ) ) * ( ( ( DS + RRSe ) * ( RMSe + MUR ) ) * Max( ( MUM - CS ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.554, "obj2": 0.3849359010058988}, {"determining": "( ( ( Const * FirstVNF_CPU ) - FirstVNF_CPU_Server ) + Max( DDR,CRS ) )", "choosing": "( Max( RMSe,( ( RCSe / RCSe ) - RCSe ) ) / ( ( MUR / MLU ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) / Max( Min( FirstVNF_Mem_Server ,Const ),( FirstVNF_Mem + CRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( BR * MDR ) ) + ( Max( FirstVNF_CPU_Server,RRS ) + ( BR - DDR ) ) ) )", "choosing": "( ( RMSe - MLU ) - Min( DS ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / PN ) / Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "Max( ( Min( ( CS + MUR ) ,( MLU * CS ) ) + ( ( RCSe - RRSe ) + ( RCSe + CS ) ) ),Max( ( ( RRSe + MUM ) + ( MUR / MLU ) ),( Min( CS ,MUR ) + ( MLU / RCSe ) ) ) )", "obj1": 0.218, "obj2": 0.6582436360218401}, {"determining": "( Max( ( CRS * CRS ),FirstVNF_CPU_Server ) + Max( RRS,AMS ) )", "choosing": "Min( Max( Max( ( RMSe * RCSe ),Min( MUC ,RCSe ) ),( ( MLU - MUM ) + ( MLU / RRSe ) ) ) ,( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) )", "obj1": 0.232, "obj2": 0.5936697756518987}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "Min( Max( ( ( FirstVNF_RAM * FirstVNF_Mem ) * ( MDR + RRS ) ),Max( ( FirstVNF_CPU - Const ),Min( DDR ,FirstVNF_CPU ) ) ) ,( ( Max( PN,MDR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) - Min( Min( RRS ,CRS ) ,( RRS / BR ) ) ) )", "choosing": "( ( ( ( DS + MUM ) + ( RCSe * RRSe ) ) - ( ( CS / MLU ) / ( RCSe - MUC ) ) ) / Max( Min( Max( RCSe,MUC ) ,( MUM * RRSe ) ),( ( MUM * RRSe ) - ( RMSe - MUC ) ) ) )", "obj1": 0.442, "obj2": 0.4324142895067528}, {"determining": "( ( BR * ACS ) - ( ( PN + FirstVNF_RAM_Server ) + DDR ) )", "choosing": "( Max( Max( CS,( MUC - MUR ) ),( MUC - ( MUR * CS ) ) ) / Min( ( ( RCSe + MUC ) / RMSe ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( ACS + RRS ) ) - Max( ( MRS - PN ),( Const / DDR ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.798, "obj2": 0.14519646993790725}, {"determining": "Min( ( ( ARS + AMS ) - ( PN / PN ) ) ,( ( PN / AMS ) * ( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( DS ,MLU ) / ( CS + MUM ) ),Max( ( MUC * MUC ),( RRSe - MUR ) ) )", "obj1": 0.594, "obj2": 0.28217953390565664}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( MUR * RRSe ) )", "obj1": 0.704, "obj2": 0.17157918207857759}, {"determining": "( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * RRS ) + Min( FirstVNF_Mem ,CRS ) ) - ( Min( FirstVNF_Mem ,PN ) - ( RRS - ACS ) ) ) - ( ( Min( Const ,FirstVNF_CPU ) / Max( ARS,Const ) ) - Min( ( AMS + RRS ) ,( Const * CRS ) ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_CPU ) - FirstVNF_CPU_Server ) + Max( DDR,CRS ) )", "choosing": "( Max( RMSe,( ( RCSe / RCSe ) - RCSe ) ) / ( ( MUR / MLU ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) / Max( Min( FirstVNF_Mem_Server ,Const ),( FirstVNF_Mem + CRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( BR * MDR ) ) + ( Max( FirstVNF_CPU_Server,RRS ) + ( BR - DDR ) ) ) )", "choosing": "( ( RMSe - MLU ) - Min( DS ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS * CRS ),FirstVNF_CPU_Server ) + Max( RRS,AMS ) )", "choosing": "Min( Max( Max( ( RMSe * RCSe ),Min( MUC ,RCSe ) ),( ( MLU - MUM ) + ( MLU / RRSe ) ) ) ,( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) )", "obj1": 0.232, "obj2": 0.5936697756518987}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "( ( BR * ACS ) - ( ( PN + FirstVNF_RAM_Server ) + DDR ) )", "choosing": "( Max( Max( CS,( MUC - MUR ) ),( MUC - ( MUR * CS ) ) ) / Min( ( ( RCSe + MUC ) / RMSe ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + PN ),FirstVNF_Mem_Server )", "choosing": "( ( Max( ( Min( ( DS - MUR ) ,( RMSe / MUR ) ) / ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( MUC / DS ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - DS ) ) ) ) / RCSe ) + ( MUC * MUM ) )", "obj1": 0.068, "obj2": 0.7599819697620076}, {"determining": "( ( FirstVNF_CPU_Server / CRS ) * ( ( MDR * ( BR / FirstVNF_Mem_Server ) ) - MDR ) )", "choosing": "Max( ( Min( ( DS - RCSe ) ,( RMSe / MUR ) ) * ( ( MLU + RCSe ) - ( DS - CS ) ) ),( ( ( RCSe / RCSe ) * ( MUC / DS ) ) * ( Max( MUC,RCSe ) * ( RMSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( RRS ,AMS ) / ( PN * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( Min( MUC ,DS ) + ( MUR * DS ) ) ) )", "obj1": 0.118, "obj2": 0.6878264060389472}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( MUR * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) )", "obj1": 0.64, "obj2": 0.21673156776555663}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.43, "obj2": 0.3316298649067053}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( Min( RMSe ,DS ) + ( MUR * DS ) )", "obj1": 0.59, "obj2": 0.31172680963898325}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( ACS + RRS ) ) - Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( ( ( RCSe * MUR ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( ACS + RRS ) ) - Max( ( MRS - PN ),( Const / DDR ) ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.368, "obj2": 0.4871308030451356}, {"determining": "( ( ( Max( Const,BR ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) ) * ( CRS * BR ) ) / ( PN * ACS ) )", "choosing": "Min( ( RCSe * MUM ) ,Max( DS,Max( MUM,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * BR ) ) / ( PN * ACS ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.074, "obj2": 0.7079369211133468}, {"determining": "( Max( Const,BR ) - Min( FirstVNF_RAM ,( ( ACS - FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * ARS ) - ( ( FirstVNF_RAM_Server * Const ) * AMS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MDR - DDR ) ) )", "choosing": "( ( Min( MUC ,( ( ( RCSe - RCSe ) - ( MUC - DS ) ) + Min( ( MUC + RRSe ) ,( RCSe * RRSe ) ) ) ) + ( MLU - RMSe ) ) / ( ( MUR - CS ) * RRSe ) )", "obj1": 0.94, "obj2": 0.0526849337781466}, {"determining": "Min( ( ( BR / BR ) / ( Min( Min( ( Min( CRS ,FirstVNF_CPU ) * ( RRS / MRS ) ) ,Max( ( FirstVNF_CPU + MDR ),Max( ACS,CRS ) ) ) ,( Min( ( RRS / BR ) ,( DDR - PN ) ) / ( ( ACS - AMS ) / ( CRS + DDR ) ) ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( MUC ,MUC ) - MUM ) )", "obj1": 0.604, "obj2": 0.25717913230469286}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( MUR * DS ) )", "obj1": 0.704, "obj2": 0.17157918207857759}, {"determining": "( ( BR - ACS ) - ( ( Min( ( ( ARS + AMS ) - Max( PN,PN ) ) ,( ( PN / AMS ) * ( AMS - FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) + DDR ) )", "choosing": "( ( Max( CS,( MUC - MUR ) ) + ( MUC - ( MUR * MUR ) ) ) / Max( ( Min( DS ,MLU ) / ( CS + MUM ) ),( ( MUC * MUC ) * ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ACS ) - ( ( PN + FirstVNF_RAM_Server ) + DDR ) )", "choosing": "Max( ( Min( DS ,MLU ) / ( CS + MUM ) ),( ( MUC * MUC ) * ( RRSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / ARS ),( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + DS ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.798, "obj2": 0.14519646993790725}, {"determining": "Max( ( RRS / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) - ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "( Max( DDR,( Const * AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,DDR ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.352, "obj2": 0.501147983759639}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ACS )", "choosing": "Min( ( ( MUC * MLU ) * CS ) ,Min( ( Min( DS ,RMSe ) - ( RRSe + RMSe ) ) ,RMSe ) )", "obj1": 0.904, "obj2": 0.09083334265638901}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,MDR ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.286, "obj2": 0.515544106066895}, {"determining": "( Min( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) - ( AMS - PN ) )", "choosing": "( Min( DS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.898, "obj2": 0.09732492813750765}, {"determining": "Max( MDR,Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "Min( ( RMSe - MUR ) ,Min( MUC ,RMSe ) )", "obj1": 0.172, "obj2": 0.6552300136023614}, {"determining": "Max( Min( Const ,FirstVNF_Mem_Server ),AMS )", "choosing": "( ( MLU * MLU ) + ( ( RCSe / DS ) + ( MUC * MUM ) ) )", "obj1": 0.066, "obj2": 0.7683861889388593}, {"determining": "Max( Min( Const ,FirstVNF_Mem_Server ),( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe - DS ) + ( MUC * MUM ) )", "obj1": 0.06, "obj2": 0.7687109304860634}, {"determining": "( ( ( ACS + AMS ) - MRS ) * ( RRS * ( PN * MRS ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) )", "obj1": 0.26, "obj2": 0.5541884495569559}, {"determining": "( ( Max( FirstVNF_RAM_Server,( DDR - ( BR / FirstVNF_Mem_Server ) ) ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( RCSe - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.788, "obj2": 0.15406292289128443}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.796, "obj2": 0.14564551578426296}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.15, "obj2": 0.6730149262687367}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( RRS + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( RRSe - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.79, "obj2": 0.14980724452490218}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) )", "choosing": "( ( Max( MUC,MUM ) * ( DS - RMSe ) ) - Max( ( RMSe - MUC ),( MLU / DS ) ) )", "obj1": 0.798, "obj2": 0.14519646993790725}, {"determining": "( ( FirstVNF_Mem_Server * Max( MRS,Min( MRS ,ARS ) ) ) * Max( ( PN + FirstVNF_RAM_Server ),( FirstVNF_CPU + MDR ) ) )", "choosing": "( ( ( ( DS + MUM ) + ( RCSe * RRSe ) ) - ( ( CS / MLU ) / ( RCSe - MUC ) ) ) / Max( Min( Max( RCSe,MUC ) ,( MUM * RRSe ) ),( ( MUM * CS ) - ( RMSe - MUC ) ) ) )", "obj1": 0.418, "obj2": 0.462679760497859}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( RMSe / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.186, "obj2": 0.5940166003171411}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.158, "obj2": 0.6609837900770092}, {"determining": "Min( ( ( Max( ARS,Const ) / ( Const / RRS ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( ( MUM * CS ) * ( MLU - RCSe ) ) )", "obj1": 0.384, "obj2": 0.479365032268345}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "( Max( ( CRS * CRS ),DDR ) + Max( RRS,AMS ) )", "choosing": "Min( Max( Max( ( RMSe * RCSe ),Min( MUR ,RCSe ) ),( ( MLU - MUM ) + ( MLU / RRSe ) ) ) ,( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) )", "obj1": 0.232, "obj2": 0.5936697756518987}], "3": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS * CRS ),FirstVNF_CPU_Server ) + Max( RRS,AMS ) )", "choosing": "Min( Max( Max( ( RMSe * RCSe ),Min( MUC ,RCSe ) ),( ( MLU - MUM ) + ( MLU / RRSe ) ) ) ,( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) )", "obj1": 0.232, "obj2": 0.5936697756518987}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "Max( ( Min( RRS ,AMS ) / ( PN * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( Min( MUC ,DS ) + ( MUR * DS ) ) ) )", "obj1": 0.118, "obj2": 0.6878264060389472}, {"determining": "Min( ( ( BR / BR ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.43, "obj2": 0.3316298649067053}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.368, "obj2": 0.4871308030451356}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * BR ) ) / ( PN * ACS ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.074, "obj2": 0.7079369211133468}, {"determining": "Max( ( DDR / ARS ),( ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( Max( PN,AMS ) * ( PN + CRS ) ) ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + DS ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "Max( ( RRS / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) - ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "( Max( DDR,( Const * AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,DDR ) ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.352, "obj2": 0.501147983759639}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,MDR ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.286, "obj2": 0.515544106066895}, {"determining": "Max( Min( Const ,FirstVNF_Mem_Server ),( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe - DS ) + ( MUC * MUM ) )", "obj1": 0.06, "obj2": 0.7687109304860634}, {"determining": "( ( ( ACS + AMS ) - MRS ) * ( RRS * ( PN * MRS ) ) )", "choosing": "( ( ( Max( DS,RCSe ) / ( RRSe + MUM ) ) * Min( ( RMSe - CS ) ,( CS / DS ) ) ) / ( ( ( MUM + MLU ) / Max( RRSe,RRSe ) ) - ( ( MUR / RCSe ) / Min( RCSe ,MUC ) ) ) )", "obj1": 0.26, "obj2": 0.5541884495569559}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.15, "obj2": 0.6730149262687367}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( RMSe / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.186, "obj2": 0.5940166003171411}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.158, "obj2": 0.6609837900770092}, {"determining": "Min( ( ( Max( ARS,Const ) / ( Const / RRS ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( ( MUM * CS ) * ( MLU - RCSe ) ) )", "obj1": 0.384, "obj2": 0.479365032268345}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "( Max( ( CRS * CRS ),DDR ) + Max( RRS,AMS ) )", "choosing": "Min( Max( Max( ( RMSe * RCSe ),Min( MUR ,RCSe ) ),( ( MLU - MUM ) + ( MLU / RRSe ) ) ) ,( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) )", "obj1": 0.232, "obj2": 0.5936697756518987}, {"determining": "( Max( DDR,( Const * AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,DDR ) ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.256, "obj2": 0.5783442117954097}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * BR ) ) / ( PN * Max( ( CRS * CRS ),PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RMSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * Max( ( RMSe * RCSe ),Min( MUR ,RCSe ) ) ) ) ) )", "obj1": 0.08, "obj2": 0.7053765835332341}, {"determining": "( Max( ( CRS * CRS ),DDR ) + Max( RRS,AMS ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.094, "obj2": 0.7012058286301054}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.146, "obj2": 0.681608666524526}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) * ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( Min( ( ( RCSe * MUC ) / ( MLU + CS ) ) ,Max( ( DS + RCSe ),( Min( RMSe ,DS ) + Max( MUR,DS ) ) ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.354, "obj2": 0.49467367976410914}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + MUM ),( Min( RMSe ,DS ) + ( MUR * DS ) ) ) )", "obj1": 0.124, "obj2": 0.6833063192385219}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( ( RMSe / MLU ) - Min( DS ,DS ) ) ) )", "obj1": 0.126, "obj2": 0.6827693351901403}, {"determining": "( ( ARS + Max( MRS,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS * RCSe ),( MUC / RCSe ) ) )", "obj1": 0.158, "obj2": 0.6609837900770092}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( Min( RMSe ,DS ) + ( MUR * DS ) ) ) )", "obj1": 0.118, "obj2": 0.6878264060389472}, {"determining": "( ( Const / RRS ) - Min( ACS ,( Min( ACS ,FirstVNF_CPU ) * FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( RCSe - ( MUR * RRSe ) ) ) )", "obj1": 0.092, "obj2": 0.7037975482021053}, {"determining": "Min( ( ( Max( ARS,Const ) / ( Const / RRS ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( ( MUM * CS ) * ( MLU - RCSe ) ) )", "obj1": 0.384, "obj2": 0.479365032268345}, {"determining": "( Max( ( CRS * ARS ),DDR ) + Max( RRS,AMS ) )", "choosing": "Min( Max( Max( ( RMSe * RCSe ),Min( MUR ,RCSe ) ),( ( MLU - MUM ) + ( MUR / RRSe ) ) ) ,( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) )", "obj1": 0.232, "obj2": 0.5936697756518987}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + DS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.158, "obj2": 0.6609837900770092}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - DDR )", "choosing": "( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( ( MUR / MLU ) / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.268, "obj2": 0.5405494895023587}, {"determining": "( ( Max( ( CRS * CRS ),FirstVNF_CPU_Server ) + Max( RRS,AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,DDR ) ) )", "choosing": "( Min( Max( Max( ( RMSe * RCSe ),Min( MUC ,RCSe ) ),( ( MLU - MUM ) + ( MLU / RRSe ) ) ) ,( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.35, "obj2": 0.5066427825372565}, {"determining": "( Max( DDR,( Const * AMS ) ) / ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,DDR ) ) )", "choosing": "Min( Max( Max( ( RMSe * RCSe ),Min( MUC ,RCSe ) ),( ( MLU - MUM ) + ( MLU / RRSe ) ) ) ,( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) )", "obj1": 0.166, "obj2": 0.6428035930993892}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.146, "obj2": 0.681608666524526}, {"determining": "Max( ( Max( RRS,AMS ) / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( ( ( MLU - MUM ) + ( MLU / RRSe ) ) - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "( Max( ( ACS * CRS ),DDR ) + Max( RRS,AMS ) )", "choosing": "Min( Max( Max( ( RMSe * RCSe ),Min( MUR ,RCSe ) ),( ( MLU - MUM ) + ( MLU / RRSe ) ) ) ,( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( RRSe,CS ) / Min( MUM ,RCSe ) ) ) )", "obj1": 0.232, "obj2": 0.5936697756518987}, {"determining": "Max( Min( Const ,FirstVNF_Mem_Server ),AMS )", "choosing": "( ( MLU * MLU ) + ( ( RCSe / DS ) + ( MUC * MUM ) ) )", "obj1": 0.064, "obj2": 0.7679363349430471}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( MUR * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) )", "obj1": 0.636, "obj2": 0.22274767438174672}, {"determining": "Max( ( DDR / ARS ),( ( ( PN + FirstVNF_RAM_Server ) + DDR ) + ( Max( PN,AMS ) * ( PN + CRS ) ) ) )", "choosing": "( ( Max( Max( CS,( MUC - MUR ) ),( MUC - ( MUR * CS ) ) ) / Min( ( ( RCSe + MUC ) / RMSe ) ,MLU ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) )", "obj1": 0.068, "obj2": 0.7566450179284828}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) * FirstVNF_CPU_Server ) ) ,Min( Min( PN ,FirstVNF_CPU ) ,( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUR * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) )", "obj1": 0.636, "obj2": 0.22274767438174672}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.15, "obj2": 0.6730149262687367}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.258, "obj2": 0.5644991794159644}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.144, "obj2": 0.6819876065434151}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.246, "obj2": 0.5825894076623866}, {"determining": "Min( ( ( BR / BR ) / ( Min( Min( ( Min( CRS ,FirstVNF_CPU ) * ( RRS / MRS ) ) ,Max( ( FirstVNF_CPU + MDR ),Max( ACS,CRS ) ) ) ,( Min( ( RRS / BR ) ,( DDR - PN ) ) / ( ( ACS - AMS ) / ( CRS + DDR ) ) ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( CS,( MUC - MUR ) ) + ( MUC - ( MUR * MUR ) ) ) / Max( ( Min( DS ,MLU ) / ( CS + MUM ) ),( ( MUC * MUC ) * ( RRSe - MUR ) ) ) )", "obj1": 0.4, "obj2": 0.4204266691581747}, {"determining": "Min( ( Max( PN,AMS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( RMSe - MUC ) )", "obj1": 0.59, "obj2": 0.25477460174500616}, {"determining": "( Max( ( CRS * CRS ),DDR ) + Max( RRS,AMS ) )", "choosing": "Min( Max( Max( ( RMSe * RCSe ),Min( MUR ,RCSe ) ),( ( MLU - MUM ) + ( MLU / RRSe ) ) ) ,( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) )", "obj1": 0.232, "obj2": 0.5936697756518987}], "4": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( RRS ,AMS ) / ( PN * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( Min( MUC ,DS ) + ( MUR * DS ) ) ) )", "obj1": 0.118, "obj2": 0.6878264060389472}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.368, "obj2": 0.4871308030451356}, {"determining": "Max( Min( Const ,FirstVNF_Mem_Server ),( FirstVNF_RAM / MDR ) )", "choosing": "( ( RCSe - DS ) + ( MUC * MUM ) )", "obj1": 0.06, "obj2": 0.7687109304860634}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( RMSe / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.186, "obj2": 0.5940166003171411}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.158, "obj2": 0.6609837900770092}, {"determining": "( Max( ( CRS * CRS ),DDR ) + Max( RRS,AMS ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.094, "obj2": 0.7012058286301054}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) * ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( Min( ( ( RCSe * MUC ) / ( MLU + CS ) ) ,Max( ( DS + RCSe ),( Min( RMSe ,DS ) + Max( MUR,DS ) ) ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.354, "obj2": 0.49467367976410914}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + MUM ),( Min( RMSe ,DS ) + ( MUR * DS ) ) ) )", "obj1": 0.124, "obj2": 0.6833063192385219}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( ( RMSe / MLU ) - Min( DS ,DS ) ) ) )", "obj1": 0.126, "obj2": 0.6827693351901403}, {"determining": "( ( ARS + Max( MRS,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS * RCSe ),( MUC / RCSe ) ) )", "obj1": 0.158, "obj2": 0.6609837900770092}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( Min( RMSe ,DS ) + ( MUR * DS ) ) ) )", "obj1": 0.118, "obj2": 0.6878264060389472}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + DS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.158, "obj2": 0.6609837900770092}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( MUR * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) )", "obj1": 0.636, "obj2": 0.22274767438174672}, {"determining": "Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) )", "obj1": 0.068, "obj2": 0.7566450179284828}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) * FirstVNF_CPU_Server ) ) ,Min( Min( PN ,FirstVNF_CPU ) ,( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( MUR * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) )", "obj1": 0.636, "obj2": 0.22274767438174672}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + Const ) ) ) - Max( Min( PN ,FirstVNF_CPU ),ARS ) )", "choosing": "( ( ( ( RCSe * Max( ( DS + RCSe ),( Min( RMSe ,DS ) + ( MUR * DS ) ) ) ) / ( MLU * CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.256, "obj2": 0.5498751749477407}, {"determining": "Max( ( DDR / ARS ),( ( Min( RRS ,AMS ) / ( MRS * BR ) ) - Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Min( ( DS + RCSe ) ,( Min( RMSe ,DS ) + ( MUR * DS ) ) ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.354, "obj2": 0.49467367976410914}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( Max( RRS,FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),Max( MUC,RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.186, "obj2": 0.5940166003171411}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( RMSe / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.232, "obj2": 0.55355759258116}, {"determining": "( ( ( ( ( ( Min( Max( Const,ARS ) ,( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU - ACS ) * ( BR - MDR ) ) ) * Min( ( ( FirstVNF_CPU + RRS ) / Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( FirstVNF_CPU_Server + ARS ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) * ( Max( ( ( FirstVNF_CPU - ACS ) * ( RRS + MRS ) ),Min( ( FirstVNF_CPU_Server + Const ) ,Max( FirstVNF_RAM,MDR ) ) ) / ( Min( ( DDR - DDR ) ,( FirstVNF_Mem * CRS ) ) - ( Min( ACS ,Const ) / ( FirstVNF_RAM - ARS ) ) ) ) ) / ( Max( Max( Max( ( PN * RRS ),Min( MRS ,ARS ) ),( Max( CRS,AMS ) + ( FirstVNF_RAM_Server - RRS ) ) ),( ( Max( ARS,ACS ) * Max( FirstVNF_CPU,Const ) ) * ( ( DDR / FirstVNF_RAM ) * ( FirstVNF_RAM - ACS ) ) ) ) + ( Min( ( ( FirstVNF_Mem * DDR ) * ( RRS / MDR ) ) ,( Max( MRS,MRS ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) - Max( ( Min( BR ,FirstVNF_RAM ) - Min( DDR ,MRS ) ),( ( MDR / MDR ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + Max( Max( Min( Max( Min( Max( DDR,FirstVNF_Mem_Server ) ,Min( AMS ,MRS ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( MDR * PN ),( ACS / FirstVNF_RAM ) ) * ( ( PN - ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) ),( ( Max( ( CRS / FirstVNF_RAM_Server ),( Const * ARS ) ) - Max( Min( RRS ,AMS ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * Max( ( Min( Const ,ACS ) + ( MDR / PN ) ),Max( ( PN - Const ),( RRS + FirstVNF_Mem_Server ) ) ) ) ),( ( Min( ( Min( PN ,BR ) / ( CRS * MRS ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM ) ) ) + ( ( ( ACS / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( Max( MRS,ARS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) / ( Max( ( ( BR / FirstVNF_RAM_Server ) / ( FirstVNF_CPU + BR ) ),( ( PN + FirstVNF_RAM_Server ) - ( PN * FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem_Server * Const ) / Min( AMS ,FirstVNF_RAM ) ) ,Max( Max( MDR,Const ),( FirstVNF_RAM * Const ) ) ) ) ) ) ) + ( ( ( Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ( Max( MRS,Const ) / ( AMS - DDR ) ) ) ,Max( Min( ( DDR / BR ) ,( AMS + PN ) ),( ( RRS / PN ) + Max( CRS,FirstVNF_CPU ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,DDR ),( BR - MRS ) ) / ( Min( FirstVNF_RAM ,RRS ) / ( FirstVNF_CPU_Server - BR ) ) ) * Min( ( ( MRS - PN ) / Min( ACS ,FirstVNF_RAM ) ) ,Max( Min( FirstVNF_CPU_Server ,CRS ),( CRS / ACS ) ) ) ) ) * ( ( Min( ( ( ACS - PN ) / ( MDR + BR ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( ( AMS - CRS ) - Min( ACS ,FirstVNF_RAM_Server ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) - Min( ( Max( ( CRS - MRS ),Max( PN,FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,MRS ) / ( Const + BR ) ) ) ,( Max( ( FirstVNF_RAM * MDR ),Min( PN ,MDR ) ) + Min( Min( FirstVNF_Mem ,RRS ) ,( ARS / Const ) ) ) ) ) ) + Min( ( Max( ( ( Max( CRS,CRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + CRS ) / ( DDR + Const ) ) ),Max( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),( ARS + RRS ) ),( Max( FirstVNF_CPU,MDR ) * ( ACS * FirstVNF_RAM ) ) ) ) - ( Min( ( ( BR + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + ( RRS * PN ) ) ) / Max( ( ( RRS - CRS ) + Max( FirstVNF_CPU_Server,Const ) ),Max( ( FirstVNF_CPU_Server * MDR ),( Const + AMS ) ) ) ) ) ,( ( ( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( ARS - ACS ) ) * ( ( ACS + MDR ) + Min( Const ,FirstVNF_Mem_Server ) ) ) * ( Max( ( BR / FirstVNF_Mem ),( MRS - RRS ) ) + ( Min( PN ,AMS ) * ( BR * MRS ) ) ) ) + ( Min( ( ( CRS / DDR ) / ( Const + MDR ) ) ,Min( ( ACS * Const ) ,( Const - CRS ) ) ) + Max( ( Max( MDR,AMS ) + ( FirstVNF_Mem_Server / Const ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,RRSe ) / Min( RRSe ,CS ) )", "obj1": 0.326, "obj2": 0.4988503208986835}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) * ( Max( ( CRS * CRS ),DDR ) + Max( RRS,AMS ) ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( MUR * ( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) ) )", "obj1": 0.624, "obj2": 0.23490719089702544}, {"determining": "Min( ( ( BR / Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.43, "obj2": 0.3194150276260229}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - ( ( AMS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( Max( RCSe,MUC ) / ( MLU + CS ) ) / Max( Min( DS ,RCSe ),( MUC / RCSe ) ) )", "obj1": 0.158, "obj2": 0.6609837900770092}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( MLU - MUM ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.358, "obj2": 0.49211114525918476}, {"determining": "( ( FirstVNF_RAM_Server / ( CRS * BR ) ) / ( PN * Max( ( CRS * ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - Min( ( RRS + FirstVNF_RAM ) ,FirstVNF_RAM ) ) ),DDR ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( ( Min( ( RCSe * MUC ) ,( MLU + CS ) ) / Max( ( DS + RCSe ),( ( RMSe - MLU ) - Min( DS ,DS ) ) ) ) - MUR ) - ( MUR * Min( ( RMSe * RCSe ) ,Min( RCSe ,RCSe ) ) ) ) ) )", "obj1": 0.074, "obj2": 0.7048697787203729}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( ( RMSe - MLU ) - Min( DS ,DS ) ) ) )", "obj1": 0.126, "obj2": 0.6827693351901403}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * BR ) ) / ( PN * Max( ( CRS * CRS ),PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RMSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * Max( ( RMSe * RCSe ),Min( MUR ,RCSe ) ) ) ) ) )", "obj1": 0.084, "obj2": 0.702121632800714}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( MUR * Max( ( Max( ( DS + RCSe ),( MUC / RCSe ) ) + RCSe ),( MUC / RCSe ) ) ) )", "obj1": 0.61, "obj2": 0.24067137850124776}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * MDR ) ),Max( Max( FirstVNF_Mem_Server,ARS ),RRS ) )", "choosing": "( ( ( RCSe * ( ( ( RCSe * MUC ) / ( MLU * CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.142, "obj2": 0.6748659291980647}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.158, "obj2": 0.6609837900770092}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( Min( RMSe ,DS ) + ( MUR * DS ) ) ) )", "obj1": 0.118, "obj2": 0.6878264060389472}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + MUM ),( MUC / RCSe ) ) )", "obj1": 0.158, "obj2": 0.6609837900770092}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( MUR * ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + ( MUC * MUM ) ) ) )", "obj1": 0.386, "obj2": 0.38147248962618374}, {"determining": "Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + ( MUC * MUM ) )", "obj1": 0.068, "obj2": 0.7566450179284828}, {"determining": "Min( ( Max( PN,AMS ) / ( CRS * Const ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( ( ( RCSe - DS ) + ( MUC * MUM ) ) ,DS ) + ( RMSe - MUC ) )", "obj1": 0.602, "obj2": 0.24104156676805052}, {"determining": "Min( ( Max( PN,AMS ) / ( CRS * FirstVNF_CPU_Server ) ) ,Min( Min( PN ,FirstVNF_CPU ) ,( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + Min( RMSe ,MUC ) )", "obj1": 0.564, "obj2": 0.2481403822012998}, {"determining": "Min( ( Max( PN,AMS ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) )", "obj1": 0.468, "obj2": 0.30932188864163335}, {"determining": "Max( FirstVNF_RAM_Server,Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( ( Max( MUR,( RCSe * MUR ) ) + DS ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.376, "obj2": 0.47824945495491383}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( Max( RCSe,RCSe ) / ( RCSe * MUM ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.368, "obj2": 0.4871308030451356}, {"determining": "( Max( DDR,( Const * AMS ) ) / ( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "Min( Max( RCSe,( ( MLU - MUM ) + ( MLU / RRSe ) ) ) ,( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) )", "obj1": 0.182, "obj2": 0.6282648029472258}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( Min( RMSe ,DS ) + ( MUR * DS ) ) ) )", "obj1": 0.118, "obj2": 0.6878264060389472}, {"determining": "Max( FirstVNF_CPU,Min( FirstVNF_Mem ,MDR ) )", "choosing": "( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * RRSe ) + RMSe ) )", "obj1": 0.284, "obj2": 0.5137731194262115}, {"determining": "( Max( ( CRS * CRS ),DDR ) + Max( RRS,AMS ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.094, "obj2": 0.7012058286301054}, {"determining": "Min( ( ( BR / BR ) / ( Min( Min( ( Min( CRS ,FirstVNF_CPU ) * ( RRS / MRS ) ) ,Max( ( FirstVNF_CPU + MDR ),Max( ACS,CRS ) ) ) ,( Min( ( RRS / BR ) ,( DDR - PN ) ) / ( ( ACS - AMS ) / ( CRS + DDR ) ) ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) )", "obj1": 0.378, "obj2": 0.3837296652760762}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( RRS - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.206, "obj2": 0.5735503467427772}, {"determining": "( ( FirstVNF_RAM_Server * ( AMS * BR ) ) / ( PN * Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( MLU ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.164, "obj2": 0.6309199517428139}, {"determining": "Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) )", "obj1": 0.062, "obj2": 0.7594695301117141}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( RRS ,AMS ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.258, "obj2": 0.5377275638608221}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( AMS + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + MUM ),( MUC / RCSe ) ) )", "obj1": 0.148, "obj2": 0.672093218188948}, {"determining": "( Max( ( CRS * CRS ),DDR ) + Max( RRS,AMS ) )", "choosing": "( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.158, "obj2": 0.6609837900770092}], "5": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( RMSe / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.186, "obj2": 0.5940166003171411}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) * ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( Min( ( ( RCSe * MUC ) / ( MLU + CS ) ) ,Max( ( DS + RCSe ),( Min( RMSe ,DS ) + Max( MUR,DS ) ) ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.354, "obj2": 0.49467367976410914}, {"determining": "Max( ( DDR / ARS ),( ( Min( RRS ,AMS ) / ( MRS * BR ) ) - Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Min( ( DS + RCSe ) ,( Min( RMSe ,DS ) + ( MUR * DS ) ) ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.354, "obj2": 0.49467367976410914}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( Max( RRS,FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),Max( MUC,RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.186, "obj2": 0.5940166003171411}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( RMSe / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.232, "obj2": 0.55355759258116}, {"determining": "( ( ( ( ( ( Min( Max( Const,ARS ) ,( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU - ACS ) * ( BR - MDR ) ) ) * Min( ( ( FirstVNF_CPU + RRS ) / Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( FirstVNF_CPU_Server + ARS ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) * ( Max( ( ( FirstVNF_CPU - ACS ) * ( RRS + MRS ) ),Min( ( FirstVNF_CPU_Server + Const ) ,Max( FirstVNF_RAM,MDR ) ) ) / ( Min( ( DDR - DDR ) ,( FirstVNF_Mem * CRS ) ) - ( Min( ACS ,Const ) / ( FirstVNF_RAM - ARS ) ) ) ) ) / ( Max( Max( Max( ( PN * RRS ),Min( MRS ,ARS ) ),( Max( CRS,AMS ) + ( FirstVNF_RAM_Server - RRS ) ) ),( ( Max( ARS,ACS ) * Max( FirstVNF_CPU,Const ) ) * ( ( DDR / FirstVNF_RAM ) * ( FirstVNF_RAM - ACS ) ) ) ) + ( Min( ( ( FirstVNF_Mem * DDR ) * ( RRS / MDR ) ) ,( Max( MRS,MRS ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) - Max( ( Min( BR ,FirstVNF_RAM ) - Min( DDR ,MRS ) ),( ( MDR / MDR ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + Max( Max( Min( Max( Min( Max( DDR,FirstVNF_Mem_Server ) ,Min( AMS ,MRS ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( MDR * PN ),( ACS / FirstVNF_RAM ) ) * ( ( PN - ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) ),( ( Max( ( CRS / FirstVNF_RAM_Server ),( Const * ARS ) ) - Max( Min( RRS ,AMS ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * Max( ( Min( Const ,ACS ) + ( MDR / PN ) ),Max( ( PN - Const ),( RRS + FirstVNF_Mem_Server ) ) ) ) ),( ( Min( ( Min( PN ,BR ) / ( CRS * MRS ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM ) ) ) + ( ( ( ACS / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( Max( MRS,ARS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) / ( Max( ( ( BR / FirstVNF_RAM_Server ) / ( FirstVNF_CPU + BR ) ),( ( PN + FirstVNF_RAM_Server ) - ( PN * FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem_Server * Const ) / Min( AMS ,FirstVNF_RAM ) ) ,Max( Max( MDR,Const ),( FirstVNF_RAM * Const ) ) ) ) ) ) ) + ( ( ( Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ( Max( MRS,Const ) / ( AMS - DDR ) ) ) ,Max( Min( ( DDR / BR ) ,( AMS + PN ) ),( ( RRS / PN ) + Max( CRS,FirstVNF_CPU ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,DDR ),( BR - MRS ) ) / ( Min( FirstVNF_RAM ,RRS ) / ( FirstVNF_CPU_Server - BR ) ) ) * Min( ( ( MRS - PN ) / Min( ACS ,FirstVNF_RAM ) ) ,Max( Min( FirstVNF_CPU_Server ,CRS ),( CRS / ACS ) ) ) ) ) * ( ( Min( ( ( ACS - PN ) / ( MDR + BR ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( ( AMS - CRS ) - Min( ACS ,FirstVNF_RAM_Server ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) - Min( ( Max( ( CRS - MRS ),Max( PN,FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,MRS ) / ( Const + BR ) ) ) ,( Max( ( FirstVNF_RAM * MDR ),Min( PN ,MDR ) ) + Min( Min( FirstVNF_Mem ,RRS ) ,( ARS / Const ) ) ) ) ) ) + Min( ( Max( ( ( Max( CRS,CRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + CRS ) / ( DDR + Const ) ) ),Max( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),( ARS + RRS ) ),( Max( FirstVNF_CPU,MDR ) * ( ACS * FirstVNF_RAM ) ) ) ) - ( Min( ( ( BR + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + ( RRS * PN ) ) ) / Max( ( ( RRS - CRS ) + Max( FirstVNF_CPU_Server,Const ) ),Max( ( FirstVNF_CPU_Server * MDR ),( Const + AMS ) ) ) ) ) ,( ( ( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( ARS - ACS ) ) * ( ( ACS + MDR ) + Min( Const ,FirstVNF_Mem_Server ) ) ) * ( Max( ( BR / FirstVNF_Mem ),( MRS - RRS ) ) + ( Min( PN ,AMS ) * ( BR * MRS ) ) ) ) + ( Min( ( ( CRS / DDR ) / ( Const + MDR ) ) ,Min( ( ACS * Const ) ,( Const - CRS ) ) ) + Max( ( Max( MDR,AMS ) + ( FirstVNF_Mem_Server / Const ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,RRSe ) / Min( RRSe ,CS ) )", "obj1": 0.326, "obj2": 0.4988503208986835}, {"determining": "Min( ( ( BR / Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.43, "obj2": 0.3194150276260229}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( MLU - MUM ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.358, "obj2": 0.49211114525918476}, {"determining": "( ( FirstVNF_RAM_Server / ( CRS * BR ) ) / ( PN * Max( ( CRS * ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - Min( ( RRS + FirstVNF_RAM ) ,FirstVNF_RAM ) ) ),DDR ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( ( Min( ( RCSe * MUC ) ,( MLU + CS ) ) / Max( ( DS + RCSe ),( ( RMSe - MLU ) - Min( DS ,DS ) ) ) ) - MUR ) - ( MUR * Min( ( RMSe * RCSe ) ,Min( RCSe ,RCSe ) ) ) ) ) )", "obj1": 0.074, "obj2": 0.7048697787203729}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( MUR * ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + ( MUC * MUM ) ) ) )", "obj1": 0.386, "obj2": 0.38147248962618374}, {"determining": "Max( FirstVNF_CPU,Min( FirstVNF_Mem ,MDR ) )", "choosing": "( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * RRSe ) + RMSe ) )", "obj1": 0.284, "obj2": 0.5137731194262115}, {"determining": "Min( ( ( BR / BR ) / ( Min( Min( ( Min( CRS ,FirstVNF_CPU ) * ( RRS / MRS ) ) ,Max( ( FirstVNF_CPU + MDR ),Max( ACS,CRS ) ) ) ,( Min( ( RRS / BR ) ,( DDR - PN ) ) / ( ( ACS - AMS ) / ( CRS + DDR ) ) ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) )", "obj1": 0.378, "obj2": 0.3837296652760762}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( RRS - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.206, "obj2": 0.5735503467427772}, {"determining": "Max( FirstVNF_CPU,Min( DDR ,Min( RRS ,AMS ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( ( MUR * Max( ( Max( ( DS + RCSe ),( MUC / RCSe ) ) + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.196, "obj2": 0.5817417276001243}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * BR ) ) / ( PN * Max( FirstVNF_CPU,( Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( ( DS + RCSe ),( MUC / RCSe ) ) - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.6298487785466521}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( MUC * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.206, "obj2": 0.5735503467427772}, {"determining": "( ( ARS * Max( CRS,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / ( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) ) ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.5253045805703924}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( DS ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.394, "obj2": 0.34223140442009287}, {"determining": "Max( ( DDR / ARS ),Min( FirstVNF_RAM ,Const ) )", "choosing": "( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( Min( RMSe ,DS ) + ( MUR * DS ) ) ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.354, "obj2": 0.49467367976410914}, {"determining": "Max( ( DDR / ARS ),( ( Min( RRS ,AMS ) / ( MRS * BR ) ) - Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Min( ( DS + RCSe ) ,( Min( RMSe ,DS ) + ( MUR * DS ) ) ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.374, "obj2": 0.47316457053142585}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) * ( Max( ( CRS * CRS ),DDR ) + Max( RRS,AMS ) ) ) )", "choosing": "( ( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( Max( MUR,CS ) / Min( MUM ,RCSe ) ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.364, "obj2": 0.4829837462299438}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,ARS ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( MUR * Max( ( ( MUR / DS ) * Min( MUC ,MUR ) ),( MUC / RCSe ) ) ) )", "obj1": 0.388, "obj2": 0.3811222638226578}, {"determining": "Max( ( DDR / ARS ),( ( Min( RRS ,AMS ) / ( MRS * BR ) ) - Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Min( ( DS + RCSe ) ,( Min( RMSe ,DS ) + ( MUR * DS ) ) ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.374, "obj2": 0.47316457053142585}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( MUC * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.206, "obj2": 0.5735503467427772}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( RRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( Min( RMSe ,DS ) + CS ) ) ) - ( ( MUR / DS ) * Max( MUC,MUR ) ) )", "obj1": 0.354, "obj2": 0.49467367976410914}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) )", "choosing": "( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( Min( RMSe ,DS ) + Max( MUR,DS ) ) ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.366, "obj2": 0.4744555051588497}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) * ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( Min( ( ( RCSe * MUC ) / ( MLU + CS ) ) ,Max( ( DS + RCSe ),( Min( RMSe ,DS ) + Max( MUR,DS ) ) ) ) - ( ( MUR / DS ) * Min( MUC ,MUR ) ) )", "obj1": 0.36, "obj2": 0.4879914632849763}, {"determining": "( ( ( ( ( ( Min( Max( Const,ARS ) ,( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU - ACS ) * ( BR - MDR ) ) ) * Min( ( ( FirstVNF_CPU + RRS ) / Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( FirstVNF_CPU_Server + ARS ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) * ( Max( ( ( FirstVNF_CPU - ACS ) * ( RRS + MRS ) ),Min( ( FirstVNF_CPU_Server + Const ) ,Max( FirstVNF_RAM,MDR ) ) ) / ( Min( ( DDR - DDR ) ,( FirstVNF_Mem * CRS ) ) - ( Min( ACS ,Const ) / ( FirstVNF_RAM - ARS ) ) ) ) ) / ( Max( Max( Max( ( PN * RRS ),Min( MRS ,ARS ) ),( Max( CRS,AMS ) + ( FirstVNF_RAM_Server - RRS ) ) ),( ( Max( ARS,ACS ) * Max( FirstVNF_CPU,Const ) ) * ( ( DDR / FirstVNF_RAM ) * ( FirstVNF_RAM - ACS ) ) ) ) + ( Min( ( ( FirstVNF_Mem * DDR ) * ( RRS / MDR ) ) ,( Max( MRS,MRS ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) - Max( ( Min( BR ,FirstVNF_RAM ) - Min( DDR ,MRS ) ),( ( MDR / MDR ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + Max( Max( Min( Max( Min( Max( DDR,FirstVNF_Mem_Server ) ,Min( AMS ,MRS ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( MDR * PN ),( ACS / FirstVNF_RAM ) ) * ( ( PN - ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) ),( ( Max( ( CRS / FirstVNF_RAM_Server ),( Const * ARS ) ) - Max( Min( RRS ,AMS ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * Max( ( Min( Const ,ACS ) + ( MDR / PN ) ),Max( ( PN - Const ),( RRS + FirstVNF_Mem_Server ) ) ) ) ),( ( Min( ( Min( PN ,BR ) / ( CRS * MRS ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM ) ) ) + ( ( ( ACS / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( Max( MRS,ARS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) / ( Max( ( ( BR / FirstVNF_RAM_Server ) / ( FirstVNF_CPU + BR ) ),( ( PN + FirstVNF_RAM_Server ) - ( PN * FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem_Server * Const ) / Min( AMS ,FirstVNF_RAM ) ) ,Max( Max( MDR,Const ),( FirstVNF_RAM * Const ) ) ) ) ) ) ) + ( ( ( Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ( Max( MRS,Const ) / ( AMS - DDR ) ) ) ,Max( Min( ( DDR / BR ) ,( AMS + PN ) ),( ( RRS / PN ) + Max( CRS,FirstVNF_CPU ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,DDR ),( BR - MRS ) ) / ( Min( FirstVNF_RAM ,RRS ) / ( FirstVNF_CPU_Server - BR ) ) ) * Max( ( ( MRS - PN ) / Min( ACS ,FirstVNF_RAM ) ),Max( Min( FirstVNF_CPU_Server ,CRS ),( CRS / ACS ) ) ) ) ) * ( ( Min( ( ( ACS - PN ) / ( MDR + BR ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( ( AMS - CRS ) - Min( ACS ,FirstVNF_RAM_Server ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) - Min( ( Max( ( CRS - MRS ),Max( PN,FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,MRS ) / ( Const + BR ) ) ) ,( Max( ( FirstVNF_RAM * MDR ),Min( PN ,MDR ) ) + Min( Min( FirstVNF_Mem ,RRS ) ,( ARS / Const ) ) ) ) ) ) + Min( ( Max( ( ( Max( CRS,CRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + CRS ) / ( DDR + Const ) ) ),Max( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),( ARS + RRS ) ),( Max( FirstVNF_CPU,MDR ) * ( ACS * FirstVNF_RAM ) ) ) ) - ( Min( ( ( BR + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + ( RRS * PN ) ) ) / Max( ( ( RRS - CRS ) + Max( FirstVNF_CPU_Server,Const ) ),Max( ( FirstVNF_CPU_Server * MDR ),( Const + AMS ) ) ) ) ) ,( ( ( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( ARS - ACS ) ) * ( ( ACS + MDR ) + Min( Const ,FirstVNF_Mem_Server ) ) ) * ( Max( ( BR / FirstVNF_Mem ),( MRS - RRS ) ) + ( Min( PN ,AMS ) * ( BR * MRS ) ) ) ) + ( Min( ( ( CRS / DDR ) / ( Const + MDR ) ) ,Min( ( ACS * Const ) ,( Const - CRS ) ) ) + Max( ( Max( MDR,AMS ) + ( FirstVNF_Mem_Server / Const ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RCSe - RRSe ) / Min( RRSe ,CS ) )", "obj1": 0.28, "obj2": 0.5198913553554608}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.232, "obj2": 0.55355759258116}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( Min( FirstVNF_CPU_Server ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) ,AMS ) ) )", "choosing": "( Min( DS ,MUC ) - Max( ( MUM * CS ),RMSe ) )", "obj1": 0.296, "obj2": 0.5081022350579681}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_RAM + RRS ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.31, "obj2": 0.503971688208417}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,BR ) )", "choosing": "( ( ( MUM * RCSe ) + Max( CS,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.284, "obj2": 0.5137731194262115}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_RAM ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.06, "obj2": 0.7404528275070899}, {"determining": "Min( ( Min( ( CRS / BR ) ,( DDR - PN ) ) / ( ( ACS - AMS ) / ( CRS + DDR ) ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( ( Min( ( MUM * CS ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) ,DS ) + ( MUR * ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + ( MUC * MUM ) ) ) )", "obj1": 0.386, "obj2": 0.38147248962618374}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( MUR * ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + ( MUC * MUM ) ) ) )", "obj1": 0.386, "obj2": 0.38147248962618374}, {"determining": "Min( ( ( BR / BR ) / ( Min( ( ( Min( CRS ,FirstVNF_CPU ) * ( RRS / MRS ) ) + Max( ( FirstVNF_CPU + MDR ),Max( ACS,CRS ) ) ) ,( Min( ( RRS / BR ) ,( DDR - PN ) ) / ( ( ACS - AMS ) / ( CRS + DDR ) ) ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( MUC * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) )", "obj1": 0.378, "obj2": 0.3837296652760762}, {"determining": "( ( FirstVNF_RAM_Server * ( AMS * BR ) ) / ( PN * Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( MLU ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.174, "obj2": 0.6292887307284593}, {"determining": "( ( FirstVNF_RAM_Server * ( AMS * BR ) ) / ( PN * Max( ( DDR / ARS ),( ( Min( RRS ,AMS ) / ( MRS * BR ) ) - Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( ( RCSe * MUC ) / ( MLU + CS ) ) ) + Min( ( MUM - CS ) ,Min( MLU ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.11, "obj2": 0.6876202690687676}, {"determining": "( ( FirstVNF_RAM_Server * ( AMS * BR ) ) / ( PN * Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( MLU ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.6266904079857457}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( RRS ,AMS ) ) )", "choosing": "( Min( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) ,DS ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.18, "obj2": 0.6146494969216019}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.114, "obj2": 0.6659673053166679}, {"determining": "Max( ( Min( RRS ,AMS ) / ( MRS * MDR ) ),Max( Max( FirstVNF_Mem_Server,ARS ),RRS ) )", "choosing": "( ( ( RCSe * ( ( ( RCSe * MUC ) / ( MLU * CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.154, "obj2": 0.6494611266685754}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( ( PN - FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Min( RMSe ,DS ) + ( MUR * ( ( ( ( MUM * MUM ) / Max( DS,Max( MUM,MUC ) ) ) / DS ) + ( MUC * MUM ) ) ) )", "obj1": 0.386, "obj2": 0.38147248962618374}, {"determining": "Max( ( CRS * FirstVNF_CPU_Server ),( FirstVNF_RAM * MDR ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) ) / DS ) + Max( MUC,MUM ) )", "obj1": 0.05, "obj2": 0.7578827568053927}, {"determining": "Min( ( ( BR / Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.414, "obj2": 0.33121121226041533}, {"determining": "( ( ( ( ( ( Min( Max( Const,ARS ) ,( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU - ACS ) * ( BR - MDR ) ) ) * Min( ( ( FirstVNF_CPU + RRS ) / Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( FirstVNF_CPU_Server + ARS ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) * ( Max( ( ( FirstVNF_CPU - ACS ) * ( RRS + MRS ) ),Min( ( FirstVNF_CPU_Server + Const ) ,Max( FirstVNF_RAM,MDR ) ) ) / ( Min( ( DDR - DDR ) ,( FirstVNF_Mem * CRS ) ) - ( Min( ACS ,Const ) / ( FirstVNF_RAM - ARS ) ) ) ) ) / ( Max( Max( Max( ( PN * RRS ),Min( MRS ,ARS ) ),( Max( CRS,AMS ) + ( FirstVNF_RAM_Server - RRS ) ) ),( ( Max( ARS,ACS ) * Max( FirstVNF_CPU,Const ) ) * ( ( DDR / FirstVNF_RAM ) * ( FirstVNF_RAM - ACS ) ) ) ) + ( Min( ( ( FirstVNF_Mem * DDR ) * ( RRS / MDR ) ) ,( Max( MRS,MRS ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) - Max( ( Min( BR ,FirstVNF_RAM ) - Min( DDR ,MRS ) ),( ( MDR / MDR ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + Max( Max( Min( Max( Min( Max( DDR,FirstVNF_Mem_Server ) ,Min( AMS ,FirstVNF_RAM ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( MDR * PN ),( ACS / FirstVNF_RAM ) ) * ( ( PN - ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) ),( ( Max( ( CRS / FirstVNF_RAM_Server ),( Const * ARS ) ) - Max( Min( RRS ,AMS ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * Max( ( Min( Const ,ACS ) + ( MDR / PN ) ),Max( ( PN - Const ),( RRS + FirstVNF_Mem_Server ) ) ) ) ),( ( Min( ( Min( PN ,BR ) / ( CRS * MRS ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM ) ) ) + ( ( ( ACS / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( Max( MRS,ARS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) / ( Max( ( ( BR / FirstVNF_RAM_Server ) / ( FirstVNF_CPU + BR ) ),( ( PN + FirstVNF_RAM_Server ) - ( PN * FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem_Server * Const ) / Min( AMS ,FirstVNF_RAM ) ) ,Max( Max( MDR,Const ),( FirstVNF_RAM * Const ) ) ) ) ) ) ) + ( ( ( Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ( Max( MRS,Const ) / ( AMS - DDR ) ) ) ,Max( Min( ( DDR / BR ) ,( AMS + PN ) ),( ( RRS / PN ) + Max( CRS,FirstVNF_CPU ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,DDR ),( BR - MRS ) ) / ( Min( FirstVNF_RAM ,RRS ) / ( FirstVNF_CPU_Server - BR ) ) ) * Min( ( ( MRS - PN ) / Min( ACS ,FirstVNF_RAM ) ) ,Max( Min( FirstVNF_CPU_Server ,CRS ),( CRS / ACS ) ) ) ) ) * ( ( Min( ( ( ACS - PN ) / ( MDR + BR ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( ( AMS - CRS ) - Min( ACS ,FirstVNF_RAM_Server ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) - Min( ( Max( ( CRS - MRS ),Max( PN,FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,MRS ) / ( Const + BR ) ) ) ,( Max( ( FirstVNF_RAM * MDR ),Min( PN ,MDR ) ) + Min( Min( FirstVNF_Mem ,RRS ) ,( ARS / Const ) ) ) ) ) ) + Min( ( Max( ( ( Max( CRS,CRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + CRS ) / ( DDR + Const ) ) ),Max( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),( ARS + RRS ) ),( Max( FirstVNF_CPU,MDR ) * ( ACS * FirstVNF_RAM ) ) ) ) - ( Min( ( ( BR + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + ( RRS * PN ) ) ) / Max( ( ( RRS - CRS ) + Max( FirstVNF_CPU_Server,Const ) ),Max( ( FirstVNF_CPU_Server * MDR ),( Const + AMS ) ) ) ) ) ,( ( ( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( ARS - ACS ) ) * ( ( ACS + MDR ) + Min( Const ,FirstVNF_Mem_Server ) ) ) * ( Max( ( BR / FirstVNF_Mem ),( MRS - RRS ) ) + ( Min( PN ,AMS ) * ( BR * MRS ) ) ) ) + ( Min( ( ( CRS / DDR ) / ( Const + MDR ) ) ,Min( ( ACS * Const ) ,( Const - CRS ) ) ) + Max( ( Max( MDR,AMS ) + ( FirstVNF_Mem_Server / Const ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,RRSe ) / Min( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) ,CS ) )", "obj1": 0.252, "obj2": 0.5375118630667}, {"determining": "( ( ( ( ( ( Min( Max( Const,ARS ) ,( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU - ACS ) * ( BR - MDR ) ) ) * Min( ( ( FirstVNF_CPU + RRS ) / Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( FirstVNF_CPU_Server + ARS ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) * ( Max( ( ( FirstVNF_CPU - ACS ) * ( RRS + MRS ) ),Min( ( FirstVNF_CPU_Server + Const ) ,Max( FirstVNF_RAM,MDR ) ) ) / ( Min( ( DDR - DDR ) ,( FirstVNF_Mem * CRS ) ) - ( Min( ACS ,Const ) / ( FirstVNF_RAM - ARS ) ) ) ) ) / ( Max( Max( Max( ( PN * RRS ),Min( MRS ,ARS ) ),( Max( CRS,AMS ) + ( FirstVNF_RAM_Server - RRS ) ) ),( ( Max( ARS,ACS ) * Max( FirstVNF_CPU,Const ) ) * ( ( DDR / FirstVNF_RAM ) * ( FirstVNF_RAM - ACS ) ) ) ) + ( Min( ( ( FirstVNF_Mem * DDR ) * ( RRS / MDR ) ) ,( Max( MRS,MRS ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) - Max( ( Min( BR ,FirstVNF_RAM ) - Min( DDR ,MRS ) ),( ( MDR / MDR ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + Max( Max( Min( Max( Min( Max( DDR,FirstVNF_Mem_Server ) ,Min( AMS ,MRS ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( MDR * PN ),( ACS / FirstVNF_RAM ) ) * ( ( PN - ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) ),( ( Max( ( CRS / FirstVNF_RAM_Server ),( Const * ARS ) ) - Max( Min( RRS ,AMS ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * Max( ( Min( Const ,ACS ) + ( MDR / PN ) ),Max( ( PN - Const ),( RRS + FirstVNF_Mem_Server ) ) ) ) ),( ( Min( ( Min( PN ,BR ) / ( CRS * MRS ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM ) ) ) + ( ( ( ACS / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( Max( MRS,ARS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) / ( Max( ( ( BR / FirstVNF_RAM_Server ) / ( FirstVNF_CPU + BR ) ),( ( PN + FirstVNF_RAM_Server ) - ( PN * FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem_Server * Const ) / Min( AMS ,FirstVNF_RAM ) ) ,Max( Max( MDR,Const ),( FirstVNF_RAM * Const ) ) ) ) ) ) ) + ( ( ( Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ( Max( MRS,Const ) / ( AMS - DDR ) ) ) ,Max( Min( ( DDR / BR ) ,( AMS + PN ) ),( ( RRS / PN ) + Max( CRS,FirstVNF_CPU ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,DDR ),( BR - MRS ) ) / ( Min( FirstVNF_RAM ,RRS ) / ( FirstVNF_CPU_Server - BR ) ) ) * Min( ( ( MRS - PN ) / Min( ACS ,FirstVNF_RAM ) ) ,Max( Min( FirstVNF_CPU_Server ,CRS ),( CRS / ACS ) ) ) ) ) * ( ( Min( ( ( ACS - PN ) / ( MDR + BR ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( ( AMS - CRS ) - Min( ACS ,FirstVNF_RAM_Server ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) - Min( ( Max( ( CRS - MRS ),Max( PN,FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,MRS ) / ( Const + BR ) ) ) ,( Max( ( FirstVNF_RAM * MDR ),Min( PN ,MDR ) ) + Min( Min( FirstVNF_Mem ,RRS ) ,( ARS / Const ) ) ) ) ) ) + Min( ( Max( ( ( Max( CRS,CRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + CRS ) / ( DDR + Const ) ) ),Max( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),( ARS + RRS ) ),( Max( FirstVNF_CPU,MDR ) * ( ACS * FirstVNF_RAM ) ) ) ) - ( Min( ( ( BR + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + ( RRS * PN ) ) ) / Max( ( ( RRS - CRS ) + Max( FirstVNF_CPU_Server,Const ) ),Max( ( FirstVNF_CPU_Server * MDR ),( Const + AMS ) ) ) ) ) ,( ( ( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( ARS - ACS ) ) * ( ( ACS + MDR ) + Min( Const ,FirstVNF_Mem_Server ) ) ) * ( Max( ( BR / FirstVNF_Mem ),( MRS - RRS ) ) + ( Min( PN ,AMS ) * ( BR * MRS ) ) ) ) + ( Min( ( ( CRS / DDR ) / ( Const + MDR ) ) ,Min( ( ACS * Const ) ,( Const - CRS ) ) ) + Max( ( Max( MDR,AMS ) + ( FirstVNF_Mem_Server / Const ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,RRSe ) / Min( RRSe ,CS ) )", "obj1": 0.326, "obj2": 0.4988503208986835}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( RRS - FirstVNF_RAM ) / ( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - Max( Min( PN ,FirstVNF_CPU ),ARS ) ) ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( MUC * Max( ( DS + RCSe ),( Min( RMSe ,DS ) + ( MUR * DS ) ) ) ) * CS ) + RMSe ) )", "obj1": 0.262, "obj2": 0.5356263993904745}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( RRS - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.222, "obj2": 0.5614638193124333}], "6": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( RMSe / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.186, "obj2": 0.5940166003171411}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( Max( RRS,FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),Max( MUC,RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.186, "obj2": 0.5940166003171411}, {"determining": "Min( ( ( BR / Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.43, "obj2": 0.3194150276260229}, {"determining": "( ( FirstVNF_RAM_Server / ( CRS * BR ) ) / ( PN * Max( ( CRS * ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - Min( ( RRS + FirstVNF_RAM ) ,FirstVNF_RAM ) ) ),DDR ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( ( Min( ( RCSe * MUC ) ,( MLU + CS ) ) / Max( ( DS + RCSe ),( ( RMSe - MLU ) - Min( DS ,DS ) ) ) ) - MUR ) - ( MUR * Min( ( RMSe * RCSe ) ,Min( RCSe ,RCSe ) ) ) ) ) )", "obj1": 0.074, "obj2": 0.7048697787203729}, {"determining": "Max( FirstVNF_CPU,Min( FirstVNF_Mem ,MDR ) )", "choosing": "( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * RRSe ) + RMSe ) )", "obj1": 0.284, "obj2": 0.5137731194262115}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( RRS - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.206, "obj2": 0.5735503467427772}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * BR ) ) / ( PN * Max( FirstVNF_CPU,( Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( ( DS + RCSe ),( MUC / RCSe ) ) - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.162, "obj2": 0.6298487785466521}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( MUC * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.206, "obj2": 0.5735503467427772}, {"determining": "( ( ARS * Max( CRS,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / ( ( Max( MUR,( RCSe * MUR ) ) + ( MUR - RCSe ) ) * Min( ( RCSe * ( RRSe - RRSe ) ) ,( MUR + MUC ) ) ) ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.272, "obj2": 0.5253045805703924}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( DS ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.394, "obj2": 0.34223140442009287}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( MUC * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.206, "obj2": 0.5735503467427772}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( Min( FirstVNF_CPU_Server ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) ,AMS ) ) )", "choosing": "( Min( DS ,MUC ) - Max( ( MUM * CS ),RMSe ) )", "obj1": 0.296, "obj2": 0.5081022350579681}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,BR ) )", "choosing": "( ( ( MUM * RCSe ) + Max( CS,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.284, "obj2": 0.5137731194262115}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_RAM ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.06, "obj2": 0.7404528275070899}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( RRS ,AMS ) ) )", "choosing": "( Min( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) ,DS ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.18, "obj2": 0.6146494969216019}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.114, "obj2": 0.6659673053166679}, {"determining": "Max( ( CRS * FirstVNF_CPU_Server ),( FirstVNF_RAM * MDR ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) ) / DS ) + Max( MUC,MUM ) )", "obj1": 0.05, "obj2": 0.7578827568053927}, {"determining": "Min( ( ( BR / Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.414, "obj2": 0.33121121226041533}, {"determining": "( ( ( ( ( ( Min( Max( Const,ARS ) ,( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU - ACS ) * ( BR - MDR ) ) ) * Min( ( ( FirstVNF_CPU + RRS ) / Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( FirstVNF_CPU_Server + ARS ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) * ( Max( ( ( FirstVNF_CPU - ACS ) * ( RRS + MRS ) ),Min( ( FirstVNF_CPU_Server + Const ) ,Max( FirstVNF_RAM,MDR ) ) ) / ( Min( ( DDR - DDR ) ,( FirstVNF_Mem * CRS ) ) - ( Min( ACS ,Const ) / ( FirstVNF_RAM - ARS ) ) ) ) ) / ( Max( Max( Max( ( PN * RRS ),Min( MRS ,ARS ) ),( Max( CRS,AMS ) + ( FirstVNF_RAM_Server - RRS ) ) ),( ( Max( ARS,ACS ) * Max( FirstVNF_CPU,Const ) ) * ( ( DDR / FirstVNF_RAM ) * ( FirstVNF_RAM - ACS ) ) ) ) + ( Min( ( ( FirstVNF_Mem * DDR ) * ( RRS / MDR ) ) ,( Max( MRS,MRS ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) - Max( ( Min( BR ,FirstVNF_RAM ) - Min( DDR ,MRS ) ),( ( MDR / MDR ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + Max( Max( Min( Max( Min( Max( DDR,FirstVNF_Mem_Server ) ,Min( AMS ,FirstVNF_RAM ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( MDR * PN ),( ACS / FirstVNF_RAM ) ) * ( ( PN - ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) ),( ( Max( ( CRS / FirstVNF_RAM_Server ),( Const * ARS ) ) - Max( Min( RRS ,AMS ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * Max( ( Min( Const ,ACS ) + ( MDR / PN ) ),Max( ( PN - Const ),( RRS + FirstVNF_Mem_Server ) ) ) ) ),( ( Min( ( Min( PN ,BR ) / ( CRS * MRS ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM ) ) ) + ( ( ( ACS / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( Max( MRS,ARS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) / ( Max( ( ( BR / FirstVNF_RAM_Server ) / ( FirstVNF_CPU + BR ) ),( ( PN + FirstVNF_RAM_Server ) - ( PN * FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem_Server * Const ) / Min( AMS ,FirstVNF_RAM ) ) ,Max( Max( MDR,Const ),( FirstVNF_RAM * Const ) ) ) ) ) ) ) + ( ( ( Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ( Max( MRS,Const ) / ( AMS - DDR ) ) ) ,Max( Min( ( DDR / BR ) ,( AMS + PN ) ),( ( RRS / PN ) + Max( CRS,FirstVNF_CPU ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,DDR ),( BR - MRS ) ) / ( Min( FirstVNF_RAM ,RRS ) / ( FirstVNF_CPU_Server - BR ) ) ) * Min( ( ( MRS - PN ) / Min( ACS ,FirstVNF_RAM ) ) ,Max( Min( FirstVNF_CPU_Server ,CRS ),( CRS / ACS ) ) ) ) ) * ( ( Min( ( ( ACS - PN ) / ( MDR + BR ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( ( AMS - CRS ) - Min( ACS ,FirstVNF_RAM_Server ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) - Min( ( Max( ( CRS - MRS ),Max( PN,FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,MRS ) / ( Const + BR ) ) ) ,( Max( ( FirstVNF_RAM * MDR ),Min( PN ,MDR ) ) + Min( Min( FirstVNF_Mem ,RRS ) ,( ARS / Const ) ) ) ) ) ) + Min( ( Max( ( ( Max( CRS,CRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + CRS ) / ( DDR + Const ) ) ),Max( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),( ARS + RRS ) ),( Max( FirstVNF_CPU,MDR ) * ( ACS * FirstVNF_RAM ) ) ) ) - ( Min( ( ( BR + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + ( RRS * PN ) ) ) / Max( ( ( RRS - CRS ) + Max( FirstVNF_CPU_Server,Const ) ),Max( ( FirstVNF_CPU_Server * MDR ),( Const + AMS ) ) ) ) ) ,( ( ( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( ARS - ACS ) ) * ( ( ACS + MDR ) + Min( Const ,FirstVNF_Mem_Server ) ) ) * ( Max( ( BR / FirstVNF_Mem ),( MRS - RRS ) ) + ( Min( PN ,AMS ) * ( BR * MRS ) ) ) ) + ( Min( ( ( CRS / DDR ) / ( Const + MDR ) ) ,Min( ( ACS * Const ) ,( Const - CRS ) ) ) + Max( ( Max( MDR,AMS ) + ( FirstVNF_Mem_Server / Const ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,RRSe ) / Min( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) ,CS ) )", "obj1": 0.252, "obj2": 0.5375118630667}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( ( ( PN + FirstVNF_RAM_Server ) - ( PN * FirstVNF_Mem ) ) + RRS ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( DS / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.344, "obj2": 0.48341253156118685}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.186, "obj2": 0.5940166003171411}, {"determining": "( ( ( ( ( ( Min( Max( Const,ARS ) ,( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU - ACS ) * ( BR - MDR ) ) ) * Min( ( ( FirstVNF_CPU + RRS ) / Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( FirstVNF_CPU_Server + ARS ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) * ( Max( ( ( FirstVNF_CPU - ACS ) * ( RRS + MRS ) ),Min( ( FirstVNF_CPU_Server + Const ) ,Max( FirstVNF_RAM,MDR ) ) ) / ( Min( ( DDR - DDR ) ,( FirstVNF_Mem * CRS ) ) - ( Min( ACS ,Const ) / ( FirstVNF_RAM - ARS ) ) ) ) ) / ( Max( Max( Max( ( PN * RRS ),Min( MRS ,ARS ) ),( Max( CRS,AMS ) + ( FirstVNF_RAM_Server - RRS ) ) ),( ( Max( ARS,ACS ) * Max( FirstVNF_CPU,Const ) ) * ( ( DDR / FirstVNF_RAM ) * ( FirstVNF_RAM - ACS ) ) ) ) + ( Min( ( ( FirstVNF_Mem * DDR ) * ( RRS / MDR ) ) ,( Max( MRS,MRS ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) - Max( ( Min( BR ,FirstVNF_RAM ) - Min( DDR ,MRS ) ),( ( MDR / MDR ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + Max( Max( Min( Max( Min( Max( DDR,FirstVNF_Mem_Server ) ,Min( AMS ,FirstVNF_RAM ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( MDR * PN ),( ACS / FirstVNF_RAM ) ) * ( ( PN - ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) ),( ( Max( ( CRS / FirstVNF_RAM_Server ),( Const * ARS ) ) - Max( Min( RRS ,AMS ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * Max( ( Min( Const ,ACS ) + ( MDR / PN ) ),Max( ( PN - Const ),( RRS + FirstVNF_Mem_Server ) ) ) ) ),( ( Min( ( Min( PN ,BR ) / ( CRS * MRS ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM ) ) ) + ( ( ( ACS / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( Max( MRS,ARS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) / ( Max( ( ( BR / FirstVNF_RAM_Server ) / ( FirstVNF_CPU + BR ) ),( ( PN + FirstVNF_RAM_Server ) - ( PN * FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem_Server * Const ) / Min( AMS ,FirstVNF_RAM ) ) ,Max( Max( MDR,Const ),( FirstVNF_RAM * Const ) ) ) ) ) ) ) + ( ( ( Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ( Max( MRS,Const ) / ( AMS - DDR ) ) ) ,Max( Min( ( DDR / BR ) ,( AMS + PN ) ),( ( RRS / PN ) + Max( CRS,FirstVNF_CPU ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,DDR ),( BR - MRS ) ) / ( Min( FirstVNF_RAM ,RRS ) / ( FirstVNF_CPU_Server - BR ) ) ) * Min( ( ( MRS - PN ) / Min( ACS ,FirstVNF_RAM ) ) ,Max( Min( FirstVNF_CPU_Server ,CRS ),( CRS / ACS ) ) ) ) ) * ( ( Min( ( ( ACS - PN ) / ( MDR + BR ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( ( AMS - CRS ) - Min( ACS ,FirstVNF_RAM_Server ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) - Min( ( Max( ( CRS - MRS ),Max( PN,FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,MRS ) / ( Const + BR ) ) ) ,( Max( ( FirstVNF_RAM * MDR ),Min( PN ,MDR ) ) + Min( Min( FirstVNF_Mem ,RRS ) ,( ARS / Const ) ) ) ) ) ) + Min( ( Max( ( ( Max( CRS,CRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + CRS ) / ( DDR + Const ) ) ),Max( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),( ARS + RRS ) ),( Max( FirstVNF_CPU,MDR ) * ( ACS * FirstVNF_RAM ) ) ) ) - ( Min( ( ( BR + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + ( RRS * PN ) ) ) / Max( ( ( RRS - CRS ) + Max( FirstVNF_CPU_Server,Const ) ),Max( ( FirstVNF_CPU_Server * MDR ),( Const + AMS ) ) ) ) ) ,( ( ( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( ARS - ACS ) ) * ( ( ACS + MDR ) + Min( Const ,FirstVNF_Mem_Server ) ) ) * ( Max( ( BR / FirstVNF_Mem ),( MRS - RRS ) ) + ( Min( PN ,AMS ) * ( BR * MRS ) ) ) ) + ( Min( ( ( CRS / DDR ) / ( Const + MDR ) ) ,Min( ( ACS * Const ) ,( Const - CRS ) ) ) + Max( ( Max( MDR,AMS ) + ( FirstVNF_Mem_Server / Const ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,RRSe ) / Min( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) ,CS ) )", "obj1": 0.252, "obj2": 0.5375118630667}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.226, "obj2": 0.5495860223231572}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( ( FirstVNF_RAM_Server * ( AMS * BR ) ),DDR ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( MLU ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.396, "obj2": 0.3369073459954367}, {"determining": "( ( FirstVNF_RAM_Server * ( AMS * BR ) ) / ( PN * Max( FirstVNF_CPU,( FirstVNF_RAM * ARS ) ) ) )", "choosing": "( ( Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) + Min( ( MUM - CS ) ,Min( MLU ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.068, "obj2": 0.7173356006898567}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.394, "obj2": 0.34223140442009287}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,MDR ) )", "choosing": "( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.248, "obj2": 0.5377989039129754}, {"determining": "Max( FirstVNF_CPU,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RCSe / MUC ) / ( MLU + MLU ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) + CS ) - RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,MDR ) )", "choosing": "( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.284, "obj2": 0.5137731194262115}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / ( Min( ( MUM * MUM ) ,( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) ) / DS ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.334, "obj2": 0.4834218015115846}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( ( RMSe - MLU ) - Min( DS ,DS ) ) ) ) - MUR ) - ( MUR * Min( ( RMSe * RCSe ) ,Min( RCSe ,RCSe ) ) ) ) ) )", "obj1": 0.394, "obj2": 0.34223140442009287}, {"determining": "( ( ( ( ( ( Min( Max( Const,ARS ) ,( MDR / FirstVNF_RAM ) ) * ( ( FirstVNF_CPU - ACS ) * ( BR - MDR ) ) ) * Min( ( ( FirstVNF_CPU + RRS ) / Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( FirstVNF_CPU_Server + ARS ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) * ( Max( ( ( FirstVNF_CPU - ACS ) * ( RRS + MRS ) ),Min( ( FirstVNF_CPU_Server + Const ) ,Max( FirstVNF_RAM,MDR ) ) ) / ( Min( ( DDR - DDR ) ,( FirstVNF_Mem * CRS ) ) - ( Min( ACS ,Const ) / ( FirstVNF_RAM - ARS ) ) ) ) ) / ( Max( Max( Max( ( PN * RRS ),Min( MRS ,ARS ) ),( Max( CRS,AMS ) + ( FirstVNF_RAM_Server - RRS ) ) ),( ( Max( ARS,ACS ) * Max( FirstVNF_CPU,Const ) ) * ( ( DDR / FirstVNF_RAM ) * ( FirstVNF_RAM - ACS ) ) ) ) + ( Min( ( ( FirstVNF_Mem * DDR ) * ( RRS / MDR ) ) ,( Max( MRS,MRS ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) - Max( ( Min( BR ,FirstVNF_RAM ) - Min( DDR ,MRS ) ),( ( MDR / MDR ) + ( ACS + FirstVNF_CPU_Server ) ) ) ) ) ) + Max( Max( Min( Max( Min( Max( DDR,FirstVNF_Mem_Server ) ,Min( AMS ,FirstVNF_RAM ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,( ARS + FirstVNF_RAM ) ) ) ,( Max( ( MDR * PN ),( ACS / FirstVNF_RAM ) ) * ( ( PN - ACS ) - Min( FirstVNF_RAM ,RRS ) ) ) ),( ( Max( ( CRS / FirstVNF_RAM_Server ),( Const * ARS ) ) - Max( Min( RRS ,AMS ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * Max( ( Min( Const ,ACS ) + ( MDR / PN ) ),Max( ( PN - Const ),( RRS + FirstVNF_Mem_Server ) ) ) ) ),( ( Min( ( Min( PN ,BR ) / ( CRS * MRS ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + ( MRS / FirstVNF_RAM ) ) ) + ( ( ( ACS / FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( Max( MRS,ARS ) / Min( FirstVNF_Mem_Server ,PN ) ) ) ) / ( Max( ( ( BR / FirstVNF_RAM_Server ) / ( FirstVNF_CPU + BR ) ),( ( PN + FirstVNF_RAM_Server ) - ( PN * FirstVNF_Mem ) ) ) * Min( ( ( FirstVNF_Mem_Server * Const ) / Min( AMS ,FirstVNF_RAM ) ) ,Max( Max( MDR,Const ),( FirstVNF_RAM * Const ) ) ) ) ) ) ) + ( ( ( Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ( Max( MRS,Const ) / ( AMS - DDR ) ) ) ,Max( Min( ( DDR / BR ) ,( AMS + PN ) ),( ( RRS / PN ) + Max( CRS,FirstVNF_CPU ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,DDR ),( BR - MRS ) ) / ( Min( FirstVNF_RAM ,RRS ) / ( FirstVNF_CPU_Server - BR ) ) ) * Min( ( ( MRS - PN ) / Min( ACS ,FirstVNF_RAM ) ) ,Max( Min( FirstVNF_CPU_Server ,CRS ),( CRS / ACS ) ) ) ) ) * ( ( Min( ( ( ACS - PN ) / ( MDR + BR ) ) ,( Min( FirstVNF_RAM_Server ,MDR ) - Min( PN ,FirstVNF_CPU_Server ) ) ) / Min( ( ( AMS - CRS ) - Min( ACS ,FirstVNF_RAM_Server ) ) ,( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) - Min( ( Max( ( CRS - MRS ),Max( PN,FirstVNF_RAM ) ) / ( Min( FirstVNF_CPU ,MRS ) / ( Const + BR ) ) ) ,( Max( ( FirstVNF_RAM * MDR ),Min( PN ,MDR ) ) + Min( Min( FirstVNF_Mem ,RRS ) ,( ARS / Const ) ) ) ) ) ) + Min( ( Max( ( ( Max( CRS,CRS ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) + ( ( FirstVNF_CPU + CRS ) / ( DDR + Const ) ) ),Max( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),( ARS + RRS ) ),( Max( FirstVNF_CPU,MDR ) * ( ACS * FirstVNF_RAM ) ) ) ) - ( Min( ( ( BR + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) ,( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + ( RRS * PN ) ) ) / Max( ( ( RRS - CRS ) + Max( FirstVNF_CPU_Server,Const ) ),Max( ( FirstVNF_CPU_Server * MDR ),( Const + AMS ) ) ) ) ) ,( ( ( Max( ( FirstVNF_Mem + FirstVNF_CPU ),( ARS - ACS ) ) * ( ( ACS + MDR ) + Min( Const ,FirstVNF_Mem_Server ) ) ) * ( Max( ( BR / FirstVNF_Mem ),( MRS - RRS ) ) + ( Min( PN ,AMS ) * ( BR * MRS ) ) ) ) + ( Min( ( ( CRS / DDR ) / ( Const + MDR ) ) ,Min( ( ACS * Const ) ,( Const - CRS ) ) ) + Max( ( Max( MDR,AMS ) + ( FirstVNF_Mem_Server / Const ) ),( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,RRSe ) / Min( Min( ( MUM * MUM ) ,( Min( ( MUM * CS ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) ) ,RMSe ) )", "obj1": 0.252, "obj2": 0.5375118630667}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS + AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM / RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_RAM + RRS ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.36, "obj2": 0.46999525498710065}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "Max( FirstVNF_CPU,Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.192, "obj2": 0.5816340760596688}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) ) - ( MDR - PN ) ) )", "choosing": "( ( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.42, "obj2": 0.32557556556280454}, {"determining": "( ( ARS + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) * ( Max( ( CRS * CRS ),DDR ) + Max( PN,AMS ) ) ) )", "choosing": "( ( Min( Max( RMSe,RCSe ) ,( RCSe / MUC ) ) + ( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( ( DS + RCSe ),( MUC / RCSe ) ) - MUR ) - ( MUR * RRSe ) ) ) ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) )", "obj1": 0.326, "obj2": 0.4961485008153669}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * BR ) ) / ( PN * Max( Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ),( Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( CS,( MUC / RCSe ) ) - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.164, "obj2": 0.6246669399578665}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( Min( PN ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) ) / ( MDR - PN ) ) ) )", "choosing": "( Min( ( ( Min( ( MUM * ( MUR * RRSe ) ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) ,RCSe ) - ( ( ( MUC * MLU ) * RMSe ) + RMSe ) )", "obj1": 0.18, "obj2": 0.6146494969216019}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) ) - ( MDR - PN ) ) )", "choosing": "( Min( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) ,RCSe ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.496, "obj2": 0.2731906474548411}, {"determining": "Min( ( ( BR / BR ) / ( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) * FirstVNF_CPU_Server ) ) ,( Min( PN ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) ) - ( MDR - PN ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( DS ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.374, "obj2": 0.3566482349551842}, {"determining": "Max( FirstVNF_CPU,( Min( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - ( Max( MRS,Const ) / ( AMS - DDR ) ) ) ,Max( Min( ( DDR / BR ) ,( AMS + PN ) ),( ( RRS / PN ) + Max( CRS,FirstVNF_CPU ) ) ) ) - ( ( Max( Min( FirstVNF_CPU_Server ,DDR ),( BR - MRS ) ) / ( Min( FirstVNF_RAM ,RRS ) / ( FirstVNF_CPU_Server - BR ) ) ) * Min( ( ( MRS - PN ) / Min( ACS ,FirstVNF_RAM ) ) ,Max( Min( FirstVNF_CPU_Server ,CRS ),( CRS / ACS ) ) ) ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * ( Max( RCSe,RRSe ) / Min( RRSe ,CS ) ) ) * CS ) + RMSe ) )", "obj1": 0.262, "obj2": 0.5318889305343791}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( RRS - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.276, "obj2": 0.5176352849528298}, {"determining": "Min( ( ( BR / Max( MDR,( FirstVNF_CPU + RRS ) ) ) / ( CRS * FirstVNF_CPU_Server ) ) ,( Min( PN ,FirstVNF_CPU ) - ( MDR - PN ) ) )", "choosing": "( Max( RCSe,RRSe ) / Min( Min( ( MUR * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) ,CS ) )", "obj1": 0.5, "obj2": 0.2706195070084078}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,MUR ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.134, "obj2": 0.6418614078756888}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( Min( FirstVNF_CPU_Server ,Max( Max( MDR,ARS ),Max( FirstVNF_Mem,DDR ) ) ) ,AMS ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( MUM * CS ) + MUC ) )", "obj1": 0.304, "obj2": 0.4987048904780887}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.196, "obj2": 0.5814634135096027}], "7": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( CRS * BR ) ) / ( PN * Max( ( CRS * ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) - Min( ( RRS + FirstVNF_RAM ) ,FirstVNF_RAM ) ) ),DDR ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,( MUM / RMSe ) ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( ( Min( ( RCSe * MUC ) ,( MLU + CS ) ) / Max( ( DS + RCSe ),( ( RMSe - MLU ) - Min( DS ,DS ) ) ) ) - MUR ) - ( MUR * Min( ( RMSe * RCSe ) ,Min( RCSe ,RCSe ) ) ) ) ) )", "obj1": 0.074, "obj2": 0.7048697787203729}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( Min( FirstVNF_CPU_Server ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) ,AMS ) ) )", "choosing": "( Min( DS ,MUC ) - Max( ( MUM * CS ),RMSe ) )", "obj1": 0.296, "obj2": 0.5081022350579681}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( RRS ,AMS ) ) )", "choosing": "( Min( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) ,DS ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.18, "obj2": 0.6146494969216019}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.114, "obj2": 0.6659673053166679}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.226, "obj2": 0.5495860223231572}, {"determining": "( ( FirstVNF_RAM_Server * ( AMS * BR ) ) / ( PN * Max( FirstVNF_CPU,( FirstVNF_RAM * ARS ) ) ) )", "choosing": "( ( Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) + Min( ( MUM - CS ) ,Min( MLU ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( DS - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.068, "obj2": 0.7173356006898567}, {"determining": "Max( FirstVNF_CPU,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RCSe / MUC ) / ( MLU + MLU ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) + CS ) - RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS + AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM / RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "Max( FirstVNF_CPU,Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.192, "obj2": 0.5816340760596688}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * BR ) ) / ( PN * Max( Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ),( Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( CS,( MUC / RCSe ) ) - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.164, "obj2": 0.6246669399578665}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( Min( PN ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) ) / ( MDR - PN ) ) ) )", "choosing": "( Min( ( ( Min( ( MUM * ( MUR * RRSe ) ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) ,RCSe ) - ( ( ( MUC * MLU ) * RMSe ) + RMSe ) )", "obj1": 0.18, "obj2": 0.6146494969216019}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( RRS - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.276, "obj2": 0.5176352849528298}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,MUR ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.134, "obj2": 0.6418614078756888}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( Min( FirstVNF_CPU_Server ,Max( Max( MDR,ARS ),Max( FirstVNF_Mem,DDR ) ) ) ,AMS ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( MUM * CS ) + MUC ) )", "obj1": 0.304, "obj2": 0.4987048904780887}, {"determining": "Max( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ),Min( MDR ,Min( Min( FirstVNF_CPU_Server ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) ) ,AMS ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( MUM * CS ) + RMSe ) )", "obj1": 0.304, "obj2": 0.4987048904780887}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( Min( FirstVNF_CPU_Server ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ) ) ,AMS ) ) )", "choosing": "( Min( DS ,RCSe ) - ( ( MUM * CS ) + RMSe ) )", "obj1": 0.304, "obj2": 0.4987048904780887}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.192, "obj2": 0.5816340760596688}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( Min( Max( ( RRS - FirstVNF_RAM ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) - FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( Max( RCSe,MUC ) / ( MUM + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "( Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) - ( ( AMS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( CS * RCSe ) + Max( MLU,MLU ) ) * ( Min( MUC ,MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.184, "obj2": 0.583258977456552}, {"determining": "( ( ARS * Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * MRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( Min( DS ,RCSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe - MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_RAM_Server ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + MLU ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * BR ) ) / ( Min( RRS ,AMS ) * Max( Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ),( Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( MUC - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.164, "obj2": 0.6246669399578665}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( RRS ,AMS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( CS,( MUC / RCSe ) ) - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.164, "obj2": 0.6246669399578665}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.144, "obj2": 0.6264873397397593}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,( RRS - FirstVNF_Mem_Server ) ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( RCSe,( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.274, "obj2": 0.5224323419868153}, {"determining": "Max( ( DDR / ARS ),Max( ( ( FirstVNF_RAM + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( Min( MUM ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.226, "obj2": 0.5495860223231572}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.134, "obj2": 0.6418614078756888}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU_Server,( Max( FirstVNF_Mem,DDR ) * MDR ) ) ) ) ) - ( ( ACS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( CS * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.11, "obj2": 0.667598124095674}, {"determining": "Max( FirstVNF_CPU,Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( AMS,DDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * MUR ) + Max( Min( MUC ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.194, "obj2": 0.5767801118045965}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,MUR ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.138, "obj2": 0.6409015886823878}, {"determining": "Max( ( RRS - FirstVNF_Mem_Server ),Min( MDR ,MDR ) )", "choosing": "( ( ( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.196, "obj2": 0.5732256709486663}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ),Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( CS * CS ) + RMSe ) )", "obj1": 0.282, "obj2": 0.513305109094579}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) - RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUC * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "Max( CRS,( FirstVNF_RAM * MDR ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( ( ( MUC / RCSe ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) ) / DS ) + Max( MUC,MUM ) )", "obj1": 0.048, "obj2": 0.7442834933732291}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "Max( FirstVNF_CPU,Max( RRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / ( DS + RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.114, "obj2": 0.6659673053166679}, {"determining": "Max( ( CRS * FirstVNF_CPU_Server ),( FirstVNF_RAM * MDR ) )", "choosing": "( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.238, "obj2": 0.5437685777533295}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( Min( FirstVNF_CPU_Server ,Max( Max( FirstVNF_Mem,DDR ),Max( FirstVNF_Mem,DDR ) ) ) ,AMS ) ) )", "choosing": "( Min( DS ,RCSe ) - ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) )", "obj1": 0.322, "obj2": 0.4678289744588172}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.244, "obj2": 0.5326884257562625}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( Min( FirstVNF_CPU_Server ,Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) ,AMS ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * ( Max( RCSe,RRSe ) / Min( RRSe ,CS ) ) ) * CS ) + RMSe ) )", "obj1": 0.272, "obj2": 0.5246985417846077}, {"determining": "( ( ( RRS - FirstVNF_RAM ) + Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_RAM ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) ) )", "obj1": 0.06, "obj2": 0.7274066330196972}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_CPU * BR ) ) / ( PN * Max( Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ),( Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( ( ( ( MUC * MLU ) * CS ) + RMSe ) - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.176, "obj2": 0.6236152917358843}, {"determining": "Max( FirstVNF_CPU,( PN * Max( Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ),( Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) * MDR ) ) ) )", "choosing": "( ( ( MUM * ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.264, "obj2": 0.5268814875736338}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,MDR ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( CS,( MUC / RCSe ) ) - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.164, "obj2": 0.6246669399578665}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( Min( FirstVNF_CPU_Server ,Max( Max( MDR,ARS ),Max( FirstVNF_Mem,DDR ) ) ) ,FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ,RCSe ) - ( ( MUM * CS ) + MUC ) )", "obj1": 0.234, "obj2": 0.5449937169739226}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.252, "obj2": 0.5288167777652003}], "8": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "Max( FirstVNF_CPU,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RCSe / MUC ) / ( MLU + MLU ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) + CS ) - RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS + AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM / RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "Max( FirstVNF_CPU,Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.192, "obj2": 0.5816340760596688}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * BR ) ) / ( PN * Max( Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ),( Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( CS,( MUC / RCSe ) ) - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.164, "obj2": 0.6246669399578665}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,MUR ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.134, "obj2": 0.6418614078756888}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.192, "obj2": 0.5816340760596688}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( Min( Max( ( RRS - FirstVNF_RAM ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) - FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( Max( RCSe,MUC ) / ( MUM + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "( Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) - ( ( AMS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( CS * RCSe ) + Max( MLU,MLU ) ) * ( Min( MUC ,MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.184, "obj2": 0.583258977456552}, {"determining": "( ( ARS * Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * MRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( Min( DS ,RCSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe - MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_RAM_Server ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + MLU ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * BR ) ) / ( Min( RRS ,AMS ) * Max( Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ),( Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( MUC - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.164, "obj2": 0.6246669399578665}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( RRS ,AMS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( CS,( MUC / RCSe ) ) - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.164, "obj2": 0.6246669399578665}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.144, "obj2": 0.6264873397397593}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.134, "obj2": 0.6418614078756888}, {"determining": "Max( FirstVNF_CPU,Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( PN ,FirstVNF_CPU ),ARS ),Max( AMS,DDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * MUR ) + Max( Min( MUC ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.194, "obj2": 0.5767801118045965}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,MUR ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.138, "obj2": 0.6409015886823878}, {"determining": "Max( ( RRS - FirstVNF_Mem_Server ),Min( MDR ,MDR ) )", "choosing": "( ( ( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.196, "obj2": 0.5732256709486663}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) - RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUC * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,MDR ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( CS,( MUC / RCSe ) ) - MUR ) - ( MUR * RRSe ) ) ) )", "obj1": 0.164, "obj2": 0.6246669399578665}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( Min( Min( Max( ( RRS - FirstVNF_Mem_Server ),ARS ) ,FirstVNF_CPU ) ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + MUC ),( ( ( RCSe * MUC ) / ( RCSe + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( RCSe - MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( Max( RRS,FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM / RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.214, "obj2": 0.555292605119614}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.078, "obj2": 0.6896589244540734}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ),Min( MDR ,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / Max( ( DS + MLU ),( MUC / RCSe ) ) ) ) )", "obj1": 0.048, "obj2": 0.7346853328812525}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.194, "obj2": 0.5767801118045965}, {"determining": "Max( ( RRS - FirstVNF_Mem_Server ),( MDR / CRS ) )", "choosing": "( ( ( ( ( ( RCSe * MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( DS / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( Max( MUC,MLU ) * Min( MLU ,CS ) ) ) ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.196, "obj2": 0.5732256709486663}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.192, "obj2": 0.5816340760596688}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + MUM ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.176, "obj2": 0.6021846428995747}, {"determining": "( DDR - ( ( RRS / FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / RRSe ) * Min( MLU ,CS ) ) ) )", "obj1": 0.144, "obj2": 0.6264873397397593}, {"determining": "Max( FirstVNF_CPU,( RRS - ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.132, "obj2": 0.6458131080116991}, {"determining": "Max( FirstVNF_CPU,( RRS - FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6905716351424261}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,MUR ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.138, "obj2": 0.6409015886823878}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,MUR ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.106, "obj2": 0.6625336317800098}, {"determining": "Max( CRS,Max( Min( PN ,FirstVNF_CPU ),ARS ) )", "choosing": "( ( Min( ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ,( ( ( MUC / RCSe ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) ) / DS ) + Max( MUC,MUM ) )", "obj1": 0.044, "obj2": 0.7656171998567807}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( ( PN * FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + ( Min( MUC ,MUR ) * MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.194, "obj2": 0.5767801118045965}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( ARS,DDR ) ),Min( MDR ,( ( CRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * MUM ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( RRSe ,CS ) ) ) )", "obj1": 0.134, "obj2": 0.6418614078756888}, {"determining": "Max( FirstVNF_CPU,Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( Min( MDR ,Min( RRS ,AMS ) ) ,FirstVNF_CPU ),ARS ),Max( AMS,DDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * MUR ) + Max( Min( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.182, "obj2": 0.5898352706685853}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ARS ,AMS ) ) )", "choosing": "( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) * Max( ( Max( DS,MUM ) / ( CS * DS ) ),( ( Max( CS,( MUC / RCSe ) ) - MUR ) - ( MUC / RCSe ) ) ) )", "obj1": 0.164, "obj2": 0.6246669399578665}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + ( Min( MUC ,MUR ) + MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.118, "obj2": 0.6504256527741074}, {"determining": "( ( ( RRS - FirstVNF_RAM ) + Max( FirstVNF_CPU,( FirstVNF_CPU + ACS ) ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / ( ( DS + RCSe ) / ( MUC / RCSe ) ) ) ) )", "obj1": 0.054, "obj2": 0.7258209083405189}], "9": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "Max( FirstVNF_CPU,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RCSe / MUC ) / ( MLU + MLU ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) + CS ) - RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS + AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM / RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( Min( Max( ( RRS - FirstVNF_RAM ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) - FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( Max( RCSe,MUC ) / ( MUM + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "( Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) - ( ( AMS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( CS * RCSe ) + Max( MLU,MLU ) ) * ( Min( MUC ,MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.184, "obj2": 0.583258977456552}, {"determining": "( ( ARS * Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * MRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( Min( DS ,RCSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe - MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_RAM_Server ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + MLU ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) * FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) - RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( Min( Min( Max( ( RRS - FirstVNF_Mem_Server ),ARS ) ,FirstVNF_CPU ) ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + MUC ),( ( ( RCSe * MUC ) / ( RCSe + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( RCSe - MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.214, "obj2": 0.555292605119614}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ),Min( MDR ,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / Max( ( DS + MLU ),( MUC / RCSe ) ) ) ) )", "obj1": 0.048, "obj2": 0.7346853328812525}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + MUM ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.176, "obj2": 0.6021846428995747}, {"determining": "Max( FirstVNF_CPU,Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( Min( MDR ,Min( RRS ,AMS ) ) ,FirstVNF_CPU ),ARS ),Max( AMS,DDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * MUR ) + Max( Min( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.182, "obj2": 0.5898352706685853}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + ( Min( MUC ,MUR ) + MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * Min( DS ,RMSe ) ) )", "obj1": 0.042, "obj2": 0.7629523892942471}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( Min( Min( Max( ( RRS - FirstVNF_Mem_Server ),ARS ) ,FirstVNF_CPU ) ,FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + MUC ),( ( ( RCSe * MUC ) / ( RCSe + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "Max( Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ),Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),Max( MLU,MLU ) ) ) * CS ) + RMSe ) )", "obj1": 0.256, "obj2": 0.5369530680188402}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.074, "obj2": 0.6876732414234799}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC - MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "Max( FirstVNF_CPU,( RRS - FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "Max( FirstVNF_CPU,Min( AMS ,( ( Min( Max( ( RRS - FirstVNF_RAM ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) - FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * ( ( DS + RCSe ) * ( ( Max( RCSe,MUC ) / ( MUM + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.192, "obj2": 0.5713293700958486}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( Max( FirstVNF_CPU,Min( MDR ,Min( RRS ,AMS ) ) ) + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RCSe ) ,Max( DS,( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.162, "obj2": 0.6083343028750461}, {"determining": "( DDR - ( ( FirstVNF_RAM * MDR ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUM / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.112, "obj2": 0.6458598628064368}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.048, "obj2": 0.7346853328812525}, {"determining": "Max( FirstVNF_CPU,Min( PN ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Max( MLU,CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.202, "obj2": 0.5684813061901526}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ),Min( MDR ,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / Max( ( DS + MLU ),( MUC / RCSe ) ) ) ) )", "obj1": 0.052, "obj2": 0.7324784378145269}, {"determining": "( DDR - ( ( Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUM * RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.156, "obj2": 0.6173160372854801}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.092, "obj2": 0.6778541649087803}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.142, "obj2": 0.621808805863587}, {"determining": "Max( FirstVNF_CPU,Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + RMSe ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.22, "obj2": 0.5503247721148982}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.076, "obj2": 0.6788033142971533}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),( DDR + ACS ) ) ,FirstVNF_RAM_Server ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( DS * Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / MLU ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.228, "obj2": 0.5457783962419416}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.13, "obj2": 0.6297659207675197}, {"determining": "( DDR - ( ( RRS / FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / RRSe ) * Min( MLU ,CS ) ) ) )", "obj1": 0.12, "obj2": 0.6402499748827372}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( AMS + RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( ( DS + RCSe ) + CS ) ) / Min( DS ,MUR ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.102, "obj2": 0.6562130577367186}, {"determining": "Max( FirstVNF_CPU,Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( Min( MDR ,Min( RRS ,AMS ) ) ,FirstVNF_CPU ),ARS ),Max( AMS,DDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * MUR ) + Max( Min( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.182, "obj2": 0.5898352706685853}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( MUM / RCSe ) + Max( MLU,MLU ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + ( Min( MUC ,MUR ) * MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.188, "obj2": 0.5783928587726557}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / AMS ) )", "choosing": "( ( Max( ( RCSe / MUC ),( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( CS * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.184, "obj2": 0.583258977456552}, {"determining": "( Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "( DDR - ( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( MLU * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.094, "obj2": 0.6696221684559178}, {"determining": "( DDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( DS * Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC + MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( ( ( MUC * MLU ) * CS ) * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) + Min( MLU ,CS ) ) ) )", "obj1": 0.072, "obj2": 0.6896248573252785}, {"determining": "( ( Const * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * ( MLU / CS ) ) ) )", "obj1": 0.076, "obj2": 0.6788033142971533}, {"determining": "( ( FirstVNF_RAM_Server * ( CRS * BR ) ) / ( PN * Max( Max( FirstVNF_CPU,( FirstVNF_CPU + RRS ) ),( Min( MDR ,( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) ) * MDR ) ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( Max( RCSe,MUC ) / ( MUM + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.242, "obj2": 0.5391117643389207}], "10": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( FirstVNF_CPU,( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( RCSe / MUC ) / ( MLU + MLU ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) + CS ) - RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS + AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM / RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "( Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) - ( ( AMS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( CS * RCSe ) + Max( MLU,MLU ) ) * ( Min( MUC ,MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.184, "obj2": 0.583258977456552}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * RCSe ) + Max( MLU,MLU ) ) - ( ( ( MUC * MLU ) * CS ) + RMSe ) )", "obj1": 0.21, "obj2": 0.5669686963882731}, {"determining": "Max( FirstVNF_CPU,Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( Min( MDR ,Min( RRS ,AMS ) ) ,FirstVNF_CPU ),ARS ),Max( AMS,DDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * MUR ) + Max( Min( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.182, "obj2": 0.5898352706685853}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + ( Min( MUC ,MUR ) + MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * Min( DS ,RMSe ) ) )", "obj1": 0.042, "obj2": 0.7629523892942471}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.074, "obj2": 0.6876732414234799}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC - MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "Max( FirstVNF_CPU,( RRS - FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "Max( FirstVNF_CPU,Min( AMS ,( ( Min( Max( ( RRS - FirstVNF_RAM ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) - FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * ( ( DS + RCSe ) * ( ( Max( RCSe,MUC ) / ( MUM + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.192, "obj2": 0.5713293700958486}, {"determining": "( DDR - ( ( FirstVNF_RAM * MDR ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUM / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.112, "obj2": 0.6458598628064368}, {"determining": "Max( FirstVNF_CPU,Min( PN ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / Max( MLU,CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.202, "obj2": 0.5684813061901526}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.142, "obj2": 0.621808805863587}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.076, "obj2": 0.6788033142971533}, {"determining": "( DDR - ( ( RRS / FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / RRSe ) * Min( MLU ,CS ) ) ) )", "obj1": 0.12, "obj2": 0.6402499748827372}, {"determining": "Max( FirstVNF_CPU,Max( ( Min( RRS ,AMS ) / ( MRS * BR ) ),Max( Max( Min( Min( MDR ,Min( RRS ,AMS ) ) ,FirstVNF_CPU ),ARS ),Max( AMS,DDR ) ) ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * MUR ) + Max( Min( ( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) ,MUR ),MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.182, "obj2": 0.5898352706685853}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( RRS ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( MUM / RCSe ) + Max( MLU,MLU ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( MUM * RCSe ) + ( Min( MUC ,MUR ) * MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.188, "obj2": 0.5783928587726557}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / AMS ) )", "choosing": "( ( Max( ( RCSe / MUC ),( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( CS * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.184, "obj2": 0.583258977456552}, {"determining": "( DDR - ( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( MLU * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.094, "obj2": 0.6696221684559178}, {"determining": "( DDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( DS * Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC + MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( ( ( MUC * MLU ) * CS ) * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) + Min( MLU ,CS ) ) ) )", "obj1": 0.072, "obj2": 0.6896248573252785}, {"determining": "( ( Const * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * ( MLU / CS ) ) ) )", "obj1": 0.076, "obj2": 0.6788033142971533}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( ARS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( Max( ( DS + RCSe ),( ( ( RCSe * MUC ) / ( MLU + RMSe ) ) / RCSe ) ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.122, "obj2": 0.632151316348123}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.128, "obj2": 0.6284994716432448}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,( Min( ( RCSe / RMSe ) ,DS ) + Min( ( MUM - CS ) ,Min( RRSe ,CS ) ) ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.162, "obj2": 0.6003320023003947}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( ( ( RCSe * MUC ) / ( MLU + CS ) ),MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.088, "obj2": 0.6772035783006557}, {"determining": "( Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( CS * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.184, "obj2": 0.583258977456552}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ),Min( MDR ,( ( FirstVNF_RAM_Server - FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / Max( ( DS + MLU ),( MUC / RCSe ) ) ) ) )", "obj1": 0.048, "obj2": 0.73465349676004}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( ( FirstVNF_CPU_Server * MDR ),( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,RCSe ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.056, "obj2": 0.7076288573389374}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( ( FirstVNF_CPU * RRS ),( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + CS ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.134, "obj2": 0.6239700026865911}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.142, "obj2": 0.621808805863587}, {"determining": "Max( FirstVNF_CPU,Min( MDR ,Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / Max( ( DS + MLU ),( MUC / RCSe ) ) ) ) )", "obj1": 0.05, "obj2": 0.7305999593539528}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( Min( RRS ,FirstVNF_Mem_Server ) * FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe - MUC ) / ( MLU + CS ) ) / Max( Min( DS ,RCSe ),( MUC / RCSe ) ) ) / ( ( ( CS * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.184, "obj2": 0.583258977456552}, {"determining": "Max( FirstVNF_CPU,( RRS - FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.05, "obj2": 0.7305999593539528}, {"determining": "( DDR - ( ( RRS - ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( ( MUM * MUM ) ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.066, "obj2": 0.6997027387296029}, {"determining": "( Min( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / MUC ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( MUC / RCSe ) ) ) / ( ( ( CS * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.184, "obj2": 0.583258977456552}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( Max( FirstVNF_CPU,Min( MDR ,Min( RRS ,AMS ) ) ) + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( Min( DS ,RMSe ) - ( ( ( CS * Max( ( DS + RCSe ),( ( Max( RCSe,MUC ) / ( MUM + CS ) ) / RCSe ) ) ) * CS ) + RMSe ) )", "obj1": 0.192, "obj2": 0.5713293700958486}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * Min( DS ,RMSe ) ) )", "obj1": 0.042, "obj2": 0.7629523892942471}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUM * RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.154, "obj2": 0.6091265180586152}, {"determining": "Max( FirstVNF_CPU,( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * Min( DS ,RMSe ) ) )", "obj1": 0.042, "obj2": 0.7629523892942471}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( FirstVNF_RAM * MDR ) / ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MLU / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.102, "obj2": 0.6527173943582539}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUM / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.118, "obj2": 0.6416048931081538}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,Min( MUC ,MUR ) ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7371557039594462}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( ( ( MUC * MLU ) * CS ) * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.072, "obj2": 0.6896248573252785}], "11": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS + AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM / RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + ( Min( MUC ,MUR ) + MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * Min( DS ,RMSe ) ) )", "obj1": 0.042, "obj2": 0.7629523892942471}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.074, "obj2": 0.6876732414234799}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC - MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "Max( FirstVNF_CPU,( RRS - FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.076, "obj2": 0.6788033142971533}, {"determining": "( DDR - ( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( MLU * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.094, "obj2": 0.6696221684559178}, {"determining": "( DDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( DS * Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC + MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( ( ( MUC * MLU ) * CS ) * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) + Min( MLU ,CS ) ) ) )", "obj1": 0.072, "obj2": 0.6896248573252785}, {"determining": "( ( Const * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * ( MLU / CS ) ) ) )", "obj1": 0.076, "obj2": 0.6788033142971533}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( ( FirstVNF_CPU_Server * MDR ),( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,RCSe ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.056, "obj2": 0.7076288573389374}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "Max( FirstVNF_CPU,( RRS - FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * Min( DS ,RMSe ) ) )", "obj1": 0.042, "obj2": 0.7629523892942471}, {"determining": "Max( FirstVNF_CPU,( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * Min( DS ,RMSe ) ) )", "obj1": 0.042, "obj2": 0.7629523892942471}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,Min( MUC ,MUR ) ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7371557039594462}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,DDR ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( ( ( MUC * MLU ) * CS ) * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.072, "obj2": 0.6896248573252785}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - ( MDR + Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / MUC ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.058, "obj2": 0.7032213999155406}, {"determining": "( ( ARS * ( MRS * MDR ) ) - ( ( DDR - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM + MUM ) ,Max( DS,Max( RRSe,MUC ) ) ) * DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "Max( FirstVNF_CPU,Min( Min( MDR ,Min( RRS ,AMS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / Min( ( RCSe / RMSe ) ,DS ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * Min( DS ,RMSe ) ) )", "obj1": 0.042, "obj2": 0.7629523892942471}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * Min( DS ,RMSe ) ) )", "obj1": 0.042, "obj2": 0.7629523892942471}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) - ( FirstVNF_RAM * MDR ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) + DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( FirstVNF_Mem_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( ( FirstVNF_CPU_Server * MDR ),( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( Min( MUM ,RCSe ) + Max( MLU,RCSe ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.056, "obj2": 0.7076288573389374}, {"determining": "Max( FirstVNF_CPU,( RRS - FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6788033142971533}, {"determining": "Max( FirstVNF_CPU,( RRS - BR ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC * MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * Min( DS ,RMSe ) ) )", "obj1": 0.042, "obj2": 0.7629523892942471}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,RCSe ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.056, "obj2": 0.7076288573389374}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( ARS / FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Min( Min( MUC ,MUR ) ,MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,MLU ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( ( ( MUC * MLU ) * CS ) * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) + Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.719764632117854}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,Min( MUC ,MUR ) ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7371557039594462}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( ( ( MUC * MLU ) * CS ) * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) + Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.719764632117854}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.074, "obj2": 0.6876732414234799}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / RCSe ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.058, "obj2": 0.7032213999155406}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( FirstVNF_CPU,( RRS - FirstVNF_Mem_Server ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.668976015176916}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,Max( Min( MUC ,MUR ),MLU ) ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.082, "obj2": 0.6762353034079513}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6788033142971533}, {"determining": "( DDR - ( ( ( ( Min( Max( ( RRS - FirstVNF_RAM ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) - FirstVNF_RAM ) / FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( RCSe / ( ( CS * Max( ( DS + RCSe ),( MUC / RCSe ) ) ) * CS ) ) / ( MLU + CS ) ) / Min( DS ,RCSe ) ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( Max( RCSe,MUC ) / ( MUM + CS ) ) ) )", "obj1": 0.088, "obj2": 0.6719827785726228}], "12": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + ( Min( MUC ,MUR ) + MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC - MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "( DDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( DS * Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC + MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( ( FirstVNF_CPU_Server * MDR ),( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,RCSe ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.056, "obj2": 0.7076288573389374}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - ( MDR + Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / MUC ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.058, "obj2": 0.7032213999155406}, {"determining": "( ( ARS * ( MRS * MDR ) ) - ( ( DDR - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM + MUM ) ,Max( DS,Max( RRSe,MUC ) ) ) * DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) - ( FirstVNF_RAM * MDR ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) + DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( FirstVNF_Mem_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( ( FirstVNF_CPU_Server * MDR ),( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( Min( MUM ,RCSe ) + Max( MLU,RCSe ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.056, "obj2": 0.7076288573389374}, {"determining": "Max( FirstVNF_CPU,( RRS - BR ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC * MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,RCSe ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.056, "obj2": 0.7076288573389374}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( ARS / FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Min( Min( MUC ,MUR ) ,MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,MLU ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( ( ( MUC * MLU ) * CS ) * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) + Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.719764632117854}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( ( ( MUC * MLU ) * CS ) * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) + Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.719764632117854}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / RCSe ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.058, "obj2": 0.7032213999155406}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "Max( ( DDR / ARS ),Min( ( ( RRS + AMS ) / ( MRS * BR ) ) ,Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( RCSe / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,Max( Max( Min( ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,Min( MUC ,MUR ) ) ) ) / DS ) + Max( MUC,MUM ) ) / ( MLU + CS ) ) / Max( ( DS + RCSe ),( ( MUC / MLU ) * Min( Max( MUM,MUC ) ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7337562192860236}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.058, "obj2": 0.7032213999155406}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.066, "obj2": 0.6917278103752229}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,RCSe ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.056, "obj2": 0.7076288573389374}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( Min( RRS ,FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM + RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.058, "obj2": 0.7032213999155406}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( MRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.058, "obj2": 0.7032213999155406}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( ( FirstVNF_CPU_Server * MDR ),( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,RCSe ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.056, "obj2": 0.7076288573389374}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( ( FirstVNF_CPU_Server * MDR ),( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,( ( MUC / MUR ) * Min( MLU ,CS ) ) ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,RCSe ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.056, "obj2": 0.7076288573389374}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( Min( MLU ,CS ),MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "( DDR - ( ( ( ( Min( Max( ( RRS - FirstVNF_RAM ),ARS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) + FirstVNF_RAM ) / FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,RCSe ) ) * ( ( RCSe / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.056, "obj2": 0.7076288573389374}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.7098818691423098}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( ( FirstVNF_CPU_Server * MDR ),( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,RCSe ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.056, "obj2": 0.7076288573389374}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) + Min( MLU ,CS ) ) ) )", "obj1": 0.058, "obj2": 0.7032213999155406}], "13": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( ( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ) - ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + ( Min( MUC ,MUR ) + MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( DS * Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC + MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - ( MDR + Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / MUC ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * ( MRS * MDR ) ) - ( ( DDR - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM + MUM ) ,Max( DS,Max( RRSe,MUC ) ) ) * DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( ARS / FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Min( Min( MUC ,MUR ) ,MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,MLU ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / RCSe ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Min( ( ( RRS + AMS ) / ( MRS * BR ) ) ,Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( RCSe / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.066, "obj2": 0.6917278103752229}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( MRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( RRS * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( ( MUM * RCSe ) / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.072, "obj2": 0.6893665790978208}, {"determining": "Max( Max( Max( FirstVNF_Mem_Server,ARS ),Max( FirstVNF_Mem,Max( Max( Min( ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) ),Min( PN ,FirstVNF_CPU ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * ( FirstVNF_RAM * DDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Max( ( MUM * MUM ),Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * ARS ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( Max( DS,Max( MUM,MUC ) ) ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + MDR ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * ( MLU * CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( MRS,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( ARS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,CS ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( ( RRS - FirstVNF_Mem_Server ) * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / DS ) / ( ( ( MUM * RCSe ) + Max( Min( MLU ,CS ),MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7337461230395328}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server - MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( DS / DS ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( DDR - ( ( RRS + FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC + MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( Max( Min( Max( FirstVNF_CPU,ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( ( Max( Min( PN ,FirstVNF_CPU ),ARS ) / FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( RRSe * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( ( FirstVNF_CPU_Server * MDR ),( ( ( RRS + AMS ) / ( MRS * BR ) ) * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( Max( DS,Max( MUM,MUC ) ),MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,RCSe ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.7131653466912778}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - RRS ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.066, "obj2": 0.6917278103752229}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6911116581550594}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.066, "obj2": 0.6917278103752229}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.066, "obj2": 0.6917278103752229}], "14": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - ( MDR + Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / MUC ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * ( MRS * MDR ) ) - ( ( DDR - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM + MUM ) ,Max( DS,Max( RRSe,MUC ) ) ) * DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.066, "obj2": 0.6917278103752229}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( DDR - ( ( MRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( RRS * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( ( MUM * RCSe ) / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.072, "obj2": 0.6893665790978208}, {"determining": "( ( ARS * ( FirstVNF_RAM * DDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Max( ( MUM * MUM ),Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( ARS * ARS ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( Max( DS,Max( MUM,MUC ) ) ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + MDR ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * ( MLU * CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( ( RRS - FirstVNF_Mem_Server ) * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / DS ) / ( ( ( MUM * RCSe ) + Max( Min( MLU ,CS ),MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7337461230395328}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server - MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( DS / DS ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( ( Max( Min( PN ,FirstVNF_CPU ),ARS ) / FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( RRSe * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - RRS ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.066, "obj2": 0.6917278103752229}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.066, "obj2": 0.6917278103752229}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.066, "obj2": 0.6917278103752229}, {"determining": "( DDR - ( ( ( RRS + AMS ) - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( Max( Min( MUC ,MUR ),MLU ) ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.078, "obj2": 0.6872270786823222}, {"determining": "( ( ARS * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6881856810359704}, {"determining": "( ( ARS * Max( FirstVNF_CPU,Max( FirstVNF_CPU,Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / CS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * CRS ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUM / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( AMS * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( DS + Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( FirstVNF_CPU_Server * Max( RRS,( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * MRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * MUR ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MLU ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6881856810359704}, {"determining": "( DDR - ( RRS / RRS ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.104, "obj2": 0.6635396585555552}, {"determining": "( ( ARS * ARS ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( Max( DS,Max( MUM,MUC ) ) ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( CS * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,DS ),MLU ) ) ) * MUM ) )", "obj1": 0.042, "obj2": 0.7489530859482383}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( FirstVNF_RAM_Server - ( BR * ( Const - ACS ) ) ) - ( CRS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( ( Max( ( RMSe / DS ),( MUR - RCSe ) ) * ( Min( MUC ,MUR ) * ( MUC * MUC ) ) ) / Max( ( Min( RCSe ,CS ) + ( MLU / MUM ) ),( Max( CS,DS ) * Max( RMSe,MUC ) ) ) ),( ( ( Min( MUC ,CS ) * Max( RRSe,RRSe ) ) - ( ( RRSe * MLU ) / Max( MLU,MLU ) ) ) + ( ( ( MLU * MUC ) * ( RRSe - RRSe ) ) + Max( ( RRSe - RRSe ),Max( MLU,MUR ) ) ) ) ) - ( ( ( Min( ( RRSe - MUC ) ,( DS * MUM ) ) - Max( ( CS + MUR ),Min( RRSe ,MUM ) ) ) / ( ( ( MUC * RMSe ) - ( RRSe * MUR ) ) / ( Min( MUC ,MUR ) + ( RCSe * RRSe ) ) ) ) / Max( ( Max( Min( MUC ,RCSe ),( CS - DS ) ) + ( ( MUM * MLU ) / ( RRSe / CS ) ) ),( ( ( CS + CS ) * ( CS + RMSe ) ) / Min( ( DS / RRSe ) ,Max( MUC,MLU ) ) ) ) ) ) - ( Max( ( ( ( Max( RCSe,MUR ) * ( MLU + RRSe ) ) * ( ( MUR - MLU ) / Min( RMSe ,MUR ) ) ) * Max( Max( ( CS / MLU ),Min( MUC ,RMSe ) ),( Max( MUC,CS ) * ( RRSe * RRSe ) ) ) ),Max( ( ( Min( RMSe ,RCSe ) / ( CS - RCSe ) ) / ( Max( MUM,MUR ) - ( MUM - RRSe ) ) ),( ( ( MUM - RMSe ) + ( MUR + MLU ) ) + Min( Max( MUC,RMSe ) ,Max( MUR,MLU ) ) ) ) ) - Max( ( ( ( ( CS * MUM ) + ( MUR + CS ) ) + ( ( DS / MUC ) + Min( MUM ,DS ) ) ) + ( Min( Max( DS,MUR ) ,( RCSe - RRSe ) ) * ( ( RCSe / MUM ) * Min( CS ,DS ) ) ) ),( ( ( ( CS + MUC ) - ( MLU - MUR ) ) + Min( ( MLU - MLU ) ,( RCSe / DS ) ) ) * ( ( Max( RMSe,RRSe ) * ( MLU / RCSe ) ) - Max( Max( MLU,MUC ),( DS / MUR ) ) ) ) ) ) ) - ( ( ( ( ( ( ( MUC * RRSe ) / ( MUM * RRSe ) ) / Max( Min( CS ,MUR ),Min( CS ,MUC ) ) ) - ( Max( ( MUM * CS ),( MUC / DS ) ) - Min( Min( RRSe ,MUM ) ,( DS - RRSe ) ) ) ) * ( ( Max( Max( MUC,MUR ),Min( MUM ,MUC ) ) + ( Max( RCSe,CS ) - ( RMSe - DS ) ) ) * Min( ( ( MUC * CS ) + ( MLU + RCSe ) ) ,( Min( CS ,MLU ) * ( MUM * MUC ) ) ) ) ) * ( ( ( ( ( RMSe * MLU ) + ( CS + MUM ) ) * ( ( MUR / MLU ) + ( RCSe - RCSe ) ) ) * Max( ( ( MUM - RCSe ) - ( RMSe - DS ) ),Max( Max( MUR,RRSe ),( MUM - MUR ) ) ) ) * Min( ( Max( Min( MUR ,MLU ),Min( MUR ,CS ) ) - ( Max( RCSe,DS ) + Max( RRSe,CS ) ) ) ,( ( ( MUM * MLU ) + ( MLU - RRSe ) ) - ( ( CS + CS ) - ( MLU * RRSe ) ) ) ) ) ) * ( ( ( ( ( ( MUR * DS ) / Min( RMSe ,MUC ) ) / ( ( RRSe + CS ) - ( RMSe / DS ) ) ) / ( ( ( MUR * MUC ) - Max( RRSe,RRSe ) ) / Min( Min( RRSe ,MUM ) ,( MUC * MUM ) ) ) ) + ( ( Max( Min( CS ,MUR ),( MLU + MLU ) ) - ( ( MUM * RCSe ) - ( MUR + RCSe ) ) ) / ( ( ( RMSe / RRSe ) * ( MUM / MUC ) ) * Max( Min( MUC ,MUM ),( DS / MUM ) ) ) ) ) + ( ( ( ( Max( MUM,RCSe ) * ( MLU + MUM ) ) / Max( Max( DS,MUR ),( RRSe + RRSe ) ) ) + ( Max( Min( RMSe ,RCSe ),( MLU / MUR ) ) * ( Max( RRSe,RCSe ) / ( MLU / MUM ) ) ) ) * ( ( ( Max( RMSe,MUC ) / ( CS * MLU ) ) / ( ( MLU / MLU ) * ( MUR + RMSe ) ) ) + ( Max( ( RMSe * RMSe ),( CS / MUM ) ) - ( ( MUR / MLU ) - ( RMSe + DS ) ) ) ) ) ) ) )", "obj1": 0.308, "obj2": 0.5238802863694172}, {"determining": "Max( ( DDR / ( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ) ),Max( ( ( RRS + AMS ) / ( Const * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC + MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.162, "obj2": 0.6144542530228895}, {"determining": "Max( ( DDR / ARS ),Max( ( ( DDR + AMS ) / ( MRS * BR ) ),Max( ( FirstVNF_CPU_Server * MDR ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( ( ( MUM * MUM ) * Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.126, "obj2": 0.6396091432016655}, {"determining": "( DDR - ( ( RRS - ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( Min( MLU ,CS ) * Min( MLU ,CS ) ) ) )", "obj1": 0.08, "obj2": 0.6825919223690788}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.066, "obj2": 0.6917278103752229}, {"determining": "( ( ARS * ( FirstVNF_CPU * ( FirstVNF_CPU + ( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( MUM,Max( MUM,MUC ) ) ) / RCSe ) / ( ( MUC + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.204, "obj2": 0.5727533059754921}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS / FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / RCSe ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( RRSe ,CS ) ) ) )", "obj1": 0.202, "obj2": 0.5818025897159529}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * ACS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( MUM,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * CRS ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( Max( MUM,RCSe ) + ( ( MUM * RCSe ) + Max( Min( Max( DS,Max( MUM,MUC ) ) ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * Max( MDR,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( DS ,Min( MLU ,CS ) ) ) ) )", "obj1": 0.066, "obj2": 0.6917278103752229}, {"determining": "( AMS - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( MUC / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.254, "obj2": 0.527223699302514}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.066, "obj2": 0.6917278103752229}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( ( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( Min( MUC ,MUR ),MLU ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.068, "obj2": 0.6905160417414339}, {"determining": "( ( ARS * ( MRS * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / Max( Min( PN ,FirstVNF_CPU ),ARS ) ) )", "choosing": "( Min( DS ,DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.222, "obj2": 0.5574734965059336}, {"determining": "( ( ARS * Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ) ) - ( ( ARS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) * Min( MLU ,CS ) ) ) )", "obj1": 0.124, "obj2": 0.6496819785979789}, {"determining": "Max( ( Max( MRS,CRS ) * FirstVNF_RAM ),( AMS - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( ( MUR - CS ) * Max( MLU,RRSe ) )", "obj1": 0.344, "obj2": 0.479493160624889}, {"determining": "( ( ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),RRSe ) ) ) * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.05, "obj2": 0.7084602068361562}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS * FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( Max( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ),DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),( ARS - FirstVNF_Mem_Server ) ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( MUM / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.082, "obj2": 0.6731465495721718}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( RRS * MDR ) ) ) ) ) - ( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( ( MUM * RCSe ) / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.096, "obj2": 0.6696252144622457}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( ARS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.076, "obj2": 0.6881856810359704}], "15": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - ( MDR + Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / MUC ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * ( MRS * MDR ) ) - ( ( DDR - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM + MUM ) ,Max( DS,Max( RRSe,MUC ) ) ) * DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( DDR - ( ( MRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * ( FirstVNF_RAM * DDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Max( ( MUM * MUM ),Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( ARS * ARS ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( Max( DS,Max( MUM,MUC ) ) ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + MDR ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * ( MLU * CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( ( RRS - FirstVNF_Mem_Server ) * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / DS ) / ( ( ( MUM * RCSe ) + Max( Min( MLU ,CS ),MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7337461230395328}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server - MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( DS / DS ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( ( Max( Min( PN ,FirstVNF_CPU ),ARS ) / FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( RRSe * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - RRS ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,Max( FirstVNF_CPU,Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / CS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * CRS ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUM / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( AMS * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( DS + Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( FirstVNF_CPU_Server * Max( RRS,( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * MRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * MUR ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MLU ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * ARS ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( Max( DS,Max( MUM,MUC ) ) ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( CS * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,DS ),MLU ) ) ) * MUM ) )", "obj1": 0.042, "obj2": 0.7489530859482383}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * ACS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( MUM,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * CRS ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( Max( MUM,RCSe ) + ( ( MUM * RCSe ) + Max( Min( Max( DS,Max( MUM,MUC ) ) ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS * FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( Max( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ),DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * ( FirstVNF_RAM * MDR ) ) - ( Max( RRS,FirstVNF_Mem_Server ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( CS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Max( MUM,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( ( RRS - FirstVNF_Mem_Server ) * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / DS ) / ( ( ( MUM * RCSe ) + Max( Min( MLU ,CS ),MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7337461230395328}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,Max( DS,Max( Min( MUC ,MUR ),MLU ) ) ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ACS - ( ( RRS - FirstVNF_Mem_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( RRSe,MLU ) ) * ( ( MUC / MLU ) + Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( ( RRS - FirstVNF_Mem_Server ) * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / DS ) / ( ( ( MUM * RCSe ) + Max( Min( MLU ,CS ),MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7337461230395328}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( AMS - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( Max( DS,Max( MUM,MUC ) ) ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,Min( FirstVNF_RAM ,PN ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUR ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Max( MLU,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( ( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU * ( FirstVNF_RAM * PN ) ) ) ) ) ) ) - ( ( ARS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) - ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.7071683058410375}, {"determining": "( ( ARS * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( ( RRS - FirstVNF_Mem_Server ) * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / DS ) / ( ( ( MUM * RCSe ) + Max( Min( MLU ,CS ),MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7337461230395328}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Min( FirstVNF_CPU ,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM * MUM ) + Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.048, "obj2": 0.7078466785809086}, {"determining": "Max( Min( Max( MRS,CRS ) ,FirstVNF_RAM ),( AMS - ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / DS ) / ( ( ( MUM * RCSe ) + Max( Min( MLU ,CS ),MLU ) ) * ( ( MUC / MUR ) * Min( MUC ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7337461230395328}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * ( FirstVNF_CPU / ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + ( Min( MUC ,MUR ) + MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * ACS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( MUM,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * ARS ) - Min( MDR ,Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( Max( DS,Max( MUC,MUC ) ) ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * ARS ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( Max( DS,Max( MUM,MUC ) ) ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.062, "obj2": 0.6950095531664194}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - BR ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,( MUM / MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}], "16": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( MRS * MDR ) ) - ( ( DDR - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM + MUM ) ,Max( DS,Max( RRSe,MUC ) ) ) * DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( DDR - ( ( MRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * ( FirstVNF_RAM * DDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Max( ( MUM * MUM ),Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server - MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( DS / DS ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( ( Max( Min( PN ,FirstVNF_CPU ),ARS ) / FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( RRSe * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - RRS ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,Max( FirstVNF_CPU,Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / CS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * CRS ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUM / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( AMS * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( DS + Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( FirstVNF_CPU_Server * Max( RRS,( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * MRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * MUR ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MLU ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( CS * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,DS ),MLU ) ) ) * MUM ) )", "obj1": 0.042, "obj2": 0.7489530859482383}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * ACS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( MUM,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS * FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( Max( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ),DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * ( FirstVNF_RAM * MDR ) ) - ( Max( RRS,FirstVNF_Mem_Server ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( CS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Max( MUM,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ACS - ( ( RRS - FirstVNF_Mem_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( RRSe,MLU ) ) * ( ( MUC / MLU ) + Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Max( MLU,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( ( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU * ( FirstVNF_RAM * PN ) ) ) ) ) ) ) - ( ( ARS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) - ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.7071683058410375}, {"determining": "( ( ARS * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Min( FirstVNF_CPU ,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM * MUM ) + Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.048, "obj2": 0.7078466785809086}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * ( FirstVNF_CPU / ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + ( Min( MUC ,MUR ) + MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * ACS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( MUM,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - BR ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,( MUM / MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) ) ) - ( ( ARS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.7071683058410375}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( ( RRS - FirstVNF_Mem_Server ) * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "Max( ( DDR * ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( ( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) - Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * ACS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( MUM,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) ) ) - ( ( ARS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.7071683058410375}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_RAM * PN ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * ARS ) - Min( MDR ,Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( ARS * ARS ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * ( FirstVNF_RAM * DDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / DS ) / ( ( ( MUM * RCSe ) + Max( Min( MLU ,CS ),MLU ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7333554814720947}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,Min( FirstVNF_RAM ,PN ) ) ) ) + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( Min( RRS ,FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( CS * MUM ) ,Max( DS,Max( MUM,Max( DS,Max( MUM,MUC ) ) ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * ACS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / ( RRS - AMS ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / CS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}], "17": [{"determining": "( ( ARS - ACS ) - Min( CRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR / DS ) ,Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( MRS * MDR ) ) - ( ( DDR - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM + MUM ) ,Max( DS,Max( RRSe,MUC ) ) ) * DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( DDR - ( ( MRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * ( FirstVNF_RAM * DDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Max( ( MUM * MUM ),Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( ARS * ( FirstVNF_Mem_Server - MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( DS / DS ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( ( Max( Min( PN ,FirstVNF_CPU ),ARS ) / FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( RRSe * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - RRS ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MLU ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,Max( FirstVNF_CPU,Max( FirstVNF_CPU,( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / CS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * CRS ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUM / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( AMS * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,( DS + Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( FirstVNF_CPU_Server * Max( RRS,( FirstVNF_CPU + Max( FirstVNF_RAM_Server,( FirstVNF_CPU * MRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * MUR ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MLU ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * FirstVNF_Mem ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( CS * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,DS ),MLU ) ) ) * MUM ) )", "obj1": 0.042, "obj2": 0.7489530859482383}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * ACS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( MUM,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS * FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( Max( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ),DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * ( FirstVNF_RAM * MDR ) ) - ( Max( RRS,FirstVNF_Mem_Server ) * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( CS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Max( MUM,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ACS - ( ( RRS - FirstVNF_Mem_Server ) * FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( RRSe,MLU ) ) * ( ( MUC / MLU ) + Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_RAM ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Max( MLU,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( ( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU * ( FirstVNF_RAM * PN ) ) ) ) ) ) ) - ( ( ARS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) - ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.7071683058410375}, {"determining": "( ( ARS * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Min( FirstVNF_CPU ,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM * MUM ) + Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.048, "obj2": 0.7078466785809086}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * ( FirstVNF_CPU / ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU_Server * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + ( Min( MUC ,MUR ) + MLU ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.054, "obj2": 0.6969928755530468}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) ) ) - ( ( ARS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.7071683058410375}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( ( RRS - FirstVNF_Mem_Server ) * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "Max( ( DDR * ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( ( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) - Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) ) ) - ( ( ARS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.7071683058410375}, {"determining": "( ( ARS * ARS ) - Min( MDR ,Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( FirstVNF_RAM * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.046, "obj2": 0.721845567396728}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( ( RRS - FirstVNF_Mem_Server ) * MDR ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * ( FirstVNF_RAM * DDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Max( ( MUM * MUM ),Max( DS,Max( RCSe,MUC ) ) ) / DS ) / ( ( MUC / MLU ) * Min( MLU ,CS ) ) )", "obj1": 0.048, "obj2": 0.7078466785809086}, {"determining": "( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * PN ) ) ) ) ) ) ) - ( ( ARS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.7071683058410375}, {"determining": "( ( ARS * Max( FirstVNF_CPU,( FirstVNF_CPU + ( FirstVNF_CPU + ( FirstVNF_RAM * MDR ) ) ) ) ) - ( ( RRS - AMS ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU,( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) ) ) - ( ( RRS - FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * ( ARS * DDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( MUM * MUM ) ,Max( DS,Max( RCSe,MUC ) ) ) / DS ) / DS ) / ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) * ( ( MUC / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.044, "obj2": 0.7265013236077368}, {"determining": "( ( ARS * ( FirstVNF_RAM * DDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * ARS ) - Min( MDR ,Min( ( ( FirstVNF_CPU + Max( FirstVNF_CPU,( FirstVNF_CPU * RRS ) ) ) - FirstVNF_RAM ) ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "( ( ARS * ( FirstVNF_RAM * MDR ) ) - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUM * MUM ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + ( ( MUM * RCSe ) + Max( Min( MUC ,MUR ),MLU ) ) ) * ( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / MUR ) * Min( MLU ,CS ) ) ) )", "obj1": 0.052, "obj2": 0.7071683058410375}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( MRS * BR ) ),Max( Max( Min( Max( Min( PN ,FirstVNF_CPU ),ARS ) ,FirstVNF_CPU ),ARS ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}, {"determining": "Max( ( DDR / ARS ),Max( ( ( RRS + AMS ) / ( ARS * BR ) ),Max( ( DDR - ( ( RRS - FirstVNF_Mem_Server ) / FirstVNF_RAM ) ),Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( Min( ( MUM * RRSe ) ,Max( DS,Max( MUM,MUC ) ) ) / DS ) / ( ( ( MUM * RCSe ) + Max( MLU,MLU ) ) * ( ( MUC / MLU ) * Min( MLU ,DS ) ) ) )", "obj1": 0.04, "obj2": 0.7575401306234633}]}