{"1": [{"determining": "( Min( Const ,FirstVNF_Mem_Server ) / ( PN - FirstVNF_Mem ) )", "choosing": "( ( CS * MUM ) + ( RMSe / RRSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "Min( Min( RRS ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( CS * RMSe ) / Min( DS ,RCSe ) )", "obj1": 0.17330677290836655, "obj2": 0.7573590775554542}, {"determining": "( Min( Const ,PN ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( MUM / MUC ) * ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - RRS ) + ( ACS / MRS ) )", "choosing": "Min( ( MUC - CS ) ,( RCSe * CS ) )", "obj1": 0.3705179282868526, "obj2": 0.5589342423333584}, {"determining": "( ( MRS - Const ) * ( RRS + FirstVNF_RAM ) )", "choosing": "Min( Max( MUM,DS ) ,Max( RCSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / MDR ) / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUR - CS ),Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( Max( MUC,( ( ( ( DS * DS ) / Max( Min( Min( CS ,RRSe ) ,RCSe ),( RMSe / MUR ) ) ) + Max( MUC,MLU ) ) + MUR ) ) / ( RMSe / MUC ) )", "obj1": 0.9123505976095617, "obj2": 0.07843283705416218}, {"determining": "Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,Min( ( ( Min( ( ( AMS + ( AMS + FirstVNF_CPU_Server ) ) - PN ) ,ARS ) / ARS ) / FirstVNF_CPU_Server ) ,DDR ) )", "choosing": "( ( RMSe + RCSe ) / Max( RRSe,CS ) )", "obj1": 0.25298804780876494, "obj2": 0.698620178182587}, {"determining": "Max( ( RRS / FirstVNF_CPU_Server ),Min( Const ,FirstVNF_RAM ) )", "choosing": "Max( Max( MUC,MUM ),( RMSe + RCSe ) )", "obj1": 0.37250996015936255, "obj2": 0.5527200040272353}, {"determining": "Max( ( Const * MRS ),( FirstVNF_RAM / DDR ) )", "choosing": "Min( ( MUC / RRSe ) ,Min( MUM ,DS ) )", "obj1": 0.45617529880478086, "obj2": 0.4844853118612854}, {"determining": "Max( ( MDR / ARS ),( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( RRSe / RMSe ) - Min( DS ,CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6267068753703793}, {"determining": "( ( Max( BR,BR ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) * ( AMS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / Min( MUC ,RMSe ) ) - Max( Max( RMSe,MLU ),( MLU - MUM ) ) )", "obj1": 0.7470119521912351, "obj2": 0.2000394977682703}, {"determining": "Min( ( PN + DDR ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU * ( Max( FirstVNF_Mem_Server,RRS ) - ( PN + ( ACS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / Min( MLU ,RCSe ) ) - ( MUC + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5668484461420139}, {"determining": "( ( ARS * PN ) - ( ( DDR + AMS ) / ACS ) )", "choosing": "( ( ( DS - DS ) / Max( MUC,MUM ) ) + ( ( RMSe / CS ) / Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS * AMS ) ,( MDR - FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( AMS - FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM + MUR ) + ( MUC / MLU ) ) ,( ( MUM - DS ) / ( RRSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( AMS / MDR ) )", "choosing": "( Min( MLU ,( MLU * DS ) ) + Min( MLU ,( DS + MUC ) ) )", "obj1": 0.42828685258964144, "obj2": 0.5043922395708575}, {"determining": "( Min( FirstVNF_RAM ,( MRS + ( CRS - ( RRS + CRS ) ) ) ) * ( ( RRS + FirstVNF_CPU ) / Max( DDR,RRS ) ) )", "choosing": "Max( ( Max( MLU,( Max( CS,RMSe ) / CS ) ) + ( CS - RRSe ) ),Min( Max( CS,MUC ) ,( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,RRS ) + ( MDR + MRS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUC ,RRSe ) - CS ) / ( ( RRSe * MLU ) / MUR ) )", "obj1": 0.43824701195219123, "obj2": 0.4975132856377501}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( FirstVNF_CPU + Min( PN ,ACS ) ) )", "choosing": "( ( Min( MLU ,MUC ) + Min( MUM ,MUR ) ) * ( RCSe * Max( MUR,RMSe ) ) )", "obj1": 0.4860557768924303, "obj2": 0.46587203052277837}, {"determining": "( Min( Min( Const ,MRS ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / DDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( RCSe,MUC ) / Min( RMSe ,RRSe ) ),( ( RRSe / MLU ) - ( RCSe * MLU ) ) )", "obj1": 0.6055776892430279, "obj2": 0.4349586204650685}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / Max( MDR,AMS ) )", "choosing": "Min( ( ( RCSe + MUC ) / MLU ) ,( Max( MUM,RRSe ) * DS ) )", "obj1": 0.6673306772908366, "obj2": 0.3128592101102287}, {"determining": "( ( ARS + FirstVNF_Mem_Server ) - ( Max( BR,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - ARS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MLU ) + ( ( RRSe / MUR ) - ( Max( ( ( ( RCSe * DS ) * RCSe ) / RMSe ),MUC ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Const ) - ( Max( FirstVNF_RAM_Server,MRS ) - CRS ) )", "choosing": "( Min( ( CS - CS ) ,( MUM * CS ) ) / ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,ARS ) * ( Min( ARS ,FirstVNF_CPU ) + AMS ) ) + ( ( MRS - MDR ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( Max( ( RCSe + MUM ),RRSe ) ,( RCSe * MUM ) ) * Min( Max( CS,MUC ) ,( MUM * DS ) ) )", "obj1": 0.4541832669322709, "obj2": 0.48669989934549085}, {"determining": "Min( ( PN / ARS ) ,( DDR - ( FirstVNF_CPU / RRS ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + ( ( RCSe - MUR ) / ( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS - FirstVNF_Mem ) + CRS ) * MDR ) ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( FirstVNF_RAM_Server / Min( Max( Max( PN,( BR + Max( BR,FirstVNF_CPU ) ) ),( DDR - FirstVNF_RAM_Server ) ) ,( RRS / RRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + ( ( RRSe - MUM ) * CS ) ) / Min( Max( ( MLU + DS ),RMSe ) ,( ( Max( RRSe,MLU ) + RRSe ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),PN ) ,( BR + ACS ) )", "choosing": "( Max( ( Max( MUM,MUC ) / Min( DS ,MUM ) ),( ( MLU - MLU ) / ( CS - MUC ) ) ) + Min( Max( ( MUM + DS ),( RRSe - RRSe ) ) ,( Min( RCSe ,RRSe ) / Min( MLU ,CS ) ) ) )", "obj1": 0.18725099601593626, "obj2": 0.7417090788657581}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( MRS * FirstVNF_RAM ) ) - Min( Max( PN,ACS ) ,Max( DDR,DDR ) ) ) * Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ),Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,( MDR - ( FirstVNF_Mem / RRS ) ) ) ) ) )", "choosing": "Max( Min( ( ( CS - DS ) + ( DS / DS ) ) ,( ( MUC * CS ) * ( RCSe * RMSe ) ) ),( ( CS / MUM ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,MDR ) - ( BR / FirstVNF_Mem ) ) - ( ( AMS + FirstVNF_CPU ) + ( RRS / MDR ) ) ) ,Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( CRS + PN ) ) ,Min( ( ARS / MRS ) ,( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "Min( Max( ( ( RRSe - RMSe ) + ( MUR - MUC ) ),Min( ( RCSe + MUR ) ,Max( CS,MLU ) ) ) ,( ( ( RRSe - MUM ) + Max( RRSe,CS ) ) * Max( ( MUM * MUR ),Max( MLU,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( MRS,AMS ),MDR ) / ( MDR + ( FirstVNF_Mem / ( RRS / BR ) ) ) )", "choosing": "( ( ( Max( MUR,RRSe ) - ( MLU / RCSe ) ) + ( CS / ( RMSe - RMSe ) ) ) * ( MLU / MUM ) )", "obj1": 0.48406374501992033, "obj2": 0.47958232142344054}, {"determining": "( ( ( ( MRS / AMS ) / ( BR + FirstVNF_RAM ) ) / ( ( FirstVNF_RAM / DDR ) - Max( FirstVNF_RAM,ARS ) ) ) - Max( ( ( BR / RRS ) - Max( DDR,CRS ) ),Min( ( MDR - Const ) ,( ACS + FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( ( RRSe / MUR ) + ( MUC * RCSe ) ),( ( RCSe - RCSe ) - ( MLU - MUM ) ) ) ,Min( ( ( RMSe / MUC ) + Min( RRSe ,MUM ) ) ,( Min( CS ,MUR ) * ( RMSe - CS ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.01441380604554815}, {"determining": "Min( ( Max( Max( MDR,AMS ),( ARS - MRS ) ) * ( Max( FirstVNF_RAM,FirstVNF_RAM ) + Max( MDR,FirstVNF_CPU_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Max( Const,BR ) ) / ( ( ARS * PN ) + ( FirstVNF_CPU - BR ) ) ) )", "choosing": "( ( DS * DS ) / Min( Max( ( DS - CS ),MUM ) ,RRSe ) )", "obj1": 0.4103585657370518, "obj2": 0.5260866810096112}, {"determining": "( ( Max( ( RRS + CRS ),( FirstVNF_Mem * MRS ) ) - ( ( FirstVNF_Mem_Server * BR ) / ( DDR * RRS ) ) ) * ( ( Max( MDR,MDR ) + Min( PN ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU * BR ) - ( FirstVNF_Mem_Server + MDR ) ) ) )", "choosing": "( ( CS + MLU ) - Min( RMSe ,Max( ( MLU * MUC ),( ( DS * RMSe ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) - MDR ) / ( ( RRS / PN ) * MRS ) )", "choosing": "Max( ( ( Max( MUM,RMSe ) * ( MUM * RMSe ) ) + ( ( MLU * MUC ) + Min( MUR ,CS ) ) ),Max( ( MUR / MUM ),( ( MLU + CS ) * Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR * ARS ),( ( CRS + FirstVNF_RAM_Server ) * MRS ) )", "choosing": "( Min( Max( ( MUR / DS ),( MUM / RMSe ) ) ,( ( RCSe - RRSe ) * ( MUM + MUC ) ) ) - ( ( ( CS + RCSe ) + ( CS * CS ) ) - Max( ( DS * RMSe ),( MUR - RCSe ) ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5812699280873356}, {"determining": "( Min( DDR ,ARS ) - Max( Max( ACS,BR ),ARS ) )", "choosing": "Max( Max( ( Min( RMSe ,CS ) - ( RRSe + DS ) ),( Min( DS ,MLU ) * ( MUM - MUR ) ) ),( ( Min( ( ( MUM - ( CS - CS ) ) + ( MUM * MUC ) ) ,Min( MUC ,RRSe ) ) * Max( DS,CS ) ) * ( Max( RCSe,RMSe ) + ( RMSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Const - FirstVNF_Mem ) * ( PN / CRS ) ) + Max( ( ACS - RRS ),( CRS - PN ) ) ) ,( ( ( PN + Max( FirstVNF_CPU_Server,CRS ) ) + ( DDR - MDR ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + Min( CRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,MUM ) + RCSe ) - Max( RMSe,Max( ( MUM * MLU ),( RRSe + RCSe ) ) ) )", "obj1": 0.9402390438247012, "obj2": 0.051724689992251396}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( RRS + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + ( MUM / Min( CS ,( MUC + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Const,( ARS - RRS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) )", "choosing": "( ( ( MUM + Max( CS,CS ) ) * Min( DS ,( MUC / MUC ) ) ) + ( ( RCSe / DS ) + DS ) )", "obj1": 0.23306772908366533, "obj2": 0.7237968733317282}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * ( ( Min( FirstVNF_CPU ,Const ) - ( AMS + RRS ) ) / Min( ( FirstVNF_RAM_Server - Const ) ,Max( BR,( DDR / ARS ) ) ) ) )", "choosing": "( Min( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) - ( ( DS / Max( CS,RCSe ) ) / MUC ) )", "obj1": 0.7211155378486056, "obj2": 0.21944656204698634}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + ( ( Const - FirstVNF_Mem ) * ( MRS / Const ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MLU * MUM ) ) ,( ( RMSe / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ARS ,BR ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + Min( ( MDR / FirstVNF_CPU_Server ) ,( MRS * FirstVNF_Mem_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + BR ) ) * ( ( CRS / RRS ) + ( ARS / MRS ) ) ) )", "choosing": "( ( ( ( MUR - RRSe ) - MUR ) * CS ) - ( DS * MUC ) )", "obj1": 0.2689243027888446, "obj2": 0.6252126353034023}, {"determining": "( Max( ( ( DDR * PN ) / FirstVNF_RAM_Server ),AMS ) - ( ARS - RRS ) )", "choosing": "( ( ( ( CS / MUR ) * ( RMSe - CS ) ) + Max( Min( MUC ,MUM ),( MLU * MUC ) ) ) - ( ( ( RCSe / RMSe ) * ( CS / RRSe ) ) - ( Min( CS ,RMSe ) * ( MUR + MUC ) ) ) )", "obj1": 0.3804780876494024, "obj2": 0.5348483842913156}], "2": [{"determining": "( Min( Const ,FirstVNF_Mem_Server ) / ( PN - FirstVNF_Mem ) )", "choosing": "( ( CS * MUM ) + ( RMSe / RRSe ) )", "obj1": 0.9960159362549801, "obj2": 0.001594800309740281}, {"determining": "Min( Min( RRS ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( CS * RMSe ) / Min( DS ,RCSe ) )", "obj1": 0.17330677290836655, "obj2": 0.7573590775554542}, {"determining": "( Min( Const ,PN ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( MUM / MUC ) * ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( RRS + FirstVNF_RAM ) )", "choosing": "Min( Max( MUM,DS ) ,Max( RCSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / MDR ) / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUR - CS ),Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( Max( MUC,( ( ( ( DS * DS ) / Max( Min( Min( CS ,RRSe ) ,RCSe ),( RMSe / MUR ) ) ) + Max( MUC,MLU ) ) + MUR ) ) / ( RMSe / MUC ) )", "obj1": 0.9123505976095617, "obj2": 0.07843283705416218}, {"determining": "Max( ( MDR / ARS ),( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( RRSe / RMSe ) - Min( DS ,CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6267068753703793}, {"determining": "Min( ( PN + DDR ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU * ( Max( FirstVNF_Mem_Server,RRS ) - ( PN + ( ACS * FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,MUM ) / Min( MLU ,RCSe ) ) - ( MUC + RRSe ) )", "obj1": 0.31673306772908366, "obj2": 0.5668484461420139}, {"determining": "( ( ARS * PN ) - ( ( DDR + AMS ) / ACS ) )", "choosing": "( ( ( DS - DS ) / Max( MUC,MUM ) ) + ( ( RMSe / CS ) / Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS * AMS ) ,( MDR - FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( AMS - FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM + MUR ) + ( MUC / MLU ) ) ,( ( MUM - DS ) / ( RRSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( AMS / MDR ) )", "choosing": "( Min( MLU ,( MLU * DS ) ) + Min( MLU ,( DS + MUC ) ) )", "obj1": 0.42828685258964144, "obj2": 0.5043922395708575}, {"determining": "( Min( FirstVNF_RAM ,( MRS + ( CRS - ( RRS + CRS ) ) ) ) * ( ( RRS + FirstVNF_CPU ) / Max( DDR,RRS ) ) )", "choosing": "Max( ( Max( MLU,( Max( CS,RMSe ) / CS ) ) + ( CS - RRSe ) ),Min( Max( CS,MUC ) ,( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + FirstVNF_Mem_Server ) - ( Max( BR,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - ARS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MLU ) + ( ( RRSe / MUR ) - ( Max( ( ( ( RCSe * DS ) * RCSe ) / RMSe ),MUC ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Const ) - ( Max( FirstVNF_RAM_Server,MRS ) - CRS ) )", "choosing": "( Min( ( CS - CS ) ,( MUM * CS ) ) / ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ARS ) ,( DDR - ( FirstVNF_CPU / RRS ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + ( ( RCSe - MUR ) / ( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS - FirstVNF_Mem ) + CRS ) * MDR ) ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( FirstVNF_RAM_Server / Min( Max( Max( PN,( BR + Max( BR,FirstVNF_CPU ) ) ),( DDR - FirstVNF_RAM_Server ) ) ,( RRS / RRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + ( ( RRSe - MUM ) * CS ) ) / Min( Max( ( MLU + DS ),RMSe ) ,( ( Max( RRSe,MLU ) + RRSe ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_CPU_Server ),PN ) ,( BR + ACS ) )", "choosing": "( Max( ( Max( MUM,MUC ) / Min( DS ,MUM ) ),( ( MLU - MLU ) / ( CS - MUC ) ) ) + Min( Max( ( MUM + DS ),( RRSe - RRSe ) ) ,( Min( RCSe ,RRSe ) / Min( MLU ,CS ) ) ) )", "obj1": 0.18725099601593626, "obj2": 0.7417090788657581}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( MRS * FirstVNF_RAM ) ) - Min( Max( PN,ACS ) ,Max( DDR,DDR ) ) ) * Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ),Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,( MDR - ( FirstVNF_Mem / RRS ) ) ) ) ) )", "choosing": "Max( Min( ( ( CS - DS ) + ( DS / DS ) ) ,( ( MUC * CS ) * ( RCSe * RMSe ) ) ),( ( CS / MUM ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,MDR ) - ( BR / FirstVNF_Mem ) ) - ( ( AMS + FirstVNF_CPU ) + ( RRS / MDR ) ) ) ,Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( CRS + PN ) ) ,Min( ( ARS / MRS ) ,( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "Min( Max( ( ( RRSe - RMSe ) + ( MUR - MUC ) ),Min( ( RCSe + MUR ) ,Max( CS,MLU ) ) ) ,( ( ( RRSe - MUM ) + Max( RRSe,CS ) ) * Max( ( MUM * MUR ),Max( MLU,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / AMS ) / ( BR + FirstVNF_RAM ) ) / ( ( FirstVNF_RAM / DDR ) - Max( FirstVNF_RAM,ARS ) ) ) - Max( ( ( BR / RRS ) - Max( DDR,CRS ) ),Min( ( MDR - Const ) ,( ACS + FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( ( RRSe / MUR ) + ( MUC * RCSe ) ),( ( RCSe - RCSe ) - ( MLU - MUM ) ) ) ,Min( ( ( RMSe / MUC ) + Min( RRSe ,MUM ) ) ,( Min( CS ,MUR ) * ( RMSe - CS ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.01441380604554815}, {"determining": "Min( ( Max( Max( MDR,AMS ),( ARS - MRS ) ) * ( Max( FirstVNF_RAM,FirstVNF_RAM ) + Max( MDR,FirstVNF_CPU_Server ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Max( Const,BR ) ) / ( ( ARS * PN ) + ( FirstVNF_CPU - BR ) ) ) )", "choosing": "( ( DS * DS ) / Min( Max( ( DS - CS ),MUM ) ,RRSe ) )", "obj1": 0.4103585657370518, "obj2": 0.5260866810096112}, {"determining": "( ( Max( ( RRS + CRS ),( FirstVNF_Mem * MRS ) ) - ( ( FirstVNF_Mem_Server * BR ) / ( DDR * RRS ) ) ) * ( ( Max( MDR,MDR ) + Min( PN ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU * BR ) - ( FirstVNF_Mem_Server + MDR ) ) ) )", "choosing": "( ( CS + MLU ) - Min( RMSe ,Max( ( MLU * MUC ),( ( DS * RMSe ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) - MDR ) / ( ( RRS / PN ) * MRS ) )", "choosing": "Max( ( ( Max( MUM,RMSe ) * ( MUM * RMSe ) ) + ( ( MLU * MUC ) + Min( MUR ,CS ) ) ),Max( ( MUR / MUM ),( ( MLU + CS ) * Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR * ARS ),( ( CRS + FirstVNF_RAM_Server ) * MRS ) )", "choosing": "( Min( Max( ( MUR / DS ),( MUM / RMSe ) ) ,( ( RCSe - RRSe ) * ( MUM + MUC ) ) ) - ( ( ( CS + RCSe ) + ( CS * CS ) ) - Max( ( DS * RMSe ),( MUR - RCSe ) ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5812699280873356}, {"determining": "( Min( DDR ,ARS ) - Max( Max( ACS,BR ),ARS ) )", "choosing": "Max( Max( ( Min( RMSe ,CS ) - ( RRSe + DS ) ),( Min( DS ,MLU ) * ( MUM - MUR ) ) ),( ( Min( ( ( MUM - ( CS - CS ) ) + ( MUM * MUC ) ) ,Min( MUC ,RRSe ) ) * Max( DS,CS ) ) * ( Max( RCSe,RMSe ) + ( RMSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( RRS + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + ( MUM / Min( CS ,( MUC + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Const,( ARS - RRS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) )", "choosing": "( ( ( MUM + Max( CS,CS ) ) * Min( DS ,( MUC / MUC ) ) ) + ( ( RCSe / DS ) + DS ) )", "obj1": 0.23306772908366533, "obj2": 0.7237968733317282}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * ( ( Min( FirstVNF_CPU ,Const ) - ( AMS + RRS ) ) / Min( ( FirstVNF_RAM_Server - Const ) ,Max( BR,( DDR / ARS ) ) ) ) )", "choosing": "( Min( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) - ( ( DS / Max( CS,RCSe ) ) / MUC ) )", "obj1": 0.7211155378486056, "obj2": 0.21944656204698634}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + ( ( Const - FirstVNF_Mem ) * ( MRS / Const ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MLU * MUM ) ) ,( ( RMSe / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ARS ,BR ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + Min( ( MDR / FirstVNF_CPU_Server ) ,( MRS * FirstVNF_Mem_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + BR ) ) * ( ( CRS / RRS ) + ( ARS / MRS ) ) ) )", "choosing": "( ( ( ( MUR - RRSe ) - MUR ) * CS ) - ( DS * MUC ) )", "obj1": 0.2689243027888446, "obj2": 0.6252126353034023}, {"determining": "( Max( ( ( DDR * PN ) / FirstVNF_RAM_Server ),AMS ) - ( ARS - RRS ) )", "choosing": "( ( ( ( CS / MUR ) * ( RMSe - CS ) ) + Max( Min( MUC ,MUM ),( MLU * MUC ) ) ) - ( ( ( RCSe / RMSe ) * ( CS / RRSe ) ) - ( Min( CS ,RMSe ) * ( MUR + MUC ) ) ) )", "obj1": 0.3804780876494024, "obj2": 0.5348483842913156}, {"determining": "( MRS / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RCSe * RCSe ) - ( DS * RCSe ) ) - CS ),Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / MDR ) / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS * ARS ) * ( FirstVNF_RAM_Server - ARS ) ) * RRS ) + ( Const - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUR ) / ( Max( RRSe,RMSe ) / MUC ) )", "obj1": 0.9103585657370518, "obj2": 0.08091246254544116}, {"determining": "( ( DDR * RRS ) + ( Const - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUR ) / ( RMSe / MUC ) )", "obj1": 0.9123505976095617, "obj2": 0.07843283705416218}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( Max( MUC,( ( ( ( DS * DS ) / Max( Min( Min( CS ,RRSe ) ,RCSe ),( RMSe / MUR ) ) ) + Max( MUC,MLU ) ) + MUR ) ) / ( RMSe / MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.42277818809039314}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( Max( MUC,( ( ( ( DS * DS ) / Max( Min( Min( CS ,RRSe ) ,RCSe ),( RMSe / MUR ) ) ) + Max( MUC,MLU ) ) + MUR ) ) / ( RMSe / MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.42277818809039314}, {"determining": "( ( DDR * RRS ) + ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - RRS ) )", "choosing": "( Max( MUC,( ( ( ( DS * DS ) / Max( Min( Min( CS ,RRSe ) ,RCSe ),( RMSe / MUR ) ) ) + Max( MUC,MLU ) ) + MUR ) ) / ( RMSe / MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.42277818809039314}, {"determining": "( ( DDR * RRS ) + ( ARS - FirstVNF_CPU ) )", "choosing": "( Max( MUC,( ( ( ( DS * DS ) / Max( Min( ( DS + MUM ) ,RCSe ),Max( RMSe,MUR ) ) ) + Max( MUC,MLU ) ) + MUR ) ) / ( RMSe / MUC ) )", "obj1": 0.4960159362549801, "obj2": 0.42277818809039314}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ACS ) ) + ( ( Const - FirstVNF_Mem ) * Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MUC * MUM ) ) ,( ( ( RRSe + ( MUM * MUM ) ) / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + ( ( Const - FirstVNF_Mem ) * ( MRS / Const ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MLU * MUM ) ) ,( ( RMSe / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU * Max( CRS,AMS ) ) ) )", "choosing": "( ( ( RRSe - MUM ) / Min( MLU ,( MLU * MUR ) ) ) - Max( RRSe,RMSe ) )", "obj1": 0.33067729083665337, "obj2": 0.5477692464944657}, {"determining": "( FirstVNF_CPU * Min( ( MRS + ( FirstVNF_CPU_Server * PN ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( RMSe ,MLU ) * CS ) - RMSe ) / ( Min( RRSe ,CS ) * Max( ( CS - MUM ),RRSe ) ) ) * ( ( Min( MLU ,Min( MLU ,DS ) ) + Min( MLU ,( DS + MUC ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / Const ) ,ACS ) ,( AMS / ( BR - FirstVNF_RAM ) ) )", "choosing": "( Min( MLU ,( MLU * ( ( DS + DS ) / Min( ( ( Max( MUR,CS ) + ( MUM - MUC ) ) * ( DS * ( RCSe - RRSe ) ) ) ,CS ) ) ) ) + ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( MUM / MUC ) * ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( AMS / MDR ) )", "choosing": "( Min( MLU ,( MLU * DS ) ) + Min( MLU ,( DS + MUC ) ) )", "obj1": 0.42828685258964144, "obj2": 0.5043922395708575}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM * MRS ) ) - Min( Max( PN,ACS ) ,Max( ( ACS - RRS ),( CRS - PN ) ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( ( ( Min( MLU ,MUM ) + RCSe ) - Max( Max( ( MUM * MLU ),( RCSe * MUR ) ),RMSe ) ) * RMSe ) ) ),( ( ( RRSe / CS ) - ( MUM / MUC ) ) + Min( ( RMSe * MUM ) ,( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ACS - RRS ),( CRS - PN ) ) + ( ( Const - FirstVNF_Mem ) * ( PN / CRS ) ) ) ,( ( ( PN + RRS ) + ( DDR - MDR ) ) / ( ( FirstVNF_Mem_Server + ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) ) + Min( CRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( DS - CS ) + ( DS / DS ) ) - Max( Max( ( MUM * MLU ),( RCSe * MUR ) ),RMSe ) )", "obj1": 0.9342629482071713, "obj2": 0.04708136550427624}, {"determining": "Min( ( Max( ( ACS - RRS ),( CRS - PN ) ) + ( ( Const - FirstVNF_Mem ) * ( PN / CRS ) ) ) ,( ( ( RRS + PN ) + ( ( DDR + CRS ) - MDR ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + Min( CRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MLU ,MUM ) + ( MLU + RMSe ) ) - ( Max( ( MUM * MLU ),( RCSe * MUR ) ) + RMSe ) )", "obj1": 0.9322709163346613, "obj2": 0.05530821744878241}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM * MRS ) ) - Min( Min( PN ,ACS ) ,Max( DDR,DDR ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( ( RRS + CRS ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( CS * RMSe ) * ( RCSe * RMSe ) ) ),( ( ( RRSe / CS ) - ( Min( MUC ,RCSe ) * CS ) ) + Min( ( RMSe * MUM ) ,( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,ACS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( RRS + FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) * Min( ( Max( DDR,DDR ) / Min( FirstVNF_CPU ,DDR ) ) ,( ( FirstVNF_Mem_Server / ( ( ( RRS * MRS ) / RRS ) * MRS ) ) / Min( BR ,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU * ( AMS - ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( ( MUC + MUR ),( DS + RRSe ) ) ,MUM ) * ( ( ( RCSe * RMSe ) * Min( Min( Min( MUC ,MUC ) ,( MUC * RCSe ) ) ,( Min( RCSe ,CS ) * ( DS * RMSe ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,ACS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( RRS + FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) * Min( ( Max( DDR,DDR ) / Min( FirstVNF_CPU ,DDR ) ) ,( ( RRS * FirstVNF_CPU ) / Min( BR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,MUR ),( MUM - MUR ) ),( Min( CS ,MUM ) / ( CS + RMSe ) ) ) * Min( Min( Min( MUC ,MUC ) ,( MUC * RCSe ) ) ,( Min( RCSe ,RRSe ) * ( RMSe * DS ) ) ) )", "obj1": 0.45617529880478086, "obj2": 0.4684274841460875}, {"determining": "( ( Max( RRS,MDR ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) + Min( CRS ,FirstVNF_Mem_Server ) ) ) - ( Max( FirstVNF_RAM_Server,BR ) / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( Min( MLU ,MUM ) + ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.9820717131474104, "obj2": 0.01732366479532661}, {"determining": "Min( ( Max( ( ACS - RRS ),( CRS - PN ) ) + ( ( Const - FirstVNF_Mem ) * ( PN / CRS ) ) ) ,( ( ( PN + RRS ) + ( DDR - MDR ) ) / Max( FirstVNF_RAM_Server,BR ) ) )", "choosing": "( ( Min( MLU ,MUM ) + RCSe ) - Max( Max( ( MUM * ( ( ( MUM - RRSe ) * MLU ) + ( ( MUR / MUR ) - ( CS * RMSe ) ) ) ),( RCSe * MUR ) ),RMSe ) )", "obj1": 0.9302788844621513, "obj2": 0.057401096798269005}, {"determining": "( ( Max( RRS,MDR ) * Max( PN,Const ) ) - ( Max( FirstVNF_RAM_Server,BR ) / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MLU ) + ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( ( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + ( MUM / ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS - FirstVNF_Mem ) + CRS ) * MDR ) ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + ( MUM / Min( CS ,( MUC + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( RRS + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR * ( ( RRS - FirstVNF_Mem ) + CRS ) ) ,( ARS - ( Max( ( RRS - ( FirstVNF_Mem * ARS ) ),( FirstVNF_Mem / MDR ) ) + ARS ) ) )", "choosing": "Min( Min( Max( MUC,RCSe ) ,( RCSe + ( ( RCSe + CS ) + RCSe ) ) ) ,( Min( ( Max( DS,RMSe ) / CS ) ,( MUC / RCSe ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS - FirstVNF_Mem ) + CRS ) * MDR ) ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / AMS ) / ( BR + FirstVNF_RAM ) ) / ( ( FirstVNF_RAM / DDR ) - Max( FirstVNF_RAM,ARS ) ) ) - Max( ( ( BR / RRS ) - Max( DDR,CRS ) ),Max( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( FirstVNF_Mem_Server - PN ) ) / ( ( Const / RRS ) - ( FirstVNF_Mem + MDR ) ) ),( ( ( FirstVNF_Mem / DDR ) - Min( BR ,FirstVNF_CPU ) ) - Min( Max( FirstVNF_CPU,DDR ) ,( MDR + PN ) ) ) ) ) )", "choosing": "Min( Max( ( ( RRSe / MUR ) + ( MUC * RCSe ) ),( ( ( MLU * RMSe ) - ( MUC - RCSe ) ) * ( ( MUC / MLU ) / ( MUM + DS ) ) ) ) ,Min( ( ( RMSe / MUC ) + Min( RRSe ,MUM ) ) ,( Min( CS ,MUR ) * ( RMSe - CS ) ) ) )", "obj1": 0.9900398406374502, "obj2": 0.010589106823198685}, {"determining": "( ( ( ( MRS / AMS ) / ( BR + FirstVNF_RAM ) ) / ( ( FirstVNF_RAM / DDR ) - Max( FirstVNF_RAM,ARS ) ) ) - Max( ( ( BR / RRS ) - Max( DDR,CRS ) ),Min( ( MDR - Const ) ,( ACS + FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( ( RRSe / MUR ) + ( MUC * RCSe ) ),( ( RCSe - RCSe ) - ( MLU - MUM ) ) ) ,Min( ( ( RMSe / MUC ) + Min( RRSe ,MUM ) ) ,( Min( CS ,MUR ) * ( RMSe - CS ) ) ) )", "obj1": 0.9860557768924303, "obj2": 0.01441380604554815}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),Max( ( MUC * Min( ( RCSe * MLU ) ,DS ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),Max( ( MUC * Min( ( RCSe * MLU ) ,DS ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),Max( ( MUC * Min( ( RCSe * MLU ) ,DS ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( BR ,MRS ) + ( Min( Min( MDR ,PN ) ,AMS ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( MLU / MUM ) ),Max( ( ( MLU / MUC ) + Min( Max( MUC,MLU ) ,( ( ( ( RRSe - MUR ) - DS ) - MUM ) - DS ) ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * ( ( Min( Const ,FirstVNF_CPU ) - ( AMS + RRS ) ) / Min( ( DDR - Const ) ,Max( BR,ACS ) ) ) )", "choosing": "Min( ( MUR * RRSe ) ,Min( RCSe ,MUR ) )", "obj1": 0.7410358565737052, "obj2": 0.19830612601257797}, {"determining": "( ( ( FirstVNF_Mem_Server - ( Const - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( RCSe * RMSe ) ) ),( ( Max( MUM,MLU ) - ( MUM / MUC ) ) + Max( Min( Max( MUM,RMSe ) ,Min( ( MUR + CS ) ,( RCSe + RMSe ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUR - CS ),Max( MUM,Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( RCSe * RMSe ) ) ),( ( ( RRSe / CS ) - ( MUM / MUC ) ) + Min( ( RMSe * MUM ) ,( RMSe / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / MDR ) / ( DDR - ( MRS * FirstVNF_CPU ) ) )", "choosing": "Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( RRSe + RCSe ) ) ),( Min( ( RRSe / CS ) ,( MUM / MUC ) ) + Min( ( RMSe * MUM ) ,( MUM / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM * MRS ) ) - Min( Max( PN,ACS ) ,Max( DDR,DDR ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUR - CS ),Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.6235059760956175, "obj2": 0.3662415366434326}, {"determining": "( ( ( ( MRS / AMS ) / ( BR + FirstVNF_RAM ) ) / ( ( FirstVNF_RAM / DDR ) - Max( FirstVNF_RAM,ARS ) ) ) - Max( ( ( BR / RRS ) - Max( DDR,CRS ) ),Min( ( MDR - Const ) ,( ACS + FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( ( RRSe / MUR ) + ( MUC * RCSe ) ),( ( RCSe - RCSe ) - ( MLU - MUM ) ) ) ,Min( ( ( RMSe / MUC ) + Min( RRSe ,MUM ) ) ,( Min( CS ,MUR ) * ( RMSe - CS ) ) ) )", "obj1": 0.9840637450199203, "obj2": 0.016688047119709153}, {"determining": "( Max( ( FirstVNF_CPU / RRS ),Min( ARS ,FirstVNF_RAM ) ) * ( Min( Const ,MDR ) / FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( RCSe,DS ) ) * Min( Min( RRSe ,DS ) ,Max( ( RMSe / RCSe ),( ( MUC / MUR ) + ( MUR / Min( Max( MUM,RCSe ) ,( Max( DS,RRSe ) / MUC ) ) ) ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.4653043079817989}, {"determining": "( Max( ( FirstVNF_CPU / RRS ),Min( ARS ,FirstVNF_RAM ) ) * ( Min( Const ,MDR ) / FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( RCSe,DS ) ) * Min( Min( RRSe ,DS ) ,Max( ( RMSe / RCSe ),( ( MUC / MUR ) + ( MUR / Min( Max( MUM,RCSe ) ,( Max( DS,RRSe ) / MUC ) ) ) ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.4653043079817989}, {"determining": "( Max( ( FirstVNF_CPU / RRS ),Min( ARS ,FirstVNF_RAM ) ) * ( Min( Const ,MDR ) / FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( RCSe,DS ) ) * Min( Min( RRSe ,DS ) ,Max( ( RMSe / RCSe ),( ( MUC / MUR ) + ( MUR / Min( Max( MUM,RCSe ) ,( Max( DS,RRSe ) / MUC ) ) ) ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.4653043079817989}, {"determining": "( Max( ( FirstVNF_CPU / RRS ),Min( ARS ,FirstVNF_RAM ) ) * ( Min( Const ,MDR ) / FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( RCSe,DS ) ) * Min( Min( RRSe ,DS ) ,Max( ( RMSe / RCSe ),( ( MUC / MUR ) + ( MUR / Min( Max( MUM,RCSe ) ,( Max( DS,RRSe ) / MUC ) ) ) ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.4653043079817989}, {"determining": "Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Max( Max( Const,MDR ),( PN * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,RMSe ) / ( Min( DS ,RCSe ) - Max( RRSe,DS ) ) )", "obj1": 0.2410358565737052, "obj2": 0.6612461739717331}, {"determining": "Max( ( Min( CRS ,( ( FirstVNF_CPU_Server * MDR ) + Max( MDR,PN ) ) ) / Min( FirstVNF_CPU ,MRS ) ),( Max( ARS,FirstVNF_CPU ) / ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "Max( ( RRSe + DS ),( RRSe / DS ) )", "obj1": 0.20916334661354583, "obj2": 0.7369864642633018}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) + Max( BR,Max( ( RRS + FirstVNF_RAM_Server ),ARS ) ) )", "choosing": "Max( ( MUR * Max( DS,Min( ( CS - Max( ( ( MLU - MUM ) - MUC ),Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( RRSe + DS ) )", "obj1": 0.19322709163346613, "obj2": 0.7388225997647285}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * ( ( Min( Const ,FirstVNF_CPU ) - ( AMS + RRS ) ) / Min( ( DDR - Const ) ,Max( BR,ACS ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUR ) ,RCSe ) / MUC ) - Min( ( Max( RCSe,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) )", "obj1": 0.7211155378486056, "obj2": 0.21944656204698634}, {"determining": "( Min( Const ,FirstVNF_Mem_Server ) / Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * MUM ) + Min( ( ( ( RMSe / DS ) - MLU ) + ( MLU * MUM ) ) ,( ( RMSe / MUR ) - MLU ) ) )", "obj1": 0.6215139442231076, "obj2": 0.39382598182612805}, {"determining": "( ( Const - PN ) - ( FirstVNF_Mem_Server * MDR ) )", "choosing": "( ( RRSe - ( ( RRSe / RMSe ) - Min( DS ,CS ) ) ) + ( RMSe - RCSe ) )", "obj1": 0.6314741035856574, "obj2": 0.31169757952791266}, {"determining": "Max( ( MDR / ARS ),( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( ( RRSe / RMSe ) - Min( DS ,CS ) )", "obj1": 0.26693227091633465, "obj2": 0.6267068753703793}, {"determining": "( Max( ( ( DDR * PN ) / Max( ( RRS + FirstVNF_CPU ),( Max( Max( ( CRS + BR ),( FirstVNF_Mem_Server * FirstVNF_CPU ) ),ACS ) * ACS ) ) ),AMS ) - ( ARS - ARS ) )", "choosing": "( ( ( RMSe - ( MUR + ( Max( RRSe,MLU ) * RMSe ) ) ) + ( ( MLU * MUC ) / Min( MUC ,MUM ) ) ) - ( ( ( RCSe / RMSe ) * ( CS / RRSe ) ) - ( ( CS + RMSe ) * ( MUR + MUC ) ) ) )", "obj1": 0.3804780876494024, "obj2": 0.5348483842913156}, {"determining": "( ( Max( BR,ARS ) * ( Min( ARS ,FirstVNF_CPU ) + AMS ) ) + ( ( MRS - MDR ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( Max( ( RCSe + MUM ),RRSe ) ,( RCSe * MUM ) ) * Min( Max( CS,MUC ) ,( MUM * DS ) ) )", "obj1": 0.4362549800796813, "obj2": 0.49421980380885683}, {"determining": "( ( Max( BR,ARS ) * ( Min( ARS ,FirstVNF_CPU ) + AMS ) ) + ( ( MRS - MDR ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( Max( ( RCSe + MUM ),RRSe ) ,( RCSe * MUM ) ) * Min( Max( CS,MUC ) ,( MUM * DS ) ) )", "obj1": 0.4362549800796813, "obj2": 0.49421980380885683}, {"determining": "( ( Max( BR,ARS ) * ( AMS + Min( ARS ,FirstVNF_CPU ) ) ) + ( ( MRS - MDR ) + Max( MDR,Const ) ) )", "choosing": "( Min( ( ( MUM + RCSe ) * RRSe ) ,( RCSe * MUM ) ) * Min( ( MLU / CS ) ,( MUM * DS ) ) )", "obj1": 0.4362549800796813, "obj2": 0.49421980380885683}, {"determining": "Min( Min( ( FirstVNF_CPU / ACS ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Max( MRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + ( MUM / Min( CS ,( MUC + RMSe ) ) ) )", "obj1": 0.3884462151394422, "obj2": 0.5293862828351287}, {"determining": "( PN - Max( MDR,CRS ) )", "choosing": "Max( CS,Min( MUM ,RRSe ) )", "obj1": 0.798804780876494, "obj2": 0.09910143493250198}, {"determining": "( Min( Min( ( AMS - FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server + DDR ) ) ,( ( FirstVNF_Mem / DDR ) / Max( PN,ACS ) ) ) * ( Min( ( DDR * FirstVNF_Mem ) ,ARS ) + ( ( MRS - BR ) * ( MRS / MDR ) ) ) )", "choosing": "Min( ( Min( Min( DS ,RRSe ) ,( RRSe - RRSe ) ) - ( Max( DS,MLU ) - ( CS / RCSe ) ) ) ,( ( ( CS * MUR ) - ( RRSe + MUM ) ) + Min( RCSe ,DS ) ) )", "obj1": 0.7051792828685259, "obj2": 0.29649864093007555}, {"determining": "( ( Max( AMS,PN ) - Min( MRS ,PN ) ) - FirstVNF_CPU )", "choosing": "( ( MUR * Max( RMSe,MUC ) ) * ( MUR / Min( Max( MUM,RCSe ) ,( Max( DS,RRSe ) / MUC ) ) ) )", "obj1": 0.45219123505976094, "obj2": 0.4752627854343663}, {"determining": "( Max( ( FirstVNF_CPU / RRS ),Min( ARS ,FirstVNF_RAM ) ) * ( Min( Const ,MDR ) / FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( RCSe,DS ) ) * Min( Min( RRSe ,DS ) ,Max( ( RMSe / RCSe ),( ( MUC / MUR ) + ( MUR / Min( Max( MUM,RCSe ) ,( Max( DS,RRSe ) / MUC ) ) ) ) ) ) )", "obj1": 0.4581673306772908, "obj2": 0.4653043079817989}, {"determining": "( ( Min( Min( ARS ,BR ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + Min( ( ARS - MRS ) ,( MRS * FirstVNF_Mem_Server ) ) ) + ( Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + BR ) ) * ( ( CRS / RRS ) + ( ARS / MRS ) ) ) )", "choosing": "( ( ( ( MUR - Max( RCSe,RCSe ) ) - MUR ) * CS ) - ( DS * MUC ) )", "obj1": 0.250996015936255, "obj2": 0.6419452050653547}, {"determining": "Max( ( ARS - MRS ),Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR - RRSe ) - MUR ) * CS ) - ( DS * MUC ) )", "obj1": 0.2689243027888446, "obj2": 0.6252126353034023}, {"determining": "Min( Max( ( ( FirstVNF_Mem * AMS ) - FirstVNF_CPU_Server ),PN ) ,( Max( FirstVNF_Mem,DDR ) + ACS ) )", "choosing": "( Max( ( Max( MUM,MUC ) / Min( DS ,MUM ) ),( ( MLU - MLU ) / ( CS - MUC ) ) ) + Min( ( ( DS + MUM ) / ( RRSe + MLU ) ) ,( Min( RCSe ,RRSe ) / MUR ) ) )", "obj1": 0.18326693227091634, "obj2": 0.7522469133836379}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( AMS / MDR ) )", "choosing": "( Min( MLU ,( MLU * DS ) ) + Min( MLU ,( DS + MUC ) ) )", "obj1": 0.42828685258964144, "obj2": 0.5043922395708575}, {"determining": "Max( ( PN + ARS ),( FirstVNF_RAM / Min( ( PN / ARS ) ,( DDR - ( FirstVNF_CPU / RRS ) ) ) ) )", "choosing": "Min( ( RMSe / MUC ) ,( ( RMSe - RMSe ) - DS ) )", "obj1": 0.1593625498007968, "obj2": 0.7694535023788291}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( AMS / MDR ) )", "choosing": "( Min( MLU ,( MLU * DS ) ) + Min( MLU ,( DS + MUC ) ) )", "obj1": 0.41434262948207173, "obj2": 0.5060661365498057}], "3": [{"determining": "Min( Min( RRS ,FirstVNF_Mem ) ,( FirstVNF_CPU_Server - MRS ) )", "choosing": "( ( CS * RMSe ) / Min( DS ,RCSe ) )", "obj1": 0.17330677290836655, "obj2": 0.7573590775554542}, {"determining": "( Min( Const ,PN ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( MUM / MUC ) * ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( RRS + FirstVNF_RAM ) )", "choosing": "Min( Max( MUM,DS ) ,Max( RCSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / MDR ) / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUR - CS ),Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * PN ) - ( ( DDR + AMS ) / ACS ) )", "choosing": "( ( ( DS - DS ) / Max( MUC,MUM ) ) + ( ( RMSe / CS ) / Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS * AMS ) ,( MDR - FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( AMS - FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM + MUR ) + ( MUC / MLU ) ) ,( ( MUM - DS ) / ( RRSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( MRS + ( CRS - ( RRS + CRS ) ) ) ) * ( ( RRS + FirstVNF_CPU ) / Max( DDR,RRS ) ) )", "choosing": "Max( ( Max( MLU,( Max( CS,RMSe ) / CS ) ) + ( CS - RRSe ) ),Min( Max( CS,MUC ) ,( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + FirstVNF_Mem_Server ) - ( Max( BR,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - ARS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MLU ) + ( ( RRSe / MUR ) - ( Max( ( ( ( RCSe * DS ) * RCSe ) / RMSe ),MUC ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Const ) - ( Max( FirstVNF_RAM_Server,MRS ) - CRS ) )", "choosing": "( Min( ( CS - CS ) ,( MUM * CS ) ) / ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ARS ) ,( DDR - ( FirstVNF_CPU / RRS ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + ( ( RCSe - MUR ) / ( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS - FirstVNF_Mem ) + CRS ) * MDR ) ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( FirstVNF_RAM_Server / Min( Max( Max( PN,( BR + Max( BR,FirstVNF_CPU ) ) ),( DDR - FirstVNF_RAM_Server ) ) ,( RRS / RRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + ( ( RRSe - MUM ) * CS ) ) / Min( Max( ( MLU + DS ),RMSe ) ,( ( Max( RRSe,MLU ) + RRSe ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( MRS * FirstVNF_RAM ) ) - Min( Max( PN,ACS ) ,Max( DDR,DDR ) ) ) * Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ),Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,( MDR - ( FirstVNF_Mem / RRS ) ) ) ) ) )", "choosing": "Max( Min( ( ( CS - DS ) + ( DS / DS ) ) ,( ( MUC * CS ) * ( RCSe * RMSe ) ) ),( ( CS / MUM ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,MDR ) - ( BR / FirstVNF_Mem ) ) - ( ( AMS + FirstVNF_CPU ) + ( RRS / MDR ) ) ) ,Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( CRS + PN ) ) ,Min( ( ARS / MRS ) ,( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "Min( Max( ( ( RRSe - RMSe ) + ( MUR - MUC ) ),Min( ( RCSe + MUR ) ,Max( CS,MLU ) ) ) ,( ( ( RRSe - MUM ) + Max( RRSe,CS ) ) * Max( ( MUM * MUR ),Max( MLU,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( FirstVNF_Mem * MRS ) ) - ( ( FirstVNF_Mem_Server * BR ) / ( DDR * RRS ) ) ) * ( ( Max( MDR,MDR ) + Min( PN ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU * BR ) - ( FirstVNF_Mem_Server + MDR ) ) ) )", "choosing": "( ( CS + MLU ) - Min( RMSe ,Max( ( MLU * MUC ),( ( DS * RMSe ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) - MDR ) / ( ( RRS / PN ) * MRS ) )", "choosing": "Max( ( ( Max( MUM,RMSe ) * ( MUM * RMSe ) ) + ( ( MLU * MUC ) + Min( MUR ,CS ) ) ),Max( ( MUR / MUM ),( ( MLU + CS ) * Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,ARS ) - Max( Max( ACS,BR ),ARS ) )", "choosing": "Max( Max( ( Min( RMSe ,CS ) - ( RRSe + DS ) ),( Min( DS ,MLU ) * ( MUM - MUR ) ) ),( ( Min( ( ( MUM - ( CS - CS ) ) + ( MUM * MUC ) ) ,Min( MUC ,RRSe ) ) * Max( DS,CS ) ) * ( Max( RCSe,RMSe ) + ( RMSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( RRS + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + ( MUM / Min( CS ,( MUC + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + ( ( Const - FirstVNF_Mem ) * ( MRS / Const ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MLU * MUM ) ) ,( ( RMSe / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RCSe * RCSe ) - ( DS * RCSe ) ) - CS ),Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / MDR ) / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ACS ) ) + ( ( Const - FirstVNF_Mem ) * Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MUC * MUM ) ) ,( ( ( RRSe + ( MUM * MUM ) ) / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + ( ( Const - FirstVNF_Mem ) * ( MRS / Const ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MLU * MUM ) ) ,( ( RMSe / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU * Min( ( MRS + ( FirstVNF_CPU_Server * PN ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( RMSe ,MLU ) * CS ) - RMSe ) / ( Min( RRSe ,CS ) * Max( ( CS - MUM ),RRSe ) ) ) * ( ( Min( MLU ,Min( MLU ,DS ) ) + Min( MLU ,( DS + MUC ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / Const ) ,ACS ) ,( AMS / ( BR - FirstVNF_RAM ) ) )", "choosing": "( Min( MLU ,( MLU * ( ( DS + DS ) / Min( ( ( Max( MUR,CS ) + ( MUM - MUC ) ) * ( DS * ( RCSe - RRSe ) ) ) ,CS ) ) ) ) + ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( MUM / MUC ) * ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM * MRS ) ) - Min( Max( PN,ACS ) ,Max( ( ACS - RRS ),( CRS - PN ) ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( ( ( Min( MLU ,MUM ) + RCSe ) - Max( Max( ( MUM * MLU ),( RCSe * MUR ) ),RMSe ) ) * RMSe ) ) ),( ( ( RRSe / CS ) - ( MUM / MUC ) ) + Min( ( RMSe * MUM ) ,( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM * MRS ) ) - Min( Min( PN ,ACS ) ,Max( DDR,DDR ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( ( RRS + CRS ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( CS * RMSe ) * ( RCSe * RMSe ) ) ),( ( ( RRSe / CS ) - ( Min( MUC ,RCSe ) * CS ) ) + Min( ( RMSe * MUM ) ,( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,ACS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( RRS + FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) * Min( ( Max( DDR,DDR ) / Min( FirstVNF_CPU ,DDR ) ) ,( ( FirstVNF_Mem_Server / ( ( ( RRS * MRS ) / RRS ) * MRS ) ) / Min( BR ,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU * ( AMS - ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( ( MUC + MUR ),( DS + RRSe ) ) ,MUM ) * ( ( ( RCSe * RMSe ) * Min( Min( Min( MUC ,MUC ) ,( MUC * RCSe ) ) ,( Min( RCSe ,CS ) * ( DS * RMSe ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * Max( PN,Const ) ) - ( Max( FirstVNF_RAM_Server,BR ) / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MLU ) + ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( ( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + ( MUM / ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS - FirstVNF_Mem ) + CRS ) * MDR ) ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + ( MUM / Min( CS ,( MUC + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( RRS + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR * ( ( RRS - FirstVNF_Mem ) + CRS ) ) ,( ARS - ( Max( ( RRS - ( FirstVNF_Mem * ARS ) ),( FirstVNF_Mem / MDR ) ) + ARS ) ) )", "choosing": "Min( Min( Max( MUC,RCSe ) ,( RCSe + ( ( RCSe + CS ) + RCSe ) ) ) ,( Min( ( Max( DS,RMSe ) / CS ) ,( MUC / RCSe ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS - FirstVNF_Mem ) + CRS ) * MDR ) ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),Max( ( MUC * Min( ( RCSe * MLU ) ,DS ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),Max( ( MUC * Min( ( RCSe * MLU ) ,DS ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),Max( ( MUC * Min( ( RCSe * MLU ) ,DS ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( BR ,MRS ) + ( Min( Min( MDR ,PN ) ,AMS ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( MLU / MUM ) ),Max( ( ( MLU / MUC ) + Min( Max( MUC,MLU ) ,( ( ( ( RRSe - MUR ) - DS ) - MUM ) - DS ) ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( Const - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( RCSe * RMSe ) ) ),( ( Max( MUM,MLU ) - ( MUM / MUC ) ) + Max( Min( Max( MUM,RMSe ) ,Min( ( MUR + CS ) ,( RCSe + RMSe ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUR - CS ),Max( MUM,Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( RCSe * RMSe ) ) ),( ( ( RRSe / CS ) - ( MUM / MUC ) ) + Min( ( RMSe * MUM ) ,( RMSe / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / MDR ) / ( DDR - ( MRS * FirstVNF_CPU ) ) )", "choosing": "Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( RRSe + RCSe ) ) ),( Min( ( RRSe / CS ) ,( MUM / MUC ) ) + Min( ( RMSe * MUM ) ,( MUM / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM * MRS ) ) - Min( Max( PN,ACS ) ,Max( DDR,DDR ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUR - CS ),Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * ( ( Min( Const ,FirstVNF_CPU ) - ( AMS + RRS ) ) / Min( ( ( ARS + FirstVNF_Mem_Server ) - ( Max( BR,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - ARS ) ) ) ,Max( BR,ACS ) ) ) )", "choosing": "( ( ( RCSe * DS ) * RCSe ) - Min( ( Max( RCSe,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ARS ) ,( DDR - ( FirstVNF_CPU / RRS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( RCSe,DS ) ) * Min( Min( RRSe ,DS ) ,Max( ( RMSe / RCSe ),( ( MUC / MUR ) + ( MUR / Min( Max( MUM,RCSe ) ,( Max( DS,RRSe ) / MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ACS,AMS ),Max( FirstVNF_CPU_Server,( DDR / PN ) ) ) - ( Min( BR ,Max( MRS,FirstVNF_CPU ) ) / ( ( Const / FirstVNF_CPU_Server ) * Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "Max( ( RMSe + RCSe ),( ( ( DS / MLU ) * Max( DS,CS ) ) * ( Max( RCSe,RMSe ) + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + ( ( Const - FirstVNF_Mem ) * ( MRS / Const ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MLU * MUM ) ) ,( ( RMSe / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( MRS + ( CRS - ( ARS + CRS ) ) ) ) * ( ( RRS + FirstVNF_CPU ) / Max( DDR,RRS ) ) )", "choosing": "Max( ( Max( MLU,( Max( CS,RMSe ) / CS ) ) + ( CS - RRSe ) ),Min( Max( CS,RRSe ) ,( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR * RRS ) + ( ARS - FirstVNF_CPU ) ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),( ( ( ( DS * DS ) / Max( Min( ( DS + MUM ) ,RCSe ),Max( RMSe,MUR ) ) ) + Max( MUC,MLU ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( MUC,( ( ( ( DS * DS ) / Max( Min( ( DS + MUM ) ,RCSe ),Max( RMSe,MUR ) ) ) + Max( MUC,MLU ) ) + MUR ) ) / ( RMSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( MRS + ( CRS - FirstVNF_RAM_Server ) ) ) * ( ( RRS + FirstVNF_CPU ) / Max( DDR,RRS ) ) )", "choosing": "Max( ( Max( MLU,( Max( CS,RMSe ) / CS ) ) + ( CS - RRSe ) ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM * MRS ) ) - Min( Max( PN,ACS ) ,Max( DDR,DDR ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,( MRS + ( CRS - ( RRS + CRS ) ) ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUR - CS ),Max( MLU,( Max( CS,RMSe ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM * MRS ) ) - Min( Max( PN,ACS ) ,Max( DDR,DDR ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUR - CS ),Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),Max( ( MUC * Min( ( RCSe * Max( ( MUR - CS ),Max( MUM,MLU ) ) ) ,DS ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - Min( Max( PN,ACS ) ,Max( DDR,DDR ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUR - CS ),( MUC * Min( ( RCSe * MLU ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM * MRS ) ) - Min( Max( PN,ACS ) ,Max( DDR,DDR ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),Max( ( MUC * Min( ( RCSe * MLU ) ,DS ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( MUR - CS ),Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / RRS ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + ( ( Const - FirstVNF_Mem ) * Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RMSe / MUC ) - MLU ) + ( MUC * MUM ) ) ,( ( RMSe / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + ( ( Const - FirstVNF_Mem ) * Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( MUM + Max( CS,CS ) ) * Min( DS ,( MUC / MUC ) ) ) + ( ( RCSe / DS ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( MRS + ( CRS - ( ( ( RRS + FirstVNF_CPU ) / Max( DDR,RRS ) ) + CRS ) ) ) ) * ( ( RRS + FirstVNF_CPU ) / Max( DDR,RRS ) ) )", "choosing": "Max( ( Max( MLU,( Max( CS,RMSe ) / CS ) ) + ( CS - RRSe ) ),Min( ( DS + RMSe ) ,( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * MDR ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( MLU - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( RRS + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( MRS + ( CRS - ( ARS + CRS ) ) ) ) * ( ( RRS + FirstVNF_CPU ) / Max( DDR,RRS ) ) )", "choosing": "Max( ( Max( MLU,( Max( CS,RMSe ) / CS ) ) + ( CS - RRSe ) ),Min( Max( ( ( ( CS + RCSe ) + ( CS * CS ) ) - Max( ( DS * RMSe ),( MUR - RCSe ) ) ),MUC ) ,( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( Max( MRS,FirstVNF_RAM_Server ) + CRS ) ) ,( Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + ( ( Const - FirstVNF_Mem ) * Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RMSe / Min( Min( MUC ,RMSe ) ,( MUM * CS ) ) ) - MLU ) + ( MUC * MUM ) ) ,( ( RMSe / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,DDR ) - ( Max( MRS,FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( ( MUM + RRSe ) / Min( Min( MUC ,RMSe ) ,( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + ( ( Const - FirstVNF_Mem ) * Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MUC * MUM ) ) ,( ( RMSe / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ACS ) ) + ( ( Const - FirstVNF_Mem ) * Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MUC * MUM ) ) ,( ( ( RRSe + ( MUM * MUM ) ) / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Const ) - ( Max( FirstVNF_RAM_Server,MRS ) - CRS ) )", "choosing": "( Min( ( CS - CS ) ,( MUM * CS ) ) / ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ACS ) ) + ( ( Const - FirstVNF_Mem ) * Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MUC * MUM ) ) ,( ( ( RRSe + ( MUM * MUM ) ) / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Const ) - ( Max( FirstVNF_RAM_Server,MRS ) - CRS ) )", "choosing": "( Min( ( CS - CS ) ,( MUM * CS ) ) / ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ACS ) ) + ( ( Const - FirstVNF_Mem ) * Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MUC * MUM ) ) ,( ( ( RRSe + ( MUM * MUM ) ) / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Const ) - ( Max( FirstVNF_RAM_Server,MRS ) - CRS ) )", "choosing": "( Min( ( CS - CS ) ,( MUM * CS ) ) / ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ACS ) ) + ( ( Const - FirstVNF_Mem ) * Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MUC * MUM ) ) ,( ( ( RRSe + ( MUM * MUM ) ) / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Const ) - ( Max( FirstVNF_RAM_Server,MRS ) - CRS ) )", "choosing": "( Min( ( CS - CS ) ,( MUM * CS ) ) / ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( Min( Max( ( RCSe + MUM ),RRSe ) ,( RCSe * MUM ) ) * Min( Max( CS,MUC ) ,( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( BR ,Max( MDR,FirstVNF_CPU ) ) / ( ( Const / FirstVNF_CPU_Server ) * Max( FirstVNF_Mem,DDR ) ) ) - Max( ( Max( AMS,PN ) - Min( MRS ,PN ) ),ARS ) )", "choosing": "Max( Max( ( ( RMSe - CS ) - ( RRSe + DS ) ),( Min( DS ,MLU ) * ( MUM - MUR ) ) ),( ( ( DS / MLU ) * Min( Max( MUM,RCSe ) ,( Max( DS,RRSe ) / MUC ) ) ) * ( Max( RCSe,RMSe ) + ( RMSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + Max( FirstVNF_CPU,MDR ) ) / ( Const - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) - Max( Max( ACS,AMS ),ARS ) )", "choosing": "Max( Max( ( ( RMSe - CS ) - ( RRSe + DS ) ),( Min( DS ,MLU ) * ( MUM - MUR ) ) ),( ( ( DS / MLU ) * Max( DS,MLU ) ) * ( Max( RCSe,RMSe ) + ( RMSe * ( Min( RRSe ,DS ) - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS - FirstVNF_Mem ) + CRS ) * MDR ) ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,( FirstVNF_Mem / MDR ) ) - ARS ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( Min( ( Max( DS,RMSe ) / CS ) ,( MUC / RCSe ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "( Max( ( Max( MUM,MUC ) / Min( DS ,MUM ) ),( ( MLU - MLU ) / ( CS - MUC ) ) ) + Min( Max( ( MUM + DS ),( RRSe - RRSe ) ) ,( Min( RCSe ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,MRS ) ,( Const - FirstVNF_Mem_Server ) ) / CRS ) - Max( ( ( BR / RRS ) - Max( DDR,CRS ) ),Min( ( MDR - Const ) ,( ACS + FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( MUM * MLU ),( ( RCSe - RCSe ) - ( MLU - MUM ) ) ) ,Min( ( ( RMSe / MUC ) + Min( RRSe ,MUM ) ) ,( Min( CS ,MUR ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( Const ,Min( Min( FirstVNF_RAM_Server ,( ( BR * PN ) / FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / MRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ( ( BR / RRS ) - Max( DDR,CRS ) ),Min( ( MDR - Const ) ,( ACS + FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( ( ( RRSe - RMSe ) / MUR ) + ( MUC * RCSe ) ),( ( RCSe - RCSe ) - ( MLU - MUM ) ) ) ,Min( ( ( RMSe / MUC ) + Min( RRSe ,MUM ) ) ,( Min( CS ,MUR ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ARS ) ,( DDR - ( FirstVNF_CPU / RRS ) ) )", "choosing": "( ( Min( MLU ,MUM ) + ( MLU + RMSe ) ) - ( Max( ( MUM * MLU ),( RCSe * MUR ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( RRS + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUR ) ,RCSe ) / MUC ) - Min( ( Max( RCSe,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ARS ) ,( MDR - ( FirstVNF_CPU / RRS ) ) )", "choosing": "( Min( ( RMSe / CS ) ,DS ) + ( ( RCSe - MUR ) / ( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,( ARS / ( FirstVNF_Mem - AMS ) ) ) ,Min( PN ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + Min( MUR ,Min( CS ,MUC ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * ( ( Min( FirstVNF_CPU ,Const ) - ( AMS + RRS ) ) / Min( ( FirstVNF_RAM_Server - Const ) ,Max( BR,( DDR / ARS ) ) ) ) )", "choosing": "( Min( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) - ( ( DS / Max( CS,RCSe ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) + Max( BR,Max( ( RRS + FirstVNF_RAM_Server ),ARS ) ) )", "choosing": "Max( ( MUR * Max( DS,Min( ( CS - Max( ( ( MLU - MUM ) - MUC ),Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * ( ( Min( FirstVNF_CPU ,Const ) - ( AMS + RRS ) ) / Min( ( FirstVNF_RAM_Server - Const ) ,Max( BR,( DDR / ARS ) ) ) ) )", "choosing": "( Min( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) - ( ( DS / Max( CS,RCSe ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) + Max( BR,Max( ( RRS + FirstVNF_RAM_Server ),ARS ) ) )", "choosing": "Max( ( MUR * Max( DS,Min( ( CS - Max( ( ( MLU - MUM ) - MUC ),Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * ( ( Min( FirstVNF_CPU ,Const ) - ( AMS + RRS ) ) / Min( ( FirstVNF_RAM_Server - Const ) ,Max( BR,( DDR / ARS ) ) ) ) )", "choosing": "( Min( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) - ( ( DS / Max( CS,RCSe ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) + Max( BR,Max( ( RRS + FirstVNF_RAM_Server ),ARS ) ) )", "choosing": "Max( ( MUR * Max( DS,Min( ( CS - Max( ( ( MLU - MUM ) - MUC ),Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * ( ( Min( FirstVNF_CPU ,Const ) - ( AMS + RRS ) ) / Min( ( FirstVNF_RAM_Server - Const ) ,Max( BR,( DDR / ARS ) ) ) ) )", "choosing": "( Min( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) - ( ( DS / Max( CS,RCSe ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) + Min( ( ( ( CRS * Max( MRS,FirstVNF_Mem ) ) * AMS ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) )", "choosing": "Max( ( MUR * Max( RCSe,Max( ( DS / RRSe ),MUM ) ) ),( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( Min( ACS ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) ) * ( Max( DDR,RRS ) + FirstVNF_RAM ) )", "choosing": "Min( RRSe ,Max( RCSe,( ( CS - MLU ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,Const ) * ( FirstVNF_RAM + ( DDR * MRS ) ) )", "choosing": "Max( ( Max( MLU,( Max( RMSe,( ( RMSe + MUM ) - RRSe ) ) / CS ) ) + ( CS - RRSe ) ),Min( Max( CS,MUC ) ,( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Const ) - ( Max( FirstVNF_RAM_Server,( ( Max( AMS,PN ) - Min( MRS ,PN ) ) - FirstVNF_CPU ) ) - CRS ) )", "choosing": "( Min( ( CS - ( MUR / Min( Max( MUM,RCSe ) ,( Max( DS,RRSe ) / MUC ) ) ) ) ,( MUM * CS ) ) / ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Const ) - ( Max( FirstVNF_RAM_Server,MRS ) - CRS ) )", "choosing": "( Min( ( CS - CS ) ,( MUM * CS ) ) / ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( Const ,PN ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( MUM / MUC ) * ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( RRS + FirstVNF_RAM ) )", "choosing": "Min( Max( MUM,DS ) ,Max( RCSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / MDR ) / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUR - CS ),Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * PN ) - ( ( DDR + AMS ) / ACS ) )", "choosing": "( ( ( DS - DS ) / Max( MUC,MUM ) ) + ( ( RMSe / CS ) / Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS * AMS ) ,( MDR - FirstVNF_Mem_Server ) ) ,Max( ( RRS - MRS ),( AMS - FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM + MUR ) + ( MUC / MLU ) ) ,( ( MUM - DS ) / ( RRSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( MRS + ( CRS - ( RRS + CRS ) ) ) ) * ( ( RRS + FirstVNF_CPU ) / Max( DDR,RRS ) ) )", "choosing": "Max( ( Max( MLU,( Max( CS,RMSe ) / CS ) ) + ( CS - RRSe ) ),Min( Max( CS,MUC ) ,( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + FirstVNF_Mem_Server ) - ( Max( BR,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - ARS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MLU ) + ( ( RRSe / MUR ) - ( Max( ( ( ( RCSe * DS ) * RCSe ) / RMSe ),MUC ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Const ) - ( Max( FirstVNF_RAM_Server,MRS ) - CRS ) )", "choosing": "( Min( ( CS - CS ) ,( MUM * CS ) ) / ( MUM + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ARS ) ,( DDR - ( FirstVNF_CPU / RRS ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + ( ( RCSe - MUR ) / ( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS - FirstVNF_Mem ) + CRS ) * MDR ) ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,( FirstVNF_RAM_Server / Min( Max( Max( PN,( BR + Max( BR,FirstVNF_CPU ) ) ),( DDR - FirstVNF_RAM_Server ) ) ,( RRS / RRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + ( ( RRSe - MUM ) * CS ) ) / Min( Max( ( MLU + DS ),RMSe ) ,( ( Max( RRSe,MLU ) + RRSe ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( MRS * FirstVNF_RAM ) ) - Min( Max( PN,ACS ) ,Max( DDR,DDR ) ) ) * Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ),Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,( MDR - ( FirstVNF_Mem / RRS ) ) ) ) ) )", "choosing": "Max( Min( ( ( CS - DS ) + ( DS / DS ) ) ,( ( MUC * CS ) * ( RCSe * RMSe ) ) ),( ( CS / MUM ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( Const,MDR ) - ( BR / FirstVNF_Mem ) ) - ( ( AMS + FirstVNF_CPU ) + ( RRS / MDR ) ) ) ,Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( CRS + PN ) ) ,Min( ( ARS / MRS ) ,( FirstVNF_Mem_Server + Const ) ) ) )", "choosing": "Min( Max( ( ( RRSe - RMSe ) + ( MUR - MUC ) ),Min( ( RCSe + MUR ) ,Max( CS,MLU ) ) ) ,( ( ( RRSe - MUM ) + Max( RRSe,CS ) ) * Max( ( MUM * MUR ),Max( MLU,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( FirstVNF_Mem * MRS ) ) - ( ( FirstVNF_Mem_Server * BR ) / ( DDR * RRS ) ) ) * ( ( Max( MDR,MDR ) + Min( PN ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU * BR ) - ( FirstVNF_Mem_Server + MDR ) ) ) )", "choosing": "( ( CS + MLU ) - Min( RMSe ,Max( ( MLU * MUC ),( ( DS * RMSe ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) - MDR ) / ( ( RRS / PN ) * MRS ) )", "choosing": "Max( ( ( Max( MUM,RMSe ) * ( MUM * RMSe ) ) + ( ( MLU * MUC ) + Min( MUR ,CS ) ) ),Max( ( MUR / MUM ),( ( MLU + CS ) * Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,ARS ) - Max( Max( ACS,BR ),ARS ) )", "choosing": "Max( Max( ( Min( RMSe ,CS ) - ( RRSe + DS ) ),( Min( DS ,MLU ) * ( MUM - MUR ) ) ),( ( Min( ( ( MUM - ( CS - CS ) ) + ( MUM * MUC ) ) ,Min( MUC ,RRSe ) ) * Max( DS,CS ) ) * ( Max( RCSe,RMSe ) + ( RMSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( RRS + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + ( MUM / Min( CS ,( MUC + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + ( ( Const - FirstVNF_Mem ) * ( MRS / Const ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MLU * MUM ) ) ,( ( RMSe / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RCSe * RCSe ) - ( DS * RCSe ) ) - CS ),Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / MDR ) / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RCSe ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * ACS ) ) + ( ( Const - FirstVNF_Mem ) * Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MUC * MUM ) ) ,( ( ( RRSe + ( MUM * MUM ) ) / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * ARS ) ) ) ,( Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) + ( ( Const - FirstVNF_Mem ) * ( MRS / Const ) ) ) )", "choosing": "Min( ( ( ( RMSe / DS ) - MLU ) + ( MLU * MUM ) ) ,( ( RMSe / MUR ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU * Min( ( MRS + ( FirstVNF_CPU_Server * PN ) ) ,FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( RMSe ,MLU ) * CS ) - RMSe ) / ( Min( RRSe ,CS ) * Max( ( CS - MUM ),RRSe ) ) ) * ( ( Min( MLU ,Min( MLU ,DS ) ) + Min( MLU ,( DS + MUC ) ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server / Const ) ,ACS ) ,( AMS / ( BR - FirstVNF_RAM ) ) )", "choosing": "( Min( MLU ,( MLU * ( ( DS + DS ) / Min( ( ( Max( MUR,CS ) + ( MUM - MUC ) ) * ( DS * ( RCSe - RRSe ) ) ) ,CS ) ) ) ) + ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,PN ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( MUM / MUC ) * ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM * MRS ) ) - Min( Max( PN,ACS ) ,Max( ( ACS - RRS ),( CRS - PN ) ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( ( ( Min( MLU ,MUM ) + RCSe ) - Max( Max( ( MUM * MLU ),( RCSe * MUR ) ),RMSe ) ) * RMSe ) ) ),( ( ( RRSe / CS ) - ( MUM / MUC ) ) + Min( ( RMSe * MUM ) ,( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM * MRS ) ) - Min( Min( PN ,ACS ) ,Max( DDR,DDR ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( ( RRS + CRS ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( CS * RMSe ) * ( RCSe * RMSe ) ) ),( ( ( RRSe / CS ) - ( Min( MUC ,RCSe ) * CS ) ) + Min( ( RMSe * MUM ) ,( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,ACS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( RRS + FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) * Min( ( Max( DDR,DDR ) / Min( FirstVNF_CPU ,DDR ) ) ,( ( FirstVNF_Mem_Server / ( ( ( RRS * MRS ) / RRS ) * MRS ) ) / Min( BR ,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_CPU * ( AMS - ( CRS - FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( ( MUC + MUR ),( DS + RRSe ) ) ,MUM ) * ( ( ( RCSe * RMSe ) * Min( Min( Min( MUC ,MUC ) ,( MUC * RCSe ) ) ,( Min( RCSe ,CS ) * ( DS * RMSe ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) * Max( PN,Const ) ) - ( Max( FirstVNF_RAM_Server,BR ) / ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( ( ( MUM - RRSe ) * MLU ) + ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( ( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + ( MUM / ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS - FirstVNF_Mem ) + CRS ) * MDR ) ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + ( MUM / Min( CS ,( MUC + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( RRS + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR * ( ( RRS - FirstVNF_Mem ) + CRS ) ) ,( ARS - ( Max( ( RRS - ( FirstVNF_Mem * ARS ) ),( FirstVNF_Mem / MDR ) ) + ARS ) ) )", "choosing": "Min( Min( Max( MUC,RCSe ) ,( RCSe + ( ( RCSe + CS ) + RCSe ) ) ) ,( Min( ( Max( DS,RMSe ) / CS ) ,( MUC / RCSe ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS - FirstVNF_Mem ) + CRS ) * MDR ) ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,Const ) - ARS ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( RCSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),Max( ( MUC * Min( ( RCSe * MLU ) ,DS ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),Max( ( MUC * Min( ( RCSe * MLU ) ,DS ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),Max( ( MUC * Min( ( RCSe * MLU ) ,DS ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( BR ,MRS ) + ( Min( Min( MDR ,PN ) ,AMS ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MUR / MLU ) + ( MLU / MUM ) ),Max( ( ( MLU / MUC ) + Min( Max( MUC,MLU ) ,( ( ( ( RRSe - MUR ) - DS ) - MUM ) - DS ) ) ),( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( Const - FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( RCSe * RMSe ) ) ),( ( Max( MUM,MLU ) - ( MUM / MUC ) ) + Max( Min( Max( MUM,RMSe ) ,Min( ( MUR + CS ) ,( RCSe + RMSe ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUR - CS ),Max( MUM,Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( RCSe * RMSe ) ) ),( ( ( RRSe / CS ) - ( MUM / MUC ) ) + Min( ( RMSe * MUM ) ,( RMSe / MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / MDR ) / ( DDR - ( MRS * FirstVNF_CPU ) ) )", "choosing": "Max( Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( RRSe + RCSe ) ) ),( Min( ( RRSe / CS ) ,( MUM / MUC ) ) + Min( ( RMSe * MUM ) ,( MUM / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) - ( FirstVNF_RAM * MRS ) ) - Min( Max( PN,ACS ) ,Max( DDR,DDR ) ) ) * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUR - CS ),Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * ( ( Min( Const ,FirstVNF_CPU ) - ( AMS + RRS ) ) / Min( ( ( ARS + FirstVNF_Mem_Server ) - ( Max( BR,FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - ARS ) ) ) ,Max( BR,ACS ) ) ) )", "choosing": "( ( ( RCSe * DS ) * RCSe ) - Min( ( Max( RCSe,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / ARS ) ,( DDR - ( FirstVNF_CPU / RRS ) ) )", "choosing": "( Min( Min( DS ,DS ) ,Max( RCSe,DS ) ) * Min( Min( RRSe ,DS ) ,Max( ( RMSe / RCSe ),( ( MUC / MUR ) + ( MUR / Min( Max( MUM,RCSe ) ,( Max( DS,RRSe ) / MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5667225245221273}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5667225245221273}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5667225245221273}, {"determining": "( Max( Const,( FirstVNF_RAM_Server / Min( Max( Max( PN,( AMS + Max( BR,FirstVNF_CPU ) ) ),( DDR - FirstVNF_RAM_Server ) ) ,ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + Min( MLU ,( MLU * DS ) ) ) / Min( ( ( RCSe * CS ) * RMSe ) ,( MLU - ( Max( RRSe,MLU ) + RRSe ) ) ) )", "obj1": 0.2290836653386454, "obj2": 0.6709498142937945}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,( ( ( RRSe - MUM ) * CS ) * DS ) ) + ( RRSe / DS ) )", "obj1": 0.17131474103585656, "obj2": 0.737769993732022}, {"determining": "Min( Min( DDR ,( ARS / ( FirstVNF_Mem - AMS ) ) ) ,Min( PN ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + Min( MUR ,Min( CS ,MUC ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RRSe ) ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.049354557569974394}, {"determining": "Min( Min( DDR ,( ARS / ( FirstVNF_Mem - AMS ) ) ) ,Min( PN ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + Min( MUR ,Min( CS ,MUC ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RRSe ) ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.049354557569974394}, {"determining": "Min( Min( DDR ,( ARS / ( FirstVNF_Mem - AMS ) ) ) ,Min( PN ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + Min( MUR ,Min( CS ,MUC ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RRSe ) ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.049354557569974394}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - ( Max( FirstVNF_RAM_Server,MRS ) - CRS ) ) * ( ( Min( FirstVNF_CPU ,Const ) - ( AMS + RRS ) ) / Min( ( FirstVNF_RAM_Server - Const ) ,Max( BR,( DDR / ARS ) ) ) ) )", "choosing": "( Min( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) - MUM )", "obj1": 0.3187250996015936, "obj2": 0.5833892566034834}, {"determining": "( FirstVNF_CPU * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) + ( MDR + ARS ) ) * Min( Min( CRS ,ACS ) ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Max( MUM,RMSe ) * ( MUM * RMSe ) ) + ( ( DS * MUC ) + Min( MUR ,CS ) ) ),Max( MUM,MLU ) )", "obj1": 0.4342629482071713, "obj2": 0.5032379834265255}, {"determining": "Min( ( PN / ARS ) ,( MDR - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( ( RMSe - CS ) - ( RRSe + DS ) ),( Min( DS ,MLU ) * ( MUM - MUR ) ) ),( ( ( DS / MLU ) * Max( DS,CS ) ) * ( Max( RCSe,RMSe ) + ( RMSe * DS ) ) ) ) + ( ( RCSe - MUR ) / ( RMSe - RMSe ) ) )", "obj1": 0.9940239043824701, "obj2": 0.006251937270722937}, {"determining": "( ( Max( ( FirstVNF_Mem * MRS ),( RRS + CRS ) ) - ( ( FirstVNF_Mem_Server * ACS ) / ( DDR * RRS ) ) ) * ( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) + Min( PN ,FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ,Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( RMSe / DS ) + MLU ) - ( RMSe / Max( ( MLU * MUC ),( MUM / RCSe ) ) ) )", "obj1": 0.9840637450199203, "obj2": 0.016474174246886297}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * ( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) - ( AMS + RRS ) ) / Min( ( FirstVNF_RAM_Server - Const ) ,Max( BR,( DDR / ARS ) ) ) ) )", "choosing": "( Min( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) - ( ( DS / MUM ) / MUC ) )", "obj1": 0.9103585657370518, "obj2": 0.058069949635363126}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5667225245221273}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5667225245221273}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5667225245221273}, {"determining": "Min( ( PN / ARS ) ,( MDR - ( FirstVNF_CPU / ( FirstVNF_CPU_Server * ARS ) ) ) )", "choosing": "( DS + ( ( RCSe - MUR ) / ( RMSe - RMSe ) ) )", "obj1": 0.9960159362549801, "obj2": 0.0035730642594976954}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + FirstVNF_CPU_Server )", "choosing": "Max( ( MUR * ( MUM / ( RMSe - MUM ) ) ),( RRSe + DS ) )", "obj1": 0.4103585657370518, "obj2": 0.5082245483639541}, {"determining": "( Min( Const ,PN ) * ( Max( ACS,AMS ) - FirstVNF_RAM ) )", "choosing": "( ( ( DS / MLU ) / MUC ) * ( RRSe / DS ) )", "obj1": 0.35856573705179284, "obj2": 0.5550744327946232}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * MRS )", "choosing": "( Min( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) - ( DS + RMSe ) )", "obj1": 0.31673306772908366, "obj2": 0.6175369632363985}, {"determining": "( Min( MDR ,DDR ) - ( ( RRS * FirstVNF_Mem ) + Min( Const ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM + RRSe ) / Min( Min( MUC ,RMSe ) ,( ( ( RMSe / DS ) - MLU ) + ( MUC * MUM ) ) ) )", "obj1": 0.850597609561753, "obj2": 0.15374618256460212}, {"determining": "Min( ( FirstVNF_CPU / ARS ) ,Min( DDR ,( ACS / ARS ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + ( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + ( Min( RCSe ,( DS - DS ) ) + MUR ) ) ) ) * Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RCSe ) ) ) ) )", "obj1": 0.4641434262948207, "obj2": 0.44948247221838905}, {"determining": "Min( Min( DDR ,( ARS / ( FirstVNF_Mem - AMS ) ) ) ,Min( PN ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + Min( MUR ,Min( CS ,MUC ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RRSe ) ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.049354557569974394}, {"determining": "Min( Min( DDR ,( ARS / ( FirstVNF_Mem - AMS ) ) ) ,Min( PN ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + Min( MUR ,Min( CS ,MUC ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RRSe ) ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.049354557569974394}, {"determining": "Min( Min( DDR ,( ARS / ( FirstVNF_Mem - AMS ) ) ) ,Min( PN ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + Min( MUR ,Min( CS ,MUC ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RRSe ) ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.049354557569974394}, {"determining": "Min( Min( DDR ,( ( FirstVNF_Mem - AMS ) / ARS ) ) ,( PN / ARS ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + ( MUR + Min( RCSe ,( DS - RCSe ) ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RCSe ) ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.049354557569974394}, {"determining": "( ( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( FirstVNF_CPU_Server ,Const ) ) - Min( ( MRS - ARS ) ,( RRS - FirstVNF_Mem ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Max( MUM,RCSe ) - Min( MUR ,CS ) ) ,RMSe ) - ( ( DS / Min( ( ( DS - CS ) + ( DS / DS ) ) ,( ( RMSe * CS ) * ( RCSe * RMSe ) ) ) ) / MUC ) )", "obj1": 0.30876494023904383, "obj2": 0.6317232646555039}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5667225245221273}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5667225245221273}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5667225245221273}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5667225245221273}, {"determining": "Min( ( ( ( DDR * RRS ) + ( ARS - FirstVNF_CPU ) ) + ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),( ( RRS + FirstVNF_CPU ) / Max( DDR,RRS ) ) ) ) - AMS ) ) ,Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( ( ( MLU / MUR ) + ( MLU / MUM ) ),( ( ( MLU / Max( Min( ( DS + MUM ) ,RCSe ),Max( RMSe,MUR ) ) ) + Max( MUC,MLU ) ) + MUR ) )", "obj1": 0.4960159362549801, "obj2": 0.4191371713660226}, {"determining": "( ( ( RRS + FirstVNF_CPU ) / Max( DDR,RRS ) ) + Min( ( ( ( RRS - PN ) * AMS ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) )", "choosing": "Max( ( MUR * Max( DS,Min( ( Max( MLU,( Max( CS,RMSe ) / CS ) ) - Max( ( MUR - CS ),Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( RRSe + DS ) )", "obj1": 0.5318725099601593, "obj2": 0.40218436261547186}, {"determining": "Min( Min( DDR ,( ( FirstVNF_Mem - ( RRS - DDR ) ) / ARS ) ) ,( PN / ARS ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( Max( MUC,RCSe ) + RMSe ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RCSe ) ) ) ) )", "obj1": 0.4402390438247012, "obj2": 0.4864453824749843}, {"determining": "Min( Min( DDR ,( ( FirstVNF_Mem - AMS ) / ARS ) ) ,( PN / ARS ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + ( MUR + Min( RCSe ,( DS - RCSe ) ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RCSe ) ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.049354557569974394}, {"determining": "Min( Min( DDR ,( ARS / ( FirstVNF_Mem - AMS ) ) ) ,Min( PN ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + Min( MUR ,Min( CS ,MUC ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RRSe ) ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.049354557569974394}, {"determining": "Min( Min( DDR ,( ARS / ( FirstVNF_Mem - AMS ) ) ) ,Min( PN ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + Min( MUR ,Min( CS ,MUC ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RRSe ) ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.049354557569974394}, {"determining": "Min( Min( DDR ,( ARS / ( FirstVNF_Mem - AMS ) ) ) ,Min( PN ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + Min( MUR ,Min( CS ,MUC ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RRSe ) ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.049354557569974394}, {"determining": "Min( Min( DDR ,( ARS / ( FirstVNF_Mem - AMS ) ) ) ,Min( PN ,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe / CS ) ,Min( RCSe ,DS ) ) + Max( Max( ( MUC - MUM ),( DS + ( ( ( ( RRSe * MUC ) - MUM ) - RMSe ) + Min( MUR ,Min( CS ,MUC ) ) ) ) ),Min( MUM ,Max( RMSe,Max( Min( ( ( MLU / MLU ) + RMSe ) ,RMSe ),RRSe ) ) ) ) )", "obj1": 0.9362549800796812, "obj2": 0.049354557569974394}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + Min( ( ( DDR * AMS ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) )", "choosing": "Max( ( MUR * Max( DS,Min( ( CS - Max( ( MUR - CS ),Min( RCSe ,Max( CS,MUC ) ) ) ) ,MLU ) ) ),( RRSe + DS ) )", "obj1": 0.8944223107569721, "obj2": 0.11860110556232223}, {"determining": "( ( Min( AMS ,Max( Min( BR ,Min( Min( ARS ,AMS ) ,Const ) ),Min( MRS ,PN ) ) ) - AMS ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * ( ( RRS + FirstVNF_CPU_Server ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUM + RCSe ) / MUM ) + ( MUM / Min( CS ,( ( Min( RCSe ,RRSe ) / MUR ) + RMSe ) ) ) )", "obj1": 0.38645418326693226, "obj2": 0.5357497289116954}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + Min( ( ( ( RRS - PN ) * AMS ) - ( BR - FirstVNF_RAM ) ) ,FirstVNF_RAM ) )", "choosing": "Max( ( MUR * Max( DS,Min( ( CS - Max( ( MUR - CS ),Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( ( MUM / MUC ) * ( RRSe / DS ) ) )", "obj1": 0.18127490039840638, "obj2": 0.7367619320845565}, {"determining": "( Min( ( ( ( RRS - PN ) * AMS ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( ( RRSe + DS ) / MUC ) * ( RRSe / DS ) )", "obj1": 0.22709163346613545, "obj2": 0.7299975779676624}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - ( FirstVNF_Mem / MDR ) ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,Max( DS,RMSe ) ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.37250996015936255, "obj2": 0.5437030142860566}, {"determining": "Min( ( ( ( RRS - FirstVNF_Mem ) + FirstVNF_Mem ) * MDR ) ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,( FirstVNF_Mem / MDR ) ) - ARS ) ) )", "choosing": "Min( ( ( ( RMSe - MUM ) * MUM ) + RMSe ) ,( Min( ( Max( DS,RMSe ) / Max( ( MUM / MUM ),( RRSe / RMSe ) ) ) ,( MUC / RCSe ) ) - MUR ) )", "obj1": 0.8784860557768924, "obj2": 0.14333905208797065}, {"determining": "( ( Min( Min( ( CRS - RRS ) ,FirstVNF_Mem ) ,( Const - FirstVNF_Mem_Server ) ) / ( ( Const / FirstVNF_Mem ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) - Max( ACS,CRS ) )", "choosing": "Min( Min( ( Max( ( Max( RRSe,RCSe ) - MLU ),RRSe ) + ( RRSe - MUM ) ) ,( Min( CS ,MUM ) * ( RMSe - CS ) ) ) ,Max( ( MUM / MUM ),( RRSe / RMSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5667225245221273}, {"determining": "( ( ( Max( MDR,ACS ) * ( MDR + PN ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( FirstVNF_CPU - MRS ) ) ) / ( ( ( RRS + Const ) / ( MRS - MDR ) ) * Max( ( RRS - MRS ),( AMS - FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MUC - MUM ) * MUM ) + RMSe ) ,( RCSe - MUR ) )", "obj1": 0.9322709163346613, "obj2": 0.050873003609346}, {"determining": "( ( ARS * ( Min( ACS ,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) * Min( ( ACS * ACS ) ,( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) ) * ( Max( DDR,RRS ) + FirstVNF_RAM ) )", "choosing": "Min( ( RMSe / DS ) ,Max( RCSe,( ( CS - MLU ) / DS ) ) )", "obj1": 0.6972111553784861, "obj2": 0.29956331257993196}, {"determining": "( Max( Const,( FirstVNF_RAM_Server / Min( Max( Max( PN,( BR + Max( BR,FirstVNF_CPU ) ) ),( DDR - FirstVNF_RAM_Server ) ) ,ARS ) ) ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + ( ( RRSe - MUM ) * CS ) ) / Min( ( ( RCSe * CS ) * RMSe ) ,( MLU - ( Max( RRSe,MLU ) + RRSe ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6331165186145423}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) + Max( BR,Max( ( RRS + FirstVNF_RAM_Server ),ARS ) ) )", "choosing": "Max( ( MUR * Max( DS,Min( ( CS - Max( ( ( MLU - MUM ) - MUC ),Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( RRSe + DS ) )", "obj1": 0.44223107569721115, "obj2": 0.46976746703544536}, {"determining": "( Max( Const,( FirstVNF_RAM_Server / Min( Max( Max( PN,( BR + Max( BR,FirstVNF_CPU ) ) ),( DDR - FirstVNF_RAM_Server ) ) ,( RRS / RRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + ( ( RRSe - MUM ) * CS ) ) / Min( Max( ( MLU + DS ),RMSe ) ,( ( Max( RRSe,MLU ) + RRSe ) - MLU ) ) )", "obj1": 0.7549800796812749, "obj2": 0.1975492387073489}, {"determining": "( Max( Const,( FirstVNF_RAM_Server / Min( Max( Max( PN,( BR + Max( BR,FirstVNF_CPU ) ) ),( DDR - FirstVNF_RAM_Server ) ) ,( RRS / RRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + ( ( RRSe - MUM ) * CS ) ) / Min( Max( ( MLU + DS ),RMSe ) ,( ( Max( RRSe,MLU ) + RRSe ) - MLU ) ) )", "obj1": 0.7549800796812749, "obj2": 0.1975492387073489}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) + Max( BR,Max( ( RRS + FirstVNF_RAM_Server ),ARS ) ) )", "choosing": "Max( ( MUR * Max( DS,Min( ( CS - Max( ( ( MLU - MUM ) - MUC ),Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( RRSe + DS ) )", "obj1": 0.44223107569721115, "obj2": 0.46976746703544536}, {"determining": "( Max( Const,( FirstVNF_RAM_Server / Min( Max( Max( PN,( BR + Max( BR,FirstVNF_CPU ) ) ),( DDR - FirstVNF_RAM_Server ) ) ,( RRS / RRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + ( ( RRSe - MUM ) * CS ) ) / Min( Max( ( MLU + DS ),RMSe ) ,( ( Max( RRSe,MLU ) + RRSe ) - MLU ) ) )", "obj1": 0.7549800796812749, "obj2": 0.1975492387073489}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) + Max( BR,Max( ( RRS + FirstVNF_RAM_Server ),ARS ) ) )", "choosing": "Max( ( MUR * Max( DS,Min( ( CS - Max( ( ( MLU - MUM ) - MUC ),Min( RCSe ,MUM ) ) ) ,MLU ) ) ),( RRSe + DS ) )", "obj1": 0.44223107569721115, "obj2": 0.46976746703544536}, {"determining": "( Max( Const,( FirstVNF_RAM_Server / Min( Max( Max( PN,( BR + Max( BR,FirstVNF_CPU ) ) ),( DDR - FirstVNF_RAM_Server ) ) ,( RRS / RRS ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe + ( ( RRSe - MUM ) * CS ) ) / Min( Max( ( MLU + DS ),RMSe ) ,( ( Max( RRSe,MLU ) + RRSe ) - MLU ) ) )", "obj1": 0.7549800796812749, "obj2": 0.1975492387073489}]}