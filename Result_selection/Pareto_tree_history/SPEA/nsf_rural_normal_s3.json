{"1": [{"determining": "( Max( FirstVNF_Mem_Server,ACS ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6212917217865308}, {"determining": "( ( ARS * FirstVNF_Mem_Server ) * ( ARS - MDR ) )", "choosing": "Min( ( DS - RCSe ) ,( MUC * RMSe ) )", "obj1": 0.5737051792828686, "obj2": 0.40429125433755086}, {"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,FirstVNF_RAM_Server ),( MRS / BR ) )", "choosing": "( ( MUR / MUR ) + ( RCSe - RCSe ) )", "obj1": 0.41434262948207173, "obj2": 0.5098364512131608}, {"determining": "( ( Const + AMS ) * Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "Min( ( RRSe - MUM ) ,( RRSe / CS ) )", "obj1": 0.3107569721115538, "obj2": 0.5745899654052102}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * CS ) ,( RCSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * Min( AMS ,ARS ) ) / ( ( RRS / MRS ) / BR ) )", "choosing": "( Min( RCSe ,RMSe ) + ( MLU / DS ) )", "obj1": 0.19123505976095617, "obj2": 0.7700190530224684}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( RRS - RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / MUC ) - Min( RRSe ,MLU ) )", "obj1": 0.2749003984063745, "obj2": 0.6687799025348905}, {"determining": "Min( ( ( ( CRS * BR ) / Max( BR,FirstVNF_CPU ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ),Min( MDR ,FirstVNF_CPU ) ) ) ,( Min( Min( ARS ,ARS ) ,( PN * FirstVNF_CPU ) ) + ( ( FirstVNF_CPU - ACS ) / ( FirstVNF_RAM_Server - CRS ) ) ) )", "choosing": "( Min( Max( ( MUR + RMSe ),( MLU / RRSe ) ) ,( Max( DS,RCSe ) - ( RRSe * CS ) ) ) * Min( ( ( CS * MLU ) * ( MLU * MUC ) ) ,( ( MLU * MUR ) * ( MUC + MUC ) ) ) )", "obj1": 0.7111553784860558, "obj2": 0.2752813178207487}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / RRS ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( Const / DDR ) )", "choosing": "( Min( ( DS * DS ) ,MUC ) / ( ( ( RCSe - DS ) - RCSe ) / DS ) )", "obj1": 0.17928286852589642, "obj2": 0.7774198082900535}, {"determining": "( ( DDR - MDR ) + ( Const - MDR ) )", "choosing": "Min( Max( ( Min( DS ,MUR ) + ( RCSe - MUM ) ),( Min( MUC ,RMSe ) + ( DS - RMSe ) ) ) ,( ( ( RMSe + RMSe ) + ( MUR + MUR ) ) + ( ( MUM + MUC ) - Max( MLU,DS ) ) ) )", "obj1": 0.5079681274900398, "obj2": 0.4269040450486255}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( MUC / ( MUC + MUM ) ) ),( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_Mem * MDR ) - ( FirstVNF_RAM - AMS ) ) ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( MUR * DS ) ) * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.3844621513944223, "obj2": 0.540302660952221}, {"determining": "( Max( ( ( FirstVNF_Mem + ACS ) - ( ARS + MRS ) ),Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),( AMS * AMS ) ) ) / Min( ( ( FirstVNF_CPU / CRS ) - Min( MDR ,Const ) ) ,Min( ( FirstVNF_CPU_Server / MRS ) ,( Const / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS + MUM ) / ( RMSe + ( RCSe + CS ) ) )", "obj1": 0.3665338645418327, "obj2": 0.5455954292724663}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) )", "obj1": 0.6254980079681275, "obj2": 0.3177063499167374}, {"determining": "( ( MDR - Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MLU ,MUM ) )", "obj1": 0.4701195219123506, "obj2": 0.4531414461606565}], "2": [{"determining": "( Max( FirstVNF_Mem_Server,ACS ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6212917217865308}, {"determining": "( ( ARS * FirstVNF_Mem_Server ) * ( ARS - MDR ) )", "choosing": "Min( ( DS - RCSe ) ,( MUC * RMSe ) )", "obj1": 0.5737051792828686, "obj2": 0.40429125433755086}, {"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * CS ) ,( RCSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / RRS ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( MUC / ( MUC + MUM ) ) ),( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM ) / Max( ACS,CRS ) ) ,( Min( MRS ,ARS ) / Min( FirstVNF_Mem ,AMS ) ) ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,DS ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) )", "obj1": 0.6254980079681275, "obj2": 0.3177063499167374}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( ( ACS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( ( FirstVNF_Mem / Const ) + Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( MUC + MUC ) - DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( ARS + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_RAM_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MLU * MUR ) / Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) + ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ),BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( ( RCSe / CS ),RCSe ) + RRSe ) )", "obj1": 0.6175298804780877, "obj2": 0.3843879294860629}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) * Min( ( MUC - ( MUR / RMSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_CPU ) + ( DDR - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - Max( DS,RCSe ) ) )", "obj1": 0.99800796812749, "obj2": 0.0017554832634721733}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( MUC,MUM ) ) + Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + ( MDR + FirstVNF_RAM_Server ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( MRS ,FirstVNF_CPU ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - RCSe ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN + FirstVNF_Mem ) + ( MDR + FirstVNF_RAM_Server ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( ( ARS * BR ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - MUC ) + ( CS * MLU ) )", "obj1": 0.9840637450199203, "obj2": 0.021230468121433598}, {"determining": "( ( ( Max( ( RRS - RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - ACS ) - Max( MRS,MRS ) )", "choosing": "Min( ( ( ( MUR / MUC ) - Min( RRSe ,MLU ) ) - MUC ) ,Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS - MRS ) )", "choosing": "Min( Min( MLU ,MUC ) ,( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_Mem / Const ) ) ) )", "choosing": "( Max( Max( MUM,MUR ),Max( MUC,MUM ) ) * Min( ( MUR * MUM ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS * MUR ) / ( MUC - RRSe ) ) + ( ( MUC * DS ) - ( RCSe + MUR ) ) ) ,( Min( ( MUR * MUM ) ,( MUM * RCSe ) ) / ( Max( RCSe,RCSe ) / ( CS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( Min( ( ( Min( FirstVNF_CPU ,MRS ) / Max( FirstVNF_Mem_Server,DDR ) ) + Min( Max( ACS,MDR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ,Max( ( Max( PN,RRS ) / ( FirstVNF_CPU_Server - CRS ) ),( ( ARS / FirstVNF_CPU ) * ( MRS / FirstVNF_Mem ) ) ) ),Min( ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - Max( Const,RRS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) ,Min( ( Max( CRS,MRS ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) ,( ( CRS - FirstVNF_Mem_Server ) * Max( RRS,ARS ) ) ) ) ) + Min( ( ( Max( ( ACS + ACS ),( ACS + DDR ) ) * Max( ( FirstVNF_CPU + DDR ),( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) * ( Max( ( FirstVNF_Mem / MDR ),Min( BR ,AMS ) ) * Min( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM ,DDR ) ) ) ) ,( ( ( ( FirstVNF_Mem_Server - BR ) / ( FirstVNF_CPU - BR ) ) / ( Max( DDR,Const ) + Min( AMS ,FirstVNF_Mem ) ) ) + ( ( ( RRS / ACS ) / Min( Const ,ACS ) ) - ( ( FirstVNF_Mem_Server * CRS ) - Min( ACS ,MRS ) ) ) ) ) ),( Min( ( Max( ( ( CRS - PN ) - ( RRS / FirstVNF_Mem ) ),( ( CRS + Const ) + Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) + ( ( Min( FirstVNF_Mem_Server ,AMS ) + Min( MDR ,Const ) ) / Min( ( DDR / MDR ) ,Min( PN ,FirstVNF_Mem_Server ) ) ) ) ,( ( Min( ( MRS / DDR ) ,( DDR - FirstVNF_RAM ) ) * ( ( DDR - BR ) + Min( ACS ,DDR ) ) ) + Min( Min( ( ACS + FirstVNF_Mem ) ,Min( FirstVNF_Mem ,ARS ) ) ,( ( MRS * RRS ) + ( ACS - FirstVNF_Mem_Server ) ) ) ) ) - Max( Min( ( Max( ( PN / FirstVNF_RAM ),( FirstVNF_Mem / FirstVNF_CPU ) ) * ( Min( ACS ,ACS ) * ( BR + FirstVNF_CPU ) ) ) ,( Min( Max( FirstVNF_RAM_Server,ARS ) ,( PN - FirstVNF_Mem ) ) * ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * DDR ) ) ) ),Min( ( ( ( Const / FirstVNF_RAM ) + ( RRS / ARS ) ) - ( Min( MDR ,CRS ) + Max( FirstVNF_CPU_Server,Const ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) * ( ACS * ACS ) ) ,( ( ARS - AMS ) * ( DDR - FirstVNF_CPU_Server ) ) ) ) ) ) ) ,( ( ( Max( Min( ( ( BR - FirstVNF_Mem_Server ) - Min( MRS ,FirstVNF_CPU_Server ) ) ,( Max( Const,FirstVNF_Mem ) - ( AMS / PN ) ) ),Max( ( ( FirstVNF_CPU_Server * ARS ) / Max( FirstVNF_RAM,MDR ) ),( ( AMS / Const ) - ( FirstVNF_Mem * AMS ) ) ) ) + ( ( ( ( ARS - DDR ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) - ( Max( MRS,FirstVNF_Mem_Server ) / Max( FirstVNF_RAM,MRS ) ) ) / Max( ( ( CRS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM * FirstVNF_Mem ) ),( Min( AMS ,BR ) / Min( FirstVNF_RAM ,ACS ) ) ) ) ) / ( Max( ( Max( ( FirstVNF_RAM / FirstVNF_Mem ),( ARS + FirstVNF_CPU ) ) / ( ( FirstVNF_CPU_Server + DDR ) + ( CRS + FirstVNF_RAM_Server ) ) ),( ( Max( FirstVNF_Mem,CRS ) / Min( ARS ,FirstVNF_CPU ) ) / ( ( MDR * AMS ) - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) / Min( Min( Min( ( ACS - DDR ) ,Max( BR,ARS ) ) ,( Min( MDR ,ACS ) * ( RRS * FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_CPU_Server - MRS ) / ( AMS + MDR ) ) * Max( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ),( AMS - RRS ) ) ) ) ) ) + ( Max( ( ( ( ( FirstVNF_RAM * BR ) / Max( FirstVNF_CPU,RRS ) ) * ( ( FirstVNF_RAM_Server * ARS ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) + Min( Max( ( FirstVNF_Mem / DDR ),( FirstVNF_RAM_Server - PN ) ) ,( ( FirstVNF_RAM - BR ) + ( MDR + ACS ) ) ) ),Max( Min( ( Min( FirstVNF_Mem ,DDR ) / Min( FirstVNF_RAM_Server ,ACS ) ) ,( ( PN + Const ) - Max( ACS,RRS ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,Const ) ) + ( ( AMS - FirstVNF_Mem_Server ) + ( RRS * CRS ) ) ) ) ) / Min( ( ( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_CPU + BR ) ) + ( ( ACS * BR ) / ( FirstVNF_Mem_Server + AMS ) ) ) / Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ,( ( ACS * MDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ) ,( Min( Min( Min( ACS ,PN ) ,( CRS / PN ) ) ,( Max( ACS,BR ) - ( FirstVNF_RAM + PN ) ) ) - ( ( Max( ACS,RRS ) / ( PN * PN ) ) * ( ( RRS - CRS ) / Max( ACS,DDR ) ) ) ) ) ) ) )", "choosing": "Min( ( MLU / MUR ) ,Max( ( RMSe / MUC ),( DS - MLU ) ) )", "obj1": 0.8944223107569721, "obj2": 0.07743073989956886}, {"determining": "( ( ARS * CRS ) * ( ARS - AMS ) )", "choosing": "Min( ( DS - RCSe ) ,( RCSe * ( MLU + RRSe ) ) )", "obj1": 0.7529880478087649, "obj2": 0.22406554351913305}, {"determining": "( ( ARS * FirstVNF_Mem_Server ) * ( ARS - AMS ) )", "choosing": "Max( ( MUC + MUC ),( MLU + RRSe ) )", "obj1": 0.703187250996016, "obj2": 0.26849305029138587}, {"determining": "( Min( Max( MRS,( DDR - MDR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( DS,( RMSe * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( AMS - BR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( RCSe / ( MUC + MUM ) ) ),( MLU * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( MUC / ( MUC + MUM ) ) ),( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Max( Max( ( Const + FirstVNF_Mem_Server ),( Const * DDR ) ),Min( ( FirstVNF_CPU + DDR ) ,Max( FirstVNF_Mem_Server,MRS ) ) ) + ( Max( ( AMS / AMS ),( PN + FirstVNF_CPU ) ) * ( Max( ARS,FirstVNF_CPU_Server ) - Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( MUC ,( DS / RMSe ) ) / ( DS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( RMSe / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( PN,ACS ) - Min( MRS ,MDR ) ) / ( Max( Const,AMS ) * ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ,( ( Min( MDR ,AMS ) + Min( MDR ,PN ) ) - Max( ARS,AMS ) ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( DS - RMSe ) ) + ( Min( MLU ,MUM ) - ( MUR - DS ) ) ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - Min( PN ,RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + CRS ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) ) ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( MUM - ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( Const / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( RCSe,MUM ) ) * Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,( Max( ( RRS / RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + ( ( BR * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ( FirstVNF_RAM_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RRSe / CS ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RMSe ) ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server - Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + ( Max( MUC,DS ) / ( MUM - MUR ) ) ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( ( Max( ( Max( FirstVNF_Mem,PN ) * ( DDR * FirstVNF_RAM ) ),Max( ( PN / Const ),Min( MDR ,Const ) ) ) * ( Min( ( BR * AMS ) ,( MDR * FirstVNF_CPU ) ) - ( Min( FirstVNF_RAM ,DDR ) - ( BR * ARS ) ) ) ),Min( Min( Max( Max( MRS,FirstVNF_Mem_Server ),( BR - FirstVNF_CPU_Server ) ) ,Max( ( RRS - BR ),Max( PN,PN ) ) ) ,Max( ( Max( PN,PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ),( ( MRS / FirstVNF_Mem_Server ) - ( DDR - MRS ) ) ) ) ) / ( ( ( ( ( AMS / DDR ) - Max( DDR,Const ) ) - ( ( RRS / FirstVNF_CPU_Server ) / ( DDR + ACS ) ) ) * Min( Min( Max( ARS,PN ) ,Max( DDR,Const ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem ) * Max( CRS,FirstVNF_RAM_Server ) ) ) ) - ( ( ( Min( Const ,FirstVNF_CPU ) * Max( Const,BR ) ) / Max( ( DDR * ACS ),( MDR + PN ) ) ) + Min( ( ( FirstVNF_RAM * ARS ) * Max( MDR,MDR ) ) ,Max( Max( FirstVNF_RAM_Server,PN ),Max( FirstVNF_RAM,DDR ) ) ) ) ) ) ,Min( ( ( ( ( ( MDR * CRS ) - Min( FirstVNF_RAM_Server ,ACS ) ) - ( ( FirstVNF_Mem + CRS ) - Max( MDR,FirstVNF_Mem_Server ) ) ) / ( ( ( ARS - ARS ) * Min( FirstVNF_Mem_Server ,DDR ) ) + Min( ( DDR + ACS ) ,( DDR + MRS ) ) ) ) * ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / ACS ) ) * ( ( Const - Const ) + ( RRS + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server * AMS ) / ( FirstVNF_Mem_Server / PN ) ) * Min( ( RRS * FirstVNF_RAM_Server ) ,( FirstVNF_Mem - RRS ) ) ) ) ) ,Min( Max( Min( ( ( FirstVNF_Mem - BR ) + ( FirstVNF_Mem + ACS ) ) ,( ( DDR + DDR ) / ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ),Min( ( ( BR + BR ) / ( MDR / MRS ) ) ,Max( Min( DDR ,PN ),Max( BR,AMS ) ) ) ) ,( ( ( Min( AMS ,BR ) + Min( Const ,FirstVNF_CPU_Server ) ) / ( ( DDR - FirstVNF_RAM ) - ( BR - MRS ) ) ) * ( Max( ( FirstVNF_Mem / CRS ),Max( DDR,Const ) ) + ( ( FirstVNF_Mem - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) ) ) ) - Min( ( ( ( Max( ( ( BR / MDR ) * Min( MDR ,ARS ) ),Min( ( FirstVNF_CPU - DDR ) ,Min( MDR ,Const ) ) ) + ( ( Min( RRS ,ACS ) / ( AMS / FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_RAM_Server ,ACS ) ,( ARS + FirstVNF_RAM ) ) ) ) + ( ( ( Min( FirstVNF_CPU ,ARS ) / ( RRS / ACS ) ) - ( ( CRS / MDR ) + ( BR * MRS ) ) ) / ( ( ( ACS - MDR ) / ( Const + FirstVNF_CPU ) ) * ( Min( DDR ,BR ) - ( ARS - FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( ( Min( DDR ,FirstVNF_CPU ) / Max( MRS,FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Min( MRS ,DDR ) ) ) * Min( Min( ( RRS - BR ) ,( AMS + CRS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / Min( FirstVNF_CPU ,ACS ) ) ) ) + ( ( ( Max( ACS,AMS ) - Max( AMS,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU_Server - ARS ) ) ) - ( Max( ( PN - DDR ),( FirstVNF_Mem_Server / Const ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( RRS + BR ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( Const + DDR ) ) / ( ( Const * ACS ) - Max( AMS,FirstVNF_RAM ) ) ) * ( ( Max( CRS,Const ) + Min( FirstVNF_RAM_Server ,BR ) ) / ( ( FirstVNF_Mem_Server * DDR ) + Min( AMS ,FirstVNF_RAM_Server ) ) ) ) / Min( Max( ( Max( CRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * PN ) ) ) ,( ( Max( PN,FirstVNF_CPU ) * ( RRS / MRS ) ) / ( Min( FirstVNF_RAM_Server ,MDR ) * ( CRS / FirstVNF_RAM_Server ) ) ) ) ),( ( Min( Min( ( RRS * FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_CPU_Server ,MRS ),( FirstVNF_Mem_Server - Const ) ) ) / ( Min( ( PN * FirstVNF_RAM ) ,( FirstVNF_RAM * MDR ) ) / Min( Max( BR,RRS ) ,( ARS / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( Const + FirstVNF_Mem_Server ) - ( MDR * ARS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - Max( DDR,FirstVNF_RAM_Server ) ) ) / ( ( ( MDR - FirstVNF_Mem_Server ) / ( BR * FirstVNF_RAM ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( CRS + PN ) ) ) ) ) ) ) )", "choosing": "( Max( ( RRSe - CS ),MUC ) / ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * ( ( ( ARS * RRS ) - ( RRS + MDR ) ) + ( Min( AMS ,ACS ) / ( ACS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,RRSe ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) )", "obj1": 0.6434262948207171, "obj2": 0.2809508045964299}, {"determining": "( ( ( ARS / BR ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server / Const ) + Min( DDR ,CRS ) ) ) )", "choosing": "( ( MUC / Min( MUR ,( RRSe / MUC ) ) ) * Max( ( RCSe - RCSe ),Min( MUC ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( ACS + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,AMS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MLU ) / DS ) - ( ( MLU - RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) + ( Const - MDR ) ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * ACS ) / ( Const + FirstVNF_RAM ) ) * Min( ( AMS * FirstVNF_CPU_Server ) ,( ACS - AMS ) ) ) * Max( ( FirstVNF_RAM * Const ),( DDR + FirstVNF_Mem ) ) )", "choosing": "( ( DS * ( Max( MUC,DS ) + ( DS * MLU ) ) ) * ( ( Min( DS ,RRSe ) + Max( MUR,MUC ) ) - Min( ( MLU - RMSe ) ,( RMSe * MUC ) ) ) )", "obj1": 0.8286852589641435, "obj2": 0.11560401438848673}], "3": [{"determining": "( Max( FirstVNF_Mem_Server,ACS ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6212917217865308}, {"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * CS ) ,( RCSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / RRS ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( MUC / ( MUC + MUM ) ) ),( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( ( ACS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( ( FirstVNF_Mem / Const ) + Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( MUC + MUC ) - DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( ARS + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_RAM_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MLU * MUR ) / Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) + ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) * Min( ( MUC - ( MUR / RMSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( MUC,MUM ) ) + Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + ( MDR + FirstVNF_RAM_Server ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( MRS ,FirstVNF_CPU ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - RCSe ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( RRS - RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - ACS ) - Max( MRS,MRS ) )", "choosing": "Min( ( ( ( MUR / MUC ) - Min( RRSe ,MLU ) ) - MUC ) ,Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS - MRS ) )", "choosing": "Min( Min( MLU ,MUC ) ,( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_Mem / Const ) ) ) )", "choosing": "( Max( Max( MUM,MUR ),Max( MUC,MUM ) ) * Min( ( MUR * MUM ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS * MUR ) / ( MUC - RRSe ) ) + ( ( MUC * DS ) - ( RCSe + MUR ) ) ) ,( Min( ( MUR * MUM ) ,( MUM * RCSe ) ) / ( Max( RCSe,RCSe ) / ( CS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( DDR - MDR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( DS,( RMSe * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( AMS - BR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( RCSe / ( MUC + MUM ) ) ),( MLU * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( MUC / ( MUC + MUM ) ) ),( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Max( Max( ( Const + FirstVNF_Mem_Server ),( Const * DDR ) ),Min( ( FirstVNF_CPU + DDR ) ,Max( FirstVNF_Mem_Server,MRS ) ) ) + ( Max( ( AMS / AMS ),( PN + FirstVNF_CPU ) ) * ( Max( ARS,FirstVNF_CPU_Server ) - Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( MUC ,( DS / RMSe ) ) / ( DS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( RMSe / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( PN,ACS ) - Min( MRS ,MDR ) ) / ( Max( Const,AMS ) * ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ,( ( Min( MDR ,AMS ) + Min( MDR ,PN ) ) - Max( ARS,AMS ) ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( DS - RMSe ) ) + ( Min( MLU ,MUM ) - ( MUR - DS ) ) ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - Min( PN ,RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + CRS ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) ) ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( MUM - ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( Const / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( RCSe,MUM ) ) * Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,( Max( ( RRS / RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + ( ( BR * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ( FirstVNF_RAM_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RRSe / CS ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RMSe ) ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server - Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + ( Max( MUC,DS ) / ( MUM - MUR ) ) ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( ( Max( ( Max( FirstVNF_Mem,PN ) * ( DDR * FirstVNF_RAM ) ),Max( ( PN / Const ),Min( MDR ,Const ) ) ) * ( Min( ( BR * AMS ) ,( MDR * FirstVNF_CPU ) ) - ( Min( FirstVNF_RAM ,DDR ) - ( BR * ARS ) ) ) ),Min( Min( Max( Max( MRS,FirstVNF_Mem_Server ),( BR - FirstVNF_CPU_Server ) ) ,Max( ( RRS - BR ),Max( PN,PN ) ) ) ,Max( ( Max( PN,PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ),( ( MRS / FirstVNF_Mem_Server ) - ( DDR - MRS ) ) ) ) ) / ( ( ( ( ( AMS / DDR ) - Max( DDR,Const ) ) - ( ( RRS / FirstVNF_CPU_Server ) / ( DDR + ACS ) ) ) * Min( Min( Max( ARS,PN ) ,Max( DDR,Const ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem ) * Max( CRS,FirstVNF_RAM_Server ) ) ) ) - ( ( ( Min( Const ,FirstVNF_CPU ) * Max( Const,BR ) ) / Max( ( DDR * ACS ),( MDR + PN ) ) ) + Min( ( ( FirstVNF_RAM * ARS ) * Max( MDR,MDR ) ) ,Max( Max( FirstVNF_RAM_Server,PN ),Max( FirstVNF_RAM,DDR ) ) ) ) ) ) ,Min( ( ( ( ( ( MDR * CRS ) - Min( FirstVNF_RAM_Server ,ACS ) ) - ( ( FirstVNF_Mem + CRS ) - Max( MDR,FirstVNF_Mem_Server ) ) ) / ( ( ( ARS - ARS ) * Min( FirstVNF_Mem_Server ,DDR ) ) + Min( ( DDR + ACS ) ,( DDR + MRS ) ) ) ) * ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / ACS ) ) * ( ( Const - Const ) + ( RRS + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server * AMS ) / ( FirstVNF_Mem_Server / PN ) ) * Min( ( RRS * FirstVNF_RAM_Server ) ,( FirstVNF_Mem - RRS ) ) ) ) ) ,Min( Max( Min( ( ( FirstVNF_Mem - BR ) + ( FirstVNF_Mem + ACS ) ) ,( ( DDR + DDR ) / ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ),Min( ( ( BR + BR ) / ( MDR / MRS ) ) ,Max( Min( DDR ,PN ),Max( BR,AMS ) ) ) ) ,( ( ( Min( AMS ,BR ) + Min( Const ,FirstVNF_CPU_Server ) ) / ( ( DDR - FirstVNF_RAM ) - ( BR - MRS ) ) ) * ( Max( ( FirstVNF_Mem / CRS ),Max( DDR,Const ) ) + ( ( FirstVNF_Mem - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) ) ) ) - Min( ( ( ( Max( ( ( BR / MDR ) * Min( MDR ,ARS ) ),Min( ( FirstVNF_CPU - DDR ) ,Min( MDR ,Const ) ) ) + ( ( Min( RRS ,ACS ) / ( AMS / FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_RAM_Server ,ACS ) ,( ARS + FirstVNF_RAM ) ) ) ) + ( ( ( Min( FirstVNF_CPU ,ARS ) / ( RRS / ACS ) ) - ( ( CRS / MDR ) + ( BR * MRS ) ) ) / ( ( ( ACS - MDR ) / ( Const + FirstVNF_CPU ) ) * ( Min( DDR ,BR ) - ( ARS - FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( ( Min( DDR ,FirstVNF_CPU ) / Max( MRS,FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Min( MRS ,DDR ) ) ) * Min( Min( ( RRS - BR ) ,( AMS + CRS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / Min( FirstVNF_CPU ,ACS ) ) ) ) + ( ( ( Max( ACS,AMS ) - Max( AMS,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU_Server - ARS ) ) ) - ( Max( ( PN - DDR ),( FirstVNF_Mem_Server / Const ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( RRS + BR ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( Const + DDR ) ) / ( ( Const * ACS ) - Max( AMS,FirstVNF_RAM ) ) ) * ( ( Max( CRS,Const ) + Min( FirstVNF_RAM_Server ,BR ) ) / ( ( FirstVNF_Mem_Server * DDR ) + Min( AMS ,FirstVNF_RAM_Server ) ) ) ) / Min( Max( ( Max( CRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * PN ) ) ) ,( ( Max( PN,FirstVNF_CPU ) * ( RRS / MRS ) ) / ( Min( FirstVNF_RAM_Server ,MDR ) * ( CRS / FirstVNF_RAM_Server ) ) ) ) ),( ( Min( Min( ( RRS * FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_CPU_Server ,MRS ),( FirstVNF_Mem_Server - Const ) ) ) / ( Min( ( PN * FirstVNF_RAM ) ,( FirstVNF_RAM * MDR ) ) / Min( Max( BR,RRS ) ,( ARS / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( Const + FirstVNF_Mem_Server ) - ( MDR * ARS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - Max( DDR,FirstVNF_RAM_Server ) ) ) / ( ( ( MDR - FirstVNF_Mem_Server ) / ( BR * FirstVNF_RAM ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( CRS + PN ) ) ) ) ) ) ) )", "choosing": "( Max( ( RRSe - CS ),MUC ) / ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / BR ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server / Const ) + Min( DDR ,CRS ) ) ) )", "choosing": "( ( MUC / Min( MUR ,( RRSe / MUC ) ) ) * Max( ( RCSe - RCSe ),Min( MUC ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( ACS + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,AMS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MLU ) / DS ) - ( ( MLU - RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) + ( Const - MDR ) ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( Max( MUM,MUR ) / Max( MUC,MUM ) ) * ( ( MUR - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN + FirstVNF_Mem ) + ( MDR * FirstVNF_RAM_Server ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( MRS ,FirstVNF_CPU ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - MUM ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,CS ) ,Max( MUC,MUM ) ) * Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * RRS ) - ( RRS + MDR ) ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,RRSe ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU * FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) + Min( MRS ,CRS ) ) ) ) ,MRS ) - Max( AMS,( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( RCSe - ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( MUC + MUC ) / DS ) - ( Min( MLU ,RRSe ) / DS ) ) ) ) ,( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RMSe ) ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) ) ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( RCSe - ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( Min( MLU ,RRSe ) / MUR ) / CS ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Max( FirstVNF_Mem_Server,ACS ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6212917217865308}, {"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * CS ) ,( RCSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / RRS ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( MUC / ( MUC + MUM ) ) ),( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( ( ACS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( ( FirstVNF_Mem / Const ) + Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( MUC + MUC ) - DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( ARS + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_RAM_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MLU * MUR ) / Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) + ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) * Min( ( MUC - ( MUR / RMSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( MUC,MUM ) ) + Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + ( MDR + FirstVNF_RAM_Server ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( MRS ,FirstVNF_CPU ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - RCSe ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( RRS - RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - ACS ) - Max( MRS,MRS ) )", "choosing": "Min( ( ( ( MUR / MUC ) - Min( RRSe ,MLU ) ) - MUC ) ,Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS - MRS ) )", "choosing": "Min( Min( MLU ,MUC ) ,( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_Mem / Const ) ) ) )", "choosing": "( Max( Max( MUM,MUR ),Max( MUC,MUM ) ) * Min( ( MUR * MUM ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS * MUR ) / ( MUC - RRSe ) ) + ( ( MUC * DS ) - ( RCSe + MUR ) ) ) ,( Min( ( MUR * MUM ) ,( MUM * RCSe ) ) / ( Max( RCSe,RCSe ) / ( CS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( DDR - MDR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( DS,( RMSe * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( AMS - BR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( RCSe / ( MUC + MUM ) ) ),( MLU * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( MUC / ( MUC + MUM ) ) ),( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Max( Max( ( Const + FirstVNF_Mem_Server ),( Const * DDR ) ),Min( ( FirstVNF_CPU + DDR ) ,Max( FirstVNF_Mem_Server,MRS ) ) ) + ( Max( ( AMS / AMS ),( PN + FirstVNF_CPU ) ) * ( Max( ARS,FirstVNF_CPU_Server ) - Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( MUC ,( DS / RMSe ) ) / ( DS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( RMSe / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( PN,ACS ) - Min( MRS ,MDR ) ) / ( Max( Const,AMS ) * ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ,( ( Min( MDR ,AMS ) + Min( MDR ,PN ) ) - Max( ARS,AMS ) ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( DS - RMSe ) ) + ( Min( MLU ,MUM ) - ( MUR - DS ) ) ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - Min( PN ,RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + CRS ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) ) ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( MUM - ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( Const / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( RCSe,MUM ) ) * Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,( Max( ( RRS / RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + ( ( BR * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ( FirstVNF_RAM_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RRSe / CS ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RMSe ) ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server - Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + ( Max( MUC,DS ) / ( MUM - MUR ) ) ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( ( Max( ( Max( FirstVNF_Mem,PN ) * ( DDR * FirstVNF_RAM ) ),Max( ( PN / Const ),Min( MDR ,Const ) ) ) * ( Min( ( BR * AMS ) ,( MDR * FirstVNF_CPU ) ) - ( Min( FirstVNF_RAM ,DDR ) - ( BR * ARS ) ) ) ),Min( Min( Max( Max( MRS,FirstVNF_Mem_Server ),( BR - FirstVNF_CPU_Server ) ) ,Max( ( RRS - BR ),Max( PN,PN ) ) ) ,Max( ( Max( PN,PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ),( ( MRS / FirstVNF_Mem_Server ) - ( DDR - MRS ) ) ) ) ) / ( ( ( ( ( AMS / DDR ) - Max( DDR,Const ) ) - ( ( RRS / FirstVNF_CPU_Server ) / ( DDR + ACS ) ) ) * Min( Min( Max( ARS,PN ) ,Max( DDR,Const ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem ) * Max( CRS,FirstVNF_RAM_Server ) ) ) ) - ( ( ( Min( Const ,FirstVNF_CPU ) * Max( Const,BR ) ) / Max( ( DDR * ACS ),( MDR + PN ) ) ) + Min( ( ( FirstVNF_RAM * ARS ) * Max( MDR,MDR ) ) ,Max( Max( FirstVNF_RAM_Server,PN ),Max( FirstVNF_RAM,DDR ) ) ) ) ) ) ,Min( ( ( ( ( ( MDR * CRS ) - Min( FirstVNF_RAM_Server ,ACS ) ) - ( ( FirstVNF_Mem + CRS ) - Max( MDR,FirstVNF_Mem_Server ) ) ) / ( ( ( ARS - ARS ) * Min( FirstVNF_Mem_Server ,DDR ) ) + Min( ( DDR + ACS ) ,( DDR + MRS ) ) ) ) * ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / ACS ) ) * ( ( Const - Const ) + ( RRS + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server * AMS ) / ( FirstVNF_Mem_Server / PN ) ) * Min( ( RRS * FirstVNF_RAM_Server ) ,( FirstVNF_Mem - RRS ) ) ) ) ) ,Min( Max( Min( ( ( FirstVNF_Mem - BR ) + ( FirstVNF_Mem + ACS ) ) ,( ( DDR + DDR ) / ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ),Min( ( ( BR + BR ) / ( MDR / MRS ) ) ,Max( Min( DDR ,PN ),Max( BR,AMS ) ) ) ) ,( ( ( Min( AMS ,BR ) + Min( Const ,FirstVNF_CPU_Server ) ) / ( ( DDR - FirstVNF_RAM ) - ( BR - MRS ) ) ) * ( Max( ( FirstVNF_Mem / CRS ),Max( DDR,Const ) ) + ( ( FirstVNF_Mem - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) ) ) ) - Min( ( ( ( Max( ( ( BR / MDR ) * Min( MDR ,ARS ) ),Min( ( FirstVNF_CPU - DDR ) ,Min( MDR ,Const ) ) ) + ( ( Min( RRS ,ACS ) / ( AMS / FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_RAM_Server ,ACS ) ,( ARS + FirstVNF_RAM ) ) ) ) + ( ( ( Min( FirstVNF_CPU ,ARS ) / ( RRS / ACS ) ) - ( ( CRS / MDR ) + ( BR * MRS ) ) ) / ( ( ( ACS - MDR ) / ( Const + FirstVNF_CPU ) ) * ( Min( DDR ,BR ) - ( ARS - FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( ( Min( DDR ,FirstVNF_CPU ) / Max( MRS,FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Min( MRS ,DDR ) ) ) * Min( Min( ( RRS - BR ) ,( AMS + CRS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / Min( FirstVNF_CPU ,ACS ) ) ) ) + ( ( ( Max( ACS,AMS ) - Max( AMS,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU_Server - ARS ) ) ) - ( Max( ( PN - DDR ),( FirstVNF_Mem_Server / Const ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( RRS + BR ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( Const + DDR ) ) / ( ( Const * ACS ) - Max( AMS,FirstVNF_RAM ) ) ) * ( ( Max( CRS,Const ) + Min( FirstVNF_RAM_Server ,BR ) ) / ( ( FirstVNF_Mem_Server * DDR ) + Min( AMS ,FirstVNF_RAM_Server ) ) ) ) / Min( Max( ( Max( CRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * PN ) ) ) ,( ( Max( PN,FirstVNF_CPU ) * ( RRS / MRS ) ) / ( Min( FirstVNF_RAM_Server ,MDR ) * ( CRS / FirstVNF_RAM_Server ) ) ) ) ),( ( Min( Min( ( RRS * FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_CPU_Server ,MRS ),( FirstVNF_Mem_Server - Const ) ) ) / ( Min( ( PN * FirstVNF_RAM ) ,( FirstVNF_RAM * MDR ) ) / Min( Max( BR,RRS ) ,( ARS / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( Const + FirstVNF_Mem_Server ) - ( MDR * ARS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - Max( DDR,FirstVNF_RAM_Server ) ) ) / ( ( ( MDR - FirstVNF_Mem_Server ) / ( BR * FirstVNF_RAM ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( CRS + PN ) ) ) ) ) ) ) )", "choosing": "( Max( ( RRSe - CS ),MUC ) / ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / BR ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server / Const ) + Min( DDR ,CRS ) ) ) )", "choosing": "( ( MUC / Min( MUR ,( RRSe / MUC ) ) ) * Max( ( RCSe - RCSe ),Min( MUC ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( ACS + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,AMS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MLU ) / DS ) - ( ( MLU - RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) + ( Const - MDR ) ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( Max( MUM,MUR ) / Max( MUC,MUM ) ) * ( ( MUR - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN + FirstVNF_Mem ) + ( MDR * FirstVNF_RAM_Server ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( MRS ,FirstVNF_CPU ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - MUM ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,CS ) ,Max( MUC,MUM ) ) * Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * RRS ) - ( RRS + MDR ) ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,RRSe ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU * FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) + Min( MRS ,CRS ) ) ) ) ,MRS ) - Max( AMS,( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( RCSe - ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( MUC + MUC ) / DS ) - ( Min( MLU ,RRSe ) / DS ) ) ) ) ,( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RMSe ) ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) ) ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( RCSe - ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( Min( MLU ,RRSe ) / MUR ) / CS ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Max( FirstVNF_Mem_Server,ACS ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,RRSe ) * ( RRSe - RCSe ) )", "obj1": 0.28087649402390436, "obj2": 0.6212917217865308}, {"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * CS ) ,( RCSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / RRS ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( MUC / ( MUC + MUM ) ) ),( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( ( ACS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( ( FirstVNF_Mem / Const ) + Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( MUC + MUC ) - DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( ARS + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_RAM_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MLU * MUR ) / Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) + ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) * Min( ( MUC - ( MUR / RMSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( MUC,MUM ) ) + Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + ( MDR + FirstVNF_RAM_Server ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( MRS ,FirstVNF_CPU ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - RCSe ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( RRS - RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - ACS ) - Max( MRS,MRS ) )", "choosing": "Min( ( ( ( MUR / MUC ) - Min( RRSe ,MLU ) ) - MUC ) ,Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS - MRS ) )", "choosing": "Min( Min( MLU ,MUC ) ,( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_Mem / Const ) ) ) )", "choosing": "( Max( Max( MUM,MUR ),Max( MUC,MUM ) ) * Min( ( MUR * MUM ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS * MUR ) / ( MUC - RRSe ) ) + ( ( MUC * DS ) - ( RCSe + MUR ) ) ) ,( Min( ( MUR * MUM ) ,( MUM * RCSe ) ) / ( Max( RCSe,RCSe ) / ( CS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( DDR - MDR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( DS,( RMSe * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( AMS - BR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( RCSe / ( MUC + MUM ) ) ),( MLU * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( MUC / ( MUC + MUM ) ) ),( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Max( Max( ( Const + FirstVNF_Mem_Server ),( Const * DDR ) ),Min( ( FirstVNF_CPU + DDR ) ,Max( FirstVNF_Mem_Server,MRS ) ) ) + ( Max( ( AMS / AMS ),( PN + FirstVNF_CPU ) ) * ( Max( ARS,FirstVNF_CPU_Server ) - Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( MUC ,( DS / RMSe ) ) / ( DS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( RMSe / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( PN,ACS ) - Min( MRS ,MDR ) ) / ( Max( Const,AMS ) * ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ,( ( Min( MDR ,AMS ) + Min( MDR ,PN ) ) - Max( ARS,AMS ) ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( DS - RMSe ) ) + ( Min( MLU ,MUM ) - ( MUR - DS ) ) ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - Min( PN ,RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + CRS ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) ) ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( MUM - ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( Const / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( RCSe,MUM ) ) * Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,( Max( ( RRS / RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + ( ( BR * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ( FirstVNF_RAM_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RRSe / CS ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RMSe ) ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server - Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUC + ( Max( MUC,DS ) / ( MUM - MUR ) ) ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( ( Max( ( Max( FirstVNF_Mem,PN ) * ( DDR * FirstVNF_RAM ) ),Max( ( PN / Const ),Min( MDR ,Const ) ) ) * ( Min( ( BR * AMS ) ,( MDR * FirstVNF_CPU ) ) - ( Min( FirstVNF_RAM ,DDR ) - ( BR * ARS ) ) ) ),Min( Min( Max( Max( MRS,FirstVNF_Mem_Server ),( BR - FirstVNF_CPU_Server ) ) ,Max( ( RRS - BR ),Max( PN,PN ) ) ) ,Max( ( Max( PN,PN ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ),( ( MRS / FirstVNF_Mem_Server ) - ( DDR - MRS ) ) ) ) ) / ( ( ( ( ( AMS / DDR ) - Max( DDR,Const ) ) - ( ( RRS / FirstVNF_CPU_Server ) / ( DDR + ACS ) ) ) * Min( Min( Max( ARS,PN ) ,Max( DDR,Const ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem ) * Max( CRS,FirstVNF_RAM_Server ) ) ) ) - ( ( ( Min( Const ,FirstVNF_CPU ) * Max( Const,BR ) ) / Max( ( DDR * ACS ),( MDR + PN ) ) ) + Min( ( ( FirstVNF_RAM * ARS ) * Max( MDR,MDR ) ) ,Max( Max( FirstVNF_RAM_Server,PN ),Max( FirstVNF_RAM,DDR ) ) ) ) ) ) ,Min( ( ( ( ( ( MDR * CRS ) - Min( FirstVNF_RAM_Server ,ACS ) ) - ( ( FirstVNF_Mem + CRS ) - Max( MDR,FirstVNF_Mem_Server ) ) ) / ( ( ( ARS - ARS ) * Min( FirstVNF_Mem_Server ,DDR ) ) + Min( ( DDR + ACS ) ,( DDR + MRS ) ) ) ) * ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / ACS ) ) * ( ( Const - Const ) + ( RRS + DDR ) ) ) * ( ( ( FirstVNF_Mem_Server * AMS ) / ( FirstVNF_Mem_Server / PN ) ) * Min( ( RRS * FirstVNF_RAM_Server ) ,( FirstVNF_Mem - RRS ) ) ) ) ) ,Min( Max( Min( ( ( FirstVNF_Mem - BR ) + ( FirstVNF_Mem + ACS ) ) ,( ( DDR + DDR ) / ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ),Min( ( ( BR + BR ) / ( MDR / MRS ) ) ,Max( Min( DDR ,PN ),Max( BR,AMS ) ) ) ) ,( ( ( Min( AMS ,BR ) + Min( Const ,FirstVNF_CPU_Server ) ) / ( ( DDR - FirstVNF_RAM ) - ( BR - MRS ) ) ) * ( Max( ( FirstVNF_Mem / CRS ),Max( DDR,Const ) ) + ( ( FirstVNF_Mem - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) ) ) ) ) - Min( ( ( ( Max( ( ( BR / MDR ) * Min( MDR ,ARS ) ),Min( ( FirstVNF_CPU - DDR ) ,Min( MDR ,Const ) ) ) + ( ( Min( RRS ,ACS ) / ( AMS / FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_RAM_Server ,ACS ) ,( ARS + FirstVNF_RAM ) ) ) ) + ( ( ( Min( FirstVNF_CPU ,ARS ) / ( RRS / ACS ) ) - ( ( CRS / MDR ) + ( BR * MRS ) ) ) / ( ( ( ACS - MDR ) / ( Const + FirstVNF_CPU ) ) * ( Min( DDR ,BR ) - ( ARS - FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( ( Min( DDR ,FirstVNF_CPU ) / Max( MRS,FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Min( MRS ,DDR ) ) ) * Min( Min( ( RRS - BR ) ,( AMS + CRS ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / Min( FirstVNF_CPU ,ACS ) ) ) ) + ( ( ( Max( ACS,AMS ) - Max( AMS,FirstVNF_RAM_Server ) ) + ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU_Server - ARS ) ) ) - ( Max( ( PN - DDR ),( FirstVNF_Mem_Server / Const ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( RRS + BR ) ) ) ) ) ) ,Max( ( ( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( Const + DDR ) ) / ( ( Const * ACS ) - Max( AMS,FirstVNF_RAM ) ) ) * ( ( Max( CRS,Const ) + Min( FirstVNF_RAM_Server ,BR ) ) / ( ( FirstVNF_Mem_Server * DDR ) + Min( AMS ,FirstVNF_RAM_Server ) ) ) ) / Min( Max( ( Max( CRS,AMS ) / ( DDR + FirstVNF_Mem_Server ) ),Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,( FirstVNF_CPU_Server * PN ) ) ) ,( ( Max( PN,FirstVNF_CPU ) * ( RRS / MRS ) ) / ( Min( FirstVNF_RAM_Server ,MDR ) * ( CRS / FirstVNF_RAM_Server ) ) ) ) ),( ( Min( Min( ( RRS * FirstVNF_RAM_Server ) ,( PN - FirstVNF_Mem_Server ) ) ,Max( Min( FirstVNF_CPU_Server ,MRS ),( FirstVNF_Mem_Server - Const ) ) ) / ( Min( ( PN * FirstVNF_RAM ) ,( FirstVNF_RAM * MDR ) ) / Min( Max( BR,RRS ) ,( ARS / FirstVNF_RAM_Server ) ) ) ) - ( ( ( ( Const + FirstVNF_Mem_Server ) - ( MDR * ARS ) ) / ( Max( FirstVNF_RAM_Server,AMS ) - Max( DDR,FirstVNF_RAM_Server ) ) ) / ( ( ( MDR - FirstVNF_Mem_Server ) / ( BR * FirstVNF_RAM ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( CRS + PN ) ) ) ) ) ) ) )", "choosing": "( Max( ( RRSe - CS ),MUC ) / ( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / BR ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server / Const ) + Min( DDR ,CRS ) ) ) )", "choosing": "( ( MUC / Min( MUR ,( RRSe / MUC ) ) ) * Max( ( RCSe - RCSe ),Min( MUC ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( ACS + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,AMS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MLU ) / DS ) - ( ( MLU - RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - MDR ) + ( Const - MDR ) ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( Max( MUM,MUR ) / Max( MUC,MUM ) ) * ( ( MUR - MUC ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN + FirstVNF_Mem ) + ( MDR * FirstVNF_RAM_Server ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( MRS ,FirstVNF_CPU ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - MUM ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,CS ) ,Max( MUC,MUM ) ) * Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS * RRS ) - ( RRS + MDR ) ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,RRSe ) ) ) - ( Min( ( MUC / RCSe ) ,Min( DS ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU * FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) + Min( MRS ,CRS ) ) ) ) ,MRS ) - Max( AMS,( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( RCSe - ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( MUC + MUC ) / DS ) - ( Min( MLU ,RRSe ) / DS ) ) ) ) ,( MUM + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RMSe ) ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) ) ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( RCSe - ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( Min( MLU ,RRSe ) / MUR ) / CS ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * CS ) ,( RCSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / RRS ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( MUC / ( MUC + MUM ) ) ),( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( ( ACS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( ( FirstVNF_Mem / Const ) + Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( MUC + MUC ) - DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( ARS + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_RAM_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MLU * MUR ) / Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) + ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) * Min( ( MUC - ( MUR / RMSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( MUC,MUM ) ) + Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + ( MDR + FirstVNF_RAM_Server ) ) * ( ( Const * Const ) + Max( BR,Const ) ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + BR ) ) * ( Min( MRS ,FirstVNF_CPU ) - Min( PN ,Const ) ) ) )", "choosing": "( ( MUR - RCSe ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( RRS - RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) - ACS ) - Max( MRS,MRS ) )", "choosing": "Min( ( ( ( MUR / MUC ) - Min( RRSe ,MLU ) ) - MUC ) ,Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS - MRS ) )", "choosing": "Min( Min( MLU ,MUC ) ,( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,( ( FirstVNF_CPU_Server / AMS ) + ( FirstVNF_Mem / Const ) ) ) )", "choosing": "( Max( Max( MUM,MUR ),Max( MUC,MUM ) ) * Min( ( MUR * MUM ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( DS * MUR ) / ( MUC - RRSe ) ) + ( ( MUC * DS ) - ( RCSe + MUR ) ) ) ,( Min( ( MUR * MUM ) ,( MUM * RCSe ) ) / ( Max( RCSe,RCSe ) / ( CS / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( DDR - MDR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( DS,( RMSe * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( AMS - BR ) ) ,FirstVNF_CPU_Server ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( RCSe / ( MUC + MUM ) ) ),( MLU * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( FirstVNF_CPU_Server ,Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MLU ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( MUC / ( MUC + MUM ) ) ),( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Max( Max( ( Const + FirstVNF_Mem_Server ),( Const * DDR ) ),Min( ( FirstVNF_CPU + DDR ) ,Max( FirstVNF_Mem_Server,MRS ) ) ) + ( Max( ( AMS / AMS ),( PN + FirstVNF_CPU ) ) * ( Max( ARS,FirstVNF_CPU_Server ) - Min( PN ,CRS ) ) ) ) )", "choosing": "( Min( MUC ,( DS / RMSe ) ) / ( DS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( RMSe / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( PN,ACS ) - Min( MRS ,MDR ) ) / ( Max( Const,AMS ) * ( FirstVNF_RAM + FirstVNF_RAM ) ) ) ,( ( Min( MDR ,AMS ) + Min( MDR ,PN ) ) - Max( ARS,AMS ) ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( DS - RMSe ) ) + ( Min( MLU ,MUM ) - ( MUR - DS ) ) ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - Min( PN ,RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + CRS ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) ) ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( MUC,MUM ) ) * Min( ( MUM - ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( Const / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( Min( Max( MUM,MUR ) ,Max( RCSe,MUM ) ) * Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,( Max( ( RRS / RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + ( ( BR * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ( FirstVNF_RAM_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RRSe / CS ) * Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / BR ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( Max( MUM,MUR ) / Max( MUC,MUM ) ) * ( ( MUR - MUR ) + MUC ) )", "obj1": 0.4163346613545817, "obj2": 0.5389584559673029}, {"determining": "( ( ( ARS / BR ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server / Const ) + Min( DDR ,CRS ) ) ) )", "choosing": "( ( MUC / Min( MUR ,( RRSe / MUC ) ) ) * Max( ( RCSe - RCSe ),Min( MUC ,RCSe ) ) )", "obj1": 0.9960159362549801, "obj2": 0.002277847046714531}, {"determining": "Min( ( MRS / ( PN - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ,Max( ( DDR + ( BR / MRS ) ),MRS ) )", "choosing": "( ( ( MLU * RRSe ) + ( RMSe / RMSe ) ) / ( ( ( ( Min( ( ( MUR * MUR ) / CS ) ,( ( RRSe + RCSe ) + RRSe ) ) - ( RRSe / ( CS / RMSe ) ) ) / MLU ) + ( MUR - RMSe ) ) - RRSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0022931340554747234}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( ( DS + MLU ) * MUR ) ,Max( MUC,MUM ) ) * ( ( RRSe - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.7211155378486056, "obj2": 0.24839548563235603}, {"determining": "( ( MDR - Min( Max( MRS,( DDR - MDR ) ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.5717131474103586, "obj2": 0.43264028045418473}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server - Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "Max( DS,( RMSe * Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 0.5099601593625498, "obj2": 0.48423754183962675}, {"determining": "( ( MDR - ( ( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( ( ( MUM + MLU ) + ( DS - MUC ) ) / Min( ( MUC * MLU ) ,( RCSe - RCSe ) ) ) / CS ) * Min( RCSe ,MUM ) )", "obj1": 0.3286852589641434, "obj2": 0.5634385463064773}, {"determining": "( ( FirstVNF_CPU - Const ) - ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,Const ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( RRSe / MUR ) )", "obj1": 0.4243027888446215, "obj2": 0.5246411377822732}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( ( MRS - MRS ),MDR ) ) - FirstVNF_Mem ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) / Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( MLU + RRSe ) / DS ) - ( ( MLU - RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.08597764354555154}, {"determining": "( ( FirstVNF_CPU / Const ) - ( MRS * MRS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( RRSe * MUR ) )", "obj1": 0.3107569721115538, "obj2": 0.5637027900455276}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,RRS ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,MLU ) ) ,RRSe ) ) )", "obj1": 0.3784860557768924, "obj2": 0.5399390727747967}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS - MRS ) )", "choosing": "( ( Max( MUM,MUR ) / Max( MUC,MUM ) ) * ( ( MUR - MUC ) + MUC ) )", "obj1": 0.9083665338645418, "obj2": 0.06824310461457861}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( RRSe - CS ) * Min( MUM ,( RRSe - MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6055888042745017}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_Mem ) )", "choosing": "( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,RRSe ) ) ) - ( Min( ( MUC / RCSe ) ,Min( MUC ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) )", "obj1": 0.6055776892430279, "obj2": 0.37971804659936065}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,( Max( ( RRS / RRS ),Max( FirstVNF_CPU_Server,DDR ) ) + FirstVNF_Mem_Server ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,( ( MLU - RRSe ) / MUR ) ) )", "obj1": 0.9800796812749004, "obj2": 0.026933159612087202}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.20717131474103587, "obj2": 0.7084636045646588}, {"determining": "( Max( Const,MDR ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,RRSe ) * ( MUC - MUC ) )", "obj1": 0.9342629482071713, "obj2": 0.06406772817132345}, {"determining": "Min( ( ( Min( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * Max( ACS,RRS ) ) + ( ( BR - AMS ) / ( RRS / FirstVNF_CPU ) ) ) / ( ( ( RRS * BR ) + ( MDR - FirstVNF_CPU_Server ) ) + ( ( ACS - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) ,Min( ( ( Max( MRS,FirstVNF_CPU ) * ( FirstVNF_RAM_Server - Const ) ) / ( ( MDR + FirstVNF_RAM_Server ) / ( MRS / ARS ) ) ) ,( ( ( Const - AMS ) + ( MDR - FirstVNF_Mem ) ) * Min( Min( AMS ,Const ) ,Min( FirstVNF_Mem ,MDR ) ) ) ) ) / ( ( Min( ( ( MRS - MRS ) / ( DDR / FirstVNF_Mem ) ) ,( ( RRS + PN ) + ( ACS / FirstVNF_CPU_Server ) ) ) + ( ( ( FirstVNF_Mem_Server - ACS ) + ( FirstVNF_RAM * CRS ) ) * ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + ( Const - FirstVNF_Mem_Server ) ) ) ) / ( ( ( ( FirstVNF_CPU * MRS ) / Min( Const ,DDR ) ) + ( ( BR - MDR ) / ( MDR - ACS ) ) ) - ( ( ( FirstVNF_CPU_Server / PN ) / ( AMS - FirstVNF_CPU_Server ) ) / Min( Min( AMS ,ACS ) ,( MDR / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( ( ( ( Max( MRS,FirstVNF_CPU_Server ) * ( ARS + AMS ) ) * ( ( RRS / ARS ) + ( Const * DDR ) ) ) + Max( Min( ( FirstVNF_RAM_Server + Const ) ,Min( ACS ,BR ) ),( Min( FirstVNF_Mem_Server ,BR ) - ( FirstVNF_Mem / MDR ) ) ) ) * Max( ( ( Min( FirstVNF_RAM_Server ,Const ) / Min( Const ,AMS ) ) - Min( ( PN - FirstVNF_Mem ) ,( Const * ACS ) ) ),( Max( ( AMS + Const ),( ARS * FirstVNF_RAM_Server ) ) - Max( Max( RRS,MDR ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) ) / ( Min( ( ( ( Const - PN ) + ( DDR / CRS ) ) * ( ( BR + Const ) * ( FirstVNF_Mem_Server / DDR ) ) ) ,Min( ( Max( Const,MRS ) + Max( FirstVNF_RAM_Server,DDR ) ) ,Max( Max( CRS,RRS ),( PN * ACS ) ) ) ) + ( ( ( ( MRS - FirstVNF_RAM ) - ( CRS / AMS ) ) * ( ( ACS * MRS ) - Max( DDR,ACS ) ) ) / Max( ( ( PN - AMS ) * ( MRS / FirstVNF_RAM_Server ) ),Min( Min( FirstVNF_RAM ,ARS ) ,Min( MDR ,PN ) ) ) ) ) ) ) ,( ( ( ( Max( ( ( BR * ARS ) * ( FirstVNF_CPU / ARS ) ),( Min( ACS ,DDR ) / ( Const - CRS ) ) ) - ( Max( ( ARS * ACS ),( ACS * ARS ) ) - Min( ( FirstVNF_RAM - BR ) ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) - Max( Min( Min( ( CRS * FirstVNF_Mem_Server ) ,Min( AMS ,ACS ) ) ,( ( FirstVNF_CPU - PN ) - ( AMS + FirstVNF_Mem ) ) ),( ( Min( ARS ,FirstVNF_RAM_Server ) - Min( RRS ,ACS ) ) / Min( ( ACS - FirstVNF_RAM_Server ) ,( FirstVNF_RAM - BR ) ) ) ) ) - Min( ( Min( Min( ( AMS * FirstVNF_Mem ) ,Min( PN ,CRS ) ) ,Min( Max( DDR,ACS ) ,( RRS * RRS ) ) ) - Min( ( Max( ARS,FirstVNF_Mem_Server ) * ( RRS * ACS ) ) ,( Min( DDR ,FirstVNF_Mem ) + Min( FirstVNF_RAM_Server ,BR ) ) ) ) ,( Max( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),( MDR / FirstVNF_RAM_Server ) ),Min( Max( MDR,FirstVNF_RAM_Server ) ,( ACS * FirstVNF_CPU_Server ) ) ) + ( Min( Max( MRS,FirstVNF_Mem ) ,Min( BR ,MRS ) ) / Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) ) ) ) + ( Max( Max( Max( Max( Min( AMS ,FirstVNF_RAM ),Max( MDR,BR ) ),( Max( CRS,DDR ) * ( BR + ARS ) ) ),( Max( ( MDR + ACS ),Max( FirstVNF_CPU,ACS ) ) / ( ( RRS - CRS ) - Max( PN,RRS ) ) ) ),( ( Max( Min( Const ,BR ),( MDR + MDR ) ) / ( Min( ACS ,DDR ) * Min( BR ,AMS ) ) ) / ( ( Max( ARS,FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server * CRS ) ) + ( ( ARS / Const ) / ( PN * FirstVNF_RAM_Server ) ) ) ) ) + ( Min( Max( ( Max( ARS,DDR ) + ( FirstVNF_Mem - AMS ) ),Max( ( Const + PN ),( MRS + AMS ) ) ) ,( ( Max( FirstVNF_Mem_Server,BR ) - ( ARS - MRS ) ) / ( ( FirstVNF_RAM_Server + MDR ) / ( MRS + FirstVNF_RAM ) ) ) ) + ( ( Min( ( ACS - FirstVNF_RAM ) ,Min( FirstVNF_RAM ,DDR ) ) / ( ( MDR - FirstVNF_Mem ) * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) / ( ( Max( CRS,FirstVNF_Mem_Server ) * ( CRS / ACS ) ) * Min( ( ARS - CRS ) ,Max( AMS,FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( ( MLU + ( DS / CS ) ) ,( MUR + ( MLU / ( RRSe + RMSe ) ) ) )", "obj1": 0.950199203187251, "obj2": 0.038268037425136237}, {"determining": "( ( ( ARS / BR ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server / Const ) + Min( DDR ,CRS ) ) ) )", "choosing": "( ( ( Min( MLU ,RRSe ) / MUR ) / CS ) * Min( MUM ,MUM ) )", "obj1": 0.9900398406374502, "obj2": 0.005103821303250834}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RMSe ) ) * CS )", "obj1": 0.4701195219123506, "obj2": 0.48682405190166134}], "7": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * CS ) ,( RCSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - ( MUR / RMSe ) ) / ( Max( MUM,RCSe ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / RRS ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ( BR / BR ) + ACS ) )", "choosing": "Max( Max( RRSe,( MUC / ( MUC + MUM ) ) ),( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( ( ACS / FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( ( FirstVNF_Mem / Const ) + Min( MRS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( RCSe / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( MUC + MUC ) - DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( ARS + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_RAM_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MLU * MUR ) / Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) + ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) * Min( ( MUC - ( MUR / RMSe ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe / CS ) * Min( MUM ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( ( DS + MLU ) * MUR ) ,Max( MUC,MUM ) ) * ( ( RRSe - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.7211155378486056, "obj2": 0.24839548563235603}, {"determining": "( ( MDR - Min( Max( MRS,( DDR - MDR ) ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RCSe / CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.5717131474103586, "obj2": 0.43264028045418473}, {"determining": "( ( FirstVNF_CPU - Const ) - ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,Const ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( RRSe / MUR ) )", "obj1": 0.4243027888446215, "obj2": 0.5246411377822732}, {"determining": "( ( FirstVNF_CPU / Const ) - ( MRS * MRS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( RRSe * MUR ) )", "obj1": 0.3107569721115538, "obj2": 0.5637027900455276}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,RRS ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,MLU ) ) ,RRSe ) ) )", "obj1": 0.3784860557768924, "obj2": 0.5399390727747967}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS - MRS ) )", "choosing": "( ( Max( MUM,MUR ) / Max( MUC,MUM ) ) * ( ( MUR - MUC ) + MUC ) )", "obj1": 0.9083665338645418, "obj2": 0.06824310461457861}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( RRSe - CS ) * Min( MUM ,( RRSe - MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6055888042745017}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_Mem ) )", "choosing": "( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,RRSe ) ) ) - ( Min( ( MUC / RCSe ) ,Min( MUC ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) )", "obj1": 0.6055776892430279, "obj2": 0.37971804659936065}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.20717131474103587, "obj2": 0.7084636045646588}, {"determining": "( ( ( ARS / BR ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server / Const ) + Min( DDR ,CRS ) ) ) )", "choosing": "( ( ( Min( MLU ,RRSe ) / MUR ) / CS ) * Min( MUM ,MUM ) )", "obj1": 0.9900398406374502, "obj2": 0.005103821303250834}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / Min( Min( MLU ,RRSe ) ,Max( RRSe,MUR ) ) ) * ( ( ( RRSe + MLU ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.8366533864541833, "obj2": 0.08634515989941333}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Max( RRSe,MUR ) )", "obj1": 0.8665338645418327, "obj2": 0.0708764455074759}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( ( ( AMS - FirstVNF_RAM ) - ( ARS - FirstVNF_Mem_Server ) ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * CS ) ,( RCSe - RCSe ) ) ) * ( ( ( RRSe + MLU ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015392245421071687}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS - CRS ) )", "choosing": "( Min( ( RCSe * MUR ) ,Max( MUC,RCSe ) ) * ( ( RRSe - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.9163346613545816, "obj2": 0.06271677237884121}, {"determining": "( ( MDR - ( ( ( AMS - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( MLU * MUR ) / Max( DS,RCSe ) )", "obj1": 0.25697211155378485, "obj2": 0.6351791941381376}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,MDR ) )", "choosing": "Min( ( RMSe - CS ) ,Max( MUM,MUR ) )", "obj1": 0.8326693227091634, "obj2": 0.14268783354400366}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( Min( FirstVNF_CPU_Server ,MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( AMS * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / MLU ) + MUC ) / ( RCSe - Min( ( MUC - Min( ( RMSe / CS ) ,DS ) ) ,RRSe ) ) )", "obj1": 0.18725099601593626, "obj2": 0.752414289738576}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RMSe ) ) * CS )", "obj1": 0.45617529880478086, "obj2": 0.4900461047741427}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.40039840637450197, "obj2": 0.5329497540623425}, {"determining": "( ( ( ( Max( Min( Min( ( AMS + RRS ) ,( DDR + RRS ) ) ,( ( ACS / FirstVNF_RAM ) * ( RRS * FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_RAM_Server / Const ) - Max( FirstVNF_CPU_Server,ARS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( BR * Const ) ) ) ) / ( ( Min( Max( Const,DDR ) ,( FirstVNF_Mem + PN ) ) + ( ( MDR / MDR ) + ( MDR - MRS ) ) ) / Max( ( ( ARS - BR ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( FirstVNF_RAM_Server + DDR ) ) ) ) ) / ( ( ( ( Max( AMS,FirstVNF_RAM_Server ) / ( Const - PN ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( Max( ( Const + FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + Const ) ) / ( ( FirstVNF_RAM_Server + Const ) + ( FirstVNF_RAM_Server + Const ) ) ) ) / ( Min( Max( ( Const - FirstVNF_RAM_Server ),( MDR - PN ) ) ,( Min( FirstVNF_RAM ,PN ) / ( AMS * MDR ) ) ) / ( ( ( Const * FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) / Max( ( Min( ( ( ( ARS / DDR ) / ( FirstVNF_RAM + BR ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Min( MDR ,FirstVNF_CPU ) ) ) ,( Max( ( DDR / MDR ),( PN * ARS ) ) * ( Min( PN ,AMS ) / ( MRS - ACS ) ) ) ) * ( ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ACS + AMS ) ) - ( ( CRS + PN ) / Min( PN ,DDR ) ) ) / ( ( ( Const * FirstVNF_RAM_Server ) - ( MRS + FirstVNF_CPU ) ) / ( Max( AMS,FirstVNF_Mem_Server ) + ( ARS + CRS ) ) ) ) ),( ( ( ( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_CPU + PN ) ) / ( Max( BR,ARS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) / ( ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem ) ) / Max( ( DDR - CRS ),( FirstVNF_Mem_Server / ARS ) ) ) ) * ( Max( Max( Min( FirstVNF_Mem ,ACS ),( FirstVNF_CPU / FirstVNF_Mem ) ),( Min( MRS ,ARS ) / ( PN + BR ) ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Max( ( ( ( ( MDR - CRS ) - Min( BR ,MDR ) ) - Min( ( RRS + MRS ) ,( DDR + FirstVNF_CPU_Server ) ) ) / ( ( ( AMS - PN ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_RAM * ARS ),( CRS * DDR ) ) ) ),Min( ( ( ( FirstVNF_RAM_Server * ARS ) + ( BR + Const ) ) + Max( ( FirstVNF_Mem_Server / DDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ,Min( ( ( CRS - FirstVNF_Mem ) + Min( FirstVNF_CPU ,Const ) ) ,( ( PN * DDR ) - ( AMS - DDR ) ) ) ) ) / ( ( Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( BR / BR ) ) ,( ( BR * FirstVNF_RAM_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_Mem_Server,ACS ) / ( BR * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( FirstVNF_Mem_Server,DDR ) ) ) ) - ( ( ( Max( FirstVNF_RAM,ACS ) + ( ARS + MRS ) ) / ( Max( FirstVNF_RAM,BR ) / ( FirstVNF_RAM / PN ) ) ) * Min( ( ( CRS * FirstVNF_CPU_Server ) - Min( Const ,Const ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem ) / ( PN + FirstVNF_CPU ) ) ) ) ) ) - ( Min( Max( Max( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Min( BR ,ACS ) ) ),( ( Min( FirstVNF_Mem_Server ,BR ) - Min( FirstVNF_RAM ,ARS ) ) - ( ( FirstVNF_Mem - DDR ) + ( RRS - RRS ) ) ) ) ,( ( ( ( MRS / FirstVNF_Mem_Server ) + ( DDR - Const ) ) - ( ( FirstVNF_RAM / DDR ) + ( AMS + FirstVNF_RAM_Server ) ) ) / ( ( ( RRS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_Mem_Server ) / ( RRS / BR ) ) ) ) ) + Max( ( ( Min( ( BR / DDR ) ,( RRS - FirstVNF_CPU ) ) / Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( MDR - Const ) ) ) * Min( Min( Min( MRS ,RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ,( ( BR - FirstVNF_Mem ) + ( Const * Const ) ) ) ),( ( ( ( MRS - ARS ) * ( CRS * MRS ) ) / ( ( FirstVNF_CPU_Server + PN ) / ( AMS / CRS ) ) ) + ( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + Min( Max( AMS,FirstVNF_RAM_Server ) ,Min( PN ,Const ) ) ) ) ) ) ) )", "choosing": "Min( Min( Max( ( MUM * ( ( RRSe + ( MUC + ( MUR + MUR ) ) ) - RMSe ) ),( CS * ( ( CS * RCSe ) / RRSe ) ) ) ,Min( ( MLU - MLU ) ,MLU ) ) ,Min( CS ,MUM ) )", "obj1": 0.601593625498008, "obj2": 0.39814725154746494}, {"determining": "( ( FirstVNF_CPU - Const ) - ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Max( RRSe,MUR ) )", "obj1": 0.4342629482071713, "obj2": 0.5052402103443504}, {"determining": "( FirstVNF_Mem_Server / ( Min( Max( MRS,( Const - PN ) ) ,DDR ) * RRS ) )", "choosing": "( ( RRSe - CS ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) )", "obj1": 0.3466135458167331, "obj2": 0.5407816282585859}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.20717131474103587, "obj2": 0.7084636045646588}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( MRS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( MUR - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.9322709163346613, "obj2": 0.056866376267222046}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( MUC,MUM ) ) + ( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.6054194389275005}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( MUC,MUM ) ) + Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 0.950199203187251, "obj2": 0.03410247065466607}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5471928971465575}, {"determining": "( Max( FirstVNF_Mem_Server,BR ) - ( Const + FirstVNF_Mem ) )", "choosing": "( ( ( ( DS - MUR ) / ( MUR - RMSe ) ) - ( ( DS - MUM ) * Max( MUM,RRSe ) ) ) - ( Min( ( MUC / RCSe ) ,Min( MUC ,MLU ) ) * ( Min( MUR ,MLU ) * ( MUC / RRSe ) ) ) )", "obj1": 0.6055776892430279, "obj2": 0.37971804659936065}, {"determining": "Min( ( MRS / ( PN - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ,Max( Max( DDR,( BR / MRS ) ),MRS ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.9920318725099602, "obj2": 0.0027326918561058856}, {"determining": "Max( ( ( ( ( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + BR ) ) ,( Max( MRS,FirstVNF_RAM_Server ) - ( MRS + FirstVNF_Mem_Server ) ) ) * ( ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( Const / PN ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * Min( PN ,PN ) ) / ( ( MDR * Const ) / ( AMS - MRS ) ) ) / ( ( Max( FirstVNF_RAM_Server,MDR ) / ( RRS * FirstVNF_CPU_Server ) ) / Max( ( RRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + CRS ) ) ) ) ) + ( ( ( ( ( ACS / DDR ) / ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) / Min( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - ACS ) ) ,( ( ARS - AMS ) - ( ACS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS * PN ) * ( MDR * Const ) ) + Min( Max( DDR,CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) / ( ( ( PN + FirstVNF_RAM ) / ( ACS * MRS ) ) * ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( Min( ( ( DDR - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + PN ) ) ,( ( FirstVNF_Mem_Server + ACS ) / ( FirstVNF_RAM_Server / BR ) ) ) - ( ( ( RRS + FirstVNF_CPU ) - Min( FirstVNF_RAM ,MRS ) ) + Max( ( FirstVNF_CPU_Server / PN ),( ACS / PN ) ) ) ),( Max( ( ( MDR / MRS ) * ( BR - FirstVNF_CPU ) ),( Min( MRS ,PN ) / ( BR + ARS ) ) ) / ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( RRS - ACS ) ) / Min( ( CRS / Const ) ,Min( ARS ,AMS ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server - AMS ) / Max( DDR,PN ) ) / Max( ( AMS * RRS ),Min( DDR ,RRS ) ) ) + Min( Max( ( CRS + MDR ),( ARS * ACS ) ) ,Max( ( Const - CRS ),( ARS - DDR ) ) ) ) - Max( ( ( ( ARS * ACS ) + ( DDR - AMS ) ) * Max( ( FirstVNF_RAM - FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_Mem ) ) ),( ( ( RRS * DDR ) - ( PN / CRS ) ) + ( ( ARS - BR ) + ( RRS * Const ) ) ) ) ) ) ),( ( Min( ( Max( ( Max( ARS,MDR ) - ( Const + PN ) ),Min( ( FirstVNF_CPU * CRS ) ,Max( Const,DDR ) ) ) - ( ( ( FirstVNF_CPU_Server / MRS ) + ( AMS / FirstVNF_CPU ) ) * ( ( BR * FirstVNF_Mem ) * Min( PN ,MRS ) ) ) ) ,( ( ( Max( BR,CRS ) * ( Const - PN ) ) * ( Max( RRS,CRS ) / ( Const + Const ) ) ) + ( Max( ( FirstVNF_Mem_Server / PN ),Max( ARS,PN ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( FirstVNF_CPU - ACS ) ) ) ) ) * ( Min( Max( ( ( AMS - DDR ) + Max( ARS,FirstVNF_RAM_Server ) ),( ( FirstVNF_CPU_Server - AMS ) / ( Const + FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_Mem - MRS ) + Min( BR ,AMS ) ) * ( Min( PN ,FirstVNF_RAM ) * Max( DDR,DDR ) ) ) ) + Min( ( ( Max( RRS,BR ) + ( FirstVNF_Mem + DDR ) ) + ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_RAM_Server + Const ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) ) ) ) - Min( ( ( Min( Min( ( FirstVNF_Mem / PN ) ,( FirstVNF_Mem_Server * DDR ) ) ,( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_Mem * BR ) ) ) - ( ( ( MDR / Const ) * ( PN - FirstVNF_Mem ) ) * Min( ( DDR / Const ) ,( AMS / RRS ) ) ) ) + ( Max( ( ( FirstVNF_Mem_Server / MRS ) - ( RRS * FirstVNF_CPU_Server ) ),( ( PN + RRS ) + Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) - ( Max( ( FirstVNF_Mem_Server * MRS ),Max( FirstVNF_Mem_Server,ARS ) ) + ( Min( RRS ,PN ) / ( MRS * MDR ) ) ) ) ) ,( ( ( ( ( MDR / CRS ) * ( DDR * AMS ) ) - ( ( FirstVNF_CPU - CRS ) / Min( ARS ,PN ) ) ) - ( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR / ACS ) ) + ( ( FirstVNF_RAM / ARS ) * ( Const * AMS ) ) ) ) + Min( ( ( Max( FirstVNF_CPU,MDR ) - ( MRS + MRS ) ) + Max( Max( ACS,PN ),( FirstVNF_Mem - DDR ) ) ) ,( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,BR ) ) / ( Max( Const,FirstVNF_CPU ) - Max( ACS,RRS ) ) ) ) ) ) ) )", "choosing": "( ( RRSe / ( MUM + ( MUC * Min( RRSe ,( ( DS - Min( RRSe ,MUR ) ) * MUC ) ) ) ) ) + Min( CS ,MUM ) )", "obj1": 0.5099601593625498, "obj2": 0.44846550506919247}, {"determining": "( Min( Max( MRS,( Const - PN ) ) ,DDR ) - ( ARS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * CS ) ,( RCSe - ( MUR + RRSe ) ) ) )", "obj1": 0.4063745019920319, "obj2": 0.5319021086796093}, {"determining": "Min( ( MRS / ( PN - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ,Max( Max( DDR,( BR / MRS ) ),MRS ) )", "choosing": "( ( ( MLU * RRSe ) + ( RMSe / RMSe ) ) / ( ( ( ( Min( ( ( MUR * MUR ) / CS ) ,( ( RRSe + RCSe ) + RRSe ) ) - ( RRSe / ( CS / RMSe ) ) ) / MLU ) + ( RCSe - RMSe ) ) - RRSe ) )", "obj1": 0.9940239043824701, "obj2": 0.0021981904875609678}, {"determining": "Min( ( MRS / ( PN - ( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ,Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + ( BR / MRS ) ),MRS ) )", "choosing": "( ( ( MLU * RRSe ) + ( RMSe / RMSe ) ) / ( ( DS + MLU ) * MUR ) )", "obj1": 0.9920318725099602, "obj2": 0.0027326918561058856}, {"determining": "( ( BR / MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( ( ( Min( ( ( MUR * MUR ) / CS ) ,( ( RRSe + RCSe ) + RRSe ) ) - ( RRSe / ( CS / RMSe ) ) ) + MLU ) * MUR ) ,Max( MUC,MUM ) ) * ( ( RRSe - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.46613545816733065, "obj2": 0.4570930834163458}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( ( DS + MLU ) * MUR ) ,Max( MUC,MUM ) ) * ( ( RRSe - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.7211155378486056, "obj2": 0.24839548563235603}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( ( ( ( MDR - ( FirstVNF_RAM_Server / Max( FirstVNF_RAM,MDR ) ) ) / ( FirstVNF_CPU / RRS ) ) + ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,MUM ) / MUR ) ) )", "obj1": 0.2051792828685259, "obj2": 0.712807519343057}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MLU ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.8346613545816733, "obj2": 0.08804120851406484}, {"determining": "( ( FirstVNF_CPU - Const ) - ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Max( RRSe,MUR ) )", "obj1": 0.448207171314741, "obj2": 0.4964677615039505}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( ( MRS - MRS ),MDR ) ) - FirstVNF_Mem ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) / Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( MLU + RRSe ) / DS ) - ( ( MLU - RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.08589400321771036}], "8": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( ( DS + MLU ) * MUR ) ,Max( MUC,MUM ) ) * ( ( RRSe - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.7211155378486056, "obj2": 0.24839548563235603}, {"determining": "( ( FirstVNF_CPU / Const ) - ( MRS * MRS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( RRSe * MUR ) )", "obj1": 0.3107569721115538, "obj2": 0.5637027900455276}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( RRSe - CS ) * Min( MUM ,( RRSe - MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6055888042745017}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.20717131474103587, "obj2": 0.7084636045646588}, {"determining": "( ( ( ARS / BR ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( FirstVNF_CPU - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server / Const ) + Min( DDR ,CRS ) ) ) )", "choosing": "( ( ( Min( MLU ,RRSe ) / MUR ) / CS ) * Min( MUM ,MUM ) )", "obj1": 0.9900398406374502, "obj2": 0.005103821303250834}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Max( RRSe,MUR ) )", "obj1": 0.8665338645418327, "obj2": 0.0708764455074759}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( ( ( AMS - FirstVNF_RAM ) - ( ARS - FirstVNF_Mem_Server ) ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * CS ) ,( RCSe - RCSe ) ) ) * ( ( ( RRSe + MLU ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.9601593625498008, "obj2": 0.015392245421071687}, {"determining": "( ( MDR - ARS ) - Max( FirstVNF_RAM,MDR ) )", "choosing": "Min( ( RMSe - CS ) ,Max( MUM,MUR ) )", "obj1": 0.8326693227091634, "obj2": 0.14268783354400366}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.20717131474103587, "obj2": 0.7084636045646588}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( MUC,MUM ) ) + ( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.6054194389275005}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( MUC,MUM ) ) + Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 0.950199203187251, "obj2": 0.03410247065466607}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5471928971465575}, {"determining": "( ( BR / MRS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( ( ( Min( ( ( MUR * MUR ) / CS ) ,( ( RRSe + RCSe ) + RRSe ) ) - ( RRSe / ( CS / RMSe ) ) ) + MLU ) * MUR ) ,Max( MUC,MUM ) ) * ( ( RRSe - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.46613545816733065, "obj2": 0.4570930834163458}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( ( DS + MLU ) * MUR ) ,Max( MUC,MUM ) ) * ( ( RRSe - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.7211155378486056, "obj2": 0.24839548563235603}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( ( MRS - MRS ),MDR ) ) - FirstVNF_Mem ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) / Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( MLU + RRSe ) / DS ) - ( ( MLU - RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.08589400321771036}, {"determining": "( ( ( ( Max( Min( Min( ( AMS + RRS ) ,( DDR + RRS ) ) ,( ( ACS / FirstVNF_RAM ) * ( RRS * FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_RAM_Server / Const ) - Max( FirstVNF_CPU_Server,ARS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( BR * Const ) ) ) ) / ( ( Min( Max( Const,DDR ) ,( FirstVNF_Mem + PN ) ) + ( ( MDR / MDR ) + ( MDR - MRS ) ) ) / Max( ( ( ARS - BR ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( FirstVNF_RAM_Server + DDR ) ) ) ) ) / ( ( ( ( Max( AMS,FirstVNF_RAM_Server ) / ( Const - PN ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( Max( ( Const + FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + Const ) ) / ( ( FirstVNF_RAM_Server + Const ) + ( FirstVNF_RAM_Server + Const ) ) ) ) / ( Min( Max( ( Const - FirstVNF_RAM_Server ),( MDR - PN ) ) ,( Min( FirstVNF_RAM ,PN ) / ( AMS * MDR ) ) ) / ( ( ( Const * FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) / Max( ( Min( ( ( ( ARS / DDR ) / ( FirstVNF_RAM + BR ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Min( MDR ,FirstVNF_CPU ) ) ) ,( Max( ( DDR / MDR ),( PN * ARS ) ) * ( Min( PN ,AMS ) / ( MRS - ACS ) ) ) ) * ( ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ACS + AMS ) ) - ( ( CRS + PN ) / Min( PN ,DDR ) ) ) / ( ( ( Const * FirstVNF_RAM_Server ) - ( MRS + FirstVNF_CPU ) ) / ( Max( AMS,FirstVNF_Mem_Server ) + ( ARS + CRS ) ) ) ) ),( ( ( ( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_CPU + PN ) ) / ( Max( BR,ARS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) / ( ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem ) ) / Max( ( DDR - CRS ),( FirstVNF_Mem_Server / ARS ) ) ) ) * ( Max( Max( Min( FirstVNF_Mem ,ACS ),( FirstVNF_CPU / FirstVNF_Mem ) ),( Min( MRS ,ARS ) / ( PN + BR ) ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Max( ( ( ( ( MDR - CRS ) - Min( BR ,MDR ) ) - Min( ( RRS + MRS ) ,( DDR + FirstVNF_CPU_Server ) ) ) / ( ( ( AMS - PN ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_RAM * ARS ),( CRS / DDR ) ) ) ),Min( ( ( ( FirstVNF_RAM_Server * ARS ) + ( BR + Const ) ) + Max( ( FirstVNF_Mem_Server / DDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ,Min( ( ( CRS - FirstVNF_Mem ) + Min( FirstVNF_CPU ,Const ) ) ,( ( PN * DDR ) - ( AMS - DDR ) ) ) ) ) / ( ( Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( BR / BR ) ) ,( ( BR * FirstVNF_RAM_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_Mem_Server,ACS ) / ( BR * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( FirstVNF_Mem_Server,DDR ) ) ) ) - ( ( ( Max( FirstVNF_RAM,ACS ) + ( ARS + MRS ) ) / ( Max( FirstVNF_RAM,BR ) / ( FirstVNF_RAM / PN ) ) ) * Min( ( ( CRS * FirstVNF_CPU_Server ) - Min( Const ,Const ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem ) / ( PN + FirstVNF_CPU ) ) ) ) ) ) - ( Min( Max( Max( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Min( BR ,ACS ) ) ),( ( Min( FirstVNF_Mem_Server ,BR ) - Min( FirstVNF_RAM ,ARS ) ) - ( ( FirstVNF_Mem - DDR ) + ( RRS - RRS ) ) ) ) ,( ( ( ( MRS / FirstVNF_Mem_Server ) + ( DDR - Const ) ) - ( ( FirstVNF_RAM / DDR ) + ( AMS + FirstVNF_RAM_Server ) ) ) / ( ( ( RRS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_Mem_Server ) / ( RRS / BR ) ) ) ) ) + Max( ( ( Min( ( BR / DDR ) ,( RRS - FirstVNF_CPU ) ) / Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( MDR - Const ) ) ) * Min( Min( Min( MRS ,RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ,( ( BR - FirstVNF_Mem ) + ( Const * Const ) ) ) ),( ( ( ( MRS - ARS ) * ( CRS * MRS ) ) / ( ( FirstVNF_CPU_Server + PN ) / ( AMS / CRS ) ) ) + ( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + Min( Max( AMS,FirstVNF_RAM_Server ) ,Min( PN ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( MLU ,RRSe ) / MUR ) * CS ) * Min( MUM ,MUM ) )", "obj1": 0.5956175298804781, "obj2": 0.3468887430794569}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( PN,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / RRSe ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7514927364462524}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( Min( FirstVNF_CPU_Server ,MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( AMS * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / MLU ) + MUC ) / ( RCSe - Min( ( MUC - Min( ( RMSe / CS ) ,DS ) ) ,RRSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6955992992020478}, {"determining": "( ( MDR - Min( Max( MRS,( DDR - Max( Max( DDR,( BR / MRS ) ),MRS ) ) ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) / CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.199203187250996, "obj2": 0.7087316294362508}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( ( ( AMS - FirstVNF_RAM ) - ( FirstVNF_RAM_Server + BR ) ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * CS ) ,( RCSe - RCSe ) ) ) * ( ( ( RRSe + MLU ) / ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.8685258964143426, "obj2": 0.06221158948863486}, {"determining": "( FirstVNF_Mem_Server / ( ( BR / MRS ) * RRS ) )", "choosing": "( Min( ( ( MUR * MUR ) / CS ) ,( ( RRSe + RCSe ) + RRSe ) ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.448207171314741, "obj2": 0.4666065016672398}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MLU ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.8406374501992032, "obj2": 0.08538204288991452}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RMSe + MLU ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.8844621513944223, "obj2": 0.057963912120733076}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RMSe + MLU ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.08589400321771036}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RMSe + MLU ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.8386454183266933, "obj2": 0.08589400321771036}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RMSe + RRSe ) / DS ) - ( ( MLU - RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.8346613545816733, "obj2": 0.08801802006990377}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - ( ( ( ( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + BR ) ) ,( Max( MRS,FirstVNF_RAM_Server ) - ( MRS + FirstVNF_Mem_Server ) ) ) * ( ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( Const / PN ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * Min( PN ,PN ) ) / ( ( MDR * Const ) / ( AMS - MRS ) ) ) / ( ( Max( FirstVNF_RAM_Server,MDR ) / ( RRS * FirstVNF_CPU_Server ) ) / Max( ( RRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + CRS ) ) ) ) ) + ( ( ( ( ( ACS / DDR ) / ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) / Min( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - ACS ) ) ,( ( ARS - AMS ) - ( ACS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS * PN ) * ( MDR * Const ) ) + Min( Max( DDR,CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) / ( ( ( PN + FirstVNF_RAM ) / ( ACS * MRS ) ) * ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( Min( ( ( DDR - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + PN ) ) ,( ( FirstVNF_Mem_Server + ACS ) / ( FirstVNF_RAM_Server / BR ) ) ) - ( ( ( RRS + FirstVNF_CPU ) - Min( FirstVNF_RAM ,MRS ) ) + Max( ( FirstVNF_CPU_Server / PN ),( ACS / PN ) ) ) ),( Max( ( ( MDR / MRS ) * ( BR - FirstVNF_CPU ) ),( Min( MRS ,PN ) / ( BR + ARS ) ) ) / ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( RRS - ACS ) ) / Min( ( CRS / Const ) ,Min( ARS ,AMS ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server - AMS ) / Max( DDR,PN ) ) / Max( ( AMS * RRS ),Min( DDR ,RRS ) ) ) + Min( Max( ( CRS + MDR ),( ARS * ACS ) ) ,Max( ( Const - CRS ),( ARS - DDR ) ) ) ) - Max( ( ( ( ARS * ACS ) + ( DDR - AMS ) ) * Max( ( FirstVNF_RAM - FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_Mem ) ) ),( ( ( RRS * DDR ) - ( PN / CRS ) ) + ( ( ARS - BR ) + ( RRS * Const ) ) ) ) ) ) ) )", "choosing": "( ( MUM + ( MUC * Min( RRSe ,( ( DS - Min( RRSe ,MUR ) ) * MUC ) ) ) ) + ( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.6772908366533864, "obj2": 0.2751714396428605}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - ( ( RRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUR / MUR ) ,Max( MUC,MUM ) ) + ( ( MUR + MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.6054194389275005}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( Min( ( MLU - CS ) ,Max( MUM,MUR ) ) + ( DS + MUC ) ) )", "obj1": 0.6992031872509961, "obj2": 0.26718350808868624}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MUC ) ) )", "obj1": 0.9581673306772909, "obj2": 0.03217906980157769}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS - MRS ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( RRSe - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.9223107569721115, "obj2": 0.055408213373863036}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( Min( FirstVNF_CPU_Server ,MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( ( RMSe / CS ) ,DS ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7531843593321017}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( Min( FirstVNF_CPU_Server ,MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( AMS * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / MLU ) + MUC ) / ( RCSe - Min( ( MUC - Min( ( RMSe / CS ) ,DS ) ) ,RRSe ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6955992992020478}, {"determining": "( MDR / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) * RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * RRSe ) ) ) ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6334044924374443}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU - RRS ) )", "choosing": "( ( RRSe + CS ) * Min( MUM ,( MUR - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5439647006223973}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7788789306995287}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU_Server / ( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RMSe ) ) * MUR )", "obj1": 0.44223107569721115, "obj2": 0.47199196498821}, {"determining": "( ( ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,MDR ) ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,FirstVNF_RAM ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + Min( MRS ,CRS ) ) ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( Max( RRSe,MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.8366533864541833, "obj2": 0.08619354903596689}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.57814613032447}, {"determining": "( ( ( ( Max( Min( Min( ( AMS + RRS ) ,( DDR + RRS ) ) ,( ( ACS / FirstVNF_RAM ) * ( RRS * FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_RAM_Server / Const ) - Max( FirstVNF_CPU_Server,ARS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( BR * Const ) ) ) ) / ( ( Min( Max( Const,DDR ) ,( FirstVNF_Mem + PN ) ) + ( ( MDR / MDR ) + ( MDR - MRS ) ) ) / Max( ( ( ARS - BR ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( FirstVNF_RAM_Server + DDR ) ) ) ) ) / ( ( ( ( Max( AMS,FirstVNF_RAM_Server ) / ( Const - PN ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( Max( ( Const + FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + Const ) ) / ( ( FirstVNF_RAM_Server + Const ) + ( FirstVNF_RAM_Server + Const ) ) ) ) / ( Min( Max( ( Const - FirstVNF_RAM_Server ),( MDR - PN ) ) ,( Min( FirstVNF_RAM ,PN ) / ( AMS * MDR ) ) ) / ( ( ( Const * FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) / Max( ( Min( ( ( ( ARS / DDR ) / ( FirstVNF_RAM + BR ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Min( MDR ,FirstVNF_CPU ) ) ) ,( Max( ( DDR / MDR ),( PN * ARS ) ) * ( Min( PN ,AMS ) / ( MRS - ACS ) ) ) ) * ( ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ACS + AMS ) ) - ( ( CRS + PN ) / Min( PN ,DDR ) ) ) / ( ( ( Const * FirstVNF_RAM_Server ) - ( MRS + FirstVNF_CPU ) ) / ( Max( AMS,FirstVNF_Mem_Server ) + ( ARS + CRS ) ) ) ) ),( ( ( ( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_CPU + PN ) ) / ( Max( BR,ARS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) / ( ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem ) ) / Max( ( DDR - CRS ),( FirstVNF_Mem_Server / ARS ) ) ) ) * ( Max( Max( Min( FirstVNF_Mem ,ACS ),( FirstVNF_CPU / FirstVNF_Mem ) ),( Min( MRS ,ARS ) / ( PN + BR ) ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Max( ( ( ( ( MDR - CRS ) - Min( BR ,MDR ) ) - Min( ( RRS + MRS ) ,( DDR + FirstVNF_CPU_Server ) ) ) / ( ( ( AMS - PN ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_RAM * ARS ),( CRS * DDR ) ) ) ),Min( ( ( ( FirstVNF_RAM_Server * ARS ) + ( BR + Const ) ) + Max( ( FirstVNF_Mem_Server / DDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ,Min( ( ( CRS - FirstVNF_Mem ) + Min( FirstVNF_CPU ,Const ) ) ,( ( PN * DDR ) - ( AMS - DDR ) ) ) ) ) / ( ( Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( BR / BR ) ) ,( ( BR * FirstVNF_RAM_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_Mem_Server,ACS ) / ( BR * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( FirstVNF_Mem_Server,DDR ) ) ) ) - ( ( ( Max( FirstVNF_RAM,ACS ) + ( ARS + MRS ) ) / ( Max( FirstVNF_RAM,BR ) / ( FirstVNF_RAM / PN ) ) ) * Min( ( ( CRS * FirstVNF_CPU_Server ) - Min( Const ,Const ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem ) / ( PN + FirstVNF_CPU ) ) ) ) ) ) - ( Min( Max( Max( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Min( BR ,ACS ) ) ),( ( Min( FirstVNF_Mem_Server ,BR ) - Min( FirstVNF_RAM ,ARS ) ) - ( ( FirstVNF_Mem - DDR ) + ( RRS - RRS ) ) ) ) ,( ( ( ( MRS / FirstVNF_Mem_Server ) + ( DDR - Const ) ) - ( ( FirstVNF_RAM / DDR ) + ( AMS + FirstVNF_RAM_Server ) ) ) / ( ( ( RRS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_Mem_Server ) / ( RRS / BR ) ) ) ) ) + Max( ( ( Min( ( BR / DDR ) ,( RRS - FirstVNF_CPU ) ) / Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( MDR - Const ) ) ) * Min( Min( Min( MRS ,RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ,( ( BR - FirstVNF_Mem ) + ( Const * Const ) ) ) ),( ( ( ( MRS - ARS ) * ( CRS * MRS ) ) / ( ( FirstVNF_CPU_Server + PN ) / ( AMS / CRS ) ) ) + ( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + Min( Max( AMS,FirstVNF_RAM_Server ) ,Min( PN ,Const ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.603585657370518, "obj2": 0.3266499324373478}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( ( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) ) ,Max( MUC,RCSe ) ) * ( ( CS - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.7609561752988048, "obj2": 0.14396857073024807}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( FirstVNF_Mem_Server / ( MRS * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * ( MUM * DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5188042124218142}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server / ( BR * RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.41434262948207173, "obj2": 0.49303460310645164}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * ( MUM + DS ) ) )", "obj1": 0.4960159362549801, "obj2": 0.3885906456988437}, {"determining": "( ( FirstVNF_CPU - Const ) - Max( FirstVNF_RAM,MDR ) )", "choosing": "Min( ( MLU - CS ) ,Max( MUM,MUR ) )", "obj1": 0.8326693227091634, "obj2": 0.14268783354400366}, {"determining": "( ( MDR - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) * Max( ( MLU + RRSe ),( CS * MUM ) ) )", "obj1": 0.9860557768924303, "obj2": 0.011451567208147122}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( ARS + BR ) ) ) / ( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) ) )", "choosing": "( ( MLU * MUR ) / Max( DS,MUC ) )", "obj1": 0.9362549800796812, "obj2": 0.04565132557971891}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( MUC,MUM ) ) + Min( ( RCSe - RCSe ) ,( DS + MLU ) ) )", "obj1": 0.952191235059761, "obj2": 0.033326567266044244}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( MRS,FirstVNF_Mem ) )", "choosing": "( Min( ( MUM * MUR ) ,Max( MUC,RCSe ) ) * ( ( MUR - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.6952191235059761, "obj2": 0.2682633339564953}], "9": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / Const ) - ( MRS * MRS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( RRSe * MUR ) )", "obj1": 0.3107569721115538, "obj2": 0.5637027900455276}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( RRSe - CS ) * Min( MUM ,( RRSe - MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6055888042745017}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.20717131474103587, "obj2": 0.7084636045646588}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.20717131474103587, "obj2": 0.7084636045646588}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5471928971465575}, {"determining": "( ( ( ( Max( Min( Min( ( AMS + RRS ) ,( DDR + RRS ) ) ,( ( ACS / FirstVNF_RAM ) * ( RRS * FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_RAM_Server / Const ) - Max( FirstVNF_CPU_Server,ARS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( BR * Const ) ) ) ) / ( ( Min( Max( Const,DDR ) ,( FirstVNF_Mem + PN ) ) + ( ( MDR / MDR ) + ( MDR - MRS ) ) ) / Max( ( ( ARS - BR ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( FirstVNF_RAM_Server + DDR ) ) ) ) ) / ( ( ( ( Max( AMS,FirstVNF_RAM_Server ) / ( Const - PN ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( Max( ( Const + FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + Const ) ) / ( ( FirstVNF_RAM_Server + Const ) + ( FirstVNF_RAM_Server + Const ) ) ) ) / ( Min( Max( ( Const - FirstVNF_RAM_Server ),( MDR - PN ) ) ,( Min( FirstVNF_RAM ,PN ) / ( AMS * MDR ) ) ) / ( ( ( Const * FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) / Max( ( Min( ( ( ( ARS / DDR ) / ( FirstVNF_RAM + BR ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Min( MDR ,FirstVNF_CPU ) ) ) ,( Max( ( DDR / MDR ),( PN * ARS ) ) * ( Min( PN ,AMS ) / ( MRS - ACS ) ) ) ) * ( ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ACS + AMS ) ) - ( ( CRS + PN ) / Min( PN ,DDR ) ) ) / ( ( ( Const * FirstVNF_RAM_Server ) - ( MRS + FirstVNF_CPU ) ) / ( Max( AMS,FirstVNF_Mem_Server ) + ( ARS + CRS ) ) ) ) ),( ( ( ( ( FirstVNF_Mem_Server / MDR ) / ( FirstVNF_CPU + PN ) ) / ( Max( BR,ARS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) / ( ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem ) ) / Max( ( DDR - CRS ),( FirstVNF_Mem_Server / ARS ) ) ) ) * ( Max( Max( Min( FirstVNF_Mem ,ACS ),( FirstVNF_CPU / FirstVNF_Mem ) ),( Min( MRS ,ARS ) / ( PN + BR ) ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Max( ( ( ( ( MDR - CRS ) - Min( BR ,MDR ) ) - Min( ( RRS + MRS ) ,( DDR + FirstVNF_CPU_Server ) ) ) / ( ( ( AMS - PN ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_RAM * ARS ),( CRS / DDR ) ) ) ),Min( ( ( ( FirstVNF_RAM_Server * ARS ) + ( BR + Const ) ) + Max( ( FirstVNF_Mem_Server / DDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ,Min( ( ( CRS - FirstVNF_Mem ) + Min( FirstVNF_CPU ,Const ) ) ,( ( PN * DDR ) - ( AMS - DDR ) ) ) ) ) / ( ( Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( BR / BR ) ) ,( ( BR * FirstVNF_RAM_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_Mem_Server,ACS ) / ( BR * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( FirstVNF_Mem_Server,DDR ) ) ) ) - ( ( ( Max( FirstVNF_RAM,ACS ) + ( ARS + MRS ) ) / ( Max( FirstVNF_RAM,BR ) / ( FirstVNF_RAM / PN ) ) ) * Min( ( ( CRS * FirstVNF_CPU_Server ) - Min( Const ,Const ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem ) / ( PN + FirstVNF_CPU ) ) ) ) ) ) - ( Min( Max( Max( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Min( BR ,ACS ) ) ),( ( Min( FirstVNF_Mem_Server ,BR ) - Min( FirstVNF_RAM ,ARS ) ) - ( ( FirstVNF_Mem - DDR ) + ( RRS - RRS ) ) ) ) ,( ( ( ( MRS / FirstVNF_Mem_Server ) + ( DDR - Const ) ) - ( ( FirstVNF_RAM / DDR ) + ( AMS + FirstVNF_RAM_Server ) ) ) / ( ( ( RRS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_Mem_Server ) / ( RRS / BR ) ) ) ) ) + Max( ( ( Min( ( BR / DDR ) ,( RRS - FirstVNF_CPU ) ) / Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( MDR - Const ) ) ) * Min( Min( Min( MRS ,RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ,( ( BR - FirstVNF_Mem ) + ( Const * Const ) ) ) ),( ( ( ( MRS - ARS ) * ( CRS * MRS ) ) / ( ( FirstVNF_CPU_Server + PN ) / ( AMS / CRS ) ) ) + ( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + Min( Max( AMS,FirstVNF_RAM_Server ) ,Min( PN ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( MLU ,RRSe ) / MUR ) * CS ) * Min( MUM ,MUM ) )", "obj1": 0.5956175298804781, "obj2": 0.3468887430794569}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( PN,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / RRSe ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7514927364462524}, {"determining": "( ( MDR - Min( Max( MRS,( DDR - Max( Max( DDR,( BR / MRS ) ),MRS ) ) ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) / CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.199203187250996, "obj2": 0.7087316294362508}, {"determining": "( FirstVNF_Mem_Server / ( ( BR / MRS ) * RRS ) )", "choosing": "( Min( ( ( MUR * MUR ) / CS ) ,( ( RRSe + RCSe ) + RRSe ) ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.448207171314741, "obj2": 0.4666065016672398}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - ( ( ( ( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + BR ) ) ,( Max( MRS,FirstVNF_RAM_Server ) - ( MRS + FirstVNF_Mem_Server ) ) ) * ( ( Max( BR,MDR ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( Const / PN ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * Min( PN ,PN ) ) / ( ( MDR * Const ) / ( AMS - MRS ) ) ) / ( ( Max( FirstVNF_RAM_Server,MDR ) / ( RRS * FirstVNF_CPU_Server ) ) / Max( ( RRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + CRS ) ) ) ) ) + ( ( ( ( ( ACS / DDR ) / ( ARS - FirstVNF_CPU ) ) * ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) / Min( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - ACS ) ) ,( ( ARS - AMS ) - ( ACS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS * PN ) * ( MDR * Const ) ) + Min( Max( DDR,CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) / ( ( ( PN + FirstVNF_RAM ) / ( ACS * MRS ) ) * ( ( FirstVNF_RAM_Server / AMS ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) ) ) - ( Max( ( Min( ( ( DDR - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + PN ) ) ,( ( FirstVNF_Mem_Server + ACS ) / ( FirstVNF_RAM_Server / BR ) ) ) - ( ( ( RRS + FirstVNF_CPU ) - Min( FirstVNF_RAM ,MRS ) ) + Max( ( FirstVNF_CPU_Server / PN ),( ACS / PN ) ) ) ),( Max( ( ( MDR / MRS ) * ( BR - FirstVNF_CPU ) ),( Min( MRS ,PN ) / ( BR + ARS ) ) ) / ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( RRS - ACS ) ) / Min( ( CRS / Const ) ,Min( ARS ,AMS ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server - AMS ) / Max( DDR,PN ) ) / Max( ( AMS * RRS ),Min( DDR ,RRS ) ) ) + Min( Max( ( CRS + MDR ),( ARS * ACS ) ) ,Max( ( Const - CRS ),( ARS - DDR ) ) ) ) - Max( ( ( ( ARS * ACS ) + ( DDR - AMS ) ) * Max( ( FirstVNF_RAM - FirstVNF_RAM ),( FirstVNF_RAM - FirstVNF_Mem ) ) ),( ( ( RRS * DDR ) - ( PN / CRS ) ) + ( ( ARS - BR ) + ( RRS * Const ) ) ) ) ) ) ) )", "choosing": "( ( MUM + ( MUC * Min( RRSe ,( ( DS - Min( RRSe ,MUR ) ) * MUC ) ) ) ) + ( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.6772908366533864, "obj2": 0.2751714396428605}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( Min( FirstVNF_CPU_Server ,MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( ( RMSe / CS ) ,DS ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7531843593321017}, {"determining": "( MDR / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) * RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * RRSe ) ) ) ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6334044924374443}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU - RRS ) )", "choosing": "( ( RRSe + CS ) * Min( MUM ,( MUR - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5439647006223973}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7788789306995287}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU_Server / ( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( Min( ( DS * RMSe ) ,( CS / RMSe ) ) * MUR )", "obj1": 0.44223107569721115, "obj2": 0.47199196498821}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.57814613032447}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( FirstVNF_Mem_Server / ( MRS * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * ( MUM * DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5188042124218142}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server / ( BR * RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.41434262948207173, "obj2": 0.49303460310645164}, {"determining": "( ( ( ( Max( Min( Min( ( AMS + RRS ) ,( DDR + RRS ) ) ,( ( ACS / FirstVNF_RAM ) * ( RRS * FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_RAM_Server / Const ) - Max( FirstVNF_CPU_Server,ARS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( BR * Const ) ) ) ) / ( ( Min( Max( Const,DDR ) ,( FirstVNF_Mem + PN ) ) + ( ( MDR / MDR ) + ( MDR - MRS ) ) ) / Max( ( ( ARS - BR ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( FirstVNF_RAM_Server + DDR ) ) ) ) ) / ( ( ( ( Max( AMS,FirstVNF_RAM_Server ) / ( Const - PN ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( Max( ( Const + FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + Const ) ) / ( ( FirstVNF_RAM_Server + Const ) + ( FirstVNF_RAM_Server + Const ) ) ) ) / ( Min( Max( ( Const - FirstVNF_RAM_Server ),( MDR - PN ) ) ,( Min( FirstVNF_RAM ,PN ) / ( AMS * MDR ) ) ) / ( ( ( Const * FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) / Max( ( Min( ( ( ( ARS / DDR ) / ( FirstVNF_RAM + BR ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Min( MDR ,FirstVNF_CPU ) ) ) ,( Max( ( DDR / MDR ),( PN * ARS ) ) * ( Min( PN ,AMS ) / ( MRS - ACS ) ) ) ) * ( ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ACS + AMS ) ) - ( ( CRS + PN ) / Min( PN ,DDR ) ) ) / ( ( ( Const * FirstVNF_RAM_Server ) - ( MRS + FirstVNF_CPU ) ) / ( Max( AMS,FirstVNF_Mem_Server ) + ( ARS + CRS ) ) ) ) ),( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_CPU + PN ) ) / ( Max( BR,ARS ) / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) / ( ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem ) ) / Max( ( DDR - CRS ),( FirstVNF_Mem_Server / ARS ) ) ) ) * ( Max( Max( Min( FirstVNF_Mem ,ACS ),( FirstVNF_CPU / FirstVNF_Mem ) ),( Min( MRS ,ARS ) / ( PN + BR ) ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Max( ( ( ( ( MDR - CRS ) - Min( BR ,MDR ) ) - Min( ( RRS + MRS ) ,( DDR + FirstVNF_CPU_Server ) ) ) / ( ( ( AMS - PN ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_RAM * ARS ),( CRS * DDR ) ) ) ),Min( ( ( ( FirstVNF_RAM_Server * ARS ) + ( BR + Const ) ) + Max( ( FirstVNF_Mem_Server / DDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ,Min( ( ( CRS - FirstVNF_Mem ) + Min( FirstVNF_CPU ,Const ) ) ,( ( PN * DDR ) - ( AMS - DDR ) ) ) ) ) / ( ( Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( BR / BR ) ) ,( ( BR * FirstVNF_RAM_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_Mem_Server,ACS ) / ( BR * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( FirstVNF_Mem_Server,DDR ) ) ) ) - ( ( ( Max( FirstVNF_RAM,ACS ) + ( ARS + MRS ) ) / ( Max( FirstVNF_RAM,BR ) / ( FirstVNF_RAM / PN ) ) ) * Min( ( ( CRS * FirstVNF_CPU_Server ) - Min( Const ,Const ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem ) / ( PN + FirstVNF_CPU ) ) ) ) ) ) - ( Min( Max( Max( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Min( BR ,ACS ) ) ),( ( Min( FirstVNF_Mem_Server ,BR ) - Min( FirstVNF_RAM ,ARS ) ) - ( ( FirstVNF_Mem - DDR ) + ( RRS - RRS ) ) ) ) ,( ( ( ( MRS / FirstVNF_Mem_Server ) + ( DDR - Const ) ) - ( ( FirstVNF_RAM / DDR ) + ( AMS + FirstVNF_RAM_Server ) ) ) / ( ( ( RRS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_Mem_Server ) / ( RRS / BR ) ) ) ) ) + Max( ( ( Min( ( BR / DDR ) ,( RRS - FirstVNF_CPU ) ) / Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( MDR - Const ) ) ) * Min( Min( Min( MRS ,RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ,( ( BR - FirstVNF_Mem ) + ( Const * Const ) ) ) ),( ( ( ( MRS - ARS ) * ( CRS * MRS ) ) / ( ( FirstVNF_CPU_Server + PN ) / ( AMS / CRS ) ) ) + ( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + Min( Max( AMS,FirstVNF_RAM_Server ) ,Min( PN ,Const ) ) ) ) ) ) ) )", "choosing": "( ( Min( Min( MLU ,RRSe ) ,MUR ) / CS ) * Min( MUM ,MUM ) )", "obj1": 0.5956175298804781, "obj2": 0.3468887430794569}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server + BR ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7705006830140761}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( MUM - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5256191261316955}, {"determining": "( ( FirstVNF_RAM - DDR ) / ( BR * Max( Max( MRS,MRS ),MDR ) ) )", "choosing": "( ( RRSe - CS ) * Max( ( RCSe / ( MLU - MLU ) ),RRSe ) )", "obj1": 0.33067729083665337, "obj2": 0.5413265098739876}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7740277867445626}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6363495060804373}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) ) * RRS ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) ) - CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.2749003984063745, "obj2": 0.6035441463504922}, {"determining": "( MDR / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) * RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * RRSe ) ) ) ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6334044924374443}, {"determining": "( Min( FirstVNF_Mem_Server ,ACS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM + MLU ) / ( DS - MUC ) ) / Min( ( MUC * CS ) ,( RCSe - RCSe ) ) ) * ( ( ( RRSe + MLU ) / ( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.603585657370518, "obj2": 0.27926229362394966}, {"determining": "( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( ( RRS * FirstVNF_CPU ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( CS,MUM ) ) + ( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5989834477320619}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.4960159362549801, "obj2": 0.38481437229527415}, {"determining": "( FirstVNF_Mem_Server / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe * CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5471928971465575}, {"determining": "( ( ( ( Max( Min( Min( ( AMS + RRS ) ,( DDR + RRS ) ) ,( ( ACS / FirstVNF_RAM ) * ( RRS * FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_RAM_Server / Const ) - Max( FirstVNF_CPU_Server,ARS ) ) / ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( BR * Const ) ) ) ) / ( ( Min( Max( Const,DDR ) ,( FirstVNF_Mem + PN ) ) + ( ( MDR / MDR ) + ( MDR - MRS ) ) ) / Max( ( ( ARS - BR ) + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( FirstVNF_RAM_Server + DDR ) ) ) ) ) / ( ( ( ( Max( AMS,FirstVNF_RAM_Server ) / ( Const - PN ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( Max( ( Const + FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + Const ) ) / ( ( FirstVNF_RAM_Server + Const ) + ( FirstVNF_RAM_Server + Const ) ) ) ) / ( Min( Max( ( Const - FirstVNF_RAM_Server ),( MDR - PN ) ) ,( Min( FirstVNF_RAM ,PN ) / ( AMS * MDR ) ) ) / ( ( ( Const * FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) / Max( ( Min( ( ( ( ARS / DDR ) / ( FirstVNF_RAM + BR ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Min( MDR ,FirstVNF_CPU ) ) ) ,( Max( ( DDR / MDR ),( PN * ARS ) ) * ( Min( PN ,AMS ) / ( MRS - ACS ) ) ) ) * ( ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( ACS + AMS ) ) - ( ( CRS + PN ) / Min( PN ,DDR ) ) ) / ( ( ( Const * FirstVNF_RAM_Server ) - ( MRS + FirstVNF_CPU ) ) / ( Max( AMS,FirstVNF_Mem_Server ) + ( ARS + CRS ) ) ) ) ),( ( FirstVNF_RAM / ( ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem ) ) / Max( ( DDR - CRS ),( FirstVNF_Mem_Server / ARS ) ) ) ) * ( Max( Max( Min( FirstVNF_Mem ,ACS ),( FirstVNF_CPU / FirstVNF_Mem ) ),( Min( MRS ,ARS ) / ( PN + BR ) ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) / Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ( Max( RRS,FirstVNF_Mem ) / ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) ) ) ) * ( ( Max( ( ( ( ( MDR - CRS ) - Min( BR ,MDR ) ) - Min( ( RRS + MRS ) ,( DDR + FirstVNF_CPU_Server ) ) ) / ( ( ( AMS - PN ) - ( FirstVNF_RAM / FirstVNF_RAM ) ) / Max( ( FirstVNF_RAM * ARS ),( CRS * DDR ) ) ) ),Min( ( ( ( FirstVNF_RAM_Server * ARS ) + ( BR + Const ) ) + Max( ( FirstVNF_Mem_Server / DDR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ,Min( ( ( CRS - FirstVNF_Mem ) + Min( FirstVNF_CPU ,Const ) ) ,( ( PN * DDR ) - ( AMS - DDR ) ) ) ) ) / ( ( Min( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - ( BR / BR ) ) ,( ( BR * FirstVNF_RAM_Server ) / ( BR - FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_Mem_Server,ACS ) / ( BR * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * Max( FirstVNF_Mem_Server,DDR ) ) ) ) - ( ( ( Max( FirstVNF_RAM,ACS ) + ( ARS + MRS ) ) / ( Max( FirstVNF_RAM,BR ) / ( FirstVNF_RAM / PN ) ) ) * Min( ( ( CRS * FirstVNF_CPU_Server ) - Min( Const ,Const ) ) ,( Min( FirstVNF_CPU ,FirstVNF_Mem ) / ( PN + FirstVNF_CPU ) ) ) ) ) ) - ( Min( Max( Max( ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_Mem + MDR ) ),Min( Min( MRS ,FirstVNF_Mem ) ,Min( BR ,ACS ) ) ),( ( Min( FirstVNF_Mem_Server ,BR ) - Min( FirstVNF_RAM ,ARS ) ) - ( ( FirstVNF_Mem - DDR ) + ( RRS - RRS ) ) ) ) ,( ( ( ( MRS / FirstVNF_Mem_Server ) + ( DDR - Const ) ) - ( ( FirstVNF_RAM / DDR ) + ( AMS + FirstVNF_RAM_Server ) ) ) / ( ( ( RRS * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + ( Max( CRS,FirstVNF_Mem_Server ) / ( RRS / BR ) ) ) ) ) + Max( ( ( Min( ( BR / DDR ) ,( RRS - FirstVNF_CPU ) ) / Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),( MDR - Const ) ) ) * Min( Min( Min( MRS ,RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ,( ( BR - FirstVNF_Mem ) + ( Const * Const ) ) ) ),( ( ( ( MRS - ARS ) * ( CRS * MRS ) ) / ( ( FirstVNF_CPU_Server + PN ) / ( AMS / CRS ) ) ) + ( ( ( ARS / FirstVNF_RAM ) / ( FirstVNF_CPU - FirstVNF_RAM ) ) + Min( Max( AMS,FirstVNF_RAM_Server ) ,Min( PN ,Const ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( RRSe + MLU ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) ,RRSe ) / MUR ) / CS ) * Min( MUM ,MUM ) )", "obj1": 0.5896414342629482, "obj2": 0.3512207422305254}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7594486820576709}, {"determining": "( ( MDR - Min( Max( MRS,( FirstVNF_Mem - Max( Max( DDR,( BR / MRS ) ),MRS ) ) ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) / CS ) * Max( ( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) + RRSe ),( CS * MUM ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6765649722416358}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( Min( FirstVNF_CPU_Server ,MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( AMS * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1852589641434263, "obj2": 0.7514927364462524}, {"determining": "( FirstVNF_Mem_Server / ( ( FirstVNF_CPU_Server / Max( Max( MRS,FirstVNF_RAM ),MDR ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( ( MUR * MUR ) / CS ) ,( ( RRSe + RCSe ) + RRSe ) ) * RRSe )", "obj1": 0.40836653386454186, "obj2": 0.5117856848379575}, {"determining": "( FirstVNF_Mem_Server / ( ( BR / MRS ) * RRS ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( Max( RRSe,MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.19322709163346613, "obj2": 0.7441029950699435}, {"determining": "( ( FirstVNF_CPU - ( FirstVNF_CPU_Server / ( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU - RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RMSe + MLU ) / DS ) - ( Min( RCSe ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7674927563323889}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.21115537848605578, "obj2": 0.6858707844308984}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.57814613032447}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - ( ( RRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUR / MUR ) ,Max( MUC,MUM ) ) + ( ( MUR + MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.37250996015936255, "obj2": 0.5182490768890642}, {"determining": "( ( FirstVNF_RAM - Const ) / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Max( RRSe,DS ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5557976784061263}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5471928971465575}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * ( MUM + DS ) ) )", "obj1": 0.5039840637450199, "obj2": 0.3770659453073976}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( AMS,AMS ) )", "choosing": "( Min( ( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) ) ,Max( MUC,RMSe ) ) * ( ( CS - RCSe ) + ( DS + MLU ) ) )", "obj1": 0.7051792828685259, "obj2": 0.24042208490542052}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - CS ) * Max( ( MUR + RRSe ),( CS * RRSe ) ) )", "obj1": 0.5199203187250996, "obj2": 0.37474149823770453}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( DDR + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( MUM - ( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) )", "obj1": 0.4641434262948207, "obj2": 0.4238090706511168}, {"determining": "( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,( Max( RRS,FirstVNF_RAM_Server ) - ( PN * RRS ) ) ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( MLU * RRSe ) )", "obj1": 0.6852589641434262, "obj2": 0.25649100226258453}, {"determining": "( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,ACS ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RMSe + MLU ) / DS ) - ( Min( MLU ,RRSe ) / ( RCSe / CS ) ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7674927563323889}], "10": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / Const ) - ( MRS * MRS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( RRSe * MUR ) )", "obj1": 0.3107569721115538, "obj2": 0.5637027900455276}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( RRSe - CS ) * Min( MUM ,( RRSe - MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6055888042745017}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5471928971465575}, {"determining": "( ( MDR - Min( Max( MRS,( DDR - Max( Max( DDR,( BR / MRS ) ),MRS ) ) ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) / CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.199203187250996, "obj2": 0.7087316294362508}, {"determining": "( MDR / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) * RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * RRSe ) ) ) ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6334044924374443}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU - RRS ) )", "choosing": "( ( RRSe + CS ) * Min( MUM ,( MUR - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) )", "obj1": 0.3286852589641434, "obj2": 0.5439647006223973}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.57814613032447}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( FirstVNF_Mem_Server / ( MRS * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * ( MUM * DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5188042124218142}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server / ( BR * RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.41434262948207173, "obj2": 0.49303460310645164}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( MUM - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5256191261316955}, {"determining": "( ( FirstVNF_RAM - DDR ) / ( BR * Max( Max( MRS,MRS ),MDR ) ) )", "choosing": "( ( RRSe - CS ) * Max( ( RCSe / ( MLU - MLU ) ),RRSe ) )", "obj1": 0.33067729083665337, "obj2": 0.5413265098739876}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6363495060804373}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) ) * RRS ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) ) - CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.2749003984063745, "obj2": 0.6035441463504922}, {"determining": "( MDR / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * CRS ) ) * RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * RRSe ) ) ) ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6334044924374443}, {"determining": "( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( ( RRS * FirstVNF_CPU ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( CS,MUM ) ) + ( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5989834477320619}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.4960159362549801, "obj2": 0.38481437229527415}, {"determining": "( FirstVNF_Mem_Server / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe * CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5471928971465575}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.57814613032447}, {"determining": "( ( FirstVNF_RAM - Const ) / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Max( RRSe,DS ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5557976784061263}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5471928971465575}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( DDR + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( MUM - ( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) )", "obj1": 0.4641434262948207, "obj2": 0.4238090706511168}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7728723278741788}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - ( FirstVNF_CPU_Server / Max( FirstVNF_RAM,ACS ) ) ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5471928971465575}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server / ( BR * RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.37250996015936255, "obj2": 0.516813107875979}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - ( ( RRS + FirstVNF_CPU ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,DS ) + ( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.4362549800796813, "obj2": 0.46042748350280027}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.34462151394422313, "obj2": 0.5188042124218142}, {"determining": "( FirstVNF_Mem_Server / ( MRS * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * ( MUM * DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5373966997338232}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Max( RRSe,DS ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5557976784061263}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5471928971465575}, {"determining": "( ( FirstVNF_RAM - DDR ) / ( BR * Max( Max( MRS,MRS ),MDR ) ) )", "choosing": "( ( RRSe - CS ) * Max( ( RCSe / ( MLU - MLU ) ),RRSe ) )", "obj1": 0.3784860557768924, "obj2": 0.5102229400950707}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( ( MUC - ( MUM - DS ) ) * RRSe ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6037347711577976}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * RRSe ) ) ) ) ) )", "obj1": 0.4860557768924303, "obj2": 0.4122925168823974}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( DDR + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( MUM - ( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) )", "obj1": 0.4641434262948207, "obj2": 0.4238090706511168}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,( BR / MRS ) ),MRS ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( DS ,RRSe ) / MUR ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7551607085335639}, {"determining": "( ( MDR - Min( Max( MRS,( DDR - Max( Max( DDR,( BR / MRS ) ),MRS ) ) ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( ( MUC / ( RCSe + ( RRSe / RRSe ) ) ) * ( ( ( RRSe + MUC ) / DS ) - ( Min( MLU ,RRSe ) / MUR ) ) ) / CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.199203187250996, "obj2": 0.7087316294362508}, {"determining": "( FirstVNF_Mem_Server / ( MRS * RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * RRSe ) ) ) ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6334044924374443}, {"determining": "( MDR / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) ) * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * ( MUM * DS ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5373966997338232}, {"determining": "( ( FirstVNF_RAM - DDR ) / ( BR * Max( ( MRS + MRS ),MDR ) ) )", "choosing": "( ( RMSe - CS ) * Max( ( RCSe / ( MLU - MLU ) ),RRSe ) )", "obj1": 0.39243027888446214, "obj2": 0.49546352413837913}, {"determining": "( ( FirstVNF_RAM - DDR ) / ( BR * Max( Max( RRS,FirstVNF_RAM_Server ),MDR ) ) )", "choosing": "( ( RRSe - CS ) * Max( ( ( RRSe - Max( MUC,RCSe ) ) / ( MLU - MLU ) ),RRSe ) )", "obj1": 0.3784860557768924, "obj2": 0.5102229400950707}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - ( ( RRS + FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3904382470119522, "obj2": 0.5069941209683099}, {"determining": "( FirstVNF_Mem_Server / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / RRSe ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7617203521397641}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - CRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( FirstVNF_RAM_Server * BR ) / ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( ( RRSe - CS ) - Max( ( MUR + RRSe ),( DS * RRSe ) ) ) ) ) )", "obj1": 0.47808764940239046, "obj2": 0.4147873091932171}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( ( Min( ( Max( Min( MRS ,MDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) - ( ( PN - FirstVNF_CPU ) + ( AMS + ARS ) ) ) ,( Max( ( AMS / MRS ),( AMS + ACS ) ) / Min( Max( FirstVNF_Mem,ARS ) ,( RRS + RRS ) ) ) ) * Min( ( ( ( Const * BR ) / ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) * ( ( DDR * AMS ) / ( BR - RRS ) ) ) ,( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem ) ) + ( ( BR * FirstVNF_RAM ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( FirstVNF_Mem / FirstVNF_CPU ) / ( CRS - FirstVNF_CPU ) ) - ( ( ACS * ACS ) / ( CRS * MDR ) ) ) + Min( ( ( BR * CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ,( ( ARS - CRS ) + ( ACS + FirstVNF_RAM_Server ) ) ) ) * ( Max( ( ( DDR + ARS ) + Min( ARS ,RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + ( CRS * BR ) ) ) + ( Min( ( ARS - MDR ) ,( BR - MRS ) ) + ( ( CRS / PN ) + ( Const + BR ) ) ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) )", "obj1": 0.4641434262948207, "obj2": 0.4238090706511168}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.2788844621513944, "obj2": 0.6028868883160031}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + RRS ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7246820496825909}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / ( Min( MLU ,RRSe ) / MUR ) ) * Min( MUM ,DS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.672146213089891}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - CS ) * Max( ( MUR + RRSe ),( CS * RRSe ) ) )", "obj1": 0.33067729083665337, "obj2": 0.5413265098739876}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( Min( FirstVNF_CPU_Server ,MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( ( ARS / DDR ) / ( FirstVNF_RAM + BR ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Min( MDR ,FirstVNF_CPU ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( AMS * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,Min( MUM ,MUM ) ) ) ,RRSe ) ) )", "obj1": 0.19721115537848605, "obj2": 0.7150185762630336}], "11": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / Const ) - ( MRS * MRS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( RRSe * MUR ) )", "obj1": 0.3107569721115538, "obj2": 0.5637027900455276}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( RRSe - CS ) * Min( MUM ,( RRSe - MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6055888042745017}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5471928971465575}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.57814613032447}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) ) * RRS ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) ) - CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.2749003984063745, "obj2": 0.6035441463504922}, {"determining": "( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( ( RRS * FirstVNF_CPU ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( CS,MUM ) ) + ( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5989834477320619}, {"determining": "( FirstVNF_Mem_Server / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe * CS ) * Min( MUM ,DS ) ) )", "obj1": 0.3247011952191235, "obj2": 0.5471928971465575}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.57814613032447}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7728723278741788}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( ( MUC - ( MUM - DS ) ) * RRSe ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6037347711577976}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,( BR / MRS ) ),MRS ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( DS ,RRSe ) / MUR ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7551607085335639}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + RRS ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7246820496825909}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / ( Min( MLU ,RRSe ) / MUR ) ) * Min( MUM ,DS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.672146213089891}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( Min( FirstVNF_CPU_Server ,MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( ( ARS / DDR ) / ( FirstVNF_RAM + BR ) ) + ( ( FirstVNF_CPU_Server - FirstVNF_Mem ) + Min( MDR ,FirstVNF_CPU ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( AMS * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,Min( MUM ,MUM ) ) ) ,RRSe ) ) )", "obj1": 0.19721115537848605, "obj2": 0.7150185762630336}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / MUM ) * Min( ( ( RCSe / CS ) * ( MUM * DS ) ) ,DS ) ) )", "obj1": 0.3187250996015936, "obj2": 0.5631624869926457}, {"determining": "( Max( MRS,( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) - Max( Max( DDR,( BR / MRS ) ),MRS ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( ( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) / DS ) - ( Min( DS ,RRSe ) / MUR ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6318783500874956}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / Max( ( MDR - FirstVNF_Mem_Server ),( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( MUM ,RRSe ) / MUR ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7551607085335639}, {"determining": "( Max( MRS,( DDR - Max( Min( DDR ,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( MUC / Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7728723278741788}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6037347711577976}, {"determining": "( ( ARS - CRS ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,( RRSe - MUC ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7608614041147993}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6037347711577976}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / ( BR * FirstVNF_CPU_Server ) ) ) * RRS ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) ) - CS ) * Max( ( MUR + RRSe ),( ( RCSe * CS ) * Min( MUM ,DS ) ) ) )", "obj1": 0.250996015936255, "obj2": 0.6309608910544489}, {"determining": "( FirstVNF_Mem_Server / ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUM ,( RRSe - MUC ) ) * ( MUM / ( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) ) - CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.2749003984063745, "obj2": 0.6035441463504922}, {"determining": "( ( FirstVNF_RAM / DDR ) / Max( CRS,BR ) )", "choosing": "( ( RRSe - CS ) * ( Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5495644061628338}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( BR * RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6037347711577976}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( Const * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.57814613032447}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,Min( MUM ,MUM ) ) ) ,RRSe ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7202328435779852}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( RRSe - DS ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.57814613032447}, {"determining": "( MDR / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) * RRS ) )", "choosing": "( ( RRSe - ( MUC + RCSe ) ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( MDR / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) ) * RRS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6037347711577976}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.57814613032447}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( BR * RRS ) )", "choosing": "( ( RRSe - CS ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.30677290836653387, "obj2": 0.57814613032447}, {"determining": "( ARS / ( MRS * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - ( ( MUC - Min( MUM ,Min( MUM ,MUM ) ) ) + RRSe ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6939229618952902}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.758110703301895}, {"determining": "( FirstVNF_Mem_Server / ( MRS * RRS ) )", "choosing": "( Min( Max( MUR,MUR ) ,Max( MUC,MUM ) ) + ( ( MUR / MUC ) - ( ( CS / CS ) * Min( MUM ,MUM ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5989834477320619}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( ( DDR / ( FirstVNF_CPU * RRS ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + RRS ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / Min( MUM ,( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.6944258032638091}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7246820496825909}, {"determining": "( ( FirstVNF_RAM - Const ) / ( BR * ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - CRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - Min( MUM ,( RRSe - ( ( RRSe - CS ) - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) ) * ( ( RCSe / CS ) * Max( RRSe,DS ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5841579937431985}, {"determining": "( ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * FirstVNF_CPU ) ) * RRS ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) ) - CS ) * Max( ( MUR + RRSe ),( CS * RMSe ) ) )", "obj1": 0.2749003984063745, "obj2": 0.6035441463504922}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,( BR / MRS ) ),MRS ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( RRSe + MUM ) / DS ) - ( Min( DS ,RRSe ) / MUR ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7551607085335639}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + FirstVNF_Mem_Server ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( MRS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( Min( MUM ,DS ) - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( ( MUC - Min( MUM ,DS ) ) - RRSe ) ) ) ) ) )", "obj1": 0.27689243027888444, "obj2": 0.6007295246492576}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( ( MUC - Min( MUM ,DS ) ) * RRSe ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6037347711577976}, {"determining": "( FirstVNF_Mem_Server / Min( MDR ,ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) * Min( MUM ,RCSe ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( ( MUC - ( MUM - DS ) ) * RRSe ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6037347711577976}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( BR + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( ( MUC - ( MUM - DS ) ) * ( RCSe / CS ) ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6037347711577976}, {"determining": "( FirstVNF_Mem_Server / ( BR * PN ) )", "choosing": "( Min( MUM ,( MUR - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( ( MUC - ( MUM - DS ) ) * RRSe ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6037347711577976}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) - Min( MUM ,DS ) ) )", "obj1": 0.25697211155378485, "obj2": 0.620658152605926}, {"determining": "( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.2729083665338645, "obj2": 0.6037347711577976}], "12": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / Const ) - ( MRS * MRS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( RRSe * MUR ) )", "obj1": 0.3107569721115538, "obj2": 0.5637027900455276}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( RRSe - CS ) * Min( MUM ,( RRSe - MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6055888042745017}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + RRS ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7246820496825909}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / ( Min( MLU ,RRSe ) / MUR ) ) * Min( MUM ,DS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.672146213089891}, {"determining": "( Max( MRS,( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) - Max( Max( DDR,( BR / MRS ) ),MRS ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( ( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) / DS ) - ( Min( DS ,RRSe ) / MUR ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6318783500874956}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,Min( MUM ,MUM ) ) ) ,RRSe ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7202328435779852}, {"determining": "( MDR / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) * RRS ) )", "choosing": "( ( RRSe - ( MUC + RCSe ) ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( ARS / ( MRS * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - ( ( MUC - Min( MUM ,Min( MUM ,MUM ) ) ) + RRSe ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6939229618952902}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( MDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( ( Const + FirstVNF_RAM_Server ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( ( DDR / ( FirstVNF_CPU * RRS ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + RRS ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / Min( MUM ,( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.199203187250996, "obj2": 0.6944258032638091}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7246820496825909}, {"determining": "( ( FirstVNF_RAM - Const ) / ( BR * ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - CRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - Min( MUM ,( RRSe - ( ( RRSe - CS ) - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) ) * ( ( RCSe / CS ) * Max( RRSe,DS ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5841579937431985}, {"determining": "( FirstVNF_Mem_Server / Min( MDR ,ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) * Min( MUM ,RCSe ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( ( FirstVNF_RAM / DDR ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - ( MUM * Min( MUM ,MUM ) ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7327186223913463}, {"determining": "( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,( BR * MRS ) ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( MUM * Min( MUM ,DS ) ) )", "obj1": 0.28286852589641437, "obj2": 0.5971262204185224}, {"determining": "( FirstVNF_Mem_Server / Min( FirstVNF_RAM ,ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / MUR ) * Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7246820496825909}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,Min( MUM ,MUM ) ) ) ,RRSe ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7202328435779852}, {"determining": "( MDR / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) ) * RRS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( BR * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - ( MUM + DS ) ) ,RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.709037542220137}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) ) / ( PN * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - Min( MUM ,( RRSe - MUC ) ) ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7362199234870158}, {"determining": "( FirstVNF_Mem_Server / ( PN * DDR ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ,( RRSe - ( MLU - Max( ( MUR * RRSe ),( RRSe - CS ) ) ) ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5886997282693708}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN - RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( FirstVNF_RAM / Const ) / Max( CRS,PN ) )", "choosing": "( ( RRSe - CS ) * ( Min( MUM ,Min( Min( MLU ,RCSe ) ,( RRSe * MUR ) ) ) * Min( MUR ,DS ) ) )", "obj1": 0.30278884462151395, "obj2": 0.5759389371403267}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,( DDR / ( FirstVNF_CPU * RRS ) ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RRSe - MUC ) )", "obj1": 0.2450199203187251, "obj2": 0.6291050937840071}, {"determining": "( Max( MRS,( DDR - Max( Min( DDR ,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( MUC / Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7727111826880118}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) - Min( MUM ,DS ) ) )", "obj1": 0.2868525896414343, "obj2": 0.5884946972572581}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) )", "obj1": 0.250996015936255, "obj2": 0.624436808967639}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) )", "obj1": 0.250996015936255, "obj2": 0.624436808967639}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) )", "obj1": 0.250996015936255, "obj2": 0.624436808967639}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7727111826880118}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.18127490039840638, "obj2": 0.7099937599855501}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) )", "choosing": "( ( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) ) * ( ( RCSe / ( MLU - MLU ) ) * Min( MUM ,DS ) ) )", "obj1": 0.23904382470119523, "obj2": 0.6450916038639908}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( Const * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7727111826880118}, {"determining": "( FirstVNF_Mem_Server / ( BR * BR ) )", "choosing": "( ( RRSe - ( MUC - RCSe ) ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) )", "obj1": 0.29282868525896416, "obj2": 0.5832121068341123}, {"determining": "( FirstVNF_Mem_Server / ( BR / FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUM ,( RRSe - MUC ) ) * ( MUM / ( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) ) - CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.25298804780876494, "obj2": 0.618887335093108}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( MUM ,( RRSe - MUC ) ) * Min( MUM ,( ( ( RRSe - CS ) * ( ( RCSe * CS ) * Min( MUM ,DS ) ) ) - ( MLU - Max( ( MUR + RRSe ),( ( MUC - ( MUM - DS ) ) * RRSe ) ) ) ) ) )", "obj1": 0.27689243027888444, "obj2": 0.5999836407636049}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7525847778737657}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.770022756615287}, {"determining": "( Max( MRS,( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) - Max( Max( DDR,( BR / MRS ) ),MRS ) ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( ( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) / DS ) - ( Min( DS ,RRSe ) / MUR ) ) )", "obj1": 0.27091633466135456, "obj2": 0.600893089988303}, {"determining": "( Max( MRS,( BR * RRS ) ) / BR )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( ( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) / DS ) - ( Min( DS ,RRSe ) / MUR ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6318783500874956}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( MUC / ( RCSe + ( RRSe / MUC ) ) ) * ( ( ( ( ( RRSe - CS ) * ( ( RCSe / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) / DS ) - ( Min( DS ,RRSe ) / MUR ) ) )", "obj1": 0.24302788844621515, "obj2": 0.6318783500874956}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem * Const ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( FirstVNF_Mem_Server / ( BR * ACS ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) )", "obj1": 0.250996015936255, "obj2": 0.624436808967639}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + FirstVNF_Mem_Server ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( MRS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),( FirstVNF_RAM * ACS ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( Min( MUM ,DS ) ,( Min( MUM ,DS ) - MUC ) ) * Min( MUM ,( RRSe - ( MLU - Max( ( MUR + RRSe ),( ( MUC - Min( MUM ,DS ) ) - RRSe ) ) ) ) ) )", "obj1": 0.29880478087649404, "obj2": 0.5828721071160821}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + FirstVNF_Mem_Server ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + AMS ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( MRS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( CRS ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) )", "obj1": 0.250996015936255, "obj2": 0.624436808967639}], "13": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( RRSe - CS ) * Min( MUM ,( RRSe - MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6055888042745017}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / ( Min( MLU ,RRSe ) / MUR ) ) * Min( MUM ,DS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.672146213089891}, {"determining": "( ( FirstVNF_RAM - Const ) / ( BR * ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - CRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - Min( MUM ,( RRSe - ( ( RRSe - CS ) - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) ) * ( ( RCSe / CS ) * Max( RRSe,DS ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5841579937431985}, {"determining": "( ( FirstVNF_RAM / DDR ) / Max( FirstVNF_CPU_Server,BR ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - ( MUM * Min( MUM ,MUM ) ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7327186223913463}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( BR * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - ( MUM + DS ) ) ,RRSe ) ) )", "obj1": 0.18326693227091634, "obj2": 0.709037542220137}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) ) / ( PN * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - Min( MUM ,( RRSe - MUC ) ) ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7362199234870158}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN - RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( Max( MRS,( DDR - Max( Min( DDR ,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( MUC / Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7727111826880118}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7727111826880118}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.18127490039840638, "obj2": 0.7099937599855501}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( Const * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7727111826880118}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem * Const ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( FirstVNF_Mem_Server,( DDR - Max( Max( DDR,( DDR / ( FirstVNF_CPU * RRS ) ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / MUM ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7727111826880118}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - ( ( RRS * FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,Min( MUM ,MUM ) ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7327186223913463}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( Const * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.18127490039840638, "obj2": 0.7099937599855501}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,MLU ) ) ,CS ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7727111826880118}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * Max( FirstVNF_CPU,RRS ) ) )", "choosing": "( ( ( MUR + DS ) + MUC ) / ( RRSe - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,( MUC / Max( RCSe,( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.1693227091633466, "obj2": 0.7214574112369139}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - Min( MUM ,( RRSe - MUC ) ) ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7362199234870158}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) ) / ( PN * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.1752988047808765, "obj2": 0.7176113516860491}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU * ACS ) )", "choosing": "( ( ( Min( MUM ,( ( ( RRSe - Max( MUC,DS ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) ) - MUC ) ) * ( MUM / ( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) ) - CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.23904382470119523, "obj2": 0.618843463581553}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.18127490039840638, "obj2": 0.7099937599855501}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7504973915756333}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( BR * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - ( MUM + DS ) ) ,RRSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7232081414824713}, {"determining": "( ( BR + RRS ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Max( MUC,( RCSe + ( RRSe / MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7633642172234189}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( FirstVNF_RAM * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,Min( MUM ,DS ) ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7504973915756333}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( Const * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7727111826880118}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( RRS / Max( CRS,BR ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,Min( MUM ,MUM ) ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7327186223913463}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( Min( MUC ,Min( MUM ,Min( MUM ,MUM ) ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7327186223913463}, {"determining": "( ( FirstVNF_RAM / DDR ) / Max( CRS,BR ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( MUC - Min( MUM ,DS ) ) ,( MUC / ( RCSe + ( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.18127490039840638, "obj2": 0.7099937599855501}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server + Max( Max( ARS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / Max( ( MUR + RRSe ),( ( MUC - Min( MUM ,DS ) ) - RMSe ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6916387126026157}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( RRS + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( Max( RCSe,( Min( MLU ,RRSe ) / MUR ) ) * Min( MUM ,DS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.672146213089891}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( Const * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7727111826880118}, {"determining": "( ( FirstVNF_RAM / DDR ) / Min( Const ,RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,RMSe ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7727111826880118}, {"determining": "( ( Max( MRS,( BR - Max( Max( DDR,( DDR - Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( ( Min( MUC ,DS ) + MUC ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,RCSe ) ) ,MUM ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7866456445349365}, {"determining": "( ARS / ( MDR * RRS ) )", "choosing": "( ( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) ) * ( ( RCSe / ( MLU - MLU ) ) * Min( RRSe ,DS ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5860880754823131}, {"determining": "( DDR / ( ACS * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( DS - Min( ( ( RCSe - RMSe ) - Min( RMSe ,MUC ) ) ,MUC ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( BR + AMS ) )", "choosing": "( Max( ( MUR / MUM ),MUC ) / ( RCSe - Min( ( ( MUR - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7122354811075229}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - ( MUM + DS ) ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7436247441202813}, {"determining": "( MDR / ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) ) * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - Min( MUM ,( RRSe - MUC ) ) ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7362199234870158}, {"determining": "( ( FirstVNF_Mem_Server / ( FirstVNF_CPU * RRS ) ) / ( PN * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7727111826880118}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( Const * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - Min( MUM ,( RRSe - MUC ) ) ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7362199234870158}, {"determining": "( ( FirstVNF_RAM - Const ) / ( BR * ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - CRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( ( ( FirstVNF_Mem * FirstVNF_RAM ) + ( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - Min( MUM ,Min( RRSe ,( ( RRSe - CS ) - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) ) * ( ( RCSe / CS ) * Max( RRSe,DS ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5841579937431985}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( MRS / ( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / ( Min( MLU ,RRSe ) / MUR ) ) / Min( MUM ,DS ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6458925054826288}], "14": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( RRSe - CS ) * Min( MUM ,( RRSe - MUC ) ) )", "obj1": 0.26294820717131473, "obj2": 0.6055888042745017}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / ( Min( MLU ,RRSe ) / MUR ) ) * Min( MUM ,DS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.672146213089891}, {"determining": "( ( FirstVNF_RAM - Const ) / ( BR * ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - CRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - Min( MUM ,( RRSe - ( ( RRSe - CS ) - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) ) * ( ( RCSe / CS ) * Max( RRSe,DS ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5841579937431985}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN - RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem * Const ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * Max( FirstVNF_CPU,RRS ) ) )", "choosing": "( ( ( MUR + DS ) + MUC ) / ( RRSe - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,( MUC / Max( RCSe,( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_CPU * ACS ) )", "choosing": "( ( ( Min( MUM ,( ( ( RRSe - Max( MUC,DS ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) ) - MUC ) ) * ( MUM / ( RRSe - ( MLU - Max( ( MUR + RRSe ),( CS * MUM ) ) ) ) ) ) - CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.23904382470119523, "obj2": 0.618843463581553}, {"determining": "( FirstVNF_Mem_Server / ( BR * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7504973915756333}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( FirstVNF_RAM * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,Min( MUM ,DS ) ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7504973915756333}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server + Max( Max( ARS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / Max( ( MUR + RRSe ),( ( MUC - Min( MUM ,DS ) ) - RMSe ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6916387126026157}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( RRS + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( Max( RCSe,( Min( MLU ,RRSe ) / MUR ) ) * Min( MUM ,DS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.672146213089891}, {"determining": "( ( Max( MRS,( BR - Max( Max( DDR,( DDR - Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( ( Min( MUC ,DS ) + MUC ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,RCSe ) ) ,MUM ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7866456445349365}, {"determining": "( ARS / ( MDR * RRS ) )", "choosing": "( ( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) ) * ( ( RCSe / ( MLU - MLU ) ) * Min( RRSe ,DS ) ) )", "obj1": 0.2689243027888446, "obj2": 0.5860880754823131}, {"determining": "( DDR / ( ACS * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( DS - Min( ( ( RCSe - RMSe ) - Min( RMSe ,MUC ) ) ,MUC ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( BR + AMS ) )", "choosing": "( Max( ( MUR / MUM ),MUC ) / ( RCSe - Min( ( ( MUR - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7122354811075229}, {"determining": "( ( FirstVNF_RAM - Const ) / ( BR * ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - CRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( ( ( FirstVNF_Mem * FirstVNF_RAM ) + ( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ) ) )", "choosing": "( ( RRSe - Min( MUM ,Min( RRSe ,( ( RRSe - CS ) - Max( ( MUR + RRSe ),( MUM * RRSe ) ) ) ) ) ) * ( ( RCSe / CS ) * Max( RRSe,DS ) ) )", "obj1": 0.28884462151394424, "obj2": 0.5841579937431985}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( MRS / ( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / ( Min( MLU ,RRSe ) / MUR ) ) / Min( MUM ,DS ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6458925054826288}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) )", "choosing": "( ( ( MUR / DS ) / MUC ) / ( ( RCSe / ( Min( MLU ,RRSe ) / MUR ) ) - Min( ( ( RRSe - CS ) - ( MUM + DS ) ) ,RRSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7170112851071578}, {"determining": "( ( FirstVNF_RAM + DDR ) / ( PN * RRS ) )", "choosing": "( ( ( RMSe / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - ( MUM + DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7546528034623355}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / ( Min( MLU ,RRSe ) / MUR ) ) * Min( MUM ,DS ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6458925054826288}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( MRS,( ( FirstVNF_RAM / DDR ) / ( PN * ( FirstVNF_CPU * RRS ) ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( RCSe + ( RRSe / RRSe ) ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7040360969369774}, {"determining": "( Max( MRS,( DDR - Max( Min( DDR ,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( MUC / Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,MLU ) ) ,CS ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7340142750827193}, {"determining": "( DDR / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / Max( ( MUR + RRSe ),Min( MUM ,MUC ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.20916334661354583, "obj2": 0.665284310727924}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( ARS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / Max( ( MUR + RRSe ),( ( MUC - Min( MUM ,DS ) ) - RRSe ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.20717131474103587, "obj2": 0.669198960439965}, {"determining": "( ( ( FirstVNF_CPU * RRS ) / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / Min( MUM ,MUM ) ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5720567721474552}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( MDR * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - ( MUM - MUC ) ) ,( ( MUR / CS ) * Min( MUM ,DS ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( MRS - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe * CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,( RCSe - Min( ( ( RRSe - CS ) - ( MUM + DS ) ) ,RRSe ) ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU * RRS ) ) / ( PN * RRS ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( MUR - Min( ( ( RRSe - CS ) - Min( MUC ,MUC ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7278986613752515}, {"determining": "( ( BR + RRS ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / ( Min( MLU ,RRSe ) / MUR ) ) * Min( MUM ,DS ) ) )", "obj1": 0.23705179282868527, "obj2": 0.6458925054826288}, {"determining": "( ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( RRSe - CS ) * Min( MUM ,( Min( MLU ,RRSe ) / MUR ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5574778369339103}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / ( Min( MLU ,RRSe ) / MUR ) ) * Min( MUM ,DS ) ) )", "obj1": 0.2051792828685259, "obj2": 0.672146213089891}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( ( DDR / ( FirstVNF_CPU * RRS ) ) / RRS ) )", "choosing": "( ( MUC - Min( MUM ,DS ) ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.22310756972111553, "obj2": 0.6620196408340251}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.8098785470276467}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7504973915756333}, {"determining": "( FirstVNF_Mem_Server / ( BR * ARS ) )", "choosing": "( ( ( Min( MUM ,( ( ( RRSe - Max( MUC,RCSe ) ) * ( ( RCSe / CS ) / Min( MUM ,DS ) ) ) - MUC ) ) * ( MUM / ( RRSe - ( MLU - Max( ( RRSe + RRSe ),( CS * MUM ) ) ) ) ) ) - CS ) * Max( ( MUR + RRSe ),( CS * MUM ) ) )", "obj1": 0.23904382470119523, "obj2": 0.618843463581553}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( DDR / ( FirstVNF_CPU * RRS ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( ARS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / Max( ( MUR + RRSe ),( ( MUC - Min( MUM ,MUR ) ) - RRSe ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6916387126026157}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,( DDR / ( FirstVNF_CPU * RRS ) ) ),MRS ) ) ) / BR )", "choosing": "( ( DS - CS ) * ( ( RCSe / Max( ( MUR + RRSe ),( ( MUC - Min( MUM ,DS ) ) - RRSe ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.199203187250996, "obj2": 0.6767170084364553}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server + Max( Max( ARS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / Max( ( MUR + RRSe ),( ( MUC - Min( MUM ,DS ) ) - RMSe ) ) ) * Min( MUM ,DS ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6916387126026157}], "15": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN - RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem * Const ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * Max( FirstVNF_CPU,RRS ) ) )", "choosing": "( ( ( MUR + DS ) + MUC ) / ( RRSe - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,( MUC / Max( RCSe,( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( Max( MRS,( BR - Max( Max( DDR,( DDR - Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( ( Min( MUC ,DS ) + MUC ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,RCSe ) ) ,MUM ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7866456445349365}, {"determining": "( DDR / ( ACS * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( DS - Min( ( ( RCSe - RMSe ) - Min( RMSe ,MUC ) ) ,MUC ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( BR + AMS ) )", "choosing": "( Max( ( MUR / MUM ),MUC ) / ( RCSe - Min( ( ( MUR - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7122354811075229}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) )", "choosing": "( ( ( MUR / DS ) / MUC ) / ( ( RCSe / ( Min( MLU ,RRSe ) / MUR ) ) - Min( ( ( RRSe - CS ) - ( MUM + DS ) ) ,RRSe ) ) )", "obj1": 0.16334661354581673, "obj2": 0.7170112851071578}, {"determining": "( ( FirstVNF_RAM + DDR ) / ( PN * RRS ) )", "choosing": "( ( ( RMSe / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - ( MUM + DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7546528034623355}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( MRS,( DDR - Max( Min( DDR ,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( MUC / Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * Min( MUM ,DS ) ) ) - Min( MUM ,MLU ) ) ,CS ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7340142750827193}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( MDR * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - ( MUM - MUC ) ) ,( ( MUR / CS ) * Min( MUM ,DS ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( MRS - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe * CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,( RCSe - Min( ( ( RRSe - CS ) - ( MUM + DS ) ) ,RRSe ) ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * ( ( FirstVNF_Mem_Server + ( FirstVNF_CPU * RRS ) ) / ( PN * RRS ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( MUR - Min( ( ( RRSe - CS ) - Min( MUC ,MUC ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7278986613752515}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.8098785470276467}, {"determining": "( DDR / ( PN * Max( FirstVNF_CPU,RRS ) ) )", "choosing": "( ( ( MUR / DS ) + RRSe ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7332972146096721}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( FirstVNF_CPU_Server / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( RCSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( DDR / Max( FirstVNF_CPU,RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe + Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( ( ( Max( ARS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( ARS,MRS ),MDR ) ) - ACS ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe + Min( ( ( RCSe - CS ) / Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( ARS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / ( Min( MLU ,( MUC - Min( MUM ,DS ) ) ) / MUR ) ) * Min( MUM ,DS ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7038224105172862}, {"determining": "( ( ( FirstVNF_CPU * RRS ) / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN + RRS ) )", "choosing": "( ( ( MUR / DS ) + MUM ) / ( RCSe - Min( ( ( RRSe - MUM ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( Max( MRS,Min( DDR ,Max( Max( DDR,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / RRSe ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( ( ( Max( RRS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( RRS + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( MRS,MRS ),MDR ) ) - FirstVNF_Mem ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( DS - CS ) * ( Max( RCSe,( Min( MLU ,RRSe ) / MUR ) ) * Min( MUM ,DS ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7320207409331533}, {"determining": "( DDR + ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( DS - Min( ( ( RCSe - RMSe ) - Min( RMSe ,MUC ) ) ,MUC ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( BR / RRS ) )", "choosing": "( ( ( MLU / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.17729083665338646, "obj2": 0.7122354811075229}, {"determining": "( Max( MRS,( DDR * Max( Max( DDR,( BR / FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MLU / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) * Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( BR + AMS ) )", "choosing": "( Max( ( MUR / MUM ),MUC ) / ( RCSe - Min( ( ( MUR - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7421717056570982}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( MDR - ( FirstVNF_CPU_Server / ( ( MDR - FirstVNF_Mem_Server ) / ( FirstVNF_CPU / RRS ) ) ) ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,( ( MUR / CS ) * Min( MUM ,DS ) ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7257910551227432}], "16": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem * Const ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * Max( FirstVNF_CPU,RRS ) ) )", "choosing": "( ( ( MUR + DS ) + MUC ) / ( RRSe - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,( MUC / Max( RCSe,( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( Max( MRS,( BR - Max( Max( DDR,( DDR - Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( ( Min( MUC ,DS ) + MUC ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,RCSe ) ) ,MUM ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7866456445349365}, {"determining": "( DDR / ( ACS * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( DS - Min( ( ( RCSe - RMSe ) - Min( RMSe ,MUC ) ) ,MUC ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM + DDR ) / ( PN * RRS ) )", "choosing": "( ( ( RMSe / DS ) + MUC ) / ( RCSe - Min( ( ( RRSe - CS ) - ( MUM + DS ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7546528034623355}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( MRS,( DDR - Max( Min( DDR ,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( MUC / Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( MRS - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe * CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,( RCSe - Min( ( ( RRSe - CS ) - ( MUM + DS ) ) ,RRSe ) ) ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.8098785470276467}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( ( ( Max( ARS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( ARS,MRS ),MDR ) ) - ACS ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe + Min( ( ( RCSe - CS ) / Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( ( FirstVNF_CPU * RRS ) / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( MRS,Min( DDR ,Max( Max( DDR,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / RRSe ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR + ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( DS - Min( ( ( RCSe - RMSe ) - Min( RMSe ,MUC ) ) ,MUC ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( MRS,( DDR * Max( Max( DDR,( BR / FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MLU / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) * Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( BR + AMS ) )", "choosing": "( Max( ( MUR / MUM ),MUC ) / ( RCSe - Min( ( ( MUR - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7421717056570982}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR ) ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.8098785470276467}, {"determining": "( ARS / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUR ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_Mem * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( Max( MUR,DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / RMSe ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_RAM * AMS ) )", "choosing": "( ( ( MUR / DS ) + MUR ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MUC ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7795854114984665}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR + ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( ( DDR / ( FirstVNF_CPU * MRS ) ) / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( FirstVNF_RAM,DDR ) / ( BR + AMS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / CS ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.739402157330264}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( MRS,Min( DDR ,Max( Max( DDR,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( ( RRSe - CS ) * ( ( MUR / RRSe ) * ( MUM - DS ) ) ) - Min( MUM ,DS ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7544525090034936}], "17": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem * Const ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * Max( FirstVNF_CPU,RRS ) ) )", "choosing": "( ( ( MUR + DS ) + MUC ) / ( RRSe - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,( MUC / Max( RCSe,( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( Max( MRS,( BR - Max( Max( DDR,( DDR - Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( ( Min( MUC ,DS ) + MUC ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,RCSe ) ) ,MUM ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7866456445349365}, {"determining": "( DDR / ( ACS * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( DS - Min( ( ( RCSe - RMSe ) - Min( RMSe ,MUC ) ) ,MUC ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.8098785470276467}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( ( ( Max( ARS,FirstVNF_RAM_Server ) - ( PN / RRS ) ) + ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( ( ( ( FirstVNF_CPU_Server / Max( Max( ARS,MRS ),MDR ) ) - ACS ) - ( DDR / FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server / Const ) + ( PN / RRS ) ) ) ) / ( BR * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe + Min( ( ( RCSe - CS ) / Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( ( FirstVNF_CPU * RRS ) / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR + ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( DS - Min( ( ( RCSe - RMSe ) - Min( RMSe ,MUC ) ) ,MUC ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR ) ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.8098785470276467}, {"determining": "( ARS / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / ( FirstVNF_RAM * ACS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUR ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_Mem * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( Max( MUR,DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / RMSe ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR + ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( ( DDR / ( FirstVNF_CPU * MRS ) ) / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7728368495969521}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.8098785470276467}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR ) ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.8098785470276467}, {"determining": "( DDR / ( ( DDR / ( FirstVNF_CPU * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / DS ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( MRS,Min( DDR ,Max( Max( DDR,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11952191235059761, "obj2": 0.8078467478906528}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / BR ) ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.8098785470276467}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.8098785470276467}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}], "18": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( DDR / ( FirstVNF_CPU * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / DS ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( CRS * ARS ) )", "choosing": "( Max( ( RCSe / DS ),RRSe ) / ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( RRS / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( DS - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7465018765357023}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / RCSe ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5720567721474552}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) / ( PN * MRS ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.8083581574782329}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( MRS - ( DDR - Max( Max( DDR,Min( ( PN * Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( RRSe + MUM ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5454560508675798}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * ( MRS - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) ) )", "choosing": "( ( ( MUR + DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.4163346613545817, "obj2": 0.47816857285034414}, {"determining": "( ( MRS - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR + DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( MUC / Max( RCSe,( RRSe / RRSe ) ) ) ) ) )", "obj1": 0.4163346613545817, "obj2": 0.47816857285034414}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( Max( MUR,DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5454560508675798}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,( FirstVNF_CPU * MRS ) ) ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( Max( MUR,DS ) + MUC ) / ( RCSe - Min( ( MUR - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2589641434262948, "obj2": 0.6331694685009145}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( Max( MUR,DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5454560508675798}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( ( MUR / DS ) / RMSe ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6702688188186636}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / RMSe ) - MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5720567721474552}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( Max( MRS,( FirstVNF_CPU - Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) )", "choosing": "( ( ( Min( MUR ,DS ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.26095617529880477, "obj2": 0.6075603205334437}, {"determining": "( ( Max( MRS,( PN - Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( DS / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( Max( MUR,DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5454560508675798}, {"determining": "( ( FirstVNF_RAM / DDR ) / Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( ACS,RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - RCSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( MUR - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MUM ) ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.9143426294820717, "obj2": 0.10008831658422664}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "( DDR / ( DDR / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( ( MUR / DS ) - MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( MUR / DS ) + MUC ) ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7493768064716987}, {"determining": "( DDR / ( FirstVNF_Mem * ( ( FirstVNF_RAM / DDR ) / ( PN * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.729037382442764}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( DDR / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( ( MUR / DS ) + ( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7408532844018855}, {"determining": "( DDR / ( FirstVNF_CPU * ( DDR / ( FirstVNF_CPU * MRS ) ) ) )", "choosing": "( ( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6894001186657033}, {"determining": "( ( ( FirstVNF_CPU * RRS ) / DDR ) / ( FirstVNF_RAM_Server * AMS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - ( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) - RRSe ) ) ) / ( RCSe - Min( Max( ( RCSe - CS ),Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7647625602995805}, {"determining": "( DDR / ( ( FirstVNF_Mem * MRS ) * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - Min( ( ( RCSe * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6872077054713607}, {"determining": "( ( Max( MRS,Min( DDR ,Max( Max( DDR,Min( BR ,FirstVNF_CPU ) ),MRS ) ) ) / BR ) / ( ACS * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) )", "obj1": 0.3426294820717131, "obj2": 0.5423894145424963}, {"determining": "( ( FirstVNF_RAM - Const ) - Max( FirstVNF_Mem,( ( FirstVNF_RAM / DDR ) / ( PN * Const ) ) ) )", "choosing": "Min( ( MLU * MUC ) ,( ( MUR / DS ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - Const ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "Min( ( MLU * MUC ) ,Max( RRSe,DS ) )", "obj1": 0.848605577689243, "obj2": 0.13825731377933412}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( DS / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / AMS ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) * ( MUR * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( Max( MRS,( FirstVNF_CPU - Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "( DDR / ( FirstVNF_CPU * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( MLU * MUC ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.737065668504531}, {"determining": "( ( FirstVNF_RAM - Const ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "Min( ( MLU * MUC ) ,Max( RRSe,DS ) )", "obj1": 0.8426294820717132, "obj2": 0.13871657209656335}], "19": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( DDR / ( FirstVNF_CPU * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / DS ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( CRS * ARS ) )", "choosing": "( Max( ( RCSe / DS ),RRSe ) / ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / RCSe ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5720567721474552}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) / ( PN * MRS ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.8083581574782329}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / RMSe ) - MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5720567721474552}, {"determining": "( ( FirstVNF_RAM * DDR ) / ( Max( MRS,( FirstVNF_CPU - Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) )", "choosing": "( ( ( Min( MUR ,DS ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.26095617529880477, "obj2": 0.6075603205334437}, {"determining": "( ( Max( MRS,( PN - Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( DS / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "( DDR / ( DDR / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( ( MUR / DS ) - MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( MUR / DS ) + MUC ) ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7493768064716987}, {"determining": "( DDR / ( FirstVNF_Mem * ( ( FirstVNF_RAM / DDR ) / ( PN * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.729037382442764}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( DDR / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( ( MUR / DS ) + ( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7408532844018855}, {"determining": "( DDR / ( FirstVNF_CPU * ( DDR / ( FirstVNF_CPU * MRS ) ) ) )", "choosing": "( ( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6894001186657033}, {"determining": "( ( ( FirstVNF_CPU * RRS ) / DDR ) / ( FirstVNF_RAM_Server * AMS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - ( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) - RRSe ) ) ) / ( RCSe - Min( Max( ( RCSe - CS ),Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7647625602995805}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( DS / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / AMS ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) * ( MUR * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( Max( MRS,( FirstVNF_CPU - Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "( DDR / ( FirstVNF_CPU * ( FirstVNF_RAM - Const ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( MLU * MUC ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.737065668504531}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / ARS )", "choosing": "( ( ( MUR / DS ) + ( MUR / RCSe ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,DS ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ACS * FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( MUC - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7647625602995805}, {"determining": "( Min( ( PN * Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "( ( MRS - ( DDR - Max( Max( DDR,Min( ( PN * Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "( DDR / ( FirstVNF_CPU / Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) )", "choosing": "( ( ( MUR / RMSe ) + ( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.18725099601593626, "obj2": 0.6900460882093484}, {"determining": "( ( ( MRS + Min( DDR ,Max( Max( DDR,Min( DDR ,FirstVNF_CPU ) ),MRS ) ) ) / BR ) / ( ACS * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) * CS ) - Min( MUM ,MUC ) ) ) / ( ( RCSe - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) / DS ) )", "obj1": 0.22709163346613545, "obj2": 0.6489919510389286}, {"determining": "( DDR / ( FirstVNF_Mem * ( ( FirstVNF_RAM / DDR ) / ( PN * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.7163411821603236}, {"determining": "( ( DDR / ( FirstVNF_CPU * MRS ) ) / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( ( ( MUR / DS ) + MUC ) / RMSe ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20916334661354583, "obj2": 0.6725848833493303}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / RMSe ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2948207171314741, "obj2": 0.5720567721474552}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * ( MRS - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) ) )", "choosing": "( ( ( Min( MUR ,DS ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.26095617529880477, "obj2": 0.6075603205334437}, {"determining": "( RRS / ( PN * Max( MRS,( FirstVNF_CPU - Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( DS - RCSe ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7427154605521968}, {"determining": "( RRS / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "( DDR / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "Max( DDR,( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / RMSe ) - MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.24900398406374502, "obj2": 0.6246454930735305}, {"determining": "( ( Max( MRS,( PN - Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( DS / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.28087649402390436, "obj2": 0.5964406765542445}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,( FirstVNF_CPU * MRS ) ) ,FirstVNF_CPU ) ),Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ) ) ) ) / BR )", "choosing": "( ( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( MUR - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.22111553784860558, "obj2": 0.6707935308823212}, {"determining": "( ( Max( MRS,( FirstVNF_CPU - Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) / BR ) / ( FirstVNF_CPU / RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7551522849398908}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / RMSe ) + MUC ) / ( Min( MUM ,MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2868525896414343, "obj2": 0.5757943400877547}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / Max( FirstVNF_CPU,( ( FirstVNF_CPU * RRS ) / ( FirstVNF_CPU / MRS ) ) ) )", "choosing": "( Max( ( ( MUR / DS ) + MUC ),( RCSe - Min( ( ( RCSe - CS ) - Min( RRSe ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6721755304527387}, {"determining": "( ( FirstVNF_CPU * RRS ) / ( ( FirstVNF_CPU * ( DDR / ( FirstVNF_CPU * MRS ) ) ) / MRS ) )", "choosing": "( ( ( ( MUR / DS ) / RMSe ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - CS ) ,RRSe ) ) )", "obj1": 0.23904382470119523, "obj2": 0.632562453040901}, {"determining": "( FirstVNF_CPU / ( FirstVNF_Mem * Const ) )", "choosing": "( ( ( MUR / DS ) + ( MLU - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - ( ( ( MUR / RMSe ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6021801347131744}, {"determining": "( DDR / ( FirstVNF_CPU + MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Max( ( ( RCSe - CS ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "Min( DDR ,( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / RCSe ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6190511654225725}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7633631517740681}, {"determining": "( RRS / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - Min( ( ( RCSe * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.17330677290836655, "obj2": 0.7112395585726031}], "20": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( DDR / ( FirstVNF_CPU * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / DS ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( CRS * ARS ) )", "choosing": "( Max( ( RCSe / DS ),RRSe ) / ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) / ( PN * MRS ) )", "choosing": "( ( ( ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.8083581574782329}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( DDR / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( ( MUR / DS ) - MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( MUR / DS ) + MUC ) ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7493768064716987}, {"determining": "( DDR / ( FirstVNF_Mem * ( ( FirstVNF_RAM / DDR ) / ( PN * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.729037382442764}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( DDR / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( ( MUR / DS ) + ( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7408532844018855}, {"determining": "( ( ( FirstVNF_CPU * RRS ) / DDR ) / ( FirstVNF_RAM_Server * AMS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - ( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) - RRSe ) ) ) / ( RCSe - Min( Max( ( RCSe - CS ),Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7647625602995805}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( DS / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / AMS ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) * ( MUR * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / ARS )", "choosing": "( ( ( MUR / DS ) + ( MUR / RCSe ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,DS ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ACS * FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( MUC - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7647625602995805}, {"determining": "( RRS / ( PN * Max( MRS,( FirstVNF_CPU - Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( DS - RCSe ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7427154605521968}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU + MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Max( ( ( RCSe - CS ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / MRS ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / MLU ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( DDR / ( AMS * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR - DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( CRS / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ,MLU ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7481660606505675}, {"determining": "( DDR / ( ACS * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7647625602995805}, {"determining": "( CRS / ( FirstVNF_CPU * BR ) )", "choosing": "( Max( ( MUR / DS ),RRSe ) / ( RCSe - Min( ( Min( RCSe ,CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7325229010773128}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( Max( ( RCSe - CS ),Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( DDR / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( ( MUR / DS ) + ( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.15139442231075698, "obj2": 0.7408532844018855}, {"determining": "( DDR / ( ACS / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR * DS ),MUC ) / Min( RCSe ,Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) * Min( MUM ,MLU ) ) + MLU ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe + Min( ( ( RCSe - CS ) / ( MUM - MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( Max( Max( BR,ARS ),( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,( FirstVNF_CPU / MRS ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( Max( MUR,DS ),MUC ) / ( RCSe - Min( ( ( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RCSe ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( ARS * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) / ( RCSe - Min( ( ( MLU - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / MUR ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - DS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( DDR / ( ( DDR / ( FirstVNF_CPU * MRS ) ) * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / DS ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( ( ( ( MUR / DS ) + MUC ) / RMSe ) ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7791829352107623}, {"determining": "( DDR / Max( ( DDR / ( RRS * MRS ) ),FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) - ( MUR / MUM ) ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( PN / FirstVNF_CPU ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( MUC - CS ) - Min( MUM ,RCSe ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7533668121292387}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / MLU ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ( FirstVNF_CPU * RRS ) / ( ( FirstVNF_CPU * ( DDR / ( FirstVNF_CPU * MRS ) ) ) / MRS ) ) / ( FirstVNF_CPU * RRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7606503442409598}, {"determining": "( DDR / ( ACS * FirstVNF_CPU ) )", "choosing": "( ( ( MUR / DS ) + Max( RCSe,Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7647625602995805}, {"determining": "( DDR / ( ACS * Max( Max( DDR,Min( DDR ,FirstVNF_CPU ) ),MRS ) ) )", "choosing": "( ( MUR / DS ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7647625602995805}, {"determining": "( DDR / ( ACS * FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( RMSe ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( MUC - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7647625602995805}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( DDR / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( MUR / DS ) + MUC ) ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7493768064716987}], "21": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( DDR / ( FirstVNF_CPU * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / DS ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( CRS * ARS ) )", "choosing": "( Max( ( RCSe / DS ),RRSe ) / ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( DS / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / AMS ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) * ( MUR * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / ARS )", "choosing": "( ( ( MUR / DS ) + ( MUR / RCSe ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,DS ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU + MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Max( ( ( RCSe - CS ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / MRS ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / MLU ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( DDR / ( AMS * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR - DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( CRS / ( FirstVNF_CPU * BR ) )", "choosing": "( Max( ( MUR / DS ),RRSe ) / ( RCSe - Min( ( Min( RCSe ,CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( Max( ( RCSe - CS ),Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ACS / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR * DS ),MUC ) / Min( RCSe ,Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) * Min( MUM ,MLU ) ) + MLU ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe + Min( ( ( RCSe - CS ) / ( MUM - MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( Max( Max( BR,ARS ),( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,( FirstVNF_CPU / MRS ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( Max( MUR,DS ),MUC ) / ( RCSe - Min( ( ( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RCSe ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( ARS * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) / ( RCSe - Min( ( ( MLU - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / MUR ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - DS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / Max( ( DDR / ( RRS * MRS ) ),FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) - ( MUR / MUM ) ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( PN / FirstVNF_CPU ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( MUC - CS ) - Min( MUM ,RCSe ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / MLU ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR / DDR ) / ( PN * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe + Min( ( ( RCSe - CS ) - Min( MUM ,MUM ) ) ,MUC ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( AMS * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - Min( MUM ,RRSe ) ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( ARS * DDR ) / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU + MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( DS ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR / ( ACS * FirstVNF_Mem ) ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( ( ( MUC - CS ) - Min( MUM ,MUC ) ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,RMSe ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( MUC - RRSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,Min( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,RRS ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( PN * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / Min( RCSe ,Min( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}], "22": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( DDR / ( FirstVNF_CPU * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / DS ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( CRS * ARS ) )", "choosing": "( Max( ( RCSe / DS ),RRSe ) / ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( DS / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / AMS ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) * ( MUR * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / ARS )", "choosing": "( ( ( MUR / DS ) + ( MUR / RCSe ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,DS ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU + MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Max( ( ( RCSe - CS ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / MRS ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / MLU ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( DDR / ( AMS * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR - DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( CRS / ( FirstVNF_CPU * BR ) )", "choosing": "( Max( ( MUR / DS ),RRSe ) / ( RCSe - Min( ( Min( RCSe ,CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( Max( ( RCSe - CS ),Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ACS / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR * DS ),MUC ) / Min( RCSe ,Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) * Min( MUM ,MLU ) ) + MLU ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe + Min( ( ( RCSe - CS ) / ( MUM - MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( Max( Max( BR,ARS ),( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,( FirstVNF_CPU / MRS ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( Max( MUR,DS ),MUC ) / ( RCSe - Min( ( ( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RCSe ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( ARS * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) / ( RCSe - Min( ( ( MLU - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / MUR ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - DS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / Max( ( DDR / ( RRS * MRS ) ),FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) - ( MUR / MUM ) ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( PN / FirstVNF_CPU ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( MUC - CS ) - Min( MUM ,RCSe ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / MLU ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR / DDR ) / ( PN * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe + Min( ( ( RCSe - CS ) - Min( MUM ,MUM ) ) ,MUC ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( AMS * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - Min( MUM ,RRSe ) ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( ARS * DDR ) / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU + MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( DS ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR / ( ACS * FirstVNF_Mem ) ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( ( ( MUC - CS ) - Min( MUM ,MUC ) ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,RMSe ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( MUC - RRSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,Min( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,RRS ) ),MRS ) ) ) / BR )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( PN * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / Min( RCSe ,Min( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}], "23": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( DDR / ( FirstVNF_CPU * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / DS ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( CRS * ARS ) )", "choosing": "( Max( ( RCSe / DS ),RRSe ) / ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( DS / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / AMS ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) * ( MUR * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / ARS )", "choosing": "( ( ( MUR / DS ) + ( MUR / RCSe ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,DS ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU + MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Max( ( ( RCSe - CS ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / MRS ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / MLU ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( DDR / ( AMS * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR - DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( CRS / ( FirstVNF_CPU * BR ) )", "choosing": "( Max( ( MUR / DS ),RRSe ) / ( RCSe - Min( ( Min( RCSe ,CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( Max( ( RCSe - CS ),Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ACS / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR * DS ),MUC ) / Min( RCSe ,Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) * Min( MUM ,MLU ) ) + MLU ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe + Min( ( ( RCSe - CS ) / ( MUM - MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( Max( Max( BR,ARS ),( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,( FirstVNF_CPU / MRS ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( Max( MUR,DS ),MUC ) / ( RCSe - Min( ( ( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RCSe ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( ARS * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) / ( RCSe - Min( ( ( MLU - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / MUR ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - DS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / Max( ( DDR / ( RRS * MRS ) ),FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) - ( MUR / MUM ) ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( PN / FirstVNF_CPU ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( MUC - CS ) - Min( MUM ,RCSe ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / MLU ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR / DDR ) / ( PN * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe + Min( ( ( RCSe - CS ) - Min( MUM ,MUM ) ) ,MUC ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( AMS * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - Min( MUM ,RRSe ) ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( ARS * DDR ) / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU + MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( DS ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR / ( ACS * FirstVNF_Mem ) ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( ( ( MUC - CS ) - Min( MUM ,MUC ) ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,RMSe ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( MUC - RRSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,Min( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( PN * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / Min( RCSe ,Min( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( MRS / ( ( DDR / Max( FirstVNF_CPU,BR ) ) * MRS ) )", "choosing": "( ( ( RRSe / DS ) + ( DS - Min( ( ( RCSe * CS ) - Min( MUM ,CS ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}], "24": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( DDR / ( FirstVNF_CPU * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / DS ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( CRS * ARS ) )", "choosing": "( Max( ( RCSe / DS ),RRSe ) / ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( DS / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / AMS ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) * ( MUR * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / ARS )", "choosing": "( ( ( MUR / DS ) + ( MUR / RCSe ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,DS ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU + MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Max( ( ( RCSe - CS ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / MRS ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / MLU ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( DDR / ( AMS * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR - DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( CRS / ( FirstVNF_CPU * BR ) )", "choosing": "( Max( ( MUR / DS ),RRSe ) / ( RCSe - Min( ( Min( RCSe ,CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( Max( ( RCSe - CS ),Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ACS / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR * DS ),MUC ) / Min( RCSe ,Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) * Min( MUM ,MLU ) ) + MLU ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe + Min( ( ( RCSe - CS ) / ( MUM - MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( Max( Max( BR,ARS ),( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,( FirstVNF_CPU / MRS ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( Max( MUR,DS ),MUC ) / ( RCSe - Min( ( ( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RCSe ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( ARS * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) / ( RCSe - Min( ( ( MLU - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / MUR ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - DS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / Max( ( DDR / ( RRS * MRS ) ),FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) - ( MUR / MUM ) ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( PN / FirstVNF_CPU ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( MUC - CS ) - Min( MUM ,RCSe ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / MLU ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR / DDR ) / ( PN * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe + Min( ( ( RCSe - CS ) - Min( MUM ,MUM ) ) ,MUC ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( AMS * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - Min( MUM ,RRSe ) ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( ARS * DDR ) / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU + MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( DS ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR / ( ACS * FirstVNF_Mem ) ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( ( ( MUC - CS ) - Min( MUM ,MUC ) ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,RMSe ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( MUC - RRSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,Min( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( PN * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / Min( RCSe ,Min( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( MRS / ( ( DDR / Max( FirstVNF_CPU,BR ) ) * MRS ) )", "choosing": "( ( ( RRSe / DS ) + ( DS - Min( ( ( RCSe * CS ) - Min( MUM ,CS ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}], "25": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( DDR / ( FirstVNF_CPU * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / DS ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( CRS * ARS ) )", "choosing": "( Max( ( RCSe / DS ),RRSe ) / ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * Const ) )", "choosing": "( ( ( DS / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / AMS ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) * ( MUR * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR - ( DDR - Max( Max( DDR,Min( Max( FirstVNF_RAM,DDR ) ,FirstVNF_CPU ) ),MRS ) ) ) / ARS )", "choosing": "( ( ( MUR / DS ) + ( MUR / RCSe ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,DS ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU + MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Max( ( ( RCSe - CS ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / MRS ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / MLU ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( DDR / ( AMS * MRS ) ) * MRS ) )", "choosing": "( ( ( MUR - DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( CRS / ( FirstVNF_CPU * BR ) )", "choosing": "( Max( ( MUR / DS ),RRSe ) / ( RCSe - Min( ( Min( RCSe ,CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( Max( ( RCSe - CS ),Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / Max( Max( DDR,( DDR / Min( FirstVNF_CPU ,RRS ) ) ),MRS ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ACS / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR * DS ),MUC ) / Min( RCSe ,Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) * Min( MUM ,MLU ) ) + MLU ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( BR / ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe + Min( ( ( RCSe - CS ) / ( MUM - MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( Max( Max( BR,ARS ),( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,( FirstVNF_CPU / MRS ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( Max( MUR,DS ),MUC ) / ( RCSe - Min( ( ( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RCSe ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( ARS * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) / ( RCSe - Min( ( ( MLU - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / MUR ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - DS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / Max( ( DDR / ( RRS * MRS ) ),FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) - ( MUR / MUM ) ) / ( RCSe - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( PN / FirstVNF_CPU ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( MUC - CS ) - Min( MUM ,RCSe ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( ARS / DDR ) / ( FirstVNF_Mem - Const ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / MLU ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR / DDR ) / ( PN * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe + Min( ( ( RCSe - CS ) - Min( MUM ,MUM ) ) ,MUC ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( AMS * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - Min( MUM ,RRSe ) ) ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( ARS * DDR ) / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU + MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( DS ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( ( DDR / ( ACS * FirstVNF_Mem ) ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( ( ( MUC - CS ) - Min( MUM ,MUC ) ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,RMSe ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( MUC - RRSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7751916020348154}, {"determining": "( DDR / ( ( PN * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / Min( RCSe ,Min( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( MRS / ( ( DDR / Max( FirstVNF_CPU,BR ) ) * MRS ) )", "choosing": "( ( ( RRSe / DS ) + ( DS - Min( ( ( RCSe * CS ) - Min( MUM ,CS ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}], "26": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( DDR / ( ( PN * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / Min( RCSe ,Min( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( MRS / ( ( DDR / Max( FirstVNF_CPU,BR ) ) * MRS ) )", "choosing": "( ( ( RRSe / DS ) + ( DS - Min( ( ( RCSe * CS ) - Min( MUM ,CS ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( ( FirstVNF_RAM / Const ) - Max( ( FirstVNF_CPU / MRS ),MRS ) )", "choosing": "Min( ( MLU * MUC ) ,( RRSe - ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.5219123505976095, "obj2": 0.44006722360823275}, {"determining": "( DDR / ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( FirstVNF_CPU * ARS ) )", "choosing": "( Max( ( RCSe / DS ),RRSe ) / ( RCSe - ( ( MUR / DS ) + ( DS - Min( ( ( RCSe * CS ) - Min( MUM ,CS ) ) ,RRSe ) ) ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6249837331169913}, {"determining": "( DDR / Max( FirstVNF_CPU,ARS ) )", "choosing": "( ( ( MUR / DS ) + ( DS - Min( ( ( RCSe * CS ) + Min( MUM ,CS ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.7511154916170268}, {"determining": "( DDR / ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - ( MUR / DS ) ) - Min( MUM ,MLU ) ) + MLU ) ) )", "obj1": 0.9302788844621513, "obj2": 0.08703890833138522}, {"determining": "( BR / ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,MLU ) ) + MLU ) ) )", "obj1": 0.8904382470119522, "obj2": 0.11292190878305786}, {"determining": "( ( FirstVNF_CPU * ARS ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "( RRSe / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5743859678000265}, {"determining": "( DDR / ( FirstVNF_CPU * ARS ) )", "choosing": "( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5601024025658625}, {"determining": "( DDR / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.30876494023904383, "obj2": 0.584543073127328}, {"determining": "( DDR / ( ( DDR / Max( FirstVNF_CPU,BR ) ) * MRS ) )", "choosing": "( ( ( MUR / MUR ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.25697211155378485, "obj2": 0.6076883643628999}, {"determining": "( ( ( FirstVNF_Mem / PN ) * Max( FirstVNF_Mem,Min( FirstVNF_RAM ,MRS ) ) ) - ( Min( Min( FirstVNF_RAM_Server ,Max( PN,DDR ) ) ,FirstVNF_RAM ) / RRS ) )", "choosing": "( ( ( MLU * MUR ) / RRSe ) * ( DS / CS ) )", "obj1": 0.43824701195219123, "obj2": 0.4875116869202115}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5601024025658625}, {"determining": "( ( ARS / DDR ) / ( ( DDR / ( FirstVNF_CPU / MRS ) ) - Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.26693227091633465, "obj2": 0.6066972283604962}, {"determining": "( DDR / ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe / CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( FirstVNF_CPU ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( Min( ( Min( RCSe ,CS ) + Min( MUM ,MUC ) ) ,RRSe ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7356717060906044}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) / ( RCSe - Min( ( ( MLU - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.18127490039840638, "obj2": 0.7046651186144964}, {"determining": "( DDR / Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( MUR - DS ) + ( DS - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MUC ) ) )", "obj1": 0.30876494023904383, "obj2": 0.584543073127328}, {"determining": "( ( FirstVNF_RAM / DDR ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.30876494023904383, "obj2": 0.584543073127328}, {"determining": "( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.25697211155378485, "obj2": 0.6076883643628999}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.21115537848605578, "obj2": 0.6675817452088548}, {"determining": "( DDR / ( FirstVNF_CPU + AMS ) )", "choosing": "( ( ( MUR - DS ) + ( DS - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.30876494023904383, "obj2": 0.584543073127328}, {"determining": "( ( FirstVNF_RAM / AMS ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,BR ) ),MRS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUR,DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) * ( MUR * MUC ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7389588734853997}, {"determining": "( BR / Max( FirstVNF_CPU,( FirstVNF_CPU / MRS ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe + Min( ( ( DS - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) / ( MUM - MUC ) ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( ( RCSe - CS ) / ( MUM - MUC ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.9063745019920318, "obj2": 0.09997290566825504}, {"determining": "( Min( Max( ( ( ( Min( ( MDR * Const ) ,( DDR * FirstVNF_Mem_Server ) ) * Min( ( MDR / BR ) ,( FirstVNF_Mem_Server / DDR ) ) ) / ( Max( ( CRS * RRS ),Min( PN ,BR ) ) + ( ( MRS / PN ) + ( CRS + FirstVNF_CPU ) ) ) ) * Min( Min( Min( Min( CRS ,FirstVNF_Mem ) ,Min( BR ,FirstVNF_Mem_Server ) ) ,( ( BR - Const ) * ( FirstVNF_CPU / AMS ) ) ) ,Min( ( ( FirstVNF_Mem_Server / CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ,Max( Min( Const ,FirstVNF_Mem_Server ),( FirstVNF_Mem + DDR ) ) ) ) ),( Max( Max( ( Min( Const ,PN ) + ( BR - FirstVNF_CPU_Server ) ),( ( PN / ACS ) + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ),( ( ( Const + FirstVNF_RAM ) - ( ARS - DDR ) ) - Min( ( DDR * ACS ) ,( DDR / ARS ) ) ) ) - Min( ( ( ( FirstVNF_RAM - ACS ) + ( RRS * DDR ) ) / ( ( Const * BR ) / ( Const + FirstVNF_Mem_Server ) ) ) ,Max( ( ( RRS / ACS ) * ( RRS + FirstVNF_Mem ) ),Max( ( FirstVNF_RAM_Server / Const ),Max( ARS,FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( ( Max( ( ( CRS - FirstVNF_Mem_Server ) / Max( DDR,BR ) ),Max( ( FirstVNF_CPU_Server + DDR ),( BR - RRS ) ) ) - Min( ( ( Const / FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ,( ( Const - Const ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) + Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - ( ARS / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,AMS ) / ( MRS + DDR ) ) ) ,Max( ( ( FirstVNF_CPU_Server + Const ) + ( ARS + FirstVNF_RAM ) ),Max( ( CRS + FirstVNF_RAM ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) ) ) / ( ( ( ( ( MDR * BR ) / ( FirstVNF_RAM_Server + Const ) ) + Min( ( FirstVNF_CPU_Server / MRS ) ,( BR / PN ) ) ) / ( ( Min( FirstVNF_Mem_Server ,ACS ) + ( FirstVNF_RAM * Const ) ) / ( Min( FirstVNF_RAM ,MRS ) - Max( AMS,PN ) ) ) ) - ( ( Max( ( CRS * Const ),Min( FirstVNF_RAM ,MDR ) ) - Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem_Server * ARS ) ) ) / Max( Max( Max( FirstVNF_CPU_Server,FirstVNF_RAM ),Max( FirstVNF_CPU,RRS ) ),( ( RRS - PN ) - ( FirstVNF_Mem_Server - CRS ) ) ) ) ) ) ) * Max( Min( ( ( ( ( Min( BR ,FirstVNF_RAM ) + ( FirstVNF_Mem / RRS ) ) - ( ( MDR - FirstVNF_CPU ) + ( FirstVNF_RAM_Server * AMS ) ) ) * Max( Min( ( FirstVNF_Mem_Server - MDR ) ,( ARS / DDR ) ),Max( Max( ACS,FirstVNF_Mem ),( DDR / Const ) ) ) ) * Min( ( Min( ( DDR - FirstVNF_RAM ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ( ( ARS * FirstVNF_RAM ) * ( ACS + FirstVNF_Mem ) ) ) ,Min( ( ( MDR / FirstVNF_CPU_Server ) * ( Const / CRS ) ) ,( ( AMS * ACS ) / Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( Min( Max( FirstVNF_CPU_Server,ARS ) ,Max( DDR,Const ) ) * ( ( BR - RRS ) + ( MDR * BR ) ) ) / ( ( Min( FirstVNF_CPU ,BR ) * Max( FirstVNF_CPU,PN ) ) / ( Min( RRS ,RRS ) * Max( FirstVNF_Mem_Server,ACS ) ) ) ) * ( Max( ( Min( FirstVNF_Mem_Server ,ARS ) * Min( Const ,BR ) ),( ( FirstVNF_RAM + DDR ) + Min( MDR ,FirstVNF_RAM ) ) ) * Max( ( ( Const - FirstVNF_RAM ) * ( FirstVNF_CPU_Server + BR ) ),( ( FirstVNF_Mem * RRS ) - ( MDR + BR ) ) ) ) ) ),Min( ( ( ( ( ( RRS - AMS ) - ( FirstVNF_RAM_Server * DDR ) ) / ( ( MDR - MRS ) - ( FirstVNF_RAM_Server - PN ) ) ) * ( ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( ARS * AMS ) ) + ( Min( FirstVNF_CPU_Server ,CRS ) / Min( FirstVNF_Mem_Server ,ACS ) ) ) ) / ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + ( CRS - Const ) ) * Max( ( FirstVNF_CPU_Server / RRS ),Max( RRS,FirstVNF_RAM_Server ) ) ) / ( ( ( Const - MRS ) / ( CRS - MDR ) ) + Max( ( FirstVNF_RAM - RRS ),( FirstVNF_Mem_Server - BR ) ) ) ) ) ,Max( ( ( Max( Min( CRS ,PN ),( MRS + ARS ) ) * ( ( CRS + ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) / Min( Max( ( FirstVNF_Mem_Server / CRS ),( PN + BR ) ) ,( ( AMS * PN ) + ( DDR - DDR ) ) ) ),( Min( ( ( FirstVNF_RAM_Server + PN ) / Min( MDR ,PN ) ) ,Max( ( BR + FirstVNF_CPU ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) / Min( Min( ( FirstVNF_Mem + AMS ) ,( MRS - FirstVNF_RAM_Server ) ) ,( ( ARS / DDR ) + ( BR / ACS ) ) ) ) ) ) ) )", "choosing": "Min( ( Max( CS,( RCSe - ( RCSe * Max( ( Max( MUM,MUC ) - RMSe ),MUR ) ) ) ) / ( CS + ( MUC / Min( ( ( ( MLU * DS ) / RMSe ) * Min( RRSe ,MUM ) ) ,( Max( MUM,RRSe ) / Min( RMSe ,Min( MUR ,RRSe ) ) ) ) ) ) ) ,( Min( Max( Min( ( CS * MUM ) ,MUR ),RMSe ) ,RMSe ) - ( RRSe * RMSe ) ) )", "obj1": 0.6752988047808764, "obj2": 0.3401734398645262}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( DDR / ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.30876494023904383, "obj2": 0.584543073127328}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5759919560087768}, {"determining": "( DDR / ( ACS / ( FirstVNF_CPU * CRS ) ) )", "choosing": "( ( ( MUR / DS ) + ( ( RCSe - CS ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7698239211041447}, {"determining": "( DDR / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( ( FirstVNF_RAM / ( ( FirstVNF_RAM / DDR ) / ( PN * MRS ) ) ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "Min( ( MLU * MUC ) ,Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( DDR * MRS ) )", "choosing": "( ( ( MUR / DS ) + ( MUR / DS ) ) / ( RCSe - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7424215239721905}, {"determining": "( DDR / ( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.2689243027888446, "obj2": 0.6026643616580432}, {"determining": "( BR - ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR * DS ),MUC ) / Min( RCSe ,Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.3804780876494024, "obj2": 0.5042649934322081}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( MUC / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.3346613545816733, "obj2": 0.5601024025658625}, {"determining": "( DDR / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6853568717720759}, {"determining": "( ( FirstVNF_RAM / DDR ) - ( PN * Const ) )", "choosing": "( ( ( DS / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.25697211155378485, "obj2": 0.6076883643628999}, {"determining": "( DDR / Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( ( MUR / CS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.30278884462151395, "obj2": 0.5967218341206869}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( ARS * DDR ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.34063745019920316, "obj2": 0.5507679343533368}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5759919560087768}], "27": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( DDR / ( ( PN * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / Min( RCSe ,Min( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( MRS / ( ( DDR / Max( FirstVNF_CPU,BR ) ) * MRS ) )", "choosing": "( ( ( RRSe / DS ) + ( DS - Min( ( ( RCSe * CS ) - Min( MUM ,CS ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( DDR / ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( DDR / ( ( DDR / Max( FirstVNF_CPU,BR ) ) * MRS ) )", "choosing": "( ( ( MUR / MUR ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.25697211155378485, "obj2": 0.6076883643628999}, {"determining": "( ( ( FirstVNF_Mem / PN ) * Max( FirstVNF_Mem,Min( FirstVNF_RAM ,MRS ) ) ) - ( Min( Min( FirstVNF_RAM_Server ,Max( PN,DDR ) ) ,FirstVNF_RAM ) / RRS ) )", "choosing": "( ( ( MLU * MUR ) / RRSe ) * ( DS / CS ) )", "obj1": 0.43824701195219123, "obj2": 0.4875116869202115}, {"determining": "( DDR / ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe / CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( FirstVNF_CPU ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( Min( ( Min( RCSe ,CS ) + Min( MUM ,MUC ) ) ,RRSe ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7356717060906044}, {"determining": "( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.25697211155378485, "obj2": 0.6076883643628999}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.21115537848605578, "obj2": 0.6675817452088548}, {"determining": "( ( FirstVNF_RAM / AMS ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,BR ) ),MRS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUR,DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) * ( MUR * MUC ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7389588734853997}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( DDR / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( BR - ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR * DS ),MUC ) / Min( RCSe ,Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.3804780876494024, "obj2": 0.5042649934322081}, {"determining": "( ( FirstVNF_RAM / DDR ) - ( PN * Const ) )", "choosing": "( ( ( DS / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.25697211155378485, "obj2": 0.6076883643628999}, {"determining": "( DDR / Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) )", "choosing": "( ( ( MUR / DS ) + ( ( RCSe - CS ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( Min( MUM ,MUC ) - CS ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7474783080359297}, {"determining": "( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,MLU ) ) + MLU ) ) )", "obj1": 0.18127490039840638, "obj2": 0.703270458245065}, {"determining": "( DDR / ( ACS / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,MLU ) ) + DS ) ) )", "obj1": 0.18127490039840638, "obj2": 0.703270458245065}, {"determining": "( BR - ( FirstVNF_CPU * MRS ) )", "choosing": "( Max( ( MUR * DS ),MUC ) / ( RCSe / Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.38645418326693226, "obj2": 0.4953238246796236}, {"determining": "( DDR / ( ( PN * ( FirstVNF_Mem_Server + Const ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( ( RCSe - CS ) - ( MUM * MUC ) ) ) ) )", "obj1": 0.32669322709163345, "obj2": 0.5597249761556494}, {"determining": "( ( FirstVNF_CPU * MRS ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( DS - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6675439757844591}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / Min( FirstVNF_Mem_Server ,Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( ( ( RCSe - RMSe ) - ( MUM * MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.2868525896414343, "obj2": 0.5950294450258468}, {"determining": "( DDR / ( DDR / ( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( ( RCSe - CS ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1852589641434263, "obj2": 0.6954353777452255}, {"determining": "( BR - ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.33266932270916333, "obj2": 0.5500838645701087}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * DS ),MUC ) / ( RCSe / Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2908366533864542, "obj2": 0.5741033172226777}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6783284866695367}, {"determining": "( DDR / ( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU / MRS ) ) )", "choosing": "( ( ( Max( ( DS / DS ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5978638148014273}, {"determining": "( DDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.250996015936255, "obj2": 0.6190511654225725}, {"determining": "( DDR / ( MDR + MRS ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( ( ( RCSe - CS ) - ( RCSe - CS ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.3207171314741036, "obj2": 0.5693949472407065}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),( DDR / ( FirstVNF_CPU + MRS ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( ARS * DDR ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR / ( RCSe - Min( ( ( RCSe - CS ) - ( RCSe - CS ) ) ,RRSe ) ) ),MUC ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2450199203187251, "obj2": 0.6263124328795859}, {"determining": "( DDR / ( FirstVNF_CPU * CRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}, {"determining": "( DDR / ( ( ( FirstVNF_Mem / PN ) * Max( FirstVNF_Mem,Min( FirstVNF_RAM ,MRS ) ) ) - ( Min( Min( FirstVNF_RAM_Server ,Max( PN,DDR ) ) ,FirstVNF_RAM ) / RRS ) ) )", "choosing": "( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) / ( RCSe - Min( ( ( RCSe - ( ( MLU * MUR ) / RRSe ) ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.36852589641434264, "obj2": 0.5492721382571777}, {"determining": "( DDR / Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( ( ( MUR - DS ) + ( DS - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MUC ) ) )", "obj1": 0.3784860557768924, "obj2": 0.531398988779163}, {"determining": "( DDR / Min( CRS ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) * RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7656340784518595}, {"determining": "( DDR / ( ACS / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( FirstVNF_CPU * ARS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( Const / ( Max( PN,Const ) / ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM / Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( DDR / ( FirstVNF_Mem / ( FirstVNF_CPU * Const ) ) ) )", "choosing": "( ( ( ( Max( MUR,Min( MUM ,MUC ) ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.26693227091633465, "obj2": 0.6024786654349189}, {"determining": "( DDR / ( DDR / ( ( FirstVNF_RAM * Const ) * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RCSe ,MUC ) ) ,RRSe ) ) ) + ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) + RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MUR ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6848597891623373}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6783284866695367}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6783284866695367}, {"determining": "( Const / ( FirstVNF_CPU * PN ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MLU ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( PN / ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / DS ) - Max( ( CS / MUC ),MUC ) ) / ( MUM - Min( ( ( MUR - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( ( FirstVNF_Mem_Server + Const ) / ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( Max( MUR,DS ) + ( DS - Min( ( ( RCSe - CS ) - ( MUM / MUC ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.28286852589641437, "obj2": 0.6004107739747645}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7778885385611277}], "28": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( DDR / ( ( PN * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / Min( RCSe ,Min( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( MRS / ( ( DDR / Max( FirstVNF_CPU,BR ) ) * MRS ) )", "choosing": "( ( ( RRSe / DS ) + ( DS - Min( ( ( RCSe * CS ) - Min( MUM ,CS ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( DDR / ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe / CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.21115537848605578, "obj2": 0.6675817452088548}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,MLU ) ) + MLU ) ) )", "obj1": 0.18127490039840638, "obj2": 0.703270458245065}, {"determining": "( DDR / ( ACS / MRS ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,MLU ) ) + DS ) ) )", "obj1": 0.18127490039840638, "obj2": 0.703270458245065}, {"determining": "( ( FirstVNF_CPU * MRS ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( DS - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.21713147410358566, "obj2": 0.6675439757844591}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( DDR / ( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( ( RCSe - CS ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1852589641434263, "obj2": 0.6954353777452255}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6783284866695367}, {"determining": "( DDR / Min( CRS ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) * RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7656340784518595}, {"determining": "( DDR / ( ACS / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( FirstVNF_CPU * ARS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( Const / ( Max( PN,Const ) / ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM / Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( DDR / ( ( FirstVNF_RAM * Const ) * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RCSe ,MUC ) ) ,RRSe ) ) ) + ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) + RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MUR ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6848597891623373}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6783284866695367}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6783284866695367}, {"determining": "( Const / ( FirstVNF_CPU * PN ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MLU ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( PN / ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / DS ) - Max( ( CS / MUC ),MUC ) ) / ( MUM - Min( ( ( MUR - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( DDR / ( ( FirstVNF_CPU * Const ) * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RCSe ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6848597891623373}, {"determining": "( DDR / ( DDR / ( ( FirstVNF_RAM * Const ) * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( RCSe ,MUC ) ) ,RRSe ) ) ) + ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) + RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MUR ) ) )", "obj1": 0.19322709163346613, "obj2": 0.6848597891623373}, {"determining": "( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) - ( MUM / MLU ) ) + MLU ) ) )", "obj1": 0.18127490039840638, "obj2": 0.703270458245065}, {"determining": "( DDR / Max( Min( FirstVNF_CPU ,MRS ),ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / Min( PN ,MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUR - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / Min( FirstVNF_CPU ,ARS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7656340784518595}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,( RCSe - CS ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6783284866695367}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( ( FirstVNF_CPU * Const ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( Min( ( Min( RCSe ,CS ) + Min( MUM ,MUC ) ) ,RRSe ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2051792828685259, "obj2": 0.6757334876392316}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( FirstVNF_CPU ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6783284866695367}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / Max( FirstVNF_CPU,ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( PN / ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / DS ) - Max( ( CS / MUC ),MUC ) ) / ( MUM - Min( ( ( MUR - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7277052681983127}, {"determining": "( DDR / ( DDR / BR ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6783284866695367}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6783284866695367}, {"determining": "( ( FirstVNF_RAM / AMS ) / ( PN * ( Max( MRS,( DDR - Max( Max( DDR,Min( BR ,MRS ) ),MRS ) ) ) / FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RCSe - Min( ( ( Min( MUM ,MUC ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.776852119343446}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * ( FirstVNF_RAM / PN ) ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( Min( ( MLU * MUC ) ,( RRSe - MUC ) ) - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6814429678805207}, {"determining": "( DDR / ( ( PN * ( DDR / ( ACS / MRS ) ) ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( ( PN * Const ) / MDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( ACS / BR ) )", "choosing": "( Max( ( MUR / DS ),MUC ) / ( RMSe - ( ( ( RCSe - CS ) - Min( MUM ,MLU ) ) + MLU ) ) )", "obj1": 0.18127490039840638, "obj2": 0.703270458245065}, {"determining": "( DDR / ( DDR / ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( ( RCSe - CS ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( Min( MUM ,MUC ) - CS ) ) ) )", "obj1": 0.1852589641434263, "obj2": 0.6954353777452255}, {"determining": "( Max( ( Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),( DDR / ( FirstVNF_CPU + MRS ) ) ),( Max( ( ( FirstVNF_Mem_Server + RRS ) / Max( DDR,ARS ) ),Max( Max( CRS,BR ),( FirstVNF_Mem_Server + ARS ) ) ) + ( ( Max( DDR,ARS ) * ( MRS + FirstVNF_Mem_Server ) ) + ( ( DDR + BR ) - ( FirstVNF_RAM + ARS ) ) ) ) ) + ( Max( ( ( ( FirstVNF_CPU_Server - MRS ) / ( PN - CRS ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_Mem ) ) ),( ( Min( FirstVNF_CPU ,ARS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / ( CRS * DDR ) ) ) ) - Max( ( ( ( MRS / FirstVNF_CPU_Server ) + Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( ACS - ARS ) + ( FirstVNF_RAM_Server - BR ) ) ),( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( MDR + BR ) ) * ( ( DDR + DDR ) + Max( Const,BR ) ) ) ) ) ),Min( Max( ( ( ( ( FirstVNF_CPU - MDR ) - Max( BR,CRS ) ) * Max( Max( ARS,Const ),( AMS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server * RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,AMS ) ) ) ),( ( Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * AMS ) ) + Max( Max( CRS,Const ),( ACS - CRS ) ) ) - ( Min( ( CRS / AMS ) ,( FirstVNF_RAM + ACS ) ) + ( Min( Const ,AMS ) / ( AMS - MRS ) ) ) ) ) ,( ( ( ( ( ARS * DDR ) * ( BR - Const ) ) - ( Max( PN,PN ) + ( FirstVNF_CPU_Server + MDR ) ) ) * Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server / AMS ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),( ACS * RRS ) ) ) ) + ( ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( ARS * DDR ),Max( FirstVNF_RAM,Const ) ) ) - Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ),( ( FirstVNF_RAM * Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) ) / Max( Max( ( Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( PN + ACS ) ) - ( ( AMS / AMS ) / ( FirstVNF_CPU - ARS ) ) ),Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_CPU - DDR ) ),( ( MDR - MRS ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),( ( ( Min( ( ( ARS / PN ) * ( FirstVNF_CPU - ARS ) ) ,( ( FirstVNF_Mem_Server * PN ) / ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( Min( Min( DDR ,DDR ) ,Min( ARS ,AMS ) ) - ( ( ARS + MDR ) + ( BR / MRS ) ) ) ) * ( Min( Min( ( AMS + PN ) ,Max( PN,DDR ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( AMS / DDR ) ) ) + ( Max( ( FirstVNF_RAM + PN ),( ARS * MDR ) ) / Min( Max( DDR,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) + Min( Max( Max( ( ( MRS - FirstVNF_Mem_Server ) * ( CRS + CRS ) ),Max( ( AMS - FirstVNF_CPU_Server ),( Const * FirstVNF_Mem_Server ) ) ),( Max( Min( FirstVNF_Mem_Server ,BR ),Min( FirstVNF_Mem_Server ,ARS ) ) - Min( Min( Const ,Const ) ,Max( MDR,FirstVNF_RAM ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + Max( ACS,CRS ) ) / Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) + Min( Max( ( FirstVNF_RAM / DDR ),( FirstVNF_RAM - MDR ) ) ,Min( ( ARS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( MUR / DS ) + ( RCSe - Min( ( RCSe - CS ) ,RMSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.20318725099601595, "obj2": 0.6783284866695367}, {"determining": "( PN / ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / DS ) - Max( ( CS / MUC ),MUC ) ) / ( MUM - Min( ( ( MUR - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7277052681983127}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,AMS ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( MUM * ( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( DDR / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( Max( ( RMSe / DS ),MUC ) / ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,MLU ) ) + MLU ) ) )", "obj1": 0.18127490039840638, "obj2": 0.703270458245065}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}], "29": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MUR / RCSe ) + MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( DDR / ( ( PN * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + MUC ) / Min( RCSe ,Min( Min( ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ,RRSe ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7807515225119657}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( MRS / ( ( DDR / Max( FirstVNF_CPU,BR ) ) * MRS ) )", "choosing": "( ( ( RRSe / DS ) + ( DS - Min( ( ( RCSe * CS ) - Min( MUM ,CS ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( DDR / ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe / CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( DDR / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / Min( CRS ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) * RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7656340784518595}, {"determining": "( DDR / ( ACS / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( FirstVNF_CPU * ARS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( Const / ( Max( PN,Const ) / ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM / Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( Const / ( FirstVNF_CPU * PN ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MLU ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( PN / ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / DS ) - Max( ( CS / MUC ),MUC ) ) / ( MUM - Min( ( ( MUR - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / Max( Min( FirstVNF_CPU ,MRS ),ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / Min( PN ,MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUR - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / Min( FirstVNF_CPU ,ARS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7656340784518595}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / Max( FirstVNF_CPU,ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( PN / ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / DS ) - Max( ( CS / MUC ),MUC ) ) / ( MUM - Min( ( ( MUR - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7277052681983127}, {"determining": "( DDR / ( ( PN * ( DDR / ( ACS / MRS ) ) ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( ( PN * Const ) / MDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( PN / ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / DS ) - Max( ( CS / MUC ),MUC ) ) / ( MUM - Min( ( ( MUR - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7277052681983127}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,AMS ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( MUM * ( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / Max( Min( FirstVNF_CPU ,MRS ),ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( RRSe / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( ARS / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / MUC ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7277052681983127}, {"determining": "( DDR / Max( Min( FirstVNF_CPU ,MRS ),CRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( MUR - CS ) - ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( ARS / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_RAM - Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe / CS ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( ( FirstVNF_CPU * MRS ) / ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( ACS * CRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( ( PN * ( DDR / ( ACS / MRS ) ) ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / Max( FirstVNF_CPU,ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7632247000864542}, {"determining": "( Max( FirstVNF_Mem,MRS ) / ( FirstVNF_CPU / FirstVNF_RAM ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( RRS / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( DDR / ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) )", "choosing": "( ( ( MUR * DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( DDR / ( ( PN * Const ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7582167082493108}, {"determining": "( ( DDR / Min( ( DDR / ( FirstVNF_CPU * Const ) ) ,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - ( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) / RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( MDR / ( MRS * PN ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( MUM - CS ) - Min( MUM ,( ( RCSe * CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7634597210791304}], "30": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( MRS / ( ( DDR / Max( FirstVNF_CPU,BR ) ) * MRS ) )", "choosing": "( ( ( RRSe / DS ) + ( DS - Min( ( ( RCSe * CS ) - Min( MUM ,CS ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( Const / ( FirstVNF_CPU * PN ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MLU ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / DS ) - Max( ( CS / MUC ),MUC ) ) / ( MUM - Min( ( ( MUR - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7277052681983127}, {"determining": "( PN / ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / DS ) - Max( ( CS / MUC ),MUC ) ) / ( MUM - Min( ( ( MUR - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7277052681983127}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,AMS ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( MUM * ( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( ARS / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / MUC ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Max( MUM,MUC ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7277052681983127}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_RAM - Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe / CS ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) )", "choosing": "( ( ( MUR * DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( ( DDR / Min( ( DDR / ( FirstVNF_CPU * Const ) ) ,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - ( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) / RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( MDR / ( MRS * PN ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( MUM - CS ) - Min( MUM ,( ( RCSe * CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_CPU + MRS ) )", "choosing": "( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( Max( RCSe,CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.199203187250996, "obj2": 0.6801502496228037}, {"determining": "( DDR / ( ( PN * Const ) / MDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7636516950452359}, {"determining": "( ( DDR / Max( ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,Max( ( MUR / MUC ),MUC ) ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7594243922945433}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_Mem / DDR ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) + MUC ) ) / ( MUM - ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.2410358565737052, "obj2": 0.6275121818135716}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) / MDR ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7636516950452359}, {"determining": "( DDR / ( Max( ( CRS + FirstVNF_CPU_Server ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Max( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7636516950452359}, {"determining": "( DDR / Max( FirstVNF_CPU,ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM / Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) )", "obj1": 0.4203187250996016, "obj2": 0.4987362065895277}, {"determining": "( DDR / Min( FirstVNF_CPU ,ARS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,DS ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( Const * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( RMSe ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( MDR / Max( ( PN * Const ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) ) ) / ( MUM - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7490890679478595}, {"determining": "( RRS / ( ( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - CS ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.398406374501992, "obj2": 0.5453686109199308}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / MLU ) * ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( Min( MUM ,MUC ) - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( DS - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( PN / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * MUC ) ) / ( MUM * Min( ( ( RCSe - CS ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,MDR ) ) / Max( ( ( DDR / Max( FirstVNF_CPU,ARS ) ) / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( RRSe / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) ) )", "obj1": 0.24701195219123506, "obj2": 0.6125865173862776}, {"determining": "( DDR / ( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe / CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( DDR / ( DDR / ( ( FirstVNF_RAM_Server * ( DDR / Min( FirstVNF_CPU ,MRS ) ) ) * Const ) ) )", "choosing": "( MUC / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.350597609561753, "obj2": 0.5471957614277965}, {"determining": "( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( DDR / ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) )", "choosing": "( ( ( MUR * DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7382474708775942}, {"determining": "( MRS / Max( Min( FirstVNF_CPU ,MRS ),ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7636516950452359}, {"determining": "( Const / ( Max( PN,Const ) / ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM / Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) )", "obj1": 0.41832669322709165, "obj2": 0.5058231351327689}, {"determining": "( DDR / Min( CRS ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) * RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1294820717131474, "obj2": 0.7575631829408769}, {"determining": "( Const / ( Max( PN,Const ) / ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR + DS ),MUC ) ) / ( MUM / Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) )", "obj1": 0.40836653386454186, "obj2": 0.5123180605629822}, {"determining": "( ( DDR - Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( FirstVNF_Mem_Server + Const ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe - CS ) - ( MUM * MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.300796812749004, "obj2": 0.5850134594874423}, {"determining": "( DDR / ( FirstVNF_Mem * FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUR,DS ) + ( DS / Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / ( RMSe - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.30677290836653387, "obj2": 0.5812953696747216}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / ( RMSe - Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.3107569721115538, "obj2": 0.5709285720096687}, {"determining": "( ( FirstVNF_CPU * MRS ) / ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Max( ( MUR / MUC ),MUC ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5610692081700087}, {"determining": "( Const / ( FirstVNF_CPU * PN ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( DDR / Max( Min( FirstVNF_CPU ,MRS ),CRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( MUR - CS ) - ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7190323047699879}, {"determining": "( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / ( RMSe - Min( ( ( RCSe - DS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.31673306772908366, "obj2": 0.5700797650762637}], "31": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( MRS / ( ( DDR / Max( FirstVNF_CPU,BR ) ) * MRS ) )", "choosing": "( ( ( RRSe / DS ) + ( DS - Min( ( ( RCSe * CS ) - Min( MUM ,CS ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( Const / ( FirstVNF_CPU * PN ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MLU ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,AMS ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( MUM * ( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),( FirstVNF_RAM - Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe / CS ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) )", "choosing": "( ( ( MUR * DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( ( DDR / Min( ( DDR / ( FirstVNF_CPU * Const ) ) ,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - ( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) / RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( MDR / ( MRS * PN ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( MUM - CS ) - Min( MUM ,( ( RCSe * CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( ( PN * Const ) / MDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7636516950452359}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) / MDR ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7636516950452359}, {"determining": "( DDR / ( Max( ( CRS + FirstVNF_CPU_Server ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Max( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7636516950452359}, {"determining": "( DDR / Min( FirstVNF_CPU ,ARS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,DS ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( Const * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( RMSe ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( MDR / Max( ( PN * Const ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) ) ) / ( MUM - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7490890679478595}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / MLU ) * ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( Min( MUM ,MUC ) - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( DS - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( PN / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * MUC ) ) / ( MUM * Min( ( ( RCSe - CS ) - Min( MUM ,( RCSe * CS ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( DDR / ( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe / CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7397297873914828}, {"determining": "( MRS / Max( Min( FirstVNF_CPU ,MRS ),ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7636516950452359}, {"determining": "( ( DDR - Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( ARS / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( Min( RCSe ,CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( Max( ( MUR / DS ),Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( PN / ( FirstVNF_CPU * ( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR + Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( Max( MUM,MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( Max( ( CRS + RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / Min( FirstVNF_CPU ,ARS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( Const / ( Max( CRS,Const ) / ARS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - ( ( ( RCSe - CS ) - Min( RRSe ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) * RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7435850650967195}, {"determining": "( Max( FirstVNF_CPU,( DDR / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - ( MUM - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( DDR / ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( ( ( CRS + RRS ) * Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) )", "choosing": "( ( ( MLU / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7636516950452359}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) ) / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( MRS / Max( Min( FirstVNF_CPU ,MRS ),ARS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7636516950452359}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( FirstVNF_RAM / ( ( FirstVNF_CPU * MRS ) / ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}], "32": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( Max( MUR,DS ) + ( DS - Min( Max( ( RCSe - CS ),( MUM * MUC ) ) ,RRSe ) ) ) / Max( RMSe,Min( ( ( RCSe - CS ) - ( MUM * MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( MRS / ( ( DDR / Max( FirstVNF_CPU,BR ) ) * MRS ) )", "choosing": "( ( ( RRSe / DS ) + ( DS - Min( ( ( RCSe * CS ) - Min( MUM ,CS ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7812196893972672}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( ( DDR / Min( ( DDR / ( FirstVNF_CPU * Const ) ) ,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - ( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) / RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( MDR / ( MRS * PN ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( MUM - CS ) - Min( MUM ,( ( RCSe * CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / Min( FirstVNF_CPU ,ARS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,DS ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( Const * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( RMSe ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( MDR / Max( ( PN * Const ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) ) ) / ( MUM - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7490890679478595}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / MLU ) * ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( Min( MUM ,MUC ) - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( DS - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR - Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( ARS / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( Min( RCSe ,CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( Max( ( MUR / DS ),Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( Max( FirstVNF_CPU,( DDR / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - ( MUM - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( DDR / ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( FirstVNF_RAM / ( ( FirstVNF_CPU * MRS ) / ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( MDR / ( ( PN * Const ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( FirstVNF_RAM / ( ( Const * MRS ) / ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( Max( RCSe,CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7490890679478595}, {"determining": "( DDR / ( FirstVNF_RAM / ( ( FirstVNF_CPU * MRS ) / ( PN / ( ( MDR / ( FirstVNF_CPU * Const ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - MUC ) - Min( RRSe ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( Max( FirstVNF_CPU,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( ( MUM * MUC ) ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7522866615818858}, {"determining": "( Const / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( CS - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / DDR ),Max( FirstVNF_RAM,Const ) ) ) + Const ) / MDR ) )", "choosing": "( ( ( MUR / MUC ) + ( ( MUR / DS ) / DS ) ) / ( MUM - Max( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( DDR / ( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / MUM ) ,MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.11952191235059761, "obj2": 0.7702828950866755}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) / MDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.12151394422310757, "obj2": 0.768749464173661}], "33": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR / Min( ( DDR / ( FirstVNF_CPU * Const ) ) ,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - ( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) / RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( MDR / ( MRS * PN ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( MUM - CS ) - Min( MUM ,( ( RCSe * CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( Const * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( RMSe ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( MDR / Max( ( PN * Const ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) ) ) / ( MUM - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7490890679478595}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / MLU ) * ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( Min( MUM ,MUC ) - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR - Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ARS / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( Min( RCSe ,CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( Max( FirstVNF_CPU,( DDR / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - ( MUM - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( FirstVNF_RAM / ( ( Const * MRS ) / ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( Max( RCSe,CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7490890679478595}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( Max( FirstVNF_CPU,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( ( MUM * MUC ) ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( Const / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( CS - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / DDR ),Max( FirstVNF_RAM,Const ) ) ) + Const ) / MDR ) )", "choosing": "( ( ( MUR / MUC ) + ( ( MUR / DS ) / DS ) ) / ( MUM - Max( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( Max( FirstVNF_CPU,BR ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_RAM / ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7139411136551705}, {"determining": "( DDR / ( FirstVNF_CPU / DDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU - CRS ) ) )", "choosing": "( ( ( ( ( RRSe + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.15737051792828685, "obj2": 0.7304200409630572}, {"determining": "( DDR / ( DDR / CRS ) )", "choosing": "( ( ( MUR / CS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) * Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( MUC - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( ( PN * Const ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7682164156946504}, {"determining": "( DDR / ( ( DDR / ( FirstVNF_CPU / MRS ) ) / DDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7267507267200366}, {"determining": "( FirstVNF_CPU_Server / ( FirstVNF_RAM / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) / Min( MUM ,MUC ) ) ) )", "obj1": 0.14342629482071714, "obj2": 0.7414804164537556}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( ( RMSe / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - MUC ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11952191235059761, "obj2": 0.769796991745631}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( PN / ( FirstVNF_CPU * ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( DDR / ( FirstVNF_RAM / ( FirstVNF_Mem_Server + Const ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7748468849205953}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( ( MUR / DS ) + Min( ( MUR / DS ) ,MUC ) ) / ( MUM - ( ( DS - CS ) - Min( ( MUR / DS ) ,MUC ) ) ) )", "obj1": 0.16533864541832669, "obj2": 0.7224979275530451}, {"determining": "( DDR / ( ( ( ( DDR / ( FirstVNF_CPU - CRS ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) / MDR ) )", "choosing": "( ( ( MUR / DS ) + Max( ( MUR / ( ( RCSe - RMSe ) - Min( ( MUR / DS ) ,MUC ) ) ),MUC ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7518536672861359}, {"determining": "( ( DDR / Max( DDR,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - MUM ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7392691532136432}, {"determining": "( ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - ( RCSe - CS ) ) ,RRSe ) ) )", "obj1": 0.17928286852589642, "obj2": 0.7218425160389512}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU * MRS ) / ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( MUR / DS ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7789382913295891}, {"determining": "( DDR / ( FirstVNF_RAM / ( ( FirstVNF_CPU * MRS ) / ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7490890679478595}], "34": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Max( FirstVNF_CPU,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( Min( ( RCSe - CS ) ,Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR / Min( ( DDR / ( FirstVNF_CPU * Const ) ) ,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - ( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) / RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( MDR / ( MRS * PN ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( MUM - CS ) - Min( MUM ,( ( RCSe * CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( MDR / Max( ( PN * Const ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) ) ) / ( MUM - Min( Min( ( RCSe - CS ) ,Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7490890679478595}, {"determining": "( Max( MRS,( FirstVNF_RAM_Server * DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / MLU ) * ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( Min( MUM ,MUC ) - Min( ( ( RCSe - CS ) - ( MUM + MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( DDR / ( FirstVNF_CPU * Const ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR - Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ARS / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( Min( RCSe ,CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( FirstVNF_RAM / ( ( Const * MRS ) / ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( Max( RCSe,CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7490890679478595}, {"determining": "( Const / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( CS - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / DDR ),Max( FirstVNF_RAM,Const ) ) ) + Const ) / MDR ) )", "choosing": "( ( ( MUR / MUC ) + ( ( MUR / DS ) / DS ) ) / ( MUM - Max( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_CPU / DDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( DDR / CRS ) )", "choosing": "( ( ( MUR / CS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) * Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( ( RMSe / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU * ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_RAM / ( ( FirstVNF_CPU * MRS ) / ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7490890679478595}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Const ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( Const ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_CPU / MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7441505136101094}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / MUR ) + Max( ( MUR / DS ),MLU ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( ACS,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) + Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + ( ( MUR / DS ) / MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - MUM ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7501044023665002}, {"determining": "( Min( PN ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Max( FirstVNF_CPU,MRS ) ) ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( RCSe / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7655099264233337}, {"determining": "( ARS / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - RRSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7490890679478595}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUM / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) / MDR ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}], "35": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( Const / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( CS - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / DDR ),Max( FirstVNF_RAM,Const ) ) ) + Const ) / MDR ) )", "choosing": "( ( ( MUR / MUC ) + ( ( MUR / DS ) / DS ) ) / ( MUM - Max( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( FirstVNF_CPU / DDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / MUR ) + Max( ( MUR / DS ),MLU ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( ACS,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) + Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + ( ( MUR / DS ) / MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( Min( PN ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Max( FirstVNF_CPU,MRS ) ) ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( RCSe / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7655099264233337}, {"determining": "( ARS / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - RRSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUM / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) / MDR ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7397410097510846}, {"determining": "( FirstVNF_Mem / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - ( MUM - MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) + RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( Max( FirstVNF_CPU,ACS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,CS ) ) ) / DS ) + ( ( MUR / DS ) / MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,( MUM * MUC ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUM ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) ) / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( DS ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.14143426294820718, "obj2": 0.7423413939769739}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( PN,DDR ) ) / ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( MUR - CS ) - Min( RCSe ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7395720497397419}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( FirstVNF_Mem / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),RMSe ) ) / ( MUM + Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( Const ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RRSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7431831278550394}, {"determining": "( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( Const ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - CS ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( ( MUM * MUC ) - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7395720497397419}, {"determining": "( ( DDR / Max( DDR,DDR ) ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),Min( ( MLU * MUR ) ,( RRSe * MUC ) ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / MUR ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( MUM * Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / ARS ),Max( FirstVNF_RAM,Const ) ) ) * Const ) / MDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ARS / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7458195950299824}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ARS / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM + Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( DDR,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) + Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}], "36": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( Const / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( CS - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / DDR ),Max( FirstVNF_RAM,Const ) ) ) + Const ) / MDR ) )", "choosing": "( ( ( MUR / MUC ) + ( ( MUR / DS ) / DS ) ) / ( MUM - Max( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ),RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( FirstVNF_CPU / DDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / MUR ) + Max( ( MUR / DS ),MLU ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( ACS,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) + Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + ( ( MUR / DS ) / MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( Min( PN ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ARS / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - RRSe ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( DDR / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUM / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) / MDR ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( FirstVNF_Mem / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - ( MUM - MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) + RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( Max( FirstVNF_CPU,ACS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,CS ) ) ) / DS ) + ( ( MUR / DS ) / MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,( MUM * MUC ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUM ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) ) / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( FirstVNF_Mem / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),RMSe ) ) / ( MUM + Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( DDR,DDR ) ) / Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),Min( ( MLU * MUR ) ,( RRSe * MUC ) ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / MUR ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( MUM * Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( FirstVNF_CPU,Const ) ) / Max( ( MDR / ARS ),Max( FirstVNF_RAM,Const ) ) ) * Const ) / MDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ARS / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM + Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( ( DDR / Max( DDR,DDR ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) + Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,( MUM * MUC ) ) ) )", "obj1": 0.1254980079681275, "obj2": 0.756495524572533}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( MRS / ( FirstVNF_CPU * FirstVNF_RAM ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( DS * CS ) ) ) ) ,MUR ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7631114586809356}, {"determining": "( DDR / ( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * RRSe ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7616481923103291}, {"determining": "( ( MRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) / Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}], "37": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUM / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( MRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) / Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( ACS,Const ) ) / Max( ( MDR / ARS ),Max( FirstVNF_RAM,Const ) ) ) * Const ) / MDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) - MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( RCSe * CS ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7460105579558987}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_RAM / PN ) ) )", "choosing": "( Min( ( MLU * MUR ) ,( RRSe * MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.3665338645418327, "obj2": 0.5308011034698082}, {"determining": "( DDR / ( ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) - CRS ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * DS ) ) / ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) )", "obj1": 0.47808764940239046, "obj2": 0.44967042542491287}, {"determining": "( DDR / ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13147410358565736, "obj2": 0.7544123156116866}, {"determining": "( PN / ( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / MUR ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7123433205824202}, {"determining": "( PN / ( Max( ( ( DDR / Max( DDR,DDR ) ) / Max( DDR,FirstVNF_CPU_Server ) ),ACS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( MUR / DS ) ) ) / DS ) + ( ( MUR / DS ) / MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,( MUM * MUC ) ) ) )", "obj1": 0.4681274900398406, "obj2": 0.47367771287015886}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.16135458167330677, "obj2": 0.7238631061242232}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( ( DDR / Min( ACS ,DDR ) ) / Min( BR ,MRS ) )", "choosing": "( ( ( MUR - DS ) + Max( RCSe,Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( DDR / ( ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe - MUC ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.2848605577689243, "obj2": 0.5849744647670425}, {"determining": "( PN / ( FirstVNF_RAM_Server * DDR ) )", "choosing": "( ( ( MUR / DS ) * DS ) / Min( MUM ,Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.3247011952191235, "obj2": 0.549006900496994}, {"determining": "( ( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) ) / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( ( PN / ( FirstVNF_CPU * PN ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( Max( ( RCSe - CS ),Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7554338462712041}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "Max( ( ( ( ( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_CPU / DDR ) ) + ( Min( MDR ,FirstVNF_CPU ) / Min( PN ,FirstVNF_CPU ) ) ) * Max( Min( Max( CRS,FirstVNF_RAM_Server ) ,Min( FirstVNF_CPU_Server ,BR ) ),( ( PN / FirstVNF_RAM ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) * Min( ( Max( ( BR - MRS ),( ACS / FirstVNF_CPU_Server ) ) * ( ( MDR + MRS ) + ( Const * FirstVNF_RAM ) ) ) ,( ( ( PN - ARS ) - ( CRS * FirstVNF_CPU ) ) / ( ( MRS * FirstVNF_CPU_Server ) - ( FirstVNF_CPU / CRS ) ) ) ) ) * Min( ( Max( ( ( AMS / CRS ) / ( MDR - ACS ) ),( ( BR - FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem_Server ) ) ) / Min( ( ( MDR / ACS ) / Max( MRS,FirstVNF_Mem_Server ) ) ,Min( ( RRS / ACS ) ,( DDR - DDR ) ) ) ) ,( ( ( ( FirstVNF_RAM - MDR ) - ( CRS + DDR ) ) - Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( FirstVNF_RAM + RRS ) ) ) + Max( ( ( MDR / BR ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ),( Min( ACS ,FirstVNF_CPU ) - ( BR - FirstVNF_Mem_Server ) ) ) ) ) ) * ( Max( Min( ( ( ( Const + DDR ) + Min( RRS ,MDR ) ) * ( Min( FirstVNF_CPU_Server ,RRS ) - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ,Min( ( Max( Const,FirstVNF_Mem ) / ( CRS * PN ) ) ,( ( FirstVNF_Mem / AMS ) + ( ACS + Const ) ) ) ),( Max( ( ( Const * Const ) + ( RRS + PN ) ),Max( ( AMS - FirstVNF_Mem_Server ),Max( BR,AMS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * ACS ) ) + Max( ( RRS + FirstVNF_RAM_Server ),( BR - Const ) ) ) ) ) - Min( ( Max( ( ( FirstVNF_RAM_Server + ARS ) + Min( FirstVNF_Mem_Server ,DDR ) ),( ( BR * DDR ) - ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) * ( Max( ( ACS + DDR ),Max( ARS,CRS ) ) + Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( FirstVNF_RAM_Server / ACS ) ) ) ) ,( ( ( ( AMS / FirstVNF_RAM ) + ( RRS * RRS ) ) / Max( Min( CRS ,RRS ),( FirstVNF_Mem_Server * DDR ) ) ) - ( ( ( BR / FirstVNF_CPU_Server ) * ( FirstVNF_Mem - ACS ) ) - ( ( FirstVNF_Mem + AMS ) - ( CRS - FirstVNF_CPU_Server ) ) ) ) ) ) ),( ( ( Min( Max( ( Max( ARS,DDR ) + Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ),( ( RRS - MRS ) / ( AMS - FirstVNF_Mem_Server ) ) ) ,( ( ( BR * FirstVNF_RAM ) - ( RRS / RRS ) ) * ( ( ARS / MRS ) / ( MDR - FirstVNF_Mem_Server ) ) ) ) - ( Min( ( ( DDR * ARS ) * ( FirstVNF_Mem - MDR ) ) ,( Max( MRS,FirstVNF_Mem_Server ) - Max( MRS,FirstVNF_RAM ) ) ) - Max( ( ( ARS - Const ) - Max( CRS,PN ) ),( ( DDR - MRS ) - ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) * Min( ( ( Min( ( MDR / RRS ) ,( FirstVNF_Mem_Server - RRS ) ) + ( Max( Const,ARS ) * ( FirstVNF_Mem + DDR ) ) ) / Max( ( ( FirstVNF_CPU / AMS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ),Min( ( CRS * FirstVNF_RAM ) ,( PN * CRS ) ) ) ) ,( ( ( ( MDR - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ( Min( Const ,RRS ) + ( Const - AMS ) ) ) + Max( ( Min( FirstVNF_Mem_Server ,AMS ) * Min( MRS ,ACS ) ),Max( ( ARS - FirstVNF_CPU ),Min( CRS ,FirstVNF_CPU_Server ) ) ) ) ) ) - Min( Min( ( ( Min( Min( CRS ,FirstVNF_Mem_Server ) ,Min( ARS ,CRS ) ) * ( Min( AMS ,ACS ) * ( ARS / MDR ) ) ) - Max( Min( ( PN / MDR ) ,( MRS * MDR ) ),( ( CRS * Const ) / Min( CRS ,FirstVNF_CPU ) ) ) ) ,( Max( ( Max( CRS,PN ) / ( FirstVNF_RAM + AMS ) ),Min( Min( PN ,RRS ) ,( RRS / FirstVNF_Mem ) ) ) * Min( Min( ( Const * DDR ) ,( AMS - FirstVNF_CPU_Server ) ) ,( ( Const - FirstVNF_Mem_Server ) * ( RRS * Const ) ) ) ) ) ,( Max( Min( ( ( RRS / ARS ) + ( FirstVNF_CPU_Server - BR ) ) ,( ( Const + Const ) - Min( FirstVNF_RAM_Server ,CRS ) ) ),( ( ( PN / Const ) - ( DDR + MRS ) ) * Max( ( CRS * FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) - ( Max( Min( ( MRS / FirstVNF_Mem ) ,( FirstVNF_CPU_Server / DDR ) ),Max( ( MRS - ARS ),( ACS * MDR ) ) ) * ( ( Min( FirstVNF_Mem_Server ,ACS ) / Min( ACS ,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_CPU_Server - BR ) * Max( BR,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "Max( ( RMSe / Min( DS ,( MUM / RCSe ) ) ),( MUR / ( ( ( ( ( ( RRSe - MUR ) * DS ) * RRSe ) / MUC ) / ( CS / MUR ) ) / DS ) ) )", "obj1": 0.9940239043824701, "obj2": 0.00569591745168997}, {"determining": "( ( ARS / PN ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),Min( ( MLU * MUR ) ,( RRSe * MUC ) ) ) ) / ( MLU - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.737755148460351}, {"determining": "( PN / ( ( DDR / ( FirstVNF_RAM / DDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUR / DS ) ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RRSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,( MUM * MUC ) ) ) )", "obj1": 0.17729083665338646, "obj2": 0.697297666743943}, {"determining": "( DDR / ( ( DDR / Max( FirstVNF_RAM_Server,DDR ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) * RRSe ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.8824701195219123, "obj2": 0.10916585943143972}, {"determining": "( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,Max( PN,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( MUR * DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.7266690923778758}, {"determining": "( BR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.448207171314741, "obj2": 0.48884468381550283}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) + Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + ( ( MUR / DS ) / MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7594942578442612}, {"determining": "( PN * ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / MUR ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.7123433205824202}, {"determining": "( DDR / ( FirstVNF_CPU / DDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) + DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.20119521912350596, "obj2": 0.6871698163810828}, {"determining": "( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( MUM - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7349241437203912}, {"determining": "( DDR / ( ARS / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) + ( ( MUR / DS ) * DS ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.32270916334661354, "obj2": 0.5562228630564034}], "38": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUM / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( MRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) / Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( ACS,Const ) ) / Max( ( MDR / ARS ),Max( FirstVNF_RAM,Const ) ) ) * Const ) / MDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) - MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( RCSe * CS ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7460105579558987}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( ( DDR / Min( ACS ,DDR ) ) / Min( BR ,MRS ) )", "choosing": "( ( ( MUR - DS ) + Max( RCSe,Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) ) / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( ARS / PN ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),Min( ( MLU * MUR ) ,( RRSe * MUC ) ) ) ) / ( MLU - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.737755148460351}, {"determining": "( PN / ( ( DDR / ( FirstVNF_RAM / DDR ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUR / DS ) ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RRSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,( MUM * MUC ) ) ) )", "obj1": 0.17729083665338646, "obj2": 0.697297666743943}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) + Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + ( ( MUR / DS ) / MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7594942578442612}, {"determining": "( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( MUM - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7349241437203912}, {"determining": "( DDR / Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( MUR - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( ( DDR / ( FirstVNF_RAM / DDR ) ) * ( ACS * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe * CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUR / DS ) ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,( MUM * MUC ) ) ) )", "obj1": 0.17330677290836655, "obj2": 0.6996147579440888}, {"determining": "( DDR / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUR / DS ) ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,( MUM * MUC ) ) ) )", "obj1": 0.17729083665338646, "obj2": 0.697297666743943}, {"determining": "( ( FirstVNF_RAM / PN ) - Max( DDR,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),Min( ( MLU * MUR ) ,( RRSe * MUC ) ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1394422310756972, "obj2": 0.737755148460351}, {"determining": "( PN / ( ( DDR / ( PN / DDR ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUR / DS ) ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,( MUM * MUC ) ) ) )", "obj1": 0.17729083665338646, "obj2": 0.697297666743943}, {"determining": "( PN / ( ( DDR / ( MRS / DDR ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUR / DS ) ) + Max( ( MUC / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,( MUM * MUC ) ) ) )", "obj1": 0.17729083665338646, "obj2": 0.697297666743943}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( ( DDR / ( FirstVNF_RAM / DDR ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / ( MUR / DS ) ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,( MUM * MUC ) ) ) )", "obj1": 0.17729083665338646, "obj2": 0.697297666743943}, {"determining": "( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR + DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( MUM - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.15338645418326693, "obj2": 0.7349241437203912}, {"determining": "( ( DDR / Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.17131474103585656, "obj2": 0.708855711794619}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / Max( FirstVNF_CPU,( Max( FirstVNF_CPU,MRS ) * FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( MUC,MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( MUM * Min( MUM ,( RCSe * MUC ) ) ) ) ,RRSe ) ) )", "obj1": 0.1593625498007968, "obj2": 0.7181932100922483}, {"determining": "( PN / ( FirstVNF_RAM_Server + DDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUM + Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN * ( PN / ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( MUR / MUR ) + Max( ( MUR / DS ),MUC ) ) / Max( MUM,Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1693227091633466, "obj2": 0.7170091773529531}, {"determining": "( PN * ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / MUR ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUM ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1553784860557769, "obj2": 0.725508813532658}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( PN / ( BR * FirstVNF_CPU_Server ) ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),Max( ( MUR / DS ),MUC ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( MLU - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( BR * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUR ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( ( DDR / Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),MRS ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / ( RCSe * CS ) ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RRSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7364285151741453}, {"determining": "( PN / ( FirstVNF_RAM_Server * DDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / ( RCSe * CS ) ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RMSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RRSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.14940239043824702, "obj2": 0.7364285151741453}, {"determining": "( BR / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RMSe - MUR ) - Max( MUM,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( RCSe * CS ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13545816733067728, "obj2": 0.7460105579558987}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( ( DDR / ( FirstVNF_CPU * Const ) ) / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + ( RCSe - MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7537776879951139}, {"determining": "( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,Max( PN,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( ( PN / ( BR * FirstVNF_CPU ) ) / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,( RCSe - MUC ) ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( CS - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( FirstVNF_CPU_Server / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / MUR ) + ( ( MUR / DS ) - MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( ARS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) / MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}], "39": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUM / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( MRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) / Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( DDR / ( ( ( Max( Max( CRS,RRS ),Max( ACS,Const ) ) / Max( ( MDR / ARS ),Max( FirstVNF_RAM,Const ) ) ) * Const ) / MDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) - MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( ( DDR / Min( ACS ,DDR ) ) / Min( BR ,MRS ) )", "choosing": "( ( ( MUR - DS ) + Max( RCSe,Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,MRS ) ) / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( DDR / Min( ( DDR / ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) + Const ) ) ) ,MRS ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,RRSe ) ) ) / DS ) + ( ( MUR / DS ) / MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,Min( MUM ,( RCSe * CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.12151394422310757, "obj2": 0.7594942578442612}, {"determining": "( DDR / Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( MUR - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( FirstVNF_RAM_Server + DDR ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUM + Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( PN / ( BR * FirstVNF_CPU_Server ) ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),Max( ( MUR / DS ),MUC ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( MLU - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( BR * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUR ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( BR / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RMSe - MUR ) - Max( MUM,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( ( DDR / ( FirstVNF_CPU * Const ) ) / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + ( RCSe - MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7537776879951139}, {"determining": "( ( DDR / Max( ( DDR / ( FirstVNF_CPU * Const ) ),DDR ) ) / Min( FirstVNF_CPU ,Max( PN,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( ( PN / ( BR * FirstVNF_CPU ) ) / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,( RCSe - MUC ) ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( CS - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( FirstVNF_CPU_Server / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / MUR ) + ( ( MUR / DS ) - MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( ARS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) / MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( ( PN / ( BR * MDR ) ) / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,( RCSe - MUC ) ) ) ) / DS ) + Max( ( MUR / DS ),MUM ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7498180797056724}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUR ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,Min( ( RCSe - MUR ) ,Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( PN / ( BR * FirstVNF_CPU_Server ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + ( RCSe - MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7537776879951139}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( MDR * ( PN / ( BR * FirstVNF_RAM_Server ) ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MLU ,MUC ) ) ,MUC ) ) ) / DS ) + ( RCSe - MUC ) ) / ( MUM - ( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) - RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7537776879951139}, {"determining": "( PN / ( FirstVNF_CPU + ( DDR - ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( MUR / DS ),MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - ( MUM + MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( DDR / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( Min( RCSe ,RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN * ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( MUR / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + ( RCSe - MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1254980079681275, "obj2": 0.7537776879951139}, {"determining": "( PN / Max( FirstVNF_CPU,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( Min( RCSe ,MUR ) - Min( MLU ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( DDR / ( ACS * AMS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - ( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) * RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( ( DDR / ( FirstVNF_RAM / DDR ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}], "40": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUM / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( MRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) / Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Min( ACS ,DDR ) ) / Min( BR ,MRS ) )", "choosing": "( ( ( MUR - DS ) + Max( RCSe,Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( MLU - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( BR / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RMSe - MUR ) - Max( MUM,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUR ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,Min( ( RCSe - MUR ) ,Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU + ( DDR - ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( MUR / DS ),MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - ( MUM + MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( DDR / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( Min( RCSe ,RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / Max( FirstVNF_CPU,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( Min( RCSe ,MUR ) - Min( MLU ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( DDR / ( ACS * AMS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - ( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) * RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( ( DDR / ( FirstVNF_RAM / DDR ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( ( DDR / ( FirstVNF_CPU * Const ) ) / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( PN / ( BR * FirstVNF_CPU_Server ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - ( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) - RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( FirstVNF_CPU_Server / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( Max( FirstVNF_RAM,Const ) * ( DDR / ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( MUR / DS ),MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,( MUR / DS ) ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( ARS / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( CS ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( MUR / DS ),MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / Max( FirstVNF_CPU,( Max( FirstVNF_RAM,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Max( MUM,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUR ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( PN / ( BR * FirstVNF_CPU_Server ) ) ) ) ) / ( PN / Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MLU ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( MDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RMSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN / ( BR * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( Min( MUM ,Max( RCSe,CS ) ) ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU / ( PN / ( BR * FirstVNF_RAM_Server ) ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,MUR ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( DDR / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( BR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( ( DDR / ( FirstVNF_CPU / Const ) ) / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM + Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( BR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( FirstVNF_CPU / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}], "41": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUM / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( RRSe ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( MRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) / Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Min( ACS ,DDR ) ) / Min( BR ,MRS ) )", "choosing": "( ( ( MUR - DS ) + Max( RCSe,Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( MLU - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( BR / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RMSe - MUR ) - Max( MUM,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUR ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,Min( ( RCSe - MUR ) ,Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU + ( DDR - ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( MUR / DS ),MUC ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - ( MUM + MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RMSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( DDR / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( Min( RCSe ,RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / Max( FirstVNF_CPU,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( Min( RCSe ,MUR ) - Min( MLU ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( DDR / ( ACS * AMS ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - ( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) * RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( ( DDR / ( FirstVNF_RAM / DDR ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - RMSe ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7663891726670281}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( ( DDR / ( FirstVNF_CPU * Const ) ) / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUR ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( MDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RMSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( DDR / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN / ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( PN * ( FirstVNF_CPU * ( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) ) ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( DDR / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( BR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( BR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,RCSe ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( MDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RMSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7712005781366876}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( DDR / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( ( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( ARS / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RMSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11553784860557768, "obj2": 0.7712005781366876}], "42": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( MRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) / Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( BR / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RMSe - MUR ) - Max( MUM,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUR ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,Min( ( RCSe - MUR ) ,Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / Max( FirstVNF_CPU,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( Min( RCSe ,MUR ) - Min( MLU ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( ( DDR / ( FirstVNF_CPU * Const ) ) / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUR ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( MDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RMSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( RCSe - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( DDR / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN / ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( PN * ( FirstVNF_CPU * ( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) ) ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( DDR / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( BR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,RRSe ) ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( BR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,RCSe ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( DDR / ( ACS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( ( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * ( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) ) ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,RCSe ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * ( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) ) ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) * MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR * ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( CS - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}], "43": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( MRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) / Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( BR / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RMSe - MUR ) - Max( MUM,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUR ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,Min( ( RCSe - MUR ) ,Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / Max( FirstVNF_CPU,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( Min( RCSe ,MUR ) - Min( MLU ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( ( DDR / ( FirstVNF_CPU * Const ) ) / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) * MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR * ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( CS - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( FirstVNF_CPU_Server / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( ( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU + CRS ) ) * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( Min( MUM ,( MUR / DS ) ) ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( PN * ( ( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( PN * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU + CRS ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( PN * ( ( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( MUR / DS ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( BR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( PN / ( FirstVNF_CPU * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( ( PN / ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) / ( RRS * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),RCSe ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Max( MUM,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( BR / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}, {"determining": "( PN / ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - ( MUM - Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.7874945167155843}], "44": [{"determining": "( ( FirstVNF_RAM / PN ) - ( DDR * FirstVNF_CPU_Server ) )", "choosing": "Min( ( MLU + MUR ) ,( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * CRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUC ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( MRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) / Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) + Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( BR / ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RMSe - MUR ) - Max( MUM,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUR ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,Min( ( RCSe - MUR ) ,Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / Max( FirstVNF_CPU,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( Min( RCSe ,MUR ) - Min( MLU ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( ( DDR / ( FirstVNF_CPU * Const ) ) / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( ( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) * MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.774837930735522}, {"determining": "( ( DDR / Max( FirstVNF_CPU,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( RCSe - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.13346613545816732, "obj2": 0.7510015090179318}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( ( MUR / DS ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.12350597609561753, "obj2": 0.7632526422222341}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( ( Max( DS,MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.12749003984063745, "obj2": 0.7539632602158605}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( ( DDR / ( FirstVNF_CPU * Const ) ) / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) * MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.774837930735522}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,Min( ( RCSe - MUR ) ,Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7724581214575811}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,Min( ( MUR / DS ) ,Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.13745019920318724, "obj2": 0.7454502190561754}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,Min( ( RCSe - MUR ) ,Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7724581214575811}, {"determining": "( ( DDR / Max( DDR,( ACS / ( Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( Max( ( MUR / DS ),MUC ) - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.14741035856573706, "obj2": 0.7328137927405787}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( ( FirstVNF_CPU * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * PN ) )", "choosing": "( ( ( ( ( ( ( MUR / DS ) / ( MUR / DS ) ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( MUR,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.1454183266932271, "obj2": 0.7361345584021984}, {"determining": "( PN / ( ( PN / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - DS ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.10956175298804781, "obj2": 0.7914653212367542}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) ,MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,( ( RCSe - CS ) - Min( MUM ,MUC ) ) ) ) ) ,RRSe ) ) )", "obj1": 0.23107569721115537, "obj2": 0.7146976955771305}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( ( ( Max( ( MUR / DS ),MUC ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - ( ( ( RCSe - MUC ) - Min( MUM ,MUC ) ) * MUC ) ) ) / DS ) + Max( ( MUR / DS ),MUC ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,Min( MUM ,Max( RCSe,CS ) ) ) ) ,RRSe ) ) )", "obj1": 0.11155378486055777, "obj2": 0.774837930735522}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( ( DDR / ( FirstVNF_CPU * Max( FirstVNF_CPU,MRS ) ) ) / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - ( RCSe - CS ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.19123505976095617, "obj2": 0.7234126931552964}, {"determining": "( PN / Max( FirstVNF_CPU,( Max( FirstVNF_CPU,MRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( Min( RCSe ,MUR ) - Min( MLU ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.14143426294820718, "obj2": 0.743171687073963}, {"determining": "( Max( FirstVNF_CPU,( DDR / ( FirstVNF_CPU * ( ( DDR / ( FirstVNF_CPU * Const ) ) / MRS ) ) ) ) / ( PN * Const ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( MDR - FirstVNF_CPU ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,Min( ( RCSe - MUR ) ,Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7724581214575811}, {"determining": "( PN / ( FirstVNF_CPU * ( DDR / ( ( FirstVNF_RAM_Server * Max( ( MDR / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,Const ) ) ) * Const ) ) ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,Min( ( RCSe - MUR ) ,Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11752988047808766, "obj2": 0.7724581214575811}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.25298804780876494, "obj2": 0.6931710282832476}, {"determining": "( ( DDR / Max( DDR,( ACS / ( FirstVNF_CPU - CRS ) ) ) ) / Min( FirstVNF_CPU ,MRS ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}, {"determining": "( ( PN * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR / DS ) + ( Min( ( ( RCSe - CS ) - Min( MUM ,MUC ) ) ,MLU ) - Min( ( ( RCSe - CS ) - Min( MUM ,( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) ) ,RRSe ) ) ) / ( MUM - Min( ( ( RCSe - CS ) - Min( MUM ,( MUR / DS ) ) ) ,RRSe ) ) )", "obj1": 0.11354581673306773, "obj2": 0.7745762053199414}]}