{"1": [{"determining": "( ( AMS - MRS ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( DS,MUR ) + ( RMSe * DS ) )", "obj1": 0.5266272189349113, "obj2": 0.36179853653279714}, {"determining": "( ( FirstVNF_RAM * CRS ) + ( ARS / ARS ) )", "choosing": "Max( ( MUC * RRSe ),( MUR + RCSe ) )", "obj1": 0.3826429980276134, "obj2": 0.4985384665955343}, {"determining": "( ( MRS * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,MRS ) ,( FirstVNF_RAM / BR ) )", "choosing": "( ( DS + RRSe ) / ( MUR / MLU ) )", "obj1": 0.5029585798816568, "obj2": 0.37569098003132}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * Max( PN,FirstVNF_Mem ) )", "choosing": "( Max( MUC,MLU ) + ( RRSe + DS ) )", "obj1": 0.49506903353057197, "obj2": 0.40837281859175417}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / ( RRS * ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( MLU / RCSe ) - Max( DS,MUM ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,( AMS + FirstVNF_CPU ) )", "choosing": "( ( MLU + MUM ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Const / PN ) )", "choosing": "( ( MUM * MUC ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( ARS / MDR ) )", "choosing": "Min( ( CS - RCSe ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * BR ),Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "Min( ( RMSe - MUC ) ,( RRSe * RMSe ) )", "obj1": 0.28205128205128205, "obj2": 0.5884141931978746}, {"determining": "( ( CRS + DDR ) - ( CRS / MRS ) )", "choosing": "Min( Max( RCSe,( ( ( RRSe * Max( Min( ( MUM - RMSe ) ,( MUR + RMSe ) ),MLU ) ) - Max( MLU,MLU ) ) / Min( RMSe ,CS ) ) ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - RMSe ) - ( DS * MUM ) )", "obj1": 0.23076923076923078, "obj2": 0.6408677802126818}, {"determining": "( ( CRS / FirstVNF_Mem ) * Max( RRS,FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - ( RCSe / MUR ) )", "obj1": 0.33530571992110453, "obj2": 0.539801925932531}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,MUM ) * Min( MUR ,CS ) ) )", "obj1": 0.5581854043392505, "obj2": 0.32291078025944214}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( FirstVNF_Mem_Server - Const ) ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 0.7061143984220908, "obj2": 0.2351054075876491}, {"determining": "( Min( ( Const / RRS ) ,Max( FirstVNF_Mem_Server,Min( DDR ,( ( ( BR * CRS ) / ARS ) / FirstVNF_RAM ) ) ) ) * ( ( DDR * MDR ) / ( MRS + Const ) ) )", "choosing": "( Min( ( RRSe - MUR ) ,( RRSe + MUC ) ) - ( Max( MUC,RCSe ) - ( RMSe * Max( MLU,( MUM - DS ) ) ) ) )", "obj1": 0.1794871794871795, "obj2": 0.7271207479952655}, {"determining": "Min( ( ( BR * BR ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,( ( FirstVNF_CPU * ARS ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RRSe - MUC ) ) / ( ( RCSe / MUC ) - ( RRSe - MUR ) ) )", "obj1": 0.388560157790927, "obj2": 0.491856085194155}, {"determining": "Max( Min( RRS ,( MDR / ACS ) ),( Const * ( BR * PN ) ) )", "choosing": "( Max( ( MUM + MUC ),( RCSe * MUR ) ) / ( Min( MUC ,DS ) / Min( DS ,RMSe ) ) )", "obj1": 0.3668639053254438, "obj2": 0.5128884250551069}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + ( ( ( MUR * DS ) - CS ) * Max( ( MUC / RMSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) )", "obj1": 0.28402366863905326, "obj2": 0.5710248104962692}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_Mem ) + ( PN + FirstVNF_Mem ) )", "choosing": "( ( CS / ( RRSe * CS ) ) / ( ( RCSe / RMSe ) - Max( CS,RRSe ) ) )", "obj1": 0.34122287968441817, "obj2": 0.5367148589119546}, {"determining": "( Max( Min( ARS ,FirstVNF_CPU_Server ),( BR / Const ) ) / Max( Max( FirstVNF_RAM_Server,BR ),( RRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,( CS * MUR ) ) - ( CS - RRSe ) )", "obj1": 0.38461538461538464, "obj2": 0.49416996859127393}, {"determining": "( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,RRS ) ) )", "choosing": "Max( ( ( MUR + DS ) / Max( RCSe,MUM ) ),Max( ( CS - DS ),( RRSe - MUC ) ) )", "obj1": 0.47534516765285995, "obj2": 0.4128848961216973}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( MDR - FirstVNF_RAM_Server ) * ( ARS + CRS ) ) )", "choosing": "Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.9191321499013807, "obj2": 0.06743178074933454}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.27613412228796846, "obj2": 0.5905911458679786}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ARS / Const ) - Max( ARS,FirstVNF_Mem ) ) ,Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( BR * FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,RCSe ) ,RMSe ) ) / ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU + ACS ) - MDR ) )", "choosing": "Min( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) ,( ( ( MLU * MLU ) - Max( DS,RRSe ) ) + ( Max( MUM,DS ) * Max( MLU,MLU ) ) ) )", "obj1": 0.31952662721893493, "obj2": 0.5511007440324186}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( Max( Const,CRS ) ,( AMS + FirstVNF_Mem_Server ) ) / Max( CRS,FirstVNF_RAM ) ),Min( ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM * DDR ) ),CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) / Max( RRS,PN ) ) ) )", "choosing": "( ( ( ( MLU - MLU ) + Min( RRSe ,MUC ) ) - ( Max( RMSe,MUM ) - ( MUC / MUC ) ) ) + ( ( ( ( CS / ( ( ( RCSe - RMSe ) * Max( RCSe,CS ) ) + ( MUM * RCSe ) ) ) / RCSe ) + ( MUC + RRSe ) ) / ( ( RRSe - CS ) * ( MUM + RMSe ) ) ) )", "obj1": 0.2564102564102564, "obj2": 0.6113878630219794}, {"determining": "Min( ( MDR * CRS ) ,( ( FirstVNF_RAM - ( FirstVNF_CPU - ( BR * Min( RRS ,MRS ) ) ) ) / ARS ) )", "choosing": "( ( MUC - Max( RRSe,RCSe ) ) + ( MUM * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server + MRS ) - Const ) ,( MDR - PN ) )", "choosing": "Max( ( RCSe - RCSe ),( Min( MUC ,MUC ) * ( Min( RCSe ,DS ) - MUM ) ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,MRS ) * ( BR / ( ( ( RRS - MRS ) - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * Max( DS,DS ) ) * ( CS / ( RRSe - MUM ) ) ) + Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - ( MUC + DS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( Min( CRS ,BR ),( RRS / ACS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * CRS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( Max( MLU,MUC ) * ( MUR / MUM ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5937543175282137}, {"determining": "( ( DDR + CRS ) - ( ( ( BR - BR ) - ( FirstVNF_RAM - BR ) ) / AMS ) )", "choosing": "Min( ( ( ( RRSe * RMSe ) * ( RCSe / MUC ) ) + ( Min( MUR ,MUR ) / ( RRSe * MLU ) ) ) ,Min( ( ( DS - MUM ) - Max( MUC,MLU ) ) ,( ( RRSe - RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.3727810650887574, "obj2": 0.501032620754479}, {"determining": "( ( Max( FirstVNF_RAM,CRS ) / Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( Min( MDR ,CRS ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( RCSe - RMSe ) * MUC ) ,( MUM / MUR ) ),( Max( MUC,Max( RMSe,CS ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21696252465483234, "obj2": 0.6535839931640866}], "2": [{"determining": "( ( MRS * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / ( RRS * ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( MLU / RCSe ) - Max( DS,MUM ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Const / PN ) )", "choosing": "( ( MUM * MUC ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( ARS / MDR ) )", "choosing": "Min( ( CS - RCSe ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( CRS / MRS ) )", "choosing": "Min( Max( RCSe,( ( ( RRSe * Max( Min( ( MUM - RMSe ) ,( MUR + RMSe ) ),MLU ) ) - Max( MLU,MLU ) ) / Min( RMSe ,CS ) ) ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - RMSe ) - ( DS * MUM ) )", "obj1": 0.23076923076923078, "obj2": 0.6408677802126818}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,MUM ) * Min( MUR ,CS ) ) )", "obj1": 0.5581854043392505, "obj2": 0.32291078025944214}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( FirstVNF_Mem_Server - Const ) ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 0.7061143984220908, "obj2": 0.2351054075876491}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + ( ( ( MUR * DS ) - CS ) * Max( ( MUC / RMSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( MDR - FirstVNF_RAM_Server ) * ( ARS + CRS ) ) )", "choosing": "Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.9191321499013807, "obj2": 0.06743178074933454}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.27613412228796846, "obj2": 0.5905911458679786}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ARS / Const ) - Max( ARS,FirstVNF_Mem ) ) ,Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( BR * FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,RCSe ) ,RMSe ) ) / ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( Max( Const,CRS ) ,( AMS + FirstVNF_Mem_Server ) ) / Max( CRS,FirstVNF_RAM ) ),Min( ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_RAM * DDR ) ),CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) / Max( RRS,PN ) ) ) )", "choosing": "( ( ( ( MLU - MLU ) + Min( RRSe ,MUC ) ) - ( Max( RMSe,MUM ) - ( MUC / MUC ) ) ) + ( ( ( ( CS / ( ( ( RCSe - RMSe ) * Max( RCSe,CS ) ) + ( MUM * RCSe ) ) ) / RCSe ) + ( MUC + RRSe ) ) / ( ( RRSe - CS ) * ( MUM + RMSe ) ) ) )", "obj1": 0.2564102564102564, "obj2": 0.6113878630219794}, {"determining": "Min( ( MDR * CRS ) ,( ( FirstVNF_RAM - ( FirstVNF_CPU - ( BR * Min( RRS ,MRS ) ) ) ) / ARS ) )", "choosing": "( ( MUC - Max( RRSe,RCSe ) ) + ( MUM * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server + MRS ) - Const ) ,( MDR - PN ) )", "choosing": "Max( ( RCSe - RCSe ),( Min( MUC ,MUC ) * ( Min( RCSe ,DS ) - MUM ) ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,MRS ) * ( BR / ( ( ( RRS - MRS ) - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * Max( DS,DS ) ) * ( CS / ( RRSe - MUM ) ) ) + Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - ( MUC + DS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( Min( CRS ,BR ),( RRS / ACS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * CRS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( Max( MLU,MUC ) * ( MUR / MUM ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5937543175282137}, {"determining": "( ( Max( FirstVNF_RAM,CRS ) / Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( Min( MDR ,CRS ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( RCSe - RMSe ) * MUC ) ,( MUM / MUR ) ),( Max( MUC,Max( RMSe,CS ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21696252465483234, "obj2": 0.6535839931640866}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * AMS )", "choosing": "( Max( MUC,MLU ) + ( ( ( MUM - DS ) / ( DS + DS ) ) + DS ) )", "obj1": 0.11637080867850098, "obj2": 0.7432779466702336}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / Max( PN,FirstVNF_Mem ) ) ) ,( BR / RRS ) )", "choosing": "( ( ( Max( MUC,MLU ) + ( RRSe + DS ) ) - DS ) / ( DS + DS ) )", "obj1": 0.903353057199211, "obj2": 0.07160593323225031}, {"determining": "Min( ( BR / RRS ) ,( AMS - ( FirstVNF_Mem_Server / ( ARS / CRS ) ) ) )", "choosing": "( ( MUM - DS ) / ( ( MUC / DS ) + ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( BR ,MDR ) + ( FirstVNF_Mem_Server * BR ) ) ) - ( AMS + AMS ) )", "choosing": "Max( ( Min( RMSe ,RMSe ) * Min( MUR ,DS ) ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ( DDR - PN ) ) + AMS ) )", "choosing": "Max( ( MLU * RCSe ),( ( ( RMSe * MUC ) / MUM ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,RRS ) - ( ( PN + Const ) * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUC / CS ) + Min( ( RCSe + MLU ) ,RCSe ) ) ,Max( ( RMSe - MLU ),( MUR * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + ( Max( PN,RRS ) - ( CRS * FirstVNF_CPU_Server ) ) ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe + MLU ),Min( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) ,Max( ( RMSe - MLU ),( MUR * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ( FirstVNF_CPU_Server + Const ) ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) ,RMSe ) ,DS ) )", "obj1": 0.4378698224852071, "obj2": 0.41999394613645913}, {"determining": "( ( Max( ( DDR / AMS ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( CRS / AMS ) + Max( ( FirstVNF_CPU_Server + Const ),( FirstVNF_CPU_Server * MRS ) ) ) )", "choosing": "( ( Min( ( ( Min( DS ,MUR ) / MUR ) * MUR ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe * RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.1794871794871795, "obj2": 0.6760604021055634}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.46942800788954636, "obj2": 0.3824750412236386}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),Max( AMS,PN ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 0.3057199211045365, "obj2": 0.544259851552805}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe * MLU ),( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * PN ) + ( FirstVNF_Mem_Server - AMS ) ) * Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( ( ( RRSe * MUC ) / MUM ) * Max( DS,Min( MLU ,Min( MLU ,MLU ) ) ) ) )", "obj1": 0.22287968441814596, "obj2": 0.6503097307480373}, {"determining": "( ( FirstVNF_CPU_Server * DDR ) + ( ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) - Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - RMSe ) * ( RRSe / Max( MUC,MUR ) ) )", "obj1": 0.9072978303747534, "obj2": 0.06879570905407519}, {"determining": "( ( ( RRS * PN ) + ( FirstVNF_Mem_Server - AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Const / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) * Max( DS,Min( MLU ,Min( MLU ,MLU ) ) ) )", "obj1": 0.4260355029585799, "obj2": 0.4273207262571331}, {"determining": "( ( ARS - ACS ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUR / MUM ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUR / MUM ),( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( ( PN + FirstVNF_Mem_Server ) / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( ( BR / FirstVNF_Mem ) - CRS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( Max( MLU,MUC ) * ( MUR / MUM ) ) ) / Min( ( ( MUM / CS ) / Max( DS,DS ) ) ,Min( ( ( Min( RCSe ,RCSe ) * ( RRSe + DS ) ) - CS ) ,MUC ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5937543175282137}, {"determining": "Max( ( ( CRS * FirstVNF_Mem ) + ( AMS / MDR ) ),( ( MDR - FirstVNF_RAM_Server ) * ( ARS + CRS ) ) )", "choosing": "Max( Max( DS,( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.4161735700197239, "obj2": 0.4330679383235531}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( MDR - FirstVNF_RAM_Server ) * ( ARS + CRS ) ) )", "choosing": "Min( ( DS * MUM ) ,( DS / DS ) )", "obj1": 0.9546351084812623, "obj2": 0.04005271612867329}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) / Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( ( DS + Max( RMSe,MLU ) ) ,( MUM + MUM ) )", "obj1": 0.6370808678500987, "obj2": 0.2603690368122842}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) + Max( CRS,( ( AMS - MRS ) * ( Const + BR ) ) ) )", "choosing": "( Max( ( ( MLU - DS ) / ( ( MUC * DS ) + DS ) ),RRSe ) + ( ( Min( DS ,CS ) + MLU ) + RMSe ) )", "obj1": 0.1203155818540434, "obj2": 0.7406324738702718}, {"determining": "( ( RRS * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MLU - DS ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.20118343195266272, "obj2": 0.6575196743934959}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21696252465483234, "obj2": 0.6535839931640866}, {"determining": "( Max( Max( FirstVNF_RAM_Server,BR ),( RRS * FirstVNF_RAM_Server ) ) - Max( ACS,ACS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( Min( MUR ,( CS * MUR ) ) - ( CS - RRSe ) ) )", "obj1": 0.7159763313609467, "obj2": 0.22901251069117334}, {"determining": "( Max( PN,RRS ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MLU - MLU ) + Min( RRSe ,MUC ) ) - Max( Max( RMSe,MUM ),( RMSe + RCSe ) ) ) + ( ( ( MUR * MUC ) + Min( MUC ,RRSe ) ) / ( ( RRSe - MUM ) * ( MUM + RMSe ) ) ) )", "obj1": 0.2564102564102564, "obj2": 0.6113878630219794}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.4970414201183432, "obj2": 0.33039534013875166}, {"determining": "( ( MDR - ACS ) / ( PN - MRS ) )", "choosing": "Max( ( MUR / MUM ),( RMSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( CRS,AMS ) / MDR ) ,( Max( ( ARS / PN ),( Max( FirstVNF_Mem,BR ) + FirstVNF_CPU ) ) / ACS ) )", "choosing": "( ( ( RCSe - CS ) / RMSe ) * Min( ( RMSe - MLU ) ,DS ) )", "obj1": 0.4358974358974359, "obj2": 0.4240193379474909}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( ( ( RRSe * MUC ) / MUM ) * Max( DS,Min( MLU ,Min( MLU ,MLU ) ) ) ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server * CRS ) ,( DDR - FirstVNF_CPU_Server ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) + ( Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) * Max( DS,Min( MLU ,Min( ( RCSe / RCSe ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( RRS,MDR ),( ( Const * MRS ) / ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,MUR ) * ( RMSe / ( ( RMSe * CS ) - Max( MUR,DS ) ) ) )", "obj1": 0.3037475345167653, "obj2": 0.5505633032334539}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server / MRS ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( Min( CRS ,BR ),( RRS / ACS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * CRS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / Min( CS ,Max( RCSe,CS ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.3116370808678501, "obj2": 0.5393547528134391}, {"determining": "Max( Max( Max( ( ( ACS * FirstVNF_CPU ) - ( FirstVNF_CPU - ACS ) ),( Min( BR ,MDR ) + ( FirstVNF_Mem_Server * BR ) ) ),AMS ),Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe + MUR ) ,( Min( RMSe ,RMSe ) * Min( MUR ,DS ) ) )", "obj1": 0.591715976331361, "obj2": 0.30723246847347635}, {"determining": "Max( ( ( ( ( FirstVNF_CPU - ARS ) / DDR ) * AMS ) * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( ( ( RCSe - MUR ) - RMSe ) - ( RCSe + RMSe ) ) )", "obj1": 0.358974358974359, "obj2": 0.45598167312361104}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( FirstVNF_Mem ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( ARS,FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( Min( Max( CS,MUC ) ,( RCSe / DS ) ),Min( Min( CS ,RCSe ) ,( MLU / CS ) ) ),Max( ( ( RRSe - Min( MUM ,( MUR + MLU ) ) ) / MUM ),( MLU / ( ( MLU * RMSe ) / ( Min( RMSe ,RRSe ) - CS ) ) ) ) )", "obj1": 0.7041420118343196, "obj2": 0.24387464360711777}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.378698224852071, "obj2": 0.45536858146053455}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( MDR - FirstVNF_RAM_Server ) * ( ARS + CRS ) ) )", "choosing": "Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.9191321499013807, "obj2": 0.06743178074933454}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.27613412228796846, "obj2": 0.5905911458679786}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * MUR ) )", "obj1": 0.717948717948718, "obj2": 0.11335947681891752}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( ( FirstVNF_RAM - Min( DDR ,Max( MDR,MDR ) ) ) ,( DDR - MDR ) )", "choosing": "Max( ( MUR + Max( CS,Min( Min( MUR ,( ( ( MUR + MUM ) / DS ) * RRSe ) ) ,Max( RRSe,MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( AMS / AMS ) - ( BR + ( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( ( FirstVNF_Mem_Server * ACS ),FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( MUC ,MUR ) / MUR ) ,Min( ( ( DS - ( MUM * CS ) ) / MUM ) ,MUM ) )", "obj1": 0.44970414201183434, "obj2": 0.3908472727704485}, {"determining": "( Max( RRS,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( MUR - MUR ) - ( MUC - RRSe ) )", "obj1": 0.252465483234714, "obj2": 0.6172259971225629}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 0.7731755424063116, "obj2": 0.089243169181287}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( ( RCSe - RCSe ),( Min( MUC ,MUC ) * ( Min( RCSe ,DS ) - MUM ) ) ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5695535736142027}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "Min( Max( Min( ( MUM + MLU ) ,( MUR * RRSe ) ),( ( MUR + RRSe ) - ( Max( ( MLU * RRSe ),DS ) + MLU ) ) ) ,( Min( ( RMSe + MUC ) ,( MUM + CS ) ) * ( ( RCSe * DS ) * ( MUM - MLU ) ) ) )", "obj1": 0.21499013806706113, "obj2": 0.6565620717424943}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.621043388073223}, {"determining": "Max( ( Max( ( FirstVNF_Mem - RRS ),( FirstVNF_Mem_Server / ARS ) ) / ( BR - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( MUR / Max( MUR,RMSe ) ) + ( DS - Min( RCSe ,( DS + DS ) ) ) )", "obj1": 0.15187376725838264, "obj2": 0.7063341905711901}, {"determining": "( Max( DDR,FirstVNF_Mem ) + ( ( CRS / FirstVNF_Mem_Server ) - MRS ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,Max( Min( Max( ( RCSe + ( ( ( MUM + RMSe ) - MUC ) * ( ( MLU / RCSe ) - MLU ) ) ),RMSe ) ,RCSe ),( ( Max( CS,( ( Max( DS,MUC ) + ( MUC * MUM ) ) * ( RCSe / DS ) ) ) - MUM ) - MUR ) ) )", "obj1": 0.2978303747534517, "obj2": 0.5593203722798443}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( Max( MLU,MUM ) * Min( MUR ,CS ) ) )", "obj1": 0.5581854043392505, "obj2": 0.32291078025944214}, {"determining": "( Max( MRS,CRS ) - ( RRS * ( Const / PN ) ) )", "choosing": "Max( ( ( MUR + DS ) / Max( MUR,MUM ) ),Max( ( CS - DS ),( RRSe - MUC ) ) )", "obj1": 0.5660749506903353, "obj2": 0.3111945270608146}, {"determining": "( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,RRS ) ) )", "choosing": "( ( MUM * MUC ) / ( MUR / DS ) )", "obj1": 0.6015779092702169, "obj2": 0.2898693977436865}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3175542406311637, "obj2": 0.5094523371491038}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - MDR ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,( RCSe * MUR ) ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "Max( Min( RRS ,( MDR / ACS ) ),( Const * ( BR * PN ) ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + ( ( ( MUR * DS ) - CS ) * Max( ( MUC / RMSe ),RRSe ) ) ) )", "obj1": 0.9842209072978304, "obj2": 0.011990283332603373}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + ( ( ( MUR * DS ) - CS ) * Max( ( MUC / RMSe ),RRSe ) ) ) )", "obj1": 0.9842209072978304, "obj2": 0.011990283332603373}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + ( ( ( MUR * DS ) - CS ) * Max( ( MUC / RMSe ),RRSe ) ) ) )", "obj1": 0.9842209072978304, "obj2": 0.011990283332603373}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + ( ( ( MUR * DS ) - CS ) * Max( ( MUC / RMSe ),RRSe ) ) ) )", "obj1": 0.9842209072978304, "obj2": 0.011990283332603373}], "3": [{"determining": "( ( MRS * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / ( RRS * ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( MLU / RCSe ) - Max( DS,MUM ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( ( PN + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RCSe + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - Const ) * ( Const / PN ) )", "choosing": "( ( MUM * MUC ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( ARS / MDR ) )", "choosing": "Min( ( CS - RCSe ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( CRS / MRS ) )", "choosing": "Min( Max( RCSe,( ( ( RRSe * Max( Min( ( MUM - RMSe ) ,( MUR + RMSe ) ),MLU ) ) - Max( MLU,MLU ) ) / Min( RMSe ,CS ) ) ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - FirstVNF_RAM_Server ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + ( ( ( MUR * DS ) - CS ) * Max( ( MUC / RMSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,FirstVNF_CPU ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ARS / Const ) - Max( ARS,FirstVNF_Mem ) ) ,Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( BR * FirstVNF_RAM_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,RCSe ) ,RMSe ) ) / ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR + FirstVNF_CPU_Server ),( MRS + CRS ) ) * ( Max( MDR,FirstVNF_CPU ) - ( RRS / FirstVNF_Mem ) ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( Min( RCSe ,DS ) * ( RCSe / MUC ) ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR * CRS ) ,( ( FirstVNF_RAM - ( FirstVNF_CPU - ( BR * Min( RRS ,MRS ) ) ) ) / ARS ) )", "choosing": "( ( MUC - Max( RRSe,RCSe ) ) + ( MUM * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server + MRS ) - Const ) ,( MDR - PN ) )", "choosing": "Max( ( RCSe - RCSe ),( Min( MUC ,MUC ) * ( Min( RCSe ,DS ) - MUM ) ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,MRS ) * ( BR / ( ( ( RRS - MRS ) - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * Max( DS,DS ) ) * ( CS / ( RRSe - MUM ) ) ) + Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR / AMS ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( CRS / AMS ) + Max( ( FirstVNF_CPU_Server + Const ),( FirstVNF_CPU_Server * MRS ) ) ) )", "choosing": "( ( Min( ( ( Min( DS ,MUR ) / MUR ) * MUR ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe * RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.1794871794871795, "obj2": 0.6760604021055634}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.46942800788954636, "obj2": 0.3824750412236386}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),Max( AMS,PN ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 0.3057199211045365, "obj2": 0.544259851552805}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( MDR - FirstVNF_RAM_Server ) * ( ARS + CRS ) ) )", "choosing": "Min( ( DS * MUM ) ,( DS / DS ) )", "obj1": 0.9546351084812623, "obj2": 0.04005271612867329}, {"determining": "( ( RRS * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MLU - DS ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.20118343195266272, "obj2": 0.6575196743934959}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.4970414201183432, "obj2": 0.33039534013875166}, {"determining": "Max( Max( RRS,MDR ),( ( Const * MRS ) / ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,MUR ) * ( RMSe / ( ( RMSe * CS ) - Max( MUR,DS ) ) ) )", "obj1": 0.3037475345167653, "obj2": 0.5505633032334539}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server / MRS ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( Min( CRS ,BR ),( RRS / ACS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * CRS ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / Min( CS ,Max( RCSe,CS ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.3116370808678501, "obj2": 0.5393547528134391}, {"determining": "Max( ( ( ( ( FirstVNF_CPU - ARS ) / DDR ) * AMS ) * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( ( ( RCSe - MUR ) - RMSe ) - ( RCSe + RMSe ) ) )", "obj1": 0.358974358974359, "obj2": 0.45598167312361104}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.378698224852071, "obj2": 0.45536858146053455}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * MUR ) )", "obj1": 0.717948717948718, "obj2": 0.11335947681891752}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( ( FirstVNF_RAM - Min( DDR ,Max( MDR,MDR ) ) ) ,( DDR - MDR ) )", "choosing": "Max( ( MUR + Max( CS,Min( Min( MUR ,( ( ( MUR + MUM ) / DS ) * RRSe ) ) ,Max( RRSe,MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( AMS / AMS ) - ( BR + ( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( ( FirstVNF_Mem_Server * ACS ),FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( MUC ,MUR ) / MUR ) ,Min( ( ( DS - ( MUM * CS ) ) / MUM ) ,MUM ) )", "obj1": 0.44970414201183434, "obj2": 0.3908472727704485}, {"determining": "( ( FirstVNF_Mem_Server + MRS ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( ( RCSe - RCSe ),( Min( MUC ,MUC ) * ( Min( RCSe ,DS ) - MUM ) ) ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5695535736142027}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.621043388073223}, {"determining": "Max( ( Max( ( FirstVNF_Mem - RRS ),( FirstVNF_Mem_Server / ARS ) ) / ( BR - Min( DDR ,FirstVNF_Mem_Server ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( MUR / Max( MUR,RMSe ) ) + ( DS - Min( RCSe ,( DS + DS ) ) ) )", "obj1": 0.15187376725838264, "obj2": 0.7063341905711901}, {"determining": "( Max( DDR,FirstVNF_Mem ) + ( ( CRS / FirstVNF_Mem_Server ) - MRS ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,Max( Min( Max( ( RCSe + ( ( ( MUM + RMSe ) - MUC ) * ( ( MLU / RCSe ) - MLU ) ) ),RMSe ) ,RCSe ),( ( Max( CS,( ( Max( DS,MUC ) + ( MUC * MUM ) ) * ( RCSe / DS ) ) ) - MUM ) - MUR ) ) )", "obj1": 0.2978303747534517, "obj2": 0.5593203722798443}, {"determining": "( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,RRS ) ) )", "choosing": "( ( MUM * MUC ) / ( MUR / DS ) )", "obj1": 0.6015779092702169, "obj2": 0.2898693977436865}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3175542406311637, "obj2": 0.5094523371491038}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "Min( ( ( MUC / CS ) + Min( ( RCSe + MLU ) ,RCSe ) ) ,Max( ( RMSe - MLU ),( MUR * MUM ) ) )", "obj1": 0.9861932938856016, "obj2": 0.007041163556397062}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - Min( Max( Const,CRS ) ,( AMS + FirstVNF_Mem_Server ) ) ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + ( ( ( MUR * DS ) - ( RCSe - RMSe ) ) * Max( ( MUC / RMSe ),RRSe ) ) ) )", "obj1": 0.17751479289940827, "obj2": 0.6875834627968623}, {"determining": "( ( RRS * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 0.2978303747534517, "obj2": 0.5593203722798443}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.7652859960552268, "obj2": 0.07996457365063152}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.621043388073223}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.10453648915187377, "obj2": 0.738391397788942}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( FirstVNF_CPU - FirstVNF_Mem ) ) + ( Min( ( FirstVNF_CPU_Server - Const ) ,( DDR / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) * Max( DS,Min( Min( ( RCSe / MLU ) ,MLU ) ,MLU ) ) )", "obj1": 0.6863905325443787, "obj2": 0.1997028342668799}, {"determining": "( Max( CRS,AMS ) / ( PN - MRS ) )", "choosing": "Max( ( MUR / MUM ),Min( Min( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) ,RMSe ) ,DS ) )", "obj1": 0.2504930966469428, "obj2": 0.6161633436584566}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7731755424063116, "obj2": 0.07824756583366178}, {"determining": "Min( ( ( Max( PN,( Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ( FirstVNF_CPU_Server + Const ) ) ) - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + ( MLU * Max( ( MUC / RMSe ),RRSe ) ) ) )", "obj1": 0.9783037475345168, "obj2": 0.00859194321844811}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) ,RMSe ) ,DS ) )", "obj1": 0.9881656804733728, "obj2": 0.004277216908644874}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( PN - MDR ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / ( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) ) ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 0.863905325443787, "obj2": 0.052631297302808557}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 0.757396449704142, "obj2": 0.09567412989062492}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) ) ) * ( ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.6725838264299803, "obj2": 0.2335518143963094}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( DDR / ARS ) / ( ( PN + Const ) / CRS ) ) )", "choosing": "( Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) ) - ( RCSe + MLU ) )", "obj1": 0.252465483234714, "obj2": 0.5750669318649436}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.378698224852071, "obj2": 0.45536858146053455}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21301775147928995, "obj2": 0.6463728751553908}, {"determining": "( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,RRS ) ) )", "choosing": "( ( MUM * MUC ) / ( MUR / DS ) )", "obj1": 0.6015779092702169, "obj2": 0.2898693977436865}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( Const,Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + MUC ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.47928994082840237, "obj2": 0.3462069963941228}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.4970414201183432, "obj2": 0.33039534013875166}, {"determining": "( ( MDR - ( FirstVNF_Mem - FirstVNF_Mem ) ) / ( PN - MRS ) )", "choosing": "Max( ( MUR / DS ),( RMSe * CS ) )", "obj1": 0.11834319526627218, "obj2": 0.7373745282413399}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.621043388073223}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.22287968441814596, "obj2": 0.6401311300718971}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - ( ( MRS * DDR ) - Min( MRS ,MDR ) ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( ( MUR + MUC ) - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.40236686390532544, "obj2": 0.4258470470478608}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.9664694280078896, "obj2": 0.016408419165100552}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( FirstVNF_RAM / MDR ) )", "choosing": "( ( Min( ( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.1952662721893491, "obj2": 0.6719491604902849}, {"determining": "( ( AMS - ( ACS - MRS ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / Min( MUC ,MUC ) ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.9704142011834319, "obj2": 0.008877028145349629}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.49506903353057197, "obj2": 0.33381600326602195}, {"determining": "Max( Max( ( DDR - FirstVNF_CPU_Server ),MDR ),( ( Const * MRS ) / ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( MUM ,Max( DS,RCSe ) ) * ( RMSe / ( ( RMSe * CS ) - Max( MUR,DS ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5413490100150216}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.611439842209073, "obj2": 0.26681931369902673}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.4970414201183432, "obj2": 0.33039534013875166}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) / ( ( ( Max( BR,FirstVNF_CPU ) * RRS ) * PN ) - Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,PN ) ) )", "choosing": "Min( Min( Min( MUR ,MLU ) ,( ( RMSe / Min( CS ,Max( ( Min( MUR ,MUC ) / MUC ),MUC ) ) ) + MLU ) ) ,( MUM + RCSe ) )", "obj1": 0.6351084812623274, "obj2": 0.25228460353507964}, {"determining": "Min( ( Max( CRS,BR ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( ( Max( MUC,MLU ) + ( RRSe + DS ) ) ,RMSe ) ,DS ) )", "obj1": 0.46942800788954636, "obj2": 0.3824750412236386}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / Max( PN,FirstVNF_Mem ) ) ) ,( BR / RRS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.960552268244576, "obj2": 0.0224333750325887}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) ) ) * ( Min( ( AMS * FirstVNF_CPU ) ,Max( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),( ( PN * FirstVNF_Mem_Server ) * ACS ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ),ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / MUM ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( CS / Min( MUR ,( Max( Min( MUM ,MLU ),( DS / RRSe ) ) + MLU ) ) ) - ( MUC + CS ) ) ) )", "obj1": 0.31952662721893493, "obj2": 0.5022432341592867}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3175542406311637, "obj2": 0.5094523371491038}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + DS ) )", "obj1": 0.20710059171597633, "obj2": 0.6485991526065688}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * ( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) ) ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MLU + CS ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.42209072978303747, "obj2": 0.41168844774184693}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_CPU ,CRS ) * DDR ) / PN ) ) * ( ( CRS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - MUC ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( DS + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3865877712031558, "obj2": 0.43596192068244033}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ACS / ( FirstVNF_CPU - ( CRS + FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / MUC ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3530571992110454, "obj2": 0.4658829185285748}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.358974358974359, "obj2": 0.45598167312361104}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( Const / PN ) )", "choosing": "( Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.378698224852071, "obj2": 0.45536858146053455}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) )", "obj1": 0.378698224852071, "obj2": 0.45536858146053455}, {"determining": "( ( ( RRS * PN ) + ( FirstVNF_Mem_Server - AMS ) ) * Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.43984220907297833, "obj2": 0.40287581028062663}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( ( FirstVNF_CPU_Server - ACS ) ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),Max( ( MLU * MLU ),Min( RMSe ,MUM ) ) ) )", "obj1": 0.1932938856015779, "obj2": 0.6750436829919996}, {"determining": "Min( Min( MDR ,PN ) ,( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( RCSe * ( MUC / MLU ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,DS ) ) ) )", "obj1": 0.32741617357001973, "obj2": 0.4969721533729961}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ACS / ( FirstVNF_CPU - ( BR / RRS ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + DS ) - ( CS / CS ) ) ) )", "obj1": 0.23668639053254437, "obj2": 0.6254649963356806}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( ( CRS + DDR ) - MDR ) ,( PN - MDR ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Min( ( MUM - RMSe ) ,( MUR + RMSe ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 0.7593688362919132, "obj2": 0.09475397800924941}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 0.7495069033530573, "obj2": 0.09873656156846855}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MUR + RMSe ),( CS / RRSe ) ) / ( Max( MLU,MUM ) * Min( MUR ,CS ) ) )", "obj1": 0.5562130177514792, "obj2": 0.2913536403333616}, {"determining": "Max( ( ( BR - Min( ( FirstVNF_RAM_Server * BR ) ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_Mem - RRS ),( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( ( CS + RCSe ) / Max( MUR,RMSe ) ) + ( DS - Min( RCSe ,Min( DS ,DS ) ) ) )", "obj1": 0.1203155818540434, "obj2": 0.722039952633544}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.46942800788954636, "obj2": 0.3824750412236386}, {"determining": "( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,RRS ) ) )", "choosing": "( ( MUM * MUC ) / ( MUR / DS ) )", "obj1": 0.6015779092702169, "obj2": 0.2898693977436865}], "4": [{"determining": "( ( MRS * DDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / ( RRS * ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( MLU / RCSe ) - Max( DS,MUM ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( ( FirstVNF_Mem_Server + MRS ) - Const ) ,( MDR - PN ) )", "choosing": "Max( ( RCSe - RCSe ),( Min( MUC ,MUC ) * ( Min( RCSe ,DS ) - MUM ) ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( Max( ( DDR / AMS ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( CRS / AMS ) + Max( ( FirstVNF_CPU_Server + Const ),( FirstVNF_CPU_Server * MRS ) ) ) )", "choosing": "( ( Min( ( ( Min( DS ,MUR ) / MUR ) * MUR ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe * RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.1794871794871795, "obj2": 0.6760604021055634}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( MDR - FirstVNF_RAM_Server ) * ( ARS + CRS ) ) )", "choosing": "Min( ( DS * MUM ) ,( DS / DS ) )", "obj1": 0.9546351084812623, "obj2": 0.04005271612867329}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.4970414201183432, "obj2": 0.33039534013875166}, {"determining": "Max( ( ( ( ( FirstVNF_CPU - ARS ) / DDR ) * AMS ) * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( ( ( RCSe - MUR ) - RMSe ) - ( RCSe + RMSe ) ) )", "obj1": 0.358974358974359, "obj2": 0.45598167312361104}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * MUR ) )", "obj1": 0.717948717948718, "obj2": 0.11335947681891752}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( ( FirstVNF_RAM - Min( DDR ,Max( MDR,MDR ) ) ) ,( DDR - MDR ) )", "choosing": "Max( ( MUR + Max( CS,Min( Min( MUR ,( ( ( MUR + MUM ) / DS ) * RRSe ) ) ,Max( RRSe,MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( AMS / AMS ) - ( BR + ( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( ( FirstVNF_Mem_Server * ACS ),FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( MUC ,MUR ) / MUR ) ,Min( ( ( DS - ( MUM * CS ) ) / MUM ) ,MUM ) )", "obj1": 0.44970414201183434, "obj2": 0.3908472727704485}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.621043388073223}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.7652859960552268, "obj2": 0.07996457365063152}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.621043388073223}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.10453648915187377, "obj2": 0.738391397788942}, {"determining": "( Max( CRS,AMS ) / ( PN - MRS ) )", "choosing": "Max( ( MUR / MUM ),Min( Min( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) ,RMSe ) ,DS ) )", "obj1": 0.2504930966469428, "obj2": 0.6161633436584566}, {"determining": "Min( ( ( Max( PN,( Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ( FirstVNF_CPU_Server + Const ) ) ) - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + ( MLU * Max( ( MUC / RMSe ),RRSe ) ) ) )", "obj1": 0.9783037475345168, "obj2": 0.00859194321844811}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( PN - MDR ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / ( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) ) ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 0.863905325443787, "obj2": 0.052631297302808557}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 0.757396449704142, "obj2": 0.09567412989062492}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) ) ) * ( ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) ) )", "obj1": 0.6725838264299803, "obj2": 0.2335518143963094}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( DDR / ARS ) / ( ( PN + Const ) / CRS ) ) )", "choosing": "( Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) ) - ( RCSe + MLU ) )", "obj1": 0.252465483234714, "obj2": 0.5750669318649436}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( Const,Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + MUC ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.47928994082840237, "obj2": 0.3462069963941228}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.4970414201183432, "obj2": 0.33039534013875166}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.621043388073223}, {"determining": "Max( Min( ( DDR * FirstVNF_RAM_Server ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.9664694280078896, "obj2": 0.016408419165100552}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( FirstVNF_RAM / MDR ) )", "choosing": "( ( Min( ( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.1952662721893491, "obj2": 0.6719491604902849}, {"determining": "( ( AMS - ( ACS - MRS ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / Min( MUC ,MUC ) ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.9704142011834319, "obj2": 0.008877028145349629}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.49506903353057197, "obj2": 0.33381600326602195}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.611439842209073, "obj2": 0.26681931369902673}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.4970414201183432, "obj2": 0.33039534013875166}, {"determining": "( ( FirstVNF_RAM_Server * MRS ) / ( ( ( Max( BR,FirstVNF_CPU ) * RRS ) * PN ) - Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,PN ) ) )", "choosing": "Min( Min( Min( MUR ,MLU ) ,( ( RMSe / Min( CS ,Max( ( Min( MUR ,MUC ) / MUC ),MUC ) ) ) + MLU ) ) ,( MUM + RCSe ) )", "obj1": 0.6351084812623274, "obj2": 0.25228460353507964}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / Max( PN,FirstVNF_Mem ) ) ) ,( BR / RRS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.960552268244576, "obj2": 0.0224333750325887}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) ) ) * ( Min( ( AMS * FirstVNF_CPU ) ,Max( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),( ( PN * FirstVNF_Mem_Server ) * ACS ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ),ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / MUM ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( CS / Min( MUR ,( Max( Min( MUM ,MLU ),( DS / RRSe ) ) + MLU ) ) ) - ( MUC + CS ) ) ) )", "obj1": 0.31952662721893493, "obj2": 0.5022432341592867}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * ( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) ) ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MLU + CS ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.42209072978303747, "obj2": 0.41168844774184693}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.358974358974359, "obj2": 0.45598167312361104}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( ( FirstVNF_CPU_Server - ACS ) ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),Max( ( MLU * MLU ),Min( RMSe ,MUM ) ) ) )", "obj1": 0.1932938856015779, "obj2": 0.6750436829919996}, {"determining": "Min( Min( MDR ,PN ) ,( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( RCSe * ( MUC / MLU ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,DS ) ) ) )", "obj1": 0.32741617357001973, "obj2": 0.4969721533729961}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( ( CRS + DDR ) - MDR ) ,( PN - MDR ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Min( ( MUM - RMSe ) ,( MUR + RMSe ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 0.7593688362919132, "obj2": 0.09475397800924941}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 0.7495069033530573, "obj2": 0.09873656156846855}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MUR + RMSe ),( CS / RRSe ) ) / ( Max( MLU,MUM ) * Min( MUR ,CS ) ) )", "obj1": 0.5562130177514792, "obj2": 0.2913536403333616}, {"determining": "Max( ( ( BR - Min( ( FirstVNF_RAM_Server * BR ) ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_Mem - RRS ),( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( ( CS + RCSe ) / Max( MUR,RMSe ) ) + ( DS - Min( RCSe ,Min( DS ,DS ) ) ) )", "obj1": 0.1203155818540434, "obj2": 0.722039952633544}, {"determining": "Min( ( ( CRS + DDR ) - MDR ) ,( PN - MDR ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Min( ( MUM - RMSe ) ,( MUR + RMSe ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 0.7633136094674556, "obj2": 0.091264250656407}, {"determining": "( ( FirstVNF_Mem - RRS ) + ( PN + FirstVNF_Mem ) )", "choosing": "Min( ( MUM / ( MUR + ( MLU + CS ) ) ) ,( MUC * ( DS + DS ) ) )", "obj1": 0.5838264299802761, "obj2": 0.28432352774387937}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( DDR / ARS ) / ( ( PN + Const ) / CRS ) ) )", "choosing": "( Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) ) - ( RCSe + MLU ) )", "obj1": 0.27416173570019725, "obj2": 0.5499310562119676}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( DDR / Const ) ) * Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.49506903353057197, "obj2": 0.33381600326602195}, {"determining": "( ( ACS / ( FirstVNF_CPU - RRS ) ) + Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( ( MRS - BR ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) * Max( DS,Min( MLU ,Min( ( ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) / Min( Max( MLU,MUM ) ,RMSe ) ) ,MLU ) ) ) )", "obj1": 0.6568047337278107, "obj2": 0.2377975443361723}, {"determining": "Min( ( Max( CRS,BR ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( ( Max( MUC,MLU ) + ( RRSe + DS ) ) ,RMSe ) ,DS ) )", "obj1": 0.46745562130177515, "obj2": 0.3762026651743865}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "( ( RCSe - Max( RRSe,RCSe ) ) + ( Max( MUM,( RCSe / RCSe ) ) - ( Max( ( MUC / MUC ),RCSe ) - MLU ) ) )", "obj1": 0.73767258382643, "obj2": 0.10162558200913824}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( FirstVNF_RAM + BR ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.40039447731755423, "obj2": 0.4269886632449599}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( Max( ( MUR + RMSe ),( CS / RRSe ) ) / ( Max( MLU,MUM ) * Min( MUR ,CS ) ) )", "obj1": 0.9822485207100592, "obj2": 0.007632972978315079}, {"determining": "( ( AMS - Max( ( ( Min( RRS ,CRS ) + ( Const - FirstVNF_CPU_Server ) ) * Max( Const,FirstVNF_RAM ) ),Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( ( RRSe * MUM ) ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.4911242603550296, "obj2": 0.34342725716246336}, {"determining": "Min( ( ( Max( PN,( DDR - ( ( MDR - ( FirstVNF_Mem - FirstVNF_Mem ) ) - Min( Max( Const,CRS ) ,( AMS + FirstVNF_Mem_Server ) ) ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( MUM - DS ) / ( DS + ( ( RMSe * CS ) * Max( ( MUC / RMSe ),RRSe ) ) ) )", "obj1": 0.14595660749506903, "obj2": 0.6773176097185348}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ACS / ( FirstVNF_CPU - ( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( Min( Min( RMSe ,( MUC / MUR ) ) ,( MUR * RCSe ) ) / MUC ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3865877712031558, "obj2": 0.4311684998562605}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + DS ) )", "obj1": 0.6903353057199211, "obj2": 0.12595818302878375}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( ( BR - Min( ( FirstVNF_RAM_Server * BR ) ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_Mem - RRS ),( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / ( ( MUC - Min( DS ,DS ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3175542406311637, "obj2": 0.5035394257062357}, {"determining": "Max( ( ( BR - Min( ( FirstVNF_RAM_Server * BR ) ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_Mem - RRS ),( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ),( ( ( ARS * FirstVNF_CPU ) + ( AMS * FirstVNF_Mem ) ) + Max( ( CRS - BR ),( FirstVNF_Mem_Server * CRS ) ) ) )", "choosing": "( ( CS / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3057199211045365, "obj2": 0.5135433372853387}, {"determining": "Min( ( Max( CRS,BR ) * MDR ) ,( ( FirstVNF_CPU + DDR ) / ACS ) )", "choosing": "( ( ( MUC / MUC ) + Max( ( RCSe - RCSe ),( Min( MUC ,MUC ) * ( Min( RCSe ,DS ) - MUM ) ) ) ) * Min( Min( ( Max( MUC,MLU ) + ( RRSe + DS ) ) ,RMSe ) ,DS ) )", "obj1": 0.6686390532544378, "obj2": 0.23539225729972535}, {"determining": "( ( AMS - ( ACS - MRS ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + Min( MLU ,RCSe ) ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / Min( MUC ,MUC ) ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.9704142011834319, "obj2": 0.008877028145349629}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 0.21301775147928995, "obj2": 0.6347298200089942}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * ( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,( Min( RRS ,FirstVNF_RAM_Server ) * Max( BR,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_CPU - ARS ) / DDR ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) ) ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( MLU + CS ) ,( ( ( MUC - DS ) + Min( RMSe ,MUM ) ) * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3767258382642998, "obj2": 0.44698252278810324}, {"determining": "( ( AMS - ( Max( CRS,AMS ) * MDR ) ) - ( CRS * FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC / CS ) + MUC ) - ( ( RCSe - ( Min( MUM ,( ( ( RCSe / RCSe ) - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.378698224852071, "obj2": 0.4432647465868178}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUC / CS ) + MUC ) - ( ( RCSe - ( Min( MUM ,( ( DS - ( MUM * CS ) ) / MUM ) ) - ( CS / MLU ) ) ) + MUC ) )", "obj1": 0.4280078895463511, "obj2": 0.3965941759353321}, {"determining": "( Min( MRS ,MDR ) / ( PN - MRS ) )", "choosing": "Max( ( MUR / MUM ),MUC )", "obj1": 0.23668639053254437, "obj2": 0.6211590625855805}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - ( ( MRS * DDR ) - Min( MRS ,MDR ) ) ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( ( MUR + MUC ) - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.40236686390532544, "obj2": 0.4213166151934368}, {"determining": "Min( Max( FirstVNF_CPU,Const ) ,( PN - MDR ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) ) * MUR ) )", "obj1": 0.7100591715976331, "obj2": 0.11405211577557643}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 0.7238658777120316, "obj2": 0.1104768703665978}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,Min( Min( RCSe ,RMSe ) ,DS ) ) ) )", "obj1": 0.23471400394477318, "obj2": 0.6313805363949152}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.631163708086785, "obj2": 0.2601804360588334}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * Min( ( FirstVNF_RAM - MDR ) ,( PN - MDR ) ) ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,( MLU / MUM ) ) )", "obj1": 0.7731755424063116, "obj2": 0.07789500170115893}, {"determining": "Min( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( DS,( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 0.7988165680473372, "obj2": 0.06933264691700369}, {"determining": "Min( ( AMS - ( FirstVNF_Mem_Server / Max( PN,FirstVNF_Mem ) ) ) ,( BR / RRS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.9625246548323472, "obj2": 0.02107361159608226}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( Const - MDR ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / ( CS / MLU ) ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 0.32741617357001973, "obj2": 0.4969721533729961}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUM / MUR ) ,Min( ( ( DS - ( MUM * CS ) ) / MUM ) ,MUM ) )", "obj1": 0.44970414201183434, "obj2": 0.3908472727704485}, {"determining": "( Max( ( Const / PN ),Min( Min( AMS ,ARS ) ,( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / ( ( MUC - DS ) + ( Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) ) - ( ( RRSe - MLU ) / ( CS / RCSe ) ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.2938856015779093, "obj2": 0.5272738911014586}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( MRS + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) + ( MUR / DS ) )", "obj1": 0.06903353057199212, "obj2": 0.768346142519935}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "Max( ( MUR / DS ),( RMSe * CS ) )", "obj1": 0.10848126232741617, "obj2": 0.7346743961667587}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ACS / ( FirstVNF_CPU - ( CRS + FirstVNF_CPU_Server ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / MUC ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3530571992110454, "obj2": 0.45773065725937173}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( BR,FirstVNF_Mem_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUC ,MUC ) * Min( MUM ,DS ) ) )", "obj1": 0.07692307692307693, "obj2": 0.7639274823344095}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,MDR ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / Max( ( RCSe - MUR ),CS ) )", "obj1": 0.38461538461538464, "obj2": 0.44152819824963696}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_RAM_Server + ( ( Min( FirstVNF_CPU ,CRS ) * DDR ) / PN ) ) * ( ( CRS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( DS + CS ) - ( CS / CS ) ) ) - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 0.20118343195266272, "obj2": 0.6358334972371423}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( PN - MDR ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / ( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( Max( RMSe,MUC ) ,( MLU / MLU ) ) ) ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 0.863905325443787, "obj2": 0.052631297302808557}, {"determining": "Min( Max( FirstVNF_CPU,Max( Min( MDR ,PN ),AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( ( RCSe * ( MUC / MLU ) ) / ( Max( MLU,MUM ) * Min( MUR ,CS ) ) )", "obj1": 0.5266272189349113, "obj2": 0.3242747149833037}, {"determining": "Min( Min( MDR ,PN ) ,( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( MUR + RMSe ),( CS / RRSe ) ) / ( Max( MLU,MUM ) * Min( MUR ,CS ) ) )", "obj1": 0.28402366863905326, "obj2": 0.5393026755047234}, {"determining": "( ( ( RRS - MDR ) / ( ARS / MDR ) ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + CS ) )", "obj1": 0.34516765285996054, "obj2": 0.4944949691693892}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,MUM ) - ( RRSe + DS ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( DDR / ARS ) / ( ( PN + Const ) / CRS ) ) )", "choosing": "( Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) ) - ( RCSe + MLU ) )", "obj1": 0.252465483234714, "obj2": 0.5750669318649436}, {"determining": "( ( FirstVNF_RAM - ACS ) - Min( FirstVNF_CPU ,RRS ) )", "choosing": "( ( MUM / MUC ) * ( ( MUM * MUC ) / ( MUR / DS ) ) )", "obj1": 0.9506903353057199, "obj2": 0.04174548613901922}, {"determining": "Min( ( ( Max( PN,( DDR - ( Min( FirstVNF_RAM ,ARS ) - MDR ) ) ) / DDR ) - AMS ) ,( ARS / RRS ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.9644970414201184, "obj2": 0.01714519692088284}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( RRS - MDR ) )", "choosing": "( ( ( RRSe + RMSe ) - ( Min( RRSe ,MUM ) * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.6785009861932939, "obj2": 0.126102188150421}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.621043388073223}, {"determining": "( Max( CRS,AMS ) / ( PN - MRS ) )", "choosing": "Max( ( MUR / MUM ),Min( Min( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + RRSe ) ,( DS - MUR ) ) ) ,RMSe ) ,DS ) )", "obj1": 0.2504930966469428, "obj2": 0.6161633436584566}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) ) ) * ( Min( ( AMS * FirstVNF_CPU ) ,Max( ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),( ( PN * Const ) * ACS ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ),ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / MUM ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( CS / Min( DS ,( Max( Min( MUM ,MLU ),( DS / RRSe ) ) + MLU ) ) ) - ( MUC + CS ) ) ) )", "obj1": 0.5996055226824457, "obj2": 0.2805095574527795}]}