{"1": [{"determining": "( ( MRS - ( MDR - ( ( ( FirstVNF_CPU_Server / Max( ARS,FirstVNF_Mem ) ) * PN ) + DDR ) ) ) - ( CRS + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,( RRSe - ( Min( ( MLU / RCSe ) ,DS ) * ( RMSe * CS ) ) ) ) ,( DS + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( Max( Min( FirstVNF_RAM ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ),( Min( Min( ARS ,PN ) ,AMS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( Max( RRSe,MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( RMSe * MUR ) ,Min( DS ,MLU ) )", "obj1": 0.9841986455981941, "obj2": 0.011216228820629785}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * MDR ) * ( FirstVNF_RAM - AMS ) )", "choosing": "Min( ( CS - RRSe ) ,Max( RRSe,CS ) )", "obj1": 0.9029345372460497, "obj2": 0.10481926966788314}, {"determining": "( ( RRS - MRS ) / ( AMS + ( FirstVNF_Mem / FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( MUR / ( MUR * CS ) ),RMSe ),( MUM - Max( RRSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_RAM_Server ) / ( AMS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUM * RCSe ) ,( DS - MUM ) )", "obj1": 0.510158013544018, "obj2": 0.4194586682536546}, {"determining": "( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) * ( RCSe / RCSe ) )", "obj1": 0.6704288939051919, "obj2": 0.2834839898827402}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( RRS * FirstVNF_Mem ) )", "choosing": "( ( RRSe + MLU ) - ( RMSe + MUC ) )", "obj1": 0.3182844243792325, "obj2": 0.6302201536198722}, {"determining": "( ( MRS - FirstVNF_RAM ) / ( DDR + FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,MUM ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( MRS / MRS ),RRS ),( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - RRSe ),( DS - ( MLU / ( ( ( ( MUC - MUM ) * RRSe ) * ( RMSe * ( MUM / RCSe ) ) ) * MUC ) ) ) )", "obj1": 0.3656884875846501, "obj2": 0.5596634892106223}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( Max( ( FirstVNF_Mem - FirstVNF_RAM ),FirstVNF_RAM_Server ) - FirstVNF_RAM ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - Min( Min( MUC ,Max( MUC,MUR ) ) ,Max( Min( MUR ,CS ),MUC ) ) ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( ( Min( BR ,MDR ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) / ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - MLU ) * ( MUR + CS ) ),( ( ( Min( MUM ,( MLU * DS ) ) / MUC ) / MUM ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) * BR ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,( ( ( ( ( MLU * ( RRSe / ( RCSe - CS ) ) ) * RCSe ) + ( ( CS - MUM ) / ( RCSe + ( CS * MUR ) ) ) ) / RCSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / Max( ( MUC * MLU ),RMSe ) )", "obj1": 0.6952595936794582, "obj2": 0.24903089243364052}, {"determining": "( Max( Min( RRS ,FirstVNF_Mem_Server ),ARS ) / ( FirstVNF_CPU - ( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( Min( MLU ,MUR ),( RMSe * RCSe ) ) * Max( ( MUC - MUM ),( MUM + MUC ) ) )", "obj1": 0.6478555304740407, "obj2": 0.32934998184020875}, {"determining": "Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( Min( ( RCSe * DS ) ,( RCSe / MUC ) ) * Min( ( MLU / RMSe ) ,( MUR * CS ) ) )", "obj1": 0.5778781038374717, "obj2": 0.3836668514655997}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( Max( ACS,Const ) * ( ACS * ACS ) )", "choosing": "( ( RMSe * MUC ) - ( MUM * ( ( CS - MUC ) - ( ( Min( DS ,RMSe ) / DS ) * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.4785553047404063, "obj2": 0.44174140100059617}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( CRS + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( DS + ( ( RRSe + Min( RRSe ,( RMSe + ( DS / Max( DS,MLU ) ) ) ) ) * RCSe ) ) - ( ( MUR * MUM ) / RRSe ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) )", "obj1": 0.9300225733634312, "obj2": 0.05254383215797778}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,FirstVNF_Mem ) ,( Min( ( FirstVNF_CPU / Const ) ,RRS ) - DDR ) )", "choosing": "Min( Max( Min( MLU ,MUR ),( Min( ( ( RRSe * MLU ) * DS ) ,MLU ) * ( RMSe - DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + ACS ) - FirstVNF_Mem_Server ) - Max( ( ( DDR / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ),( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * Max( RCSe,Max( MUC,CS ) ) ) )", "obj1": 0.4672686230248307, "obj2": 0.48495873367723685}, {"determining": "( Max( ( PN - BR ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,MUC ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 0.45372460496614, "obj2": 0.4874778548118059}, {"determining": "( ( MDR / Min( ( Max( ( MRS - ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM ) * RRS ) ,FirstVNF_Mem ) ) - Min( MRS ,( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( RRSe + MUR ) ) + ( ( MUR + RCSe ) - Min( MUR ,( ( DS + MUM ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * AMS ) ) + ( Min( AMS ,FirstVNF_RAM_Server ) * ( AMS - ARS ) ) ) * ( ( Max( BR,ACS ) * Max( FirstVNF_Mem,FirstVNF_Mem ) ) + ( ( BR / Const ) - ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( MUR / RCSe ) + MUR ) ,Max( Max( Min( RRSe ,CS ),Max( MUM,MLU ) ),Min( ( MUM / RRSe ) ,CS ) ) )", "obj1": 0.4762979683972912, "obj2": 0.4722253136769272}, {"determining": "( ( ( Max( FirstVNF_RAM,Const ) * ( RRS - FirstVNF_Mem ) ) - ( ( RRS + PN ) + ( BR - FirstVNF_Mem ) ) ) + ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,RRS ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * ( RRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( RRSe + MUM ) * Max( DS,CS ) ),Max( ( MLU + CS ),( MUC * Min( DS ,MLU ) ) ) )", "obj1": 0.909706546275395, "obj2": 0.09844036728203254}, {"determining": "( Max( ARS,MRS ) * ( MRS + ( MDR * BR ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( DS + MUR ) + ( MUR * DS ) ) ) / ( ( ( MUM * DS ) / ( RCSe + MLU ) ) - ( Max( MUR,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2528216704288939, "obj2": 0.6808762273445053}, {"determining": "Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( DDR + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) )", "choosing": "Min( Min( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) ,( Max( DS,RCSe ) + ( MUC - MUM ) ) ) ,( ( ( MUC * MUM ) + ( RCSe - RMSe ) ) * Min( ( MUC * MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.5237020316027088, "obj2": 0.4168398688200789}], "2": [{"determining": "( ( MRS - ( MDR - ( ( ( FirstVNF_CPU_Server / Max( ARS,FirstVNF_Mem ) ) * PN ) + DDR ) ) ) - ( CRS + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,( RRSe - ( Min( ( MLU / RCSe ) ,DS ) * ( RMSe * CS ) ) ) ) ,( DS + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( Max( Min( FirstVNF_RAM ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ),( Min( Min( ARS ,PN ) ,AMS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( Max( RRSe,MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MRS ) / ( AMS + ( FirstVNF_Mem / FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( MUR / ( MUR * CS ) ),RMSe ),( MUM - Max( RRSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / ( DDR + FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,MUM ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( Max( ( FirstVNF_Mem - FirstVNF_RAM ),FirstVNF_RAM_Server ) - FirstVNF_RAM ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - Min( Min( MUC ,Max( MUC,MUR ) ) ,Max( Min( MUR ,CS ),MUC ) ) ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( ( Min( BR ,MDR ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) / ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - MLU ) * ( MUR + CS ) ),( ( ( Min( MUM ,( MLU * DS ) ) / MUC ) / MUM ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) * BR ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,( ( ( ( ( MLU * ( RRSe / ( RCSe - CS ) ) ) * RCSe ) + ( ( CS - MUM ) / ( RCSe + ( CS * MUR ) ) ) ) / RCSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / PN ),( RRS + ( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( Min( ( RCSe * DS ) ,( RCSe / MUC ) ) * Min( ( MLU / RMSe ) ,( MUR * CS ) ) )", "obj1": 0.5778781038374717, "obj2": 0.3836668514655997}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( Max( ACS,Const ) * ( ACS * ACS ) )", "choosing": "( ( RMSe * MUC ) - ( MUM * ( ( CS - MUC ) - ( ( Min( DS ,RMSe ) / DS ) * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( CRS + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( DS + ( ( RRSe + Min( RRSe ,( RMSe + ( DS / Max( DS,MLU ) ) ) ) ) * RCSe ) ) - ( ( MUR * MUM ) / RRSe ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,FirstVNF_Mem ) ,( Min( ( FirstVNF_CPU / Const ) ,RRS ) - DDR ) )", "choosing": "Min( Max( Min( MLU ,MUR ),( Min( ( ( RRSe * MLU ) * DS ) ,MLU ) * ( RMSe - DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Min( ( Max( ( MRS - ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM ) * RRS ) ,FirstVNF_Mem ) ) - Min( MRS ,( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( RRSe + MUR ) ) + ( ( MUR + RCSe ) - Min( MUR ,( ( DS + MUM ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( RRS - Min( ( FirstVNF_Mem - DDR ) ,( AMS * ( DDR + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( DS + DS ),( MUM - RRSe ) )", "obj1": 0.9661399548532731, "obj2": 0.02563596494132091}, {"determining": "Min( ( ( BR - MDR ) - FirstVNF_CPU ) ,( ( RRS - CRS ) / ( FirstVNF_CPU_Server - BR ) ) )", "choosing": "( ( ( ( MLU / RRSe ) + Min( RCSe ,CS ) ) - Max( ( DS + DS ),( MUR - MLU ) ) ) + ( ( ( DS / RRSe ) * Max( CS,( MUM - Min( DS ,RCSe ) ) ) ) - ( Min( RRSe ,RRSe ) - Min( RMSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( ( ( MRS * ( ( Min( Min( DDR ,DDR ) ,BR ) / FirstVNF_Mem_Server ) * DDR ) ) * FirstVNF_RAM ) - CRS ) )", "choosing": "Max( ( MUM - RRSe ),( CS / ( ( Max( Max( RMSe,( MUM + ( MLU / MLU ) ) ),MUR ) - RRSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( ( ( Const / RRS ) * Min( Const ,MRS ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( ( ( DS / RMSe ) * ( RCSe * MUC ) ) ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.3611738148984199, "obj2": 0.5506018549793145}, {"determining": "( Max( ( PN - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ),MRS ) - ( ( ARS / Min( ( FirstVNF_Mem_Server + BR ) ,( ( FirstVNF_CPU - Const ) - ACS ) ) ) + BR ) )", "choosing": "( ( MUM - CS ) * Min( MUM ,( ( CS + MUC ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN / BR ) ,Max( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / DDR ),( PN + ARS ) ) )", "choosing": "( ( DS / MUM ) / ( ( Max( MLU,MUC ) / ( RMSe - RRSe ) ) / ( ( MUM / MLU ) * ( DS * DS ) ) ) )", "obj1": 0.5553047404063205, "obj2": 0.38873621147285164}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,BR ) - FirstVNF_CPU_Server ) )", "choosing": "Min( MUM ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( ( MDR - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.4650112866817156, "obj2": 0.4171440038093851}, {"determining": "( ( ( Const * PN ) * DDR ) - ACS )", "choosing": "Min( ( ( Min( RMSe ,DS ) + Max( RMSe,RCSe ) ) * ( Min( RRSe ,( RRSe * CS ) ) / ( RCSe + RCSe ) ) ) ,Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MDR * MRS ),CRS ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Min( Max( RRSe,RMSe ) ,( MUM / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,CRS ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) / ( ( Const + ( Max( RRS,DDR ) + ( FirstVNF_CPU - ARS ) ) ) * Const ) ) - Min( ( ( DDR * MDR ) - ( FirstVNF_RAM - DDR ) ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( ( MLU / MUC ),( ( MUR * Max( ( DS / ( Min( RRSe ,DS ) - ( RRSe / MLU ) ) ),MUM ) ) * ( ( Min( Min( MUR ,CS ) ,MUM ) + CS ) - RCSe ) ) ),Max( ( MLU + RRSe ),Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( ( PN / Min( ( ( CRS * Max( PN,ARS ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( Const * ACS ) ) - Max( Max( BR,FirstVNF_RAM ),( AMS * RRS ) ) )", "choosing": "Max( Max( DS,Max( MUR,( MUC / MUR ) ) ),( ( MLU * RRSe ) / ( Max( ( MUC - Max( MUC,RMSe ) ),Max( MUC,DS ) ) * ( MUR * CS ) ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( DS,RMSe ) )", "obj1": 0.4288939051918736, "obj2": 0.4861272122351947}, {"determining": "( Max( MRS,CRS ) - Max( ( ( ( FirstVNF_Mem * RRS ) / FirstVNF_RAM_Server ) * CRS ),ACS ) )", "choosing": "( ( Max( ( DS * MLU ),( MLU - CS ) ) * ( ( RCSe / RRSe ) * ( MUR * MUM ) ) ) - ( RMSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( Max( Min( FirstVNF_RAM ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ),( Min( Min( ARS ,PN ) ,AMS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( Max( RRSe,MUC ) * RCSe ) )", "obj1": 0.8103837471783296, "obj2": 0.12845701226277914}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( Max( Min( FirstVNF_RAM ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ),( Min( Min( ARS ,PN ) ,AMS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( Max( RRSe,MUC ) * RCSe ) )", "obj1": 0.8103837471783296, "obj2": 0.12845701226277914}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( Max( Min( FirstVNF_RAM ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ),( Min( Min( ARS ,PN ) ,AMS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( Max( RRSe,MUC ) * RCSe ) )", "obj1": 0.8103837471783296, "obj2": 0.12845701226277914}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "Min( Max( RCSe,RMSe ) ,Min( Max( CS,( RCSe / MLU ) ) ,RMSe ) )", "obj1": 0.8103837471783296, "obj2": 0.12845701226277914}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - Max( Const,( DDR * Const ) ) )", "choosing": "( ( ( RRSe * ( ( RCSe * MUM ) / RRSe ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.28442437923250563, "obj2": 0.6271265374742493}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( Const - MRS ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.3837471783295711, "obj2": 0.5073299379365396}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) - ( ( CRS * FirstVNF_CPU ) + BR ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),( DDR * Const ) ) )", "choosing": "( Max( ( Min( RCSe ,( DS / ( RRSe + ( ( CS + RMSe ) + RCSe ) ) ) ) * RRSe ),MUM ) / ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( AMS ,FirstVNF_RAM ),Min( Max( Max( Min( ( FirstVNF_RAM_Server - DDR ) ,( FirstVNF_RAM * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM - RRS ) + ( FirstVNF_Mem_Server * ARS ) ) ),( ( Max( FirstVNF_Mem_Server,DDR ) / Min( FirstVNF_RAM_Server ,PN ) ) * ( ( DDR + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) ) ) ,AMS ) )", "choosing": "( ( ( DS - MUM ) / Min( MUC ,RRSe ) ) / Min( MUC ,RRSe ) )", "obj1": 0.5665914221218962, "obj2": 0.3848138706027129}, {"determining": "Min( ( Min( ( MDR / ( FirstVNF_CPU / FirstVNF_RAM ) ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( Min( RMSe ,MUR ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( MDR / Const ) ,RRS ) - DDR ) ,( ( FirstVNF_Mem - ACS ) * DDR ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) / Max( AMS,PN ) ) - Min( MRS ,( FirstVNF_CPU / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( ( ( ( ( ( MUC / MUM ) / ( RMSe / RCSe ) ) / ( RRSe * ( RRSe * MLU ) ) ) / MLU ) - MUC ) - RRSe ) ) + ( RMSe - Min( MUR ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,FirstVNF_Mem ) ,( Min( ( FirstVNF_CPU / Const ) ,RRS ) - DDR ) )", "choosing": "Min( Max( Min( MLU ,MUR ),( Min( ( ( RRSe * MLU ) * DS ) ,MLU ) * ( RMSe - DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Min( ( Max( ( MRS - ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM ) * RRS ) ,FirstVNF_Mem ) ) - Min( MRS ,( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( RRSe + MUR ) ) + ( ( MUR + RCSe ) - Min( MUR ,( ( DS + MUM ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,FirstVNF_Mem ) ,( Min( ( FirstVNF_CPU / Const ) ,RRS ) - DDR ) )", "choosing": "Min( Max( Min( MLU ,MUR ),( Min( ( ( RRSe * MLU ) * DS ) ,MLU ) * ( RMSe - DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Min( ( Max( ( MRS - ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM ) * RRS ) ,FirstVNF_Mem ) ) - Min( MRS ,( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( RRSe + MUR ) ) + ( ( MUR + RCSe ) - Min( MUR ,( ( DS + MUM ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,FirstVNF_Mem ) ,( Min( ( FirstVNF_CPU / Const ) ,RRS ) - DDR ) )", "choosing": "Min( Max( Min( MLU ,MUR ),( Min( ( ( RRSe * MLU ) * DS ) ,MLU ) * ( RMSe - DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Min( ( Max( ( MRS - ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM ) * RRS ) ,FirstVNF_Mem ) ) - Min( MRS ,( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( RRSe + MUR ) ) + ( ( MUR + RCSe ) - Min( MUR ,( ( DS + MUM ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,FirstVNF_Mem ) ,( Min( ( FirstVNF_CPU / Const ) ,RRS ) - DDR ) )", "choosing": "Min( Max( Min( MLU ,MUR ),( Min( ( ( RRSe * MLU ) * DS ) ,MLU ) * ( RMSe - DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( AMS / FirstVNF_RAM ) ) - ( MDR / Min( ( RRS * Max( BR,AMS ) ) ,FirstVNF_Mem ) ) )", "choosing": "( ( MUC - ( RRSe + MUR ) ) + ( RMSe - Min( ( RRSe + RRSe ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( AMS / FirstVNF_RAM ) ) - ( MDR / Min( ( RRS * Max( BR,AMS ) ) ,( ( ( Max( BR,MRS ) + ( FirstVNF_Mem + FirstVNF_Mem ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( MUC - ( RRSe + MUR ) ) + ( ( RMSe * RMSe ) - Min( ( RRSe + RRSe ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MRS ,( AMS / FirstVNF_RAM ) ) - ( MDR / Min( ( RRS * Max( BR,AMS ) ) ,FirstVNF_Mem ) ) ) * Max( Min( ARS ,ARS ),( AMS / RRS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( ARS - ACS ) ) * Max( ( FirstVNF_RAM + AMS ),Max( MRS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( MUM - RRSe ) - ( MUC * RCSe ) ) ) ,( RRSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( AMS / FirstVNF_RAM ) ) - ( MDR / Min( ( RRS * Max( BR,AMS ) ) ,FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( ( MLU + MUM ) ,( MUM / RMSe ) ) * ( ( MUM - RRSe ) - ( MUC * RCSe ) ) ) ,Min( ( ( DS / RCSe ) / ( RMSe * RMSe ) ) ,( ( MUC + MUC ) + Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,BR ) / Min( BR ,Max( ARS,( ACS * FirstVNF_Mem ) ) ) )", "choosing": "( ( CS * ( DS / RRSe ) ) * Max( MUR,( MUR + MLU ) ) )", "obj1": 0.5869074492099323, "obj2": 0.3829537782519275}, {"determining": "( AMS - ( CRS + AMS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + AMS ) )", "choosing": "Min( ( CS - RRSe ) ,Max( RRSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( MDR,RRS ),( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) )", "choosing": "Max( ( RMSe - ( ( MUC + RMSe ) * ( DS - MLU ) ) ),Min( MLU ,MLU ) )", "obj1": 0.3476297968397291, "obj2": 0.5735916379423113}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_Mem + BR ) )", "choosing": "( ( MUC + RMSe ) * ( DS - MLU ) )", "obj1": 0.4153498871331828, "obj2": 0.5053328423941544}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( PN ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "Min( Max( MUR,MUC ) ,Max( MLU,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + CS ) ) - ( Min( RRSe ,MUR ) + ( RRSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,Const ) * ( Const - ACS ) )", "choosing": "( ( ( DS * MUR ) - ( MLU + CS ) ) - ( ( DS - CS ) + ( DS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_RAM_Server * ACS ),Min( AMS ,FirstVNF_RAM ) ) ,( ( ACS / ARS ) - ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - RRSe ) * ( MUR + CS ) ),( ( Min( RMSe ,DS ) + Max( RCSe,DS ) ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ( FirstVNF_RAM + CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * ( DS - CS ) )", "obj1": 0.9300225733634312, "obj2": 0.05249146708467994}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( MLU / CS ),( Min( MLU ,MUM ) * MUC ) ) )", "obj1": 0.7133182844243793, "obj2": 0.20261798971793346}, {"determining": "Min( Max( ( ACS - ( MRS - Min( Max( FirstVNF_Mem_Server,RRS ) ,( Min( ARS ,BR ) * ( ( BR + RRS ) * ( RRS / PN ) ) ) ) ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RRSe - MLU ) ,Min( MUM ,MUR ) )", "obj1": 0.9413092550790068, "obj2": 0.04019575323473265}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( BR,Max( BR,PN ) ) * Min( DDR ,AMS ) ) ) )", "choosing": "Min( Max( ( MUM * MUR ),RMSe ) ,( MUM / MUM ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( Max( ( PN - BR ),MRS ) - ( ( CRS / FirstVNF_CPU ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) ) ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 0.45598194130925507, "obj2": 0.46082574578688523}, {"determining": "( Max( ( PN - BR ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.35214446952595935, "obj2": 0.5668066646064767}, {"determining": "( ( ( DDR / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ) + Min( Min( ( DDR + FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * Max( RCSe,Max( MUC,CS ) ) ) ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.5191873589164786, "obj2": 0.3927737017695696}, {"determining": "( Const - Max( ( ( DDR / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ),( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( MUM ,RRSe ) + MUR ) - ( ( ( RRSe - MUM ) - Min( MUC ,RCSe ) ) * Max( RCSe,Max( MUC,CS ) ) ) )", "obj1": 0.90744920993228, "obj2": 0.07256429479546414}, {"determining": "( ( ( Min( ( FirstVNF_Mem / ( ARS + ( BR * FirstVNF_RAM_Server ) ) ) ,MRS ) - ACS ) + Max( MRS,FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server )", "choosing": "( ( Min( ( ( ( MUR - ( RMSe / MUR ) ) - MUM ) - Min( MUC ,RCSe ) ) ,RRSe ) * ( RMSe - CS ) ) / Max( ( MUC * MLU ),RMSe ) )", "obj1": 0.417607223476298, "obj2": 0.5024370872299059}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "( ( Max( ( DS * MLU ),( ( MUC * ( ( RMSe * RCSe ) * RRSe ) ) - CS ) ) * ( ( RCSe / RRSe ) * ( MUR * MUM ) ) ) - ( ( Max( MLU,RMSe ) / ( RMSe - RRSe ) ) / ( ( MUM / MLU ) * ( DS * DS ) ) ) )", "obj1": 0.618510158013544, "obj2": 0.2697293138967171}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.7223476297968398, "obj2": 0.19150639918174}, {"determining": "( ( RRS * ( Const / FirstVNF_CPU_Server ) ) + Min( DDR ,( BR * ( ARS / ARS ) ) ) )", "choosing": "( Max( ( MLU - ( MUM - DS ) ),Min( MUR ,Max( MUM,CS ) ) ) * ( MUM - Min( RMSe ,( RMSe * MLU ) ) ) )", "obj1": 0.28216704288939054, "obj2": 0.6322509382986274}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,( MRS * MRS ) ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( DS / Max( ( MUC * MLU ),RMSe ) )", "obj1": 0.6952595936794582, "obj2": 0.24857600991113715}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) + ( ( DDR + MRS ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RCSe ,DS ) / Max( ( MUC * MLU ),RMSe ) )", "obj1": 0.600451467268623, "obj2": 0.3458671714984751}, {"determining": "( Max( ( PN - BR ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "Min( ( RRSe - MLU ) ,( DS + MLU ) )", "obj1": 0.45372460496614, "obj2": 0.47121896853924666}, {"determining": "( Max( ( ARS - ARS ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) * ( MUR - MLU ) ) + MUM ) * ( Max( ( MUR / DS ),( MUR / CS ) ) - ( ( DS - MUC ) * ( MLU * RMSe ) ) ) )", "obj1": 0.9367945823927766, "obj2": 0.04804940943836627}, {"determining": "( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) )", "choosing": "( ( RCSe - MLU ) + Max( MUM,MUC ) )", "obj1": 0.9548532731376975, "obj2": 0.03530424613274131}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( Min( ( ( ( Max( FirstVNF_RAM,( ACS - AMS ) ) + MRS ) / ( ( MRS / FirstVNF_RAM ) / MDR ) ) - ACS ) ,( FirstVNF_Mem * MDR ) ) - Max( BR,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( RRSe * ( DS / CS ) ) ),RMSe ) ,Min( Max( CS,( RCSe / Max( ( ( RRSe + Min( DS ,CS ) ) - ( RMSe * MUM ) ),MLU ) ) ) ,RMSe ) )", "obj1": 0.8532731376975169, "obj2": 0.09022101238316346}, {"determining": "( Max( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),( ( Const - Const ) - Min( FirstVNF_Mem_Server ,( BR / Max( Const,PN ) ) ) ) ),AMS ) - Max( BR,ACS ) )", "choosing": "Min( ( RCSe + RMSe ) ,Min( Max( CS,( ( MUM * MUM ) / RCSe ) ) ,RMSe ) )", "obj1": 0.7855530474040632, "obj2": 0.15108183509915837}, {"determining": "Max( Max( MDR,RRS ),( FirstVNF_RAM * ( MRS + FirstVNF_CPU ) ) )", "choosing": "Max( ( RMSe - RRSe ),( MUM * DS ) )", "obj1": 0.5914221218961625, "obj2": 0.3533417994492546}, {"determining": "( Max( ARS,MRS ) * ( MRS + FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2505643340857788, "obj2": 0.6436603211762474}, {"determining": "( ARS + ( ARS + BR ) )", "choosing": "( ( ( ( MUR * RCSe ) - Max( MUM,RCSe ) ) * RMSe ) + ( RCSe / ( Max( CS,MUM ) + Min( ( RRSe - MUR ) ,( MUC / ( CS - ( DS * MLU ) ) ) ) ) ) )", "obj1": 0.42437923250564336, "obj2": 0.4956564843018151}, {"determining": "( ( PN + FirstVNF_CPU_Server ) + ( ( PN - AMS ) - ( Const - MRS ) ) )", "choosing": "( ( MLU / RMSe ) + Max( MUM,MUC ) )", "obj1": 0.7742663656884876, "obj2": 0.1709216498903247}, {"determining": "Max( Max( ( FirstVNF_CPU_Server / CRS ),( FirstVNF_Mem_Server * PN ) ),( FirstVNF_RAM + FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( Max( MUM,MLU ),Min( MUR ,MUM ) ) - RRSe ),( DS - ( MLU / ( ( ( ( MUC - MUM ) * RRSe ) * ( RMSe * ( MUM / RCSe ) ) ) * MUC ) ) ) )", "obj1": 0.3747178329571106, "obj2": 0.5386319580740851}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( MRS - ( MDR - ( ( ( FirstVNF_CPU_Server / Max( ARS,FirstVNF_Mem ) ) * PN ) + DDR ) ) ) - ( CRS + FirstVNF_CPU ) )", "choosing": "( Max( RRSe,RMSe ) - ( DS + MUR ) )", "obj1": 0.6975169300225733, "obj2": 0.23596895455979594}], "3": [{"determining": "( ( MRS - ( MDR - ( ( ( FirstVNF_CPU_Server / Max( ARS,FirstVNF_Mem ) ) * PN ) + DDR ) ) ) - ( CRS + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,( RRSe - ( Min( ( MLU / RCSe ) ,DS ) * ( RMSe * CS ) ) ) ) ,( DS + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( Max( Min( FirstVNF_RAM ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ),( Min( Min( ARS ,PN ) ,AMS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( Max( RRSe,MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MRS ) / ( AMS + ( FirstVNF_Mem / FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( MUR / ( MUR * CS ) ),RMSe ),( MUM - Max( RRSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / ( DDR + FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,MUM ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( Max( ( FirstVNF_Mem - FirstVNF_RAM ),FirstVNF_RAM_Server ) - FirstVNF_RAM ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - Min( Min( MUC ,Max( MUC,MUR ) ) ,Max( Min( MUR ,CS ),MUC ) ) ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( ( Min( BR ,MDR ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) / ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - MLU ) * ( MUR + CS ) ),( ( ( Min( MUM ,( MLU * DS ) ) / MUC ) / MUM ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) * BR ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,( ( ( ( ( MLU * ( RRSe / ( RCSe - CS ) ) ) * RCSe ) + ( ( CS - MUM ) / ( RCSe + ( CS * MUR ) ) ) ) / RCSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( Max( ACS,Const ) * ( ACS * ACS ) )", "choosing": "( ( RMSe * MUC ) - ( MUM * ( ( CS - MUC ) - ( ( Min( DS ,RMSe ) / DS ) * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( FirstVNF_Mem,ACS ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( ( Max( Min( DS ,MUC ),( RRSe / RMSe ) ) + Max( RCSe,Min( RMSe ,DS ) ) ),( DS + Max( Max( RCSe,MUR ),Max( CS,RRSe ) ) ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,FirstVNF_Mem ) ,( Min( ( FirstVNF_CPU / Const ) ,RRS ) - DDR ) )", "choosing": "Min( Max( Min( MLU ,MUR ),( Min( ( ( RRSe * MLU ) * DS ) ,MLU ) * ( RMSe - DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Min( ( Max( ( MRS - ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM ) * RRS ) ,FirstVNF_Mem ) ) - Min( MRS ,( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( RRSe + MUR ) ) + ( ( MUR + RCSe ) - Min( MUR ,( ( DS + MUM ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - MDR ) - FirstVNF_CPU ) ,( ( RRS - CRS ) / ( FirstVNF_CPU_Server - BR ) ) )", "choosing": "( ( ( ( MLU / RRSe ) + Min( RCSe ,CS ) ) - Max( ( DS + DS ),( MUR - MLU ) ) ) + ( ( ( DS / RRSe ) * Max( CS,( MUM - Min( DS ,RCSe ) ) ) ) - ( Min( RRSe ,RRSe ) - Min( RMSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( ( ( MRS * ( ( Min( Min( DDR ,DDR ) ,BR ) / FirstVNF_Mem_Server ) * DDR ) ) * FirstVNF_RAM ) - CRS ) )", "choosing": "Max( ( MUM - RRSe ),( CS / ( ( Max( Max( RMSe,( MUM + ( MLU / MLU ) ) ),MUR ) - RRSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( ( ( Const / RRS ) * Min( Const ,MRS ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( ( ( DS / RMSe ) * ( RCSe * MUC ) ) ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.3611738148984199, "obj2": 0.5506018549793145}, {"determining": "( Max( ( PN - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ),MRS ) - ( ( ARS / Min( ( FirstVNF_Mem_Server + BR ) ,( ( FirstVNF_CPU - Const ) - ACS ) ) ) + BR ) )", "choosing": "( ( MUM - CS ) * Min( MUM ,( ( CS + MUC ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,BR ) - FirstVNF_CPU_Server ) )", "choosing": "Min( MUM ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( ( MDR - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.4650112866817156, "obj2": 0.4171440038093851}, {"determining": "( ( ( Const * PN ) * DDR ) - ACS )", "choosing": "Min( ( ( Min( RMSe ,DS ) + Max( RMSe,RCSe ) ) * ( Min( RRSe ,( RRSe * CS ) ) / ( RCSe + RCSe ) ) ) ,Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MDR * MRS ),CRS ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Min( Max( RRSe,RMSe ) ,( MUM / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * MRS ) - ( CRS + AMS ) )", "choosing": "Min( Max( RRSe,RMSe ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) / ( ( Const + ( Max( RRS,DDR ) + ( FirstVNF_CPU - ARS ) ) ) * Const ) ) - Min( ( ( DDR * MDR ) - ( FirstVNF_RAM - DDR ) ) ,( ( ARS / FirstVNF_CPU_Server ) * Min( ACS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( ( MLU / MUC ),( ( MUR * Max( ( DS / ( Min( RRSe ,DS ) - ( RRSe / MLU ) ) ),MUM ) ) * ( ( Min( Min( MUR ,CS ) ,MUM ) + CS ) - RCSe ) ) ),Max( ( MLU + RRSe ),Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( ( PN / Min( ( ( CRS * Max( PN,ARS ) ) * DDR ) ,FirstVNF_Mem_Server ) ) / ( Const * ACS ) ) - Max( Max( BR,FirstVNF_RAM ),( AMS * RRS ) ) )", "choosing": "Max( Max( DS,Max( MUR,( MUC / MUR ) ) ),( ( MLU * RRSe ) / ( Max( ( MUC - Max( MUC,RMSe ) ),Max( MUC,DS ) ) * ( MUR * CS ) ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( DS,RMSe ) )", "obj1": 0.4288939051918736, "obj2": 0.4861272122351947}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( Max( Min( FirstVNF_RAM ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ),( Min( Min( ARS ,PN ) ,AMS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( Max( RRSe,MUC ) * RCSe ) )", "obj1": 0.8103837471783296, "obj2": 0.12845701226277914}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( Max( Min( FirstVNF_RAM ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ),( Min( Min( ARS ,PN ) ,AMS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( Max( RRSe,MUC ) * RCSe ) )", "obj1": 0.8103837471783296, "obj2": 0.12845701226277914}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( Max( Min( FirstVNF_RAM ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ),( Min( Min( ARS ,PN ) ,AMS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( Max( RRSe,MUC ) * RCSe ) )", "obj1": 0.8103837471783296, "obj2": 0.12845701226277914}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "Min( Max( RCSe,RMSe ) ,Min( Max( CS,( RCSe / MLU ) ) ,RMSe ) )", "obj1": 0.8103837471783296, "obj2": 0.12845701226277914}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "Min( Max( ( ( FirstVNF_RAM + CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * ( DS - CS ) )", "obj1": 0.9300225733634312, "obj2": 0.05249146708467994}, {"determining": "Min( Max( ( ACS - ( MRS - Min( Max( FirstVNF_Mem_Server,RRS ) ,( Min( ARS ,BR ) * ( ( BR + RRS ) * ( RRS / PN ) ) ) ) ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( RRSe - MLU ) ,Min( MUM ,MUR ) )", "obj1": 0.9413092550790068, "obj2": 0.04019575323473265}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( BR,Max( BR,PN ) ) * Min( DDR ,AMS ) ) ) )", "choosing": "Min( Max( ( MUM * MUR ),RMSe ) ,( MUM / MUM ) )", "obj1": 0.9977426636568849, "obj2": 0.0012102115038945922}, {"determining": "( Max( ( PN - BR ),MRS ) - ( ( CRS / FirstVNF_CPU ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) ) ),Max( MLU,RRSe ) ) - Min( MLU ,( RMSe + RCSe ) ) ) )", "obj1": 0.45598194130925507, "obj2": 0.46082574578688523}, {"determining": "( Const - Max( ( ( DDR / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ),( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( Min( MUM ,RRSe ) + MUR ) - ( ( ( RRSe - MUM ) - Min( MUC ,RCSe ) ) * Max( RCSe,Max( MUC,CS ) ) ) )", "obj1": 0.90744920993228, "obj2": 0.07256429479546414}, {"determining": "( ( ( Min( ( FirstVNF_Mem / ( ARS + ( BR * FirstVNF_RAM_Server ) ) ) ,MRS ) - ACS ) + Max( MRS,FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server )", "choosing": "( ( Min( ( ( ( MUR - ( RMSe / MUR ) ) - MUM ) - Min( MUC ,RCSe ) ) ,RRSe ) * ( RMSe - CS ) ) / Max( ( MUC * MLU ),RMSe ) )", "obj1": 0.417607223476298, "obj2": 0.5024370872299059}, {"determining": "( Max( ( PN - BR ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "Min( ( RRSe - MLU ) ,( DS + MLU ) )", "obj1": 0.45372460496614, "obj2": 0.47121896853924666}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( Min( ( ( ( Max( FirstVNF_RAM,( ACS - AMS ) ) + MRS ) / ( ( MRS / FirstVNF_RAM ) / MDR ) ) - ACS ) ,( FirstVNF_Mem * MDR ) ) - Max( BR,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( RRSe * ( DS / CS ) ) ),RMSe ) ,Min( Max( CS,( RCSe / Max( ( ( RRSe + Min( DS ,CS ) ) - ( RMSe * MUM ) ),MLU ) ) ) ,RMSe ) )", "obj1": 0.8532731376975169, "obj2": 0.09022101238316346}, {"determining": "( Max( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),( ( Const - Const ) - Min( FirstVNF_Mem_Server ,( BR / Max( Const,PN ) ) ) ) ),AMS ) - Max( BR,ACS ) )", "choosing": "Min( ( RCSe + RMSe ) ,Min( Max( CS,( ( MUM * MUM ) / RCSe ) ) ,RMSe ) )", "obj1": 0.7855530474040632, "obj2": 0.15108183509915837}, {"determining": "( Max( ARS,MRS ) * ( MRS + FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2505643340857788, "obj2": 0.6436603211762474}, {"determining": "( ARS + ( ARS + BR ) )", "choosing": "( ( ( ( MUR * RCSe ) - Max( MUM,RCSe ) ) * RMSe ) + ( RCSe / ( Max( CS,MUM ) + Min( ( RRSe - MUR ) ,( MUC / ( CS - ( DS * MLU ) ) ) ) ) ) )", "obj1": 0.42437923250564336, "obj2": 0.4956564843018151}, {"determining": "( ( PN + FirstVNF_CPU_Server ) + ( ( PN - AMS ) - ( Const - MRS ) ) )", "choosing": "( ( MLU / RMSe ) + Max( MUM,MUC ) )", "obj1": 0.7742663656884876, "obj2": 0.1709216498903247}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( Min( Max( Min( ( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) ) ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "Min( Max( RCSe,RMSe ) ,Min( Max( CS,( RCSe / MLU ) ) ,RMSe ) )", "obj1": 0.8103837471783296, "obj2": 0.12845701226277914}, {"determining": "Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.9413092550790068, "obj2": 0.04019575323473265}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * ( DS - CS ) )", "obj1": 0.5914221218961625, "obj2": 0.23410131796544642}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( Max( ( ARS - ARS ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) * ( MUR - MLU ) ) + MUM ) * ( Max( ( MUR / DS ),( MUR / CS ) ) - ( ( DS - MUC ) * ( MLU * RMSe ) ) ) )", "obj1": 0.9367945823927766, "obj2": 0.047905077239074154}, {"determining": "( Const - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( MUR + ( ( ( RMSe - Max( MUC,RMSe ) ) - ( MLU + Max( CS,RMSe ) ) ) / ( Min( MLU ,( CS - MUR ) ) / MLU ) ) ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 0.9006772009029346, "obj2": 0.07791754596002058}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Min( ( ( DDR * MDR ) - ( FirstVNF_RAM - DDR ) ) ,( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Max( ( MLU / MUC ),( MUR * MLU ) ),( ( MLU + RRSe ) / ( MUM * CS ) ) )", "obj1": 0.3747178329571106, "obj2": 0.5055643964125326}, {"determining": "( ( Min( ACS ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( MLU / ( CS + RMSe ) )", "obj1": 0.40632054176072235, "obj2": 0.5047322388096493}, {"determining": "( Min( ACS ,DDR ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( RCSe + MLU ) / ( RMSe + MLU ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - ( ( Min( MUM ,RRSe ) + MUR ) - ( RRSe * Max( RCSe,Max( MUC,CS ) ) ) ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.43340857787810383, "obj2": 0.4849590531697741}, {"determining": "( Min( Max( Min( ARS ,Const ),Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) ) ,AMS ) - Max( BR,ACS ) )", "choosing": "Min( Max( RCSe,RMSe ) ,Min( Max( CS,( RCSe / MLU ) ) ,RMSe ) )", "obj1": 0.8103837471783296, "obj2": 0.12845701226277914}, {"determining": "( Min( Max( Min( ARS ,Const ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "Min( Max( RCSe,RMSe ) ,Min( Max( CS,( RCSe / MLU ) ) ,RMSe ) )", "obj1": 0.8103837471783296, "obj2": 0.12845701226277914}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "Min( Max( Min( RMSe ,( RRSe * ( RCSe / CS ) ) ),RMSe ) ,Min( Max( CS,( RCSe / MLU ) ) ,RMSe ) )", "obj1": 0.8532731376975169, "obj2": 0.09022101238316346}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "Max( ( DS + DS ),( MUM - RRSe ) )", "obj1": 0.8148984198645598, "obj2": 0.11475489154913729}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( FirstVNF_RAM - ACS ) )", "choosing": "Min( ( ( RCSe / RRSe ) * ( MUR * MUM ) ) ,( DS - CS ) )", "obj1": 0.9571106094808126, "obj2": 0.022543736042689725}, {"determining": "Min( Max( ( ACS - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.9413092550790068, "obj2": 0.04019575323473265}, {"determining": "( Max( FirstVNF_Mem_Server,PN ) / ( Const + CRS ) )", "choosing": "Min( ( MLU - RRSe ) ,( Max( RMSe,Min( Max( ( CS - Max( Max( MLU,MUC ),RCSe ) ),RCSe ) ,CS ) ) - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( Max( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.9413092550790068, "obj2": 0.04019575323473265}, {"determining": "Max( ( Max( MDR,( ( DDR - Min( ( ( RRS / CRS ) / FirstVNF_Mem ) ,ACS ) ) + ( ( FirstVNF_RAM_Server / MRS ) / DDR ) ) ) * Min( PN ,FirstVNF_RAM_Server ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( RRSe / ( Max( RMSe,MLU ) / Min( ( MUR * Max( MUR,( ( ( MUR + RCSe ) + MLU ) * Min( Min( MUR ,RRSe ) ,CS ) ) ) ) ,Max( Min( ( DS / Max( Min( DS ,DS ),MUC ) ) ,( RCSe - DS ) ),Max( DS,Max( Min( ( CS - MUR ) ,( MUM * MUM ) ),CS ) ) ) ) ) )", "obj1": 0.35665914221218964, "obj2": 0.5598591207361396}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - FirstVNF_CPU )", "choosing": "( ( ( RRSe * RCSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.29345372460496616, "obj2": 0.6203657918100192}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "( ( ( RRSe * ( ( RCSe * MUM ) / RRSe ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.2618510158013544, "obj2": 0.6216378527666998}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "Min( Max( RCSe,RMSe ) ,Min( Max( CS,( RCSe / MLU ) ) ,RMSe ) )", "obj1": 0.7855530474040632, "obj2": 0.15108183509915837}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( PN + FirstVNF_CPU_Server ) + ( ( DDR - AMS ) - ( ARS - CRS ) ) )", "choosing": "( Max( ( RRSe + ( MLU / ( ( DS + MUR ) / RRSe ) ) ),RCSe ) / ( RCSe - DS ) )", "obj1": 0.7923250564334086, "obj2": 0.13581598970955958}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( ( Max( MLU,MLU ) * ( MUR - MLU ) ) + MUM ) * ( Max( ( MUR / DS ),( MUR / CS ) ) - ( ( DS - MUC ) * ( MLU * RMSe ) ) ) )", "obj1": 0.9729119638826185, "obj2": 0.010489174139442826}, {"determining": "( Max( ( ARS - ARS ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.9480812641083521, "obj2": 0.030080372048137002}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( Max( ( FirstVNF_CPU / Max( ( DDR - MDR ),MDR ) ),( Min( AMS ,CRS ) + FirstVNF_Mem_Server ) ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + Max( ( RRSe / MLU ),Max( ( ( CS / MUC ) * ( MUR - RRSe ) ),RRSe ) ) ) )", "obj1": 0.9774266365688488, "obj2": 0.006983572798556095}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,Max( ( FirstVNF_CPU / Max( ( DDR - MDR ),MDR ) ),( Min( AMS ,CRS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.5191873589164786, "obj2": 0.2842897571819904}, {"determining": "( ( Max( Const,FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server )", "choosing": "( ( Min( ( ( RRSe - MUM ) - Min( MUC ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) ) / Max( ( MUC * MLU ),RMSe ) )", "obj1": 0.417607223476298, "obj2": 0.5024370872299059}, {"determining": "( Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ),MRS ) - ( ( CRS / ARS ) + BR ) )", "choosing": "( ( MUM - MLU ) * ( Max( Min( RMSe ,MUC ),RRSe ) - Min( ( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) ,( RMSe + RCSe ) ) ) )", "obj1": 0.345372460496614, "obj2": 0.5648525530489623}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / ( Max( ( PN - BR ),MRS ) - ( ( CRS / FirstVNF_CPU ) + BR ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + MUC ) )", "obj1": 0.9593679458239278, "obj2": 0.015363197936270731}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.9774266365688488, "obj2": 0.006983572798556095}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU + RRSe ) / Min( MUM ,RCSe ) ) )", "obj1": 0.3227990970654628, "obj2": 0.594191224072067}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.7200902934537246, "obj2": 0.18949854211528044}, {"determining": "( Min( RRS ,PN ) - Max( MDR,ACS ) )", "choosing": "Min( ( ( MUC + DS ) - MUC ) ,( DS - CS ) )", "obj1": 0.6410835214446953, "obj2": 0.199335680984}, {"determining": "( Max( ( ( BR - DDR ) / ( RRS + ARS ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * ( MRS + FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_CPU / ARS ) - Max( CRS,ACS ) ),( ( FirstVNF_Mem - AMS ) - ( FirstVNF_CPU / MRS ) ) ) )", "choosing": "( ( ( RCSe * MUM ) / RRSe ) - ( ( CS + MUM ) + MUC ) )", "obj1": 0.9503386004514672, "obj2": 0.028615194704280558}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( ( ( MUC - MUM ) * RRSe ) * ( RMSe * ( MUM / RCSe ) ) ),( Min( MLU ,MUM ) * MUC ) ) )", "obj1": 0.8623024830699775, "obj2": 0.08194107879076629}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( ( ( Const / RRS ) * Min( Const ,MRS ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( ( ( DS / RMSe ) * ( RCSe * MUC ) ) ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.3611738148984199, "obj2": 0.5506018549793145}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + ARS )", "choosing": "( ( ( ( MUR * RCSe ) - Max( MUM,RCSe ) ) * RMSe ) + ( RCSe / ( Max( CS,MUM ) + Min( ( CS - MUR ) ,( MUC / MUR ) ) ) ) )", "obj1": 0.42437923250564336, "obj2": 0.4956564843018151}, {"determining": "( ( ( PN + ACS ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Max( ARS,MDR ) ) ) )", "choosing": "( Min( MUR ,MUR ) / ( MUM + RCSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( ( MDR / Min( MRS ,FirstVNF_Mem ) ) - Min( MRS ,( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( ( ( RCSe - MLU ) + Max( MUM,MUC ) ) + MUR ) ) + ( ( MUR + RCSe ) - Min( MUR ,( ( DS + MUM ) + RRSe ) ) ) )", "obj1": 0.327313769751693, "obj2": 0.5896211142244862}, {"determining": "( ( Min( Const ,MRS ) + FirstVNF_CPU ) - Max( ( FirstVNF_CPU_Server * ACS ),ACS ) )", "choosing": "Min( ( ( RRSe - MUM ) - Min( ( ( DS / RMSe ) * ( RCSe * MUC ) ) ,RCSe ) ) ,Max( Min( ( RMSe - RMSe ) ,MUR ),RMSe ) )", "obj1": 0.9209932279909706, "obj2": 0.07221582797589463}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - Max( BR,ACS ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( ( ( DS / RMSe ) * ( RCSe * MUC ) ) ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.3611738148984199, "obj2": 0.5506018549793145}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( ( ( Const / RRS ) * Min( Const ,MRS ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,Max( DS,RMSe ) )", "obj1": 0.4288939051918736, "obj2": 0.4861272122351947}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,Max( ( FirstVNF_CPU / Max( ( DDR - MDR ),MDR ) ),( Min( AMS ,CRS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MUC - ( MUR - RRSe ) ) + ( RMSe - Min( RMSe ,MUR ) ) )", "obj1": 0.8442437923250564, "obj2": 0.11262279563012487}], "4": [{"determining": "( ( MRS - ( MDR - ( ( ( FirstVNF_CPU_Server / Max( ARS,FirstVNF_Mem ) ) * PN ) + DDR ) ) ) - ( CRS + FirstVNF_CPU ) )", "choosing": "Min( Max( RRSe,( RRSe - ( Min( ( MLU / RCSe ) ,DS ) * ( RMSe * CS ) ) ) ) ,( DS + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,FirstVNF_CPU_Server ) - Min( Max( Min( FirstVNF_RAM ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ),( Min( Min( ARS ,PN ) ,AMS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( Max( RRSe,MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + ( PN - ACS ) )", "choosing": "( Min( CS ,MUM ) - ( MLU - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MRS ) / ( AMS + ( FirstVNF_Mem / FirstVNF_Mem ) ) )", "choosing": "Max( Max( ( MUR / ( MUR * CS ) ),RMSe ),( MUM - Max( RRSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) / ( DDR + FirstVNF_Mem_Server ) )", "choosing": "Max( Max( MLU,MUM ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( Max( ( FirstVNF_Mem - FirstVNF_RAM ),FirstVNF_RAM_Server ) - FirstVNF_RAM ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - Min( Min( MUC ,Max( MUC,MUR ) ) ,Max( Min( MUR ,CS ),MUC ) ) ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "Min( ( Min( BR ,MDR ) + ( ACS + FirstVNF_CPU_Server ) ) ,( ( ACS / ARS ) / ( AMS + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM - MLU ) * ( MUR + CS ) ),( ( ( Min( MUM ,( MLU * DS ) ) / MUC ) / MUM ) + Max( RCSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_Mem ) * BR ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,( ( ( ( ( MLU * ( RRSe / ( RCSe - CS ) ) ) * RCSe ) + ( ( CS - MUM ) / ( RCSe + ( CS * MUR ) ) ) ) / RCSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( Max( ACS,Const ) * ( ACS * ACS ) )", "choosing": "( ( RMSe * MUC ) - ( MUM * ( ( CS - MUC ) - ( ( Min( DS ,RMSe ) / DS ) * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM * CS ) * RMSe ) * ( ( RRSe / MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR / FirstVNF_CPU_Server ) * ( PN - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) * ( FirstVNF_RAM_Server / DDR ) ) ) ,Min( ( ( BR - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) ,Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS / AMS ) ) ) )", "choosing": "( ( RCSe - DS ) / Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MRS,FirstVNF_Mem ) ,( Min( ( FirstVNF_CPU / Const ) ,RRS ) - DDR ) )", "choosing": "Min( Max( Min( MLU ,MUR ),( Min( ( ( RRSe * MLU ) * DS ) ,MLU ) * ( RMSe - DS ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Min( ( Max( ( MRS - ( ( FirstVNF_CPU_Server - MDR ) / FirstVNF_CPU_Server ) ),FirstVNF_RAM ) * RRS ) ,FirstVNF_Mem ) ) - Min( MRS ,( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( RRSe + MUR ) ) + ( ( MUR + RCSe ) - Min( MUR ,( ( DS + MUM ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - MDR ) - FirstVNF_CPU ) ,( ( RRS - CRS ) / ( FirstVNF_CPU_Server - BR ) ) )", "choosing": "( ( ( ( MLU / RRSe ) + Min( RCSe ,CS ) ) - Max( ( DS + DS ),( MUR - MLU ) ) ) + ( ( ( DS / RRSe ) * Max( CS,( MUM - Min( DS ,RCSe ) ) ) ) - ( Min( RRSe ,RRSe ) - Min( RMSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) / ( ( ( MRS * ( ( Min( Min( DDR ,DDR ) ,BR ) / FirstVNF_Mem_Server ) * DDR ) ) * FirstVNF_RAM ) - CRS ) )", "choosing": "Max( ( MUM - RRSe ),( CS / ( ( Max( Max( RMSe,( MUM + ( MLU / MLU ) ) ),MUR ) - RRSe ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( PN - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ),MRS ) - ( ( ARS / Min( ( FirstVNF_Mem_Server + BR ) ,( ( FirstVNF_CPU - Const ) - ACS ) ) ) + BR ) )", "choosing": "( ( MUM - CS ) * Min( MUM ,( ( CS + MUC ) - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,BR ) - FirstVNF_CPU_Server ) )", "choosing": "Min( MUM ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_RAM_Server ) ,( Min( FirstVNF_CPU_Server ,CRS ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM + MLU ) + ( RCSe - RRSe ) ) ,Max( ( MUR * RMSe ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( ( MDR - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.4650112866817156, "obj2": 0.4171440038093851}, {"determining": "( ( ( Const * PN ) * DDR ) - ACS )", "choosing": "Min( ( ( Min( RMSe ,DS ) + Max( RMSe,RCSe ) ) * ( Min( RRSe ,( RRSe * CS ) ) / ( RCSe + RCSe ) ) ) ,Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MDR * MRS ),CRS ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Min( Max( RRSe,RMSe ) ,( MUM / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "Min( Max( ( ( FirstVNF_RAM + CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * ( DS - CS ) )", "obj1": 0.9300225733634312, "obj2": 0.05249146708467994}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( Min( ( ( ( Max( FirstVNF_RAM,( ACS - AMS ) ) + MRS ) / ( ( MRS / FirstVNF_RAM ) / MDR ) ) - ACS ) ,( FirstVNF_Mem * MDR ) ) - Max( BR,ACS ) )", "choosing": "Min( Max( Min( RRSe ,( RRSe * ( DS / CS ) ) ),RMSe ) ,Min( Max( CS,( RCSe / Max( ( ( RRSe + Min( DS ,CS ) ) - ( RMSe * MUM ) ),MLU ) ) ) ,RMSe ) )", "obj1": 0.8532731376975169, "obj2": 0.09022101238316346}, {"determining": "( Max( ARS,MRS ) * ( MRS + FirstVNF_CPU ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( RMSe / CS ) ),( ( MUR + DS ) + ( MUR * DS ) ) ) / ( ( ( MUM * DS ) / Max( MUM,MUR ) ) - ( Min( MUR ,RRSe ) * ( MUC / MUC ) ) ) )", "obj1": 0.2505643340857788, "obj2": 0.6436603211762474}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * ( DS - CS ) )", "obj1": 0.5914221218961625, "obj2": 0.23410131796544642}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Min( ( ( DDR * MDR ) - ( FirstVNF_RAM - DDR ) ) ,( ( ( FirstVNF_CPU_Server * CRS ) / AMS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Max( ( MLU / MUC ),( MUR * MLU ) ),( ( MLU + RRSe ) / ( MUM * CS ) ) )", "obj1": 0.3747178329571106, "obj2": 0.5055643964125326}, {"determining": "( Min( ACS ,DDR ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( RCSe + MLU ) / ( RMSe + MLU ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "Min( Max( Min( RMSe ,( RRSe * ( RCSe / CS ) ) ),RMSe ) ,Min( Max( CS,( RCSe / MLU ) ) ,RMSe ) )", "obj1": 0.8532731376975169, "obj2": 0.09022101238316346}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "Max( ( DS + DS ),( MUM - RRSe ) )", "obj1": 0.8148984198645598, "obj2": 0.11475489154913729}, {"determining": "( ( FirstVNF_RAM + CRS ) / ( FirstVNF_RAM - ACS ) )", "choosing": "Min( ( ( RCSe / RRSe ) * ( MUR * MUM ) ) ,( DS - CS ) )", "obj1": 0.9571106094808126, "obj2": 0.022543736042689725}, {"determining": "( Max( FirstVNF_Mem_Server,PN ) / ( Const + CRS ) )", "choosing": "Min( ( MLU - RRSe ) ,( Max( RMSe,Min( Max( ( CS - Max( Max( MLU,MUC ),RCSe ) ),RCSe ) ,CS ) ) - CS ) )", "obj1": 0.7381489841986456, "obj2": 0.17319540359236138}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - FirstVNF_CPU )", "choosing": "( ( ( RRSe * RCSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.29345372460496616, "obj2": 0.6203657918100192}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / ( ACS * Const ) ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "( ( ( RRSe * ( ( RCSe * MUM ) / RRSe ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.2618510158013544, "obj2": 0.6216378527666998}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( Max( ( FirstVNF_CPU / Max( ( DDR - MDR ),MDR ) ),( Min( AMS ,CRS ) + FirstVNF_Mem_Server ) ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + Max( ( RRSe / MLU ),Max( ( ( CS / MUC ) * ( MUR - RRSe ) ),RRSe ) ) ) )", "obj1": 0.9774266365688488, "obj2": 0.006983572798556095}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,Max( ( FirstVNF_CPU / Max( ( DDR - MDR ),MDR ) ),( Min( AMS ,CRS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.5191873589164786, "obj2": 0.2842897571819904}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.9774266365688488, "obj2": 0.006983572798556095}, {"determining": "( Min( RRS ,PN ) - Max( MDR,ACS ) )", "choosing": "Min( ( ( MUC + DS ) - MUC ) ,( DS - CS ) )", "obj1": 0.6410835214446953, "obj2": 0.199335680984}, {"determining": "( FirstVNF_Mem_Server / ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * Max( ( ( ( MUC - MUM ) * RRSe ) * ( RMSe * ( MUM / RCSe ) ) ),( Min( MLU ,MUM ) * MUC ) ) )", "obj1": 0.8623024830699775, "obj2": 0.08194107879076629}, {"determining": "( ( ( PN + ACS ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Max( ARS,MDR ) ) ) )", "choosing": "( Min( MUR ,MUR ) / ( MUM + RCSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "Min( ( Min( ( FirstVNF_CPU / CRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) + Min( DDR ,MDR ) ) ) ,( ( ( FirstVNF_Mem / AMS ) * Min( PN ,AMS ) ) - ( Max( BR,Max( BR,PN ) ) * Min( DDR ,AMS ) ) ) )", "choosing": "Max( Max( ( RMSe * CS ),( MUR * MLU ) ),( ( MLU * RRSe ) / ( Max( ( MUC - Max( MUC,RRSe ) ),Max( MUC,DS ) ) * ( MUR * CS ) ) ) )", "obj1": 0.42663656884875845, "obj2": 0.4500464721236973}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * ( DS - CS ) )", "obj1": 0.5643340857787811, "obj2": 0.2561384529278366}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( ( ( Const / RRS ) * Min( Const ,MRS ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( ( ( DS / RMSe ) * ( RCSe * MUC ) ) ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.34085778781038373, "obj2": 0.5517819811242365}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,PN ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.35891647855530473, "obj2": 0.5199583919730288}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( Max( ACS,FirstVNF_Mem ) - Min( Max( Min( FirstVNF_RAM ,Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - FirstVNF_RAM_Server ),( Min( AMS ,CRS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.4898419864559819, "obj2": 0.4114475220519206}, {"determining": "Min( Max( ( ( FirstVNF_RAM + CRS ) / ( FirstVNF_RAM - FirstVNF_CPU ) ),MDR ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,( ( RRSe + MUM ) + DS ) ) * ( DS - CS ) )", "obj1": 0.9300225733634312, "obj2": 0.05249146708467994}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,Max( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) / Max( ( DDR - MDR ),MDR ) ),( Min( AMS ,CRS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( DS,RMSe ) ) + RCSe ) / ( CS + RMSe ) )", "obj1": 0.7878103837471784, "obj2": 0.12039628692237613}, {"determining": "( Min( Max( Min( FirstVNF_RAM ,Max( ( FirstVNF_CPU / Max( ( DDR - MDR ),MDR ) ),( Min( AMS ,CRS ) + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "Min( ( RRSe - CS ) ,Max( DS,RMSe ) )", "obj1": 0.7900677200902935, "obj2": 0.12017457446238253}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / ( Max( ( PN - BR ),MRS ) - ( ( CRS / FirstVNF_CPU ) + BR ) ) ) ) ) - Max( Min( ( Min( ARS ,Const ) - ACS ) ,( FirstVNF_Mem * MDR ) ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + MUC ) )", "obj1": 0.510158013544018, "obj2": 0.32949417249494195}, {"determining": "( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) - Max( BR,ACS ) )", "choosing": "Min( Max( Min( RMSe ,( RRSe * ( DS / CS ) ) ),RMSe ) ,Min( Max( CS,( RCSe / MLU ) ) ,RMSe ) )", "obj1": 0.8194130925507901, "obj2": 0.11462133658782755}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Max( ACS,Const ) ) ) )", "choosing": "( ( DS / Min( DS ,RMSe ) ) / ( CS + RMSe ) )", "obj1": 0.9774266365688488, "obj2": 0.006983572798556095}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.9774266365688488, "obj2": 0.006983572798556095}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( PN + FirstVNF_CPU_Server ) + ( ( PN - AMS ) - ( Const - MRS ) ) )", "choosing": "( ( MLU / RMSe ) + Max( MUM,MUC ) )", "obj1": 0.7674943566591422, "obj2": 0.17267384878125056}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.9774266365688488, "obj2": 0.006983572798556095}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - ( DDR / FirstVNF_RAM ) )", "choosing": "( ( MLU + RCSe ) / Min( ( ( ( MUM * RCSe ) + Max( MUM,CS ) ) * ( ( CS * RMSe ) / ( MLU / RMSe ) ) ) ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) ) )", "obj1": 0.9322799097065463, "obj2": 0.031460238398064534}, {"determining": "( Const - Max( ( ( DDR / FirstVNF_RAM ) * ( RRS + FirstVNF_CPU ) ),( FirstVNF_RAM - ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) ) ) )", "choosing": "Min( RCSe ,( ( ( CS / CS ) - ( MUM * MUR ) ) / Min( ( MUM / CS ) ,( RCSe / RCSe ) ) ) )", "obj1": 0.9029345372460497, "obj2": 0.05426200993449034}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( Const * BR ) ) ) / DDR ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( DS / ( RRSe / ( MUM / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.9932279909706546, "obj2": 0.0025441164116658662}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.9774266365688488, "obj2": 0.006983572798556095}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( ( Max( ARS,MRS ) * ( MRS + FirstVNF_CPU ) ) ,( Const * BR ) ) ) / DDR ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( DS / ( MUM * DS ) ) / ( CS + RMSe ) )", "obj1": 0.9796839729119639, "obj2": 0.006524505249084385}, {"determining": "( FirstVNF_RAM_Server - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( DS,RMSe ) )", "obj1": 0.6975169300225733, "obj2": 0.1753199664382449}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( Const * BR ) ) ) / DDR ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.9796839729119639, "obj2": 0.006524505249084385}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( DS / ( RRSe / ( MUM / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.9932279909706546, "obj2": 0.0025441164116658662}, {"determining": "( Max( ( PN - BR ),MRS ) - ( ( DDR * Const ) + BR ) )", "choosing": "Min( ( RRSe - MLU ) ,( DS + ( ( MLU + RCSe ) / ( CS + MUC ) ) ) )", "obj1": 0.8871331828442438, "obj2": 0.0633113932046469}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / ( Max( ( PN - BR ),MRS ) - ( ( CRS / FirstVNF_CPU ) + BR ) ) ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + MUC ) )", "obj1": 0.9593679458239278, "obj2": 0.015361597266201668}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.9774266365688488, "obj2": 0.006983572798556095}, {"determining": "( ( Max( Min( FirstVNF_RAM_Server ,AMS ),( ARS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( ACS * AMS ) ) ) + Min( ( ( Const / RRS ) * Min( Const ,MRS ) ) ,( ( Const * CRS ) - Min( FirstVNF_Mem ,MDR ) ) ) )", "choosing": "( Min( ( ( RRSe - MUM ) - Min( ( ( DS / RMSe ) * ( RCSe * MUC ) ) ,RCSe ) ) ,RRSe ) + ( RMSe - CS ) )", "obj1": 0.34085778781038373, "obj2": 0.5517819811242365}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.6410835214446953, "obj2": 0.199335680984}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - Max( BR,ACS ) )", "choosing": "Min( ( RRSe - CS ) ,Max( DS,RMSe ) )", "obj1": 0.4018058690744921, "obj2": 0.48763578189796586}, {"determining": "( ( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( Const * BR ) ) ) / DDR ) ) ) - FirstVNF_Mem_Server ) + ( PN - ACS ) )", "choosing": "( Min( ( CS + RMSe ) ,MUM ) - ( MLU - MUC ) )", "obj1": 0.9977426636568849, "obj2": 0.0005952719739565315}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( Const * BR ) ) ) / DDR ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( DS / ( RRSe / ( MUM / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.9932279909706546, "obj2": 0.0025441164116658662}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "( ( MUM - CS ) * Min( MUM ,( ( CS + MUC ) - MLU ) ) )", "obj1": 0.7697516930022573, "obj2": 0.13228186886667603}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( ( RRS + ARS ) ,( Const * BR ) ) ) / DDR ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( DS / ( RRSe / Min( Max( CS,( RCSe / MLU ) ) ,RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.9954853273137697, "obj2": 0.0010877279849184113}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( Const * BR ) ) ) / DDR ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( DS / ( RRSe / ( MUM / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.9932279909706546, "obj2": 0.0025441164116658662}, {"determining": "( Max( BR,ACS ) - Max( Max( BR,FirstVNF_RAM ),( BR * RRS ) ) )", "choosing": "( ( ( Max( CS,( RCSe / MLU ) ) * ( ( RCSe * MUM ) / RRSe ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.3002257336343115, "obj2": 0.590899249447392}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( BR * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - ( CRS / FirstVNF_CPU ) ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Min( MLU ,( RMSe + RCSe ) ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RMSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.9954853273137697, "obj2": 0.0010877279849184113}, {"determining": "( Min( Max( Min( PN ,Max( MDR,( ACS + FirstVNF_Mem_Server ) ) ),ACS ) ,AMS ) - Max( BR,ACS ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.6591422121896162, "obj2": 0.18978100918054333}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( ( MDR - FirstVNF_Mem_Server ) / ACS ) )", "choosing": "Min( ( MLU - RRSe ) ,( DS - CS ) )", "obj1": 0.4650112866817156, "obj2": 0.4171440038093851}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) )", "choosing": "( ( ( ( MUR * RCSe ) - Max( MUM,RCSe ) ) * RMSe ) + ( ( ( ( RRSe * RCSe ) / DS ) / ( CS * RMSe ) ) / ( Max( CS,MUM ) + Min( ( CS - MUR ) ,( MUC / MUR ) ) ) ) )", "obj1": 0.32054176072234764, "obj2": 0.5866346874013052}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) / ( FirstVNF_RAM + Const ) ) - FirstVNF_CPU )", "choosing": "( ( ( RRSe * RCSe ) / DS ) / ( CS * RMSe ) )", "obj1": 0.29345372460496616, "obj2": 0.6203657918100192}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.981941309255079, "obj2": 0.0053261949806499434}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( ( MRS - Min( FirstVNF_RAM ,( ( CRS / ARS ) * Const ) ) ) / DDR ) ) ) - ( ( FirstVNF_RAM_Server - DDR ) + BR ) )", "choosing": "( ( DS / ( RRSe / ( ( ( Max( RCSe,MLU ) * MUR ) + ( RRSe - Min( Max( MUR,RRSe ) ,Min( MUR ,MUC ) ) ) ) / RCSe ) ) ) / ( CS + RMSe ) )", "obj1": 0.9525959367945824, "obj2": 0.027309330171603946}, {"determining": "( ( Min( ACS ,PN ) / ( FirstVNF_CPU - ( MRS / AMS ) ) ) - Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( DDR * Const ) ) )", "choosing": "( ( ( RRSe * ( ( RCSe * MUM ) / RRSe ) ) / DS ) / ( CS * RMSe ) )", "obj1": 0.9729119638826185, "obj2": 0.009831741329656132}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM ) * ( FirstVNF_RAM * Const ) ),Min( ( FirstVNF_CPU_Server / ACS ) ,( ARS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,RCSe ) / Max( MLU,MUR ) ) / ( ( MLU / MUM ) + ( RRSe / MUM ) ) )", "obj1": 0.3295711060948081, "obj2": 0.5793396173366847}, {"determining": "( Min( ( ( ( FirstVNF_CPU_Server / Max( ARS,FirstVNF_Mem ) ) * PN ) + DDR ) ,AMS ) - Max( ACS,FirstVNF_Mem ) )", "choosing": "( ( ( MLU / RCSe ) + RCSe ) / ( CS + RMSe ) )", "obj1": 0.945823927765237, "obj2": 0.028399623302727692}, {"determining": "( ( MRS - ( MDR - ( ( ( FirstVNF_CPU_Server / Max( ARS,FirstVNF_Mem ) ) * PN ) + DDR ) ) ) - ( CRS + FirstVNF_CPU ) )", "choosing": "( ( MLU + RCSe ) / ( CS + RMSe ) )", "obj1": 0.8216704288939052, "obj2": 0.10543926002181617}]}