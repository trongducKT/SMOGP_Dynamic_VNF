{"1": [{"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,( FirstVNF_Mem_Server + Max( ( Max( FirstVNF_RAM_Server,( ACS * PN ) ) * DDR ),FirstVNF_CPU ) ) ) )", "choosing": "( Min( CS ,MLU ) / ( ( MUR + ( CS - RRSe ) ) * MUC ) )", "obj1": 0.6360153256704981, "obj2": 0.2711095371986571}, {"determining": "( ( Const + MRS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) * ( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) - Max( FirstVNF_Mem_Server,( FirstVNF_RAM * Const ) ) ) / Min( ( MDR * FirstVNF_CPU ) ,ACS ) )", "choosing": "( ( MLU / Min( ( ( ( RCSe * ( Min( MUM ,MUR ) * Max( RRSe,CS ) ) ) / Max( RRSe,Min( Min( RRSe ,MUC ) ,DS ) ) ) - ( ( ( MUC + MUR ) * CS ) + MUC ) ) ,( MLU + MUM ) ) ) * Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem,CRS ) ,( MRS * PN ) )", "choosing": "( ( CS + DS ) - ( RMSe * MLU ) )", "obj1": 0.6283524904214559, "obj2": 0.2805598927388364}, {"determining": "( ( AMS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * RCSe ) + ( MUR / MUR ) )", "obj1": 0.8486590038314177, "obj2": 0.1318857061701641}, {"determining": "( ( Const - DDR ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / ( ACS + Max( ( RRS - DDR ),FirstVNF_Mem ) ) ) ,ACS ) / ( ( FirstVNF_Mem_Server + Min( PN ,ARS ) ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * Max( MUC,RMSe ) ) - ( ( RCSe / RMSe ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( AMS + FirstVNF_Mem ) ,ARS ) ,( ( MRS * FirstVNF_RAM ) - ( Min( Min( Min( ( ( RRS - AMS ) - ( FirstVNF_CPU + Const ) ) ,CRS ) ,MRS ) ,ARS ) / RRS ) ) )", "choosing": "Max( Max( Max( ( CS * ( Min( ( MUC + ( CS - RCSe ) ) ,DS ) - MUR ) ),RCSe ),( ( MUR - MUR ) - RCSe ) ),( Min( DS ,RMSe ) / ( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Const + DDR ) ) - ( Max( CRS,PN ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) - ( MRS - RRS ) ) ) )", "choosing": "Min( ( ( RCSe * ( Min( MUC ,( ( ( DS - RMSe ) / Min( MUC ,CS ) ) / Min( MUC ,( RRSe - MUM ) ) ) ) / DS ) ) / ( RCSe + MUC ) ) ,Max( ( MUM - Max( ( ( ( MUM + ( MUC + RRSe ) ) * ( Min( RCSe ,MUC ) + RRSe ) ) + ( RRSe * MLU ) ),CS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - DDR ) + Max( BR,ARS ) ) / ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.685823754789272, "obj2": 0.2328404633065285}, {"determining": "( ( ( ACS * FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) - ( MDR - ACS ) )", "choosing": "( Max( Min( RRSe ,RCSe ),Max( MLU,RCSe ) ) + ( ( Max( MUM,RCSe ) / DS ) / ( ( MUR - ( ( RCSe - Max( ( RCSe + RMSe ),( DS + RRSe ) ) ) * ( ( CS - ( RRSe / RRSe ) ) - ( ( RRSe - MUC ) / ( MLU * MUC ) ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7567049808429118, "obj2": 0.17050188385623333}, {"determining": "( ( Max( Max( MDR,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * Min( MRS ,DDR ) ) ) / ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server * ACS ) ) * ( Max( MRS,FirstVNF_Mem ) + Min( PN ,ARS ) ) ) )", "choosing": "Max( Max( ( ( MUC - CS ) + ( MLU - RCSe ) ),( ( RRSe / MUR ) - ( MUR / MUM ) ) ),( ( Min( RRSe ,RMSe ) * ( RRSe * RRSe ) ) / Min( Min( RCSe ,RRSe ) ,( RRSe * RRSe ) ) ) )", "obj1": 0.6628352490421456, "obj2": 0.2521819920051806}, {"determining": "( ( FirstVNF_RAM * PN ) - ( ( ( RRS * BR ) * Min( MRS ,AMS ) ) - FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,( Max( ( ( ( DS * ( CS * MLU ) ) / RRSe ) * MUC ),( MUR + MUM ) ) - MUC ) ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * FirstVNF_Mem ) * FirstVNF_RAM ) - Const ) / ( ARS / ACS ) )", "choosing": "( ( MUC / Min( ( RRSe + MUC ) ,MUM ) ) * ( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) - ( AMS * FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,Min( Const ,PN ) ) ) - Max( ( ( ARS - ARS ) - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / AMS ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) / ( RMSe + MLU ) ) - Min( MLU ,MUR ) ) - Max( Max( ( MUR + CS ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * ACS ) + ( BR + ARS ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS - MUM ) ,( RRSe - ( RMSe - ( RMSe * MUM ) ) ) )", "obj1": 0.6302681992337165, "obj2": 0.2733079336741913}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( FirstVNF_Mem,( FirstVNF_CPU * Max( MRS,ARS ) ) ) - ( ACS / MRS ) )", "choosing": "( ( ( Min( RRSe ,MUC ) + Min( MUC ,MLU ) ) + Min( ( MUM * DS ) ,( CS - MUC ) ) ) - ( ( Max( RCSe,MLU ) + ( DS * CS ) ) - ( Max( CS,DS ) - ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( MDR ,( Const + ARS ) ) ) + Min( FirstVNF_CPU ,CRS ) )", "choosing": "Min( ( RCSe / ( Max( DS,MLU ) / CS ) ) ,( DS - Min( RRSe ,MLU ) ) )", "obj1": 0.7011494252873564, "obj2": 0.20616950098681172}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + Min( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) * Min( RRS ,ARS ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "( Min( ( ( RCSe / ( ( MUR * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem * Const ) ) - FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + MLU ) ) ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.8716475095785441, "obj2": 0.11748985011364993}], "2": [{"determining": "( ( Const + MRS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) * ( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) - Max( FirstVNF_Mem_Server,( FirstVNF_RAM * Const ) ) ) / Min( ( MDR * FirstVNF_CPU ) ,ACS ) )", "choosing": "( ( MLU / Min( ( ( ( RCSe * ( Min( MUM ,MUR ) * Max( RRSe,CS ) ) ) / Max( RRSe,Min( Min( RRSe ,MUC ) ,DS ) ) ) - ( ( ( MUC + MUR ) * CS ) + MUC ) ) ,( MLU + MUM ) ) ) * Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * RCSe ) + ( MUR / MUR ) )", "obj1": 0.8486590038314177, "obj2": 0.1318857061701641}, {"determining": "( ( Const - DDR ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / ( ACS + Max( ( RRS - DDR ),FirstVNF_Mem ) ) ) ,ACS ) / ( ( FirstVNF_Mem_Server + Min( PN ,ARS ) ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * Max( MUC,RMSe ) ) - ( ( RCSe / RMSe ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( AMS + FirstVNF_Mem ) ,ARS ) ,( ( MRS * FirstVNF_RAM ) - ( Min( Min( Min( ( ( RRS - AMS ) - ( FirstVNF_CPU + Const ) ) ,CRS ) ,MRS ) ,ARS ) / RRS ) ) )", "choosing": "Max( Max( Max( ( CS * ( Min( ( MUC + ( CS - RCSe ) ) ,DS ) - MUR ) ),RCSe ),( ( MUR - MUR ) - RCSe ) ),( Min( DS ,RMSe ) / ( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Const + DDR ) ) - ( Max( CRS,PN ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) - ( MRS - RRS ) ) ) )", "choosing": "Min( ( ( RCSe * ( Min( MUC ,( ( ( DS - RMSe ) / Min( MUC ,CS ) ) / Min( MUC ,( RRSe - MUM ) ) ) ) / DS ) ) / ( RCSe + MUC ) ) ,Max( ( MUM - Max( ( ( ( MUM + ( MUC + RRSe ) ) * ( Min( RCSe ,MUC ) + RRSe ) ) + ( RRSe * MLU ) ),CS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - DDR ) + Max( BR,ARS ) ) / ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.685823754789272, "obj2": 0.2328404633065285}, {"determining": "( ( ( ACS * FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) - ( MDR - ACS ) )", "choosing": "( Max( Min( RRSe ,RCSe ),Max( MLU,RCSe ) ) + ( ( Max( MUM,RCSe ) / DS ) / ( ( MUR - ( ( RCSe - Max( ( RCSe + RMSe ),( DS + RRSe ) ) ) * ( ( CS - ( RRSe / RRSe ) ) - ( ( RRSe - MUC ) / ( MLU * MUC ) ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7567049808429118, "obj2": 0.17050188385623333}, {"determining": "( ( FirstVNF_RAM * PN ) - ( ( ( RRS * BR ) * Min( MRS ,AMS ) ) - FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,( Max( ( ( ( DS * ( CS * MLU ) ) / RRSe ) * MUC ),( MUR + MUM ) ) - MUC ) ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * FirstVNF_Mem ) * FirstVNF_RAM ) - Const ) / ( ARS / ACS ) )", "choosing": "( ( MUC / Min( ( RRSe + MUC ) ,MUM ) ) * ( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) - ( AMS * FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,Min( Const ,PN ) ) ) - Max( ( ( ARS - ARS ) - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / AMS ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) / ( RMSe + MLU ) ) - Min( MLU ,MUR ) ) - Max( Max( ( MUR + CS ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( FirstVNF_Mem,( FirstVNF_CPU * Max( MRS,ARS ) ) ) - ( ACS / MRS ) )", "choosing": "( ( ( Min( RRSe ,MUC ) + Min( MUC ,MLU ) ) + Min( ( MUM * DS ) ,( CS - MUC ) ) ) - ( ( Max( RCSe,MLU ) + ( DS * CS ) ) - ( Max( CS,DS ) - ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + Min( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) * Min( RRS ,ARS ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "( Min( ( ( RCSe / ( ( MUR * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem * Const ) ) - FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + MLU ) ) ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.8716475095785441, "obj2": 0.11748985011364993}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + ( ( ARS - FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) - Min( FirstVNF_RAM ,( Min( BR ,ACS ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( ( ( MUR - DS ) - Max( MUM,CS ) ),Min( MUR ,MUC ) ),Min( ( MLU / RRSe ) ,( CS + MUR ) ) ) + ( ( ( RRSe / RCSe ) - ( RCSe / MLU ) ) - ( ( MUR * MUR ) + ( RMSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_CPU ,MDR ) ,FirstVNF_RAM ) ),FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server * ( BR + ( DDR / Const ) ) ) ) - ( BR + MDR ) ) )", "choosing": "( ( RCSe / ( CS / Max( Min( Max( ( MUR / ( RCSe / MLU ) ),( DS / DS ) ) ,DS ),MLU ) ) ) - ( Max( ( RMSe - RMSe ),CS ) + ( ( ( Max( MLU,RMSe ) * ( CS / MUC ) ) - MLU ) / ( DS / ( DS + ( RRSe - MUR ) ) ) ) ) )", "obj1": 0.6992337164750958, "obj2": 0.19827730583543504}, {"determining": "( ( BR / FirstVNF_RAM ) + Min( ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( BR ,MDR ) ) ) )", "choosing": "( Max( MUR,( ( RRSe + Min( RRSe ,Min( MUC ,Min( DS ,( MLU - MUM ) ) ) ) ) + ( MUM + DS ) ) ) + ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( CRS,CRS ) ) / ( ( FirstVNF_Mem / ARS ) - ( FirstVNF_Mem_Server / BR ) ) ) + ( ACS - MRS ) )", "choosing": "( Min( Min( MLU ,( RMSe * ( ( CS - RRSe ) / ( MUM * ( MLU - RCSe ) ) ) ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( Const * ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * MRS ) ) ) * ( RRS * FirstVNF_CPU ) ) - ( Const * Max( BR,Const ) ) )", "choosing": "( Max( ( CS + Max( RCSe,( RCSe / MUC ) ) ),( MUR / RRSe ) ) * Min( RCSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) * ( ( MRS - ( ( ACS - RRS ) * FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / Min( ARS ,ACS ) )", "choosing": "( Min( ( ( MUM - CS ) * Min( CS ,Min( CS ,MUR ) ) ) ,( ( RCSe + CS ) - ( MUR + DS ) ) ) * ( ( ( DS - CS ) / ( MLU + MLU ) ) / ( ( MUM * CS ) - ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( MRS - FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ) ) / Min( ARS ,ACS ) )", "choosing": "( Min( Max( MUM,RRSe ) ,Max( MUC,CS ) ) - ( ( RCSe + CS ) / ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( FirstVNF_Mem_Server,ACS ) + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM ) - AMS ) - ( Const / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RMSe + MLU ) / ( DS - CS ) ) / ( ( MUM * ( MUR / CS ) ) - Min( MUC ,Max( MUC,( CS / RMSe ) ) ) ) ) * ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Const + DDR ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,DS ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( FirstVNF_Mem - PN ) )", "choosing": "Min( Max( DS,RMSe ) ,( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - DDR ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,Max( ( CS - RCSe ),( RMSe / RCSe ) ) ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Min( ( FirstVNF_Mem_Server / RRS ) ,Const ) ) * PN ) - ( PN * FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUM ) ,Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / Min( Const ,DDR ) ) - ( Max( ACS,DDR ) + Max( Min( ( FirstVNF_Mem_Server + Const ) ,( FirstVNF_RAM / MDR ) ),MRS ) ) )", "choosing": "Min( ( ( MUR - DS ) / ( RCSe + MUC ) ) ,( ( MUC / RCSe ) * Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( Min( FirstVNF_Mem ,PN ) - ARS ) ) - ( Max( FirstVNF_Mem_Server,MRS ) + Max( ACS,DDR ) ) )", "choosing": "( ( MUR - Max( MLU,MUM ) ) - ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( MRS / FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_RAM,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,RCSe ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7758620689655172, "obj2": 0.16115609062318473}, {"determining": "( ( Max( PN,ARS ) / PN ) / ( PN / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Max( ( CS * CS ),MUR ) / Min( Max( DS,RMSe ) ,MUR ) ) ,( ( RMSe + RMSe ) - RMSe ) ) ,Max( MUM,Max( RRSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU + MDR ) ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RMSe + RMSe ) - MUR ) ,( Min( RCSe ,RCSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,Min( FirstVNF_RAM ,ARS ) )", "choosing": "( ( RRSe * RRSe ) / Min( MUM ,MUC ) )", "obj1": 0.6187739463601533, "obj2": 0.27039859893672713}, {"determining": "Min( ( DDR * MRS ) ,Min( FirstVNF_RAM ,ARS ) )", "choosing": "( ( MLU / DS ) / Min( MUM ,MUC ) )", "obj1": 0.6417624521072797, "obj2": 0.2591849724176819}, {"determining": "Max( ( MDR + PN ),Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( MUC * RMSe ) / ( RCSe * DS ) )", "obj1": 0.5938697318007663, "obj2": 0.30233089841869315}, {"determining": "( ( Const - DDR ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "Min( ( RMSe / CS ) ,( ( RRSe / MLU ) * Min( ( CS * RCSe ) ,Max( Max( MUC,RRSe ),DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - DDR ) / Max( CRS,MRS ) )", "choosing": "Min( ( CS / RMSe ) ,Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem,CRS ) ,( MRS * PN ) ) / ( Min( BR ,Const ) - Min( ARS ,ACS ) ) )", "choosing": "( ( RMSe * MLU ) - ( ( RCSe + CS ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,RRSe ) + DS ) - ( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,MRS ) - Max( ( MRS + ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) + Max( CRS,FirstVNF_Mem ) )", "choosing": "( Min( DS ,MLU ) * Min( ( CS * MUM ) ,Max( Min( MUM ,MLU ),( MUM - CS ) ) ) )", "obj1": 0.9003831417624522, "obj2": 0.08090019779659016}, {"determining": "Min( Min( ( ( MRS / FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_RAM,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,RCSe ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.764367816091954, "obj2": 0.1629864676660733}, {"determining": "( ( Min( FirstVNF_Mem ,ACS ) / ( Min( Max( BR,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( Min( BR ,Const ) - Min( ARS ,ACS ) ) ) ) * ( ( PN + MDR ) / Max( CRS,CRS ) ) )", "choosing": "Max( ( ( RCSe + CS ) - ( MUR + DS ) ),( RCSe - Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( Min( BR ,Const ) - Min( ARS ,ACS ) ) )", "choosing": "Max( Min( Min( RRSe ,CS ) ,RRSe ),( RCSe - Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( Min( MDR ,ACS ) ,ARS ) ) ) )", "choosing": "( ( ( Min( ( ( ( RMSe - RRSe ) / Max( CS,MUR ) ) / Max( MLU,( RMSe - MUM ) ) ) ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) + ( ( ( RCSe - MUR ) + ( MLU - MUM ) ) / Max( ( DS * MUC ),( MUM * MUR ) ) ) )", "obj1": 0.8659003831417624, "obj2": 0.13145402491386557}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,( ( ARS - ARS ) - ( FirstVNF_Mem_Server * DDR ) ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) - ( AMS * FirstVNF_Mem ) ) ,Max( Min( ( Min( ( FirstVNF_Mem_Server - BR ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) ) ,ACS ),Min( Const ,PN ) ) ) - Max( ( ( ARS - ARS ) - ( FirstVNF_Mem_Server * DDR ) ),( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / AMS ) ) ) )", "choosing": "( ( ( ( MUR - MUR ) / Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( DS - RMSe ) ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) - Max( Max( ( CS + MUR ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) - ( AMS * FirstVNF_Mem ) ) ,Max( Min( FirstVNF_RAM ,ACS ),Min( Const ,PN ) ) ) - Max( ( ( ARS - ARS ) - ( FirstVNF_Mem_Server * DDR ) ),( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / AMS ) ) ) )", "choosing": "( ( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) - Max( Max( ( CS + MUR ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Const * FirstVNF_Mem ) ) - FirstVNF_Mem ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MLU * MUM ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.8467432950191571, "obj2": 0.1383073935241241}, {"determining": "( ( DDR * ( ( MRS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) / Min( ARS ,( RRS * Min( ( ( FirstVNF_Mem * ARS ) - MDR ) ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Min( CS ,MUM ) * ( MUM - CS ) ) ,( ( MLU + RCSe ) * ( RMSe - RRSe ) ) ) * ( ( Min( Min( MLU ,RRSe ) ,Max( Max( RMSe,CS ),MUM ) ) / ( MLU + MLU ) ) / ( ( MUC * Max( RRSe,DS ) ) - Max( MUC,( ( CS + ( DS - RRSe ) ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( MRS - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / Min( ARS ,ACS ) )", "choosing": "Min( ( MLU * MLU ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem / ARS ) - ( FirstVNF_Mem_Server / BR ) ) ) + Min( ( Min( RRS ,FirstVNF_Mem ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "( Min( ( ( RCSe / RRSe ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( MUM ,MLU ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem / ARS ) - ( FirstVNF_Mem_Server / BR ) ) ) + Min( ( Min( RRS ,ARS ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,Max( ( CS - RCSe ),( RMSe / RCSe ) ) ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( FirstVNF_Mem - PN ) )", "choosing": "( Min( ( ( RCSe / RRSe ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * PN ) / ( DDR + RRS ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( Max( RRSe,MUM ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * PN ) / ( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( DDR - FirstVNF_Mem ) ) ) + ( ( ( CRS / ACS ) / ( FirstVNF_RAM - ACS ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( RMSe / ( RMSe + DS ) ) * ( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) ) ) / ( Min( MUR ,RRSe ) + Max( RRSe,MUM ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( Max( ( ARS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ),Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ) ) + ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Min( MLU ,( RCSe + ( ( RMSe - MUC ) + RCSe ) ) ) * ( DS + DS ) ) / ( Min( RMSe ,RRSe ) * Max( RRSe,MUM ) ) )", "obj1": 0.9846743295019157, "obj2": 0.006217991209115995}, {"determining": "( ( ( Const - ( PN * CRS ) ) / ( ( FirstVNF_Mem / ARS ) - ( FirstVNF_Mem_Server / BR ) ) ) + Min( ( Min( RRS ,ARS ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "( Min( ( ( RCSe / RRSe ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( MUC ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( MRS * BR ) ) + Min( ( Min( ARS ,RRS ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "( ( Min( MLU ,MUC ) * Min( RRSe ,MUR ) ) - ( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * FirstVNF_CPU_Server ) / ( AMS + FirstVNF_Mem_Server ) ) + ( DDR - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / ( DS + CS ) ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * DS ) ,( RCSe / RCSe ) )", "obj1": 0.6800766283524904, "obj2": 0.23752406738484214}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( RMSe * MLU ) )", "obj1": 0.6551724137931034, "obj2": 0.24833950350560008}, {"determining": "( ( DDR * ( ( MRS - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / Min( ARS ,ACS ) )", "choosing": "Min( Min( ( RMSe / CS ) ,( RRSe / RRSe ) ) ,( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( MDR / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( ( MUM - RMSe ) * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7241379310344828, "obj2": 0.17852590511194355}, {"determining": "( Max( ( ( FirstVNF_RAM - ARS ) - ( FirstVNF_Mem_Server * DDR ) ),( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / AMS ) ) ) - Min( ( FirstVNF_CPU - ( ( MRS + ACS ) - DDR ) ) ,( ACS / FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe / ( RMSe + RCSe ) ) - ( ( RRSe * CS ) + ( MUR / MUR ) ) ) - Max( Max( ( CS + MUR ),( MUC + RMSe ) ),Max( Min( RRSe ,Min( RMSe ,RCSe ) ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) - ( AMS * FirstVNF_Mem ) ) ,Max( Min( FirstVNF_RAM ,ACS ),Min( Const ,PN ) ) ) - Max( ( ( ARS - ARS ) - ( FirstVNF_Mem_Server * DDR ) ),( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / AMS ) ) ) )", "choosing": "( ( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) - Max( Max( ( CS + MUR ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + DDR ) )", "choosing": "( Min( CS ,RRSe ) * ( CS * MUM ) )", "obj1": 0.6398467432950191, "obj2": 0.26058250367150715}, {"determining": "( ( ( ( ARS - FirstVNF_RAM_Server ) / Max( ARS,FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) - Min( Min( FirstVNF_RAM ,Min( ARS ,( AMS - AMS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( ( DS * MUR ),Min( MUR ,MUC ) ),( CS + MUM ) ) + ( ( ( RRSe / RCSe ) - ( RCSe / MLU ) ) - ( ( MUR * MUR ) + Min( ( ( ( MUM * ( RCSe / MUR ) ) / MLU ) + ( RMSe / MLU ) ) ,MUM ) ) ) )", "obj1": 0.8084291187739464, "obj2": 0.13979593337795507}, {"determining": "( ( PN - Min( MDR ,( Const + ARS ) ) ) + Min( FirstVNF_CPU ,CRS ) )", "choosing": "Min( ( RCSe / ( Max( ( ( MLU / CS ) - Min( CS ,MUC ) ),MLU ) / CS ) ) ,( DS - Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,ARS ) ) ,Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( MUM * ( RCSe - RCSe ) )", "obj1": 0.6168582375478927, "obj2": 0.27116960455251543}, {"determining": "( Min( Max( Max( ( Max( PN,ACS ) * Min( FirstVNF_CPU_Server ,BR ) ),( Max( BR,PN ) - ( AMS / ACS ) ) ),( ARS * FirstVNF_CPU ) ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( ( Min( AMS ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * Max( ( DS * MUM ),RCSe ) ) - ( ( RCSe + CS ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( Min( BR ,Const ) - Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * RMSe ) - ( ( RCSe + CS ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR / FirstVNF_CPU ) + ( DDR - FirstVNF_RAM_Server ) ) ,( ( MRS * MDR ) - AMS ) )", "choosing": "Max( ( ( MUM + CS ) - ( RCSe - RMSe ) ),( RRSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( DDR - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / ( DS + CS ) ) ) ,Min( ( ( MUR + CS ) / ( MUM - RMSe ) ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.6724137931034483, "obj2": 0.2409262130411736}, {"determining": "Min( Min( RRS ,ARS ) ,( Min( MRS ,( FirstVNF_Mem_Server / AMS ) ) - AMS ) )", "choosing": "Max( ( RRSe / Min( RMSe ,MUC ) ),( ( MUM + CS ) - ( RCSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( AMS + FirstVNF_Mem ) ,ARS ) ,( ( MRS * FirstVNF_RAM ) - ( Min( Min( Min( ( ( RRS - AMS ) - ( FirstVNF_CPU + Const ) ) ,CRS ) ,MRS ) ,ARS ) / RRS ) ) )", "choosing": "Max( Max( Max( ( CS * ( Min( ( MUC + ( CS - RCSe ) ) ,DS ) - MUR ) ),RCSe ),( ( MUR - MUR ) - RCSe ) ),( Min( DS ,RMSe ) / ( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( AMS + FirstVNF_Mem ) ,ARS ) ,( ( MRS * FirstVNF_RAM ) - ( Min( Min( Min( ( ( RRS - AMS ) - ( FirstVNF_CPU + Const ) ) ,CRS ) ,MRS ) ,ARS ) / RRS ) ) )", "choosing": "Max( Max( Max( ( CS * ( Min( ( MUC + ( CS - RCSe ) ) ,DS ) - MUR ) ),RCSe ),( ( MUR - MUR ) - RCSe ) ),( Min( DS ,RMSe ) / ( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( AMS + FirstVNF_Mem ) ,ARS ) ,( ( MRS * FirstVNF_RAM ) - ( Min( Min( Min( ( ( RRS - AMS ) - ( FirstVNF_CPU + Const ) ) ,CRS ) ,MRS ) ,ARS ) / RRS ) ) )", "choosing": "Max( Max( Max( ( CS * ( Min( ( MUC + ( CS - RCSe ) ) ,DS ) - MUR ) ),RCSe ),( ( MUR - MUR ) - RCSe ) ),( Min( DS ,RMSe ) / ( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem + FirstVNF_CPU_Server ) ,ARS ) ,( ( MRS * MDR ) - AMS ) )", "choosing": "Max( ( Max( ( CS + RRSe ),RCSe ) + ( DS - RCSe ) ),( RRSe / Min( RCSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + ( DDR * FirstVNF_Mem ) ) - ARS ) / Min( ARS ,ACS ) )", "choosing": "( Min( ( ( Min( Max( DS,RMSe ) ,( RMSe + MUM ) ) * CS ) * Min( MUM ,CS ) ) ,( ( MLU + RCSe ) * ( RMSe - RRSe ) ) ) * ( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM * RMSe ) - ( ( RCSe + CS ) - ( MUR + DS ) ) ) * Min( ( DS - RCSe ) ,Min( RRSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( Min( BR ,Const ) - Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * RMSe ) - ( ( RCSe + CS ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - MRS ) - AMS ) * MRS ) - FirstVNF_Mem )", "choosing": "Max( Max( ( RCSe - MUR ),Max( ( MLU * DS ),MUR ) ),Max( Min( MUC ,( MUC / ( ( RCSe - MUM ) * Max( ( ( RMSe + RCSe ) * MUC ),RRSe ) ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( FirstVNF_Mem - PN ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,Max( ( CS - RCSe ),( RMSe / RCSe ) ) ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Const + MRS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) * ( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) - Max( FirstVNF_Mem_Server,( FirstVNF_RAM * Const ) ) ) / Min( ( MDR * FirstVNF_CPU ) ,ACS ) )", "choosing": "( ( MLU / Min( ( ( ( RCSe * ( Min( MUM ,MUR ) * Max( RRSe,CS ) ) ) / Max( RRSe,Min( Min( RRSe ,MUC ) ,DS ) ) ) - ( ( ( MUC + MUR ) * CS ) + MUC ) ) ,( MLU + MUM ) ) ) * Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * RCSe ) + ( MUR / MUR ) )", "obj1": 0.8486590038314177, "obj2": 0.1318857061701641}, {"determining": "( ( Const - DDR ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / ( ACS + Max( ( RRS - DDR ),FirstVNF_Mem ) ) ) ,ACS ) / ( ( FirstVNF_Mem_Server + Min( PN ,ARS ) ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * Max( MUC,RMSe ) ) - ( ( RCSe / RMSe ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( AMS + FirstVNF_Mem ) ,ARS ) ,( ( MRS * FirstVNF_RAM ) - ( Min( Min( Min( ( ( RRS - AMS ) - ( FirstVNF_CPU + Const ) ) ,CRS ) ,MRS ) ,ARS ) / RRS ) ) )", "choosing": "Max( Max( Max( ( CS * ( Min( ( MUC + ( CS - RCSe ) ) ,DS ) - MUR ) ),RCSe ),( ( MUR - MUR ) - RCSe ) ),( Min( DS ,RMSe ) / ( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Const + DDR ) ) - ( Max( CRS,PN ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) - ( MRS - RRS ) ) ) )", "choosing": "Min( ( ( RCSe * ( Min( MUC ,( ( ( DS - RMSe ) / Min( MUC ,CS ) ) / Min( MUC ,( RRSe - MUM ) ) ) ) / DS ) ) / ( RCSe + MUC ) ) ,Max( ( MUM - Max( ( ( ( MUM + ( MUC + RRSe ) ) * ( Min( RCSe ,MUC ) + RRSe ) ) + ( RRSe * MLU ) ),CS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - DDR ) + Max( BR,ARS ) ) / ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.685823754789272, "obj2": 0.2328404633065285}, {"determining": "( ( ( ACS * FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) - ( MDR - ACS ) )", "choosing": "( Max( Min( RRSe ,RCSe ),Max( MLU,RCSe ) ) + ( ( Max( MUM,RCSe ) / DS ) / ( ( MUR - ( ( RCSe - Max( ( RCSe + RMSe ),( DS + RRSe ) ) ) * ( ( CS - ( RRSe / RRSe ) ) - ( ( RRSe - MUC ) / ( MLU * MUC ) ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( ( ( RRS * BR ) * Min( MRS ,AMS ) ) - FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,( Max( ( ( ( DS * ( CS * MLU ) ) / RRSe ) * MUC ),( MUR + MUM ) ) - MUC ) ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * FirstVNF_Mem ) * FirstVNF_RAM ) - Const ) / ( ARS / ACS ) )", "choosing": "( ( MUC / Min( ( RRSe + MUC ) ,MUM ) ) * ( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) - ( AMS * FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,Min( Const ,PN ) ) ) - Max( ( ( ARS - ARS ) - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / AMS ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) / ( RMSe + MLU ) ) - Min( MLU ,MUR ) ) - Max( Max( ( MUR + CS ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( FirstVNF_Mem,( FirstVNF_CPU * Max( MRS,ARS ) ) ) - ( ACS / MRS ) )", "choosing": "( ( ( Min( RRSe ,MUC ) + Min( MUC ,MLU ) ) + Min( ( MUM * DS ) ,( CS - MUC ) ) ) - ( ( Max( RCSe,MLU ) + ( DS * CS ) ) - ( Max( CS,DS ) - ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + Min( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) * Min( RRS ,ARS ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "( Min( ( ( RCSe / ( ( MUR * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + ( ( ARS - FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) - Min( FirstVNF_RAM ,( Min( BR ,ACS ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( ( ( MUR - DS ) - Max( MUM,CS ) ),Min( MUR ,MUC ) ),Min( ( MLU / RRSe ) ,( CS + MUR ) ) ) + ( ( ( RRSe / RCSe ) - ( RCSe / MLU ) ) - ( ( MUR * MUR ) + ( RMSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_CPU ,MDR ) ,FirstVNF_RAM ) ),FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server * ( BR + ( DDR / Const ) ) ) ) - ( BR + MDR ) ) )", "choosing": "( ( RCSe / ( CS / Max( Min( Max( ( MUR / ( RCSe / MLU ) ),( DS / DS ) ) ,DS ),MLU ) ) ) - ( Max( ( RMSe - RMSe ),CS ) + ( ( ( Max( MLU,RMSe ) * ( CS / MUC ) ) - MLU ) / ( DS / ( DS + ( RRSe - MUR ) ) ) ) ) )", "obj1": 0.6992337164750958, "obj2": 0.19827730583543504}, {"determining": "( ( BR / FirstVNF_RAM ) + Min( ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( BR ,MDR ) ) ) )", "choosing": "( Max( MUR,( ( RRSe + Min( RRSe ,Min( MUC ,Min( DS ,( MLU - MUM ) ) ) ) ) + ( MUM + DS ) ) ) + ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( CRS,CRS ) ) / ( ( FirstVNF_Mem / ARS ) - ( FirstVNF_Mem_Server / BR ) ) ) + ( ACS - MRS ) )", "choosing": "( Min( Min( MLU ,( RMSe * ( ( CS - RRSe ) / ( MUM * ( MLU - RCSe ) ) ) ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( Const * ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * MRS ) ) ) * ( RRS * FirstVNF_CPU ) ) - ( Const * Max( BR,Const ) ) )", "choosing": "( Max( ( CS + Max( RCSe,( RCSe / MUC ) ) ),( MUR / RRSe ) ) * Min( RCSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) * ( ( MRS - ( ( ACS - RRS ) * FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / Min( ARS ,ACS ) )", "choosing": "( Min( ( ( MUM - CS ) * Min( CS ,Min( CS ,MUR ) ) ) ,( ( RCSe + CS ) - ( MUR + DS ) ) ) * ( ( ( DS - CS ) / ( MLU + MLU ) ) / ( ( MUM * CS ) - ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( MRS - FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ) ) / Min( ARS ,ACS ) )", "choosing": "( Min( Max( MUM,RRSe ) ,Max( MUC,CS ) ) - ( ( RCSe + CS ) / ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( FirstVNF_Mem_Server,ACS ) + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM ) - AMS ) - ( Const / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RMSe + MLU ) / ( DS - CS ) ) / ( ( MUM * ( MUR / CS ) ) - Min( MUC ,Max( MUC,( CS / RMSe ) ) ) ) ) * ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Const + DDR ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,DS ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( FirstVNF_Mem - PN ) )", "choosing": "Min( Max( DS,RMSe ) ,( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - DDR ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,Max( ( CS - RCSe ),( RMSe / RCSe ) ) ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Min( ( FirstVNF_Mem_Server / RRS ) ,Const ) ) * PN ) - ( PN * FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUM ) ,Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / Min( Const ,DDR ) ) - ( Max( ACS,DDR ) + Max( Min( ( FirstVNF_Mem_Server + Const ) ,( FirstVNF_RAM / MDR ) ),MRS ) ) )", "choosing": "Min( ( ( MUR - DS ) / ( RCSe + MUC ) ) ,( ( MUC / RCSe ) * Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( Min( FirstVNF_Mem ,PN ) - ARS ) ) - ( Max( FirstVNF_Mem_Server,MRS ) + Max( ACS,DDR ) ) )", "choosing": "( ( MUR - Max( MLU,MUM ) ) - ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,ARS ) / PN ) / ( PN / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Max( ( CS * CS ),MUR ) / Min( Max( DS,RMSe ) ,MUR ) ) ,( ( RMSe + RMSe ) - RMSe ) ) ,Max( MUM,Max( RRSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU + MDR ) ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RMSe + RMSe ) - MUR ) ,( Min( RCSe ,RCSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,Min( FirstVNF_RAM ,ARS ) )", "choosing": "( ( RRSe * RRSe ) / Min( MUM ,MUC ) )", "obj1": 0.6187739463601533, "obj2": 0.27039859893672713}, {"determining": "Max( ( MDR + PN ),Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( MUC * RMSe ) / ( RCSe * DS ) )", "obj1": 0.5938697318007663, "obj2": 0.30233089841869315}, {"determining": "( ( Const - DDR ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "Min( ( RMSe / CS ) ,( ( RRSe / MLU ) * Min( ( CS * RCSe ) ,Max( Max( MUC,RRSe ),DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - DDR ) / Max( CRS,MRS ) )", "choosing": "Min( ( CS / RMSe ) ,Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem,CRS ) ,( MRS * PN ) ) / ( Min( BR ,Const ) - Min( ARS ,ACS ) ) )", "choosing": "( ( RMSe * MLU ) - ( ( RCSe + CS ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,RRSe ) + DS ) - ( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,MRS ) - Max( ( MRS + ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) + Max( CRS,FirstVNF_Mem ) )", "choosing": "( Min( DS ,MLU ) * Min( ( CS * MUM ) ,Max( Min( MUM ,MLU ),( MUM - CS ) ) ) )", "obj1": 0.9003831417624522, "obj2": 0.08090019779659016}, {"determining": "( ( Min( FirstVNF_Mem ,ACS ) / ( Min( Max( BR,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( Min( BR ,Const ) - Min( ARS ,ACS ) ) ) ) * ( ( PN + MDR ) / Max( CRS,CRS ) ) )", "choosing": "Max( ( ( RCSe + CS ) - ( MUR + DS ) ),( RCSe - Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( Min( BR ,Const ) - Min( ARS ,ACS ) ) )", "choosing": "Max( Min( Min( RRSe ,CS ) ,RRSe ),( RCSe - Max( RRSe,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,( ( ARS - ARS ) - ( FirstVNF_Mem_Server * DDR ) ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) - ( AMS * FirstVNF_Mem ) ) ,Max( Min( ( Min( ( FirstVNF_Mem_Server - BR ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) ) ,ACS ),Min( Const ,PN ) ) ) - Max( ( ( ARS - ARS ) - ( FirstVNF_Mem_Server * DDR ) ),( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / AMS ) ) ) )", "choosing": "( ( ( ( MUR - MUR ) / Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( DS - RMSe ) ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) - Max( Max( ( CS + MUR ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) - ( AMS * FirstVNF_Mem ) ) ,Max( Min( FirstVNF_RAM ,ACS ),Min( Const ,PN ) ) ) - Max( ( ( ARS - ARS ) - ( FirstVNF_Mem_Server * DDR ) ),( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / AMS ) ) ) )", "choosing": "( ( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) - Max( Max( ( CS + MUR ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,( Const * FirstVNF_Mem ) ) - FirstVNF_Mem ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MLU * MUM ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.8467432950191571, "obj2": 0.1383073935241241}, {"determining": "( ( DDR * ( ( MRS - FirstVNF_Mem_Server ) * Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) / Min( ARS ,( RRS * Min( ( ( FirstVNF_Mem * ARS ) - MDR ) ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Min( CS ,MUM ) * ( MUM - CS ) ) ,( ( MLU + RCSe ) * ( RMSe - RRSe ) ) ) * ( ( Min( Min( MLU ,RRSe ) ,Max( Max( RMSe,CS ),MUM ) ) / ( MLU + MLU ) ) / ( ( MUC * Max( RRSe,DS ) ) - Max( MUC,( ( CS + ( DS - RRSe ) ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( MRS - FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / Min( ARS ,ACS ) )", "choosing": "Min( ( MLU * MLU ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem / ARS ) - ( FirstVNF_Mem_Server / BR ) ) ) + Min( ( Min( RRS ,FirstVNF_Mem ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "( Min( ( ( RCSe / RRSe ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( MUM ,MLU ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem / ARS ) - ( FirstVNF_Mem_Server / BR ) ) ) + Min( ( Min( RRS ,ARS ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,Max( ( CS - RCSe ),( RMSe / RCSe ) ) ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( FirstVNF_Mem - PN ) )", "choosing": "( Min( ( ( RCSe / RRSe ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * PN ) / ( DDR + RRS ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( Max( RRSe,MUM ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * PN ) / ( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( DDR - FirstVNF_Mem ) ) ) + ( ( ( CRS / ACS ) / ( FirstVNF_RAM - ACS ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( RMSe / ( RMSe + DS ) ) * ( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) ) ) / ( Min( MUR ,RRSe ) + Max( RRSe,MUM ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( Max( ( ARS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ),Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ) ) + ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Min( MLU ,( RCSe + ( ( RMSe - MUC ) + RCSe ) ) ) * ( DS + DS ) ) / ( Min( RMSe ,RRSe ) * Max( RRSe,MUM ) ) )", "obj1": 0.9846743295019157, "obj2": 0.006217991209115995}, {"determining": "( ( ( Const - ( PN * CRS ) ) / ( ( FirstVNF_Mem / ARS ) - ( FirstVNF_Mem_Server / BR ) ) ) + Min( ( Min( RRS ,ARS ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "( Min( ( ( RCSe / RRSe ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( MUC ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( MRS * BR ) ) + Min( ( Min( ARS ,RRS ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "( ( Min( MLU ,MUC ) * Min( RRSe ,MUR ) ) - ( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * DS ) ,( RCSe / RCSe ) )", "obj1": 0.6800766283524904, "obj2": 0.23752406738484214}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( RMSe * MLU ) )", "obj1": 0.6551724137931034, "obj2": 0.24833950350560008}, {"determining": "( ( ( ( ARS - FirstVNF_RAM_Server ) / Max( ARS,FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) - Min( Min( FirstVNF_RAM ,Min( ARS ,( AMS - AMS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( ( DS * MUR ),Min( MUR ,MUC ) ),( CS + MUM ) ) + ( ( ( RRSe / RCSe ) - ( RCSe / MLU ) ) - ( ( MUR * MUR ) + Min( ( ( ( MUM * ( RCSe / MUR ) ) / MLU ) + ( RMSe / MLU ) ) ,MUM ) ) ) )", "obj1": 0.8084291187739464, "obj2": 0.13979593337795507}, {"determining": "Min( ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,ARS ) ) ,Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( MUM * ( RCSe - RCSe ) )", "obj1": 0.6168582375478927, "obj2": 0.27116960455251543}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( DDR - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / ( DS + CS ) ) ) ,Min( ( ( MUR + CS ) / ( MUM - RMSe ) ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.6724137931034483, "obj2": 0.2409262130411736}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem * Const ) ) - FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + MLU ) ) ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.8716475095785441, "obj2": 0.11405682195269372}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem * Const ) ) - FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + MLU ) ) ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.8716475095785441, "obj2": 0.11405682195269372}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem * Const ) ) - FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + MLU ) ) ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.8716475095785441, "obj2": 0.11405682195269372}, {"determining": "( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem * Const ) ) - FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + MLU ) ) ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.8716475095785441, "obj2": 0.11405682195269372}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( ( ( Max( DDR,Max( BR,FirstVNF_Mem_Server ) ) * RRS ) / RRS ) - ( Const + AMS ) ) )", "choosing": "( Min( MUR ,DS ) + ( Min( MUR ,MUM ) - ( MLU - ( Max( MLU,DS ) + RMSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( ( ( Max( DDR,Max( BR,FirstVNF_Mem_Server ) ) * RRS ) / RRS ) - ( Const + AMS ) ) )", "choosing": "( Min( MUR ,DS ) + ( Min( MUR ,MUM ) - ( MLU - ( Max( MLU,DS ) + RMSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( ( ( Max( DDR,Max( BR,FirstVNF_Mem_Server ) ) * RRS ) / RRS ) - ( Const + AMS ) ) )", "choosing": "( Min( MUR ,DS ) + ( Min( MUR ,MUM ) - ( MLU - ( Max( MLU,DS ) + RMSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "( ( ( Max( Min( RRS ,FirstVNF_Mem ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) + ( ( ( RCSe - MUR ) + ( MLU - ( MUM / DS ) ) ) / Max( ( DS * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( CRS * FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server )", "choosing": "( Min( ( ( RCSe / ( ( RMSe * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * ( RMSe / ( DS - Max( MUM,MUC ) ) ) ) ,( MUM - MUC ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.9559386973180076, "obj2": 0.02092741103868173}, {"determining": "( ( ( Max( Min( RRS ,( AMS + AMS ) ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) + Min( ( ( RRSe + Min( MUR ,Min( MUM ,MUM ) ) ) - MUM ) ,( MUR * MUC ) ) ) - Max( ( DS * MUC ),( MUM * RRSe ) ) ) + ( ( Min( MUC ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe / MUR ) * ( DS + DS ) ) / Min( Max( RRSe,( DS + MUR ) ) ,CS ) )", "obj1": 0.9731800766283525, "obj2": 0.010100120650449535}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe / MUR ) * ( DS + DS ) ) / ( Min( MUR ,RRSe ) * Max( RRSe,MUM ) ) )", "obj1": 0.9846743295019157, "obj2": 0.006217991209115995}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / ( DS + CS ) ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145809}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + ( ( MRS / ( ( ( FirstVNF_CPU * ARS ) / FirstVNF_RAM ) / ACS ) ) + FirstVNF_Mem_Server ) ) ,( Max( ( MDR / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( Max( MUC,Max( Max( Max( ( MUM - DS ),( CS / ( ( RCSe + MUR ) - Min( MUR ,CS ) ) ) ),Max( MUR,RRSe ) ),( Max( DS,MUR ) / RCSe ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7624521072796935, "obj2": 0.1562778740011578}, {"determining": "( Min( ( PN - DDR ) ,Min( MRS ,ARS ) ) / ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU - CS ) * ( CS + MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.685823754789272, "obj2": 0.2328404633065285}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( ( MDR + FirstVNF_CPU ) - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( MLU,RCSe ) * ( MUR / ( ( CS * RCSe ) - RMSe ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "Min( Min( ( ( Min( RRS ,ARS ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,RRSe ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7452107279693486, "obj2": 0.16634046257922688}, {"determining": "( ( Min( ARS ,MRS ) - Max( ( MRS + ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) + Max( CRS,FirstVNF_Mem ) )", "choosing": "( Min( DS ,MLU ) * Min( ( CS * MUM ) ,Max( Min( MUM ,MLU ),( MUM - CS ) ) ) )", "obj1": 0.9022988505747126, "obj2": 0.0789191327761549}, {"determining": "Min( ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,ARS ) ) ,Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( MUM * ( RCSe - RCSe ) )", "obj1": 0.6168582375478927, "obj2": 0.27116960455251543}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( ( ( Max( Min( RRS ,FirstVNF_Mem ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) + ( ( ( RCSe - MUR ) + ( MLU - ( MUM / DS ) ) ) / Max( ( DS * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.6628352490421456, "obj2": 0.24352686655735895}, {"determining": "Min( ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,ARS ) ) ,FirstVNF_CPU_Server )", "choosing": "( MUM * ( ( ( DS + CS ) * ( MUM - RRSe ) ) - RCSe ) )", "obj1": 0.6283524904214559, "obj2": 0.2586398915564919}, {"determining": "Min( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) ,Min( PN ,( FirstVNF_CPU * Min( BR ,( FirstVNF_CPU_Server * RRS ) ) ) ) )", "choosing": "( ( MUC - MUR ) - ( ( Max( MLU,MLU ) + ( DS * CS ) ) - ( Max( CS,DS ) - ( RRSe - MUR ) ) ) )", "obj1": 0.7662835249042146, "obj2": 0.14866407331346862}, {"determining": "( Max( Max( ( ARS + FirstVNF_Mem_Server ),( FirstVNF_Mem - DDR ) ),Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ) ) + ( FirstVNF_RAM_Server / AMS ) )", "choosing": "Min( ( RMSe * DS ) ,( RCSe / RCSe ) )", "obj1": 0.6800766283524904, "obj2": 0.23752406738484214}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( Min( BR ,Const ) - Min( ARS ,Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( CS + DS ) - ( RMSe * ( DS * RMSe ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0026097729243183963}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7471264367816092, "obj2": 0.15969650604541644}, {"determining": "( ( ( Max( ( FirstVNF_Mem - PN ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) + ( ( ( RCSe - MUR ) + ( MLU - ( MUM / DS ) ) ) / Max( ( RMSe * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.921455938697318, "obj2": 0.07010174493302174}, {"determining": "( ( ( Max( Min( RRS ,FirstVNF_Mem ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( Max( DS,RMSe ) ,( RMSe + MUM ) )", "obj1": 0.8620689655172413, "obj2": 0.1202073552076931}, {"determining": "( ( ACS - Min( FirstVNF_RAM_Server ,( ARS + Const ) ) ) / Max( FirstVNF_RAM_Server,MRS ) )", "choosing": "( ( RCSe / ( Max( DS,MLU ) / CS ) ) - ( Max( Min( MUM ,Min( ( MLU + MUM ) ,RRSe ) ),MLU ) + RRSe ) )", "obj1": 0.7203065134099617, "obj2": 0.18145644854256532}, {"determining": "( ( AMS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU * RCSe ) + ( MUR / MUR ) )", "obj1": 0.8773946360153256, "obj2": 0.11366960366769467}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Const + MRS ) )", "choosing": "( ( RRSe * RRSe ) / Min( ( MLU / DS ) ,MUC ) )", "obj1": 0.632183908045977, "obj2": 0.25860979291929476}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,( ( ARS - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * DDR ) ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( MUR - MUR ) / ( ( RMSe / CS ) + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.015378572680631456}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + ( ( ( PN - DDR ) + Max( BR,ARS ) ) / ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( ( RCSe / ( ( MUR * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) * ( MUM + MUR ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.9923371647509579, "obj2": 0.0032878185814136335}, {"determining": "( ( ACS - DDR ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,( Min( Max( MUM,RRSe ) ,Max( MUC,CS ) ) - ( ( RCSe + CS ) / ( MUR + DS ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.17675651959736552}, {"determining": "Min( ( DDR * MRS ) ,( Max( FirstVNF_Mem_Server,( ( FirstVNF_Mem_Server * FirstVNF_CPU ) * AMS ) ) + FirstVNF_Mem ) )", "choosing": "( ( DS + MUM ) * ( RCSe + ( MLU + DS ) ) )", "obj1": 0.6417624521072797, "obj2": 0.25364817351778857}, {"determining": "( ( ( Max( Min( Min( ( ( ACS * FirstVNF_Mem ) - ( AMS * FirstVNF_Mem ) ) ,Max( Min( FirstVNF_RAM ,ACS ),Min( Const ,PN ) ) ) ,FirstVNF_Mem ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( MLU + ( ( ( RCSe - MUR ) + ( MLU - ( MUM / DS ) ) ) / Max( ( DS * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.9252873563218391, "obj2": 0.06495345227580511}, {"determining": "( Max( Max( ( FirstVNF_CPU - PN ),Max( FirstVNF_Mem_Server,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,Min( Min( DDR ,FirstVNF_Mem_Server ) ,Const ) ) ) ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) ) * ( DS / ( Max( MUM,( MUR * DS ) ) - RMSe ) ) )", "obj1": 0.975095785440613, "obj2": 0.008466076952933563}, {"determining": "( ( ( PN - DDR ) + Max( BR,ARS ) ) / ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.685823754789272, "obj2": 0.2328404633065285}, {"determining": "( ( ( PN - Const ) + Max( ARS,BR ) ) / ( FirstVNF_Mem_Server - ( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( MUR + MUR ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( MUR,RMSe ) ) )", "obj1": 0.685823754789272, "obj2": 0.2328404633065285}], "4": [{"determining": "( ( Const + MRS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) * ( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) - Max( FirstVNF_Mem_Server,( FirstVNF_RAM * Const ) ) ) / Min( ( MDR * FirstVNF_CPU ) ,ACS ) )", "choosing": "( ( MLU / Min( ( ( ( RCSe * ( Min( MUM ,MUR ) * Max( RRSe,CS ) ) ) / Max( RRSe,Min( Min( RRSe ,MUC ) ,DS ) ) ) - ( ( ( MUC + MUR ) * CS ) + MUC ) ) ,( MLU + MUM ) ) ) * Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - DDR ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / ( ACS + Max( ( RRS - DDR ),FirstVNF_Mem ) ) ) ,ACS ) / ( ( FirstVNF_Mem_Server + Min( PN ,ARS ) ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * Max( MUC,RMSe ) ) - ( ( RCSe / RMSe ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( AMS + FirstVNF_Mem ) ,ARS ) ,( ( MRS * FirstVNF_RAM ) - ( Min( Min( Min( ( ( RRS - AMS ) - ( FirstVNF_CPU + Const ) ) ,CRS ) ,MRS ) ,ARS ) / RRS ) ) )", "choosing": "Max( Max( Max( ( CS * ( Min( ( MUC + ( CS - RCSe ) ) ,DS ) - MUR ) ),RCSe ),( ( MUR - MUR ) - RCSe ) ),( Min( DS ,RMSe ) / ( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Const + DDR ) ) - ( Max( CRS,PN ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) - ( MRS - RRS ) ) ) )", "choosing": "Min( ( ( RCSe * ( Min( MUC ,( ( ( DS - RMSe ) / Min( MUC ,CS ) ) / Min( MUC ,( RRSe - MUM ) ) ) ) / DS ) ) / ( RCSe + MUC ) ) ,Max( ( MUM - Max( ( ( ( MUM + ( MUC + RRSe ) ) * ( Min( RCSe ,MUC ) + RRSe ) ) + ( RRSe * MLU ) ),CS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) - ( MDR - ACS ) )", "choosing": "( Max( Min( RRSe ,RCSe ),Max( MLU,RCSe ) ) + ( ( Max( MUM,RCSe ) / DS ) / ( ( MUR - ( ( RCSe - Max( ( RCSe + RMSe ),( DS + RRSe ) ) ) * ( ( CS - ( RRSe / RRSe ) ) - ( ( RRSe - MUC ) / ( MLU * MUC ) ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( ( ( RRS * BR ) * Min( MRS ,AMS ) ) - FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,( Max( ( ( ( DS * ( CS * MLU ) ) / RRSe ) * MUC ),( MUR + MUM ) ) - MUC ) ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * FirstVNF_Mem ) * FirstVNF_RAM ) - Const ) / ( ARS / ACS ) )", "choosing": "( ( MUC / Min( ( RRSe + MUC ) ,MUM ) ) * ( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) - ( AMS * FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,Min( Const ,PN ) ) ) - Max( ( ( ARS - ARS ) - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / AMS ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) / ( RMSe + MLU ) ) - Min( MLU ,MUR ) ) - Max( Max( ( MUR + CS ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( FirstVNF_Mem,( FirstVNF_CPU * Max( MRS,ARS ) ) ) - ( ACS / MRS ) )", "choosing": "( ( ( Min( RRSe ,MUC ) + Min( MUC ,MLU ) ) + Min( ( MUM * DS ) ,( CS - MUC ) ) ) - ( ( Max( RCSe,MLU ) + ( DS * CS ) ) - ( Max( CS,DS ) - ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + Min( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) * Min( RRS ,ARS ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "( Min( ( ( RCSe / ( ( MUR * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + ( ( ARS - FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) - Min( FirstVNF_RAM ,( Min( BR ,ACS ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( ( ( MUR - DS ) - Max( MUM,CS ) ),Min( MUR ,MUC ) ),Min( ( MLU / RRSe ) ,( CS + MUR ) ) ) + ( ( ( RRSe / RCSe ) - ( RCSe / MLU ) ) - ( ( MUR * MUR ) + ( RMSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_CPU ,MDR ) ,FirstVNF_RAM ) ),FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server * ( BR + ( DDR / Const ) ) ) ) - ( BR + MDR ) ) )", "choosing": "( ( RCSe / ( CS / Max( Min( Max( ( MUR / ( RCSe / MLU ) ),( DS / DS ) ) ,DS ),MLU ) ) ) - ( Max( ( RMSe - RMSe ),CS ) + ( ( ( Max( MLU,RMSe ) * ( CS / MUC ) ) - MLU ) / ( DS / ( DS + ( RRSe - MUR ) ) ) ) ) )", "obj1": 0.6992337164750958, "obj2": 0.19827730583543504}, {"determining": "( ( BR / FirstVNF_RAM ) + Min( ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( BR ,MDR ) ) ) )", "choosing": "( Max( MUR,( ( RRSe + Min( RRSe ,Min( MUC ,Min( DS ,( MLU - MUM ) ) ) ) ) + ( MUM + DS ) ) ) + ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( CRS,CRS ) ) / ( ( FirstVNF_Mem / ARS ) - ( FirstVNF_Mem_Server / BR ) ) ) + ( ACS - MRS ) )", "choosing": "( Min( Min( MLU ,( RMSe * ( ( CS - RRSe ) / ( MUM * ( MLU - RCSe ) ) ) ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( Const * ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * MRS ) ) ) * ( RRS * FirstVNF_CPU ) ) - ( Const * Max( BR,Const ) ) )", "choosing": "( Max( ( CS + Max( RCSe,( RCSe / MUC ) ) ),( MUR / RRSe ) ) * Min( RCSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) * ( ( MRS - ( ( ACS - RRS ) * FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / Min( ARS ,ACS ) )", "choosing": "( Min( ( ( MUM - CS ) * Min( CS ,Min( CS ,MUR ) ) ) ,( ( RCSe + CS ) - ( MUR + DS ) ) ) * ( ( ( DS - CS ) / ( MLU + MLU ) ) / ( ( MUM * CS ) - ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( MRS - FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ) ) / Min( ARS ,ACS ) )", "choosing": "( Min( Max( MUM,RRSe ) ,Max( MUC,CS ) ) - ( ( RCSe + CS ) / ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( FirstVNF_Mem_Server,ACS ) + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM ) - AMS ) - ( Const / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RMSe + MLU ) / ( DS - CS ) ) / ( ( MUM * ( MUR / CS ) ) - Min( MUC ,Max( MUC,( CS / RMSe ) ) ) ) ) * ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Const + DDR ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,DS ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( FirstVNF_Mem - PN ) )", "choosing": "Min( Max( DS,RMSe ) ,( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - DDR ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,Max( ( CS - RCSe ),( RMSe / RCSe ) ) ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Min( ( FirstVNF_Mem_Server / RRS ) ,Const ) ) * PN ) - ( PN * FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUM ) ,Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / Min( Const ,DDR ) ) - ( Max( ACS,DDR ) + Max( Min( ( FirstVNF_Mem_Server + Const ) ,( FirstVNF_RAM / MDR ) ),MRS ) ) )", "choosing": "Min( ( ( MUR - DS ) / ( RCSe + MUC ) ) ,( ( MUC / RCSe ) * Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( Min( FirstVNF_Mem ,PN ) - ARS ) ) - ( Max( FirstVNF_Mem_Server,MRS ) + Max( ACS,DDR ) ) )", "choosing": "( ( MUR - Max( MLU,MUM ) ) - ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,ARS ) / PN ) / ( PN / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Max( ( CS * CS ),MUR ) / Min( Max( DS,RMSe ) ,MUR ) ) ,( ( RMSe + RMSe ) - RMSe ) ) ,Max( MUM,Max( RRSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU + MDR ) ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RMSe + RMSe ) - MUR ) ,( Min( RCSe ,RCSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,Min( FirstVNF_RAM ,ARS ) )", "choosing": "( ( RRSe * RRSe ) / Min( MUM ,MUC ) )", "obj1": 0.6187739463601533, "obj2": 0.27039859893672713}, {"determining": "( ( Const - DDR ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "Min( ( RMSe / CS ) ,( ( RRSe / MLU ) * Min( ( CS * RCSe ) ,Max( Max( MUC,RRSe ),DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - DDR ) / Max( CRS,MRS ) )", "choosing": "Min( ( CS / RMSe ) ,Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * PN ) / ( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( DDR - FirstVNF_Mem ) ) ) + ( ( ( CRS / ACS ) / ( FirstVNF_RAM - ACS ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( RMSe / ( RMSe + DS ) ) * ( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) ) ) / ( Min( MUR ,RRSe ) + Max( RRSe,MUM ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( RMSe * MLU ) )", "obj1": 0.6551724137931034, "obj2": 0.24833950350560008}, {"determining": "( ( ( ( ARS - FirstVNF_RAM_Server ) / Max( ARS,FirstVNF_Mem ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) - Min( Min( FirstVNF_RAM ,Min( ARS ,( AMS - AMS ) ) ) ,FirstVNF_CPU ) )", "choosing": "( Max( Max( ( DS * MUR ),Min( MUR ,MUC ) ),( CS + MUM ) ) + ( ( ( RRSe / RCSe ) - ( RCSe / MLU ) ) - ( ( MUR * MUR ) + Min( ( ( ( MUM * ( RCSe / MUR ) ) / MLU ) + ( RMSe / MLU ) ) ,MUM ) ) ) )", "obj1": 0.8084291187739464, "obj2": 0.13979593337795507}, {"determining": "Min( ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,ARS ) ) ,Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( MUM * ( RCSe - RCSe ) )", "obj1": 0.6168582375478927, "obj2": 0.27116960455251543}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( DDR - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / ( DS + CS ) ) ) ,Min( ( ( MUR + CS ) / ( MUM - RMSe ) ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.6724137931034483, "obj2": 0.2409262130411736}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( ( ( Max( DDR,Max( BR,FirstVNF_Mem_Server ) ) * RRS ) / RRS ) - ( Const + AMS ) ) )", "choosing": "( Min( MUR ,DS ) + ( Min( MUR ,MUM ) - ( MLU - ( Max( MLU,DS ) + RMSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( ( ( Max( DDR,Max( BR,FirstVNF_Mem_Server ) ) * RRS ) / RRS ) - ( Const + AMS ) ) )", "choosing": "( Min( MUR ,DS ) + ( Min( MUR ,MUM ) - ( MLU - ( Max( MLU,DS ) + RMSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) + ( ( ( Max( DDR,Max( BR,FirstVNF_Mem_Server ) ) * RRS ) / RRS ) - ( Const + AMS ) ) )", "choosing": "( Min( MUR ,DS ) + ( Min( MUR ,MUM ) - ( MLU - ( Max( MLU,DS ) + RMSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "( ( ( Max( Min( RRS ,FirstVNF_Mem ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) + ( ( ( RCSe - MUR ) + ( MLU - ( MUM / DS ) ) ) / Max( ( DS * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( CRS * FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server )", "choosing": "( Min( ( ( RCSe / ( ( RMSe * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * ( RMSe / ( DS - Max( MUM,MUC ) ) ) ) ,( MUM - MUC ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.9559386973180076, "obj2": 0.02092741103868173}, {"determining": "( ( ( Max( Min( RRS ,( AMS + AMS ) ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) + Min( ( ( RRSe + Min( MUR ,Min( MUM ,MUM ) ) ) - MUM ) ,( MUR * MUC ) ) ) - Max( ( DS * MUC ),( MUM * RRSe ) ) ) + ( ( Min( MUC ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe / MUR ) * ( DS + DS ) ) / Min( Max( RRSe,( DS + MUR ) ) ,CS ) )", "obj1": 0.9731800766283525, "obj2": 0.010100120650449535}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + ( ( MRS / ( ( ( FirstVNF_CPU * ARS ) / FirstVNF_RAM ) / ACS ) ) + FirstVNF_Mem_Server ) ) ,( Max( ( MDR / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( Max( MUC,Max( Max( Max( ( MUM - DS ),( CS / ( ( RCSe + MUR ) - Min( MUR ,CS ) ) ) ),Max( MUR,RRSe ) ),( Max( DS,MUR ) / RCSe ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7624521072796935, "obj2": 0.1562778740011578}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( ( MDR + FirstVNF_CPU ) - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( MLU,RCSe ) * ( MUR / ( ( CS * RCSe ) - RMSe ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "Min( ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,ARS ) ) ,Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( MUM * ( RCSe - RCSe ) )", "obj1": 0.6168582375478927, "obj2": 0.27116960455251543}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( ( ( Max( Min( RRS ,FirstVNF_Mem ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) + ( ( ( RCSe - MUR ) + ( MLU - ( MUM / DS ) ) ) / Max( ( DS * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7471264367816092, "obj2": 0.15969650604541644}, {"determining": "Min( ( DDR * MRS ) ,( Max( FirstVNF_Mem_Server,( ( FirstVNF_Mem_Server * FirstVNF_CPU ) * AMS ) ) + FirstVNF_Mem ) )", "choosing": "( ( DS + MUM ) * ( RCSe + ( MLU + DS ) ) )", "obj1": 0.6417624521072797, "obj2": 0.25364817351778857}, {"determining": "( Max( Max( ( FirstVNF_CPU - PN ),Max( FirstVNF_Mem_Server,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,Min( Min( DDR ,FirstVNF_Mem_Server ) ,Const ) ) ) ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) ) * ( DS / ( Max( MUM,( MUR * DS ) ) - RMSe ) ) )", "obj1": 0.975095785440613, "obj2": 0.008466076952933563}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7471264367816092, "obj2": 0.15969650604541644}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( DDR - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / ( DS + CS ) ) ) ,Min( ( ( MUR + CS ) / ( MUM - RMSe ) ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.6724137931034483, "obj2": 0.2409262130411736}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe / MUR ) * ( DS + DS ) ) / Min( Max( RRSe,( DS + MUR ) ) ,CS ) )", "obj1": 0.9731800766283525, "obj2": 0.010100120650449535}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / Max( Min( FirstVNF_RAM ,ACS ),Min( Const ,PN ) ) ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( MUR - MUR ) / ( RMSe + MLU ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145808}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - DDR ) + ( ( ( ACS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( ARS ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - CS ) / ( DS + CS ) ) ) ,( RRSe / CS ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145808}, {"determining": "Min( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + ARS ) ,( ( Max( FirstVNF_RAM_Server,BR ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( DS + MUM ) * ( ( MLU - ( DS / RMSe ) ) + MUC ) )", "obj1": 0.7126436781609196, "obj2": 0.16196643619997303}, {"determining": "( ( ( Max( Min( RRS ,FirstVNF_Mem ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( MRS + Max( FirstVNF_CPU_Server,BR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( MUM,RMSe ) / MUM ) + ( ( ( RCSe - MUR ) + ( MLU - ( MUM / DS ) ) ) / Max( ( DS - MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "( ( ( Max( Min( RRS ,FirstVNF_Mem ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) + ( ( ( RCSe - MUR ) + ( MLU - ( MUM / DS ) ) ) / Max( ( DS * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7471264367816092, "obj2": 0.15969650604541644}, {"determining": "( Max( PN,( MRS + ( RRS * ACS ) ) ) * ( ( AMS / PN ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUM * MLU ) - ( ( RCSe - MUR ) + ( MLU - ( MUM / ( Max( ( RRSe * RRSe ),( CS - MUM ) ) / ( CS * RRSe ) ) ) ) ) ) ,( ( ( MUR - MUR ) - ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.6609195402298851, "obj2": 0.24224911063459587}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( MDR / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( ( MUM - RMSe ) * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7624521072796935, "obj2": 0.1562778740011578}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( DDR - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / ( DS + CS ) ) ) ,Min( ( ( MUR + CS ) / ( MUM - RMSe ) ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.6724137931034483, "obj2": 0.2409262130411736}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( Max( FirstVNF_CPU_Server,BR ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( ( Min( MUC ,RRSe ) + DS ) - ( RMSe / MLU ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005999928234664083}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( ( ( PN - DDR ) + Max( AMS,Min( DDR ,ARS ) ) ) / ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( ( MUR * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) * ( MUM + MUR ) ) ,( ( ( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) - Max( Max( ( CS + MUR ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) ) - Min( DS ,RMSe ) ) ) + ( ( MUM - CS ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.9195402298850575, "obj2": 0.04961489277878278}, {"determining": "Min( ( FirstVNF_CPU_Server / MDR ) ,( FirstVNF_RAM / ARS ) )", "choosing": "( Min( MUM ,RMSe ) / ( ( MLU + RCSe ) / ( CS * Max( Min( DS ,( RRSe + CS ) ),DS ) ) ) )", "obj1": 0.6187739463601533, "obj2": 0.27039859893672713}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( MDR / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * ( Const + DDR ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,DS ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.764367816091954, "obj2": 0.14861057145680207}, {"determining": "( ( Min( ( ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( Min( ( ( RCSe / ( ( RMSe * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + ( MLU / DS ) ) ) ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0008734721242326575}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.8275862068965517, "obj2": 0.11500073852719755}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008466076952933563}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / ( DS + CS ) ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145808}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Const + MRS ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.6283524904214559, "obj2": 0.25588296479418843}, {"determining": "( Min( ACS ,FirstVNF_RAM ) / Min( ( MDR - Min( ( DDR * MRS ) ,Min( ARS ,( ARS - MDR ) ) ) ) ,( DDR + MDR ) ) )", "choosing": "( ( ( MUR / MUR ) - RRSe ) - ( Max( ( MUM / ( MUC / MLU ) ),CS ) * RRSe ) )", "obj1": 0.7068965517241379, "obj2": 0.19276293353318746}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( ( ( BR - BR ) * Max( FirstVNF_CPU_Server,Max( CRS,Max( Min( Min( FirstVNF_RAM ,AMS ) ,BR ),PN ) ) ) ),( DDR * FirstVNF_Mem ) ) + ( ( Min( CRS ,ACS ) / ( BR - AMS ) ) / ( ( RRS - CRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( MLU,RCSe ) * ( MUR / ( RMSe - ( ( MUM * CS ) * ( Min( ( MUM / Min( MUR ,MUC ) ) ,Max( MUM,( MLU - DS ) ) ) * MUR ) ) ) ) )", "obj1": 0.9099616858237548, "obj2": 0.07539754442144528}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),( FirstVNF_Mem / RRS ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( DS,RMSe ) ,( DS + Max( RCSe,CS ) ) )", "obj1": 0.9808429118773946, "obj2": 0.007204168208869176}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,DS ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.6762452107279694, "obj2": 0.22803984743688754}, {"determining": "Max( ( MDR + ( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem * Const ) ) - FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ),Max( ( RRS - ACS ),MRS ) )", "choosing": "( Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + MLU ) ) ) / ( ( MUM * ( RMSe - RCSe ) ) * DS ) )", "obj1": 0.578544061302682, "obj2": 0.2985257658882275}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,MLU ) - CS )", "obj1": 0.9137931034482759, "obj2": 0.06949815456156856}, {"determining": "( ( ( Max( Min( RRS ,FirstVNF_Mem ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) + ( ( ( RCSe - MUR ) + ( MLU - ( MUM / DS ) ) ) / Max( ( DS * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.8869731800766284, "obj2": 0.08551168201837168}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Const + MRS ) )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.6053639846743295, "obj2": 0.27689351947992474}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( ( ( RMSe - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / MUM ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( ( ( RMSe - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / MUM ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( Max( BR,Const ) - ( ( FirstVNF_Mem * FirstVNF_RAM ) * FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - DS ) * ( ( ( RMSe + MLU ) / ( DS - CS ) ) / ( ( MUM * CS ) - ( MUC + CS ) ) ) )", "obj1": 0.8946360153256705, "obj2": 0.07627968819345105}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - ( RRS + Min( Max( Const,FirstVNF_RAM ) ,FirstVNF_CPU ) ) ) ) ) ) + ( ( ( PN - DDR ) + Max( BR,ARS ) ) / ( ( RRS * RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + RMSe ) ) ) ) ,CS ) * ( MUC / ( MUR / RRSe ) ) )", "obj1": 0.9923371647509579, "obj2": 0.0032878185814136326}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( Min( ( ( RCSe / ( ( RMSe * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.9540229885057471, "obj2": 0.02191247592168514}, {"determining": "Min( ( FirstVNF_CPU_Server + Min( FirstVNF_CPU ,ARS ) ) ,Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( MUM * ( RCSe - RCSe ) )", "obj1": 0.6168582375478927, "obj2": 0.27116960455251543}, {"determining": "( Min( ( FirstVNF_Mem_Server - RRS ) ,( ( ARS - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * DDR ) ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( MUR - MUR ) / ( ( RMSe / ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) ) + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.015378572680631452}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,( ( ARS - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * DDR ) ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.946360153256705, "obj2": 0.025765423145772237}], "5": [{"determining": "( ( Const + MRS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) * ( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) - Max( FirstVNF_Mem_Server,( FirstVNF_RAM * Const ) ) ) / Min( ( MDR * FirstVNF_CPU ) ,ACS ) )", "choosing": "( ( MLU / Min( ( ( ( RCSe * ( Min( MUM ,MUR ) * Max( RRSe,CS ) ) ) / Max( RRSe,Min( Min( RRSe ,MUC ) ,DS ) ) ) - ( ( ( MUC + MUR ) * CS ) + MUC ) ) ,( MLU + MUM ) ) ) * Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - DDR ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS / ( ACS + Max( ( RRS - DDR ),FirstVNF_Mem ) ) ) ,ACS ) / ( ( FirstVNF_Mem_Server + Min( PN ,ARS ) ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * Max( MUC,RMSe ) ) - ( ( RCSe / RMSe ) - ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( AMS + FirstVNF_Mem ) ,ARS ) ,( ( MRS * FirstVNF_RAM ) - ( Min( Min( Min( ( ( RRS - AMS ) - ( FirstVNF_CPU + Const ) ) ,CRS ) ,MRS ) ,ARS ) / RRS ) ) )", "choosing": "Max( Max( Max( ( CS * ( Min( ( MUC + ( CS - RCSe ) ) ,DS ) - MUR ) ),RCSe ),( ( MUR - MUR ) - RCSe ) ),( Min( DS ,RMSe ) / ( RCSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( Const + DDR ) ) - ( Max( CRS,PN ) - ( ( FirstVNF_RAM * FirstVNF_CPU ) - ( MRS - RRS ) ) ) )", "choosing": "Min( ( ( RCSe * ( Min( MUC ,( ( ( DS - RMSe ) / Min( MUC ,CS ) ) / Min( MUC ,( RRSe - MUM ) ) ) ) / DS ) ) / ( RCSe + MUC ) ) ,Max( ( MUM - Max( ( ( ( MUM + ( MUC + RRSe ) ) * ( Min( RCSe ,MUC ) + RRSe ) ) + ( RRSe * MLU ) ),CS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) - ( MDR - ACS ) )", "choosing": "( Max( Min( RRSe ,RCSe ),Max( MLU,RCSe ) ) + ( ( Max( MUM,RCSe ) / DS ) / ( ( MUR - ( ( RCSe - Max( ( RCSe + RMSe ),( DS + RRSe ) ) ) * ( ( CS - ( RRSe / RRSe ) ) - ( ( RRSe - MUC ) / ( MLU * MUC ) ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( ( ( RRS * BR ) * Min( MRS ,AMS ) ) - FirstVNF_Mem ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,( Max( ( ( ( DS * ( CS * MLU ) ) / RRSe ) * MUC ),( MUR + MUM ) ) - MUC ) ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * FirstVNF_Mem ) * FirstVNF_RAM ) - Const ) / ( ARS / ACS ) )", "choosing": "( ( MUC / Min( ( RRSe + MUC ) ,MUM ) ) * ( MUC / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * FirstVNF_Mem ) - ( AMS * FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,Min( Const ,PN ) ) ) - Max( ( ( ARS - ARS ) - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU / AMS ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) / ( RMSe + MLU ) ) - Min( MLU ,MUR ) ) - Max( Max( ( MUR + CS ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( FirstVNF_Mem,( FirstVNF_CPU * Max( MRS,ARS ) ) ) - ( ACS / MRS ) )", "choosing": "( ( ( Min( RRSe ,MUC ) + Min( MUC ,MLU ) ) + Min( ( MUM * DS ) ,( CS - MUC ) ) ) - ( ( Max( RCSe,MLU ) + ( DS * CS ) ) - ( Max( CS,DS ) - ( RRSe - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + Min( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) * Min( RRS ,ARS ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( MDR ,BR ) ) ) )", "choosing": "( Min( ( ( RCSe / ( ( MUR * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) + ( ( ARS - FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) ) - Min( FirstVNF_RAM ,( Min( BR ,ACS ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( ( ( MUR - DS ) - Max( MUM,CS ) ),Min( MUR ,MUC ) ),Min( ( MLU / RRSe ) ,( CS + MUR ) ) ) + ( ( ( RRSe / RCSe ) - ( RCSe / MLU ) ) - ( ( MUR * MUR ) + ( RMSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_CPU ,MDR ) ,FirstVNF_RAM ) ),FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server * ( BR + ( DDR / Const ) ) ) ) - ( BR + MDR ) ) )", "choosing": "( ( RCSe / ( CS / Max( Min( Max( ( MUR / ( RCSe / MLU ) ),( DS / DS ) ) ,DS ),MLU ) ) ) - ( Max( ( RMSe - RMSe ),CS ) + ( ( ( Max( MLU,RMSe ) * ( CS / MUC ) ) - MLU ) / ( DS / ( DS + ( RRSe - MUR ) ) ) ) ) )", "obj1": 0.6992337164750958, "obj2": 0.19827730583543504}, {"determining": "( ( BR / FirstVNF_RAM ) + Min( ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) + Min( BR ,MDR ) ) ) )", "choosing": "( Max( MUR,( ( RRSe + Min( RRSe ,Min( MUC ,Min( DS ,( MLU - MUM ) ) ) ) ) + ( MUM + DS ) ) ) + ( MUC / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( CRS,CRS ) ) / ( ( FirstVNF_Mem / ARS ) - ( FirstVNF_Mem_Server / BR ) ) ) + ( ACS - MRS ) )", "choosing": "( Min( Min( MLU ,( RMSe * ( ( CS - RRSe ) / ( MUM * ( MLU - RCSe ) ) ) ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,( Const * ( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) * MRS ) ) ) * ( RRS * FirstVNF_CPU ) ) - ( Const * Max( BR,Const ) ) )", "choosing": "( Max( ( CS + Max( RCSe,( RCSe / MUC ) ) ),( MUR / RRSe ) ) * Min( RCSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) * ( ( MRS - ( ( ACS - RRS ) * FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / Min( ARS ,ACS ) )", "choosing": "( Min( ( ( MUM - CS ) * Min( CS ,Min( CS ,MUR ) ) ) ,( ( RCSe + CS ) - ( MUR + DS ) ) ) * ( ( ( DS - CS ) / ( MLU + MLU ) ) / ( ( MUM * CS ) - ( MUC + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( ( MRS - FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,CRS ) ) ) / Min( ARS ,ACS ) )", "choosing": "( Min( Max( MUM,RRSe ) ,Max( MUC,CS ) ) - ( ( RCSe + CS ) / ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( FirstVNF_Mem_Server,ACS ) + FirstVNF_RAM_Server ) / FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,BR ) ) / ( ( ( FirstVNF_Mem * FirstVNF_RAM ) - AMS ) - ( Const / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RMSe + MLU ) / ( DS - CS ) ) / ( ( MUM * ( MUR / CS ) ) - Min( MUC ,Max( MUC,( CS / RMSe ) ) ) ) ) * ( RRSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Const + DDR ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,DS ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * PN ) - ( FirstVNF_Mem - PN ) )", "choosing": "Min( Max( DS,RMSe ) ,( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - DDR ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,Max( ( CS - RCSe ),( RMSe / RCSe ) ) ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Min( ( FirstVNF_Mem_Server / RRS ) ,Const ) ) * PN ) - ( PN * FirstVNF_Mem ) )", "choosing": "Min( Max( CS,MUM ) ,Max( RCSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / Min( Const ,DDR ) ) - ( Max( ACS,DDR ) + Max( Min( ( FirstVNF_Mem_Server + Const ) ,( FirstVNF_RAM / MDR ) ),MRS ) ) )", "choosing": "Min( ( ( MUR - DS ) / ( RCSe + MUC ) ) ,( ( MUC / RCSe ) * Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / ( Min( FirstVNF_Mem ,PN ) - ARS ) ) - ( Max( FirstVNF_Mem_Server,MRS ) + Max( ACS,DDR ) ) )", "choosing": "( ( MUR - Max( MLU,MUM ) ) - ( RCSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,ARS ) / PN ) / ( PN / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Max( ( CS * CS ),MUR ) / Min( Max( DS,RMSe ) ,MUR ) ) ,( ( RMSe + RMSe ) - RMSe ) ) ,Max( MUM,Max( RRSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( FirstVNF_CPU + MDR ) ) / ( BR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( RMSe + RMSe ) - MUR ) ,( Min( RCSe ,RCSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - DDR ) / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "Min( ( RMSe / CS ) ,( ( RRSe / MLU ) * Min( ( CS * RCSe ) ,Max( Max( MUC,RRSe ),DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - DDR ) / Max( CRS,MRS ) )", "choosing": "Min( ( CS / RMSe ) ,Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * PN ) / ( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( DDR - FirstVNF_Mem ) ) ) + ( ( ( CRS / ACS ) / ( FirstVNF_RAM - ACS ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( RMSe / ( RMSe + DS ) ) * ( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) ) ) / ( Min( MUR ,RRSe ) + Max( RRSe,MUM ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( RMSe * MLU ) )", "obj1": 0.6551724137931034, "obj2": 0.24833950350560008}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( ( MDR + FirstVNF_CPU ) - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( MLU,RCSe ) * ( MUR / ( ( CS * RCSe ) - RMSe ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "Min( ( DDR * MRS ) ,( Max( FirstVNF_Mem_Server,( ( FirstVNF_Mem_Server * FirstVNF_CPU ) * AMS ) ) + FirstVNF_Mem ) )", "choosing": "( ( DS + MUM ) * ( RCSe + ( MLU + DS ) ) )", "obj1": 0.6417624521072797, "obj2": 0.25364817351778857}, {"determining": "( Max( Max( ( FirstVNF_CPU - PN ),Max( FirstVNF_Mem_Server,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,Min( Min( DDR ,FirstVNF_Mem_Server ) ,Const ) ) ) ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) ) * ( DS / ( Max( MUM,( MUR * DS ) ) - RMSe ) ) )", "obj1": 0.975095785440613, "obj2": 0.008466076952933563}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / Max( Min( FirstVNF_RAM ,ACS ),Min( Const ,PN ) ) ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( MUR - MUR ) / ( RMSe + MLU ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145808}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - DDR ) + ( ( ( ACS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( ARS ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - CS ) / ( DS + CS ) ) ) ,( RRSe / CS ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145808}, {"determining": "Min( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + ARS ) ,( ( Max( FirstVNF_RAM_Server,BR ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( DS + MUM ) * ( ( MLU - ( DS / RMSe ) ) + MUC ) )", "obj1": 0.7126436781609196, "obj2": 0.16196643619997303}, {"determining": "( Max( PN,( MRS + ( RRS * ACS ) ) ) * ( ( AMS / PN ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUM * MLU ) - ( ( RCSe - MUR ) + ( MLU - ( MUM / ( Max( ( RRSe * RRSe ),( CS - MUM ) ) / ( CS * RRSe ) ) ) ) ) ) ,( ( ( MUR - MUR ) - ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.6609195402298851, "obj2": 0.24224911063459587}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( Max( FirstVNF_CPU_Server,BR ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( ( Min( MUC ,RRSe ) + DS ) - ( RMSe / MLU ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005999928234664083}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( ( ( PN - DDR ) + Max( AMS,Min( DDR ,ARS ) ) ) / ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( ( MUR * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) * ( MUM + MUR ) ) ,( ( ( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) - Max( Max( ( CS + MUR ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) ) - Min( DS ,RMSe ) ) ) + ( ( MUM - CS ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.9195402298850575, "obj2": 0.04961489277878278}, {"determining": "( ( Min( ( ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( Min( ( ( RCSe / ( ( RMSe * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + ( MLU / DS ) ) ) ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0008734721242326575}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.8275862068965517, "obj2": 0.11500073852719755}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008466076952933563}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / ( DS + CS ) ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145808}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Const + MRS ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.6283524904214559, "obj2": 0.25588296479418843}, {"determining": "( Min( ACS ,FirstVNF_RAM ) / Min( ( MDR - Min( ( DDR * MRS ) ,Min( ARS ,( ARS - MDR ) ) ) ) ,( DDR + MDR ) ) )", "choosing": "( ( ( MUR / MUR ) - RRSe ) - ( Max( ( MUM / ( MUC / MLU ) ),CS ) * RRSe ) )", "obj1": 0.7068965517241379, "obj2": 0.19276293353318746}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),( FirstVNF_Mem / RRS ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( DS,RMSe ) ,( DS + Max( RCSe,CS ) ) )", "obj1": 0.9808429118773946, "obj2": 0.007204168208869176}, {"determining": "Max( ( MDR + ( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem * Const ) ) - FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ),Max( ( RRS - ACS ),MRS ) )", "choosing": "( Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + MLU ) ) ) / ( ( MUM * ( RMSe - RCSe ) ) * DS ) )", "obj1": 0.578544061302682, "obj2": 0.2985257658882275}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Const + MRS ) )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.6053639846743295, "obj2": 0.27689351947992474}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( ( ( RMSe - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / MUM ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( ( ( RMSe - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / MUM ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - ( RRS + Min( Max( Const,FirstVNF_RAM ) ,FirstVNF_CPU ) ) ) ) ) ) + ( ( ( PN - DDR ) + Max( BR,ARS ) ) / ( ( RRS * RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + RMSe ) ) ) ) ,CS ) * ( MUC / ( MUR / RRSe ) ) )", "obj1": 0.9923371647509579, "obj2": 0.0032878185814136326}, {"determining": "( Min( ( FirstVNF_Mem_Server - RRS ) ,( ( ARS - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * DDR ) ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( MUR - MUR ) / ( ( RMSe / ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) ) + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.015378572680631452}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,( ( ARS - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * DDR ) ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.946360153256705, "obj2": 0.025765423145772237}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * Min( ( FirstVNF_Mem_Server + Const ) ,( FirstVNF_RAM / MDR ) ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( ( MUR - DS ) / ( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / Min( Const ,DDR ) ) - ( Max( ACS,DDR ) + Max( Min( ( FirstVNF_Mem_Server + Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) ) ,( FirstVNF_RAM / MDR ) ),MRS ) ) )", "choosing": "Min( ( ( MUR - DS ) / ( RCSe + MUC ) ) ,( ( MUC / RCSe ) * Min( ( MUR / ( RMSe - MUR ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / Min( CS ,CS ) ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9310344827586207, "obj2": 0.029057747376623456}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / ( DS + CS ) ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.896551724137931, "obj2": 0.05602428933642962}, {"determining": "Max( ( MDR + ( ( Const - FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ),Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + MLU ) ) ) / ( ( DS * RMSe ) + DS ) )", "obj1": 0.5862068965517241, "obj2": 0.29504830193719145}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) + ( ( ( MRS / Max( Min( FirstVNF_RAM ,MRS ),Min( PN ,Const ) ) ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( MUR - MUR ) / ( RMSe + CS ) ) ,Min( ( MUM - MLU ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145808}, {"determining": "( ( ACS - Min( MDR ,( Const + ARS ) ) ) / Min( ( FirstVNF_CPU_Server - Min( ( DDR * MRS ) ,Min( FirstVNF_RAM ,ARS ) ) ) ,( DDR + MDR ) ) )", "choosing": "( ( MUM - RRSe ) - ( Max( MLU,CS ) + RRSe ) )", "obj1": 0.7068965517241379, "obj2": 0.19276293353318746}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) + ( ( ( RCSe - MUR ) + ( MLU - ( MUM / Min( RMSe ,RMSe ) ) ) ) / Max( ( DS * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.0692177444657219}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( MUM * RMSe ) - ( ( RCSe + CS ) - ( MUR + DS ) ) )", "obj1": 0.9885057471264368, "obj2": 0.005483777100164929}, {"determining": "( ( Const / Min( Max( ( Max( ( FirstVNF_RAM + DDR ),( DDR / Const ) ) - RRS ),AMS ) ,BR ) ) * ( Min( FirstVNF_Mem_Server ,Const ) + ( ( ARS / FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( Min( RRSe ,MUM ) + RRSe ) + ( MUR - MUR ) ) - ( ( ( RMSe / ( ( MUM + MUR ) + Min( MLU ,( MUR * MLU ) ) ) ) + MLU ) / ( MUR - MUR ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.015378572680631452}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,( ( ARS - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * DDR ) ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.946360153256705, "obj2": 0.025765423145772237}, {"determining": "( ( FirstVNF_RAM / PN ) - Max( BR,CRS ) )", "choosing": "Max( MUM,Min( Min( Min( MLU ,MUR ) ,Max( MUC,MLU ) ) ,( MUR * ( ( ( RMSe - MUC ) / DS ) + DS ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.031582105019680305}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( ( ( RMSe - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / MUM ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,( MRS + AMS ) ) )", "choosing": "Min( ( ( MUM * MLU ) - ( ( RCSe - MUR ) + ( MLU - ( MUM / DS ) ) ) ) ,( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.6609195402298851, "obj2": 0.24224911063459587}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( ( MRS / FirstVNF_RAM ) / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - FirstVNF_RAM ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( MUM + MLU ) * ( MUR / ( MUR - RMSe ) ) )", "obj1": 0.7720306513409961, "obj2": 0.13951806766268227}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( ( MUM - RMSe ) * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.9712643678160919, "obj2": 0.009153104101922611}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( MDR / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,( RRSe + MUC ) ) ,DS ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.6685823754789272, "obj2": 0.2279443455599019}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( MDR / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * ( Const + DDR ) ) ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,DS ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.7471264367816092, "obj2": 0.1444037313995521}, {"determining": "( ( Const - DDR ) / ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) ,Max( MUM,RCSe ) )", "obj1": 0.8812260536398467, "obj2": 0.05927542971935461}, {"determining": "( MRS / ( FirstVNF_Mem / ARS ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,DS ) ) ,CS ) * ( MUC / ( ( CS - RRSe ) / ( MUM * ( MLU - RCSe ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.26090396601829}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( CRS,CRS ) ) / ( ( FirstVNF_Mem / ARS ) - ( FirstVNF_Mem_Server / BR ) ) ) + ( ACS - ( MRS / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( ( MLU * Min( Min( RCSe ,MLU ) ,DS ) ) ,( RMSe * ( ( CS - RRSe ) / ( MUM * ( MLU - RCSe ) ) ) ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.6168582375478927, "obj2": 0.2634730284849724}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) - Max( FirstVNF_Mem_Server,( FirstVNF_RAM * Const ) ) ) / ( ( ( Max( Min( RRS ,FirstVNF_Mem ),FirstVNF_RAM_Server ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) ) )", "choosing": "( ( MLU / Min( ( ( Min( MUC ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) ,( MLU + MUM ) ) ) * Max( MLU,RMSe ) )", "obj1": 0.8448275862068966, "obj2": 0.11336742843971115}, {"determining": "( ( Min( ( ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( Min( ( ( RCSe / ( ( RMSe * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + ( MLU / DS ) ) ) ) * Max( MLU,MLU ) ) ,( ( CS * MUM ) - Min( DS ,RMSe ) ) ) + ( Min( ( RCSe * MUR ) ,( MUM - RMSe ) ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0008734721242326575}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.8563218390804598, "obj2": 0.09218170023640124}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( FirstVNF_Mem * ARS ) - ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) + ( ( ( BR - ARS ) + ( PN - DDR ) ) / ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( MUM + MUR ) * ( RCSe - ( ( MUR * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) ) ,( ( ( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) - Max( Max( ( CS + MUR ),( MUC + RMSe ) ),( Min( Min( MUM ,MUM ) ,MUC ) + ( MUM + MUM ) ) ) ) - Min( DS ,RMSe ) ) ) + ( RRSe + MUM ) )", "obj1": 0.9195402298850575, "obj2": 0.04961489277878278}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.018710526091430826}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,DS ),Min( Min( Min( MUM ,( ( DS + MUM ) + RMSe ) ) ,( MUC / MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7318007662835249, "obj2": 0.15614607461032587}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( MDR / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * ( Const + DDR ) ) ) )", "choosing": "( ( DS + MUM ) * ( MUM - RRSe ) )", "obj1": 0.7011494252873564, "obj2": 0.19642645350523316}, {"determining": "( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( ( MUR - DS ) - Max( MUM,CS ) ) / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9731800766283525, "obj2": 0.008864328659043548}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008466076952933563}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.8524904214559387, "obj2": 0.09510323426139508}], "6": [{"determining": "( ( Const + MRS ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) * ( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( ( FirstVNF_CPU_Server * PN ) / ( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( DDR - FirstVNF_Mem ) ) ) + ( ( ( CRS / ACS ) / ( FirstVNF_RAM - ACS ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( RMSe / ( RMSe + DS ) ) * ( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) ) ) / ( Min( MUR ,RRSe ) + Max( RRSe,MUM ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) - ( RMSe * MLU ) )", "obj1": 0.6551724137931034, "obj2": 0.24833950350560008}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( ( MDR + FirstVNF_CPU ) - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( MLU,RCSe ) * ( MUR / ( ( CS * RCSe ) - RMSe ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / Max( Min( FirstVNF_RAM ,ACS ),Min( Const ,PN ) ) ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( MUR - MUR ) / ( RMSe + MLU ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145808}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - DDR ) + ( ( ( ACS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( ARS ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - CS ) / ( DS + CS ) ) ) ,( RRSe / CS ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145808}, {"determining": "Min( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + ARS ) ,( ( Max( FirstVNF_RAM_Server,BR ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( DS + MUM ) * ( ( MLU - ( DS / RMSe ) ) + MUC ) )", "obj1": 0.7126436781609196, "obj2": 0.16196643619997303}, {"determining": "( Max( PN,( MRS + ( RRS * ACS ) ) ) * ( ( AMS / PN ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( MUM * MLU ) - ( ( RCSe - MUR ) + ( MLU - ( MUM / ( Max( ( RRSe * RRSe ),( CS - MUM ) ) / ( CS * RRSe ) ) ) ) ) ) ,( ( ( MUR - MUR ) - ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.6609195402298851, "obj2": 0.24224911063459587}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( Max( FirstVNF_CPU_Server,BR ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( ( Min( MUC ,RRSe ) + DS ) - ( RMSe / MLU ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005999928234664083}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) + ( ( ( PN - DDR ) + Max( AMS,Min( DDR ,ARS ) ) ) / ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( Min( RCSe ,( ( MUR * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) * ( MUM + MUR ) ) ,( ( ( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) - Max( Max( ( CS + MUR ),( MUC + RMSe ) ),Max( Min( RRSe ,RRSe ),( MLU + MUM ) ) ) ) - Min( DS ,RMSe ) ) ) + ( ( MUM - CS ) - ( Min( RMSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.9195402298850575, "obj2": 0.04961489277878278}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.8275862068965517, "obj2": 0.11500073852719755}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / ( DS + CS ) ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145808}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Const + MRS ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.6283524904214559, "obj2": 0.25588296479418843}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "Max( ( MDR + ( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem * Const ) ) - FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ),Max( ( RRS - ACS ),MRS ) )", "choosing": "( Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + MLU ) ) ) / ( ( MUM * ( RMSe - RCSe ) ) * DS ) )", "obj1": 0.578544061302682, "obj2": 0.2985257658882275}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( PN / Min( DDR ,Const ) ) )", "choosing": "Min( ( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / ( ( MLU - MUR ) * CS ) ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( ( ( RMSe - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / MUM ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( ( ( RMSe - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / MUM ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( Min( ( FirstVNF_Mem_Server - RRS ) ,( ( ARS - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * DDR ) ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( MUR - MUR ) / ( ( RMSe / ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) ) + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.015378572680631452}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / Min( CS ,CS ) ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9310344827586207, "obj2": 0.029057747376623456}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / ( DS + CS ) ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.896551724137931, "obj2": 0.05602428933642962}, {"determining": "Max( ( MDR + ( ( Const - FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ),Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + MLU ) ) ) / ( ( DS * RMSe ) + DS ) )", "obj1": 0.5862068965517241, "obj2": 0.29504830193719145}, {"determining": "( Min( BR ,FirstVNF_RAM_Server ) + ( ( ( MRS / Max( Min( FirstVNF_RAM ,MRS ),Min( PN ,Const ) ) ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( MUR - MUR ) / ( RMSe + CS ) ) ,Min( ( MUM - MLU ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145808}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "( ( ( Min( MUC ,MUC ) / ( RRSe + MUR ) ) * Max( ( RCSe - CS ),( CS / DS ) ) ) + ( ( ( RCSe - MUR ) + ( MLU - ( MUM / Min( RMSe ,RMSe ) ) ) ) / Max( ( DS * MUC ),( MUM * RRSe ) ) ) )", "obj1": 0.8639846743295019, "obj2": 0.0692177444657219}, {"determining": "( ( Const / Min( Max( ( Max( ( FirstVNF_RAM + DDR ),( DDR / Const ) ) - RRS ),AMS ) ,BR ) ) * ( Min( FirstVNF_Mem_Server ,Const ) + ( ( ARS / FirstVNF_RAM ) / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( Min( RRSe ,MUM ) + RRSe ) + ( MUR - MUR ) ) - ( ( ( RMSe / ( ( MUM + MUR ) + Min( MLU ,( MUR * MLU ) ) ) ) + MLU ) / ( MUR - MUR ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.015378572680631452}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( ( ( RMSe - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / MUM ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,( MRS + AMS ) ) )", "choosing": "Min( ( ( MUM * MLU ) - ( ( RCSe - MUR ) + ( MLU - ( MUM / DS ) ) ) ) ,( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.6609195402298851, "obj2": 0.24224911063459587}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( ( MRS / FirstVNF_RAM ) / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - FirstVNF_RAM ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( MUM + MLU ) * ( MUR / ( MUR - RMSe ) ) )", "obj1": 0.7720306513409961, "obj2": 0.13951806766268227}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( ( MUM - RMSe ) * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.9712643678160919, "obj2": 0.009153104101922611}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( MDR / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,( RRSe + MUC ) ) ,DS ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.6685823754789272, "obj2": 0.2279443455599019}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( MDR / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * ( Const + DDR ) ) ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,DS ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.7471264367816092, "obj2": 0.1444037313995521}, {"determining": "( MRS / ( FirstVNF_Mem / ARS ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,DS ) ) ,CS ) * ( MUC / ( ( CS - RRSe ) / ( MUM * ( MLU - RCSe ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.26090396601829}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.8563218390804598, "obj2": 0.09218170023640124}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / ( ( FirstVNF_Mem * ARS ) - ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) + ( ( ( BR - ARS ) + ( PN - DDR ) ) / ( CRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( MUM + MUR ) * ( RCSe - ( ( MUR * ( CS + MUR ) ) / ( ( Max( MUM,DS ) + RRSe ) + MUR ) ) ) ) ,( ( ( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) - Max( Max( ( CS + MUR ),( MUC + RMSe ) ),( Min( Min( MUM ,MUM ) ,MUC ) + ( MUM + MUM ) ) ) ) - Min( DS ,RMSe ) ) ) + ( RRSe + MUM ) )", "obj1": 0.9195402298850575, "obj2": 0.04961489277878278}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.9482758620689655, "obj2": 0.018710526091430826}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,DS ),Min( Min( Min( MUM ,( ( DS + MUM ) + RMSe ) ) ,( MUC / MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7318007662835249, "obj2": 0.15614607461032587}, {"determining": "( Max( ( FirstVNF_RAM_Server - FirstVNF_CPU ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( ( MUR - DS ) - Max( MUM,CS ) ) / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9731800766283525, "obj2": 0.008864328659043548}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.8524904214559387, "obj2": 0.09510323426139508}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.8314176245210728, "obj2": 0.11346008811479244}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( FirstVNF_Mem / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( ( ( MLU - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) * Min( Min( RCSe ,( RRSe + MUC ) ) ,DS ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.6417624521072797, "obj2": 0.24859506613631274}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( DS + MUM ) * ( MUM - RRSe ) )", "obj1": 0.7126436781609196, "obj2": 0.16196643619997303}, {"determining": "( ( FirstVNF_RAM * PN ) - ( Const + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) )", "choosing": "Max( MUM,Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) )", "obj1": 0.9233716475095786, "obj2": 0.03142327835005692}, {"determining": "( ( Const - DDR ) / ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.8812260536398467, "obj2": 0.05645956733775279}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_CPU ,MDR ) ,FirstVNF_RAM ) ),FirstVNF_RAM ) / ( ( FirstVNF_CPU_Server - ( FirstVNF_Mem_Server * ( BR + ( DDR / Const ) ) ) ) - ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) ) ) )", "choosing": "( ( RCSe / ( CS / Max( Min( Max( ( MUR / ( RCSe / MLU ) ),( DS / DS ) ) ,DS ),MLU ) ) ) - ( ( MUR + CS ) / MUR ) )", "obj1": 0.9961685823754789, "obj2": 0.0012892781295724728}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,( RRSe + MUC ) ) ,DS ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.9042145593869731, "obj2": 0.05244542894238028}, {"determining": "( ( ( FirstVNF_Mem_Server + BR ) - Max( FirstVNF_Mem_Server,( FirstVNF_RAM * Const ) ) ) / Min( ( MDR * FirstVNF_CPU ) ,ACS ) )", "choosing": "( ( MLU / Min( ( ( ( RCSe * ( Min( MUM ,MUR ) * Max( RRSe,CS ) ) ) / Max( RRSe,Min( Min( RRSe ,MUC ) ,DS ) ) ) - ( ( ( MUC + MUR ) * CS ) + MUC ) ) ,( MLU + MUM ) ) ) * Max( MLU,RMSe ) )", "obj1": 0.5938697318007663, "obj2": 0.28031951514840286}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9693486590038314, "obj2": 0.011150871854932933}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.9712643678160919, "obj2": 0.009153104101922611}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) * Min( PN ,( MRS + AMS ) ) )", "choosing": "Min( ( ( MUM * MLU ) - ( ( RCSe - MUR ) + ( MLU - ( MUM / DS ) ) ) ) ,( ( ( MUR - MUR ) / ( RMSe + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.6609195402298851, "obj2": 0.24224911063459587}, {"determining": "( Min( ( FirstVNF_Mem_Server - RRS ) ,( ( ARS - FirstVNF_RAM ) - ( FirstVNF_RAM * DDR ) ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( MUR - MUR ) / ( ( RMSe / ( Max( MUC,MLU ) + Max( RCSe,RMSe ) ) ) + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.8467432950191571, "obj2": 0.09908990509851284}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + ( ( ( PN - DDR ) + Max( BR,ARS ) ) / ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU / Min( ( ( ( RCSe * ( Min( MUM ,MUR ) * Max( RRSe,CS ) ) ) / Max( RRSe,Min( Min( RRSe ,MUC ) ,DS ) ) ) - ( ( ( MUC + MUR ) * CS ) + MUC ) ) ,( MLU + MUM ) ) ) * Max( MLU,RMSe ) )", "obj1": 0.9923371647509579, "obj2": 0.003229950057814046}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( Max( ( MDR / FirstVNF_CPU ),Const ) + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RCSe - MUR ) ) )", "obj1": 0.9980842911877394, "obj2": 0.0008130653726580394}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9789272030651341, "obj2": 0.007147678253299779}, {"determining": "( ( ( Const - DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( ( ( RMSe - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / MUM ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( CS * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.9885057471264368, "obj2": 0.005218409541262346}, {"determining": "( MRS / ( FirstVNF_Mem / ARS ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,DS ) ) ,CS ) * ( MUC / ( ( CS - RRSe ) / ( MUM * ( MLU - RCSe ) ) ) ) )", "obj1": 0.6245210727969349, "obj2": 0.26090396601829}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.8256704980842912, "obj2": 0.12591539056438916}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( ( ( RMSe - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / MUM ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "( ( DS + MUM ) * ( RCSe + ( MLU + DS ) ) )", "obj1": 0.9022988505747126, "obj2": 0.054145669147685385}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,( Min( CRS ,( ( DDR - RRS ) * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + ( ( ( PN - DDR ) + Max( BR,ARS ) ) / ( ( RRS - RRS ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,MLU ) ,Max( MLU,( DS + MLU ) ) ) ) ,CS ) * ( MUC / ( CS * ( Min( MUM ,MUR ) / ( ( ( RCSe / DS ) - DS ) * MUR ) ) ) ) )", "obj1": 0.6762452107279694, "obj2": 0.17177326358884557}, {"determining": "( ( Min( ( FirstVNF_RAM * DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / ( ( FirstVNF_Mem * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server - BR ) ) ) ) + FirstVNF_CPU_Server )", "choosing": "( ( ( MLU / DS ) * Max( CS,MUC ) ) * ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) )", "obj1": 0.8409961685823755, "obj2": 0.1028697530810541}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,( Min( BR ,ACS ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( DS + MUM ) * Max( ( ( MUR - DS ) - Max( MUM,CS ) ),Min( MUR ,MUC ) ) )", "obj1": 0.7854406130268199, "obj2": 0.13893260556556597}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( DS + MUM ) * ( MUM - RRSe ) )", "obj1": 0.7126436781609196, "obj2": 0.16196643619997303}, {"determining": "( ( Const - DDR ) / ( ( Max( FirstVNF_CPU_Server,BR ) + FirstVNF_Mem_Server ) + ( ( ( FirstVNF_CPU + ( ( MDR / FirstVNF_RAM ) / FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) )", "choosing": "Min( ( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / ( Min( MUC ,RRSe ) + DS ) ) - ( CS * MUM ) ) ) ) ,Max( MUM,RCSe ) )", "obj1": 0.9559386973180076, "obj2": 0.015550514359568392}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( Max( FirstVNF_CPU_Server,BR ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( ( Min( MUC ,RRSe ) + DS ) - ( RMSe / MLU ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005999928234664083}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( CS * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.975095785440613, "obj2": 0.008354160813654452}, {"determining": "( ( Max( ACS,DDR ) + ( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) / FirstVNF_CPU ) ) - ( Min( DDR ,Const ) / PN ) )", "choosing": "Min( ( ( ( ( ( RMSe - MUR ) * ( MUC * ( ( DS * RMSe ) + DS ) ) ) * MUC ) / MUM ) * Min( CS ,CS ) ) ,( ( DS * RRSe ) / ( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) )", "obj1": 0.8601532567049809, "obj2": 0.08771047857437296}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( MDR / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,( RRSe + MUC ) ) ,DS ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.6685823754789272, "obj2": 0.2279443455599019}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,( ( ARS - FirstVNF_RAM ) - ( FirstVNF_Mem_Server * DDR ) ) ) * ( Min( Const ,FirstVNF_Mem_Server ) + ( Const + AMS ) ) )", "choosing": "Min( ( ( MUM * MLU ) - Max( MUM,DS ) ) ,( ( ( MUR - MUR ) / ( ( RMSe / ( ( MUM + MUR ) + Max( RCSe,RMSe ) ) ) + MLU ) ) - ( ( CS * RRSe ) + ( MUR / MUR ) ) ) )", "obj1": 0.9636015325670498, "obj2": 0.015378572680631452}, {"determining": "Min( Min( ( ( MRS / ( ACS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( DS + MUM ) * Min( CS ,CS ) )", "obj1": 0.7375478927203065, "obj2": 0.1544334586460648}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( Max( FirstVNF_CPU_Server,BR ) + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( ( Min( MUC ,RRSe ) + DS ) - ( RMSe / MLU ) ) )", "obj1": 0.9846743295019157, "obj2": 0.005999928234664083}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / Min( CS ,CS ) ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9310344827586207, "obj2": 0.029057747376623456}, {"determining": "Min( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + ARS ) ,( ( Max( FirstVNF_RAM_Server,BR ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( DS + MUM ) * ( ( MLU - ( DS / RMSe ) ) + MUC ) )", "obj1": 0.7394636015325671, "obj2": 0.152609965661752}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - DDR ) + ( ( ( ACS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( ARS ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - CS ) / ( DS + CS ) ) ) ,( RRSe / CS ) )", "obj1": 0.603448275862069, "obj2": 0.26126984397376696}, {"determining": "Min( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + ARS ) ,( ( Max( FirstVNF_RAM_Server,BR ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( DS + MUM ) * ( ( MLU - ( DS / RMSe ) ) + MUC ) )", "obj1": 0.7394636015325671, "obj2": 0.152609965661752}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - DDR ) + ( ( ( ACS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( ARS ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - CS ) / ( DS + CS ) ) ) ,( RRSe / CS ) )", "obj1": 0.603448275862069, "obj2": 0.26126984397376696}, {"determining": "Min( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + ARS ) ,( ( Max( FirstVNF_RAM_Server,BR ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( DS + MUM ) * ( ( MLU - ( DS / RMSe ) ) + MUC ) )", "obj1": 0.7394636015325671, "obj2": 0.152609965661752}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - DDR ) + ( ( ( ACS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( ARS ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - CS ) / ( DS + CS ) ) ) ,( RRSe / CS ) )", "obj1": 0.603448275862069, "obj2": 0.26126984397376696}, {"determining": "Min( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) + ARS ) ,( ( Max( FirstVNF_RAM_Server,BR ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( DS + MUM ) * ( ( MLU - ( DS / RMSe ) ) + MUC ) )", "obj1": 0.7394636015325671, "obj2": 0.152609965661752}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - DDR ) + ( ( ( ACS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( ARS ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - CS ) / ( DS + CS ) ) ) ,( RRSe / CS ) )", "obj1": 0.603448275862069, "obj2": 0.26126984397376696}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - ( ( RMSe * CS ) + ( ( MUM - RMSe ) * MUM ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.9712643678160919, "obj2": 0.009153104101922611}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( Max( Max( ( PN - FirstVNF_CPU ),Max( BR,CRS ) ),Min( ( ARS + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - DDR ) ) ) + ( ( Min( CRS ,ACS ) / ( AMS - BR ) ) / ( ( RRS - CRS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,RCSe ) * ( MUR / ( RMSe - MUR ) ) )", "obj1": 0.9770114942528736, "obj2": 0.0077591584154483246}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( Max( ACS,DDR ) / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,( RRSe + MUC ) ) ,DS ) ) ,( ( ( RMSe * MLU ) / RMSe ) * ( ( MLU / CS ) - ( CS * MUM ) ) ) ) * ( MUC / MUC ) )", "obj1": 0.6340996168582376, "obj2": 0.24907648296034754}, {"determining": "( MRS / Max( FirstVNF_RAM_Server,Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( ( MDR / FirstVNF_CPU ),Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( MLU * Min( Min( RCSe ,( RRSe + MUC ) ) ,DS ) ) ,CS ) * ( MUC / MUC ) )", "obj1": 0.6685823754789272, "obj2": 0.2279443455599019}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / Max( Min( FirstVNF_RAM ,ACS ),Min( Const ,PN ) ) ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUR - MUR ) / ( RMSe + MLU ) ) ,Min( ( CS * CS ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9904214559386973, "obj2": 0.004628529686145808}, {"determining": "Min( Min( ( ( MRS / ( ARS - Min( MDR ,FirstVNF_CPU_Server ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,Const ) + Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / ( ( ACS - DDR ) * Min( Const ,AMS ) ) ) )", "choosing": "( ( ( RCSe / Max( MUM,( DS * RMSe ) ) ) - Max( Min( ( ( RRSe + MUC ) + ( RMSe * CS ) ) ,DS ),Min( Min( Min( MUM ,MLU ) ,Max( MUC,MLU ) ) ,( Max( CS,MLU ) - ( MUR * CS ) ) ) ) ) + Max( ( CS / ( CS / MUM ) ),MLU ) )", "obj1": 0.7318007662835249, "obj2": 0.15614607461032587}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) ,( ( ( ACS * FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) - ( MDR - ACS ) ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( ( CS - ( RRSe / RRSe ) ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / Min( CS ,CS ) ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9329501915708812, "obj2": 0.025670967329031544}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( ACS / FirstVNF_RAM_Server ) ) - Min( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem ,( ACS * ( FirstVNF_CPU + ARS ) ) ) / MDR ) ) ,Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR / FirstVNF_CPU_Server ) ) - Max( ( MRS + AMS ),Min( FirstVNF_RAM ,ARS ) ) ) )", "choosing": "Min( ( ( ( MLU * MUM ) - ( MUC * MUM ) ) / ( ( MUC - DS ) / Min( CS ,CS ) ) ) ,Min( ( ( MUR + CS ) / MUR ) ,( Min( MUC ,DS ) + ( DS - MLU ) ) ) )", "obj1": 0.9310344827586207, "obj2": 0.029057747376623456}]}