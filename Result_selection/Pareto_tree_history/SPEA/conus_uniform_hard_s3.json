{"1": [{"determining": "Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( MUC + RCSe ) )", "obj1": 0.7047817047817048, "obj2": 0.19756069688833428}, {"determining": "Min( ( Const - AMS ) ,Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) * ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / AMS ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( RMSe * MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037627579009090577}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) - Max( MRS,RRS ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - RMSe ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( RMSe / MUR ) ) )", "obj1": 0.9937629937629938, "obj2": 0.004874075651852956}, {"determining": "( ( ( BR / FirstVNF_RAM ) * ( FirstVNF_RAM - RRS ) ) + ( ( AMS - Const ) - ( BR / FirstVNF_RAM ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( RRSe / MUM ) ) * Min( ( MUM / MUM ) ,( RMSe / DS ) ) )", "obj1": 0.7297297297297297, "obj2": 0.19003325944948105}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( FirstVNF_Mem / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,( MUM - MLU ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) / ( ( MLU + MUM ) * Min( RMSe ,MUR ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06035870521337024}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - ACS ) ,( FirstVNF_RAM + ARS ) ),( ( MRS + CRS ) + Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( Min( RCSe ,MUM ) + Max( MUC,MUM ) ) )", "obj1": 0.6694386694386695, "obj2": 0.2487869046484682}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( ACS ,ARS ) + Max( CRS,ACS ) ),( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * DDR ) ) ) ,Max( ( ( FirstVNF_RAM / AMS ) / ( ( DDR - BR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ),( ( PN * ACS ) - Min( CRS ,ARS ) ) ) )", "choosing": "( ( ( ( Min( RCSe ,DS ) + MUC ) / CS ) / CS ) / ( MUR - MUM ) )", "obj1": 0.681912681912682, "obj2": 0.2485615735575209}, {"determining": "( Min( ( BR / Const ) ,( ( BR * MDR ) * ( CRS / AMS ) ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) - ( RRS / DDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) - Min( ( RCSe - RRSe ) ,Max( MUR,( MUM - MUR ) ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.6403326403326404, "obj2": 0.2643581021960421}, {"determining": "( Min( FirstVNF_CPU ,Min( AMS ,CRS ) ) * ( CRS / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,( Min( MLU ,RRSe ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / Min( DDR ,CRS ) )", "choosing": "Max( ( MUC / MUR ),( Max( ( DS / MLU ),( MUM * MLU ) ) * MUR ) )", "obj1": 0.6673596673596673, "obj2": 0.2533519362579169}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,BR ) * ( AMS * ARS ) ) * Max( Min( CRS ,Const ),( MDR * BR ) ) ) - Min( Min( ( FirstVNF_Mem + DDR ) ,( MRS / Const ) ) ,( Max( FirstVNF_RAM,Const ) - Max( MRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR + MLU ) * ( RRSe - MUC ) ) * Min( Min( MUC ,RMSe ) ,( CS - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( DS * RCSe ) ) ) )", "obj1": 0.762993762993763, "obj2": 0.18124737911595656}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) / RCSe ) - Max( MUC,( Max( RRSe,MUC ) * MLU ) ) )", "obj1": 0.6486486486486487, "obj2": 0.258813556948602}], "2": [{"determining": "Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( MUC + RCSe ) )", "obj1": 0.7047817047817048, "obj2": 0.19756069688833428}, {"determining": "Min( ( Const - AMS ) ,Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) * ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / AMS ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( RMSe * MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037627579009090577}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( FirstVNF_Mem / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,( MUM - MLU ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) / ( ( MLU + MUM ) * Min( RMSe ,MUR ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06035870521337024}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / Const ) ,( ( BR * MDR ) * ( CRS / AMS ) ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) - ( RRS / DDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) - Min( ( RCSe - RRSe ) ,Max( MUR,( MUM - MUR ) ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.6403326403326404, "obj2": 0.2643581021960421}, {"determining": "( Min( FirstVNF_CPU ,Min( AMS ,CRS ) ) * ( CRS / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,( Min( MLU ,RRSe ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( ( ( FirstVNF_CPU_Server * ARS ) / ( FirstVNF_Mem + ARS ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( ( Min( MUM ,MLU ) / RCSe ) - Max( MUC,( Max( RRSe,MUC ) * MLU ) ) )", "obj1": 0.6486486486486487, "obj2": 0.258813556948602}, {"determining": "( Max( Const,Const ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) )", "choosing": "( ( CS / RRSe ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ARS )", "choosing": "Min( Max( RCSe,RMSe ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem_Server ,RRS ) ,Max( AMS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) / Min( ( RCSe - RRSe ) ,Max( MUR,MUC ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.6403326403326404, "obj2": 0.2643581021960421}, {"determining": "( Min( ( BR / Const ) ,( ( BR * MDR ) * ( CRS / AMS ) ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) - ( RRS / DDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) - Min( ( RCSe - RRSe ) ,Max( MUR,( MUM - MUR ) ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / Const ) ,( ( BR * MDR ) * ( CRS / AMS ) ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) - ( RRS / DDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) - Min( ( RCSe - RRSe ) ,Max( MUR,( MUM - MUR ) ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR / Const ) ,( ( BR * MDR ) * ( CRS / AMS ) ) ) + ( ( ( FirstVNF_RAM_Server / MDR ) - ( RRS / DDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) - Min( ( RCSe - RRSe ) ,Max( MUR,( MUM - MUR ) ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,MUC ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( ( ARS - Const ) ,Max( ACS,FirstVNF_Mem_Server ) ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * ( Max( DS,MUR ) + RRSe ) ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "Max( ( MUM - RRSe ),( ( ( RRSe - Min( DS ,MUM ) ) * ( ( ( Max( DS,MUR ) + RRSe ) / ( MLU + DS ) ) - DS ) ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ( FirstVNF_CPU_Server / Max( DDR,FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server - ( BR * FirstVNF_CPU_Server ) ) ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( ( CS - Min( RRSe ,CS ) ) - ( MLU / MLU ) ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) )", "choosing": "( ( CS - Min( RRSe ,CS ) ) - ( MLU / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,Max( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ACS ),( MDR * ARS ) ) ) - Max( MRS,RRS ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( ( DS / CS ) + ( MUC * MUC ) ) ,( Max( MUM,DS ) - ( RRSe - RCSe ) ) ) - Min( ( CS / RCSe ) ,( RMSe / MUR ) ) )", "obj1": 0.9937629937629938, "obj2": 0.004859416984765887}, {"determining": "( ( ( FirstVNF_Mem_Server - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,( MUM - MLU ) ) )", "obj1": 0.7796257796257796, "obj2": 0.1265566417236201}, {"determining": "( ( ( FirstVNF_CPU * RRS ) - Max( FirstVNF_RAM_Server,RRS ) ) + ( MRS * CRS ) )", "choosing": "Min( ( MUM + RRSe ) ,( MLU + ( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( FirstVNF_RAM_Server,( ( DDR / FirstVNF_RAM_Server ) + ( MRS * CRS ) ) ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,MLU ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( ( ( DDR / FirstVNF_RAM_Server ) + ( MRS * CRS ) ) - FirstVNF_RAM ) )", "choosing": "( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) / ( ( MLU + MUM ) * Min( ( MLU + CS ) ,MUR ) ) )", "obj1": 0.7505197505197505, "obj2": 0.12966991651778328}, {"determining": "( ( DDR / ( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) + ( MRS * CRS ) )", "choosing": "Min( ( MUM + RRSe ) ,( MLU + ( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) / ( ( MLU + MUM ) * Min( RMSe ,MUR ) ) ) ) )", "obj1": 0.9334719334719335, "obj2": 0.04818963162217951}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "Min( ( MUM + RRSe ) ,( MLU + CS ) )", "obj1": 0.9147609147609148, "obj2": 0.07137131339505734}, {"determining": "( ( ( MDR + ACS ) + DDR ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - Const ) / ( ( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) ) - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) ) * ( FirstVNF_RAM - RRS ) ) + ( ( AMS - Const ) - ( BR / FirstVNF_RAM ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( RRSe / MUM ) ) * Min( ( MUM / MUM ) ,( Max( RRSe,MUR ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( ( ( AMS - Const ) - ( BR / FirstVNF_RAM ) ) - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( ( Max( Min( RRSe ,MUR ),( RRSe / MUM ) ) * Min( ( MUM / MUM ) ,( RMSe / DS ) ) ) * Max( ( CS - CS ),( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( Max( Min( RRSe ,MUR ),( RRSe / MUM ) ) * Min( ( MUM / MUM ) ,( RMSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Max( Min( ( MDR * FirstVNF_RAM_Server ) ,( BR + FirstVNF_RAM_Server ) ),( Max( FirstVNF_CPU_Server,AMS ) - ( ARS + DDR ) ) ) )", "choosing": "( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( ( MUC * MUC ) - ( CS - RMSe ) ) ) / ( Max( Max( CS,Max( DS,MUM ) ),Max( CS,DS ) ) + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem + MDR ) - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( Min( RRSe ,( MLU + CS ) ) - MUC ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( FirstVNF_RAM_Server,( ACS * ARS ) ) )", "choosing": "( Min( ( Min( CS ,RMSe ) * ( RCSe * RCSe ) ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "Min( ( Min( CS ,RMSe ) * ( RCSe * RCSe ) ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "Max( ( RCSe + MUR ),( ( Min( MLU ,MUC ) / MUM ) - RRSe ) )", "obj1": 0.9043659043659044, "obj2": 0.08112440858385456}, {"determining": "( Min( ( PN - Max( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ACS ),( MDR * ARS ) ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),( MUC * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( ( DS / CS ) + ( MUC * MUC ) ) ,( Max( MUM,DS ) - ( RRSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,RRS ) - ( FirstVNF_CPU_Server * DDR ) ) ,( ( FirstVNF_RAM_Server - CRS ) - ( ACS - ACS ) ) )", "choosing": "Max( ( MUR / DS ),RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR / DS ),Min( MUC ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,MRS ) - Max( ACS,MRS ) ) + ( Max( MDR,FirstVNF_Mem ) * Min( RRS ,RRS ) ) ) * ( CRS / FirstVNF_Mem ) )", "choosing": "( ( ( Max( Max( RRSe,RCSe ),RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,( Min( MLU ,RRSe ) * ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_RAM ),RRS ) - ( FirstVNF_RAM * ARS ) )", "choosing": "( Min( CS ,MUR ) * ( CS - ( MUC - ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_RAM ),RRS ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Max( Min( CS ,MUR ),( CS - ( MUC - ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_RAM ),RRS ) - ( FirstVNF_RAM * ARS ) )", "choosing": "( Min( CS ,MUR ) * ( CS - ( MUC - ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_RAM ),RRS ) - ( FirstVNF_RAM * ARS ) )", "choosing": "( Min( CS ,MUR ) * ( CS - ( MUC - ( RCSe - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + MDR ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) * FirstVNF_Mem ) / ( ( ( ACS - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + AMS ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( RRS - DDR ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( MUM - MLU ) ) / RRSe ) * ( Min( ( MUM * CS ) ,Max( DS,MUR ) ) + ( Max( MUM,MUM ) + Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) ) - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( MUC * RRSe ) ,MUM ) ,( Min( CS ,( MLU + CS ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_Mem + MDR ) - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) ) + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS * FirstVNF_Mem_Server ) ,( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) )", "choosing": "Min( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) ,Min( MUR ,DS ) )", "obj1": 0.9584199584199584, "obj2": 0.027043848620785123}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "Min( Max( CS,CS ) ,Min( MUR ,DS ) )", "obj1": 0.9667359667359667, "obj2": 0.024804335486242002}, {"determining": "( Min( Min( ( PN - MDR ) ,( PN / FirstVNF_Mem ) ) ,( ( CRS - PN ) + Max( ARS,MDR ) ) ) + ( FirstVNF_CPU_Server + Min( Min( DDR ,FirstVNF_CPU_Server ) ,( CRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) - ( RMSe + MLU ) ) / Max( ( MUR / DS ),Max( RRSe,DS ) ) ) / ( Max( ( RCSe * MUM ),Max( MUC,RMSe ) ) + Max( ( MLU / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.5987525987525988, "obj2": 0.2908002264522431}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( ( ( ( MLU / MUR ) - ( RMSe + MLU ) ) / Max( ( MUR / DS ),Max( RRSe,DS ) ) ) / ( Max( ( RCSe * MUM ),Max( MUC,RMSe ) ) + Max( ( MLU / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.9064449064449065, "obj2": 0.08024431381787829}, {"determining": "( Min( FirstVNF_CPU ,Min( AMS ,( ( FirstVNF_CPU * RRS ) - Max( FirstVNF_RAM_Server,RRS ) ) ) ) * ( CRS / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,( Min( MLU ,RRSe ) * ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( FirstVNF_RAM_Server,Min( FirstVNF_CPU ,Min( AMS ,CRS ) ) ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,( Min( MLU ,RRSe ) * ( MLU - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - ( Max( AMS,Min( Max( FirstVNF_CPU_Server,CRS ) ,MDR ) ) - RRS ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - Min( AMS ,CRS ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Min( AMS ,CRS ) ) * ( CRS / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,( Min( MLU ,RRSe ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( ( ( ( BR * Const ) / ( FirstVNF_RAM * MDR ) ) * ( Max( ACS,FirstVNF_Mem ) - ( FirstVNF_RAM + ACS ) ) ) * AMS )", "choosing": "( ( Max( ( MUR / DS ),RCSe ) * ( RRSe / MUR ) ) * ( Max( MUC,RRSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Const ) / ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * MUC ) - ( CS + DS ) )", "obj1": 0.6153846153846154, "obj2": 0.2851183465587505}, {"determining": "( Max( PN,Min( RRS ,FirstVNF_CPU ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Min( ( ( RCSe / MUM ) / Min( RRSe ,RCSe ) ) ,Max( ( RCSe / MLU ),( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( Min( Min( ( DS * MUM ) ,( RMSe * DS ) ) ,( ( MUC - MUM ) * ( DS / MUR ) ) ) + Min( ( ( RCSe / MUM ) / Min( RRSe ,RCSe ) ) ,Max( ( RCSe / MLU ),( MUC / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS / FirstVNF_CPU ),( FirstVNF_CPU_Server - Max( PN,Min( RRS ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) )", "obj1": 0.632016632016632, "obj2": 0.2653221694889898}, {"determining": "Min( ( Max( PN,FirstVNF_Mem_Server ) / AMS ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( CS - MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037627579009090577}, {"determining": "Min( ( Const - AMS ) ,Max( PN,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RRSe * RCSe ),( RMSe * MUR ) ) * ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / AMS ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( RMSe * MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037627579009090577}, {"determining": "Min( ( Const - AMS ) ,Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) * ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_RAM ),RRS ) - FirstVNF_Mem )", "choosing": "( Min( CS ,MUR ) * ( CS - ( MUC - ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM ),RRS ) - ( FirstVNF_RAM * ARS ) ) / ( FirstVNF_Mem + FirstVNF_RAM ) )", "choosing": "( Max( DS,RCSe ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - FirstVNF_RAM ),RRS ) - ( FirstVNF_RAM * ARS ) )", "choosing": "( Max( DS,RCSe ) - ( MUM + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - Const ) / ( Const - DDR ) ) / ( ( BR + AMS ) - ( BR + ARS ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * ( ( RCSe - MUM ) - ( CS * MUC ) ) ) ),Min( ( CS + DS ) ,( MUM - MLU ) ) )", "obj1": 0.656964656964657, "obj2": 0.2267710345803099}, {"determining": "( ( ( FirstVNF_Mem_Server - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,( MUM - MLU ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( Max( ( FirstVNF_RAM - FirstVNF_CPU ),( FirstVNF_Mem_Server / FirstVNF_Mem ) ) / ( ( ( ACS - FirstVNF_RAM_Server ) - ( FirstVNF_RAM + AMS ) ) - Min( ( Const * FirstVNF_CPU_Server ) ,( RRS - DDR ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( MUM - MLU ) ) / ( ( Min( MUR ,RRSe ) + MUC ) / ( MUR + MUM ) ) ) * ( Min( ( MUM * CS ) ,Max( DS,MUR ) ) + ( Max( MUM,MUM ) + Min( DS ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,FirstVNF_RAM ) * ( FirstVNF_Mem * BR ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) )", "obj1": 0.632016632016632, "obj2": 0.2653221694889898}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( ( ( RCSe - DS ) * ( MUR * DS ) ) / ( ( RMSe + RRSe ) - Max( CS,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / DDR ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,Min( ( MLU / MUM ) ,( MUM / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( FirstVNF_Mem / CRS ),DDR ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}]}