{"1": [{"determining": "( ( AMS + MDR ) * ( CRS - DDR ) )", "choosing": "( ( RCSe / RMSe ) / ( DS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) / ( MRS + FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / DS ) - ( MUR * MUM ) )", "obj1": 0.12804878048780488, "obj2": 0.7280039312216049}, {"determining": "( ( DDR + CRS ) - ( AMS - RRS ) )", "choosing": "( Min( MUR ,MUR ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,Min( ( ( FirstVNF_RAM - Max( Max( FirstVNF_RAM,AMS ),PN ) ) * PN ) ,( Max( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ),Max( AMS,CRS ) )", "choosing": "( ( RMSe / ( MLU - MUC ) ) / Min( DS ,RMSe ) )", "obj1": 0.12195121951219512, "obj2": 0.733754762066766}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "Min( ( RRSe * DS ) ,Min( MUM ,MUR ) )", "obj1": 0.5813008130081301, "obj2": 0.3107812439603953}, {"determining": "( ( MRS + CRS ) / ( CRS - CRS ) )", "choosing": "( ( RMSe - CS ) + ( RMSe / MLU ) )", "obj1": 0.26422764227642276, "obj2": 0.5963073135361759}, {"determining": "Min( Max( AMS,FirstVNF_CPU ) ,( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUC ) - Min( RMSe ,MUC ) )", "obj1": 0.258130081300813, "obj2": 0.6146889841948802}, {"determining": "Min( ( ( Const + ACS ) * MRS ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "( Max( DS,( RCSe / RCSe ) ) - Min( CS ,MUM ) )", "obj1": 0.3313008130081301, "obj2": 0.5104057278291615}, {"determining": "Min( Min( ( MRS + FirstVNF_RAM_Server ) ,( ACS + FirstVNF_Mem_Server ) ) ,( Max( AMS,Max( DDR,( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) ) ) - ( DDR + ACS ) ) )", "choosing": "( ( ( DS * CS ) + RMSe ) * ( ( Min( Max( MLU,MUM ) ,RMSe ) - MUM ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( AMS ,FirstVNF_Mem_Server ),( PN / ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) * MLU ) - CS ) / CS ) / ( RRSe / DS ) ) + Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ( ACS * FirstVNF_CPU ) ) * Min( FirstVNF_Mem ,( AMS * FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MLU ) * Max( MUC,MUM ) ) * ( MUM - Max( MLU,MLU ) ) )", "obj1": 0.20121951219512196, "obj2": 0.6719480679088482}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / Const ) )", "choosing": "( ( RRSe + Max( RRSe,RRSe ) ) * ( MUM * DS ) )", "obj1": 0.5426829268292683, "obj2": 0.35743970411756554}, {"determining": "( ( MRS - DDR ) / Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( ( CS / Min( Min( DS ,( ( Min( DS ,RRSe ) - CS ) * MUC ) ) ,( ( DS / RRSe ) / MLU ) ) ) / ( RCSe / MLU ) ) ,Max( Min( MUM ,MUR ),( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR / RRS ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,MLU ) + Min( DS ,RMSe ) ) / ( MUR * DS ) )", "obj1": 0.8922764227642277, "obj2": 0.03715005825986265}, {"determining": "( Max( DDR,PN ) + Max( FirstVNF_Mem,( MRS * CRS ) ) )", "choosing": "( ( RRSe * RMSe ) / Min( ( DS - MUR ) ,MUM ) )", "obj1": 0.22764227642276422, "obj2": 0.6477713548074764}, {"determining": "Min( ( ( MRS / MDR ) - ( ACS * FirstVNF_Mem ) ) ,Max( ( ARS / Max( ( FirstVNF_Mem - ( ACS + ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - MRS ) ) ),( PN * Min( FirstVNF_Mem_Server ,( BR + Const ) ) ) ) ),( MDR / Const ) ) )", "choosing": "Max( ( Max( MUR,( ( Max( RMSe,MLU ) - DS ) / MUR ) ) + ( MUM - CS ) ),( ( MUR - RCSe ) + Min( RMSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ACS,AMS ) * Min( FirstVNF_CPU_Server ,ACS ) ) ,( ( RRS / BR ) + Min( PN ,DDR ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,( RCSe - CS ) ) ,( ( MLU * MLU ) - Max( MUC,MUC ) ) )", "obj1": 0.3434959349593496, "obj2": 0.5081984900358675}, {"determining": "( Min( Min( RRS ,CRS ) ,( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + ( ( RRS - DDR ) * ( AMS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM - MUM ) + Min( MLU ,DS ) ) - ( ( MLU + RCSe ) * ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server - BR ) ) * ( ( FirstVNF_Mem / AMS ) * ( BR * BR ) ) )", "choosing": "( ( ( DS / MLU ) - ( RRSe + MUM ) ) + ( ( RMSe + DS ) - ( MUM + CS ) ) )", "obj1": 0.3556910569105691, "obj2": 0.48869565371637425}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / PN ) - ( ACS - CRS ) ) ,( ( RRS / MDR ) - ( Max( Max( ( ( ARS / Const ) / PN ),BR ),PN ) * FirstVNF_Mem_Server ) ) ) * Max( Min( Max( FirstVNF_Mem_Server,PN ) ,Max( DDR,DDR ) ),Max( ( Const / FirstVNF_Mem ),Max( FirstVNF_Mem_Server,CRS ) ) ) )", "choosing": "( ( ( RMSe + Min( MUC ,RCSe ) ) / MUM ) - ( DS / Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - ( AMS * FirstVNF_CPU_Server ) ) ,Max( ( CRS * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,DDR ) ) ) + Max( ( Min( Const ,CRS ) / ( FirstVNF_RAM_Server * AMS ) ),( ( BR * ARS ) - ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) + Max( RCSe,MLU ) ) * ( ( RRSe + MUC ) * Max( MLU,MUR ) ) ) * ( Max( Min( MUM ,RCSe ),( DS / MUM ) ) - Max( Min( MUM ,RMSe ),( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ACS - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( RMSe - CS ) - RRSe ) / Min( MUM ,MUC ) ) ,( MUR - MLU ) )", "obj1": 0.3902439024390244, "obj2": 0.4585663360111811}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) / Max( MRS,FirstVNF_CPU ) ) - Max( Max( RRS,AMS ),( MRS - MRS ) ) ) - ( Max( ( Const * FirstVNF_Mem ),( AMS - FirstVNF_CPU ) ) * Max( Max( FirstVNF_Mem,AMS ),( FirstVNF_RAM_Server * PN ) ) ) )", "choosing": "Max( ( RCSe + DS ),Max( MLU,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS * FirstVNF_Mem_Server ) ,( ( PN + FirstVNF_CPU_Server ) * ARS ) )", "choosing": "( ( ( ( MLU + MUM ) * Max( RMSe,DS ) ) / ( ( MUM * MUR ) + Min( MUC ,MUC ) ) ) / ( ( ( CS - MUM ) / Max( RMSe,MUR ) ) - ( Min( RRSe ,RMSe ) - ( MUC * RRSe ) ) ) )", "obj1": 0.2804878048780488, "obj2": 0.5692172208507571}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( Max( AMS,( ( ( MRS / DDR ) - DDR ) - Const ) ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUR - RCSe ) - ( MUC / MLU ) ) + ( RRSe - ( MUR + Min( RMSe ,MUM ) ) ) ) ,Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,Max( RRS,DDR ) ) * AMS ) / Max( ( CRS / Const ),FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUC + MUR ) + ( MUC + MLU ) ) / Max( ( MUR + MUM ),( CS + RMSe ) ) ) + ( ( ( RCSe - MUC ) * Min( RRSe ,RCSe ) ) / ( ( MUC + RMSe ) * ( MLU * MLU ) ) ) )", "obj1": 0.29878048780487804, "obj2": 0.5488959336190951}, {"determining": "Min( Max( Min( Max( MRS,FirstVNF_RAM ) ,( BR * ACS ) ),( ( ARS - FirstVNF_Mem ) + Max( Const,PN ) ) ) ,( ( Max( MDR,RRS ) - Max( ARS,FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_RAM_Server ,BR ) - ( MDR - FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( ( MUC / RCSe ),( RMSe / CS ) ) / Min( Max( MUC,DS ) ,( MUR + MUC ) ) ) + ( ( ( MUR - MUM ) - ( MLU + RCSe ) ) - Min( ( DS * MUC ) ,( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( MDR ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) / ( Const * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem + BR ) - Max( FirstVNF_CPU_Server,PN ) ) / ( ( AMS / FirstVNF_RAM ) + ( CRS / ( Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( AMS * FirstVNF_Mem_Server ) ) ) - Min( Min( Const ,ARS ) ,PN ) ) ) ) ) )", "choosing": "Min( Min( CS ,MUR ) ,( Max( MLU,( ( MLU / ( RCSe / Min( ( MUC - MUC ) ,( RRSe / RRSe ) ) ) ) + ( MUR - RRSe ) ) ) + Max( MUC,MUR ) ) )", "obj1": 0.8130081300813008, "obj2": 0.19489356269314126}, {"determining": "Max( ( ( ( AMS + AMS ) / ( DDR / BR ) ) / ( Max( FirstVNF_RAM,PN ) + ( BR / MDR ) ) ),Max( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) / ( Const / FirstVNF_RAM ) ),( Min( Const ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,Const ) ) ) )", "choosing": "( Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) * ( ( Max( MUR,CS ) + ( MUM + RMSe ) ) - ( ( RMSe / MUR ) + ( RRSe / MUC ) ) ) )", "obj1": 0.524390243902439, "obj2": 0.35951990020516666}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Const + ( ( DDR - ACS ) - MDR ) ) )", "choosing": "( Max( ( CS + MUM ),MLU ) / Max( Min( RMSe ,Min( DS ,DS ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( AMS - ( AMS * DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),( ( ( RRSe / DS ) * RCSe ) / ( MLU - ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( AMS + MDR ) * ( CRS - DDR ) )", "choosing": "( ( RCSe / RMSe ) / ( DS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( AMS - RRS ) )", "choosing": "( Min( MUR ,MUR ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,Min( ( ( FirstVNF_RAM - Max( Max( FirstVNF_RAM,AMS ),PN ) ) * PN ) ,( Max( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ),FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ),Max( AMS,CRS ) )", "choosing": "( ( RMSe / ( MLU - MUC ) ) / Min( DS ,RMSe ) )", "obj1": 0.12195121951219512, "obj2": 0.733754762066766}, {"determining": "( ( MRS + CRS ) / ( CRS - CRS ) )", "choosing": "( ( RMSe - CS ) + ( RMSe / MLU ) )", "obj1": 0.26422764227642276, "obj2": 0.5963073135361759}, {"determining": "Min( Max( AMS,FirstVNF_CPU ) ,( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUC ) - Min( RMSe ,MUC ) )", "obj1": 0.258130081300813, "obj2": 0.6146889841948802}, {"determining": "Min( Min( ( MRS + FirstVNF_RAM_Server ) ,( ACS + FirstVNF_Mem_Server ) ) ,( Max( AMS,Max( DDR,( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) ) ) - ( DDR + ACS ) ) )", "choosing": "( ( ( DS * CS ) + RMSe ) * ( ( Min( Max( MLU,MUM ) ,RMSe ) - MUM ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( AMS ,FirstVNF_Mem_Server ),( PN / ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) * MLU ) - CS ) / CS ) / ( RRSe / DS ) ) + Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ( ACS * FirstVNF_CPU ) ) * Min( FirstVNF_Mem ,( AMS * FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MLU ) * Max( MUC,MUM ) ) * ( MUM - Max( MLU,MLU ) ) )", "obj1": 0.20121951219512196, "obj2": 0.6719480679088482}, {"determining": "( ( MRS - DDR ) / Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( ( CS / Min( Min( DS ,( ( Min( DS ,RRSe ) - CS ) * MUC ) ) ,( ( DS / RRSe ) / MLU ) ) ) / ( RCSe / MLU ) ) ,Max( Min( MUM ,MUR ),( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR / RRS ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,MLU ) + Min( DS ,RMSe ) ) / ( MUR * DS ) )", "obj1": 0.8922764227642277, "obj2": 0.03715005825986265}, {"determining": "Min( ( ( MRS / MDR ) - ( ACS * FirstVNF_Mem ) ) ,Max( ( ARS / Max( ( FirstVNF_Mem - ( ACS + ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - MRS ) ) ),( PN * Min( FirstVNF_Mem_Server ,( BR + Const ) ) ) ) ),( MDR / Const ) ) )", "choosing": "Max( ( Max( MUR,( ( Max( RMSe,MLU ) - DS ) / MUR ) ) + ( MUM - CS ) ),( ( MUR - RCSe ) + Min( RMSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( RRS ,CRS ) ,( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + ( ( RRS - DDR ) * ( AMS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM - MUM ) + Min( MLU ,DS ) ) - ( ( MLU + RCSe ) * ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / PN ) - ( ACS - CRS ) ) ,( ( RRS / MDR ) - ( Max( Max( ( ( ARS / Const ) / PN ),BR ),PN ) * FirstVNF_Mem_Server ) ) ) * Max( Min( Max( FirstVNF_Mem_Server,PN ) ,Max( DDR,DDR ) ),Max( ( Const / FirstVNF_Mem ),Max( FirstVNF_Mem_Server,CRS ) ) ) )", "choosing": "( ( ( RMSe + Min( MUC ,RCSe ) ) / MUM ) - ( DS / Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - ( AMS * FirstVNF_CPU_Server ) ) ,Max( ( CRS * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,DDR ) ) ) + Max( ( Min( Const ,CRS ) / ( FirstVNF_RAM_Server * AMS ) ),( ( BR * ARS ) - ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) + Max( RCSe,MLU ) ) * ( ( RRSe + MUC ) * Max( MLU,MUR ) ) ) * ( Max( Min( MUM ,RCSe ),( DS / MUM ) ) - Max( Min( MUM ,RMSe ),( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ACS - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( RMSe - CS ) - RRSe ) / Min( MUM ,MUC ) ) ,( MUR - MLU ) )", "obj1": 0.3902439024390244, "obj2": 0.4585663360111811}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) / Max( MRS,FirstVNF_CPU ) ) - Max( Max( RRS,AMS ),( MRS - MRS ) ) ) - ( Max( ( Const * FirstVNF_Mem ),( AMS - FirstVNF_CPU ) ) * Max( Max( FirstVNF_Mem,AMS ),( FirstVNF_RAM_Server * PN ) ) ) )", "choosing": "Max( ( RCSe + DS ),Max( MLU,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( Max( AMS,( ( ( MRS / DDR ) - DDR ) - Const ) ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUR - RCSe ) - ( MUC / MLU ) ) + ( RRSe - ( MUR + Min( RMSe ,MUM ) ) ) ) ,Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Max( MRS,FirstVNF_RAM ) ,( BR * ACS ) ),( ( ARS - FirstVNF_Mem ) + Max( Const,PN ) ) ) ,( ( Max( MDR,RRS ) - Max( ARS,FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_RAM_Server ,BR ) - ( MDR - FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( ( MUC / RCSe ),( RMSe / CS ) ) / Min( Max( MUC,DS ) ,( MUR + MUC ) ) ) + ( ( ( MUR - MUM ) - ( MLU + RCSe ) ) - Min( ( DS * MUC ) ,( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Const + ( ( DDR - ACS ) - MDR ) ) )", "choosing": "( Max( ( CS + MUM ),MLU ) / Max( Min( RMSe ,Min( DS ,DS ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( AMS - ( AMS * DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),( ( ( RRSe / DS ) * RCSe ) / ( MLU - ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server + AMS ) + MRS ) ,( FirstVNF_CPU_Server + AMS ) ) ,( Max( AMS,BR ) - ( DDR + Min( ( MDR * ( MDR * FirstVNF_RAM_Server ) ) ,DDR ) ) ) )", "choosing": "( Max( Max( ( ( MUR / ( ( ( MUM * MUM ) / RMSe ) + CS ) ) / MUR ),MUC ),MLU ) * Max( ( DS * CS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MRS + FirstVNF_RAM_Server ) ,( ACS + AMS ) ) ,( Max( AMS,BR ) - ( DDR + ACS ) ) )", "choosing": "Min( ( ( ( RRSe - RMSe ) + ( RCSe * DS ) ) - Max( Max( RCSe,MLU ),( CS - MUM ) ) ) ,( ( ( DS + RCSe ) / Min( RMSe ,RMSe ) ) + ( ( MLU * MUC ) / ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) / ( FirstVNF_CPU + FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / DS ) - ( MUR * Max( CS,CS ) ) )", "obj1": 0.12601626016260162, "obj2": 0.7301787707823509}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / PN ) - ( ACS - CRS ) ) ,( ( RRS / MDR ) - ( MRS * FirstVNF_Mem_Server ) ) ) * Max( Min( Max( DDR,DDR ) ,Max( FirstVNF_Mem_Server,PN ) ),Max( ( Const / FirstVNF_Mem ),Max( ( RRS * FirstVNF_RAM_Server ),CRS ) ) ) )", "choosing": "( Min( ( MUR / RRSe ) ,Min( RRSe ,MLU ) ) - ( DS / Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,MRS ) * ( MDR / FirstVNF_RAM_Server ) ) ,( ( RRS / MDR ) - ( MRS * FirstVNF_Mem_Server ) ) ) * Max( Min( ( DDR * DDR ) ,Max( FirstVNF_Mem_Server,PN ) ),Max( ( Const / FirstVNF_Mem ),Max( RRS,CRS ) ) ) )", "choosing": "( ( DS / Max( DS,( RRSe / ( ( ( MUR / RRSe ) * MUM ) + ( CS * ( MUC * ( MLU + MUM ) ) ) ) ) ) ) - ( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( DDR,Max( PN,CRS ) )", "choosing": "Min( Min( RCSe ,DS ) ,RCSe )", "obj1": 0.6443089430894309, "obj2": 0.2606986442613008}, {"determining": "( Max( Min( CRS ,PN ),( RRS / ACS ) ) * ( ( FirstVNF_RAM * AMS ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MLU / ( ( CS + MLU ) - Max( MUC,CS ) ) ) / ( RRSe / DS ) ) + Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,PN ) + ( Max( Min( AMS ,FirstVNF_Mem_Server ),( RRS / ACS ) ) * ( ( FirstVNF_RAM * AMS ) - ( FirstVNF_Mem + AMS ) ) ) )", "choosing": "( ( CS + MLU ) - ( ( MLU / CS ) / ( RRSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / ( FirstVNF_Mem / FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM * AMS ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) / MUC ) + ( CS - Min( RRSe ,MUM ) ) ) - Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - ( Min( Const ,Min( MDR ,ACS ) ) - MRS ) )", "choosing": "Min( Min( ( MUM * DS ) ,( ( Min( ( Max( MUC,DS ) / RMSe ) ,( RRSe / RRSe ) ) + Min( Max( ( Max( RRSe,RMSe ) / MLU ),RCSe ) ,MUR ) ) * ( RCSe / ( MLU / ( MUR / ( MUR - MUM ) ) ) ) ) ) ,( Max( RRSe,MUM ) / Min( RCSe ,RCSe ) ) )", "obj1": 0.556910569105691, "obj2": 0.3350605021154531}, {"determining": "( Min( ( Const * FirstVNF_Mem ) ,( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - ( AMS * FirstVNF_CPU_Server ) ) ,Max( ( CRS * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,DDR ) ) ) + Max( ( Min( Const ,CRS ) / ( FirstVNF_RAM_Server * AMS ) ),( ( BR * ARS ) - ( ARS + FirstVNF_CPU_Server ) ) ) ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe * DS ) - ( CS + DS ) ) + MUC )", "obj1": 0.36585365853658536, "obj2": 0.4674835176193111}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - ( AMS * FirstVNF_CPU_Server ) ) ,Max( ( CRS * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,DDR ) ) ) + Max( ( Min( Const ,CRS ) / ( FirstVNF_RAM_Server * AMS ) ),( ( BR * ARS ) - ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RMSe * DS ) - ( CS + DS ) ) + ( Min( RRSe ,RMSe ) / ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * FirstVNF_Mem ) ,AMS ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUC,MUC ) + Max( RCSe,MLU ) ) * ( ( RRSe + MUC ) * Max( MLU,MUR ) ) ) * ( Max( Min( MUM ,RCSe ),( DS / MUM ) ) - Max( Min( MUM ,RMSe ),( RRSe + MUM ) ) ) )", "obj1": 0.4634146341463415, "obj2": 0.3477452546167846}, {"determining": "Min( ( ( MRS / MDR ) - ( ACS * FirstVNF_Mem ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( MDR / Const ) ) )", "choosing": "Max( ( ( MUR - RCSe ) + Min( RMSe ,DS ) ),( Max( MUR,RRSe ) + ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + MDR ) * ( CRS - Const ) ) ) ,Min( ACS ,PN ) )", "choosing": "( ( Min( Max( ( RMSe / MLU ),MUC ) ,( RRSe - CS ) ) + ( ( DS - MUM ) * ( MLU - CS ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( MRS - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( DS,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( ( ( MUM / RRSe ) + ( RRSe + DS ) ) / ( ( CS + RCSe ) + Max( MUR,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) ,( Max( AMS,BR ) - ( DDR + ACS ) ) )", "choosing": "( ( ( DS * CS ) + RMSe ) * Max( ( DS * ( MUM + DS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,RRS ) ) - ( ( ARS / ACS ) + ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUR ,RMSe ) / Max( ( DS * CS ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MRS + FirstVNF_RAM_Server ) ,( ACS + AMS ) ) ,( Max( AMS,BR ) - ( DDR + ACS ) ) )", "choosing": "( ( ( DS * CS ) + RMSe ) * Max( ( DS * CS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,Min( RRS ,( Max( ARS,Max( ( BR * Const ),FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - ( RRS - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MLU / RMSe ) ) / ( Min( MUM ,MUR ) + ( DS - RMSe ) ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( ( Max( Const,CRS ) + MDR ) * ( CRS - DDR ) )", "choosing": "( ( RCSe / RMSe ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + MDR ) * ( CRS - DDR ) )", "choosing": "( Min( MLU ,MUM ) - Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS * Const ) ,Max( Const,CRS ) )", "choosing": "( ( RCSe / RMSe ) / ( DS / MUC ) )", "obj1": 0.14634146341463414, "obj2": 0.7149480980026189}, {"determining": "( ( ( ( FirstVNF_RAM_Server * BR ) * ( FirstVNF_RAM - MDR ) ) - Min( Max( MDR,AMS ) ,Min( FirstVNF_CPU ,PN ) ) ) * ( ( Max( MRS,BR ) / ( FirstVNF_Mem_Server * AMS ) ) / Max( ( AMS - FirstVNF_Mem ),Min( AMS ,ACS ) ) ) )", "choosing": "( ( ( ( MUR + DS ) / Min( RRSe ,RMSe ) ) + ( ( RRSe - DS ) * Max( CS,MUM ) ) ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / BR ) - Min( AMS ,ARS ) )", "choosing": "( Min( RCSe ,CS ) / Min( DS ,RMSe ) )", "obj1": 0.12195121951219512, "obj2": 0.733754762066766}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( AMS + Const ) )", "choosing": "( ( ( RMSe / RCSe ) + ( Min( ( ( RMSe - MUC ) + ( RMSe / MUR ) ) ,Min( ( MLU + CS ) ,Min( RRSe ,RRSe ) ) ) / RMSe ) ) / ( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "Min( ( ( RMSe - MUC ) + ( RMSe / MUR ) ) ,Min( ( MLU + CS ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.8048780487804879, "obj2": 0.11831107660984526}, {"determining": "( Min( ( ( PN / FirstVNF_Mem_Server ) - ( ACS - CRS ) ) ,( ( Min( FirstVNF_CPU ,AMS ) / MDR ) - ( MRS * FirstVNF_Mem_Server ) ) ) * Max( Min( Max( DDR,DDR ) ,Max( FirstVNF_Mem_Server,PN ) ),Max( ( Const / FirstVNF_Mem ),Max( RRS,CRS ) ) ) )", "choosing": "Min( ( ( RMSe / MLU ) - MLU ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ACS ) * Min( CRS ,( AMS + MDR ) ) )", "choosing": "( ( MUR + ( ( RCSe / RMSe ) / ( DS / MUC ) ) ) - ( ( MUM * RMSe ) + MUR ) )", "obj1": 0.15040650406504066, "obj2": 0.7105213947729603}, {"determining": "( ( AMS + MDR ) * ( ( Const / ACS ) - DDR ) )", "choosing": "( ( RCSe / MUR ) / ( DS / MUC ) )", "obj1": 0.991869918699187, "obj2": 0.004619498909442816}, {"determining": "( ( Const / ACS ) * Min( CRS ,FirstVNF_CPU ) )", "choosing": "( ( RCSe / RMSe ) / ( DS / MUC ) )", "obj1": 0.16869918699186992, "obj2": 0.6999051195457017}, {"determining": "( ( AMS + MDR ) * ( CRS - DDR ) )", "choosing": "( ( MUR + Min( MLU ,MUM ) ) - ( ( MUM * RMSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ( FirstVNF_Mem * Max( FirstVNF_RAM,ACS ) ) ) * ( ( BR / BR ) - Min( MDR ,BR ) ) )", "choosing": "( ( MUR + Min( MLU ,MUM ) ) - ( MUC * MUR ) )", "obj1": 0.2621951219512195, "obj2": 0.6059839865865397}, {"determining": "Min( ( ( Const + ACS ) * MRS ) ,Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) ) )", "choosing": "( Max( DS,( RCSe / RCSe ) ) - RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( Max( ( PN - AMS ),PN ) / Max( ACS,Max( Max( MDR,Const ),Min( MRS ,AMS ) ) ) ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( Max( CRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ( ( Const + ACS ) * MRS ) ) ) / ( ( DDR - ( FirstVNF_Mem - ( Const / FirstVNF_Mem ) ) ) * Max( DDR,AMS ) ) ) )", "choosing": "( Max( ( MUR / MUC ),MUM ) + ( RMSe * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( ACS / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( FirstVNF_CPU + ( ( FirstVNF_Mem - AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( ( Max( ( ( MLU / RCSe ) * ( RCSe * MLU ) ),( Max( MUR,CS ) * ( RRSe / RCSe ) ) ) * MUM ),MUC ) ) + ( ( DS - MUM ) * ( CS - CS ) ) ) + ( MUR + ( MUR + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,FirstVNF_CPU ) / Min( PN ,BR ) ) - Min( ( MRS / Const ) ,( DDR - Const ) ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Max( AMS,CRS ) ) )", "choosing": "( ( ( ( DS + MLU ) - Max( MUR,MUC ) ) - ( ( MUM - MUC ) / ( MUM - RMSe ) ) ) - ( Max( ( RMSe / RMSe ),( CS - MUC ) ) * ( Min( RCSe ,CS ) - ( MUC - RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( AMS - ( AMS * Max( ACS,CRS ) ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),( ( ( RRSe / DS ) * RCSe ) / ( Min( RCSe ,RRSe ) - ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( AMS - ( AMS * DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "Min( Min( MLU ,MLU ) ,Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * ( AMS - RRS ) ) )", "choosing": "( ( DS - MUC ) / ( Min( MLU ,MLU ) + Min( DS ,RMSe ) ) )", "obj1": 0.8902439024390244, "obj2": 0.03949213796509252}, {"determining": "( ( DDR + ( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_Mem_Server ) ) ) ) - ( AMS - RRS ) )", "choosing": "( ( ( DS - MUC ) / ( Min( MUM ,MLU ) + Min( DS ,RMSe ) ) ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( AMS - RRS ) )", "choosing": "( ( DS - MUC ) / ( Min( MUM ,MLU ) + Min( DS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( AMS - ( Min( ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + FirstVNF_Mem ) ,( AMS / FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),( Max( MUR,( MLU - MLU ) ) * Min( ( ( Max( ( MUC - ( MLU / MUC ) ),( MUR - ( MUC - RRSe ) ) ) + CS ) / ( ( ( ( RCSe * MUR ) + MUC ) - RCSe ) + CS ) ) ,Min( MLU ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( AMS - ( AMS * DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( Max( MUR,( MLU - MLU ) ) * Min( ( MLU + RMSe ) ,Min( MLU ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) / ( MRS + FirstVNF_RAM_Server ) )", "choosing": "( ( MUM / DS ) - ( MUR * MUM ) )", "obj1": 0.12804878048780488, "obj2": 0.7273911846934996}, {"determining": "( PN - ( ( AMS * FirstVNF_Mem ) - Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUC ) / Max( ( MUC + MUM ),Min( MUM ,RRSe ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0007750556015560908}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe * DS ) - ( CS + DS ) ) + ( Min( RRSe ,RMSe ) / ( MUR / RCSe ) ) )", "obj1": 0.8313008130081301, "obj2": 0.0523367502610569}, {"determining": "( Min( ( Const * FirstVNF_Mem ) ,AMS ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( DS - MUC ) / ( Min( MUM ,MLU ) + Min( DS ,RMSe ) ) )", "obj1": 0.5630081300813008, "obj2": 0.28167922798433825}, {"determining": "( Max( Min( AMS ,FirstVNF_Mem_Server ),( RRS / ACS ) ) * Max( Min( ARS ,ACS ),( ARS * MRS ) ) )", "choosing": "( ( ( MLU / CS ) / RMSe ) + Max( RRSe,RCSe ) )", "obj1": 0.2886178861788618, "obj2": 0.5257441797904223}, {"determining": "( ( DDR / ( ACS * FirstVNF_CPU ) ) * Min( FirstVNF_Mem ,( AMS * FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MLU ) * Max( MUC,MUM ) ) * ( MUM - Max( MLU,MLU ) ) )", "obj1": 0.20121951219512196, "obj2": 0.6719480679088482}, {"determining": "( ( ( ARS / DDR ) / ( ACS * FirstVNF_CPU ) ) * Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM - Max( MLU,MUR ) ) * ( ( RRSe / CS ) - RMSe ) )", "obj1": 0.20121951219512196, "obj2": 0.6719480679088482}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( Min( MLU ,MUM ) - Max( RMSe,MLU ) )", "obj1": 0.8008130081300813, "obj2": 0.12114581025629997}, {"determining": "( ( FirstVNF_Mem_Server - ACS ) + ( FirstVNF_CPU - ACS ) )", "choosing": "( Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) * ( ( Max( MUR,CS ) + ( MUM + RMSe ) ) - ( ( RMSe / MUR ) + ( RRSe / MUC ) ) ) )", "obj1": 0.9695121951219512, "obj2": 0.027250386683050454}, {"determining": "( Max( DDR,PN ) + Max( FirstVNF_Mem,( MRS * CRS ) ) )", "choosing": "( Max( DS,( RCSe / RCSe ) ) - Min( CS ,MUM ) )", "obj1": 0.27235772357723576, "obj2": 0.5490072047290931}, {"determining": "Max( FirstVNF_RAM,Max( RRS,MDR ) )", "choosing": "Max( ( RRSe * DS ),( RRSe - ( ( RRSe + Min( RMSe ,MUM ) ) / ( ( RMSe * MUC ) + MUC ) ) ) )", "obj1": 0.5528455284552846, "obj2": 0.34254775409805227}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - Max( PN,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ) ) ) * ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - Max( PN,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / MLU ) + ( MUM * Max( DS,RCSe ) ) ) / Max( Min( RRSe ,CS ),Min( MUM ,MUC ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6470716118253644}, {"determining": "( Max( ( ( ACS / ARS ) - ( MRS + PN ) ),Max( Min( ARS ,ACS ),( ARS * MRS ) ) ) / Min( Min( ( PN + MRS ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_CPU * AMS ),Max( PN,MDR ) ) ) )", "choosing": "( ( ( DS - RMSe ) - Max( MUR,RMSe ) ) / ( Max( MLU,MUM ) * ( RCSe + MUM ) ) )", "obj1": 0.7723577235772358, "obj2": 0.17555961077120028}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - Max( PN,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / MLU ) + ( MUM * Max( DS,RCSe ) ) ) / Max( Min( RRSe ,CS ),Min( MUM ,MUC ) ) )", "obj1": 0.22967479674796748, "obj2": 0.6418546833577636}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( ( ( Min( MDR ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) / ( Const * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem + BR ) - Max( FirstVNF_CPU_Server,PN ) ) / ( ( AMS / FirstVNF_RAM ) + ( CRS / ( Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( AMS * FirstVNF_Mem_Server ) ) ) - Min( Min( Const ,ARS ) ,PN ) ) ) ) ) )", "choosing": "Min( Min( CS ,MUR ) ,( Max( MLU,( ( MLU / ( RCSe / Min( ( MUC - MUC ) ,( RRSe / RRSe ) ) ) ) + ( MUR - RRSe ) ) ) + Max( MUC,MUR ) ) )", "obj1": 0.7520325203252033, "obj2": 0.2152126394683692}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) - ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.40853658536585363, "obj2": 0.39761461084534583}, {"determining": "( ( ( Min( MDR ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) / ( Const * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem + BR ) - Max( FirstVNF_CPU_Server,PN ) ) / ( ( AMS / FirstVNF_RAM ) + ( CRS / ( Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( AMS * FirstVNF_Mem_Server ) ) ) - Min( Min( Const ,ARS ) ,PN ) ) ) ) ) )", "choosing": "Min( Min( CS ,MUR ) ,( Max( MLU,( ( MLU / ( RCSe / Min( ( MUC - MUC ) ,( RRSe / RRSe ) ) ) ) + ( MUR - RRSe ) ) ) + Max( MUC,MUR ) ) )", "obj1": 0.7520325203252033, "obj2": 0.2152126394683692}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( ( ( Min( MDR ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) / ( Const * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem + BR ) - Max( FirstVNF_CPU_Server,PN ) ) / ( ( AMS / FirstVNF_RAM ) + ( CRS / ( Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,( AMS * FirstVNF_Mem_Server ) ) ) - Min( Min( Const ,ARS ) ,PN ) ) ) ) ) )", "choosing": "Min( Min( CS ,MUR ) ,( Max( MLU,( ( MLU / ( RCSe / Min( ( MUC - MUC ) ,( RRSe / RRSe ) ) ) ) + ( MUR - RRSe ) ) ) + Max( MUC,MUR ) ) )", "obj1": 0.7520325203252033, "obj2": 0.2152126394683692}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( ( ( Min( MDR ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) * ( Min( DDR ,PN ) / ( Const * FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem + BR ) - Max( FirstVNF_CPU_Server,PN ) ) * ( ( AMS / FirstVNF_RAM ) + ( ( MDR - DDR ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( CS ,MUR ) ,( Min( MLU ,( ( MLU / ( RCSe - MUR ) ) + DS ) ) + Max( MUR,MUC ) ) )", "obj1": 0.7520325203252033, "obj2": 0.2152126394683692}, {"determining": "( Max( ( FirstVNF_Mem_Server + ( MRS - ( FirstVNF_RAM * ( ( ( FirstVNF_CPU - AMS ) + BR ) * DDR ) ) ) ),FirstVNF_CPU ) / ( ( MDR + FirstVNF_Mem ) + ( PN - PN ) ) )", "choosing": "( ( MUC / CS ) / Max( ( MUR * CS ),Min( Max( MUM,( MLU / Min( MUR ,( MLU / MUC ) ) ) ) ,MUC ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5061288142381691}, {"determining": "Max( ( ( Min( FirstVNF_Mem ,DDR ) * Min( ( Const * FirstVNF_Mem ) ,FirstVNF_RAM ) ) - PN ),( BR + AMS ) )", "choosing": "( ( DS - MLU ) * Min( MUC ,RCSe ) )", "obj1": 0.24796747967479674, "obj2": 0.6247070850223263}], "3": [{"determining": "( ( AMS + MDR ) * ( CRS - DDR ) )", "choosing": "( ( RCSe / RMSe ) / ( DS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( AMS - RRS ) )", "choosing": "( Min( MUR ,MUR ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MRS + FirstVNF_RAM_Server ) ,( ACS + FirstVNF_Mem_Server ) ) ,( Max( AMS,Max( DDR,( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) ) ) - ( DDR + ACS ) ) )", "choosing": "( ( ( DS * CS ) + RMSe ) * ( ( Min( Max( MLU,MUM ) ,RMSe ) - MUM ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( AMS ,FirstVNF_Mem_Server ),( PN / ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) * MLU ) - CS ) / CS ) / ( RRSe / DS ) ) + Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / ( ACS * FirstVNF_CPU ) ) * Min( FirstVNF_Mem ,( AMS * FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MLU ) * Max( MUC,MUM ) ) * ( MUM - Max( MLU,MLU ) ) )", "obj1": 0.20121951219512196, "obj2": 0.6719480679088482}, {"determining": "( ( MRS - DDR ) / Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( ( CS / Min( Min( DS ,( ( Min( DS ,RRSe ) - CS ) * MUC ) ) ,( ( DS / RRSe ) / MLU ) ) ) / ( RCSe / MLU ) ) ,Max( Min( MUM ,MUR ),( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR / RRS ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,MLU ) + Min( DS ,RMSe ) ) / ( MUR * DS ) )", "obj1": 0.8922764227642277, "obj2": 0.03715005825986265}, {"determining": "Min( ( ( MRS / MDR ) - ( ACS * FirstVNF_Mem ) ) ,Max( ( ARS / Max( ( FirstVNF_Mem - ( ACS + ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - MRS ) ) ),( PN * Min( FirstVNF_Mem_Server ,( BR + Const ) ) ) ) ),( MDR / Const ) ) )", "choosing": "Max( ( Max( MUR,( ( Max( RMSe,MLU ) - DS ) / MUR ) ) + ( MUM - CS ) ),( ( MUR - RCSe ) + Min( RMSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( RRS ,CRS ) ,( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + ( ( RRS - DDR ) * ( AMS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM - MUM ) + Min( MLU ,DS ) ) - ( ( MLU + RCSe ) * ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / PN ) - ( ACS - CRS ) ) ,( ( RRS / MDR ) - ( Max( Max( ( ( ARS / Const ) / PN ),BR ),PN ) * FirstVNF_Mem_Server ) ) ) * Max( Min( Max( FirstVNF_Mem_Server,PN ) ,Max( DDR,DDR ) ),Max( ( Const / FirstVNF_Mem ),Max( FirstVNF_Mem_Server,CRS ) ) ) )", "choosing": "( ( ( RMSe + Min( MUC ,RCSe ) ) / MUM ) - ( DS / Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - ( AMS * FirstVNF_CPU_Server ) ) ,Max( ( CRS * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,DDR ) ) ) + Max( ( Min( Const ,CRS ) / ( FirstVNF_RAM_Server * AMS ) ),( ( BR * ARS ) - ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) + Max( RCSe,MLU ) ) * ( ( RRSe + MUC ) * Max( MLU,MUR ) ) ) * ( Max( Min( MUM ,RCSe ),( DS / MUM ) ) - Max( Min( MUM ,RMSe ),( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU_Server - ( ACS - FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( RMSe - CS ) - RRSe ) / Min( MUM ,MUC ) ) ,( MUR - MLU ) )", "obj1": 0.3902439024390244, "obj2": 0.4585663360111811}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) / Max( MRS,FirstVNF_CPU ) ) - Max( Max( RRS,AMS ),( MRS - MRS ) ) ) - ( Max( ( Const * FirstVNF_Mem ),( AMS - FirstVNF_CPU ) ) * Max( Max( FirstVNF_Mem,AMS ),( FirstVNF_RAM_Server * PN ) ) ) )", "choosing": "Max( ( RCSe + DS ),Max( MLU,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( Max( AMS,( ( ( MRS / DDR ) - DDR ) - Const ) ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUR - RCSe ) - ( MUC / MLU ) ) + ( RRSe - ( MUR + Min( RMSe ,MUM ) ) ) ) ,Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Max( MRS,FirstVNF_RAM ) ,( BR * ACS ) ),( ( ARS - FirstVNF_Mem ) + Max( Const,PN ) ) ) ,( ( Max( MDR,RRS ) - Max( ARS,FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_RAM_Server ,BR ) - ( MDR - FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( ( MUC / RCSe ),( RMSe / CS ) ) / Min( Max( MUC,DS ) ,( MUR + MUC ) ) ) + ( ( ( MUR - MUM ) - ( MLU + RCSe ) ) - Min( ( DS * MUC ) ,( DS - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Const + ( ( DDR - ACS ) - MDR ) ) )", "choosing": "( Max( ( CS + MUM ),MLU ) / Max( Min( RMSe ,Min( DS ,DS ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( AMS - ( AMS * DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),( ( ( RRSe / DS ) * RCSe ) / ( MLU - ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_CPU_Server + AMS ) + MRS ) ,( FirstVNF_CPU_Server + AMS ) ) ,( Max( AMS,BR ) - ( DDR + Min( ( MDR * ( MDR * FirstVNF_RAM_Server ) ) ,DDR ) ) ) )", "choosing": "( Max( Max( ( ( MUR / ( ( ( MUM * MUM ) / RMSe ) + CS ) ) / MUR ),MUC ),MLU ) * Max( ( DS * CS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MRS + FirstVNF_RAM_Server ) ,( ACS + AMS ) ) ,( Max( AMS,BR ) - ( DDR + ACS ) ) )", "choosing": "Min( ( ( ( RRSe - RMSe ) + ( RCSe * DS ) ) - Max( Max( RCSe,MLU ),( CS - MUM ) ) ) ,( ( ( DS + RCSe ) / Min( RMSe ,RMSe ) ) + ( ( MLU * MUC ) / ( CS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / PN ) - ( ACS - CRS ) ) ,( ( RRS / MDR ) - ( MRS * FirstVNF_Mem_Server ) ) ) * Max( Min( Max( DDR,DDR ) ,Max( FirstVNF_Mem_Server,PN ) ),Max( ( Const / FirstVNF_Mem ),Max( ( RRS * FirstVNF_RAM_Server ),CRS ) ) ) )", "choosing": "( Min( ( MUR / RRSe ) ,Min( RRSe ,MLU ) ) - ( DS / Max( MUR,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,MRS ) * ( MDR / FirstVNF_RAM_Server ) ) ,( ( RRS / MDR ) - ( MRS * FirstVNF_Mem_Server ) ) ) * Max( Min( ( DDR * DDR ) ,Max( FirstVNF_Mem_Server,PN ) ),Max( ( Const / FirstVNF_Mem ),Max( RRS,CRS ) ) ) )", "choosing": "( ( DS / Max( DS,( RRSe / ( ( ( MUR / RRSe ) * MUM ) + ( CS * ( MUC * ( MLU + MUM ) ) ) ) ) ) ) - ( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( CRS ,PN ),( RRS / ACS ) ) * ( ( FirstVNF_RAM * AMS ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( MLU / ( ( CS + MLU ) - Max( MUC,CS ) ) ) / ( RRSe / DS ) ) + Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,PN ) + ( Max( Min( AMS ,FirstVNF_Mem_Server ),( RRS / ACS ) ) * ( ( FirstVNF_RAM * AMS ) - ( FirstVNF_Mem + AMS ) ) ) )", "choosing": "( ( CS + MLU ) - ( ( MLU / CS ) / ( RRSe / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( AMS ,FirstVNF_Mem_Server ),( AMS / ( FirstVNF_Mem / FirstVNF_RAM ) ) ) * ( ( FirstVNF_RAM * AMS ) - ( FirstVNF_Mem + AMS ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) / MUC ) + ( CS - Min( RRSe ,MUM ) ) ) - Max( MUC,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * FirstVNF_Mem ) ,( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - ( AMS * FirstVNF_CPU_Server ) ) ,Max( ( CRS * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,DDR ) ) ) + Max( ( Min( Const ,CRS ) / ( FirstVNF_RAM_Server * AMS ) ),( ( BR * ARS ) - ( ARS + FirstVNF_CPU_Server ) ) ) ) ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe * DS ) - ( CS + DS ) ) + MUC )", "obj1": 0.36585365853658536, "obj2": 0.4674835176193111}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - ( AMS * FirstVNF_CPU_Server ) ) ,Max( ( CRS * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,DDR ) ) ) + Max( ( Min( Const ,CRS ) / ( FirstVNF_RAM_Server * AMS ) ),( ( BR * ARS ) - ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RMSe * DS ) - ( CS + DS ) ) + ( Min( RRSe ,RMSe ) / ( MUR / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS / MDR ) - ( ACS * FirstVNF_Mem ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( MDR / Const ) ) )", "choosing": "Max( ( ( MUR - RCSe ) + Min( RMSe ,DS ) ),( Max( MUR,RRSe ) + ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + MDR ) * ( CRS - Const ) ) ) ,Min( ACS ,PN ) )", "choosing": "( ( Min( Max( ( RMSe / MLU ),MUC ) ,( RRSe - CS ) ) + ( ( DS - MUM ) * ( MLU - CS ) ) ) + MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( MRS - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( DS,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( ( ( MUM / RRSe ) + ( RRSe + DS ) ) / ( ( CS + RCSe ) + Max( MUR,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) ,( Max( AMS,BR ) - ( DDR + ACS ) ) )", "choosing": "( ( ( DS * CS ) + RMSe ) * Max( ( DS * ( MUM + DS ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,RRS ) ) - ( ( ARS / ACS ) + ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUR ,RMSe ) / Max( ( DS * CS ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MRS + FirstVNF_RAM_Server ) ,( ACS + AMS ) ) ,( Max( AMS,BR ) - ( DDR + ACS ) ) )", "choosing": "( ( ( DS * CS ) + RMSe ) * Max( ( DS * CS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,Min( RRS ,( Max( ARS,Max( ( BR * Const ),FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - ( RRS - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MLU / RMSe ) ) / ( Min( MUM ,MUR ) + ( DS - RMSe ) ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( ( Max( Const,CRS ) + MDR ) * ( CRS - DDR ) )", "choosing": "( ( RCSe / RMSe ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + MDR ) * ( CRS - DDR ) )", "choosing": "( Min( MLU ,MUM ) - Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * BR ) * ( FirstVNF_RAM - MDR ) ) - Min( Max( MDR,AMS ) ,Min( FirstVNF_CPU ,PN ) ) ) * ( ( Max( MRS,BR ) / ( FirstVNF_Mem_Server * AMS ) ) / Max( ( AMS - FirstVNF_Mem ),Min( AMS ,ACS ) ) ) )", "choosing": "( ( ( ( MUR + DS ) / Min( RRSe ,RMSe ) ) + ( ( RRSe - DS ) * Max( CS,MUM ) ) ) - MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( AMS + Const ) )", "choosing": "( ( ( RMSe / RCSe ) + ( Min( ( ( RMSe - MUC ) + ( RMSe / MUR ) ) ,Min( ( MLU + CS ) ,Min( RRSe ,RRSe ) ) ) / RMSe ) ) / ( MUM + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "Min( ( ( RMSe - MUC ) + ( RMSe / MUR ) ) ,Min( ( MLU + CS ) ,Min( RRSe ,RRSe ) ) )", "obj1": 0.8048780487804879, "obj2": 0.11831107660984526}, {"determining": "( Min( ( ( PN / FirstVNF_Mem_Server ) - ( ACS - CRS ) ) ,( ( Min( FirstVNF_CPU ,AMS ) / MDR ) - ( MRS * FirstVNF_Mem_Server ) ) ) * Max( Min( Max( DDR,DDR ) ,Max( FirstVNF_Mem_Server,PN ) ),Max( ( Const / FirstVNF_Mem ),Max( RRS,CRS ) ) ) )", "choosing": "Min( ( ( RMSe / MLU ) - MLU ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + MDR ) * ( ( Const / ACS ) - DDR ) )", "choosing": "( ( RCSe / MUR ) / ( DS / MUC ) )", "obj1": 0.991869918699187, "obj2": 0.004619498909442816}, {"determining": "( ( AMS + MDR ) * ( CRS - DDR ) )", "choosing": "( ( MUR + Min( MLU ,MUM ) ) - ( ( MUM * RMSe ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const + ACS ) * MRS ) ,Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) ) )", "choosing": "( Max( DS,( RCSe / RCSe ) ) - RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( Max( ( PN - AMS ),PN ) / Max( ACS,Max( Max( MDR,Const ),Min( MRS ,AMS ) ) ) ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( Max( CRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ( ( Const + ACS ) * MRS ) ) ) / ( ( DDR - ( FirstVNF_Mem - ( Const / FirstVNF_Mem ) ) ) * Max( DDR,AMS ) ) ) )", "choosing": "( Max( ( MUR / MUC ),MUM ) + ( RMSe * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * ( AMS - RRS ) ) )", "choosing": "( ( DS - MUC ) / ( Min( MLU ,MLU ) + Min( DS ,RMSe ) ) )", "obj1": 0.8902439024390244, "obj2": 0.03949213796509252}, {"determining": "( PN - ( ( AMS * FirstVNF_Mem ) - Min( MRS ,FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUC ) / Max( ( MUC + MUM ),Min( MUM ,RRSe ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0007750556015560908}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe * DS ) - ( CS + DS ) ) + ( Min( RRSe ,RMSe ) / ( MUR / RCSe ) ) )", "obj1": 0.8313008130081301, "obj2": 0.0523367502610569}, {"determining": "( Max( Min( AMS ,FirstVNF_Mem_Server ),( RRS / ACS ) ) * Max( Min( ARS ,ACS ),( ARS * MRS ) ) )", "choosing": "( ( ( MLU / CS ) / RMSe ) + Max( RRSe,RCSe ) )", "obj1": 0.2886178861788618, "obj2": 0.5257441797904223}, {"determining": "( ( DDR / ( ACS * FirstVNF_CPU ) ) * Min( FirstVNF_Mem ,( AMS * FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * MLU ) * Max( MUC,MUM ) ) * ( MUM - Max( MLU,MLU ) ) )", "obj1": 0.20121951219512196, "obj2": 0.6719480679088482}, {"determining": "( ( ( ARS / DDR ) / ( ACS * FirstVNF_CPU ) ) * Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( ( MUM - Max( MLU,MUR ) ) * ( ( RRSe / CS ) - RMSe ) )", "obj1": 0.20121951219512196, "obj2": 0.6719480679088482}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( Min( MLU ,MUM ) - Max( RMSe,MLU ) )", "obj1": 0.8008130081300813, "obj2": 0.12114581025629997}, {"determining": "( ( FirstVNF_Mem_Server - ACS ) + ( FirstVNF_CPU - ACS ) )", "choosing": "( Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) * ( ( Max( MUR,CS ) + ( MUM + RMSe ) ) - ( ( RMSe / MUR ) + ( RRSe / MUC ) ) ) )", "obj1": 0.9695121951219512, "obj2": 0.027250386683050454}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - Max( PN,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ) ) ) * ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - Max( PN,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / MLU ) + ( MUM * Max( DS,RCSe ) ) ) / Max( Min( RRSe ,CS ),Min( MUM ,MUC ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6470716118253644}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - Max( PN,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / MLU ) + ( MUM * Max( DS,RCSe ) ) ) / Max( Min( RRSe ,CS ),Min( MUM ,MUC ) ) )", "obj1": 0.22967479674796748, "obj2": 0.6418546833577636}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( FirstVNF_Mem_Server + ( MRS - ( FirstVNF_RAM * ( ( ( FirstVNF_CPU - AMS ) + BR ) * DDR ) ) ) ),FirstVNF_CPU ) / ( ( MDR + FirstVNF_Mem ) + ( PN - PN ) ) )", "choosing": "( ( MUC / CS ) / Max( ( MUR * CS ),Min( Max( MUM,( MLU / Min( MUR ,( MLU / MUC ) ) ) ) ,MUC ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5061288142381691}, {"determining": "( ( CRS - ( ( AMS + MDR ) * ( CRS - DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "Max( ( RMSe / MUR ),( Max( MUR,( MLU - MLU ) ) * Max( RMSe,MLU ) ) )", "obj1": 0.9817073170731707, "obj2": 0.01912393140561292}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - Max( PN,( MRS * FirstVNF_Mem_Server ) ) ) ) ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / MLU ) + ( ( RRSe + MUR ) - ( DS / Max( MUR,DS ) ) ) ) / Max( Min( RRSe ,CS ),Min( MUM ,MUC ) ) )", "obj1": 0.13821138211382114, "obj2": 0.6845712686713178}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - Max( PN,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / MLU ) + ( MUM * Max( DS,RCSe ) ) ) / Max( Min( RRSe ,CS ),Min( MUM ,MUC ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6470716118253644}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ACS - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( ( Min( MLU ,MUM ) - Max( RMSe,MLU ) ) - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 0.7845528455284553, "obj2": 0.1356559159951221}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 0.6890243902439024, "obj2": 0.16798705768021102}, {"determining": "( ( Min( Min( Const ,( Max( Min( ( BR - ARS ) ,CRS ),( AMS + ( PN - FirstVNF_Mem ) ) ) * Const ) ) ,FirstVNF_Mem_Server ) * ( RRS / ACS ) ) * Max( Min( ARS ,ACS ),( ARS * MRS ) ) )", "choosing": "( Max( ( Max( CS,MUR ) - DS ),Max( DS,( ( ( ( Max( CS,RRSe ) / MLU ) + RMSe ) + RRSe ) - CS ) ) ) + ( RRSe + RCSe ) )", "obj1": 0.2967479674796748, "obj2": 0.5250776694454681}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * Min( FirstVNF_Mem ,( AMS * FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe * RMSe ) * Max( MUC,MUM ) ) * ( MUM - Max( MLU,MLU ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6721970781543843}, {"determining": "( ( FirstVNF_RAM - RRS ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Max( AMS,CRS ) ) )", "choosing": "( ( ( RCSe * ( MUC - ( DS - RMSe ) ) ) / Max( MUC,MUM ) ) * ( MUM - Max( MLU,MLU ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0013033953312106264}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) - ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.40853658536585363, "obj2": 0.3967525405620677}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "Min( Max( AMS,FirstVNF_CPU ) ,( Const + FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM - MUM ) + Min( MLU ,DS ) ) - ( ( MLU + RCSe ) * ( CS + MLU ) ) )", "obj1": 0.2540650406504065, "obj2": 0.6024605669149063}, {"determining": "( Min( BR ,AMS ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUC,MUC ) + Max( RCSe,MLU ) ) * ( ( RRSe + MUC ) * ( ( DS * CS ) + RMSe ) ) ) * ( Max( Min( MUM ,RCSe ),( DS / MUM ) ) - Max( Min( MUM ,RMSe ),( RRSe + MUM ) ) ) )", "obj1": 0.4573170731707317, "obj2": 0.2943714234547276}, {"determining": "Min( Min( ( MRS + FirstVNF_RAM_Server ) ,( ACS + AMS ) ) ,( Max( AMS,BR ) - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( RRSe - RMSe ) + ( RCSe * DS ) ) - Max( Max( RCSe,MLU ),( CS - MUM ) ) ) ,( RCSe + ( ( MLU * MUC ) / ( CS * MUM ) ) ) )", "obj1": 0.7642276422764228, "obj2": 0.14498805891753155}, {"determining": "( Min( ( Const * FirstVNF_Mem ) ,AMS ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 0.556910569105691, "obj2": 0.2455193262997462}, {"determining": "Max( ( ( Min( FirstVNF_Mem ,DDR ) * Min( ( ( Max( Min( AMS ,FirstVNF_Mem_Server ),( PN / ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem ) ,FirstVNF_RAM ) ) - PN ),( BR + AMS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.10365853658536585, "obj2": 0.7283426543453312}, {"determining": "Min( ( ( Min( BR ,Const ) / ( Max( ( FirstVNF_RAM - AMS ),PN ) / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( Max( CRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ( ( Const + ACS ) * MRS ) ) ) / ( ( DDR - ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( RCSe / RMSe ) / ( DS / MUC ) )", "obj1": 0.10975609756097561, "obj2": 0.7250127217437767}, {"determining": "( ( FirstVNF_Mem_Server - ACS ) + ( FirstVNF_CPU - ACS ) )", "choosing": "( Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) * ( ( Max( MUR,CS ) + ( MUM + RMSe ) ) - ( ( RMSe / MUR ) + ( RRSe / MUC ) ) ) )", "obj1": 0.9613821138211383, "obj2": 0.03345678972117584}, {"determining": "( RRS / ( ( ACS - PN ) + ( MDR + ARS ) ) )", "choosing": "( ( ( ( ( Max( ( MUC / RCSe ),( RMSe / CS ) ) / Min( Max( MUC,DS ) ,( MUR + MUC ) ) ) + ( ( ( MUR - MUM ) - ( MLU + RCSe ) ) - Min( ( DS * MUC ) ,( DS - MUR ) ) ) ) * MUC ) / Max( ( DS + MUC ),RMSe ) ) / Max( Max( RRSe,CS ),( Max( ( MLU / MUC ),MUC ) / RRSe ) ) )", "obj1": 0.23170731707317074, "obj2": 0.6151294364702515}, {"determining": "( ( FirstVNF_Mem_Server - ACS ) + ( FirstVNF_CPU - ACS ) )", "choosing": "( Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) * ( ( Max( MUR,CS ) + ( MUM + RMSe ) ) - ( ( RMSe / MUR ) + ( RRSe / MUC ) ) ) )", "obj1": 0.9695121951219512, "obj2": 0.027250386683050454}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe * DS ) - ( CS + DS ) ) + ( Min( RRSe ,RMSe ) / ( MUR / RCSe ) ) )", "obj1": 0.8292682926829268, "obj2": 0.053467282873654313}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( Min( MLU ,MUM ) - Max( RMSe,MLU ) )", "obj1": 0.8008130081300813, "obj2": 0.12114581025629997}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * ( CRS - ( AMS - ( AMS * DDR ) ) ) ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Max( MUR,( MLU - MLU ) ) ) )", "obj1": 0.31097560975609756, "obj2": 0.5212788504706986}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5061288142381691}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( FirstVNF_CPU - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( ( CS + DS ) + DS ) )", "obj1": 0.2621951219512195, "obj2": 0.5445161908799284}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.8109756097560976, "obj2": 0.07068322633567171}, {"determining": "( ( ( Min( RRS ,FirstVNF_CPU ) / Min( PN ,BR ) ) - Min( ( MRS / Const ) ,( DDR - Const ) ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Max( AMS,CRS ) ) )", "choosing": "( Min( MLU ,MUM ) - Max( RMSe,MLU ) )", "obj1": 0.9959349593495935, "obj2": 0.0013033953312106264}, {"determining": "( ( ( ARS + FirstVNF_Mem_Server ) / ( ( RRS / ( Const * FirstVNF_RAM ) ) - ( CRS - Min( ACS ,( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ) ) ) ) / ( ( MDR + ARS ) + ( ( AMS + MDR ) * AMS ) ) )", "choosing": "( ( ( MLU / ( RCSe - ( RCSe / ( CS - MUR ) ) ) ) / RMSe ) + Max( RRSe,RCSe ) )", "obj1": 0.2886178861788618, "obj2": 0.5257441797904223}, {"determining": "Min( Max( Min( Max( MRS,FirstVNF_RAM ) ,( BR * ACS ) ),( ( ARS - FirstVNF_Mem ) + Max( Const,PN ) ) ) ,( ( Max( MDR,RRS ) - Max( ARS,FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_RAM_Server ,BR ) - ( MDR - ( ( RRS / ( FirstVNF_Mem * Max( FirstVNF_RAM,ACS ) ) ) * ( ( BR / BR ) - Min( MDR ,BR ) ) ) ) ) ) )", "choosing": "( ( Max( ( MUC / RCSe ),( RMSe / CS ) ) / Min( MUR ,( MUR + MUC ) ) ) + ( ( ( MUR - MUM ) - ( MLU + RCSe ) ) - Min( ( DS * MUC ) ,( DS - MUR ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.017201172283035828}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * ( AMS - RRS ) ) )", "choosing": "( ( DS - MUC ) / ( Min( MLU ,MLU ) + Min( DS ,RMSe ) ) )", "obj1": 0.8902439024390244, "obj2": 0.03949213796509252}], "4": [{"determining": "( ( AMS + MDR ) * ( CRS - DDR ) )", "choosing": "( ( RCSe / RMSe ) / ( DS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( AMS - RRS ) )", "choosing": "( Min( MUR ,MUR ) - ( MLU / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MRS + FirstVNF_RAM_Server ) ,( ACS + FirstVNF_Mem_Server ) ) ,( Max( AMS,Max( DDR,( FirstVNF_CPU + Max( PN,FirstVNF_Mem ) ) ) ) - ( DDR + ACS ) ) )", "choosing": "( ( ( DS * CS ) + RMSe ) * ( ( Min( Max( MLU,MUM ) ,RMSe ) - MUM ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( AMS ,FirstVNF_Mem_Server ),( PN / ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( ( MUC * RRSe ) * MLU ) - CS ) / CS ) / ( RRSe / DS ) ) + Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - DDR ) / Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( ( CS / Min( Min( DS ,( ( Min( DS ,RRSe ) - CS ) * MUC ) ) ,( ( DS / RRSe ) / MLU ) ) ) / ( RCSe / MLU ) ) ,Max( Min( MUM ,MUR ),( MUM * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR / RRS ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,MLU ) + Min( DS ,RMSe ) ) / ( MUR * DS ) )", "obj1": 0.8922764227642277, "obj2": 0.03715005825986265}, {"determining": "Min( ( ( MRS / MDR ) - ( ACS * FirstVNF_Mem ) ) ,Max( ( ARS / Max( ( FirstVNF_Mem - ( ACS + ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - MRS ) ) ),( PN * Min( FirstVNF_Mem_Server ,( BR + Const ) ) ) ) ),( MDR / Const ) ) )", "choosing": "Max( ( Max( MUR,( ( Max( RMSe,MLU ) - DS ) / MUR ) ) + ( MUM - CS ) ),( ( MUR - RCSe ) + Min( RMSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( RRS ,CRS ) ,( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) + ( ( RRS - DDR ) * ( AMS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM - MUM ) + Min( MLU ,DS ) ) - ( ( MLU + RCSe ) * ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / PN ) - ( ACS - CRS ) ) ,( ( RRS / MDR ) - ( Max( Max( ( ( ARS / Const ) / PN ),BR ),PN ) * FirstVNF_Mem_Server ) ) ) * Max( Min( Max( FirstVNF_Mem_Server,PN ) ,Max( DDR,DDR ) ),Max( ( Const / FirstVNF_Mem ),Max( FirstVNF_Mem_Server,CRS ) ) ) )", "choosing": "( ( ( RMSe + Min( MUC ,RCSe ) ) / MUM ) - ( DS / Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) - ( AMS * FirstVNF_CPU_Server ) ) ,Max( ( CRS * FirstVNF_CPU ),Max( FirstVNF_CPU_Server,DDR ) ) ) + Max( ( Min( Const ,CRS ) / ( FirstVNF_RAM_Server * AMS ) ),( ( BR * ARS ) - ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) + Max( RCSe,MLU ) ) * ( ( RRSe + MUC ) * Max( MLU,MUR ) ) ) * ( Max( Min( MUM ,RCSe ),( DS / MUM ) ) - Max( Min( MUM ,RMSe ),( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( BR ,Const ) / ( BR / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( ( CRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ARS ) ) / ( ( ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) - DDR ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MRS ) / Max( MRS,FirstVNF_CPU ) ) - Max( Max( RRS,AMS ),( MRS - MRS ) ) ) - ( Max( ( Const * FirstVNF_Mem ),( AMS - FirstVNF_CPU ) ) * Max( Max( FirstVNF_Mem,AMS ),( FirstVNF_RAM_Server * PN ) ) ) )", "choosing": "Max( ( RCSe + DS ),Max( MLU,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM ) - ( Max( AMS,( ( ( MRS / DDR ) - DDR ) - Const ) ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUR - RCSe ) - ( MUC / MLU ) ) + ( RRSe - ( MUR + Min( RMSe ,MUM ) ) ) ) ,Min( MUC ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) / ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,Min( RRS ,( Max( ARS,Max( ( BR * Const ),FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - ( RRS - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MLU / RMSe ) ) / ( Min( MUM ,MUR ) + ( DS - RMSe ) ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( ( AMS + MDR ) * ( ( Const / ACS ) - DDR ) )", "choosing": "( ( RCSe / MUR ) / ( DS / MUC ) )", "obj1": 0.991869918699187, "obj2": 0.004619498909442816}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * ( AMS - RRS ) ) )", "choosing": "( ( DS - MUC ) / ( Min( MLU ,MLU ) + Min( DS ,RMSe ) ) )", "obj1": 0.8902439024390244, "obj2": 0.03949213796509252}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe * DS ) - ( CS + DS ) ) + ( Min( RRSe ,RMSe ) / ( MUR / RCSe ) ) )", "obj1": 0.8313008130081301, "obj2": 0.0523367502610569}, {"determining": "( Max( Min( AMS ,FirstVNF_Mem_Server ),( RRS / ACS ) ) * Max( Min( ARS ,ACS ),( ARS * MRS ) ) )", "choosing": "( ( ( MLU / CS ) / RMSe ) + Max( RRSe,RCSe ) )", "obj1": 0.2886178861788618, "obj2": 0.5257441797904223}, {"determining": "( ( FirstVNF_Mem_Server - ACS ) + ( FirstVNF_CPU - ACS ) )", "choosing": "( Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) * ( ( Max( MUR,CS ) + ( MUM + RMSe ) ) - ( ( RMSe / MUR ) + ( RRSe / MUC ) ) ) )", "obj1": 0.9695121951219512, "obj2": 0.027250386683050454}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - Max( PN,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ) ) ) * ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Max( ( FirstVNF_Mem_Server + ( MRS - ( FirstVNF_RAM * ( ( ( FirstVNF_CPU - AMS ) + BR ) * DDR ) ) ) ),FirstVNF_CPU ) / ( ( MDR + FirstVNF_Mem ) + ( PN - PN ) ) )", "choosing": "( ( MUC / CS ) / Max( ( MUR * CS ),Min( Max( MUM,( MLU / Min( MUR ,( MLU / MUC ) ) ) ) ,MUC ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5061288142381691}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - Max( PN,( MRS * FirstVNF_Mem_Server ) ) ) ) ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / MLU ) + ( ( RRSe + MUR ) - ( DS / Max( MUR,DS ) ) ) ) / Max( Min( RRSe ,CS ),Min( MUM ,MUC ) ) )", "obj1": 0.13821138211382114, "obj2": 0.6845712686713178}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 0.6890243902439024, "obj2": 0.16798705768021102}, {"determining": "( ( FirstVNF_RAM - RRS ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Max( AMS,CRS ) ) )", "choosing": "( ( ( RCSe * ( MUC - ( DS - RMSe ) ) ) / Max( MUC,MUM ) ) * ( MUM - Max( MLU,MLU ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0013033953312106264}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) - ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.40853658536585363, "obj2": 0.3967525405620677}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( Min( BR ,AMS ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUC,MUC ) + Max( RCSe,MLU ) ) * ( ( RRSe + MUC ) * ( ( DS * CS ) + RMSe ) ) ) * ( Max( Min( MUM ,RCSe ),( DS / MUM ) ) - Max( Min( MUM ,RMSe ),( RRSe + MUM ) ) ) )", "obj1": 0.4573170731707317, "obj2": 0.2943714234547276}, {"determining": "Min( Min( ( MRS + FirstVNF_RAM_Server ) ,( ACS + AMS ) ) ,( Max( AMS,BR ) - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( RRSe - RMSe ) + ( RCSe * DS ) ) - Max( Max( RCSe,MLU ),( CS - MUM ) ) ) ,( RCSe + ( ( MLU * MUC ) / ( CS * MUM ) ) ) )", "obj1": 0.7642276422764228, "obj2": 0.14498805891753155}, {"determining": "( Min( ( Const * FirstVNF_Mem ) ,AMS ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( RRSe - CS ) ,Max( MUC,MUC ) ) + ( ( DS - MUM ) * ( MUC - CS ) ) ) + ( MLU * ( MUR - MUC ) ) )", "obj1": 0.556910569105691, "obj2": 0.2455193262997462}, {"determining": "Max( ( ( Min( FirstVNF_Mem ,DDR ) * Min( ( ( Max( Min( AMS ,FirstVNF_Mem_Server ),( PN / ACS ) ) * Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem ) ,FirstVNF_RAM ) ) - PN ),( BR + AMS ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.10365853658536585, "obj2": 0.7283426543453312}, {"determining": "Min( ( ( Min( BR ,Const ) / ( Max( ( FirstVNF_RAM - AMS ),PN ) / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( Max( CRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ( ( Const + ACS ) * MRS ) ) ) / ( ( DDR - ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( RCSe / RMSe ) / ( DS / MUC ) )", "obj1": 0.10975609756097561, "obj2": 0.7250127217437767}, {"determining": "( ( FirstVNF_Mem_Server - ACS ) + ( FirstVNF_CPU - ACS ) )", "choosing": "( Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) * ( ( Max( MUR,CS ) + ( MUM + RMSe ) ) - ( ( RMSe / MUR ) + ( RRSe / MUC ) ) ) )", "obj1": 0.9613821138211383, "obj2": 0.03345678972117584}, {"determining": "( ( FirstVNF_Mem_Server - ACS ) + ( FirstVNF_CPU - ACS ) )", "choosing": "( Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) * ( ( Max( MUR,CS ) + ( MUM + RMSe ) ) - ( ( RMSe / MUR ) + ( RRSe / MUC ) ) ) )", "obj1": 0.9695121951219512, "obj2": 0.027250386683050454}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe * DS ) - ( CS + DS ) ) + ( Min( RRSe ,RMSe ) / ( MUR / RCSe ) ) )", "obj1": 0.8292682926829268, "obj2": 0.053467282873654313}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5061288142381691}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( FirstVNF_CPU - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( ( CS + DS ) + DS ) )", "obj1": 0.2621951219512195, "obj2": 0.5445161908799284}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.8109756097560976, "obj2": 0.07068322633567171}, {"determining": "( ( ( Min( RRS ,FirstVNF_CPU ) / Min( PN ,BR ) ) - Min( ( MRS / Const ) ,( DDR - Const ) ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Max( AMS,CRS ) ) )", "choosing": "( Min( MLU ,MUM ) - Max( RMSe,MLU ) )", "obj1": 0.9959349593495935, "obj2": 0.0013033953312106264}, {"determining": "( ( ( ARS + FirstVNF_Mem_Server ) / ( ( RRS / ( Const * FirstVNF_RAM ) ) - ( CRS - Min( ACS ,( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ) ) ) ) / ( ( MDR + ARS ) + ( ( AMS + MDR ) * AMS ) ) )", "choosing": "( ( ( MLU / ( RCSe - ( RCSe / ( CS - MUR ) ) ) ) / RMSe ) + Max( RRSe,RCSe ) )", "obj1": 0.2886178861788618, "obj2": 0.5257441797904223}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * ( AMS - RRS ) ) )", "choosing": "( ( DS - MUC ) / ( Min( MLU ,MLU ) + Min( DS ,RMSe ) ) )", "obj1": 0.8902439024390244, "obj2": 0.03949213796509252}, {"determining": "Min( ( ( Min( ACS ,( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ) / ( Max( ( FirstVNF_RAM - AMS ),PN ) / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( Max( CRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ( ( Const + ACS ) * MRS ) ) ) / ( ( DDR - ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( RCSe / RMSe ) / Max( ( DS + CS ),RMSe ) )", "obj1": 0.27235772357723576, "obj2": 0.5371651034294463}, {"determining": "Min( ( ( Min( BR ,Const ) / ( Max( ( FirstVNF_RAM - AMS ),PN ) / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( Max( CRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ( ( Const + ACS ) * MRS ) ) ) / ( ( DDR - ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( RCSe / RMSe ) / ( DS / MUC ) )", "obj1": 0.10975609756097561, "obj2": 0.7250127217437767}, {"determining": "( ( ( Min( RRS ,FirstVNF_CPU ) / Min( PN ,BR ) ) - Min( ( MRS / Const ) ,( DDR - Const ) ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Min( Min( ( MRS + FirstVNF_RAM_Server ) ,( ACS + AMS ) ) ,( Max( AMS,BR ) - ( DDR + ACS ) ) ) ) )", "choosing": "( ( ( RCSe * MLU ) * Max( MUC,MUM ) ) * ( MUM - Max( Max( Max( RCSe,MLU ),( CS - MUM ) ),MLU ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0013033953312106264}, {"determining": "( FirstVNF_Mem_Server * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUC,MUC ) + Max( RCSe,MLU ) ) * ( ( RRSe + MUC ) * ( ( DS * CS ) + RMSe ) ) ) * ( Max( Min( MUM ,RCSe ),( DS / MUM ) ) - Max( Min( MUM ,Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) ),( RRSe + MUM ) ) ) )", "obj1": 0.483739837398374, "obj2": 0.2877589205585391}, {"determining": "( ( FirstVNF_Mem_Server - ACS ) + ( FirstVNF_CPU - ACS ) )", "choosing": "( Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) * ( ( Max( MUR,CS ) + ( MUM + RMSe ) ) - ( ( RMSe / MUR ) + ( RRSe / MUC ) ) ) )", "obj1": 0.9695121951219512, "obj2": 0.027250386683050454}, {"determining": "( Min( BR ,AMS ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUC,MUC ) + Max( RCSe,MLU ) ) * ( ( RRSe + MUC ) * ( ( DS * CS ) + RMSe ) ) ) * ( Max( Min( MUM ,RCSe ),( DS / MUM ) ) - Max( Min( MUM ,RMSe ),( RRSe + MUM ) ) ) )", "obj1": 0.4573170731707317, "obj2": 0.2943714234547276}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( ( RMSe / RCSe ) + DS ) )", "obj1": 0.16869918699186992, "obj2": 0.6809666741741471}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.8516260162601627, "obj2": 0.04334695913115011}, {"determining": "( Max( ( ( ( DDR - ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) ) * Max( DDR,AMS ) ) + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),MUC ) )", "obj1": 0.35772357723577236, "obj2": 0.4623377237853761}, {"determining": "Min( ( ( Min( BR ,Const ) / ( Max( ( FirstVNF_RAM - AMS ),PN ) / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( Max( CRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ( ( Const + ACS ) * MRS ) ) ) / ( ( DDR - ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( RCSe / RMSe ) / ( DS / MUC ) )", "obj1": 0.10975609756097561, "obj2": 0.7250127217437767}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5061288142381691}, {"determining": "( Max( Min( AMS ,FirstVNF_Mem_Server ),( RRS / ACS ) ) * Max( Min( RRS ,ACS ),( ARS * MRS ) ) )", "choosing": "( ( ( MLU / CS ) / RRSe ) + Max( RRSe,RCSe ) )", "obj1": 0.3089430894308943, "obj2": 0.5115371504118652}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( MLU / CS ) / RMSe ) + Max( RRSe,RCSe ) )", "obj1": 0.7804878048780488, "obj2": 0.1094183847190236}, {"determining": "( ( ( Min( RRS ,FirstVNF_CPU ) / ( AMS * FirstVNF_CPU_Server ) ) - Min( ( MRS / Const ) ,( DDR - Const ) ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Max( AMS,CRS ) ) )", "choosing": "( MLU * ( MUM - Max( MLU,MLU ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0013033953312106264}, {"determining": "( ( ( Min( RRS ,FirstVNF_CPU ) / Min( PN ,BR ) ) - Min( ( MRS / Const ) ,( DDR - Const ) ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Max( AMS,CRS ) ) )", "choosing": "( ( ( Max( MUC,MUC ) + Max( RCSe,MLU ) ) * ( ( RRSe + MUC ) * Max( MLU,MUR ) ) ) * ( Max( Min( MUM ,RCSe ),( DS / MUM ) ) - Max( Min( MUM ,RMSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0013033953312106264}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - ( FirstVNF_CPU - Min( ARS ,AMS ) ) ) ) ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / MLU ) + ( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( ( CS + DS ) + DS ) ) ) / Max( Min( RRSe ,CS ),Min( MUM ,MUC ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6154032605216222}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - Max( PN,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( ( CS + DS ) + DS ) )", "obj1": 0.2032520325203252, "obj2": 0.6117526125109967}, {"determining": "Min( ( ( Min( BR ,Const ) / ( Max( ( FirstVNF_RAM - AMS ),PN ) / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( Max( CRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ( ( Const + ACS ) * MRS ) ) ) / Min( ( MRS + FirstVNF_RAM_Server ) ,( ACS + AMS ) ) ) )", "choosing": "( RMSe / ( DS / MUC ) )", "obj1": 0.13414634146341464, "obj2": 0.7145296427964348}, {"determining": "( ( ( Min( RRS ,FirstVNF_CPU ) / Min( PN ,BR ) ) - Min( ( MRS / Const ) ,( DDR - Const ) ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Max( AMS,CRS ) ) )", "choosing": "( ( ( RCSe * MLU ) * Max( MUC,MUM ) ) * ( MUM - Max( MLU,MLU ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0013033953312106264}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / RMSe ) / ( DS / MUC ) )", "obj1": 0.10975609756097561, "obj2": 0.7250127217437767}, {"determining": "Min( ( ( Min( BR ,Const ) / ( Max( ( FirstVNF_RAM - AMS ),PN ) / ACS ) ) - ( ( FirstVNF_Mem + CRS ) * ( CRS - Const ) ) ) ,( ( Max( CRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / ( ( Const + ACS ) * MRS ) ) ) / ( ( DDR - ( ( Const / FirstVNF_Mem ) - FirstVNF_Mem ) ) * Max( DDR,AMS ) ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5061288142381691}, {"determining": "( ( DDR / ( ACS * FirstVNF_CPU ) ) * Min( FirstVNF_Mem ,( AMS * FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MUC / RCSe ),( RMSe / CS ) ) / Min( MUR ,( MUR + MUC ) ) ) + ( ( ( MUR - MUM ) - ( MLU + RCSe ) ) - Min( ( DS * MUC ) ,( DS - MUR ) ) ) )", "obj1": 0.23170731707317074, "obj2": 0.5896517932053866}, {"determining": "( Max( ( PN + FirstVNF_CPU ),( RRS / ACS ) ) * Max( Min( ARS ,ACS ),( ARS * MRS ) ) )", "choosing": "( ( ( ( ( Min( MLU ,MLU ) + Min( DS ,RMSe ) ) / ( MUR * DS ) ) / CS ) / RMSe ) + Max( RRSe,RCSe ) )", "obj1": 0.18089430894308944, "obj2": 0.6314944772924883}, {"determining": "( ( ( Min( RRS ,FirstVNF_CPU ) / Min( PN ,BR ) ) - Min( ( MRS / Const ) ,( DDR - Const ) ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) ) - Max( RMSe,MLU ) )", "obj1": 0.9979674796747967, "obj2": 0.0005283397296545355}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.3231707317073171, "obj2": 0.48547734164005724}, {"determining": "( ( ( Min( RRS ,FirstVNF_CPU ) / Min( PN ,BR ) ) - Min( ( MRS / Const ) ,( DDR - Const ) ) ) / Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Max( AMS,CRS ) ) )", "choosing": "( Min( MLU ,MUM ) - Max( RMSe,MLU ) )", "obj1": 0.9959349593495935, "obj2": 0.0013033953312106264}, {"determining": "( ( FirstVNF_Mem_Server - ACS ) + ( FirstVNF_CPU - ACS ) )", "choosing": "( Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) * ( ( Max( MUR,CS ) + ( MUM + RMSe ) ) - ( ( RMSe / MUR ) + ( RRSe / MUC ) ) ) )", "obj1": 0.9695121951219512, "obj2": 0.027250386683050454}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe * DS ) - ( CS + DS ) ) + ( Min( RRSe ,RMSe ) / ( MUR / RCSe ) ) )", "obj1": 0.8292682926829268, "obj2": 0.053467282873654313}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( MUM + DS ) )", "obj1": 0.4166666666666667, "obj2": 0.3842721888163871}, {"determining": "( ( FirstVNF_Mem_Server - ACS ) + ( FirstVNF_CPU - ACS ) )", "choosing": "( Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) * ( ( Max( MUR,CS ) + ( MUM + RMSe ) ) - ( ( RMSe / MUR ) + ( RRSe / MUC ) ) ) )", "obj1": 0.9695121951219512, "obj2": 0.027250386683050454}, {"determining": "( FirstVNF_CPU + ( FirstVNF_CPU - ACS ) )", "choosing": "( Max( ( Min( MUM ,DS ) * Min( MUR ,MLU ) ),Min( ( DS * CS ) ,( MLU / RMSe ) ) ) * ( ( ( RMSe / RCSe ) + ( MUM / RMSe ) ) / ( ( CS + DS ) + DS ) ) )", "obj1": 0.6808943089430894, "obj2": 0.24078633164563729}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / FirstVNF_CPU_Server ) - Min( ( FirstVNF_RAM / FirstVNF_Mem_Server ) ,( Const + ( ( DDR - ACS ) - MDR ) ) ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( MUC / CS ) / Max( ( Max( Min( RMSe ,Min( DS ,DS ) ),RCSe ) * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.29065040650406504, "obj2": 0.5124394063779715}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( Min( MUR ,RMSe ) / Max( ( DS * CS ),MUR ) )", "obj1": 0.7520325203252033, "obj2": 0.15976764184764847}, {"determining": "( Max( ( FirstVNF_Mem_Server + ( MRS - ( FirstVNF_RAM * ( ( ( FirstVNF_CPU - AMS ) + BR ) * DDR ) ) ) ),FirstVNF_CPU ) / ( ( MDR + FirstVNF_Mem ) + ( PN - PN ) ) )", "choosing": "( ( MUC / CS ) / Max( ( MUR * CS ),Min( Max( MUM,( MLU / Min( MUR ,( MLU / MUC ) ) ) ) ,MUC ) ) )", "obj1": 0.3475609756097561, "obj2": 0.4712408008172096}, {"determining": "( ( AMS + MDR ) * ( ( Const / ACS ) - DDR ) )", "choosing": "( ( RCSe / MUR ) / ( DS / MUC ) )", "obj1": 0.991869918699187, "obj2": 0.004619498909442816}, {"determining": "( Min( ( Const * FirstVNF_Mem ) ,AMS ) * ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) )", "obj1": 0.34959349593495936, "obj2": 0.4656956037725053}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( FirstVNF_RAM_Server / Const ) / Max( ( PN * MDR ),Min( FirstVNF_RAM_Server ,( CRS - Max( PN,( MRS * FirstVNF_Mem_Server ) ) ) ) ) ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / MLU ) + ( ( RRSe + MUR ) - ( DS / Max( MUR,DS ) ) ) ) / Max( Min( RRSe ,CS ),Min( MUM ,MUC ) ) )", "obj1": 0.17682926829268292, "obj2": 0.6679556387763884}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * ( AMS - RRS ) ) )", "choosing": "( Min( MUR ,RMSe ) / Max( ( DS * CS ),MUR ) )", "obj1": 0.8272357723577236, "obj2": 0.06984721479633495}, {"determining": "( ( Max( ACS,FirstVNF_CPU_Server ) - ( FirstVNF_Mem / RRS ) ) - ( Max( FirstVNF_RAM_Server,ACS ) - Min( ARS ,AMS ) ) )", "choosing": "( ( ( MUR / MLU ) + ( MUM * Max( DS,RCSe ) ) ) / Max( Min( RRSe ,CS ),Min( MUM ,MUC ) ) )", "obj1": 0.7784552845528455, "obj2": 0.13831758325629853}, {"determining": "( ( DDR + CRS ) - ( ( ( ARS / DDR ) / ( ACS * FirstVNF_CPU ) ) * Min( ( AMS * FirstVNF_CPU ) ,FirstVNF_Mem ) ) )", "choosing": "( Min( MUR ,MUR ) - ( MLU / ( ( MUM - Max( MLU,MUR ) ) * ( ( RRSe / CS ) - RMSe ) ) ) )", "obj1": 0.9878048780487805, "obj2": 0.010285940117695083}, {"determining": "( ( ( ( FirstVNF_RAM_Server * BR ) * ( FirstVNF_RAM - MDR ) ) - Min( Max( MDR,AMS ) ,Min( FirstVNF_CPU ,( Max( Min( AMS ,FirstVNF_Mem_Server ),( RRS / ACS ) ) * ( ( FirstVNF_RAM * AMS ) - ( FirstVNF_Mem + AMS ) ) ) ) ) ) * ( ( Max( MRS,BR ) / ( FirstVNF_Mem_Server * AMS ) ) / Max( ( AMS - FirstVNF_Mem ),Min( AMS ,ACS ) ) ) )", "choosing": "( ( ( ( MLU / CS ) / Min( RRSe ,RMSe ) ) + ( ( RRSe - DS ) * Max( CS,MUM ) ) ) - MUM )", "obj1": 0.27439024390243905, "obj2": 0.5352777192683155}, {"determining": "( Max( ( ARS + FirstVNF_Mem_Server ),( ( RRS / ( MRS - RRS ) ) - ( Min( ACS ,FirstVNF_Mem_Server ) * CRS ) ) ) - ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( ( MUC + ( RRSe / DS ) ) ,RCSe ) / Max( ( DS + RRSe ),RCSe ) ) / ( MUR / ( MUC + RCSe ) ) ) / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.3882113821138211, "obj2": 0.4321893393086677}, {"determining": "( Max( ( ( FirstVNF_Mem_Server - Min( ( ( Min( BR ,FirstVNF_Mem_Server ) * ARS ) / FirstVNF_Mem_Server ) ,( PN * MRS ) ) ) + FirstVNF_Mem_Server ),( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM - Min( ( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) + CRS ) ,ACS ) ) ) ) / ( ( ACS - PN ) + ( ACS / ( MRS - RRS ) ) ) )", "choosing": "( ( MUC / CS ) / Max( ( RRSe * CS ),Min( MUM ,MUC ) ) )", "obj1": 0.2967479674796748, "obj2": 0.5119380104829254}, {"determining": "( ( ( PN + FirstVNF_CPU ) - ( MDR + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU_Server * CRS ) * Max( RRS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe * DS ) - ( CS + DS ) ) + ( Min( RRSe ,RMSe ) / ( MUR / RCSe ) ) )", "obj1": 0.8292682926829268, "obj2": 0.053467282873654313}, {"determining": "( ( ( CRS - ( ( AMS + MDR ) * ( CRS - DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( ACS - PN ) + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / MLU ) + ( MUM * Max( DS,( Max( MUR,( MLU - MLU ) ) * Max( RMSe,MLU ) ) ) ) ) / Max( Min( RRSe ,CS ),Min( MUM ,MUC ) ) )", "obj1": 0.983739837398374, "obj2": 0.015398546712719847}, {"determining": "( ( CRS - ( ( AMS + MDR ) * ( CRS - DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( ( MUR / MLU ) + ( MUM * Max( DS,RCSe ) ) ) / Max( Min( RRSe ,CS ),Min( MUM ,MUC ) ) )", "obj1": 0.9857723577235772, "obj2": 0.014534394845266571}, {"determining": "( ( CRS - ( ( AMS + MDR ) * ( CRS - DDR ) ) ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( DS - MLU ) * DS )", "obj1": 0.9817073170731707, "obj2": 0.017754342072544747}]}