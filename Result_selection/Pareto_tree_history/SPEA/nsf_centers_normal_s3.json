{"1": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( ACS + DDR ) )", "choosing": "( ( CS / RCSe ) / Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) - ( Max( FirstVNF_CPU,ACS ) * ( ( ( FirstVNF_RAM / ARS ) - ( FirstVNF_RAM_Server + AMS ) ) - BR ) ) )", "choosing": "Min( ( MUR / ( Max( RCSe,CS ) - MUR ) ) ,( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( ( CS * MUR ) * ( RMSe * MLU ) )", "obj1": 0.9178832116788321, "obj2": 0.049561021292337026}, {"determining": "( ( Const + Const ) * ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - CS ) / ( DS / DS ) )", "obj1": 0.6058394160583942, "obj2": 0.41129349061489157}, {"determining": "Min( ( MDR + FirstVNF_CPU ) ,( RRS - ARS ) )", "choosing": "( Max( MLU,MLU ) - ( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ACS ) + Max( CRS,ACS ) )", "choosing": "( ( DS - RRSe ) + ( RMSe - CS ) )", "obj1": 0.4835766423357664, "obj2": 0.5289881810558814}, {"determining": "( Max( DDR,MRS ) * ( AMS - Const ) )", "choosing": "( Min( MUR ,RCSe ) - ( DS - RMSe ) )", "obj1": 0.7171532846715328, "obj2": 0.3352779935045724}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - Max( ( FirstVNF_Mem * FirstVNF_RAM ),RRS ) )", "choosing": "( ( DS + DS ) - ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( Const - ACS ) )", "choosing": "( ( RMSe + MUM ) * ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Const ) + ( FirstVNF_Mem * MDR ) )", "choosing": "( ( MUR * RRSe ) * Max( MLU,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( ARS / ARS ) )", "choosing": "( ( CS / RCSe ) * ( CS / MUM ) )", "obj1": 0.7299270072992701, "obj2": 0.31725190588063595}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,DDR ) - Max( BR,BR ) ) * ( ( CRS * MRS ) - ( ARS + MRS ) ) )", "choosing": "( ( ( DS + DS ) - ( CS * RRSe ) ) * ( ( RMSe / MUC ) * ( CS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) / Max( FirstVNF_Mem_Server,DDR ) ) - Max( Min( CRS ,BR ),Min( DDR ,DDR ) ) )", "choosing": "( ( MUC + MLU ) * ( MUR / DS ) )", "obj1": 0.6806569343065694, "obj2": 0.35140185074769414}, {"determining": "Max( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server + PN ) ),Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( ( FirstVNF_Mem * ACS ) ,FirstVNF_Mem ) + FirstVNF_CPU ) ) )", "choosing": "Max( ( CS - ( MUC / MUR ) ),( ( MUM / MUR ) / MUR ) )", "obj1": 0.5018248175182481, "obj2": 0.46313161093149907}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Max( Max( FirstVNF_CPU,AMS ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( Min( ( ( ( RCSe + CS ) / MUC ) * RCSe ) ,MLU ) * RRSe ) / ( MUM + MUC ) ),( RRSe - ( MLU - RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6200709081226783}, {"determining": "( ( ( MRS - BR ) - ( DDR - DDR ) ) / ( ( Const + FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "Min( ( ( CS - RCSe ) * Min( RRSe ,RRSe ) ) ,( ( MUC / RCSe ) / Min( DS ,CS ) ) )", "obj1": 0.8923357664233577, "obj2": 0.12834592431710257}, {"determining": "( ( Const / ( ARS / FirstVNF_RAM_Server ) ) + Max( PN,DDR ) )", "choosing": "Max( Max( ( MLU - MLU ),( MUR * MUC ) ),( Min( MLU ,MLU ) / MUC ) )", "obj1": 0.5967153284671532, "obj2": 0.4383877298597608}, {"determining": "( ( DDR + ( DDR - AMS ) ) / ( FirstVNF_RAM_Server + DDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) )", "obj1": 0.75, "obj2": 0.3047225926846728}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5862872715575554}, {"determining": "Min( Max( ( ( FirstVNF_Mem_Server + Const ) + ( BR * AMS ) ),Max( ( ACS * FirstVNF_RAM ),Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( MRS * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - ( ACS - RRS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,MUR ) / ( MUR - CS ) ),Max( Min( MUC ,RCSe ),Max( RCSe,RRSe ) ) ) ,( Min( ( MUM / MUR ) ,Max( CS,RMSe ) ) * ( ( CS - MUC ) * ( MUR * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( MRS / PN ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,ARS ) ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MLU,MUM ),Max( MUR,RCSe ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,MDR ) * ( ( ARS * FirstVNF_CPU_Server ) / ( ( ACS - CRS ) + Min( DDR ,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR - MUM ) - Max( CS,RMSe ) ) ,( ( MUC + DS ) / ( MUR + CS ) ) ),( ( Min( CS ,MUC ) + ( CS - RRSe ) ) * Max( ( RMSe + RMSe ),( RMSe / RRSe ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "Min( ( ( Max( MRS,PN ) * ( AMS - CRS ) ) + Min( Max( BR,BR ) ,Min( ARS ,FirstVNF_CPU_Server ) ) ) ,( ACS / ( CRS + ACS ) ) )", "choosing": "( ( MUR / ( ( RMSe * MUM ) * ( ( ( ( MLU * ( MUR / MLU ) ) + ( MLU * Min( RCSe ,DS ) ) ) * ( DS * DS ) ) / CS ) ) ) * Max( ( MUM - MUR ),MUR ) )", "obj1": 0.48905109489051096, "obj2": 0.4894863659031501}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ,( CRS - FirstVNF_Mem_Server ) ) - Min( ( Min( RRS ,CRS ) - Min( FirstVNF_CPU ,( ( RRS * AMS ) / Max( ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem ),Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) ,Max( ( MDR + Const ),( ARS * RRS ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( RCSe * Min( Max( ( DS * RMSe ),( MUC + ( RRSe + DS ) ) ) ,Min( RCSe ,( Max( DS,MUM ) - RCSe ) ) ) ),( RMSe / RRSe ) ) ) - ( Max( ( MUM - MUM ),( MUR + MUM ) ) / Min( MLU ,Max( RRSe,DS ) ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}], "2": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - ( ACS + DDR ) )", "choosing": "( ( CS / RCSe ) / Min( RMSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) - ( Max( FirstVNF_CPU,ACS ) * ( ( ( FirstVNF_RAM / ARS ) - ( FirstVNF_RAM_Server + AMS ) ) - BR ) ) )", "choosing": "Min( ( MUR / ( Max( RCSe,CS ) - MUR ) ) ,( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR + FirstVNF_CPU ) ,( RRS - ARS ) )", "choosing": "( Max( MLU,MLU ) - ( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ACS ) + Max( CRS,ACS ) )", "choosing": "( ( DS - RRSe ) + ( RMSe - CS ) )", "obj1": 0.4835766423357664, "obj2": 0.5289881810558814}, {"determining": "( Max( DDR,MRS ) * ( AMS - Const ) )", "choosing": "( Min( MUR ,RCSe ) - ( DS - RMSe ) )", "obj1": 0.7171532846715328, "obj2": 0.3352779935045724}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - Max( ( FirstVNF_Mem * FirstVNF_RAM ),RRS ) )", "choosing": "( ( DS + DS ) - ( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( Const - ACS ) )", "choosing": "( ( RMSe + MUM ) * ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Const ) + ( FirstVNF_Mem * MDR ) )", "choosing": "( ( MUR * RRSe ) * Max( MLU,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( ARS / ARS ) )", "choosing": "( ( CS / RCSe ) * ( CS / MUM ) )", "obj1": 0.7299270072992701, "obj2": 0.31725190588063595}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,DDR ) - Max( BR,BR ) ) * ( ( CRS * MRS ) - ( ARS + MRS ) ) )", "choosing": "( ( ( DS + DS ) - ( CS * RRSe ) ) * ( ( RMSe / MUC ) * ( CS - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) / Max( FirstVNF_Mem_Server,DDR ) ) - Max( Min( CRS ,BR ),Min( DDR ,DDR ) ) )", "choosing": "( ( MUC + MLU ) * ( MUR / DS ) )", "obj1": 0.6806569343065694, "obj2": 0.35140185074769414}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Max( Max( FirstVNF_CPU,AMS ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( Min( ( ( ( RCSe + CS ) / MUC ) * RCSe ) ,MLU ) * RRSe ) / ( MUM + MUC ) ),( RRSe - ( MLU - RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6200709081226783}, {"determining": "( ( ( MRS - BR ) - ( DDR - DDR ) ) / ( ( Const + FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "Min( ( ( CS - RCSe ) * Min( RRSe ,RRSe ) ) ,( ( MUC / RCSe ) / Min( DS ,CS ) ) )", "obj1": 0.8923357664233577, "obj2": 0.12834592431710257}, {"determining": "( ( DDR + ( DDR - AMS ) ) / ( FirstVNF_RAM_Server + DDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) )", "obj1": 0.75, "obj2": 0.3047225926846728}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5862872715575554}, {"determining": "Min( Max( ( ( FirstVNF_Mem_Server + Const ) + ( BR * AMS ) ),Max( ( ACS * FirstVNF_RAM ),Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( MRS * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - ( ACS - RRS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,MUR ) / ( MUR - CS ) ),Max( Min( MUC ,RCSe ),Max( RCSe,RRSe ) ) ) ,( Min( ( MUM / MUR ) ,Max( CS,RMSe ) ) * ( ( CS - MUC ) * ( MUR * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( MRS / PN ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,ARS ) ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MLU,MUM ),Max( MUR,RCSe ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( MRS,PN ) * ( AMS - CRS ) ) + Min( Max( BR,BR ) ,Min( ARS ,FirstVNF_CPU_Server ) ) ) ,( ACS / ( CRS + ACS ) ) )", "choosing": "( ( MUR / ( ( RMSe * MUM ) * ( ( ( ( MLU * ( MUR / MLU ) ) + ( MLU * Min( RCSe ,DS ) ) ) * ( DS * DS ) ) / CS ) ) ) * Max( ( MUM - MUR ),MUR ) )", "obj1": 0.48905109489051096, "obj2": 0.4894863659031501}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ,( CRS - FirstVNF_Mem_Server ) ) - Min( ( Min( RRS ,CRS ) - Min( FirstVNF_CPU ,( ( RRS * AMS ) / Max( ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem ),Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) ,Max( ( MDR + Const ),( ARS * RRS ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( RCSe * Min( Max( ( DS * RMSe ),( MUC + ( RRSe + DS ) ) ) ,Min( RCSe ,( Max( DS,MUM ) - RCSe ) ) ) ),( RMSe / RRSe ) ) ) - ( Max( ( MUM - MUM ),( MUR + MUM ) ) / Min( MLU ,Max( RRSe,DS ) ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( Max( ( ( ARS / Max( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ARS * CRS ) ),Max( ( FirstVNF_RAM - MRS ),( DDR * ACS ) ) ) ) + Min( Const ,ARS ) ),Min( ( PN / FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / ACS ) ) ) - ( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_CPU_Server ) ) / ( Min( RRS ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( MUC / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * ( ( MUC * MUC ) - ( RMSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR * CRS ) / ( RRS * BR ) ) * ( ( ( ( MRS - BR ) - ( DDR - DDR ) ) / ARS ) / Min( MDR ,MDR ) ) )", "choosing": "Max( ( MUR / MUM ),( ( MUM + MUM ) * ( RRSe * ( ( MUC / RCSe ) / Min( DS ,CS ) ) ) ) )", "obj1": 0.8923357664233577, "obj2": 0.12834592431710257}, {"determining": "( ( AMS - ( FirstVNF_RAM_Server * AMS ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "Max( ( RRSe / CS ),( Min( RRSe ,RMSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( ( BR / BR ) ,( ARS + FirstVNF_RAM ) ),( FirstVNF_Mem_Server - ( FirstVNF_CPU_Server + PN ) ) ) + AMS ) ,Max( FirstVNF_CPU,BR ) )", "choosing": "( Min( Max( Min( MUR ,RCSe ),( ( MUR / MUM ) * CS ) ) ,( ( MUR / CS ) / ( MLU * MLU ) ) ) / Max( ( CS - RRSe ),( Max( MUR,RMSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6367121793399547}, {"determining": "Min( ( FirstVNF_CPU - Min( MRS ,ACS ) ) ,( ( Const + FirstVNF_Mem_Server ) / ARS ) )", "choosing": "( Min( Max( Min( RCSe ,MUC ),RCSe ) ,MUR ) * ( MUM / CS ) )", "obj1": 0.41605839416058393, "obj2": 0.6492949479396064}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( ARS / ARS ) )", "choosing": "( ( Max( CS,MUM ) + RCSe ) / ( MUR / RMSe ) )", "obj1": 0.7317518248175182, "obj2": 0.31482477098397277}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( Const - ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) * ( FirstVNF_CPU_Server / DDR ) ) ) )", "choosing": "( ( RMSe + MUM ) * Max( ( ( DS - MUM ) * MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( Const - ACS ) )", "choosing": "( ( Min( Max( CS,RRSe ) ,RMSe ) * Min( DS ,MUC ) ) / Max( ( ( DS - MUM ) * MUM ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_Mem ) * ( DDR / DDR ) ) - FirstVNF_CPU_Server )", "choosing": "Max( ( Min( Min( CS ,RCSe ) ,( RRSe * RRSe ) ) * Max( ( RRSe + RCSe ),Max( MUC,MLU ) ) ),( Min( ( MUM * MUM ) ,Max( DS,CS ) ) + ( Max( MUC,MUC ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( BR - DDR ) - ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) * Min( Min( MRS ,Const ) ,( AMS - BR ) ) ) )", "choosing": "Min( ( ( MLU / MUM ) / RRSe ) ,( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) * ( BR - DDR ) )", "choosing": "Min( ( MLU / MUM ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) - ( FirstVNF_Mem_Server - DDR ) )", "choosing": "Min( ( MLU / RRSe ) ,( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) - ( Max( FirstVNF_CPU,ACS ) * BR ) )", "choosing": "Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,ACS ) - ( Max( FirstVNF_CPU,ACS ) * BR ) )", "choosing": "Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( ( CS - MLU ) - MUR ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( BR - DDR ) - Max( FirstVNF_CPU,ACS ) )", "choosing": "Min( ( MUR / ( ( MLU - MLU ) - MUR ) ) ,( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) - ( Max( FirstVNF_CPU,ACS ) * BR ) )", "choosing": "Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) - ( Max( FirstVNF_CPU,ACS ) * BR ) )", "choosing": "Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) - ( Max( FirstVNF_CPU,ACS ) * ( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) )", "choosing": "Min( ( MUR / ( ( CS - ( Max( ( DS / ( MUR * RCSe ) ),( ( RMSe - MLU ) - MUC ) ) / DS ) ) - MUR ) ) ,( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) - ( Max( FirstVNF_CPU,ACS ) * ( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) )", "choosing": "Min( ( MUR / ( ( CS - ( Max( ( DS / ( MUR * RCSe ) ),( ( RMSe - MLU ) - MUC ) ) / DS ) ) - MUR ) ) ,( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( ( CS * MUR ) * ( RMSe * MLU ) )", "obj1": 0.9178832116788321, "obj2": 0.04956102129233701}, {"determining": "( ( DDR + ( DDR - AMS ) ) / ( FirstVNF_RAM_Server + DDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) )", "obj1": 0.75, "obj2": 0.3047225926846728}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) * ( Max( Max( MDR,AMS ),( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) / RRS ) ) * FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR - RCSe ) ,( ( MUC + ( MUR + ( MUC / RMSe ) ) ) - RRSe ) )", "obj1": 0.47992700729927007, "obj2": 0.5356384135513008}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ARS + FirstVNF_Mem ) )", "choosing": "( ( DS + MUM ) - ( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,FirstVNF_Mem ) - ( ARS + RRS ) )", "choosing": "( ( RRSe - MUM ) / ( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_RAM_Server ) ,( Const - ACS ) )", "choosing": "( ( RMSe + MUM ) * ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( Const - ACS ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) )", "choosing": "Min( RMSe ,Max( Max( CS,CS ),( DS - MLU ) ) )", "obj1": 0.6751824817518248, "obj2": 0.3623445960608185}, {"determining": "Min( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) ,( Const - ACS ) )", "choosing": "( ( RMSe + MUM ) * ( ( DS - MLU ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_RAM ) ,( Const - ACS ) )", "choosing": "Min( ( Min( DS ,MUC ) * Max( CS,CS ) ) ,Max( Max( CS,CS ),( DS - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( MLU / ( Min( DS ,( MLU * MUR ) ) / RCSe ) ) ,Max( CS,( ( RRSe - RRSe ) - RMSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Min( ( ARS + MDR ) ,( Min( Const ,FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_Mem * PN ) )", "choosing": "Min( ( MLU / MUM ) ,Max( CS,( Min( CS ,CS ) - ( DS * RCSe ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5651588999996043}, {"determining": "( ( Const * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( RMSe ,DS ) + ( RCSe + MUM ) ) / MUR ) / ( RCSe + MUM ) ) - RCSe ) * MUM ) * RMSe ) - ( RRSe * DS ) )", "obj1": 0.4142335766423358, "obj2": 0.6577522978143936}, {"determining": "Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) )", "choosing": "Max( ( MUM * RMSe ),( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4709263620789438}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ,( ( ARS / BR ) + ( BR - FirstVNF_CPU_Server ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM * RMSe ),Min( RCSe ,MLU ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ,( ( ARS / BR ) + ( BR - FirstVNF_CPU_Server ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( CRS ,RRS ) ) ,Max( ( Const - MDR ),( ARS * RRS ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Min( RCSe ,MLU ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( ( ( ( FirstVNF_RAM / RRS ) / Min( MDR ,MRS ) ) - Min( ( FirstVNF_CPU + DDR ) ,Min( DDR ,AMS ) ) ) - ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Max( BR,CRS ) ) / ( ( FirstVNF_CPU - AMS ) * ( BR * MDR ) ) ) )", "choosing": "Max( ( ( Max( RMSe,( RCSe * RRSe ) ) + ( MLU + RRSe ) ) + ( Max( CS,RRSe ) + ( MUC + MUC ) ) ),( Min( ( MUC + MUC ) ,Max( CS,MUR ) ) + Min( ( RMSe + CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.5492700729927007, "obj2": 0.44771820709764343}, {"determining": "Min( ( FirstVNF_CPU_Server - MRS ) ,( ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( Const / FirstVNF_Mem_Server ) ) / ( ( BR - AMS ) * ( BR * MDR ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( MUC + MUC ) * ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5862872715575554}, {"determining": "( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( AMS - ACS ) ),( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) ) ) * ( ( DDR * FirstVNF_CPU ) / ( BR - MDR ) ) ) * ( ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM / RRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) * DS ) * MUC ) * ( MUR + ( MUM * RMSe ) ) ) + ( RRSe / DS ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( AMS - ACS ) ),( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) ) ) * ( ( DDR * FirstVNF_CPU ) / ( BR - MDR ) ) ) * ( ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM / RRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) * DS ) * MUC ) * ( MUR + ( MUM * RMSe ) ) ) + ( RRSe / DS ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( AMS - ACS ) ),( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) ) ) * ( ( DDR * FirstVNF_CPU ) / ( BR - MDR ) ) ) * ( ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM / RRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) * DS ) * MUC ) * ( MUR + ( MUM * RMSe ) ) ) + ( RRSe / DS ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( MRS / PN ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,ARS ) ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + Min( MDR ,MDR ) ) ) ) )", "choosing": "( ( Max( Max( MLU,MUM ),Max( MUR,RCSe ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( ( ( MUM + MUM ) * ( RRSe * MUM ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( MRS / PN ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,ARS ) ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUR / MUM ),( ( MUM + MUM ) * ( RRSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,AMS ) - Max( Max( ( AMS * ACS ),( ARS + FirstVNF_RAM_Server ) ),( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * Max( BR,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUR + MUC ) + ( DS + MUM ) ),( ( RCSe * MLU ) + ( CS * DS ) ) ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ARS * CRS ) ),Max( ( FirstVNF_RAM - MRS ),( DDR * ACS ) ) ) ,Min( Max( ( FirstVNF_RAM_Server * DDR ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( Const,FirstVNF_Mem ) - ( ( ( ( FirstVNF_CPU + RRS ) + FirstVNF_RAM ) * Max( ( ARS + ACS ),Min( RRS ,Max( ACS,ARS ) ) ) ) * ( ( CRS + MRS ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( MLU ,MUR ) - RMSe ) + ( ( ( CS / MUC ) * Min( RCSe ,DS ) ) / ( ( MLU * MLU ) + ( CS + MUR ) ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( ( BR - ( FirstVNF_RAM_Server * AMS ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "Max( Min( ( MUR - RCSe ) ,( ( MUC + ( MUR + RCSe ) ) - RRSe ) ),( Min( RRSe ,RMSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( FirstVNF_RAM_Server * AMS ) ) - ( FirstVNF_CPU * CRS ) )", "choosing": "Max( ( RRSe / CS ),( Min( RRSe ,RMSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * AMS ) ) - AMS ) - ( FirstVNF_CPU * CRS ) )", "choosing": "Max( ( CS / DS ),Min( MUM ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6200709081226783}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( MUM - MUR ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( DDR ,RRS ) )", "choosing": "( ( MUM - MUR ) / Max( MUR,DS ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( ( PN - MDR ) - DDR ) - ( Max( FirstVNF_CPU,ACS ) * ( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) )", "choosing": "Min( ( MUR / ( ( CS - ( Max( ( DS / ( MUR * CS ) ),( ( RMSe - MLU ) - MUC ) ) / DS ) ) - MUR ) ) ,( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) - ( Max( FirstVNF_CPU,ACS ) * ( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) )", "choosing": "Min( ( MUR / ( ( CS - ( Max( ( DS / ( MUR * RCSe ) ),( ( RMSe - MLU ) - MUC ) ) / DS ) ) - MUR ) ) ,( MUR - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( FirstVNF_CPU_Server - RRS ) ) * Max( AMS,( FirstVNF_RAM_Server - Min( Max( ACS,BR ) ,Min( BR ,( Const * CRS ) ) ) ) ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - Min( Max( MLU,Max( ( Min( DS ,( RRSe + ( MUR + MUM ) ) ) / RRSe ),RMSe ) ) ,DS ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / ( ( DDR + ( FirstVNF_CPU_Server - RRS ) ) * Max( ( FirstVNF_RAM_Server - RRS ),AMS ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,ARS ) ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MLU,MUM ),Max( MUR,RCSe ) ) / Min( Min( ( CS / RCSe ) ,Min( MUC ,MUR ) ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( MRS / PN ) ) ) * ( ( ( ACS * FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,ARS ) ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MLU,MUM ),Max( MUR,RCSe ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) - ( Max( FirstVNF_CPU,ACS ) * ( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( MUC / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,Min( ( CS - MLU ) ,Min( MUR ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * MRS ),Min( ( RRS / FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / ACS ) ) ) - Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_CPU_Server ) ) ,( Min( ( CRS + ACS ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( ( CS - Max( MUC,DS ) ) ,RCSe ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * MRS ),Min( ( RRS / FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / ACS ) ) ) - Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_CPU_Server ) ) ,( Min( ( CRS + ACS ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( ( CS - Max( MUC,DS ) ) ,RCSe ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * MRS ),Min( ( RRS / FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / ACS ) ) ) - Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_CPU_Server ) ) ,( Min( ( CRS + ACS ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( ( CS - Max( MUC,DS ) ) ,RCSe ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / MRS ) ,Min( Const ,ACS ) )", "choosing": "( ( ( CS * MUR ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.9178832116788321, "obj2": 0.04956102129233701}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( ( RRSe * RMSe ) + Max( RMSe,DS ) )", "obj1": 0.9178832116788321, "obj2": 0.04956102129233701}, {"determining": "( ( DDR / MRS ) + ( ( MDR / BR ) + ( Max( BR,Const ) * MDR ) ) )", "choosing": "( ( Max( Min( MUC ,( MUC + ( DS - ( ( MUR / RRSe ) - MUC ) ) ) ),CS ) - MUM ) / ( MUR * MUC ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ARS * ARS ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( Max( DS,MUR ) + ( MUM * DS ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5862872715575554}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5862872715575554}, {"determining": "( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( AMS - ACS ) ),( FirstVNF_RAM_Server / ( Const / FirstVNF_CPU ) ) ) ) * ( ( DDR * FirstVNF_CPU ) / ( BR - MDR ) ) ) * ( ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM / RRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( MLU + ( RRSe / DS ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( AMS - ACS ) ),( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) ) ) * ( ( DDR * FirstVNF_CPU ) / ( BR - MDR ) ) ) * ( ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM / RRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) * DS ) * MUC ) * ( MUR + ( MUM * RMSe ) ) ) + ( RRSe / DS ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "( ( Max( ARS,Max( Max( ( RRS * ( PN * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ),ARS ),( Min( ACS ,FirstVNF_CPU_Server ) / ( MDR / ( ACS * DDR ) ) ) ) ) - Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( AMS - ACS ) ),( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) ) ) ) / Min( ( ( DDR + FirstVNF_CPU_Server ) * ( ARS + CRS ) ) ,( Min( FirstVNF_RAM ,ACS ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( ( MUC - Min( MUM ,RCSe ) ) * ( RMSe * MUR ) ),( ( ( ( Min( Max( RMSe,RRSe ) ,RRSe ) * DS ) * MUC ) * ( MUR + ( MUM * RMSe ) ) ) * ( RCSe / RCSe ) ) ),( ( ( DS + RCSe ) - ( MUR * MUC ) ) / ( ( DS - DS ) * ( MUM * MLU ) ) ) )", "obj1": 0.6259124087591241, "obj2": 0.3713307256728404}, {"determining": "( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( AMS - ACS ) ),( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) ) ) * ( ( DDR * FirstVNF_CPU ) / ( BR - MDR ) ) ) * ( ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM / RRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) * DS ) * MUC ) * ( MUR + ( MUM * RMSe ) ) ) + ( RRSe / DS ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883076}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,MRS ) - Max( DDR,FirstVNF_CPU ) ),( ( ARS / MDR ) * Max( ( Const + ( FirstVNF_CPU_Server * ( PN * Max( FirstVNF_Mem_Server,( MRS - CRS ) ) ) ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM / MLU ) ,( Min( RRSe ,Min( MUM ,MUM ) ) - MUM ) ) * ( MUR / MLU ) )", "obj1": 0.48722627737226276, "obj2": 0.493249013580762}, {"determining": "( ( MDR / ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) ) - ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - RCSe ) - ( MUM / RCSe ) )", "obj1": 0.9872262773722628, "obj2": 0.01604129309528497}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) * CRS )", "choosing": "Min( ( ( MLU - CS ) * MLU ) ,( ( MUM + ( RMSe / ( ( RMSe - MUC ) * ( ( MUM / RCSe ) / ( RCSe / RRSe ) ) ) ) ) + RCSe ) )", "obj1": 0.5127737226277372, "obj2": 0.4510661526237347}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( CS / MUM ) ) ) + ( MUR / MLU ) )", "obj1": 0.4215328467153285, "obj2": 0.6367121793399547}, {"determining": "Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( ARS / ARS ) )", "choosing": "( ( RCSe + MUM ) + ( MUR / MLU ) )", "obj1": 0.7262773722627737, "obj2": 0.3217197564876284}], "3": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ACS ) + Max( CRS,ACS ) )", "choosing": "( ( DS - RRSe ) + ( RMSe - CS ) )", "obj1": 0.4835766423357664, "obj2": 0.5289881810558814}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) + Max( Max( FirstVNF_CPU,AMS ),( FirstVNF_RAM + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( Min( ( ( ( RCSe + CS ) / MUC ) * RCSe ) ,MLU ) * RRSe ) / ( MUM + MUC ) ),( RRSe - ( MLU - RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6200709081226783}, {"determining": "( ( ( MRS - BR ) - ( DDR - DDR ) ) / ( ( Const + FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "Min( ( ( CS - RCSe ) * Min( RRSe ,RRSe ) ) ,( ( MUC / RCSe ) / Min( DS ,CS ) ) )", "obj1": 0.8923357664233577, "obj2": 0.12834592431710257}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5862872715575554}, {"determining": "Min( ( ( Max( MRS,PN ) * ( AMS - CRS ) ) + Min( Max( BR,BR ) ,Min( ARS ,FirstVNF_CPU_Server ) ) ) ,( ACS / ( CRS + ACS ) ) )", "choosing": "( ( MUR / ( ( RMSe * MUM ) * ( ( ( ( MLU * ( MUR / MLU ) ) + ( MLU * Min( RCSe ,DS ) ) ) * ( DS * DS ) ) / CS ) ) ) * Max( ( MUM - MUR ),MUR ) )", "obj1": 0.48905109489051096, "obj2": 0.4894863659031501}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ,( CRS - FirstVNF_Mem_Server ) ) - Min( ( Min( RRS ,CRS ) - Min( FirstVNF_CPU ,( ( RRS * AMS ) / Max( ( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_Mem ),Max( FirstVNF_RAM_Server,AMS ) ) ) ) ) ,Max( ( MDR + Const ),( ARS * RRS ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( RCSe * Min( Max( ( DS * RMSe ),( MUC + ( RRSe + DS ) ) ) ,Min( RCSe ,( Max( DS,MUM ) - RCSe ) ) ) ),( RMSe / RRSe ) ) ) - ( Max( ( MUM - MUM ),( MUR + MUM ) ) / Min( MLU ,Max( RRSe,DS ) ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( ( ( BR * CRS ) / ( RRS * BR ) ) * ( ( ( ( MRS - BR ) - ( DDR - DDR ) ) / ARS ) / Min( MDR ,MDR ) ) )", "choosing": "Max( ( MUR / MUM ),( ( MUM + MUM ) * ( RRSe * ( ( MUC / RCSe ) / Min( DS ,CS ) ) ) ) )", "obj1": 0.8923357664233577, "obj2": 0.12834592431710257}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( Max( FirstVNF_CPU,ACS ) - ( Max( FirstVNF_CPU,ACS ) * BR ) )", "choosing": "Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( ( CS - MLU ) - MUR ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( ( Min( FirstVNF_CPU ,BR ) * ( Max( Max( MDR,AMS ),( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) / RRS ) ) * FirstVNF_RAM_Server ) * ( FirstVNF_CPU / ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR - RCSe ) ,( ( MUC + ( MUR + ( MUC / RMSe ) ) ) - RRSe ) )", "obj1": 0.47992700729927007, "obj2": 0.5356384135513008}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( MLU / ( Min( DS ,( MLU * MUR ) ) / RCSe ) ) ,Max( CS,( ( RRSe - RRSe ) - RMSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( Const * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( RMSe ,DS ) + ( RCSe + MUM ) ) / MUR ) / ( RCSe + MUM ) ) - RCSe ) * MUM ) * RMSe ) - ( RRSe * DS ) )", "obj1": 0.4142335766423358, "obj2": 0.6577522978143936}, {"determining": "Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) )", "choosing": "Max( ( MUM * RMSe ),( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4709263620789438}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ,( ( ARS / BR ) + ( BR - FirstVNF_CPU_Server ) ) ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( CRS ,RRS ) ) ,Max( ( Const - MDR ),( ARS * RRS ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Min( RCSe ,MLU ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( ( ( ( FirstVNF_RAM / RRS ) / Min( MDR ,MRS ) ) - Min( ( FirstVNF_CPU + DDR ) ,Min( DDR ,AMS ) ) ) - ( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Max( BR,CRS ) ) / ( ( FirstVNF_CPU - AMS ) * ( BR * MDR ) ) ) )", "choosing": "Max( ( ( Max( RMSe,( RCSe * RRSe ) ) + ( MLU + RRSe ) ) + ( Max( CS,RRSe ) + ( MUC + MUC ) ) ),( Min( ( MUC + MUC ) ,Max( CS,MUR ) ) + Min( ( RMSe + CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.5492700729927007, "obj2": 0.44771820709764343}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5862872715575554}, {"determining": "Min( Max( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ( ARS * CRS ) ),Max( ( FirstVNF_RAM - MRS ),( DDR * ACS ) ) ) ,Min( Max( ( FirstVNF_RAM_Server * DDR ),( FirstVNF_RAM_Server + MDR ) ) ,( Max( Const,FirstVNF_Mem ) - ( ( ( ( FirstVNF_CPU + RRS ) + FirstVNF_RAM ) * Max( ( ARS + ACS ),Min( RRS ,Max( ACS,ARS ) ) ) ) * ( ( CRS + MRS ) + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( MLU ,MUR ) - RMSe ) + ( ( ( CS / MUC ) * Min( RCSe ,DS ) ) / ( ( MLU * MLU ) + ( CS + MUR ) ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6200709081226783}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( MUM - MUR ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM ) + Min( DDR ,RRS ) )", "choosing": "( ( MUM - MUR ) / Max( MUR,DS ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( DDR + ( FirstVNF_CPU_Server - RRS ) ) * Max( AMS,( FirstVNF_RAM_Server - Min( Max( ACS,BR ) ,Min( BR ,( Const * CRS ) ) ) ) ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - Min( Max( MLU,Max( ( Min( DS ,( RRSe + ( MUR + MUM ) ) ) / RRSe ),RMSe ) ) ,DS ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "( ( DDR / MRS ) + ( ( MDR / BR ) + ( Max( BR,Const ) * MDR ) ) )", "choosing": "( ( Max( Min( MUC ,( MUC + ( DS - ( ( MUR / RRSe ) - MUC ) ) ) ),CS ) - MUM ) / ( MUR * MUC ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ARS * ARS ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( Max( DS,MUR ) + ( MUM * DS ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5862872715575554}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5862872715575554}, {"determining": "( ( Max( ARS,Max( Max( ( RRS * ( PN * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ),ARS ),( Min( ACS ,FirstVNF_CPU_Server ) / ( MDR / ( ACS * DDR ) ) ) ) ) - Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( AMS - ACS ) ),( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) ) ) ) / Min( ( ( DDR + FirstVNF_CPU_Server ) * ( ARS + CRS ) ) ,( Min( FirstVNF_RAM ,ACS ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( ( MUC - Min( MUM ,RCSe ) ) * ( RMSe * MUR ) ),( ( ( ( Min( Max( RMSe,RRSe ) ,RRSe ) * DS ) * MUC ) * ( MUR + ( MUM * RMSe ) ) ) * ( RCSe / RCSe ) ) ),( ( ( DS + RCSe ) - ( MUR * MUC ) ) / ( ( DS - DS ) * ( MUM * MLU ) ) ) )", "obj1": 0.6259124087591241, "obj2": 0.3713307256728404}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,MRS ) - Max( DDR,FirstVNF_CPU ) ),( ( ARS / MDR ) * Max( ( Const + ( FirstVNF_CPU_Server * ( PN * Max( FirstVNF_Mem_Server,( MRS - CRS ) ) ) ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM / MLU ) ,( Min( RRSe ,Min( MUM ,MUM ) ) - MUM ) ) * ( MUR / MLU ) )", "obj1": 0.48722627737226276, "obj2": 0.493249013580762}, {"determining": "( ( MDR / ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) ) - ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - RCSe ) - ( MUM / RCSe ) )", "obj1": 0.9872262773722628, "obj2": 0.01604129309528497}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) * CRS )", "choosing": "Min( ( ( MLU - CS ) * MLU ) ,( ( MUM + ( RMSe / ( ( RMSe - MUC ) * ( ( MUM / RCSe ) / ( RCSe / RRSe ) ) ) ) ) + RCSe ) )", "obj1": 0.5127737226277372, "obj2": 0.4510661526237347}, {"determining": "( ( MDR / ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) ) - ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - RCSe ) - ( MUM / RCSe ) )", "obj1": 0.9872262773722628, "obj2": 0.01604129309528497}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ,FirstVNF_RAM ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( CRS ,RRS ) ) ,Max( ( Const - MDR ),( ARS * RRS ) ) ) )", "choosing": "Max( ( MUM * RMSe ),( ( CS * MUR ) * ( RMSe * MLU ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ) )", "choosing": "( ( CS * MUR ) * MLU )", "obj1": 0.9434306569343066, "obj2": 0.03399071183374186}, {"determining": "( Min( Const ,DDR ) * ( FirstVNF_Mem * DDR ) )", "choosing": "( ( ( ( RRSe + DS ) - ( DS / MUR ) ) - Max( ( DS * RCSe ),( RMSe * RRSe ) ) ) - ( Max( ( ( Min( RMSe ,( Max( RRSe,CS ) + ( CS * MUC ) ) ) * DS ) - ( RMSe * ( DS - Max( RMSe,MUR ) ) ) ),Min( RCSe ,MLU ) ) / ( Min( RRSe ,MUC ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) * ( ( Const - ACS ) * ( BR - ACS ) ) )", "choosing": "Min( Min( RRSe ,Min( DS ,RCSe ) ) ,MUR )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( BR - FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) )", "choosing": "( ( ( DS - MLU ) * RMSe ) + Max( RMSe,DS ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - ACS ) )", "choosing": "( ( RRSe * RMSe ) + ( Min( DS ,MUC ) * Max( CS,CS ) ) )", "obj1": 0.6551094890510949, "obj2": 0.3124169739187791}, {"determining": "( ( MDR - CRS ) + Max( FirstVNF_CPU,( RRS / MDR ) ) )", "choosing": "( ( MUR / MLU ) + ( ( RCSe / CS ) - CS ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MLU,MUM ),Max( MUR,RCSe ) ) / Min( Min( ( CS / RCSe ) ,Min( MUC ,MUR ) ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( FirstVNF_CPU_Server - MDR ) * Min( FirstVNF_CPU ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,( Max( DS,( ( RRSe - Max( MUM,RRSe ) ) + MUC ) ) + CS ) ) - MLU ) ,( ( MUC + ( MUR + ( MUC / RMSe ) ) ) - RRSe ) )", "obj1": 0.47992700729927007, "obj2": 0.5356384135513008}, {"determining": "Min( ( ARS + FirstVNF_Mem ) ,( ARS / ARS ) )", "choosing": "( ( ( DS + MUM ) - ( CS - RRSe ) ) + ( MUR / MLU ) )", "obj1": 0.5529197080291971, "obj2": 0.42924909327320043}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * RMSe ) + MUR )", "obj1": 0.656934306569343, "obj2": 0.31078937796230577}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( Min( CRS ,AMS ) / PN ) + FirstVNF_Mem_Server ) ),Min( ( ( ( BR - FirstVNF_CPU ) - ( FirstVNF_RAM - MDR ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),Max( RRSe,MUR ) )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,MRS ) - Max( DDR,FirstVNF_CPU ) ),( ( ARS / MDR ) + Max( ( ( FirstVNF_CPU / ( MRS - FirstVNF_RAM_Server ) ) + ( FirstVNF_CPU_Server * ( PN * Max( FirstVNF_Mem_Server,( MRS - ACS ) ) ) ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( MLU * ( ( MUC * MUR ) - MUC ) ) ) * ( MUR / MLU ) )", "obj1": 0.48722627737226276, "obj2": 0.493249013580762}, {"determining": "Max( ( Max( FirstVNF_RAM_Server,MRS ) - Max( DDR,FirstVNF_CPU ) ),( ( ARS / MDR ) * Max( ( Const + ( FirstVNF_CPU_Server * ( PN * Max( FirstVNF_Mem_Server,( MRS - CRS ) ) ) ) ),FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUM / MLU ) ,( Min( RRSe ,Min( MUM ,MUM ) ) - MUM ) ) * ( MUR / MLU ) )", "obj1": 0.4251824817518248, "obj2": 0.6200709081226783}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) ) * MUC ) ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "( ( DDR + ( FirstVNF_CPU_Server - RRS ) ) * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ) ) )", "choosing": "Max( ( ( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) + Min( CS ,RRSe ) ),( ( MUM - MUR ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( MUM - MUR ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUM * RMSe ),( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4709263620789438}, {"determining": "( ( AMS + Max( AMS,FirstVNF_RAM ) ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) )", "choosing": "Min( ( ( MLU / Max( ( RRSe / Min( MUC ,MLU ) ),MUR ) ) / MUC ) ,( MUR - RRSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) * ARS )", "choosing": "Min( ( ( MLU - CS ) * MLU ) ,( ( MUM + ( RMSe / ( ( RMSe - Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ) * ( ( MUM / RCSe ) / ( RCSe / RRSe ) ) ) ) ) + RCSe ) )", "obj1": 0.5127737226277372, "obj2": 0.4510661526237347}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ,( ( ARS / Max( FirstVNF_CPU,AMS ) ) + ( BR - FirstVNF_CPU_Server ) ) ) - Min( ( Min( FirstVNF_CPU ,( ( CRS * AMS ) / RRS ) ) - Min( RRS ,CRS ) ) ,Max( ( Const + MDR ),( ARS * RRS ) ) ) )", "choosing": "( ( ( ( ( MUR - ( MUM + CS ) ) + DS ) * ( MUR / DS ) ) - Max( ( RCSe * DS ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Max( Max( FirstVNF_CPU,AMS ),Max( CRS,CRS ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( RCSe * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6361225931740747}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6200709081226783}, {"determining": "( Max( FirstVNF_CPU,ACS ) - ( Max( FirstVNF_CPU,ACS ) * BR ) )", "choosing": "Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( ( CS - MLU ) - MUR ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( AMS - ACS ) ),( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) ) ) * ( ( DDR * FirstVNF_CPU ) / ( BR - MDR ) ) ) * ( ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM / RRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) * DS ) * MUC ) * ( MUR + ( MUM * RMSe ) ) ) + ( RRSe / DS ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883072}, {"determining": "Min( Min( Const ,ACS ) ,( ( ( ( FirstVNF_CPU / ACS ) - FirstVNF_CPU ) - Max( ( FirstVNF_RAM_Server - ACS ),Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,MDR ) ) ) / MRS ) )", "choosing": "( ( ( Max( MUM,( CS / RMSe ) ) * RMSe ) * ( MLU * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.9927007299270073, "obj2": 0.0017040044325780236}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),BR )", "choosing": "Max( ( MUR + ( ( ( ( ( CS * MUR ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4343065693430657, "obj2": 0.5881282474590115}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( AMS - ( CRS * FirstVNF_CPU ) ) ,MDR ) )", "choosing": "( ( ( MUM / ( MUR / MUC ) ) * ( CS * MUR ) ) + Min( RMSe ,DS ) )", "obj1": 0.43613138686131386, "obj2": 0.5862872715575554}, {"determining": "( Max( ( FirstVNF_RAM * MRS ),Min( ( FirstVNF_RAM_Server + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / ACS ) ) ) - Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_CPU_Server ) ) ,( Min( ( CRS + ACS ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.7682481751824818, "obj2": 0.209418209949028}, {"determining": "( Max( ( Const / FirstVNF_RAM_Server ),( ( FirstVNF_CPU_Server * ACS ) - FirstVNF_CPU ) ) * ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( ( Max( MUR,MUC ) + DS ) * MUM ) ,Max( ( ( RMSe - MUM ) - RMSe ),CS ) )", "obj1": 0.48175182481751827, "obj2": 0.5336680201558048}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( MLU / MUM ) ,Max( CS,( ( RRSe - RRSe ) - RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6200709081226783}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( MRS / PN ) ) ) * ( ( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / MRS ) - Max( FirstVNF_CPU_Server,ARS ) ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( CS * MUR ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.9215328467153284, "obj2": 0.04609192968465335}, {"determining": "( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( CRS - ACS ) ),( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) ) ) * ( ( DDR * FirstVNF_CPU ) / ( BR - MDR ) ) ) * ( ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM / RRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) * DS ) * MUC ) * RCSe ) + ( RRSe / DS ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883072}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - Min( Max( CRS,FirstVNF_RAM_Server ) ,( Const - ACS ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + MUM ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4324817518248175, "obj2": 0.5925895695810541}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,( Const / AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( PN * RRS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( DS ,DS ) * ( RCSe - RRSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "( ( Const * ( DDR + ( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),Max( CRS,FirstVNF_RAM_Server ) ) ) ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( RMSe ,DS ) + ( RCSe + MUM ) ) / ( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) ) / ( RCSe + MUM ) ) - RCSe ) * MUM ) * RMSe ) - ( RRSe * DS ) )", "obj1": 0.4142335766423358, "obj2": 0.6577522978143936}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.625754052309578}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.6200709081226783}, {"determining": "( ( Const * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( ( Min( RMSe ,DS ) + ( RCSe + MUM ) ) / MUR ) / ( RCSe + MUM ) ) - RCSe ) * MUM ) * RMSe ) - ( RRSe * DS ) )", "obj1": 0.4142335766423358, "obj2": 0.6577522978143936}, {"determining": "Min( ( FirstVNF_CPU - ( Max( FirstVNF_CPU,ACS ) * BR ) ) ,( ARS / ARS ) )", "choosing": "( ( MUR - RRSe ) * ( CS / MUM ) )", "obj1": 0.4215328467153285, "obj2": 0.6309634564007314}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) / MRS ) ,( FirstVNF_RAM - PN ) )", "choosing": "( Max( RMSe,DS ) + Min( ( RCSe - MUR ) ,( DS * MUM ) ) )", "obj1": 0.9178832116788321, "obj2": 0.049561021292337006}, {"determining": "( ( BR - FirstVNF_CPU ) - ( Min( ( RRS / FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / ACS ) ) - FirstVNF_RAM ) )", "choosing": "( ( RRSe * RMSe ) + Max( MUC,DS ) )", "obj1": 0.7153284671532847, "obj2": 0.2898112924075386}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( ( CS - Max( MUC,DS ) ) ,RCSe ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.9178832116788321, "obj2": 0.049561021292337006}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ( FirstVNF_RAM_Server / ( ACS / MRS ) ) * ARS ) / DDR ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( CS / MUR ) - Min( DS ,MUC ) ) ),( Max( DS,MUR ) + ( Max( Max( MLU,( RCSe / ( ( MLU + CS ) / RRSe ) ) ),RMSe ) * Max( Max( ( MUM + DS ),MUC ),MUC ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5949599075386826}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ARS * ARS ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) * DS ) * MUC ) * ( MUR + ( MUM * RMSe ) ) ) + ( RRSe / DS ) )", "obj1": 0.43613138686131386, "obj2": 0.5862872715575554}, {"determining": "( ( ( MRS - BR ) - ( DDR - DDR ) ) / ( ( Const + FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * MRS ) ) )", "choosing": "( ( RMSe + MUM ) * ( ( DS - MLU ) * RRSe ) )", "obj1": 0.8923357664233577, "obj2": 0.12834592431710257}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( MRS / PN ) ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MLU,MUM ),Max( MUR,RCSe ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( CS / RCSe ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.8467153284671532, "obj2": 0.12870432868876835}, {"determining": "( ( BR - DDR ) - ( Max( FirstVNF_CPU,ACS ) * ( ( ARS - ( FirstVNF_RAM / Const ) ) - CRS ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( MUC / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Max( ( ( Min( RMSe ,MLU ) + ( MLU + RRSe ) ) + ( Max( CS,RRSe ) + ( MLU + MUC ) ) ),( Min( Max( CS,MUR ) ,( MUC + MUC ) ) + Min( ( RMSe + CS ) ,Min( MLU ,DS ) ) ) ) ,Min( ( CS - MLU ) ,Min( MUR ,RRSe ) ) ) )", "obj1": 0.9908759124087592, "obj2": 0.007238273481019471}, {"determining": "( Max( ( Min( ( ( FirstVNF_CPU_Server - PN ) - ACS ) ,( FirstVNF_RAM_Server + PN ) ) / FirstVNF_Mem ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) * CRS )", "choosing": "Min( ( ( MLU - CS ) * MLU ) ,( ( MUM + ( RMSe / ( ( RRSe - Min( MLU ,RMSe ) ) * ( ( MUM / RCSe ) / ( RCSe / RRSe ) ) ) ) ) + RCSe ) )", "obj1": 0.5127737226277372, "obj2": 0.4510661526237347}, {"determining": "( ( DDR + ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( Const / FirstVNF_Mem_Server ) ) ) ) * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - MUC )", "obj1": 0.5620437956204379, "obj2": 0.4253907982500655}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "Min( ( FirstVNF_CPU - Min( MRS ,ACS ) ) ,( ARS / ARS ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) / ( MUR / RMSe ) ) / RCSe ) * ( CS / MUM ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ,( ( ARS / BR ) + ( BR - FirstVNF_CPU_Server ) ) ) - Min( ( Min( FirstVNF_CPU ,( ( CRS * AMS ) / RRS ) ) - Min( RRS ,CRS ) ) ,Max( ( Const + MDR ),( ARS * RRS ) ) ) )", "choosing": "( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( RCSe * DS ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.9324817518248175, "obj2": 0.04544416590182883}, {"determining": "( Min( ( ARS + MDR ) ,( Min( Const ,FirstVNF_Mem_Server ) / DDR ) ) * MDR )", "choosing": "Min( ( MLU / MUM ) ,Max( CS,( Min( CS ,CS ) - ( ( RRSe / MUR ) * RCSe ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5591220850699159}, {"determining": "( Min( ( ARS + MDR ) ,( Min( Const ,FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_Mem * PN ) )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5862872715575554}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + ( ( MRS * ACS ) + Max( CRS,ACS ) ) ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + ( RMSe - CS ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) + Max( CRS,ACS ) )", "choosing": "( ( DS - RRSe ) + ( RMSe - MUR ) )", "obj1": 0.4835766423357664, "obj2": 0.5289881810558814}, {"determining": "( Min( RRS ,MRS ) + ( CRS * ACS ) )", "choosing": "( ( DS - RRSe ) + ( ( MUR - ( Min( DS ,Min( Max( RRSe,DS ) ,Min( ( RRSe + RCSe ) ,RRSe ) ) ) * RCSe ) ) - RCSe ) )", "obj1": 0.4835766423357664, "obj2": 0.5289881810558814}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( MDR / ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) ) - ( CRS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUM - RCSe ) - ( MUM / RCSe ) )", "obj1": 0.9872262773722628, "obj2": 0.01604129309528497}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( MRS / PN ) ) ) * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( MUM - Max( MUR,RCSe ) ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * MDR ) / Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MLU + Min( RRSe ,CS ) ),Max( RCSe,Max( Min( ( Min( MLU ,( Min( MUM ,MUC ) / ( RMSe / CS ) ) ) + ( MUC * Min( RCSe ,CS ) ) ) ,RMSe ),Min( ( MUC + RMSe ) ,( CS + MUR ) ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( ARS - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MLU ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( RRS / MRS ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MLU,MUC ) - ( MUR - MLU ) )", "obj1": 0.46167883211678834, "obj2": 0.5394186002830037}, {"determining": "( ( DDR + ( DDR - AMS ) ) / ( FirstVNF_RAM_Server + DDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) )", "obj1": 0.7481751824817519, "obj2": 0.26918939480501036}], "4": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,ACS ) - ( Max( FirstVNF_CPU,ACS ) * BR ) )", "choosing": "Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( ( CS - MLU ) - MUR ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( MLU / ( Min( DS ,( MLU * MUR ) ) / RCSe ) ) ,Max( CS,( ( RRSe - RRSe ) - RMSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) )", "choosing": "Max( ( MUM * RMSe ),( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4709263620789438}, {"determining": "( ( DDR + ( FirstVNF_CPU_Server - RRS ) ) * Max( AMS,( FirstVNF_RAM_Server - Min( Max( ACS,BR ) ,Min( BR ,( Const * CRS ) ) ) ) ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - Min( Max( MLU,Max( ( Min( DS ,( RRSe + ( MUR + MUM ) ) ) / RRSe ),RMSe ) ) ,DS ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "( ( DDR / MRS ) + ( ( MDR / BR ) + ( Max( BR,Const ) * MDR ) ) )", "choosing": "( ( Max( Min( MUC ,( MUC + ( DS - ( ( MUR / RRSe ) - MUC ) ) ) ),CS ) - MUM ) / ( MUR * MUC ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ) )", "choosing": "( ( CS * MUR ) * MLU )", "obj1": 0.9434306569343066, "obj2": 0.03399071183374186}, {"determining": "( Min( Const ,DDR ) * ( FirstVNF_Mem * DDR ) )", "choosing": "( ( ( ( RRSe + DS ) - ( DS / MUR ) ) - Max( ( DS * RCSe ),( RMSe * RRSe ) ) ) - ( Max( ( ( Min( RMSe ,( Max( RRSe,CS ) + ( CS * MUC ) ) ) * DS ) - ( RMSe * ( DS - Max( RMSe,MUR ) ) ) ),Min( RCSe ,MLU ) ) / ( Min( RRSe ,MUC ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - ACS ) )", "choosing": "( ( RRSe * RMSe ) + ( Min( DS ,MUC ) * Max( CS,CS ) ) )", "obj1": 0.6551094890510949, "obj2": 0.3124169739187791}, {"determining": "( ( MDR - CRS ) + Max( FirstVNF_CPU,( RRS / MDR ) ) )", "choosing": "( ( MUR / MLU ) + ( ( RCSe / CS ) - CS ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "Min( ( ARS + FirstVNF_Mem ) ,( ARS / ARS ) )", "choosing": "( ( ( DS + MUM ) - ( CS - RRSe ) ) + ( MUR / MLU ) )", "obj1": 0.5529197080291971, "obj2": 0.42924909327320043}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * RMSe ) + MUR )", "obj1": 0.656934306569343, "obj2": 0.31078937796230577}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( Min( CRS ,AMS ) / PN ) + FirstVNF_Mem_Server ) ),Min( ( ( ( BR - FirstVNF_CPU ) - ( FirstVNF_RAM - MDR ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),Max( RRSe,MUR ) )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) ) * MUC ) ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "( ( DDR + ( FirstVNF_CPU_Server - RRS ) ) * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUM * RMSe ),( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4709263620789438}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Max( Max( FirstVNF_CPU,AMS ),Max( CRS,CRS ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( RCSe * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6361225931740747}, {"determining": "( Max( FirstVNF_CPU,ACS ) - ( Max( FirstVNF_CPU,ACS ) * BR ) )", "choosing": "Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( ( CS - MLU ) - MUR ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( AMS - ACS ) ),( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) ) ) * ( ( DDR * FirstVNF_CPU ) / ( BR - MDR ) ) ) * ( ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM / RRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) * DS ) * MUC ) * ( MUR + ( MUM * RMSe ) ) ) + ( RRSe / DS ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883072}, {"determining": "( Max( ( FirstVNF_RAM * MRS ),Min( ( FirstVNF_RAM_Server + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / ACS ) ) ) - Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_CPU_Server ) ) ,( Min( ( CRS + ACS ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.7682481751824818, "obj2": 0.209418209949028}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( MRS / PN ) ) ) * ( ( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / MRS ) - Max( FirstVNF_CPU_Server,ARS ) ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( CS * MUR ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.9215328467153284, "obj2": 0.04609192968465335}, {"determining": "( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( CRS - ACS ) ),( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) ) ) * ( ( DDR * FirstVNF_CPU ) / ( BR - MDR ) ) ) * ( ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM / RRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( ( ( ( Min( ( RMSe / RRSe ) ,RRSe ) * DS ) * MUC ) * RCSe ) + ( RRSe / DS ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883072}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) / MRS ) ,( FirstVNF_RAM - PN ) )", "choosing": "( Max( RMSe,DS ) + Min( ( RCSe - MUR ) ,( DS * MUM ) ) )", "obj1": 0.9178832116788321, "obj2": 0.049561021292337006}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( ( CS - Max( MUC,DS ) ) ,RCSe ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.9178832116788321, "obj2": 0.049561021292337006}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ( FirstVNF_RAM_Server / ( ACS / MRS ) ) * ARS ) / DDR ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( CS / MUR ) - Min( DS ,MUC ) ) ),( Max( DS,MUR ) + ( Max( Max( MLU,( RCSe / ( ( MLU + CS ) / RRSe ) ) ),RMSe ) * Max( Max( ( MUM + DS ),MUC ),MUC ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5949599075386826}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( MRS / PN ) ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( Max( MLU,MUM ),Max( MUR,RCSe ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( CS / RCSe ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.8467153284671532, "obj2": 0.12870432868876835}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "Min( ( FirstVNF_CPU - Min( MRS ,ACS ) ) ,( ARS / ARS ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) / ( MUR / RMSe ) ) / RCSe ) * ( CS / MUM ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( ( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) + Min( CS ,RRSe ) ),( ( MUM - MUR ) / MUR ) ),( ( Min( RMSe ,MLU ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.48722627737226276, "obj2": 0.47854249127776377}, {"determining": "Max( ( ( ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + MDR ),BR )", "choosing": "Max( ( Max( ( DS - MLU ),RCSe ) + ( Min( DS ,MUC ) - ( RRSe / MUR ) ) ),( Min( ( Max( ( MLU / ( MUM + ( MLU * MLU ) ) ),MUC ) + MUR ) ,MLU ) + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( RMSe + MUM ) * ( ( DS - MLU ) * RRSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "Min( ( ARS + FirstVNF_Mem ) ,( ARS / ARS ) )", "choosing": "( ( ( DS + MUM ) - ( CS - RRSe ) ) + ( MUR / MLU ) )", "obj1": 0.5529197080291971, "obj2": 0.42924909327320043}, {"determining": "( ( DDR + ( FirstVNF_CPU_Server - RRS ) ) * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( DS * MUC ) ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "( Min( Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ,FirstVNF_RAM ) - Min( ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_CPU / ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ,Max( ( Const - MDR ),( RRS * ARS ) ) ) )", "choosing": "Max( MUR,( ( DS - ( MUC * RMSe ) ) + Max( Max( DS,MLU ),MUM ) ) )", "obj1": 0.8394160583941606, "obj2": 0.13911441348521209}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( MRS / PN ) ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + MUM ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.8467153284671532, "obj2": 0.12870432868876835}, {"determining": "Min( ( FirstVNF_CPU - Min( MRS ,ACS ) ) ,( ARS / ARS ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) / ( MUR / RMSe ) ) / RCSe ) * ( CS / MUM ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server + ( ( Const - ( ( RRS / CRS ) + ( MRS + DDR ) ) ) * ( BR - ACS ) ) ),AMS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * ( Min( Min( RRSe ,RMSe ) ,CS ) * ( CS + MUM ) ) ) + ( ( DS / CS ) + MUM ) ) * MUC ) ) )", "obj1": 0.5620437956204379, "obj2": 0.4022649848699156}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) * ( ( Const - ACS ) * ( BR - ACS ) ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) ) * MUC ) ) )", "obj1": 0.6222627737226277, "obj2": 0.3350840611750613}, {"determining": "( ( ( FirstVNF_RAM * MRS ) * Min( ( FirstVNF_RAM_Server + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / ACS ) ) ) - Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_CPU_Server ) ) ,( Min( ( CRS + Min( MRS ,BR ) ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MLU * MUM ),( ( RRSe + MLU ) * MUR ) )", "obj1": 0.7682481751824818, "obj2": 0.209418209949028}, {"determining": "Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4709263620789438}, {"determining": "Min( ( ( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / MRS ) ,Min( Const ,ACS ) )", "choosing": "( ( ( CS * MUR ) * ( RMSe * ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) ) ) + Max( RMSe,DS ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / MRS ) ,Min( Const ,ACS ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.9178832116788321, "obj2": 0.049561021292337006}, {"determining": "( Min( ( ARS + MDR ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) / DDR ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe + DS ) - ( RMSe / ( ( RMSe - MUC ) * ( ( MUM / RCSe ) / ( RCSe / RRSe ) ) ) ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM * RMSe ),Min( RCSe ,MLU ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) * CRS )", "choosing": "( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM * RMSe ),Min( RCSe ,MLU ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( Const * ( DDR + ( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),Max( CRS,FirstVNF_RAM_Server ) ) ) ) ) + ( PN - Min( FirstVNF_CPU ,( ( CRS * AMS ) / RRS ) ) ) )", "choosing": "( ( ( ( ( ( ( Min( RMSe ,DS ) + ( RCSe + MUM ) ) / ( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) ) / ( RCSe + MUM ) ) - RCSe ) * MUC ) * RMSe ) - ( RRSe * DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6598206472052589}, {"determining": "( AMS * Max( ( ( FirstVNF_CPU - Min( MRS ,ACS ) ) - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "( Min( ( CS / RCSe ) ,( ( Max( CS,MUM ) + RCSe ) / ( MUR / RMSe ) ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) ) * MUC ) ) )", "obj1": 0.5693430656934306, "obj2": 0.3887088026059722}, {"determining": "Min( ( FirstVNF_CPU - Min( MRS ,ACS ) ) ,( ARS / ARS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) ) * MUC ) ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) / ( MUR / RMSe ) ) / RCSe ) * ( CS / MUM ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( Min( ( Min( Const ,FirstVNF_Mem_Server ) + DDR ) ,( ARS + MDR ) ) * ( FirstVNF_Mem * Max( FirstVNF_Mem,MRS ) ) )", "choosing": "Min( ( MUR / ( ( ( MUM + MUR ) - CS ) - MUR ) ) ,( ( CS - MLU ) - MUR ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( Max( ( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,( MUR + ( MUM * RMSe ) ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 0.6003649635036497, "obj2": 0.38674939988918844}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Max( ( AMS - FirstVNF_CPU ),Max( BR,FirstVNF_Mem_Server ) ) + ( Min( BR ,MDR ) + RRS ) )", "choosing": "Max( ( RCSe + MUM ),( ( MUC / Min( MUR ,MUC ) ) * ( Min( ( RCSe + MUC ) ,( RMSe * DS ) ) * RCSe ) ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( DDR + ( FirstVNF_CPU_Server / RRS ) ) * Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server / AMS ) ) ),AMS ) )", "choosing": "( Min( ( RCSe / MUR ) ,Min( Max( Min( MUR ,( MUM * RCSe ) ),( MUR + Min( DS ,MUR ) ) ) ,RRSe ) ) - ( ( MUM / CS ) + ( DS * MUC ) ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( MUM - MUR ) / MUR ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "Min( ( FirstVNF_CPU - Min( MRS ,ACS ) ) ,( ARS / ARS ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) / ( MUR / RMSe ) ) / RCSe ) * ( CS / MUM ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( DDR + ( FirstVNF_CPU_Server - RRS ) ) * Max( ( FirstVNF_RAM_Server - Min( ( MRS * ACS ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "( Min( ( CS / RCSe ) ,( DS - RRSe ) ) - ( ( MUM / CS ) + ( DS * MUC ) ) )", "obj1": 0.5656934306569343, "obj2": 0.3978911412405715}, {"determining": "( ( MRS * ACS ) + Max( CRS,ACS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( DS * MUC ) ) )", "obj1": 0.5748175182481752, "obj2": 0.38765044315483965}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - ACS ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) )", "obj1": 0.6642335766423357, "obj2": 0.2978927771415777}, {"determining": "( Min( ( ARS + MDR ) ,Max( DDR,FirstVNF_CPU ) ) * MDR )", "choosing": "Min( ( MLU / MUM ) ,Max( CS,( Min( CS ,CS ) - ( ( RRSe / ( MUR * RCSe ) ) * RCSe ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5053129268442209}, {"determining": "( ( ( FirstVNF_RAM_Server / RRS ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) * Max( ( ( RRS - ( AMS / FirstVNF_Mem ) ) - Min( ( ACS - FirstVNF_CPU ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + Min( RRSe ,Min( DS ,MUC ) ) ) * RMSe ) + ( ( RRSe / ( MUC * RMSe ) ) + MUM ) ) * MUC ) ) )", "obj1": 0.6113138686131386, "obj2": 0.3507839250354143}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) * ( ( Const - ACS ) * ( BR - ACS ) ) )", "choosing": "Min( Min( RRSe ,Min( DS ,RCSe ) ) ,MUR )", "obj1": 0.6222627737226277, "obj2": 0.3350840611750613}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + ( ( MRS * ACS ) + Max( CRS,ACS ) ) ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - Min( Max( CRS,FirstVNF_RAM_Server ) ,( Const - ACS ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( RMSe ,MUC ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.8959854014598541, "obj2": 0.10485776850802682}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + ( ( MRS * ACS ) + Max( CRS,ACS ) ) ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( CS / MUM ) ) ) + ( MUR / MLU ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_RAM_Server - BR ) ) ) )", "choosing": "( ( CS * ( MUR * RCSe ) ) * MLU )", "obj1": 0.9434306569343066, "obj2": 0.03399071183374186}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.9434306569343066, "obj2": 0.03399071183374186}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.5948905109489051, "obj2": 0.387588729238602}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Min( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,MDR ) ,( Min( ACS ,FirstVNF_Mem_Server ) / DDR ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( Min( Max( ( MUC - DS ),CS ) ,RRSe ) ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) / ( MLU * ( MUC * ( RRSe / MUM ) ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "( Min( ( ARS + MDR ) ,( Min( Const ,FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_Mem * Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ),( MLU + RMSe ) )", "obj1": 0.8905109489051095, "obj2": 0.12504226223277778}, {"determining": "( ( ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) * ACS ) + Max( CRS,ACS ) )", "choosing": "( ( DS - RRSe ) + ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( MRS * ACS ) + Max( CRS,ACS ) )", "choosing": "( ( DS - RRSe ) + ( RMSe - CS ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( DDR + ( FirstVNF_CPU_Server - ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( Const / FirstVNF_Mem_Server ) ) ) ) * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "Min( ( ( MLU - CS ) * MLU ) ,( ( MUM + ( RMSe / ( ( RMSe - MUC ) * ( ( MUM / RCSe ) / ( RCSe / RRSe ) ) ) ) ) + RCSe ) )", "obj1": 0.5456204379562044, "obj2": 0.43658182793937}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) * ARS ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5949599075386826}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( ( Min( FirstVNF_CPU_Server ,DDR ) / ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( MRS + BR ) / Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS * ( Min( DS ,( RMSe - Max( RCSe,RMSe ) ) ) - MUR ) ),( ( Min( MUC ,RMSe ) - Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) )", "choosing": "( ( ( DS - Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) ) * RMSe ) + Max( RMSe,DS ) )", "obj1": 0.45985401459854014, "obj2": 0.5358395036498624}, {"determining": "( ( Max( FirstVNF_RAM,( ( FirstVNF_Mem + ( AMS - ACS ) ) + ( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) ) ) * ( MRS * BR ) ) * ( ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM / RRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( ( MLU / MUM ) + ( RRSe / RRSe ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883072}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( ( ( DS + RRSe ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),Min( RMSe ,RRSe ) ) ) - ( Max( MUR,Min( MLU ,MLU ) ) - ( MLU * DS ) ) )", "obj1": 0.5127737226277372, "obj2": 0.45058162175373273}, {"determining": "( Min( Min( Max( Const,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) * ( BR * FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( ( MUC - ( MUC - ( RMSe * RMSe ) ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / Max( ( Const / FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ,Min( Const ,ACS ) )", "choosing": "( ( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.9178832116788321, "obj2": 0.049561021292337006}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) / MRS ) ,( FirstVNF_RAM - PN ) )", "choosing": "( Max( RMSe,DS ) + Min( ( RCSe - MUR ) ,( DS * MUM ) ) )", "obj1": 0.7025547445255474, "obj2": 0.2561411516073851}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) / MRS ) ,( FirstVNF_RAM - PN ) )", "choosing": "( Max( RMSe,DS ) + Min( ( RCSe - MUR ) ,( DS * MUM ) ) )", "obj1": 0.7025547445255474, "obj2": 0.2561411516073851}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) / MRS ) ,( FirstVNF_RAM - PN ) )", "choosing": "( Max( RMSe,DS ) + Min( ( RCSe - MUR ) ,( DS * MUM ) ) )", "obj1": 0.7025547445255474, "obj2": 0.2561411516073851}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_Mem_Server ) ) / MRS ) ,( FirstVNF_RAM - PN ) )", "choosing": "( Max( RMSe,DS ) + Min( ( RCSe - MUR ) ,( DS * MUM ) ) )", "obj1": 0.7025547445255474, "obj2": 0.2561411516073851}, {"determining": "( Min( Max( CRS,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,Max( Max( FirstVNF_Mem_Server,( MRS / CRS ) ),MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( Max( RRSe,Min( ( ( RMSe - CS ) / DS ) ,MUM ) ) - MUM ) ) * ( MLU / MUR ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) )", "obj1": 0.6624087591240876, "obj2": 0.3029144440178526}, {"determining": "( Min( ( MRS - CRS ) ,( FirstVNF_CPU_Server / DDR ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Min( ( CS / RCSe ) ,Max( CS,( ( RRSe - RRSe ) - RMSe ) ) )", "obj1": 0.791970802919708, "obj2": 0.15722720907723364}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( CS / MUM ) ) ) + ( MUR / MLU ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( Max( FirstVNF_RAM,Max( ( FirstVNF_Mem + ( AMS - ACS ) ),( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server - RRS ) / FirstVNF_CPU ) ) ) ) * ( ( DDR * FirstVNF_CPU ) / ( BR - MDR ) ) ) * ( ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM / RRS ) / ( FirstVNF_RAM_Server + RRS ) ) ) )", "choosing": "( ( ( ( Min( RRSe ,RRSe ) * DS ) * MUC ) * ( MUR + ( MUM * RMSe ) ) ) + ( RRSe / DS ) )", "obj1": 0.9671532846715328, "obj2": 0.017526004758883072}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( FirstVNF_CPU - ( Max( FirstVNF_CPU,ACS ) * BR ) ) ) ) * ( ( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / MRS ) - Max( FirstVNF_CPU_Server,ARS ) ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( CS * MUR ) * ( RMSe * MLU ) ) + Max( CS,DS ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.9288321167883211, "obj2": 0.04438792525207533}, {"determining": "( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( CRS * FirstVNF_CPU ) ,( MRS / PN ) ) ) * ( ( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / MRS ) - Max( FirstVNF_CPU_Server,ARS ) ) - Min( Min( FirstVNF_Mem ,AMS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( CS * MUR ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.9215328467153284, "obj2": 0.04609192968465335}, {"determining": "( ARS + ( ( ( FirstVNF_Mem_Server * CRS ) / Const ) - CRS ) )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( Max( Min( MUC ,MUM ),MLU ) * ( RRSe / RRSe ) ) ) ) + ( MUM - RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6207683369621332}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( CS / MUM ) ) ) + ( MUR / MLU ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}], "5": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,ACS ) - ( Max( FirstVNF_CPU,ACS ) * BR ) )", "choosing": "Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( ( CS - MLU ) - MUR ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( MLU / ( Min( DS ,( MLU * MUR ) ) / RCSe ) ) ,Max( CS,( ( RRSe - RRSe ) - RMSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) )", "choosing": "Max( ( MUM * RMSe ),( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4709263620789438}, {"determining": "( ( DDR / MRS ) + ( ( MDR / BR ) + ( Max( BR,Const ) * MDR ) ) )", "choosing": "( ( Max( Min( MUC ,( MUC + ( DS - ( ( MUR / RRSe ) - MUC ) ) ) ),CS ) - MUM ) / ( MUR * MUC ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( Min( Const ,DDR ) * ( FirstVNF_Mem * DDR ) )", "choosing": "( ( ( ( RRSe + DS ) - ( DS / MUR ) ) - Max( ( DS * RCSe ),( RMSe * RRSe ) ) ) - ( Max( ( ( Min( RMSe ,( Max( RRSe,CS ) + ( CS * MUC ) ) ) * DS ) - ( RMSe * ( DS - Max( RMSe,MUR ) ) ) ),Min( RCSe ,MLU ) ) / ( Min( RRSe ,MUC ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( MDR - CRS ) + Max( FirstVNF_CPU,( RRS / MDR ) ) )", "choosing": "( ( MUR / MLU ) + ( ( RCSe / CS ) - CS ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( Min( CRS ,AMS ) / PN ) + FirstVNF_Mem_Server ) ),Min( ( ( ( BR - FirstVNF_CPU ) - ( FirstVNF_RAM - MDR ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),Max( RRSe,MUR ) )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUM * RMSe ),( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4709263620789438}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Max( Max( FirstVNF_CPU,AMS ),Max( CRS,CRS ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( RCSe * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6361225931740747}, {"determining": "( Max( FirstVNF_CPU,ACS ) - ( Max( FirstVNF_CPU,ACS ) * BR ) )", "choosing": "Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( ( CS - MLU ) - MUR ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ( FirstVNF_RAM_Server / ( ACS / MRS ) ) * ARS ) / DDR ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( CS / MUR ) - Min( DS ,MUC ) ) ),( Max( DS,MUR ) + ( Max( Max( MLU,( RCSe / ( ( MLU + CS ) / RRSe ) ) ),RMSe ) * Max( Max( ( MUM + DS ),MUC ),MUC ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5949599075386826}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "Min( ( FirstVNF_CPU - Min( MRS ,ACS ) ) ,( ARS / ARS ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) / ( MUR / RMSe ) ) / RCSe ) * ( CS / MUM ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( ( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) + Min( CS ,RRSe ) ),( ( MUM - MUR ) / MUR ) ),( ( Min( RMSe ,MLU ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.48722627737226276, "obj2": 0.47854249127776377}, {"determining": "Max( ( ( ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + MDR ),BR )", "choosing": "Max( ( Max( ( DS - MLU ),RCSe ) + ( Min( DS ,MUC ) - ( RRSe / MUR ) ) ),( Min( ( Max( ( MLU / ( MUM + ( MLU * MLU ) ) ),MUC ) + MUR ) ,MLU ) + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( RMSe + MUM ) * ( ( DS - MLU ) * RRSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "Min( ( FirstVNF_CPU - Min( MRS ,ACS ) ) ,( ARS / ARS ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) / ( MUR / RMSe ) ) / RCSe ) * ( CS / MUM ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4709263620789438}, {"determining": "Min( ( ( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / MRS ) ,Min( Const ,ACS ) )", "choosing": "( ( ( CS * MUR ) * ( RMSe * ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) ) ) + Max( RMSe,DS ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( Min( ( ARS + MDR ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) / DDR ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe + DS ) - ( RMSe / ( ( RMSe - MUC ) * ( ( MUM / RCSe ) / ( RCSe / RRSe ) ) ) ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM * RMSe ),Min( RCSe ,MLU ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) * CRS )", "choosing": "( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM * RMSe ),Min( RCSe ,MLU ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) / ( MUR / RMSe ) ) / RCSe ) * ( CS / MUM ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( Min( ( Min( Const ,FirstVNF_Mem_Server ) + DDR ) ,( ARS + MDR ) ) * ( FirstVNF_Mem * Max( FirstVNF_Mem,MRS ) ) )", "choosing": "Min( ( MUR / ( ( ( MUM + MUR ) - CS ) - MUR ) ) ,( ( CS - MLU ) - MUR ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + Max( MUM,Min( MUR ,MUC ) ) ) / DS ),Min( MUM ,RRSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( MUM - MUR ) / MUR ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Min( ( ARS + MDR ) ,Max( DDR,FirstVNF_CPU ) ) * MDR )", "choosing": "Min( ( MLU / MUM ) ,Max( CS,( Min( CS ,CS ) - ( ( RRSe / ( MUR * RCSe ) ) * RCSe ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5053129268442209}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Min( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,MDR ) ,( Min( ACS ,FirstVNF_Mem_Server ) / DDR ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( Min( Max( ( MUC - DS ),CS ) ,RRSe ) ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) / ( MLU * ( MUC * ( RRSe / MUM ) ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "( ( ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) * ACS ) + Max( CRS,ACS ) )", "choosing": "( ( DS - RRSe ) + ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( MRS * ACS ) + Max( CRS,ACS ) )", "choosing": "( ( DS - RRSe ) + ( RMSe - CS ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) * ARS ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5949599075386826}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( ( Min( FirstVNF_CPU_Server ,DDR ) / ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( MRS + BR ) / Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS * ( Min( DS ,( RMSe - Max( RCSe,RMSe ) ) ) - MUR ) ),( ( Min( MUC ,RMSe ) - Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) )", "choosing": "( ( ( DS - Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) ) * RMSe ) + Max( RMSe,DS ) )", "obj1": 0.45985401459854014, "obj2": 0.5358395036498624}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Min( Min( Max( Const,FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server / DDR ) ) * ( BR * FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( ( MUC - ( MUC - ( RMSe * RMSe ) ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Min( Max( CRS,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,Max( Max( FirstVNF_Mem_Server,( MRS / CRS ) ),MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( Max( RRSe,Min( ( ( RMSe - CS ) / DS ) ,MUM ) ) - MUM ) ) * ( MLU / MUR ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ARS + ( ( ( FirstVNF_Mem_Server * CRS ) / Const ) - CRS ) )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( Max( Min( MUC ,MUM ),MLU ) * ( RRSe / RRSe ) ) ) ) + ( MUM - RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6207683369621332}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) * CRS )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( Max( RMSe,DS ) + Min( ( RCSe - MUR ) ,( DS * MUM ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server - ( ( Const - ACS ) * ( BR - ACS ) ) ),AMS ) )", "choosing": "Min( ( MLU / MUM ) ,Max( CS,( Min( CS ,CS ) - ( ( RRSe / ( MUR * RCSe ) ) * RCSe ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5053129268442209}, {"determining": "Min( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / MRS ) ,( FirstVNF_RAM - PN ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.4635036496350365, "obj2": 0.5233794194327841}, {"determining": "( ( ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) * ACS ) + Max( CRS,ACS ) )", "choosing": "( ( DS - RRSe ) + ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "Min( ( ( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / MRS ) ,Min( Const ,ACS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( DS * MUC ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "Min( ( ( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / MRS ) ,Min( Const ,ACS ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( DDR + ( FirstVNF_CPU_Server - RRS ) ) * Max( AMS,( FirstVNF_RAM_Server - Min( Max( ACS,BR ) ,Min( BR ,( Const * CRS ) ) ) ) ) )", "choosing": "( ( CS * ( MUR * RCSe ) ) * MLU )", "obj1": 0.48175182481751827, "obj2": 0.4895461191972314}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( MLU + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ( Min( ( ARS + MDR ) ,( Min( Const ,FirstVNF_Mem_Server ) / DDR ) ) / ( ACS / FirstVNF_CPU ) ) * ARS ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + ( ( MUR - RMSe ) + DS ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5949599075386826}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) * ARS ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ),( MLU + RMSe ) )", "obj1": 0.42883211678832117, "obj2": 0.5949599075386826}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( Const / FirstVNF_Mem ) ) * CRS )", "choosing": "( Max( RMSe,DS ) + Min( ( RCSe - MUR ) ,( DS * MUM ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( ( ( BR - FirstVNF_CPU ) - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),RRSe )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "( Min( Max( ( MRS * Max( AMS,FirstVNF_CPU_Server ) ),BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( ( Const * ( DDR + AMS ) ) + ( PN - Max( MRS,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_CPU,AMS ) ) )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUC - Max( ( ( ( Max( CS,RRSe ) * CS ) / RMSe ) + MUM ),( ( MUC / ( RMSe / RRSe ) ) - DS ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / DDR ) ) * ( FirstVNF_Mem * Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_CPU_Server ) ) ,( Min( ( CRS + ACS ) ,FirstVNF_RAM ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( RMSe - MUC ) )", "obj1": 0.49635036496350365, "obj2": 0.46357900076729935}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) ) * MUC ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / Min( MUR ,MUC ) ) * ( MUR * RCSe ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6435793564041984}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) * ARS ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( Max( DS,MUR ) + ( MUM * ( ( Min( ( RMSe / RRSe ) ,RRSe ) * DS ) * MUC ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5949599075386826}, {"determining": "( Min( ( ARS + Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / Max( ( Const / FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ,Min( Const ,ACS ) ) ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4543795620437956, "obj2": 0.543911352256964}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( BR,( Min( FirstVNF_Mem_Server ,Min( MDR ,Min( MRS ,MDR ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,CS ) + ( MLU * MUC ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server - ( ( Const - ACS ) * ( BR - ACS ) ) ),AMS ) )", "choosing": "Max( ( ( ( DS - MLU ) * RRSe ) + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) / ( MUR / RMSe ) ) / RCSe ) * ( CS / MUM ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) )", "choosing": "( ( ( ( ( CS * MUR ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5358395036498624}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5805710602604885}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ( FirstVNF_Mem * Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) ) ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) )", "choosing": "( ( ( DS - Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) ) * RMSe ) + Max( RMSe,( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5358395036498624}, {"determining": "( ( ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) * ACS ) + Max( ( Max( ( AMS - FirstVNF_CPU ),Max( BR,FirstVNF_Mem_Server ) ) + ( Min( BR ,MDR ) + RRS ) ),ACS ) )", "choosing": "( ( DS - Min( ( RCSe + MUC ) ,( RMSe * DS ) ) ) + ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) )", "obj1": 0.48905109489051096, "obj2": 0.473166346582526}, {"determining": "( Max( ( AMS - FirstVNF_CPU ),Max( BR,FirstVNF_Mem_Server ) ) + ( Min( BR ,MDR ) + RRS ) )", "choosing": "( ( DS - RRSe ) + ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( CS / MUM ) ) ) + ( MUR / MLU ) )", "obj1": 0.4927007299270073, "obj2": 0.4709263620789438}, {"determining": "( Min( Max( PN,BR ) ,Max( Max( FirstVNF_Mem_Server,( MRS - CRS ) ),MDR ) ) * ( FirstVNF_Mem * DDR ) )", "choosing": "( ( ( ( RRSe + DS ) - ( DS / MUR ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( ( Min( RMSe ,( Max( RRSe,CS ) + ( CS * MUC ) ) ) * DS ) - ( RMSe * ( RMSe * Max( ( MUM / MLU ),RMSe ) ) ) ),Min( RCSe ,MLU ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( CRS + FirstVNF_RAM ) * ( FirstVNF_Mem * DDR ) )", "choosing": "Max( ( ( MUR / MLU ) * Min( ( MUM / ( ( MUC * MLU ) + Max( DS,RMSe ) ) ) ,( Min( RRSe ,Min( MUM ,MUM ) ) - MUM ) ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( ( CS - MLU ) - MUR ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "Min( ( FirstVNF_CPU - Min( MRS ,ACS ) ) ,( ARS / ARS ) )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( CS / MUM ) ) ) + ( MUM - RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6207683369621332}, {"determining": "Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ) ) ) )", "choosing": "( ( ( Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4709263620789438}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4927007299270073, "obj2": 0.4709263620789438}, {"determining": "( Min( Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) ,Max( DDR,FirstVNF_CPU ) ) * MDR )", "choosing": "Min( ( MLU / MUM ) ,Max( CS,( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) ) * MUC ) ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5053129268442209}, {"determining": "( Min( ( ARS + MDR ) ,Max( DDR,FirstVNF_CPU ) ) * MDR )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) ) * MUC ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5053129268442209}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM * RMSe ),Min( RCSe ,MLU ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( ( MUC - ( MUC - ( RMSe * RMSe ) ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) ),AMS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * RMSe ) + ( ( MUR / MLU ) + MUM ) ) * MUC ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4658152018147227}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( Min( ( FirstVNF_CPU - Min( MRS ,ACS ) ) ,( ARS / ARS ) ) - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "Min( ( FirstVNF_CPU - Min( MRS ,ACS ) ) ,( ARS / ARS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) ) * MUC ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( ( ( MDR / Const ) - CRS ) + ARS )", "choosing": "( ( ( ( DS + RRSe ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( DS - ( MLU * DS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6207683369621332}, {"determining": "( ARS + ( ( ( FirstVNF_Mem_Server * CRS ) / Const ) - CRS ) )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( Max( Min( MUC ,MUM ),MLU ) * ( RRSe / RRSe ) ) ) ) + ( MUM - RCSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ARS + ( ( ( FirstVNF_Mem_Server * CRS ) / Const ) - CRS ) )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( Max( Min( MUC ,MUM ),MLU ) * ( RRSe / RRSe ) ) ) ) + ( MUM - RCSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ARS + ( ( ( FirstVNF_Mem_Server * CRS ) / Const ) - CRS ) )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( Max( Min( MUC ,MUM ),MLU ) * ( RRSe / RRSe ) ) ) ) + ( MUM - RCSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ARS + ( ( ( FirstVNF_Mem_Server * CRS ) / Const ) - CRS ) )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( Max( Min( MUC ,MUM ),MLU ) * ( RRSe / RRSe ) ) ) ) + ( MUM - RCSe ) )", "obj1": 0.46167883211678834, "obj2": 0.5252222698111303}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( CS * ( MUR * RCSe ) ) * MLU )", "obj1": 0.48175182481751827, "obj2": 0.4895461191972314}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),MDR ) - FirstVNF_CPU ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( ( DS + MUM ) - ( CS - RRSe ) ) + ( MUR / MLU ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}, {"determining": "( Min( ( ARS + MDR ) ,ARS ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( RRS * PN ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( ( RRSe - RRSe ) / CS ) + MUM ) )", "obj1": 0.44343065693430656, "obj2": 0.5495531685345021}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ( FirstVNF_RAM_Server / ( ACS / FirstVNF_CPU ) ) * ARS ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) )", "obj1": 0.42883211678832117, "obj2": 0.5949599075386826}, {"determining": "( ( FirstVNF_RAM_Server + MDR ) * ( FirstVNF_Mem * Const ) )", "choosing": "Min( ( MLU / ( Min( DS ,( MLU * MUR ) ) / RCSe ) ) ,Max( CS,( ( RRSe - RRSe ) - RMSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5053129268442209}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server + ( ( Const - ( ( RRS / CRS ) + ( MRS + DDR ) ) ) * ( BR - ACS ) ) ),AMS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * ( Min( Min( RRSe ,RMSe ) ,CS ) * ( CS + MUM ) ) ) + ( ( DS / CS ) + MUM ) ) * MUC ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46084213350416864}], "6": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( Min( CRS ,AMS ) / PN ) + FirstVNF_Mem_Server ) ),Min( ( ( ( BR - FirstVNF_CPU ) - ( FirstVNF_RAM - MDR ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),Max( RRSe,MUR ) )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Max( Max( FirstVNF_CPU,AMS ),Max( CRS,CRS ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( RCSe * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6361225931740747}, {"determining": "Max( ( ( ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) + MDR ),BR )", "choosing": "Max( ( Max( ( DS - MLU ),RCSe ) + ( Min( DS ,MUC ) - ( RRSe / MUR ) ) ),( Min( ( Max( ( MLU / ( MUM + ( MLU * MLU ) ) ),MUC ) + MUR ) ,MLU ) + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( RMSe + MUM ) * ( ( DS - MLU ) * RRSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Min( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,MDR ) ,( Min( ACS ,FirstVNF_Mem_Server ) / DDR ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( Min( Max( ( MUC - DS ),CS ) ,RRSe ) ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) / ( MLU * ( MUC * ( RRSe / MUM ) ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( ( Min( FirstVNF_CPU_Server ,DDR ) / ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( MRS + BR ) / Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS * ( Min( DS ,( RMSe - Max( RCSe,RMSe ) ) ) - MUR ) ),( ( Min( MUC ,RMSe ) - Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) )", "choosing": "( ( ( DS - Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) ) * RMSe ) + Max( RMSe,DS ) )", "obj1": 0.45985401459854014, "obj2": 0.5358395036498624}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( MLU + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( ( ( BR - FirstVNF_CPU ) - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),RRSe )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "( Min( Max( ( MRS * Max( AMS,FirstVNF_CPU_Server ) ),BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( ( Const * ( DDR + AMS ) ) + ( PN - Max( MRS,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_CPU,AMS ) ) )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUC - Max( ( ( ( Max( CS,RRSe ) * CS ) / RMSe ) + MUM ),( ( MUC / ( RMSe / RRSe ) ) - DS ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) ) * MUC ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( Min( ( ARS + Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / Max( ( Const / FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ,Min( Const ,ACS ) ) ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4543795620437956, "obj2": 0.543911352256964}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( BR,( Min( FirstVNF_Mem_Server ,Min( MDR ,Min( MRS ,MDR ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,CS ) + ( MLU * MUC ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server - ( ( Const - ACS ) * ( BR - ACS ) ) ),AMS ) )", "choosing": "Max( ( ( ( DS - MLU ) * RRSe ) + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) )", "choosing": "( ( ( ( ( CS * MUR ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5358395036498624}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5805710602604885}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ( FirstVNF_Mem * Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) ) ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) )", "choosing": "( ( ( DS - Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) ) * RMSe ) + Max( RMSe,( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5358395036498624}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,ARS ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( RRS * PN ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( ( RRSe - RRSe ) / CS ) + MUM ) )", "obj1": 0.44343065693430656, "obj2": 0.5495531685345021}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ( FirstVNF_Mem * Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) ) ) ) * Max( CRS,CRS ) ) )", "choosing": "( ( ( DS - Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) ) * RMSe ) + Max( RMSe,( ( MUC - Min( DS ,( MUM / RCSe ) ) ) * ( MUR / DS ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5358395036498624}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ( FirstVNF_Mem * Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) ) ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( RCSe * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5358395036498624}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( MLU + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( ( ( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) + Min( CS ,RRSe ) ),( ( MUM - MUR ) / MUR ) ),( ( Min( RMSe ,MLU ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) ,Max( DDR,FirstVNF_CPU ) ) * MDR )", "choosing": "Min( ( MLU / MUM ) ,Max( CS,( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + MUM ) ) * MUC ) ) ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5805710602604885}, {"determining": "( Min( ( ARS + Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / Max( ( Const / FirstVNF_RAM_Server ),( ( Const - ACS ) * ( BR - ACS ) ) ) ) ,Min( Const ,ACS ) ) ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4543795620437956, "obj2": 0.543911352256964}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( ARS + Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / Max( ( Const / FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ,Min( Const ,ACS ) ) ) ) ) )", "choosing": "( ( ( DS - Max( ( MLU + Min( CS ,RRSe ) ),( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) ) ) * RMSe ) + Max( RMSe,DS ) )", "obj1": 0.45985401459854014, "obj2": 0.5358395036498624}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) - Min( ACS ,DDR ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( MUR ,( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) ) - Min( ( RRSe * MUR ) ,RMSe ) ) / MUR ) )", "obj1": 0.45985401459854014, "obj2": 0.5358395036498624}, {"determining": "( Min( ( ARS + Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / Max( ( Const / FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ,Min( Const ,ACS ) ) ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( DS - Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) ) * RMSe ) + Max( RMSe,DS ) )", "obj1": 0.4543795620437956, "obj2": 0.543911352256964}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) ) ) ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) + Max( RMSe,DS ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5358395036498624}, {"determining": "Min( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / MRS ) ,( FirstVNF_RAM - PN ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( Max( ( FirstVNF_RAM_Server + Max( FirstVNF_RAM,AMS ) ),RRS ) * ( ( RRS * PN ) / DDR ) ),Min( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( ( RRSe - ( ( DS + ( MUR - MUM ) ) - ( CS - DS ) ) ) / CS ) + MUM ) )", "obj1": 0.44343065693430656, "obj2": 0.5495531685345021}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( RRS * PN ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( ( RRSe - RRSe ) / CS ) + MUM ) )", "obj1": 0.44343065693430656, "obj2": 0.5495531685345021}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( Min( Const ,FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_Mem * PN ) )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( Min( ( ARS + MDR ) ,( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) ) ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( Min( ( ARS + MDR ) ,( Min( Const ,FirstVNF_Mem_Server ) / DDR ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( ( CS - MLU ) - MUR ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( ( BR + FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - ( MLU * ( MUR / ( ( MUC + MUC ) / Min( ( MLU + MLU ) ,MUR ) ) ) ) ) / MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( ( Min( FirstVNF_CPU_Server ,DDR ) / ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( MRS + BR ) / Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS * ( Min( DS ,( RMSe - Max( RCSe,RMSe ) ) ) - MUR ) ),( ( Min( MUC ,RMSe ) - Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( ( Min( FirstVNF_CPU_Server ,DDR ) / ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( MRS + BR ) / Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS * ( Min( DS ,( RMSe - Max( RCSe,RMSe ) ) ) - MUR ) ),( ( Min( MUC ,RMSe ) - Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( ( Min( FirstVNF_CPU_Server ,DDR ) / ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( MRS + BR ) / Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS * ( Min( DS ,( RMSe - Max( RCSe,RMSe ) ) ) - MUR ) ),( ( Min( MUC ,RMSe ) - Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( ARS,MDR ) ,Min( MDR ,BR ) ) / Max( ( Min( PN ,( MDR - ( RRS * BR ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( ( ( CS - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( Const * MDR ) / Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RRSe ,MLU ) ) ) * Min( Max( MLU,Min( CS ,MUR ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( Const - Min( FirstVNF_Mem ,CRS ) ) + Max( ( MDR - FirstVNF_RAM ),Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "Max( ( ( ( RRSe / MUR ) - ( Max( ( ( ( MUM * RMSe ) / ( MUM / DS ) ) - ( MLU / ( MUC / CS ) ) ),DS ) + ( ( RRSe * CS ) / ( ( ( DS - RCSe ) + RCSe ) * MUM ) ) ) ) / ( MUM + CS ) ),( CS * ( RCSe * MUR ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( ( ( BR - FirstVNF_CPU ) - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "( Min( ( ARS + MDR ) ,( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( ( ( MUC / Min( MUR ,MUC ) ) * ( MUR * RCSe ) ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Min( BR ,( FirstVNF_RAM / MDR ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Min( MLU ,( MUC * MLU ) ) - MUC ) - MUC ),( ( RCSe - MUC ) / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( PN - ( PN - MRS ) ) ) ) + ( Min( BR ,MDR ) + Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( RMSe / Min( DS ,RRSe ) ) / ( CS - RMSe ) ) + ( RMSe - MUC ) ),( ( MUC / Min( MUR ,RMSe ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( DS - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.42700729927007297, "obj2": 0.5935116101270673}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5805710602604885}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( RMSe + MUM ) * ( ( DS - MLU ) * RRSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "( ( RRS / CRS ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( ( MUR + MUC ) * ( Min( Min( RRSe ,RMSe ) ,CS ) * ( CS + MUM ) ) ),( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.4416058394160584, "obj2": 0.5528142465683551}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server + ( ( Const - ( ( RRS / CRS ) + FirstVNF_RAM ) ) * ( BR - ACS ) ) ),AMS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * ( Min( Min( RRSe ,RMSe ) ,CS ) * ( CS + MUM ) ) ) + MLU ) * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ACS * MRS ) + AMS ) / FirstVNF_Mem ) ),BR )", "choosing": "Max( ( Max( MUC,( ( RMSe + ( RCSe - RMSe ) ) - Max( MUM,( RRSe - ( ( DS + CS ) - MUR ) ) ) ) ) + ( RRSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ARS / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ( ARS * ( ARS / Const ) ) ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( ( Max( MLU,( ( RMSe * RCSe ) / RRSe ) ) - Min( MUC ,RCSe ) ) + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( BR + MDR ) ,( FirstVNF_CPU_Server / ( CRS - Const ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) / RMSe ) ),( MUC / Min( Max( ( CS / MUR ),MUC ) ,CS ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( ( ( FirstVNF_Mem_Server * CRS ) / Const ) - CRS ) + ARS )", "choosing": "( ( ( ( ( ( CS / RCSe ) * ( Max( Min( MUC ,MUM ),MLU ) * ( RRSe / RRSe ) ) ) + RRSe ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( DS - ( MLU * DS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6145756151848485}, {"determining": "( Min( ( CRS + ACS ) ,FirstVNF_RAM ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( RCSe + RRSe ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( RMSe - MUC ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( Min( ( ARS + Min( ( ( ( ARS - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / Max( ( Const / FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ,Min( Const ,ACS ) ) ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,( Max( CS,( ( RMSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4543795620437956, "obj2": 0.543911352256964}, {"determining": "Max( Max( FirstVNF_RAM_Server,ARS ),Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( FirstVNF_Mem_Server - BR ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4543795620437956, "obj2": 0.543911352256964}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( FirstVNF_Mem_Server * CRS ) / Const ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( MUR + ( ( CS / RCSe ) * ( Max( Min( MUC ,MUM ),MLU ) * ( RRSe / RRSe ) ) ) ),( Max( DS,MUR ) + ( MUM * ( ( Min( ( RMSe / RRSe ) ,RRSe ) * DS ) * MUC ) ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5743463716480128}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ( ( ( BR - FirstVNF_CPU ) - ( AMS - Min( CRS ,BR ) ) ) - FirstVNF_CPU_Server ) + ARS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( ( DS + RMSe ) / RRSe ) - ( RRSe / MUR ) ) ),( MLU + RMSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6063753660969283}, {"determining": "Max( ( FirstVNF_RAM_Server - ACS ),Min( ( ( ( BR - FirstVNF_CPU ) - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),RRSe )", "obj1": 0.4562043795620438, "obj2": 0.5415867792982799}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( Max( CRS,FirstVNF_RAM_Server ) - ( Max( ( DDR - MRS ),FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( PN * PN ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,MUC ) - ( RRSe + ( RCSe - ( ( RMSe - Max( MUM,RCSe ) ) / RCSe ) ) ) ) / MUR ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( CS,( ( RRSe - ( MUR / ( ( CS * MUC ) - RCSe ) ) ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU / MUM ) + ( RRSe / RRSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + Const ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( ( FirstVNF_RAM / DDR ) * MDR ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( RRSe + ( RMSe - ( Max( MUC,( CS + MLU ) ) / MLU ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5885891904801424}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.43613138686131386, "obj2": 0.5805710602604885}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( ( CRS / ACS ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,Const ) ) - ( FirstVNF_RAM * ARS ) ),( CRS / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( CS + Max( ( Min( MUR ,RRSe ) / MUR ),Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( MLU + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "Max( Max( CS,( ( RRSe - ( MUR / ( ( CS * MUC ) - RCSe ) ) ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) )", "choosing": "( ( Max( DS,Max( RMSe,( MUM / CS ) ) ) * RMSe ) + Max( RMSe,( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( MDR + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + ( ( MUR - RMSe ) + DS ) ) ) + Max( RMSe,DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ( Min( ( ARS + MDR ) ,( Min( Const ,FirstVNF_Mem_Server ) / DDR ) ) / ( ACS / FirstVNF_CPU ) ) * ARS ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + ( ( MUR - RMSe ) + DS ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( RRS * PN ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( RCSe + ( ( CS / RCSe ) * ( Max( Min( MUC ,MUM ),MLU ) * ( RRSe / RRSe ) ) ) ) + ( MUM - RCSe ) )", "obj1": 0.44343065693430656, "obj2": 0.5495531685345021}, {"determining": "Max( Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( ( RRSe - MUM ) - RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( FirstVNF_CPU ,PN ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( RRS * PN ) / Min( ( ACS / ( ARS - ( ( CRS + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS + ( Min( Max( MLU,MUR ) ,( Min( Min( ( MLU + RCSe ) ,( RRSe - MLU ) ) ,Min( RMSe ,MUR ) ) * RRSe ) ) + Min( Min( MUC ,RRSe ) ,MUM ) ) ),Max( ( RMSe * RRSe ),MUM ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( PN / Const ) - ( RRS + Const ) ) ),BR )", "choosing": "( ( Max( CS,( RMSe - ( RRSe - MUM ) ) ) * ( RMSe * Max( ( ( DS * RCSe ) + MUC ),( RRSe / ( ( ( RCSe / CS ) - ( RMSe * CS ) ) + Max( RCSe,MLU ) ) ) ) ) ) + Max( RMSe,DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server - ( ( Const - ACS ) * ( ( CRS * Max( ACS,RRS ) ) + ( Min( BR ,MDR ) + RRS ) ) ) ),AMS ) )", "choosing": "Max( ( ( ( CS - MLU ) * RRSe ) + ( ( RRSe / MUR ) - Min( ( ( DS - RRSe ) + Max( MUM,MUR ) ) ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}, {"determining": "( Max( ( AMS - FirstVNF_CPU ),Max( BR,FirstVNF_Mem_Server ) ) + ( Min( BR ,MDR ) + RRS ) )", "choosing": "Max( ( ( ( DS - MLU ) * RRSe ) + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4324817518248175, "obj2": 0.5842682401835911}], "7": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Max( Max( FirstVNF_CPU,AMS ),Max( CRS,CRS ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( RCSe * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6361225931740747}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Min( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,MDR ) ,( Min( ACS ,FirstVNF_Mem_Server ) / DDR ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( Min( Max( ( MUC - DS ),CS ) ,RRSe ) ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) / ( MLU * ( MUC * ( RRSe / MUM ) ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( ( Min( FirstVNF_CPU_Server ,DDR ) / ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( MRS + BR ) / Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS * ( Min( DS ,( RMSe - Max( RCSe,RMSe ) ) ) - MUR ) ),( ( Min( MUC ,RMSe ) - Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( MLU + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( BR,( Min( FirstVNF_Mem_Server ,Min( MDR ,Min( MRS ,MDR ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,CS ) + ( MLU * MUC ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,ARS ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( MLU + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( ( ( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) + Min( CS ,RRSe ) ),( ( MUM - MUR ) / MUR ) ),( ( Min( RMSe ,MLU ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Min( ( Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / MRS ) ,( FirstVNF_RAM - PN ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( Min( Const ,FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_Mem * PN ) )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( Max( ( ( DS * RRSe ) / ( MUM + CS ) ),( CS * ( MUR * RCSe ) ) ) ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUM + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( Min( ( ARS + MDR ) ,( Min( Const ,FirstVNF_Mem_Server ) / DDR ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( ( CS - MLU ) - MUR ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( ( BR + FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - ( MLU * ( MUR / ( ( MUC + MUC ) / Min( ( MLU + MLU ) ,MUR ) ) ) ) ) / MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( ( Min( FirstVNF_CPU_Server ,DDR ) / ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( MRS + BR ) / Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS * ( Min( DS ,( RMSe - Max( RCSe,RMSe ) ) ) - MUR ) ),( ( Min( MUC ,RMSe ) - Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( ( Min( FirstVNF_CPU_Server ,DDR ) / ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( MRS + BR ) / Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS * ( Min( DS ,( RMSe - Max( RCSe,RMSe ) ) ) - MUR ) ),( ( Min( MUC ,RMSe ) - Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( ( Min( FirstVNF_CPU_Server ,DDR ) / ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( MRS + BR ) / Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS * ( Min( DS ,( RMSe - Max( RCSe,RMSe ) ) ) - MUR ) ),( ( Min( MUC ,RMSe ) - Max( RRSe,RCSe ) ) + DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( ARS,MDR ) ,Min( MDR ,BR ) ) / Max( ( Min( PN ,( MDR - ( RRS * BR ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( ( ( ( CS - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( Const * MDR ) / Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RRSe ,MLU ) ) ) * Min( Max( MLU,Min( CS ,MUR ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( ( ( MUC / Min( MUR ,MUC ) ) * ( MUR * RCSe ) ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Min( BR ,( FirstVNF_RAM / MDR ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Min( MLU ,( MUC * MLU ) ) - MUC ) - MUC ),( ( RCSe - MUC ) / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( PN - ( PN - MRS ) ) ) ) + ( Min( BR ,MDR ) + Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( ( RMSe / Min( DS ,RRSe ) ) / ( CS - RMSe ) ) + ( RMSe - MUC ) ),( ( MUC / Min( MUR ,RMSe ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server + ( ( Const - ( ( RRS / CRS ) + FirstVNF_RAM ) ) * ( BR - ACS ) ) ),AMS ) )", "choosing": "( Min( ( CS / RCSe ) ,Min( MUM ,MUM ) ) - ( ( MUM / CS ) + ( ( ( ( MUR + MUC ) * ( Min( Min( RRSe ,RMSe ) ,CS ) * ( CS + MUM ) ) ) + MLU ) * MUC ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ACS * MRS ) + AMS ) / FirstVNF_Mem ) ),BR )", "choosing": "Max( ( Max( MUC,( ( RMSe + ( RCSe - RMSe ) ) - Max( MUM,( RRSe - ( ( DS + CS ) - MUR ) ) ) ) ) + ( RRSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ARS / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ( ARS * ( ARS / Const ) ) ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( ( Max( MLU,( ( RMSe * RCSe ) / RRSe ) ) - Min( MUC ,RCSe ) ) + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( BR + MDR ) ,( FirstVNF_CPU_Server / ( CRS - Const ) ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) / RMSe ) ),( MUC / Min( Max( ( CS / MUR ),MUC ) ,CS ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ( ( ( BR - FirstVNF_CPU ) - ( AMS - Min( CRS ,BR ) ) ) - FirstVNF_CPU_Server ) + ARS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( ( DS + RMSe ) / RRSe ) - ( RRSe / MUR ) ) ),( MLU + RMSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6063753660969283}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( Max( CRS,FirstVNF_RAM_Server ) - ( Max( ( DDR - MRS ),FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( PN * PN ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,MUC ) - ( RRSe + ( RCSe - ( ( RMSe - Max( MUM,RCSe ) ) / RCSe ) ) ) ) / MUR ),( CS * ( MUR * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( CS,( ( RRSe - ( MUR / ( ( CS * MUC ) - RCSe ) ) ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + Const ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( ( FirstVNF_RAM / DDR ) * MDR ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( RRSe + ( RMSe - ( Max( MUC,( CS + MLU ) ) / MLU ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5885891904801424}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( MLU + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "Max( Max( CS,( ( RRSe - ( MUR / ( ( CS * MUC ) - RCSe ) ) ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) * FirstVNF_Mem ) ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) )", "choosing": "( ( Max( DS,Max( RMSe,( MUM / CS ) ) ) * RMSe ) + Max( RMSe,( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( ( MDR + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + ( ( MUR - RMSe ) + DS ) ) ) + Max( RMSe,DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ( Min( ( ARS + MDR ) ,( Min( Const ,FirstVNF_Mem_Server ) / DDR ) ) / ( ACS / FirstVNF_CPU ) ) * ARS ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + ( ( MUR - RMSe ) + DS ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "Max( Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( ( RRSe - MUM ) - RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( FirstVNF_CPU ,PN ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( RRS * PN ) / Min( ( ACS / ( ARS - ( ( CRS + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS + ( Min( Max( MLU,MUR ) ,( Min( Min( ( MLU + RCSe ) ,( RRSe - MLU ) ) ,Min( RMSe ,MUR ) ) * RRSe ) ) + Min( Min( MUC ,RRSe ) ,MUM ) ) ),Max( ( RMSe * RRSe ),MUM ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( PN / Const ) - ( RRS + Const ) ) ),BR )", "choosing": "( ( Max( CS,( RMSe - ( RRSe - MUM ) ) ) * ( RMSe * Max( ( ( DS * RCSe ) + MUC ),( RRSe / ( ( ( RCSe / CS ) - ( RMSe * CS ) ) + Max( RCSe,MLU ) ) ) ) ) ) + Max( RMSe,DS ) )", "obj1": 0.4397810218978102, "obj2": 0.5572588669498235}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Min( ( ( Max( PN,Max( MDR,( DDR / FirstVNF_RAM_Server ) ) ) / PN ) + MDR ) ,( Min( ACS ,FirstVNF_Mem_Server ) / DDR ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) / ( MLU * ( MUC * ( RRSe / MUM ) ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_RAM ),BR )", "choosing": "Max( ( RCSe + ( ( MUM / ( MUM - RMSe ) ) - Min( DS ,MUC ) ) ),Max( RRSe,MUR ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,( MRS * ( ( AMS + PN ) - ( CRS + FirstVNF_Mem ) ) ) ) * ( DDR + AMS ) ) + ( ( FirstVNF_Mem_Server + Max( BR,AMS ) ) + BR ) ) ) + ( AMS + ( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( DS,MUC ) - ( ( MUC - MUC ) / CS ) ) * ( CS + ( MLU - RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) ) ) ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) + Max( RMSe,DS ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + ( ( MUR - RMSe ) + DS ) ) ) + Max( RMSe,DS ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Min( BR ,( FirstVNF_RAM / MDR ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Min( MLU ,( MUC * MLU ) ) - MUC ) - MUC ),( ( RCSe - MUC ) / MUR ) )", "obj1": 0.4306569343065693, "obj2": 0.5791786654766378}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Min( BR ,( FirstVNF_RAM / MDR ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Min( MLU ,( MUC * MLU ) ) - MUC ) - MUC ),( ( RCSe - MUC ) / MUR ) )", "obj1": 0.4306569343065693, "obj2": 0.5791786654766378}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( BR ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5791786654766378}, {"determining": "( ( ( ( FirstVNF_Mem_Server * CRS ) / Const ) - CRS ) + ARS )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - ( MUR / ( ( CS * MUC ) - RCSe ) ) ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "Max( ( ( FirstVNF_CPU_Server * RRS ) * ( ( ( Min( RRS ,FirstVNF_CPU ) * FirstVNF_Mem_Server ) * ARS ) / DDR ) ),Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "( ( ( DS - MLU ) * RMSe ) + ( ( RRSe / CS ) + ( ( MUR - RMSe ) + DS ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5626608093402545}, {"determining": "Max( BR,Min( AMS ,AMS ) )", "choosing": "Max( ( ( MLU / MUM ) + ( ( MUR / Min( Min( MUR ,MUR ) ,CS ) ) + ( RRSe / DS ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( MDR + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( ( ( RRSe / MUR ) - Min( DS ,MUC ) ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) )", "choosing": "Max( Max( DS,MLU ),Min( RMSe ,MLU ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( MDR - ( RRS * FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - DS ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) ) / Max( ( ( FirstVNF_RAM * ARS ) - Min( PN ,RRS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - ( MUR / ( ( CS * MUC ) - RCSe ) ) ) - RCSe ) ),( MUR / ( MLU / MUM ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR * FirstVNF_RAM ),( MDR / ( DDR - Min( FirstVNF_RAM ,ARS ) ) ) ) )", "choosing": "( ( MUM / DS ) + ( RRSe / RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,( Max( FirstVNF_Mem,FirstVNF_CPU ) + Const ) ) ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server * RRS ) ) ) ) * Max( CRS,CRS ) ) )", "choosing": "( ( ( DS - Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) ) * RMSe ) + Max( RMSe,( ( ( RRSe * MUR ) - Min( MUM ,( MUM / RCSe ) ) ) * ( MUR / MUR ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6139066302773217}, {"determining": "( Min( Max( ( MRS * Max( AMS,FirstVNF_CPU_Server ) ),BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( ( ( Const * ( DDR + AMS ) ) + ( PN - Max( MRS,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_CPU,AMS ) ) )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUC - Max( ( ( ( Max( CS,RRSe ) * CS ) / RMSe ) + MUM ),( ( MUC / ( RMSe / RRSe ) ) - DS ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5885891904801424}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ,MDR ) * ( ARS + Min( ( ( ( BR - FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) / Max( ( Const / FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ,Min( Const ,ACS ) ) ) ) ) )", "choosing": "( ( ( DS - Max( ( MLU + Min( CS ,RRSe ) ),( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) ) ) * RMSe ) + Max( RMSe,DS ) )", "obj1": 0.4197080291970803, "obj2": 0.6139066302773217}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server - ( ( Const - ACS ) * ( Max( ( AMS - FirstVNF_CPU ),Max( BR,FirstVNF_Mem_Server ) ) + ( Min( BR ,MDR ) + RRS ) ) ) ),AMS ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - ( RRSe / MUR ) ) ),( MLU + RMSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6063753660969283}, {"determining": "( Min( ( ARS + MDR ) ,ARS ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( CRS + ACS ) ,FirstVNF_RAM ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ACS ) ) ) ) - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( RCSe + RRSe ),( ( ( DS - Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) ) * RMSe ) + Max( RMSe,DS ) ) )", "obj1": 0.42700729927007297, "obj2": 0.5887873135198853}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ACS / ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ),( ( CRS * FirstVNF_CPU_Server ) / ( ACS - AMS ) ) )", "choosing": "Max( ( ( ( Max( RMSe,MLU ) - ( RRSe - MUC ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RRSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_RAM_Server / Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server - RRS ) ) ,MRS ) ) ) ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) )", "choosing": "Max( ( ( Min( Max( RMSe,RRSe ) ,( MUC - MLU ) ) - MUC ) - MUC ),( RCSe + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( FirstVNF_RAM_Server - ( ( MDR - Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ( FirstVNF_RAM_Server * MRS ) ) ) ) ) + ( Min( BR ,( ACS / FirstVNF_RAM ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Min( MLU ,( MUC - MLU ) ) - MUC ) - MUC ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RMSe + Min( RCSe ,RMSe ) ) ) ) / ( ( RRSe / RRSe ) + ( MLU / MUM ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.43613138686131386, "obj2": 0.5741920152777825}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( Min( MLU ,( MUC - MLU ) ) - MUC ) - MUC ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5791786654766378}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Min( BR ,( FirstVNF_RAM / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "Max( ( ( MUR + MUC ) * ( Min( Min( RRSe ,RMSe ) ,CS ) * ( CS + MUM ) ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( Min( Min( ( AMS - PN ) ,FirstVNF_Mem ) ,( MRS - Const ) ) - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "Max( ( ( ( MUR * RCSe ) / MLU ) + ( RRSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "( ( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ACS * MRS ) + AMS ) / FirstVNF_Mem ) ),BR )", "choosing": "Max( ( Max( MUC,( ( RMSe + ( RCSe - RMSe ) ) - Max( MUM,( RRSe - ( ( DS + CS ) - MUR ) ) ) ) ) + ( RRSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ACS * MRS ) + AMS ) / FirstVNF_Mem ) ),BR )", "choosing": "Max( ( Max( MUC,( ( RMSe + ( RCSe - RMSe ) ) - Max( MUM,( RRSe - ( ( DS + CS ) - MUR ) ) ) ) ) + ( RRSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ACS * MRS ) + AMS ) / FirstVNF_Mem ) ),BR )", "choosing": "Max( ( Max( MUC,( ( RMSe + ( RCSe - RMSe ) ) - Max( MUM,( RRSe - ( ( DS + CS ) - MUR ) ) ) ) ) + ( RRSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( ( FirstVNF_RAM - Const ) / ACS ) + Min( MDR ,MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( MUR * CS ),MUR ) + ( RMSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( Min( CRS ,AMS ) / PN ) + FirstVNF_Mem_Server ) ),Min( ( ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Max( ( RRSe + Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) ),Max( RRSe,MUR ) )", "obj1": 0.42883211678832117, "obj2": 0.5885891904801424}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) / ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( ( Const * ( Min( MRS ,ARS ) / ( FirstVNF_Mem_Server - ( CRS / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "Max( ( ( ( ( Max( Max( ( CS - RRSe ),MUM ),MUC ) + RMSe ) * ( MUC / MUC ) ) * MUC ) * MUM ),( Max( RRSe,RCSe ) * ( MUR * ( RMSe - Min( DS ,RRSe ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( ARS,MDR ) ,Min( MDR ,BR ) ) / Max( ( Min( PN ,( MDR - ( RRS * BR ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6386841443397111}], "8": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( BR,( Min( FirstVNF_Mem_Server ,Min( MDR ,Min( MRS ,MDR ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,CS ) + ( MLU * MUC ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( ( ( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) + Min( CS ,RRSe ) ),( ( MUM - MUR ) / MUR ) ),( ( Min( RMSe ,MLU ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( Min( Const ,FirstVNF_Mem_Server ) / DDR ) ) * ( FirstVNF_Mem * PN ) )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Min( BR ,( FirstVNF_RAM / MDR ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Min( MLU ,( MUC * MLU ) ) - MUC ) - MUC ),( ( RCSe - MUC ) / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ACS * MRS ) + AMS ) / FirstVNF_Mem ) ),BR )", "choosing": "Max( ( Max( MUC,( ( RMSe + ( RCSe - RMSe ) ) - Max( MUM,( RRSe - ( ( DS + CS ) - MUR ) ) ) ) ) + ( RRSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ARS / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ( ARS * ( ARS / Const ) ) ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( ( Max( MLU,( ( RMSe * RCSe ) / RRSe ) ) - Min( MUC ,RCSe ) ) + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ( ( ( BR - FirstVNF_CPU ) - ( AMS - Min( CRS ,BR ) ) ) - FirstVNF_CPU_Server ) + ARS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( Min( PN ,Min( FirstVNF_Mem ,AMS ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RRSe + ( ( ( DS + RMSe ) / RRSe ) - ( RRSe / MUR ) ) ),( MLU + RMSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6063753660969283}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( ( RRSe - MUM ) - RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( FirstVNF_CPU ,PN ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( RRS * PN ) / Min( ( ACS / ( ARS - ( ( CRS + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS + ( Min( Max( MLU,MUR ) ,( Min( Min( ( MLU + RCSe ) ,( RRSe - MLU ) ) ,Min( RMSe ,MUR ) ) * RRSe ) ) + Min( Min( MUC ,RRSe ) ,MUM ) ) ),Max( ( RMSe * RRSe ),MUM ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Min( ( ( Max( PN,Max( MDR,( DDR / FirstVNF_RAM_Server ) ) ) / PN ) + MDR ) ,( Min( ACS ,FirstVNF_Mem_Server ) / DDR ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) / ( MLU * ( MUC * ( RRSe / MUM ) ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_Mem * FirstVNF_RAM ),BR )", "choosing": "Max( ( RCSe + ( ( MUM / ( MUM - RMSe ) ) - Min( DS ,MUC ) ) ),Max( RRSe,MUR ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,( MRS * ( ( AMS + PN ) - ( CRS + FirstVNF_Mem ) ) ) ) * ( DDR + AMS ) ) + ( ( FirstVNF_Mem_Server + Max( BR,AMS ) ) + BR ) ) ) + ( AMS + ( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( DS,MUC ) - ( ( MUC - MUC ) / CS ) ) * ( CS + ( MLU - RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) ) ) ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) + Max( RMSe,DS ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "( ( ( ( MUR + MUC ) * RMSe ) + ( ( RRSe / CS ) + ( ( MUR - RMSe ) + DS ) ) ) + Max( RMSe,DS ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( ( ( FirstVNF_Mem_Server * CRS ) / Const ) - CRS ) + ARS )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( BR,Min( AMS ,AMS ) )", "choosing": "Max( ( ( MLU / MUM ) + ( ( MUR / Min( Min( MUR ,MUR ) ,CS ) ) + ( RRSe / DS ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( MDR + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( ( ( RRSe / MUR ) - Min( DS ,MUC ) ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) )", "choosing": "Max( Max( DS,MLU ),Min( RMSe ,MLU ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( MDR - ( RRS * FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - DS ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR * FirstVNF_RAM ),( MDR / ( DDR - Min( FirstVNF_RAM ,ARS ) ) ) ) )", "choosing": "( ( MUM / DS ) + ( RRSe / RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( AMS * Max( ( FirstVNF_RAM_Server - ( ( Const - ACS ) * ( Max( ( AMS - FirstVNF_CPU ),Max( BR,FirstVNF_Mem_Server ) ) + ( Min( BR ,MDR ) + RRS ) ) ) ),AMS ) )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - ( RRSe / MUR ) ) ),( MLU + RMSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6063753660969283}, {"determining": "( Min( ( ARS + MDR ) ,ARS ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( RRSe + ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ACS / ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ),( ( CRS * FirstVNF_CPU_Server ) / ( ACS - AMS ) ) )", "choosing": "Max( ( ( ( Max( RMSe,MLU ) - ( RRSe - MUC ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RRSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_RAM_Server / Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server - RRS ) ) ,MRS ) ) ) ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) )", "choosing": "Max( ( ( Min( Max( RMSe,RRSe ) ,( MUC - MLU ) ) - MUC ) - MUC ),( RCSe + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Min( BR ,( FirstVNF_RAM / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "Max( ( ( MUR + MUC ) * ( Min( Min( RRSe ,RMSe ) ,CS ) * ( CS + MUM ) ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( Min( Min( ( AMS - PN ) ,FirstVNF_Mem ) ,( MRS - Const ) ) - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "Max( ( ( ( MUR * RCSe ) / MLU ) + ( RRSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "( ( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ACS * MRS ) + AMS ) / FirstVNF_Mem ) ),BR )", "choosing": "Max( ( Max( MUC,( ( RMSe + ( RCSe - RMSe ) ) - Max( MUM,( RRSe - ( ( DS + CS ) - MUR ) ) ) ) ) + ( RRSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ACS * MRS ) + AMS ) / FirstVNF_Mem ) ),BR )", "choosing": "Max( ( Max( MUC,( ( RMSe + ( RCSe - RMSe ) ) - Max( MUM,( RRSe - ( ( DS + CS ) - MUR ) ) ) ) ) + ( RRSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ACS * MRS ) + AMS ) / FirstVNF_Mem ) ),BR )", "choosing": "Max( ( Max( MUC,( ( RMSe + ( RCSe - RMSe ) ) - Max( MUM,( RRSe - ( ( DS + CS ) - MUR ) ) ) ) ) + ( RRSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( ( FirstVNF_RAM - Const ) / ACS ) + Min( MDR ,MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( MUR * CS ),MUR ) + ( RMSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) / ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( ( Const * ( Min( MRS ,ARS ) / ( FirstVNF_Mem_Server - ( CRS / FirstVNF_Mem_Server ) ) ) ) * FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "Max( ( ( ( ( Max( Max( ( CS - RRSe ),MUM ),MUC ) + RMSe ) * ( MUC / MUC ) ) * MUC ) * MUM ),( Max( RRSe,RCSe ) * ( MUR * ( RMSe - Min( DS ,RRSe ) ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( ARS,MDR ) ,Min( MDR ,BR ) ) / Max( ( Min( PN ,( MDR - ( RRS * BR ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + MUM ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( ( ( FirstVNF_Mem_Server * CRS ) / Const ) - ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ) ) + ARS )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / ( MLU * MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / ( Max( Min( MRS ,FirstVNF_RAM_Server ),PN ) + Const ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( ( MUM / CS ) + MUR ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( FirstVNF_RAM * RRS ) / Max( ( ( RRS * PN ) / FirstVNF_RAM ),( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ) ) )", "choosing": "Max( Min( DS ,( MLU + Min( Max( RMSe,( CS + MUR ) ) ,MLU ) ) ),( MUM + MLU ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ( FirstVNF_Mem * ( FirstVNF_CPU_Server * RRS ) ) ) ) * Max( CRS,CRS ) ) )", "choosing": "( ( ( DS - Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) ) * RMSe ) + Max( RMSe,( ( MUC - Min( DS ,( MUM / RCSe ) ) ) * ( MUR / MUR ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( CRS + ACS ) ,FirstVNF_RAM ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ARS ) ) ) ) - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( RCSe + RRSe ),( ( Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) ) * RMSe ) + Max( RMSe,DS ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( ARS,MDR ) ,( DDR / FirstVNF_CPU_Server ) ) / Max( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( ( MRS + FirstVNF_RAM_Server ) * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + RRSe ),( ( ( DS - ( ( DS + RMSe ) / RCSe ) ) * RMSe ) + Max( DS,RMSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,ARS ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( CS,( ( RRSe - ( MUR / ( ( CS * MUC ) - RCSe ) ) ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) / RMSe ) ),( MUC / Min( Max( ( CS / MUR ),MUC ) ,CS ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( MRS - CRS ) + ARS )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( MLU + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( Min( PN ,FirstVNF_CPU ) - ( PN * ARS ) ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "Max( ( ( MUR + MUC ) * ( Min( Min( RRSe ,RMSe ) ,CS ) * ( CS + MUM ) ) ),Max( CS,( ( ( Min( MUM ,Max( MUR,MUM ) ) / ( ( CS * MUC ) - RCSe ) ) - RRSe ) - RMSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( ( Min( MUM ,Max( MUR,MUM ) ) / ( ( CS * MUC ) - RCSe ) ) - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) + MUR ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( ( Const * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) + ( Min( BR ,( FirstVNF_RAM / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / ( ( MUC / Min( MUR ,MUC ) ) * ( MUR * RCSe ) ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / Min( MUR ,MUC ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( AMS - FirstVNF_CPU ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( ARS,MDR ) ,Min( MDR ,BR ) ) / Max( ARS,MDR ) )", "choosing": "Max( ( RCSe + MUM ),Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( MLU + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( MLU + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( Min( MLU ,( MUC - MLU ) ),( MLU + RMSe ) )", "obj1": 0.41605839416058393, "obj2": 0.620272665264971}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) )", "choosing": "Max( ( ( Min( MLU ,( MUC - MLU ) ) - MUC ) - MUC ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( Min( RMSe ,MUC ) + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / Min( ( MUR / ( ( CS - MLU ) - MUR ) ) ,( ( CS - MLU ) - MUR ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( ( Min( MLU ,( MUC - MLU ) ) - MUC ) - MUC ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( FirstVNF_RAM + ARS ) + Max( ( MDR - Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( Max( FirstVNF_Mem,PN ) * ( RRS * PN ) ) ) ),BR ) ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - MUM ) + ( MLU + ( DS + CS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "Max( Max( ( MDR - FirstVNF_RAM ),Max( CRS,FirstVNF_RAM_Server ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( ( MLU / MUM ) + ( RRSe / RRSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( FirstVNF_Mem / FirstVNF_RAM ),( MDR / FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / ( MUR - Max( ( ( ( DS * MLU ) * ( DS * MUC ) ) - MUC ),Max( Min( RRSe ,( MUC - RCSe ) ),MUC ) ) ) ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "( ( MLU / MUM ) + ( RRSe / RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( ( FirstVNF_Mem / Min( CRS ,Const ) ) - FirstVNF_RAM_Server ),BR )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUC ,MUM ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( RRSe,RRSe ) ) / MUR ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( FirstVNF_CPU ,PN ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( RRS * PN ) / Min( ( ACS / ( ARS - ( ( CRS + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS + ( Min( Max( MLU,MUR ) ,( Min( Min( ( MLU + RCSe ) ,( RRSe - MLU ) ) ,Min( RMSe ,MUR ) ) * RRSe ) ) + Min( Min( MUC ,RRSe ) ,MUM ) ) ),Max( ( RMSe * RRSe ),MUM ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MRS ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( ( ACS * ARS ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MLU / MUM ) + ( MUR / RRSe ) ),( MLU + ( ( MLU + ( RMSe * ( ( ( MUC * CS ) / Max( MUR,MUC ) ) / MUR ) ) ) - RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * Max( Min( MUC ,RCSe ),Min( RCSe ,MLU ) ) ) * Min( Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ,( MLU * MUC ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( BR ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6338065494251214}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( BR ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6347955615684701}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( BR ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6338065494251214}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( BR ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6338065494251214}, {"determining": "( ( ( ( FirstVNF_Mem_Server * CRS ) / Const ) - CRS ) + ARS )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) / RMSe ) ),( MUC / Min( Max( ( CS / MUR ),MUC ) ,CS ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( Min( MDR ,BR ) * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ),BR )", "choosing": "Max( ( Max( MUC,MUR ) + ( RRSe / RRSe ) ),( ( ( CS - MLU ) + MLU ) - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Min( MDR ,BR ) * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( ( CS - MLU ) + MLU ) * MUM ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( AMS - FirstVNF_CPU ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "Max( ( Max( MUC,MUR ) + ( RRSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( ( FirstVNF_RAM - Const ) / ACS ) + Min( MDR ,MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( MUR * CS ),MUR ) + ( RMSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( ( FirstVNF_RAM - Const ) / ACS ) + Min( MDR ,MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( MUR * CS ),MUR ) + ( RMSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( ( FirstVNF_RAM - Const ) / ACS ) + Min( MDR ,MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( MUR * CS ),MUR ) + ( RMSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( ( FirstVNF_RAM - Const ) / ACS ) + Min( MDR ,MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( MUR * CS ),MUR ) + ( RMSe / RRSe ) ),( RRSe - RRSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( FirstVNF_CPU ,PN ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( RRS * PN ) / Min( ( ACS / ( ARS - ( ( CRS + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS + ( Min( Max( MLU,MUR ) ,( Min( Min( ( MLU + RCSe ) ,( RRSe - MLU ) ) ,Min( RMSe ,MUR ) ) * RRSe ) ) + Min( Min( MUC ,RRSe ) ,MUM ) ) ),Max( ( RMSe * RRSe ),MUM ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( Max( ARS,MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,( MDR - ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( PN + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( DDR ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( CS,( ( ( Min( MUM ,Max( MUR,MUM ) ) / ( ( CS * MUC ) - RCSe ) ) - RRSe ) - RMSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) + MUR ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( ( ( ( RRSe / MUR ) - Min( DS ,MUC ) ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( FirstVNF_Mem ,AMS ) )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6061733297237625}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + ( ( BR * ( FirstVNF_CPU_Server / MRS ) ) * Const ) ) ) + Max( PN,( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Min( BR ,( ( AMS / BR ) / CRS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( ( ( RMSe * MLU ) / ( MLU * Min( ( RCSe / RRSe ) ,Max( DS,MLU ) ) ) ) ,Min( Max( MUR,CS ) ,RRSe ) ) ) ),( MLU + DS ) )", "obj1": 0.4142335766423358, "obj2": 0.6338065494251214}], "9": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Min( BR ,( FirstVNF_RAM / MDR ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Min( MLU ,( MUC * MLU ) ) - MUC ) - MUC ),( ( RCSe - MUC ) / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,( MRS * ( ( AMS + PN ) - ( CRS + FirstVNF_Mem ) ) ) ) * ( DDR + AMS ) ) + ( ( FirstVNF_Mem_Server + Max( BR,AMS ) ) + BR ) ) ) + ( AMS + ( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( DS,MUC ) - ( ( MUC - MUC ) / CS ) ) * ( CS + ( MLU - RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) ) ) ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) + Max( RMSe,DS ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( ( FirstVNF_RAM + ARS ) + Max( ( MDR - Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( Max( FirstVNF_Mem,PN ) * ( RRS * PN ) ) ) ),BR ) ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - MUM ) + ( MLU + ( DS + CS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( Min( ( ( ( MDR / ACS ) / MDR ) + MDR ) ,( FirstVNF_CPU_Server / MRS ) ) / ( ( ( AMS - FirstVNF_CPU ) * ACS ) / Const ) )", "choosing": "Max( ( ( RRSe * Min( MLU ,RCSe ) ) + ( MUC - ( MUM + RCSe ) ) ),( MLU + RMSe ) )", "obj1": 0.6040145985401459, "obj2": 0.38883947046431333}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( Max( FirstVNF_CPU,AMS ),PN ) ) ) + ( Min( BR ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( MUR ,MUC ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5588719117113212}, {"determining": "( ( ( FirstVNF_CPU * BR ) - PN ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( ( ( ( DS + ( MUR * MUR ) ) / Max( Max( DS,MUC ),Min( DS ,MLU ) ) ) + ( ( Min( RCSe ,MUR ) + ( MUR / RMSe ) ) / MUC ) ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MUR ) ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6712920487010067}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( DDR + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( ( ( ( CS - MLU ) + Max( ( MLU + Min( CS ,RRSe ) ),( ( Min( RMSe ,MUC ) - Max( RRSe,RCSe ) ) / MUR ) ) ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.41605839416058393, "obj2": 0.6150540541994834}, {"determining": "( BR / ( FirstVNF_RAM_Server - ( ACS / ( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUC ,MUM ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( RRSe,RRSe ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Min( ( ( Max( PN,Max( MDR,( DDR / FirstVNF_RAM_Server ) ) ) / PN ) + MDR ) ,( Min( ( FirstVNF_RAM_Server - ( ( ( ACS * MRS ) + AMS ) / FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) / DDR ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( ( DS + CS ) ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) / ( MLU * ( MUC * ( RRSe / MUM ) ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.9908759124087592, "obj2": 0.0110308167855503}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( Min( MDR ,BR ) * ( DDR + AMS ) ) + ( PN - ( MRS - ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ) ) ) ) ),BR )", "choosing": "Max( ( Max( MUC,MUR ) + ( RRSe / RRSe ) ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( ( RRSe - MUM ) - RMSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5761728535317119}, {"determining": "( ( ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( BR ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) * ( Max( CS,( ( RRSe - RRSe ) - RMSe ) ) * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Min( BR ,( FirstVNF_RAM / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Min( MLU ,( MUC - MLU ) ) + Max( RMSe,DS ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6280627282768327}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) * ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( Min( MLU ,( MUC - MLU ) ) - MUC ) - MLU ),( ( Max( MUC,MUC ) - Min( RCSe ,Max( MUR,( DS + MUM ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5791786654766378}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + ( ( ACS / FirstVNF_Mem_Server ) - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Min( BR ,( FirstVNF_RAM / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) + Max( RMSe,DS ) ) / Min( ( RRSe - DS ) ,Min( RCSe ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( ( RMSe * RMSe ) - CS ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( AMS * Max( ( Min( ( ACS - BR ) ,Min( CRS ,FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ),FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( ( Min( MLU ,( MUC - MLU ) ) - MUC ) - MUC ),( ( Max( ( MUC * MUC ),MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( DS + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5791786654766378}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( MDR ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( ( Const * ( PN / ( FirstVNF_Mem_Server - MRS ) ) ) * FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "Max( ( ( ( CS + MLU ) + MLU ) * MUM ),( Max( RRSe,RCSe ) * ( MUR * ( RMSe - MLU ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5895995009968805}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( MDR ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( ( Const * ( PN / ( FirstVNF_Mem_Server - MRS ) ) ) * FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "Max( ( ( ( CS + MLU ) + MLU ) * MUM ),( Max( RRSe,RCSe ) * ( MUR * ( RMSe - MLU ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5895995009968805}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( MDR ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( ( Const * ( PN / ( FirstVNF_Mem_Server - MRS ) ) ) * FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "Max( ( ( MLU / ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.42883211678832117, "obj2": 0.5895995009968805}, {"determining": "( Min( ( CRS + ACS ) ,FirstVNF_RAM ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ARS ) ) ) ) - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU / MUM ) + ( ( RRSe / RRSe ) / RRSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( ( FirstVNF_CPU / DDR ) + ( MDR / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Max( Max( DS,RRSe ),CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Max( MUC,MUC ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / ( MLU - MUR ) ) ) * ( RCSe * MUR ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5712469228425067}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( ( MLU / MUM ) + ( RRSe / RRSe ) ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) ) ) ) )", "choosing": "( ( ( ( Max( CS,MUM ) + RCSe ) + Max( RMSe,DS ) ) / Min( ( RRSe - DS ) ,Min( MLU ,RCSe ) ) ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * ( FirstVNF_RAM_Server / CRS ) ) ) ) )", "choosing": "( MUR - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / Const ) - ( ( MRS / ( ( BR * BR ) * Min( ACS ,ARS ) ) ) / Const ) )", "choosing": "( ( MUM + RCSe ) - Max( MUC,( DS * Max( RMSe,( ( RMSe / RRSe ) + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ARS ) + ( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + ( ( BR * BR ) * Const ) ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( BR ,( ( AMS / BR ) / FirstVNF_Mem ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) ) )", "choosing": "( ( MUM / ( ( ( MUM - RCSe ) / MUR ) - Min( ( ( RMSe * MLU ) / ( MLU * Min( ( RCSe / RRSe ) ,Max( DS,MLU ) ) ) ) ,MUC ) ) ) + ( RRSe / RRSe ) )", "obj1": 0.4470802919708029, "obj2": 0.5550814546132404}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) + ( Min( BR ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( ( MUR + DS ) + MUM ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.07351810591100535}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / PN ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( RCSe + MUR ),( Max( ( ( MUR + DS ) + MUM ),RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( Min( FirstVNF_RAM ,( CRS + FirstVNF_CPU_Server ) ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( RCSe ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( MUM - RCSe ) )", "obj1": 0.4416058394160584, "obj2": 0.567813983641946}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( CRS - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( CS / Min( MUM ,( RCSe / ( DS - RRSe ) ) ) ) ) + RMSe ) )", "obj1": 0.41788321167883213, "obj2": 0.6137816917358349}, {"determining": "( Min( Min( ( ( ARS - ( ( FirstVNF_Mem_Server + CRS ) / AMS ) ) / ACS ) ,FirstVNF_RAM ) ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( ACS - ACS ) * ( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) ) ) ) )", "choosing": "( ( Min( Min( RCSe ,( DS + RMSe ) ) ,RRSe ) * MUM ) + ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( FirstVNF_CPU ,PN ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( RRS * PN ) / Min( ( ACS / ( ARS - ( ( CRS + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS + ( Min( Max( MLU,MUR ) ,( Min( Min( ( MLU + RCSe ) ,( RRSe - MLU ) ) ,Min( RMSe ,MUR ) ) * RRSe ) ) + Min( Min( MUC ,RRSe ) ,MUM ) ) ),Max( ( RMSe * RRSe ),MUM ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( ( FirstVNF_RAM * ARS ) + ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ) )", "choosing": "( ( MUM / DS ) + Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.4835766423357664, "obj2": 0.5282321451127652}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR - Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR ) ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe / MUR ) - Min( DS ,MUC ) ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Max( ( MDR * FirstVNF_RAM ),( MDR / ( DDR - ( ( FirstVNF_CPU * CRS ) + ( PN - ( MRS - AMS ) ) ) ) ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( MUM / ( MUR * ( RRSe + MUM ) ) ) + ( RRSe / RRSe ) )", "obj1": 0.4489051094890511, "obj2": 0.5363761009178503}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( DDR - PN ),( MDR / FirstVNF_RAM ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( ( ( RRSe * Max( Max( MUR,MUC ),( Max( CS,MUM ) + Min( MUM ,DS ) ) ) ) / CS ) - Max( MUC,MUC ) ) * ( MUR * RCSe ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( ( FirstVNF_Mem / Min( CRS ,Const ) ) - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.5346715328467153, "obj2": 0.4304127622926454}, {"determining": "( ( ( ARS + MDR ) - ( FirstVNF_CPU_Server / DDR ) ) / Max( ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ),( ( RRS * PN ) / Min( ( AMS - ( Const * PN ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( MLU / MUM ) + Max( ( ( ( ( DS - RMSe ) - MUM ) + DS ) - ( Min( ( Max( MLU,MUR ) / Max( MUM,MUR ) ) ,RCSe ) * MUC ) ),Min( ( MUR * ( ( RCSe + Max( RRSe,MUC ) ) + Max( RRSe,MUC ) ) ) ,RMSe ) ) ),( MLU + RMSe ) )", "obj1": 0.42883211678832117, "obj2": 0.5895995009968805}, {"determining": "( Min( Max( FirstVNF_Mem_Server,( DDR - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Min( ( ( Max( PN,Max( MDR,( DDR / FirstVNF_RAM_Server ) ) ) / Max( BR,( FirstVNF_RAM_Server - ( ( MDR * Const ) - ( CRS - ARS ) ) ) ) ) + ( Max( FirstVNF_CPU_Server,ACS ) * MRS ) ) ,( Min( ACS ,FirstVNF_Mem_Server ) / DDR ) ) )", "choosing": "Max( ( ( DS * ( RMSe / RRSe ) ) / ( MUC - Min( DS ,( MUM / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) / ( MLU * ( MUC * ( Max( MUM,MUC ) * MUM ) ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6137816917358349}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "( ( Max( CS,( ( RRSe - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( ( FirstVNF_Mem / Min( CRS ,Const ) ) - Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR ) ),BR )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUC ,MLU ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.5346715328467153, "obj2": 0.4304127622926454}, {"determining": "( ( Max( FirstVNF_CPU,Max( RRS,MDR ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( RRS - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),Min( DS ,Min( CS ,RCSe ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ACS / ( ( FirstVNF_RAM_Server / CRS ) - FirstVNF_Mem ) ) ) ),( ( FirstVNF_Mem_Server * CRS ) / Const ) )", "choosing": "Max( ( ( Min( ( Max( MUM,MLU ) / RCSe ) ,( MUC + ( ( MLU / MUM ) + ( RRSe / RRSe ) ) ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - ( RRSe / ( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6422054084724704}, {"determining": "( ( Const / MDR ) - ( FirstVNF_Mem_Server * ( MRS + ( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS - MUM ) - ( ( MLU * RRSe ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / Min( MUR ,MUC ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5791786654766378}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( ARS / PN ) ,ARS ) + Min( MRS ,FirstVNF_RAM ) ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( RCSe + MUR ),( Max( ( MUM * ( DS / RRSe ) ),RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.49635036496350365, "obj2": 0.48549910668235546}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Max( PN,BR ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ARS ) )", "choosing": "Max( ( Max( RMSe,RRSe ) - RMSe ),( MLU * Max( ( MUM + DS ),DS ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}], "10": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ARS ) + Max( ( MDR - Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( Max( FirstVNF_Mem,PN ) * ( RRS * PN ) ) ) ),BR ) ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - MUM ) + ( MLU + ( DS + CS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Min( ( ( ( MDR / ACS ) / MDR ) + MDR ) ,( FirstVNF_CPU_Server / MRS ) ) / ( ( ( AMS - FirstVNF_CPU ) * ACS ) / Const ) )", "choosing": "Max( ( ( RRSe * Min( MLU ,RCSe ) ) + ( MUC - ( MUM + RCSe ) ) ),( MLU + RMSe ) )", "obj1": 0.6040145985401459, "obj2": 0.38883947046431333}, {"determining": "( ( ( FirstVNF_CPU * BR ) - PN ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( ( ( ( DS + ( MUR * MUR ) ) / Max( Max( DS,MUC ),Min( DS ,MLU ) ) ) + ( ( Min( RCSe ,MUR ) + ( MUR / RMSe ) ) / MUC ) ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MUR ) ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6712920487010067}, {"determining": "( Min( ( CRS + ACS ) ,FirstVNF_RAM ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ARS ) ) ) ) - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU / MUM ) + ( ( RRSe / RRSe ) / RRSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) + ( Min( BR ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( ( MUR + DS ) + MUM ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.07351810591100535}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / PN ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( RCSe + MUR ),( Max( ( ( MUR + DS ) + MUM ),RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR - Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR ) ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe / MUR ) - Min( DS ,MUC ) ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Max( ( MDR * FirstVNF_RAM ),( MDR / ( DDR - ( ( FirstVNF_CPU * CRS ) + ( PN - ( MRS - AMS ) ) ) ) ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( MUM / ( MUR * ( RRSe + MUM ) ) ) + ( RRSe / RRSe ) )", "obj1": 0.4489051094890511, "obj2": 0.5363761009178503}, {"determining": "Max( ( ( FirstVNF_Mem / Min( CRS ,Const ) ) - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.5346715328467153, "obj2": 0.4304127622926454}, {"determining": "Max( ( ( FirstVNF_Mem / Min( CRS ,Const ) ) - Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR ) ),BR )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUC ,MLU ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.5346715328467153, "obj2": 0.4304127622926454}, {"determining": "( ( Max( FirstVNF_CPU,Max( RRS,MDR ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( RRS - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),Min( DS ,Min( CS ,RCSe ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ACS / ( ( FirstVNF_RAM_Server / CRS ) - FirstVNF_Mem ) ) ) ),( ( FirstVNF_Mem_Server * CRS ) / Const ) )", "choosing": "Max( ( ( Min( ( Max( MUM,MLU ) / RCSe ) ,( MUC + ( ( MLU / MUM ) + ( RRSe / RRSe ) ) ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Max( PN,BR ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ARS ) )", "choosing": "Max( ( Max( RMSe,RRSe ) - RMSe ),( MLU * Max( ( MUM + DS ),DS ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR * FirstVNF_RAM ),( MDR / ( DDR - Const ) ) ) )", "choosing": "( ( Max( CS,( ( Max( ( MUM + MLU ),( MUR + MUM ) ) - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.44343065693430656, "obj2": 0.5598826899824086}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR * FirstVNF_RAM ),( MDR / ( DDR - Min( FirstVNF_RAM ,ARS ) ) ) ) )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUC ,MLU ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,( ( ( ( RRSe + DS ) - ( MUR / DS ) ) - Max( ( DS * RCSe ),( RMSe / RRSe ) ) ) - ( Max( ( MUM + MLU ),( MUR + MUM ) ) / ( Min( MUC ,RRSe ) - ( RCSe * RMSe ) ) ) ) ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.5346715328467153, "obj2": 0.4304127622926454}, {"determining": "( Min( ( MDR + ACS ) ,FirstVNF_RAM ) + Max( ( ( CRS + ARS ) / FirstVNF_RAM ),( MDR / DDR ) ) )", "choosing": "Max( ( ( Max( RCSe,MUR ) + RMSe ) + Max( MUM,CS ) ),( MLU / RMSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / ( ( ( AMS - FirstVNF_CPU ) * ACS ) / Const ) )", "choosing": "( ( MLU / MUM ) + ( ( RRSe / RRSe ) / RRSe ) )", "obj1": 0.6040145985401459, "obj2": 0.38883947046431333}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( ( FirstVNF_Mem_Server + Max( BR,AMS ) ),AMS ),( ( Const * ( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( ( RMSe + MUC ) + ( MLU + MUC ) ) ),RMSe ) ) ,MUM ),Min( MUM ,( ( ( MUC - MUC ) * RMSe ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.47827237565358993}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( DDR + AMS ) ) + ( ( FirstVNF_Mem_Server + Max( BR,AMS ) ) + BR ) ) ) + ( AMS + ( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( DS,MUC ) - ( ( MUC - MUC ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "Max( ( ( FirstVNF_Mem / Min( CRS ,Const ) ) - ( ( DDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) + Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.5273722627737226, "obj2": 0.4464734510865024}, {"determining": "Max( ( ( FirstVNF_Mem / Min( CRS ,Const ) ) - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.5346715328467153, "obj2": 0.4304127622926454}, {"determining": "( ( MDR / Const ) - ( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MLU / MUM ) + ( RRSe / RRSe ) ) - RCSe ) - Max( MUC,RRSe ) )", "obj1": 0.635036496350365, "obj2": 0.3678908767478113}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ) - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),RMSe ) ) ,MUM ),Min( MUM ,( ( RRSe * RMSe ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * Max( ( ( FirstVNF_CPU / ARS ) / ( MRS - FirstVNF_RAM_Server ) ),AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( ( CS + Min( MUM ,( Min( ( RMSe + Max( MUC,MLU ) ) ,Min( MUC ,RMSe ) ) / ( CS * ( CS + RCSe ) ) ) ) ) + Max( RRSe,RRSe ) ),( MLU + ( ( ( RRSe + MUM ) + MUC ) / ( RMSe / RMSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR - Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR ) ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( ( RMSe + MUC ) + ( MLU + MUC ) ) ),RMSe ) ) ,MUM ),Min( MUM ,( ( RRSe * RMSe ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( CRS - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( CS / Min( MUM ,( RCSe / ( DS - RRSe ) ) ) ) ) + RMSe ) )", "obj1": 0.5164233576642335, "obj2": 0.4510742982165909}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( CRS - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( CS / Min( MUM ,( RCSe / ( DS - RRSe ) ) ) ) ) + RMSe ) )", "obj1": 0.5164233576642335, "obj2": 0.4510742982165909}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( CRS - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( CS / Min( MUM ,( RCSe / ( DS - RRSe ) ) ) ) ) + RMSe ) )", "obj1": 0.5164233576642335, "obj2": 0.4510742982165909}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( CRS - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( CS / Min( MUM ,( RCSe / ( DS - RRSe ) ) ) ) ) + RMSe ) )", "obj1": 0.5164233576642335, "obj2": 0.4510742982165909}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_Mem_Server ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Max( MUC,MUC ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5537252853115469}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( BR + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( Max( MUC,MUC ) - ( RCSe + ( RMSe - MUC ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6524302264573414}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6712920487010067}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) + ( Min( BR ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.9324817518248175, "obj2": 0.07351810591100535}, {"determining": "Max( ( ( FirstVNF_Mem / Max( PN,PN ) ) - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( DS,DS ) ) / DS ) )", "obj1": 0.5346715328467153, "obj2": 0.4304127622926454}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) - RMSe ) ),( MUM - RCSe ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( Min( MDR ,BR ) * ( Min( BR ,MDR ) + AMS ) ) + ( PN - ( MRS - ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ) ) ) ) ),BR )", "choosing": "Max( ( Max( MUC,MUR ) + ( RRSe / RRSe ) ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( ( ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) - MUM ) - RMSe ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4710166271964324}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( ( PN - ( MRS - ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ) ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( Max( MUC,RMSe ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6712920487010067}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6712920487010067}, {"determining": "( Max( ( MDR - Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU - PN ) ),BR ) ),Max( CRS,FirstVNF_RAM ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "Max( Max( CS,( ( RRSe - Min( Min( MUM ,Min( RMSe ,( RMSe / RRSe ) ) ) ,MUC ) ) / ( RCSe * MUR ) ) ),( MUC / Min( Max( ( CS / MUR ),MUC ) ,CS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( FirstVNF_RAM_Server / MRS ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),Min( ( Max( MUM,MLU ) / RCSe ) ,( MUC + ( ( MLU / MUM ) + ( RRSe / RRSe ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * Max( DDR,Const ) ) + ( MRS - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( DS ,Min( RMSe ,CS ) ) / ( MUR * RRSe ) ) / MLU ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ACS / ( ( FirstVNF_RAM_Server / CRS ) - FirstVNF_Mem ) ) ) ),( ( FirstVNF_Mem_Server * CRS ) / Const ) )", "choosing": "Max( ( ( Min( ( Max( MUM,MLU ) / RCSe ) ,( MUC + ( ( MLU / MUM ) + ( RRSe / RRSe ) ) ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( MDR / Const ) - ( ( MRS / ( ( BR * BR ) * Min( ACS ,ARS ) ) ) / Const ) )", "choosing": "( ( MUM + RCSe ) - Max( MUC,( DS * Max( RMSe,( ( RMSe / RRSe ) + CS ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( MDR / Const ) - ( ( MRS / ( ( BR * BR ) * Min( ACS ,ARS ) ) ) / Const ) )", "choosing": "( ( MUM + RCSe ) - Max( MUC,( DS * Max( RMSe,( ( RMSe / RRSe ) + CS ) ) ) ) )", "obj1": 0.9981751824817519, "obj2": 0.0006882219522338628}, {"determining": "( ( AMS * AMS ) + Max( Min( MDR ,FirstVNF_RAM ),( MDR / ( DDR - ( ( Const * ( DDR + AMS ) ) + Min( ( MDR * FirstVNF_Mem ) ,PN ) ) ) ) ) )", "choosing": "( ( MUM / ( ( Min( RMSe ,( MUR - ( ( RMSe + RRSe ) + CS ) ) ) - MUR ) - RMSe ) ) + ( MLU / RRSe ) )", "obj1": 0.4489051094890511, "obj2": 0.5363761009178503}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,( ( ACS / ( ARS - ( ( CRS + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) - FirstVNF_RAM ) ) ,( MDR * FirstVNF_RAM_Server ) ) + Min( ( ( Max( PN,Max( MDR,( DDR / FirstVNF_RAM_Server ) ) ) / PN ) + MDR ) ,( Min( ACS ,FirstVNF_Mem_Server ) / DDR ) ) )", "choosing": "Max( ( ( DS * RRSe ) / ( MUC - Min( DS ,( RRSe / RCSe ) ) ) ),( Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) / ( MLU * ( MUC * ( RRSe / MUM ) ) ) ),MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.6204379562043796, "obj2": 0.384434156319517}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( ( ( RMSe * MLU ) / ( MLU * Min( ( RCSe / RRSe ) ,Max( DS,MLU ) ) ) ) ,MUC ) ) ),( MLU + RMSe ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Max( PN,BR ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ARS ) )", "choosing": "Max( ( Max( RMSe,RRSe ) - RMSe ),( MLU * Max( ( MUM + DS ),DS ) ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Max( PN,BR ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ARS ) )", "choosing": "Max( ( Max( RMSe,RRSe ) - RMSe ),( MLU * Max( ( MUM + DS ),DS ) ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Max( PN,BR ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ARS ) )", "choosing": "Max( ( Max( RMSe,RRSe ) - RMSe ),( MLU * Max( ( MUM + DS ),DS ) ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / MRS ) ,( Min( CRS ,FirstVNF_RAM_Server ) + Const ) ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( MUR - RCSe ) ),RMSe ) ) ,MUM ),Min( MUM ,( ( RRSe * MUR ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( ( MDR / Const ) - ( ( MRS / ( ( BR * BR ) * Min( ACS ,ARS ) ) ) / ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUM + RCSe ) - Max( MUC,( DS * Max( RMSe,( ( RMSe / MUM ) + CS ) ) ) ) )", "obj1": 0.9872262773722628, "obj2": 0.008056588851195538}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - MUC ) * ( MUR * RCSe ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5220929632654455}, {"determining": "( ( Max( ( Max( FirstVNF_CPU,ACS ) / ( MRS * FirstVNF_CPU ) ),AMS ) + ( ( ( AMS + DDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) + ( ( MRS - FirstVNF_Mem_Server ) - PN ) ) ) + ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "Max( ( MLU - MUM ),( ( ( ( RMSe / RCSe ) + MUM ) + MUR ) * ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe - CS ) ) ) / Min( ( ( ( RRSe * CS ) / MUC ) * ( ( MLU * RCSe ) + RCSe ) ) ,( MUM / RCSe ) ) ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( Min( Max( Min( CRS ,Const ),BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / Min( MUR ,MLU ) ),RMSe ) ) ,MUM ),Min( MUM ,( ( RRSe * RMSe ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "Max( ( ( FirstVNF_Mem / Min( CRS ,Const ) ) - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( ( RMSe + MUC ) + ( MLU + MUC ) ) ),RMSe ) ) ,MUM ),Min( MUM ,( ( RRSe * RMSe ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5346715328467153, "obj2": 0.4304127622926454}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - FirstVNF_CPU ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) / ( ACS * Min( ACS ,FirstVNF_RAM_Server ) ) ),( AMS + DDR ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( Max( MUC,MUC ) - ( Min( RRSe ,( CS - MUM ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6524302264573414}, {"determining": "( ( MDR / Const ) - ( MDR / ( Min( ( DDR + ( ( FirstVNF_CPU - Max( FirstVNF_CPU,AMS ) ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) / ( ACS * Min( ACS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS - MUC ) - Max( MUC,( DS * CS ) ) )", "obj1": 0.8412408759124088, "obj2": 0.12570316799055042}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( ( CS - MUM ) - Max( MUC,( DS * CS ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6712920487010067}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) * Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR ) ) ) + ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( Min( MLU ,( MUC - MLU ) ) - MUC ) - MLU ),( ( Max( MUC,MUC ) - Min( RCSe ,Max( MUR,( ( RRSe / MUR ) + MUM ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6128313965259012}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_Mem_Server ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Max( MUC,MUC ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5537252853115469}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( CRS - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.5164233576642335, "obj2": 0.4510742982165909}, {"determining": "( Max( Max( FirstVNF_CPU,CRS ),Max( ( Min( CRS ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( ( Const * ( Min( MRS ,ARS ) / ( FirstVNF_Mem_Server - MRS ) ) ) * FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "Max( ( RCSe + MUR ),( Max( ( ( MUR + RMSe ) + MUM ),RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5857664233576643, "obj2": 0.42351710406238524}, {"determining": "Max( ( FirstVNF_RAM_Server - ( Min( RRS ,MDR ) - ( ( FirstVNF_RAM_Server / CRS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + ( MUM / ( MUC - ( ( MUC + Max( Max( DS,MUR ),MUR ) ) * Max( CS,( CS + CS ) ) ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) ) ) ) )", "choosing": "( ( MLU / MUM ) + ( ( RRSe / RRSe ) / RRSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MLU ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,( MRS * ( ( AMS + PN ) - ( CRS + FirstVNF_Mem ) ) ) ) * ( DDR + AMS ) ) + ( ( FirstVNF_Mem_Server + Max( BR,AMS ) ) + BR ) ) ) + ( AMS + ( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,BR ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,MUR ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( ( FirstVNF_RAM - Const ) / ACS ) + ( MDR + MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( Max( DDR,MDR ) * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( MUR * CS ),MUR ) + ( RMSe / RRSe ) ),Min( ( RCSe * DS ) ,DS ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( ( FirstVNF_Mem / Min( CRS ,Const ) ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( MUR - RCSe ) ),RMSe ) ) ,( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) + MLU ) ),Min( MUM ,( ( RRSe * MUR ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.47992700729927007, "obj2": 0.5195044519478463}, {"determining": "Max( ( ( FirstVNF_Mem / Min( CRS ,Const ) ) - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.5346715328467153, "obj2": 0.4304127622926454}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / MRS ) ,( Min( CRS ,FirstVNF_RAM_Server ) + Const ) ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( MUR - RCSe ) ),RMSe ) ) ,MUM ),Min( MUM ,( ( RRSe * MUR ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5109489051094891, "obj2": 0.4607226142029283}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / Min( PN ,( MDR - ( Const * FirstVNF_CPU ) ) ) ) ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) )", "choosing": "Max( Max( DS,( ( ( MUM - RCSe ) / MUR ) - Min( DS ,MUC ) ) ),RRSe )", "obj1": 0.8704379562043796, "obj2": 0.11781346211627329}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( ( Const * ( Min( MRS ,ARS ) / ( FirstVNF_Mem_Server - MRS ) ) ) * FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "Max( ( RCSe + MUR ),( Max( ( ( MUR + DS ) + MUM ),RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( Max( ARS,MDR ) ,Min( MDR ,BR ) ) / Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RCSe + MUM ),Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( Max( ( MUR + RMSe ),RCSe ) + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) )", "obj1": 0.46715328467153283, "obj2": 0.5243635551091717}, {"determining": "( Min( Max( ARS,MDR ) ,Min( MDR ,BR ) ) / ( FirstVNF_RAM * ARS ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( CS / Min( MUM ,( RCSe / ( DS - RRSe ) ) ) ) ) + RMSe ) )", "obj1": 0.5164233576642335, "obj2": 0.4510742982165909}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MUC + ( ( MLU / ( ( MUC * ( Max( MUM,MLU ) + ( RMSe + MUM ) ) ) * RMSe ) ) + Min( ( ( Min( ( CS - RMSe ) ,MLU ) + ( Max( MUM,MUR ) * MUC ) ) - ( ( ( RCSe * RCSe ) + MUC ) * ( Max( MUC,DS ) / ( MUC - RMSe ) ) ) ) ,DS ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ACS / ( ( FirstVNF_RAM_Server / CRS ) - FirstVNF_Mem ) ) ) ),( ( FirstVNF_Mem_Server * CRS ) / Const ) )", "choosing": "Max( ( ( Min( ( Max( MUM,MLU ) / RCSe ) ,( MUC + ( ( MLU / MUM ) + ( RRSe / RRSe ) ) ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * FirstVNF_Mem ) / ( Const * FirstVNF_CPU_Server ) ) + ( ARS - ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Max( Max( RRSe,RRSe ),CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Min( Max( MUC,MUR ) ,( RMSe * RRSe ) ) - ( ( MLU * MUR ) / ( RMSe * Min( ( RCSe + CS ) ,Max( MUC,MUR ) ) ) ) ) * ( RCSe * MUR ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5650252999100714}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( CRS - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUR + ( ( ( MUM - RCSe ) / MUR ) - Min( ( ( RMSe * MLU ) / ( MLU * Min( ( RCSe / RRSe ) ,Max( DS,MLU ) ) ) ) ,Min( Max( MUR,CS ) ,RRSe ) ) ) ),( MLU + DS ) )", "obj1": 0.5164233576642335, "obj2": 0.4510742982165909}, {"determining": "( Max( ( MRS - FirstVNF_Mem_Server ),PN ) / Max( ( Min( FirstVNF_CPU ,PN ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( RRS * PN ) / Min( ( ACS / ( ARS - ( ( CRS + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS + ( Min( Max( MLU,MUR ) ,( Min( MUM ,Min( RMSe ,MUR ) ) * RRSe ) ) + Min( Min( MUC ,RRSe ) ,MUM ) ) ),Max( ( RMSe * RRSe ),MUM ) )", "obj1": 0.4032846715328467, "obj2": 0.6458725368744265}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( ( Const * ( Min( MRS ,ARS ) / FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "Max( ( ( ( MUM - RCSe ) / MUR ) + MUR ),( Max( ( ( MUR + DS ) + MUM ),RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5200729927007299, "obj2": 0.44793283947738777}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( ( Const * ( Min( MRS ,ARS ) / ( FirstVNF_Mem_Server - MRS ) ) ) * FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "Max( ( RCSe + MUR ),( Max( ( ( MUR + DS ) + MUM ),RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( Const / MDR ) - ( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + ( Min( BR ,( FirstVNF_RAM / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) ) )", "choosing": "( ( CS - MUM ) - ( ( MLU * ( ( Min( MUM ,MUM ) * Max( RCSe,RCSe ) ) + Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) ) / RMSe ) )", "obj1": 0.5693430656934306, "obj2": 0.42490892978551875}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - ( RRSe / ( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4501793921185656}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - ( RRSe / ( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4501793921185656}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - ( RRSe / ( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4501793921185656}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - ( RRSe / ( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.5182481751824818, "obj2": 0.4501793921185656}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( Max( PN,BR ) ,( FirstVNF_RAM_Server + MDR ) ) + Max( Max( FirstVNF_CPU,( Min( ( DDR / PN ) ,FirstVNF_CPU_Server ) + AMS ) ),( ( Max( DDR,Const ) * Const ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MLU + RMSe ),Max( Min( ( RRSe - Max( ( MLU / ( ( RMSe + MUC ) + ( RCSe + MUR ) ) ),RMSe ) ) ,MUM ),Min( MUM ,( ( MUC * RMSe ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / PN ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( ( RMSe + MUC ) + ( MLU + MUC ) ) ),RMSe ) ) ,MUM ),Min( MUM ,( ( RRSe * RMSe ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( RCSe + MUR ),( Max( ( ( MUR + DS ) + MUM ),RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}], "11": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + ARS ) + Max( ( MDR - Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( Max( FirstVNF_Mem,PN ) * ( RRS * PN ) ) ) ),BR ) ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU - MUM ) + ( MLU + ( DS + CS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Min( ( CRS + ACS ) ,FirstVNF_RAM ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ARS ) ) ) ) - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU / MUM ) + ( ( RRSe / RRSe ) / RRSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / PN ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( RCSe + MUR ),( Max( ( ( MUR + DS ) + MUM ),RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR - Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR ) ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe / MUR ) - Min( DS ,MUC ) ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Max( ( MDR * FirstVNF_RAM ),( MDR / ( DDR - ( ( FirstVNF_CPU * CRS ) + ( PN - ( MRS - AMS ) ) ) ) ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( MUM / ( MUR * ( RRSe + MUM ) ) ) + ( RRSe / RRSe ) )", "obj1": 0.4489051094890511, "obj2": 0.5363761009178503}, {"determining": "( ( Max( FirstVNF_CPU,Max( RRS,MDR ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( RRS - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),Min( DS ,Min( CS ,RCSe ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ACS / ( ( FirstVNF_RAM_Server / CRS ) - FirstVNF_Mem ) ) ) ),( ( FirstVNF_Mem_Server * CRS ) / Const ) )", "choosing": "Max( ( ( Min( ( Max( MUM,MLU ) / RCSe ) ,( MUC + ( ( MLU / MUM ) + ( RRSe / RRSe ) ) ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Max( PN,BR ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ARS ) )", "choosing": "Max( ( Max( RMSe,RRSe ) - RMSe ),( MLU * Max( ( MUM + DS ),DS ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( ( MDR + ACS ) ,FirstVNF_RAM ) + Max( ( ( CRS + ARS ) / FirstVNF_RAM ),( MDR / DDR ) ) )", "choosing": "Max( ( ( Max( RCSe,MUR ) + RMSe ) + Max( MUM,CS ) ),( MLU / RMSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( DDR + AMS ) ) + ( ( FirstVNF_Mem_Server + Max( BR,AMS ) ) + BR ) ) ) + ( AMS + ( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( DS,MUC ) - ( ( MUC - MUC ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ) - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),RMSe ) ) ,MUM ),Min( MUM ,( ( RRSe * RMSe ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * Max( ( ( FirstVNF_CPU / ARS ) / ( MRS - FirstVNF_RAM_Server ) ),AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( ( CS + Min( MUM ,( Min( ( RMSe + Max( MUC,MLU ) ) ,Min( MUC ,RMSe ) ) / ( CS * ( CS + RCSe ) ) ) ) ) + Max( RRSe,RRSe ) ),( MLU + ( ( ( RRSe + MUM ) + MUC ) / ( RMSe / RMSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_Mem_Server ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Max( MUC,MUC ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5537252853115469}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( BR + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( Max( MUC,MUC ) - ( RCSe + ( RMSe - MUC ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6524302264573414}, {"determining": "( Max( ( MDR - Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU - PN ) ),BR ) ),Max( CRS,FirstVNF_RAM ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "Max( Max( CS,( ( RRSe - Min( Min( MUM ,Min( RMSe ,( RMSe / RRSe ) ) ) ,MUC ) ) / ( RCSe * MUR ) ) ),( MUC / Min( Max( ( CS / MUR ),MUC ) ,CS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( ( AMS * AMS ) + Max( Min( MDR ,FirstVNF_RAM ),( MDR / ( DDR - ( ( Const * ( DDR + AMS ) ) + Min( ( MDR * FirstVNF_Mem ) ,PN ) ) ) ) ) )", "choosing": "( ( MUM / ( ( Min( RMSe ,( MUR - ( ( RMSe + RRSe ) + CS ) ) ) - MUR ) - RMSe ) ) + ( MLU / RRSe ) )", "obj1": 0.4489051094890511, "obj2": 0.5363761009178503}, {"determining": "( ( Max( ( Max( FirstVNF_CPU,ACS ) / ( MRS * FirstVNF_CPU ) ),AMS ) + ( ( ( AMS + DDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) + ( ( MRS - FirstVNF_Mem_Server ) - PN ) ) ) + ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "Max( ( MLU - MUM ),( ( ( ( RMSe / RCSe ) + MUM ) + MUR ) * ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe - CS ) ) ) / Min( ( ( ( RRSe * CS ) / MUC ) * ( ( MLU * RCSe ) + RCSe ) ) ,( MUM / RCSe ) ) ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - FirstVNF_CPU ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) / ( ACS * Min( ACS ,FirstVNF_RAM_Server ) ) ),( AMS + DDR ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( Max( MUC,MUC ) - ( Min( RRSe ,( CS - MUM ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6524302264573414}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) * Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR ) ) ) + ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( Min( MLU ,( MUC - MLU ) ) - MUC ) - MLU ),( ( Max( MUC,MUC ) - Min( RCSe ,Max( MUR,( ( RRSe / MUR ) + MUM ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6128313965259012}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_Mem_Server ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Max( MUC,MUC ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5537252853115469}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) ) ) ) )", "choosing": "( ( MLU / MUM ) + ( ( RRSe / RRSe ) / RRSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MLU ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,( MRS * ( ( AMS + PN ) - ( CRS + FirstVNF_Mem ) ) ) ) * ( DDR + AMS ) ) + ( ( FirstVNF_Mem_Server + Max( BR,AMS ) ) + BR ) ) ) + ( AMS + ( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,BR ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,MUR ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( ( FirstVNF_RAM - Const ) / ACS ) + ( MDR + MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( Max( DDR,MDR ) * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( MUR * CS ),MUR ) + ( RMSe / RRSe ) ),Min( ( RCSe * DS ) ,DS ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( Min( Max( ARS,MDR ) ,Min( MDR ,BR ) ) / Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RCSe + MUM ),Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( Max( ( MUR + RMSe ),RCSe ) + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) )", "obj1": 0.46715328467153283, "obj2": 0.5243635551091717}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MUC + ( ( MLU / ( ( MUC * ( Max( MUM,MLU ) + ( RMSe + MUM ) ) ) * RMSe ) ) + Min( ( ( Min( ( CS - RMSe ) ,MLU ) + ( Max( MUM,MUR ) * MUC ) ) - ( ( ( RCSe * RCSe ) + MUC ) * ( Max( MUC,DS ) / ( MUC - RMSe ) ) ) ) ,DS ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( ( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) * FirstVNF_Mem ) / ( Const * FirstVNF_CPU_Server ) ) + ( ARS - ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Max( Max( RRSe,RRSe ),CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Min( Max( MUC,MUR ) ,( RMSe * RRSe ) ) - ( ( MLU * MUR ) / ( RMSe * Min( ( RCSe + CS ) ,Max( MUC,MUR ) ) ) ) ) * ( RCSe * MUR ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5650252999100714}, {"determining": "( Max( ( MRS - FirstVNF_Mem_Server ),PN ) / Max( ( Min( FirstVNF_CPU ,PN ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( RRS * PN ) / Min( ( ACS / ( ARS - ( ( CRS + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( DS + ( Min( Max( MLU,MUR ) ,( Min( MUM ,Min( RMSe ,MUR ) ) * RRSe ) ) + Min( Min( MUC ,RRSe ) ,MUM ) ) ),Max( ( RMSe * RRSe ),MUM ) )", "obj1": 0.4032846715328467, "obj2": 0.6458725368744265}, {"determining": "( ( Max( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / Min( PN ,( MDR - ( Const * FirstVNF_CPU ) ) ) ) ),AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( RRSe,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5817050965982519}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR - Max( ( Max( PN,BR ) - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR ) ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( CS,( ( ( RRSe * MUR ) + Max( MLU,DS ) ) / RMSe ) ),( MUC / Min( Max( ( CS / MUR ),MUC ) ,CS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / MRS ) ,( Min( CRS ,FirstVNF_RAM_Server ) + Const ) ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( Max( CS,( ( RRSe - RRSe ) / RMSe ) ),( MUC / Min( Max( ( CS / MUR ),MUC ) ,CS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( ARS + ( ( FirstVNF_CPU_Server / Const ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Max( Max( DS,MUR ),CS ),CS ),( ( Max( MUR,MUM ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Min( Max( MUR,MUC ) ,( RCSe + CS ) ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,Min( Min( RMSe ,RMSe ) ,Max( RCSe,RCSe ) ) ) ) / ( MLU - MUR ) ) ) * ( RCSe * MUR ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5677802542143753}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / ( MLU - MUR ) ) * RCSe ) ) )", "obj1": 0.4744525547445255, "obj2": 0.5073326676802867}, {"determining": "( ( FirstVNF_CPU / DDR ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5650252999100714}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Max( Max( DS,RRSe ),CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Min( Max( MUC,MUR ) ,( RCSe + CS ) ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / ( MLU - MUR ) ) ) * ( RCSe * MUR ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR - Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR ) ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( ( RMSe + MUC ) + ( RCSe + MUR ) ) ),RMSe ) ) ,MUM ),Min( MUM ,( ( RRSe * RMSe ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,( MRS * ( ( AMS + PN ) - ( CRS + FirstVNF_Mem ) ) ) ) * ( DDR + AMS ) ) + ( ( FirstVNF_Mem_Server + Max( BR,AMS ) ) + BR ) ) ) + ( AMS + ( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( ( ARS + MDR ) + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,BR ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( MLU,MUC ) - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,MUR ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( ( AMS * CRS ) - MDR ) ) ,( CRS - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU - RMSe ),( ( Max( MUC,MUC ) - ( Min( Min( CS ,Max( RRSe,MLU ) ) ,Min( Max( MUC,MUR ) ,MUR ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( ( Const * ( Min( MRS ,ARS ) / ( FirstVNF_Mem_Server - MRS ) ) ) * FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MUC + ( ( MLU / ( ( MUC * ( Max( MUM,MLU ) + ( RMSe + MUM ) ) ) * RMSe ) ) + Min( ( ( Min( ( CS - RMSe ) ,MLU ) + ( Max( MUM,MUR ) * MUC ) ) - ( ( ( RCSe * RCSe ) + MUC ) * ( Max( MUC,DS ) / ( MUC - RMSe ) ) ) ) ,DS ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5144518963008713}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.5109489051094891, "obj2": 0.46049479920329855}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Min( ( ( MLU / MUM ) + ( RCSe / RRSe ) ) ,( MUC + ( ( MLU / DS ) + Min( ( ( Min( ( CS - RMSe ) ,MLU ) + ( Max( MUM,MUR ) * MUC ) ) - ( ( ( RCSe * RCSe ) + MUC ) * ( Max( MUC,DS ) / ( MUC - RMSe ) ) ) ) ,DS ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5144518963008713}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.5109489051094891, "obj2": 0.46049479920329855}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MUC + ( ( MLU / ( ( MUC * ( Max( MUM,MLU ) + ( RMSe + MUM ) ) ) * RMSe ) ) + Min( ( ( Min( ( CS - RMSe ) ,MLU ) + ( Max( MUM,MUR ) * MUC ) ) - ( ( ( RCSe * RCSe ) + MUC ) * ( Max( MUC,DS ) / ( MUC - RMSe ) ) ) ) ,DS ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5144518963008713}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.5109489051094891, "obj2": 0.46049479920329855}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Min( DDR ,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "Max( ( RCSe + ( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MUR + DS ) + MUM ),RCSe ) ) )", "obj1": 0.5109489051094891, "obj2": 0.46049479920329855}, {"determining": "( ( ARS + MDR ) / Min( FirstVNF_CPU ,ARS ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( ( ( ( DS + ( MUR * MUR ) ) / Max( Max( DS,MUC ),Min( DS ,DS ) ) ) + ( ( Min( RCSe ,MUR ) + ( MUR / RMSe ) ) / MUC ) ) - ( MLU - CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6675299382126564}, {"determining": "( Min( Max( ARS,MDR ) ,Min( MDR ,BR ) ) / Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RCSe + MUM ),Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( Max( ( MUR + RMSe ),RCSe ) + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) )", "obj1": 0.46715328467153283, "obj2": 0.5243635551091717}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( ( ( Const - ACS ) * ( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,DDR ) ) ),AMS ) ) ) * Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS + ARS ) ) ) )", "choosing": "( ( ( RRSe + RCSe ) / MUM ) + ( RRSe / ( RRSe / MUC ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( Max( MUC,MUC ) - ( RCSe + ( RMSe - MUC ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6524302264573414}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( BR + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( DS,MUC ) - ( ( MUC - MUC ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6524302264573414}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - ( FirstVNF_Mem * AMS ) ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) + ( ACS * Min( ACS ,FirstVNF_RAM_Server ) ) ),( DDR + AMS ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RMSe - MUC ) + RCSe ),( ( MUC / ( Max( MUC,MUC ) - ( ( RRSe - ( CS - MUM ) ) / ( Min( RCSe ,MUR ) + CS ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6524302264573414}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - FirstVNF_CPU ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) / ( ACS * Min( ACS ,FirstVNF_RAM_Server ) ) ),( AMS + DDR ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6524302264573414}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( ( ( RRSe / MUR ) - Min( DS ,MUC ) ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( DDR / Const ) ) ),( ( FirstVNF_Mem_Server * CRS ) / Const ) )", "choosing": "Max( ( ( Min( ( Max( MUM,MLU ) / RCSe ) ,( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4662509416930709}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( ( Const * ( Min( MRS ,ARS ) / ( FirstVNF_Mem_Server - MRS ) ) ) * FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "Max( ( RCSe + MUR ),( Max( ( ( MUR + DS ) + MUM ),RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * Max( DS,MLU ) ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "( Min( Max( ARS,MDR ) ,Min( MDR ,BR ) ) / Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( ( RRSe / MUR ) - Min( DS ,MUC ) ) + ( RRSe / RRSe ) ),( MLU + RMSe ) )", "obj1": 0.46715328467153283, "obj2": 0.5243635551091717}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( MDR - Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ),BR ) ),Max( CRS,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe + MUM ),Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( Max( ( MUR + RMSe ),RCSe ) + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,( MRS * ( ( AMS + PN ) - ( CRS + FirstVNF_Mem ) ) ) ) * ( DDR + AMS ) ) + ( ( FirstVNF_Mem_Server + Max( BR,( FirstVNF_RAM / ( RRS - FirstVNF_CPU ) ) ) ) + BR ) ) ) + ( ACS + ( FirstVNF_CPU / FirstVNF_Mem ) ) )", "choosing": "Max( ( ( Max( RCSe,Max( Min( MUC ,MLU ),RRSe ) ) + Max( RCSe,MUR ) ) + Max( MUM,CS ) ),( MLU / RMSe ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Max( ( ( Const * ( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - Min( ACS ,AMS ) ) ),Max( FirstVNF_CPU,AMS ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( ( RMSe + MUC ) + ( MUC + MUR ) ) ),RMSe ) ) ,MUM ),Min( MUM ,( Min( Min( ( DS / ( MUR / MUR ) ) ,DS ) ,( RRSe + MUR ) ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.46202441721003545}, {"determining": "( ( ARS + ( PN + FirstVNF_Mem ) ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( CRS - Max( FirstVNF_RAM_Server,( ACS + AMS ) ) ) ),( ( RRS * PN ) / Max( ( CRS + Const ),FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( RMSe + RMSe ) ) ) ) ,( RRSe * Max( MLU,MUC ) ) ) * Max( MUC,MLU ) ) + RMSe ) )", "obj1": 0.39963503649635035, "obj2": 0.6524302264573414}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( ( PN - ( MRS - ( Min( PN ,FirstVNF_CPU ) - ( ( ( FirstVNF_CPU * BR ) - PN ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / DS ) * ( MUR * RCSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6675299382126564}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( ( PN - ( MRS - ( Min( PN ,FirstVNF_CPU ) - ( FirstVNF_RAM * ARS ) ) ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( ( ( ( DS + ( MUR * MUR ) ) / Max( Max( DS,MUC ),Min( DS ,MLU ) ) ) + ( ( Min( RCSe ,MUR ) + ( MUR / RMSe ) ) / MUC ) ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MUR ) ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6675299382126564}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( ( FirstVNF_Mem / Min( CRS ,Const ) ) + AMS ) ) + ( PN - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( MUR - RCSe ) ),RMSe ) ) ,( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) + MLU ) ),Min( MUM ,( ( RRSe * MUR ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( ( FirstVNF_RAM * ARS ) + Max( ( ACS * FirstVNF_RAM ),( MDR / ( DDR - Const ) ) ) )", "choosing": "( ( Max( CS,( ( Max( ( MUM + MUR ),( MUR + MUM ) ) - MUM ) - RMSe ) ) * ( RMSe * MLU ) ) + Max( RMSe,DS ) )", "obj1": 0.41788321167883213, "obj2": 0.612706494410504}, {"determining": "( Min( ( CRS + ACS ) ,FirstVNF_RAM ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( DDR + AMS ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( BR - ARS ) ) ) ) - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MLU / MUM ) + ( ( RRSe / RRSe ) / RRSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6115436064932191}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( ( ( ( DS + ( MUR * MUR ) ) / Max( Max( DS,MUC ),Min( DS ,MLU ) ) ) + ( ( Min( RCSe ,MUR ) + ( MUR / RMSe ) ) / MUC ) ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MUR ) ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6675299382126564}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( PN + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( ( RMSe / MUM ) + CS ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.47992700729927007, "obj2": 0.5049313425073642}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RCSe ) - Max( MUC,( DS * Max( RMSe,( ( RMSe / MUM ) + CS ) ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( ( Max( ( FirstVNF_CPU_Server - ( FirstVNF_Mem - Min( ( FirstVNF_Mem / MDR ) ,PN ) ) ),MDR ) / FirstVNF_RAM ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe / Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( CS / Min( MUM ,( RCSe / ( DS - Min( RMSe ,MLU ) ) ) ) ) ) + RMSe ) )", "obj1": 0.4215328467153285, "obj2": 0.5916278467005899}, {"determining": "( Min( Max( ARS,MDR ) ,Min( MDR ,BR ) ) / Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( ( ( ( DS + ( MUR * MUR ) ) / Max( Max( DS,MUC ),Min( DS ,MLU ) ) ) + ( ( Min( RCSe ,MUR ) + ( MUR / RMSe ) ) / MUC ) ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MUR ) ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6675299382126564}, {"determining": "Max( ( ( FirstVNF_Mem / Min( CRS ,Const ) ) - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) / MUR ) )", "obj1": 0.5091240875912408, "obj2": 0.46202441721003545}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - ( FirstVNF_RAM + ARS ) ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) / ( Const * Min( ACS ,FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM / FirstVNF_CPU ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - ( Min( MUM ,Min( DS ,DS ) ) + RCSe ) ) ),( ( MUC / ( Max( MUC,MUC ) - ( Min( RCSe ,( ( MUM - MLU ) - MUM ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6524302264573414}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - FirstVNF_CPU ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) / ( ACS * Min( ACS ,FirstVNF_RAM_Server ) ) ),( AMS + DDR ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( ( MLU - MUM ) + ( MLU + ( DS + CS ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6524302264573414}, {"determining": "( Max( ( MRS - FirstVNF_Mem_Server ),PN ) / Max( ( Min( FirstVNF_CPU ,PN ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( RRS * PN ) / Min( ( ACS / ( ARS - ( ( CRS + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( Max( MUC,RMSe ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6458725368744265}, {"determining": "Max( ( ( FirstVNF_Mem / Min( CRS ,Const ) ) - ( ( MDR / Const ) - ( ACS / Const ) ) ),BR )", "choosing": "Max( Max( ( ( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) + MLU ) * MUM ),RRSe ),( ( Max( Min( Min( Min( MUC ,RRSe ) ,MLU ) ,MUM ),( MUR - MLU ) ) * Max( MUM,RCSe ) ) / MUR ) )", "obj1": 0.4908759124087591, "obj2": 0.49669499805887074}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Min( DDR ,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) ) )", "choosing": "Max( ( RCSe + ( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MUR + DS ) + MUM ),( RRSe / ( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.5109489051094891, "obj2": 0.46049479920329855}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - ( RRSe / ( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.5109489051094891, "obj2": 0.46049479920329855}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / ( ( DDR * ( CRS / MRS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( ( MUM - MUR ) / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( MLU,CS ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.5, "obj2": 0.4682959958268152}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MUC + ( ( MLU / ( ( MUC * ( Max( MUM,MLU ) + ( RMSe + MUM ) ) ) * RMSe ) ) + Min( ( ( Min( ( CS - RMSe ) ,MLU ) + ( Max( MUM,MUR ) * MUC ) ) - ( ( ( RCSe * RCSe ) + MUC ) * ( Max( MUC,DS ) / ( MUC - RMSe ) ) ) ) ,DS ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5144518963008713}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MUC + ( ( MLU / ( ( MUC * ( Max( MUM,MLU ) + ( RMSe + MUM ) ) ) * RMSe ) ) + Min( ( ( Min( ( CS - RMSe ) ,MLU ) + ( Max( MUM,MUR ) * MUC ) ) - ( ( ( RCSe * RCSe ) + MUC ) * ( Max( MUC,DS ) / ( MUC - RMSe ) ) ) ) ,DS ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5144518963008713}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MUC + ( ( MLU / ( ( MUC * ( Max( MUM,MLU ) + ( RMSe + MUM ) ) ) * RMSe ) ) + Min( ( ( Min( ( CS - RMSe ) ,MLU ) + ( Max( MUM,MUR ) * MUC ) ) - ( ( ( RCSe * RCSe ) + MUC ) * ( Max( MUC,DS ) / ( MUC - RMSe ) ) ) ) ,DS ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5144518963008713}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) / ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MUC + ( ( MLU / ( ( MUC * ( ( MUM * CS ) + ( RMSe + MUM ) ) ) * RMSe ) ) + Min( ( ( Min( ( CS - RMSe ) ,MLU ) + ( Max( MUM,MUR ) * MUC ) ) - ( ( ( RCSe * RCSe ) + MUC ) * ( Max( MUC,DS ) / ( MUC - MUC ) ) ) ) ,DS ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5144518963008713}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Min( MLU ,( MUC - MLU ) ) - MUC ) - MLU ),( ( Max( MUC,MUC ) - Min( RCSe ,Max( MUR,( ( RRSe / MUR ) + MUM ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6128313965259012}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) * Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( CRS + MRS ) ) ),BR ) ) ) + Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "Max( ( Max( Min( MLU ,( MUC - ( RMSe + ( MUM - MLU ) ) ) ),MUC ) - MLU ),( ( Max( MUC,MUC ) - Min( RCSe ,Max( MUR,( ( RRSe / MUR ) + MUM ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.41605839416058393, "obj2": 0.6128313965259012}, {"determining": "( Min( FirstVNF_CPU_Server ,ARS ) + ( Const / MDR ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),( RRSe - RMSe ) ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5578403095646063}, {"determining": "( ( ( RRS + Min( RRS ,ACS ) ) + ( ( MRS / ( ( MDR / MDR ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( MLU - DS ) + RMSe ) ) ) ) - RRSe ),Max( ( ( MLU / DS ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}], "12": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / PN ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( RCSe + MUR ),( Max( ( ( MUR + DS ) + MUM ),RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Max( ( MDR * FirstVNF_RAM ),( MDR / ( DDR - ( ( FirstVNF_CPU * CRS ) + ( PN - ( MRS - AMS ) ) ) ) ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( MUM / ( MUR * ( RRSe + MUM ) ) ) + ( RRSe / RRSe ) )", "obj1": 0.4489051094890511, "obj2": 0.5363761009178503}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ACS / ( ( FirstVNF_RAM_Server / CRS ) - FirstVNF_Mem ) ) ) ),( ( FirstVNF_Mem_Server * CRS ) / Const ) )", "choosing": "Max( ( ( Min( ( Max( MUM,MLU ) / RCSe ) ,( MUC + ( ( MLU / MUM ) + ( RRSe / RRSe ) ) ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( ( PN / Min( MDR ,Max( FirstVNF_Mem_Server,( AMS / Const ) ) ) ) - FirstVNF_Mem_Server ) + Min( Max( FirstVNF_CPU,AMS ) ,( ( Const * ( Min( ( ( FirstVNF_Mem * FirstVNF_RAM ) / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) + ( PN - ( AMS * ACS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Max( PN,BR ) ) + ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ARS ) )", "choosing": "Max( ( Max( RMSe,RRSe ) - RMSe ),( MLU * Max( ( MUM + DS ),DS ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( DDR + AMS ) ) + ( ( FirstVNF_Mem_Server + Max( BR,AMS ) ) + BR ) ) ) + ( AMS + ( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( DS,MUC ) - ( ( MUC - MUC ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / MRS ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ) - Min( ACS ,AMS ) ) ) ) )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),RMSe ) ) ,MUM ),Min( MUM ,( ( RRSe * RMSe ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( AMS * AMS ) + Max( Min( MDR ,FirstVNF_RAM ),( MDR / ( DDR - ( ( Const * ( DDR + AMS ) ) + Min( ( MDR * FirstVNF_Mem ) ,PN ) ) ) ) ) )", "choosing": "( ( MUM / ( ( Min( RMSe ,( MUR - ( ( RMSe + RRSe ) + CS ) ) ) - MUR ) - RMSe ) ) + ( MLU / RRSe ) )", "obj1": 0.4489051094890511, "obj2": 0.5363761009178503}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MLU ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / Min( PN ,( MDR - ( Const * FirstVNF_CPU ) ) ) ) ),AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( RRSe,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5817050965982519}, {"determining": "( ARS + ( ( FirstVNF_CPU_Server / Const ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Max( Max( DS,MUR ),CS ),CS ),( ( Max( MUR,MUM ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Min( Max( MUR,MUC ) ,( RCSe + CS ) ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,Min( Min( RMSe ,RMSe ) ,Max( RCSe,RCSe ) ) ) ) / ( MLU - MUR ) ) ) * ( RCSe * MUR ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5677802542143753}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / ( MLU - MUR ) ) * RCSe ) ) )", "obj1": 0.4744525547445255, "obj2": 0.5073326676802867}, {"determining": "( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( DDR / Const ) ) ),( ( FirstVNF_Mem_Server * CRS ) / Const ) )", "choosing": "Max( ( ( Min( ( Max( MUM,MLU ) / RCSe ) ,( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4662509416930709}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * Max( DS,MLU ) ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( PN + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( ( RMSe / MUM ) + CS ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.47992700729927007, "obj2": 0.5049313425073642}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RCSe ) - Max( MUC,( DS * Max( RMSe,( ( RMSe / MUM ) + CS ) ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / ( ( DDR * ( CRS / MRS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( ( MUM - MUR ) / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( MLU,CS ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.5, "obj2": 0.4682959958268152}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "( Min( FirstVNF_CPU_Server ,ARS ) + ( Const / MDR ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),( RRSe - RMSe ) ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5578403095646063}, {"determining": "( ( ( RRS + Min( RRS ,ACS ) ) + ( ( MRS / ( ( MDR / MDR ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( MLU - DS ) + RMSe ) ) ) ) - RRSe ),Max( ( ( MLU / DS ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( RCSe + ( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MUR + DS ) + MUM ),RCSe ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( ( FirstVNF_RAM - CRS ) / FirstVNF_RAM_Server ) - ( MDR + MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( Max( DDR,MDR ) * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( Max( RCSe,MUM ) * CS ),MUR ) + ( RMSe / RRSe ) ),Min( ( MUC / Min( Max( ( CS / MUR ),MUC ) ,CS ) ) ,MUR ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( RRS / ACS ) + ( MDR + MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( Max( DDR,MDR ) * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( MUR * CS ),MUR ) + ( RMSe / RRSe ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.596085730088164}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( CRS - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,MUR ) ) / Min( DS ,( MUM / ( ( RRSe / MUR ) + MUM ) ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5856827614675147}, {"determining": "( Max( ( Min( CRS ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) + ( Min( ( Min( PN ,BR ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( Min( DS ,MLU ),MUR )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / ( MLU - MUR ) ) * RCSe ) ) )", "obj1": 0.4744525547445255, "obj2": 0.5073326676802867}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / ( MLU - MUR ) ) * RCSe ) ) )", "obj1": 0.4744525547445255, "obj2": 0.5073326676802867}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( Min( FirstVNF_Mem_Server ,( MRS * ( ( AMS + PN ) - ( CRS + FirstVNF_Mem ) ) ) ) * ( DDR + AMS ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * Max( MUC,MUR ) ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5645374017327415}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46920153185164865}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46920153185164865}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46920153185164865}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * ( DDR / Max( FirstVNF_Mem_Server,ARS ) ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( ( RCSe / ( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * ( ( CS / RMSe ) * RMSe ) ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46920153185164865}, {"determining": "( ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * ( Min( RCSe ,MUR ) + ( MUR / RMSe ) ) ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * Max( DS,MLU ) ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Min( DDR ,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) ) )", "choosing": "Max( ( RCSe + ( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MUR + DS ) + MUM ),( RRSe / ( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Min( DS ,MLU ),( Max( MUC,MUC ) + RMSe ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6480204318987915}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,( Const * ( Min( ( DDR / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * ( ( RRSe + MUM ) / DS ) ) + MUM ),RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46920153185164865}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( FirstVNF_Mem + BR ) ) ,Max( FirstVNF_RAM_Server,( ( Min( FirstVNF_CPU_Server ,RRS ) + ( Const + DDR ) ) + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - CS ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * ( ( ( CS - MUR ) / MUM ) - MUM ) ) + MUM ),RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46920153185164865}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MUC + ( ( MLU / ( ( MUC * ( Max( MUM,MLU ) + ( RMSe + MUM ) ) ) * RMSe ) ) + Min( ( ( Min( ( CS - RMSe ) ,MLU ) + ( Max( MUM,MUR ) * MUC ) ) - ( ( ( RCSe * RCSe ) + MUC ) * ( Max( MUC,DS ) / ( MUC - RMSe ) ) ) ) ,DS ) ) ) )", "obj1": 0.4744525547445255, "obj2": 0.5073326676802867}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - ( RRSe / ( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + Max( ( ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) / MRS ),Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5300098023125248}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( MDR / Const ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Max( Max( DS,MUR ),CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Min( Max( MUC,MUR ) ,( RCSe + CS ) ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / ( MLU - MUR ) ) ) * ( RCSe * MUR ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( FirstVNF_CPU_Server ,( MDR - ( PN / PN ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + RCSe ) - Max( MUC,( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) * ( MUC / DS ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "Max( ( ( FirstVNF_Mem / Min( CRS ,Const ) ) - ( ( MDR / Const ) - ( CRS + FirstVNF_CPU_Server ) ) ),BR )", "choosing": "( ( MUM + RCSe ) - Max( MUC,( DS * Max( RMSe,( ( RMSe / MUM ) + CS ) ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( PN + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / ( Max( FirstVNF_CPU,Max( RRS,MDR ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,Min( CS ,RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.47992700729927007, "obj2": 0.5049313425073642}, {"determining": "( ( Max( FirstVNF_CPU,Max( RRS,MDR ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( RRS - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( ( RMSe / MUM ) + CS ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.47992700729927007, "obj2": 0.5049313425073642}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + ( ( Max( FirstVNF_RAM_Server,MDR ) + Max( BR,AMS ) ) + BR ) ) ) + ( AMS + ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( ( MUM / Min( ( Max( CS,CS ) - ( MUR / MLU ) ) ,DS ) ),MUC ) + ( ( ( MUR - RMSe ) + DS ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( DDR + AMS ) ) + ( ( FirstVNF_Mem_Server + Max( BR,AMS ) ) + BR ) ) ) + ( AMS + ( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + MUM ),Max( ( ( ( ( MUR - RMSe ) + DS ) * ( MUR / DS ) ) - Max( ( ( Max( ( MUR + RMSe ),RCSe ) + RMSe ) * DS ),( RMSe / RRSe ) ) ),MUC ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - ( FirstVNF_Mem * AMS ) ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) + ( ACS * Min( ACS ,( RRS + Const ) ) ) ),( DDR + AMS ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RMSe - MUC ) + RCSe ),DS )", "obj1": 0.395985401459854, "obj2": 0.6587843620999572}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - FirstVNF_CPU ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) / ( ACS * Min( ACS ,FirstVNF_RAM_Server ) ) ),( AMS + DDR ) ) + ( Min( BR ,Min( BR ,MDR ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe - ( CS - MUM ) ) / ( Min( RCSe ,MUR ) + CS ) ) - MUM ) + ( MLU + ( DS + CS ) ) )", "obj1": 0.395985401459854, "obj2": 0.6587843620999572}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM_Server ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( Max( MUC,MUC ) - ( Min( RRSe ,( ( MLU - MUM ) - MUM ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.3978102189781022, "obj2": 0.6539748654819756}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - ( FirstVNF_RAM + ARS ) ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) / ( Const * Min( ACS ,FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM / FirstVNF_CPU ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - ( Min( MUM ,Min( DS ,DS ) ) + RCSe ) ) ),( ( MUC / ( Max( MUC,MUC ) - ( Min( RCSe ,( ( MUM - MLU ) - MUM ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6309794400441211}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - ( FirstVNF_RAM + ARS ) ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) / ( Const * Min( ACS ,FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM / FirstVNF_CPU ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - ( Min( MUM ,Min( DS ,DS ) ) + RCSe ) ) ),( ( MUC / ( Max( MUC,MUC ) - ( Min( RCSe ,( ( MUM - MLU ) - MUM ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6309794400441211}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - ( FirstVNF_RAM + ARS ) ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) / ( Const * Min( ACS ,FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM / FirstVNF_CPU ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - ( Min( MUM ,Min( DS ,DS ) ) + RCSe ) ) ),( ( MUC / ( Max( MUC,MUC ) - ( Min( RCSe ,( ( MUM - MLU ) - MUM ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6309794400441211}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - ( FirstVNF_RAM + ARS ) ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) / ( Const * Min( ACS ,FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM / FirstVNF_CPU ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - ( Min( MUM ,Min( DS ,DS ) ) + RCSe ) ) ),( ( MUC / ( Max( MUC,MUC ) - ( Min( RCSe ,( ( MUM - MLU ) - MUM ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6309794400441211}, {"determining": "( ( FirstVNF_CPU / DDR ) + ( ( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ) - Min( ACS ,AMS ) ) - ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( MUM ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5474631742753006}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + MRS )", "choosing": "Max( ( MUR + RCSe ),Max( Min( ( RRSe - Max( ( MLU / ( ( RRSe / MUR ) - Min( DS ,MUC ) ) ),Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) ) ,MUM ),Min( MUM ,( ( RRSe * RMSe ) + Max( MLU,DS ) ) ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) - ( Min( ( FirstVNF_CPU_Server / MDR ) ,( AMS - ARS ) ) * ( ( Const - ACS ) * ( AMS * Max( ( FirstVNF_RAM_Server - Min( ( ACS - BR ) ,Min( MRS ,FirstVNF_RAM_Server ) ) ),AMS ) ) ) ) )", "choosing": "( ( MUM + RCSe ) - Max( MUC,( DS * Max( RMSe,( ( RMSe / MUM ) + CS ) ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( BR + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( Max( MUC,MUC ) - ( RCSe + ( RMSe - MUC ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.49452554744525545, "obj2": 0.4828965858651048}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( PN + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( ( RMSe / MUM ) + CS ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.47992700729927007, "obj2": 0.5049313425073642}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * Max( ( ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) / MRS ),Max( PN,( MRS - FirstVNF_RAM ) ) ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MUC + ( ( MLU / ( ( MUC * ( Max( MUM,MLU ) + ( RMSe + MUM ) ) ) * RMSe ) ) + Min( ( ( Min( ( CS - RMSe ) ,MLU ) + ( Max( MUM,MUR ) * MUC ) ) - ( DS + RMSe ) ) ,DS ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.4911696623423149}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5300098023125248}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * Max( DS,MLU ) ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - ( FirstVNF_RAM + ARS ) ) + MRS ) ) ,( Min( Max( FirstVNF_CPU,PN ) ,FirstVNF_Mem ) + ACS ) ) / ( Const * Min( ACS ,FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM / FirstVNF_CPU ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RMSe + ( Min( MUM ,Min( DS ,DS ) ) + RCSe ) ) + RCSe ),( ( MUC / ( Max( MUC,MUC ) - ( Min( RCSe ,( ( MUM - MLU ) - MUM ) ) / ( RCSe - CS ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6309794400441211}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( CRS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MLU / MUM ) + ( RCSe / RRSe ) ),( MUC + ( ( MLU / ( ( MUC * ( Max( MUM,MLU ) + ( RMSe + MUM ) ) ) * RMSe ) ) + Min( ( ( Min( ( CS - RMSe ) ,RMSe ) + ( Max( MUM,MUR ) * MUC ) ) - ( ( ( RCSe * RCSe ) + MUC ) * ( Max( MUC,DS ) / ( MUC - RMSe ) ) ) ) ,DS ) ) ) )", "obj1": 0.5091240875912408, "obj2": 0.45923046558925545}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46920153185164865}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( DDR / Const ) ) ),( ( FirstVNF_Mem_Server * CRS ) / Const ) )", "choosing": "Max( ( ( Min( ( Max( MUM,MLU ) / RCSe ) ,( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5054744525547445, "obj2": 0.4662509416930709}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MLU ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,( MRS * ( ( AMS + PN ) - ( CRS + FirstVNF_Mem ) ) ) ) * ( DDR + AMS ) ) + ( MRS - ( Min( PN ,FirstVNF_CPU ) - ( ( ( FirstVNF_CPU * BR ) - PN ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) ) ) ) + ( AMS + ( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( RCSe + ( RMSe - MUC ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.57813605417326}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) + Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ),Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( ( Min( ( ( Min( MDR ,ACS ) * RRS ) - ( ARS + ( BR * FirstVNF_Mem ) ) ) ,PN ) * PN ) / ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( Max( MLU,MUM ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( CS + RCSe ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * ( MUM * CS ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.4981751824817518, "obj2": 0.46920153185164865}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( ( FirstVNF_Mem - ( PN + FirstVNF_RAM ) ) - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( ( Max( Max( FirstVNF_CPU,AMS ),( ( Min( CRS ,BR ) * Min( DDR ,AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) ) * FirstVNF_CPU ) ) )", "choosing": "Max( Max( MLU,MUM ),Min( MUC ,( Max( CS,RRSe ) * CS ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5612319636021178}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / ( MLU - MUR ) ) * RCSe ) ) )", "obj1": 0.4744525547445255, "obj2": 0.5073326676802867}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( Max( PN,( MRS - FirstVNF_RAM ) ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.44343065693430656, "obj2": 0.5528974533972129}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5240086903318804}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5715632782341896}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + Max( ( ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) / MRS ),Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5300098023125248}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( ( ( ( MDR / FirstVNF_Mem_Server ) / FirstVNF_CPU ) / MRS ),Max( ( Min( FirstVNF_Mem_Server ,Min( Const ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ),( MRS - FirstVNF_RAM ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,Max( Min( MLU ,MUM ),RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_CPU ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe / RRSe ) ),( MUC + ( ( MLU / ( ( MUC * ( Max( MUM,MLU ) + ( RMSe + MUM ) ) ) * RMSe ) ) + Min( ( ( Min( ( CS - RMSe ) ,MLU ) + ( Max( MUM,MUR ) * MUC ) ) - ( ( ( RCSe * RCSe ) + MUC ) * ( Max( MUC,DS ) / ( MUC - RMSe ) ) ) ) ,DS ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4884247130474518}], "13": [{"determining": "( ( MDR / Const ) - ( MDR / ( MRS / ( ACS * Min( ACS ,ARS ) ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( MUC,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( PN,BR ) ,Max( FirstVNF_RAM_Server,MDR ) ) + Max( Max( FirstVNF_CPU,AMS ),( ( Const * ( Min( ( DDR / PN ) ,FirstVNF_CPU_Server ) + AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) )", "choosing": "Max( ( RCSe + MUR ),( Max( ( ( MUR + DS ) + MUM ),RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.5145985401459854, "obj2": 0.4562050307334154}, {"determining": "( Max( ( MDR * FirstVNF_RAM ),( MDR / ( DDR - ( ( FirstVNF_CPU * CRS ) + ( PN - ( MRS - AMS ) ) ) ) ) ) + ( FirstVNF_RAM * ARS ) )", "choosing": "( ( MUM / ( MUR * ( RRSe + MUM ) ) ) + ( RRSe / RRSe ) )", "obj1": 0.4489051094890511, "obj2": 0.5363761009178503}, {"determining": "( ( AMS * AMS ) + Max( Min( MDR ,FirstVNF_RAM ),( MDR / ( DDR - ( ( Const * ( DDR + AMS ) ) + Min( ( MDR * FirstVNF_Mem ) ,PN ) ) ) ) ) )", "choosing": "( ( MUM / ( ( Min( RMSe ,( MUR - ( ( RMSe + RRSe ) + CS ) ) ) - MUR ) - RMSe ) ) + ( MLU / RRSe ) )", "obj1": 0.4489051094890511, "obj2": 0.5363761009178503}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MLU ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ARS + ( ( FirstVNF_CPU_Server / Const ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Max( Max( DS,MUR ),CS ),CS ),( ( Max( MUR,MUM ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Min( Max( MUR,MUC ) ,( RCSe + CS ) ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,Min( Min( RMSe ,RMSe ) ,Max( RCSe,RCSe ) ) ) ) / ( MLU - MUR ) ) ) * ( RCSe * MUR ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5677802542143753}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( ( FirstVNF_RAM - CRS ) / FirstVNF_RAM_Server ) - ( MDR + MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( Max( DDR,MDR ) * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( Max( RCSe,MUM ) * CS ),MUR ) + ( RMSe / RRSe ) ),Min( ( MUC / Min( Max( ( CS / MUR ),MUC ) ,CS ) ) ,MUR ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( RRS / ACS ) + ( MDR + MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( Max( DDR,MDR ) * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( MUR * CS ),MUR ) + ( RMSe / RRSe ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.596085730088164}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( CRS - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,MUR ) ) / Min( DS ,( MUM / ( ( RRSe / MUR ) + MUM ) ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5856827614675147}, {"determining": "( Max( ( Min( CRS ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) + ( Min( ( Min( PN ,BR ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( Min( DS ,MLU ),MUR )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( Min( FirstVNF_Mem_Server ,( MRS * ( ( AMS + PN ) - ( CRS + FirstVNF_Mem ) ) ) ) * ( DDR + AMS ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * Max( MUC,MUR ) ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5645374017327415}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6480204318987915}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + Max( ( ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) / MRS ),Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5300098023125248}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( MDR / Const ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Max( Max( DS,MUR ),CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Min( Max( MUC,MUR ) ,( RCSe + CS ) ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / ( MLU - MUR ) ) ) * ( RCSe * MUR ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( FirstVNF_CPU / DDR ) + ( ( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ) - Min( ACS ,AMS ) ) - ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( MUM ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5474631742753006}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5300098023125248}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MLU ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) + Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ),Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( ( Min( ( ( Min( MDR ,ACS ) * RRS ) - ( ARS + ( BR * FirstVNF_Mem ) ) ) ,PN ) * PN ) / ( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Max( Max( MLU,MUM ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( CS + RCSe ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * ( MUM * CS ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( ( FirstVNF_Mem - ( PN + FirstVNF_RAM ) ) - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( ( Max( Max( FirstVNF_CPU,AMS ),( ( Min( CRS ,BR ) * Min( DDR ,AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) ) * FirstVNF_CPU ) ) )", "choosing": "Max( Max( MLU,MUM ),Min( MUC ,( Max( CS,RRSe ) * CS ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5612319636021178}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5240086903318804}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + Max( ( ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) / MRS ),Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5300098023125248}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( ( ( FirstVNF_RAM * Min( BR ,FirstVNF_Mem_Server ) ) / MRS ),Max( ( MRS - FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,Min( CRS ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,( ( ( MUC - MLU ) * MUM ) - RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( ( ( ( MDR / FirstVNF_Mem_Server ) / FirstVNF_CPU ) / MRS ),Max( ( Min( FirstVNF_Mem_Server ,Min( Const ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ),( MRS - FirstVNF_RAM ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,Max( Min( MLU ,MUM ),RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_Mem_Server * CRS ) / Const ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Max( MUM,MLU ) / RCSe ) - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MLU ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MLU ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( ( Const / MDR ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - ( RRSe / ( Max( ( MLU + RMSe ),( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5743808380579819}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / RRS ) )", "choosing": "Max( Min( Max( MUR,MUC ) ,( ( RMSe / MUM ) + CS ) ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.42883211678832117, "obj2": 0.5701931355682739}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( MDR + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( ( MLU + RMSe ) / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.41605839416058393, "obj2": 0.5911712037415532}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + Max( ( ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) / MRS ),Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5300098023125248}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( CRS,( Const + MDR ) ) ) )", "choosing": "Max( ( MLU * MUC ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.5, "obj2": 0.46398328410428097}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( CRS - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RCSe + ( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MUR + DS ) + MUM ),RCSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.5856827614675147}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( FirstVNF_Mem + BR ) ) ,Max( FirstVNF_RAM_Server,( ( Min( FirstVNF_CPU_Server ,RRS ) + ( Const + DDR ) ) + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - CS ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * ( ( ( CS - MUR ) / MUM ) - MUM ) ) + MUM ),RCSe ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45877369271502483}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( FirstVNF_Mem + BR ) ) ,Max( FirstVNF_RAM_Server,( ( Min( FirstVNF_CPU_Server ,RRS ) + ( Const + DDR ) ) + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - CS ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * ( ( ( CS - MUR ) / MUM ) - MUM ) ) + MUM ),RCSe ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45877369271502483}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( FirstVNF_Mem + BR ) ) ,Max( FirstVNF_RAM_Server,( ( Min( FirstVNF_CPU_Server ,RRS ) + ( Const + DDR ) ) + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - CS ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * ( ( ( CS - MUR ) / MUM ) - MUM ) ) + MUM ),RCSe ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45877369271502483}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( FirstVNF_Mem + BR ) ) ,Max( FirstVNF_RAM_Server,( ( Min( FirstVNF_CPU_Server ,RRS ) + ( Const + DDR ) ) + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - CS ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * ( ( ( CS - MUR ) / MUM ) - MUM ) ) + MUM ),RCSe ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45877369271502483}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) ) ) )", "obj1": 0.4927007299270073, "obj2": 0.4765094087110421}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( RCSe,MLU ) / CS ) + MUR ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5240086903318804}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5240086903318804}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + ( Max( ARS,MDR ) + Max( BR,AMS ) ) ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( ( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Min( DDR ,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) ) * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( RMSe / RCSe ) ) ) ) * MUM ) )", "obj1": 0.4343065693430657, "obj2": 0.5612319636021178}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( DDR + AMS ) ) + ( ( Max( ARS,MDR ) + Max( BR,AMS ) ) + BR ) ) ) + ( AMS + ( FirstVNF_Mem / FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( DS,MUC ) - ( ( ( MUR - RMSe ) + DS ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4343065693430657, "obj2": 0.5612319636021178}, {"determining": "( ( ( RRS + Min( RRS ,ACS ) ) + ( ( MRS / ( ( MDR / MDR ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( Max( DS,Max( Min( MLU ,MUM ),RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( ( MRS - FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( MUR + RCSe ),( ( Min( ( MUM * ( ( MUM - RCSe ) - MUR ) ) ,( ( RRSe + MUM ) / DS ) ) / DS ) - Max( MUC,RRSe ) ) ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / ( MLU - MUR ) ) * RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + Min( MUR ,MLU ) ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.43795620437956206, "obj2": 0.5522166629605484}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( Max( FirstVNF_CPU,AMS ) / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * Max( DS,MLU ) ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / MUC ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6056067429541672}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( DDR / Const ) ) ),( ( FirstVNF_Mem_Server * CRS ) / Const ) )", "choosing": "Max( ( ( Min( ( Max( MUM,MLU ) / RCSe ) ,( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5645374017327415}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + Max( ( ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) / MRS ),Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5300098023125248}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5300098023125248}, {"determining": "( ( Max( ( ( ( MDR / FirstVNF_Mem_Server ) / FirstVNF_CPU ) / MRS ),Max( ( Min( FirstVNF_Mem_Server ,Min( Const ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ),( MRS - FirstVNF_RAM ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( ( Max( FirstVNF_CPU,AMS ) + ( Min( FirstVNF_Mem_Server ,( MRS * ( ( AMS + PN ) - ( CRS + FirstVNF_Mem ) ) ) ) * ( DDR + AMS ) ) ) + ( MDR / Const ) ) )", "choosing": "Max( Max( DS,Max( Min( MLU ,MUM ),RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( CS ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( Min( FirstVNF_Mem_Server ,( MRS * ( ( AMS + PN ) - ( CRS + FirstVNF_Mem ) ) ) ) * ( DDR + AMS ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * Max( MUC,MUR ) ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( ( ( ( MDR / FirstVNF_Mem_Server ) / FirstVNF_CPU ) / MRS ),Max( ( Min( FirstVNF_Mem_Server ,Min( Const ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ),( MRS - FirstVNF_RAM ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,Max( Min( MLU ,MUM ),RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.5645374017327415}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( DDR / Const ) ) ),( ( FirstVNF_Mem_Server * CRS ) / Const ) )", "choosing": "Max( ( ( Min( ( Max( MUM,MLU ) / RCSe ) ,( Min( MUC ,RMSe ) * Max( RRSe,RCSe ) ) ) / RMSe ) * ( RRSe / RRSe ) ),( Max( RRSe,RCSe ) * ( MUR * RCSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5300098023125248}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / ( ( DDR * ( CRS / MRS ) ) / FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( ( MUM - MUR ) / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( MLU,CS ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( ( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Min( DDR ,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( FirstVNF_Mem_Server + BR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) ) * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,Max( ( MUM + MUM ),DS ) ) ) ) * MUM ) )", "obj1": 0.4343065693430657, "obj2": 0.5612319636021178}, {"determining": "( Max( MDR,( AMS + DDR ) ) + ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( DS + RMSe ) ) )", "obj1": 0.40145985401459855, "obj2": 0.644494437968119}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( Min( ( ARS + MDR ) ,( FirstVNF_CPU_Server / DDR ) ) / Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - ( RRSe / ( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.39963503649635035, "obj2": 0.6480204318987915}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( Min( DS ,MLU ),( ( Min( ( DS / ( RRSe + Max( RMSe,( MUR + RMSe ) ) ) ) ,( RRSe + Max( MLU,MUC ) ) ) * ( ( RRSe * Min( Max( MUR,MUC ) ,( Max( CS,MUM ) + RCSe ) ) ) / CS ) ) + RMSe ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( Max( ( Min( ( DDR + ( ( FirstVNF_CPU - ( FirstVNF_Mem * AMS ) ) + MRS ) ) ,( ( RRS + Const ) / ACS ) ) + ( ACS * Min( ACS ,( RRS + Const ) ) ) ),( DDR + AMS ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( Max( DS,Max( Min( MLU ,MUM ),RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MLU ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6207452069743666}, {"determining": "( Max( ( Min( CRS ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) + ( Min( ( Min( PN ,BR ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( Min( DS ,MLU ),MUR )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( MDR / Const ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Max( Max( DS,MUR ),CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Min( Max( MUC,MUR ) ,( RCSe + CS ) ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / ( MLU - MUR ) ) ) * ( RCSe * MUR ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( FirstVNF_CPU_Server ,( MDR - ( PN / PN ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + RCSe ) - Max( MUC,( ( Min( MUR ,( Min( MUR ,MLU ) / MUC ) ) - MLU ) * ( MUC / DS ) ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,CS ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( Max( MUC,MUR ),MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MLU ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,Max( Max( Min( Max( DS,MUC ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) ) )", "obj1": 0.4854014598540146, "obj2": 0.4833379155837994}, {"determining": "( FirstVNF_CPU_Server + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( DS + RMSe ) )", "obj1": 0.49452554744525545, "obj2": 0.46560312524460024}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5173383578019088}, {"determining": "( ( Max( ( ( ( MDR / FirstVNF_Mem_Server ) / FirstVNF_CPU ) / MRS ),Max( ( Min( FirstVNF_Mem_Server ,Min( Const ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ),( MRS - FirstVNF_RAM ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5300098023125248}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( MRS / ( MRS / ( ACS * ( ( AMS / FirstVNF_Mem ) + RRS ) ) ) ) - ( ( FirstVNF_RAM_Server / AMS ) * ( FirstVNF_CPU_Server * ACS ) ) ) ),BR )", "choosing": "Max( Max( DS,Max( Min( MLU ,MUM ),RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( ( ( ( MDR / FirstVNF_Mem_Server ) / FirstVNF_CPU ) / MRS ),Max( ( Min( FirstVNF_Mem_Server ,Min( Const ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ),( MRS - FirstVNF_RAM ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,Max( Min( MLU ,MUM ),RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( MDR / PN ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( MUR * RCSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.4416058394160584, "obj2": 0.5507027674555584}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( FirstVNF_Mem + BR ) ) ,Max( FirstVNF_RAM_Server,( ( Min( FirstVNF_CPU_Server ,RRS ) + ( Const + DDR ) ) + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - CS ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * ( ( ( CS - MUR ) / MUM ) - MUM ) ) + MUM ),RCSe ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45877369271502483}, {"determining": "( ( Max( ( ( ( MDR / FirstVNF_Mem_Server ) / FirstVNF_CPU ) / MRS ),Max( ( Min( FirstVNF_Mem_Server ,Min( Const ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ),( MRS - FirstVNF_RAM ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Max( DS,Max( Min( MLU ,MUM ),RCSe ) ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ) * RRSe ) - CS ) ,( Max( RRSe,( RCSe - RCSe ) ) / RRSe ) ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( MRS / ( MRS - FirstVNF_RAM ) ) + Max( PN,( MRS - FirstVNF_RAM_Server ) ) ) ) + ( MDR / Const ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( MUC / ( Max( MUC,Min( MUC ,MUR ) ) - ( Min( RRSe ,( ( MLU - MUM ) - MUM ) ) / CS ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.395985401459854, "obj2": 0.653280076042338}, {"determining": "( ( Max( ( ( ( MDR / FirstVNF_Mem_Server ) / FirstVNF_CPU ) / MRS ),Max( ( Min( FirstVNF_Mem_Server ,Min( Const ,CRS ) ) / Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) ),( MRS - FirstVNF_RAM ) ) ) + Max( FirstVNF_CPU,AMS ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( Min( RCSe ,( ( MUC - MUM ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * ( ( RRSe + MUM ) / DS ) ) + MUM ),RCSe ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5092445435964412}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( ( AMS / Const ) ,BR ) * ( DDR / Max( FirstVNF_Mem_Server,ARS ) ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,( Const + MDR ) ) ) )", "choosing": "Max( ( RCSe / ( MUM * ( ( MUM - RCSe ) - MUR ) ) ),( ( MUR * ( ( CS / RMSe ) * RMSe ) ) * Max( ( ( MLU * MUC ) + MUM ),RCSe ) ) )", "obj1": 0.5018248175182481, "obj2": 0.4610972237918759}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,( Const * ( Min( ( DDR / Min( PN ,FirstVNF_RAM ) ) ,FirstVNF_CPU_Server ) / AMS ) ) ) )", "choosing": "Max( Max( DS,MLU ),( RRSe + ( ( ( DS + RMSe ) / RRSe ) - Min( ( ( ( Min( MUC ,MUR ) / ( MUR * RCSe ) ) * RRSe ) - CS ) ,Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) ) )", "obj1": 0.45985401459854014, "obj2": 0.5173383578019088}, {"determining": "( ( FirstVNF_CPU / DDR ) + ( ( ( FirstVNF_RAM_Server - ( ( MDR / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( RRS * PN ) ) ) ) - Min( ACS ,AMS ) ) - ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( MUM ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5474631742753006}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( ( AMS * AMS ) ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( FirstVNF_Mem + BR ) ) ,Max( FirstVNF_RAM_Server,( ( Min( FirstVNF_CPU_Server ,RRS ) + ( Const + DDR ) ) + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - CS ) * ( CS + MUM ) ) ),Min( RMSe ,( MUR - ( ( RMSe + RRSe ) + CS ) ) ) )", "obj1": 0.5036496350364964, "obj2": 0.46030745493634595}, {"determining": "( Max( Max( FirstVNF_CPU,AMS ),Max( ( Min( CRS ,BR ) * Max( DDR,AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( FirstVNF_Mem + BR ) ) ,Max( FirstVNF_RAM_Server,( ( Min( FirstVNF_CPU_Server ,RRS ) + ( Const + DDR ) ) + MDR ) ) ) )", "choosing": "Max( Min( RCSe ,( ( MUC - CS ) * ( CS + MUM ) ) ),( ( MUR * RCSe ) * Max( ( ( MLU * ( ( ( CS - MUR ) / MUM ) - MUM ) ) + MUM ),RCSe ) ) )", "obj1": 0.5072992700729927, "obj2": 0.45877369271502483}, {"determining": "( Max( ( Min( CRS ,BR ) * ( DDR + AMS ) ),( PN - ( MRS - FirstVNF_Mem_Server ) ) ) + ( Min( ( Min( PN ,BR ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( RRSe,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Max( Min( DDR ,FirstVNF_RAM_Server ),FirstVNF_CPU ) * ( AMS + DDR ) ) + Max( ( ( FirstVNF_Mem - ( PN + FirstVNF_RAM ) ) - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ARS ) ) ,( ( AMS / BR ) / ACS ) ) + ( ( Max( Max( FirstVNF_CPU,AMS ),( ( Min( CRS ,BR ) * Min( DDR ,AMS ) ) + ( PN - ( MRS - FirstVNF_Mem_Server ) ) ) ) + Min( Max( PN,( PN + BR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) ) * FirstVNF_CPU ) ) )", "choosing": "Max( Max( MLU,MUM ),Min( MUC ,( Max( ( Min( MUC ,MUR ) / ( MUR * RMSe ) ),RRSe ) * CS ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5144341498424745}, {"determining": "( ( Max( FirstVNF_CPU,Max( RRS,MDR ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RRSe * Min( Max( MUR,MUC ) ,Min( CS ,RCSe ) ) ) + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( ARS + MDR ) / Max( Min( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) ,( ( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) + ( ARS + MRS ) ) - ( PN + Max( BR,BR ) ) ) / Max( ( MRS * ACS ),( ( RRS * PN ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Max( FirstVNF_RAM_Server,( ACS + FirstVNF_CPU ) ) ) ),( ( RRS * PN ) / ( Max( FirstVNF_CPU,Max( RRS,MDR ) ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) ) ) )", "choosing": "Max( ( RCSe + ( RMSe - MUC ) ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / CS ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ( ( ( ( ( FirstVNF_RAM - Const ) / FirstVNF_RAM_Server ) + ( MDR + MRS ) ) * ACS ) / Const ) - ( ( FirstVNF_RAM_Server / CRS ) * ( Max( DDR,MDR ) * PN ) ) ) ),BR )", "choosing": "Max( ( Max( ( MUR * CS ),MUR ) + ( RMSe / RRSe ) ),Min( ( MUC / Min( Max( ( CS / MUR ),MUC ) ,CS ) ) ,DS ) )", "obj1": 0.46897810218978103, "obj2": 0.5089928853754788}, {"determining": "( ARS + ( PN - ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Max( Max( DS,MUR ),CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),( ( Min( Max( MUC,MUR ) ,( RCSe + CS ) ) - ( Min( RMSe ,Min( Max( MUC,MUR ) ,( RCSe + CS ) ) ) / ( MLU - MUR ) ) ) * ( RCSe * MUR ) ) )", "obj1": 0.4306569343065693, "obj2": 0.5677802542143753}, {"determining": "( ( Max( FirstVNF_CPU,MRS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( ( RRSe * Min( Max( MUR,MUC ) ,( RCSe + CS ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MLU ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + Max( ( ( Max( Max( FirstVNF_CPU,AMS ),( AMS + DDR ) ) + ( Min( BR ,MDR ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) ) / MRS ),Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe - Min( DS ,MLU ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.4708029197080292, "obj2": 0.502195277612499}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + Max( ( ( ( MDR / FirstVNF_Mem_Server ) - FirstVNF_CPU ) / MRS ),Max( PN,( MRS - FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( ( ( RRSe - ( ( MUR * MUC ) * Max( Max( Min( Max( DS,RRSe ) ,CS ),CS ),( ( Max( MUR,MLU ) / CS ) + MUR ) ) ) ) - RRSe ),Max( ( ( MLU / MUM ) + ( RRSe / RRSe ) ),( MLU + RMSe ) ) )", "obj1": 0.4543795620437956, "obj2": 0.5300098023125248}, {"determining": "( ( Max( FirstVNF_CPU,AMS ) + ( ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * ( AMS + DDR ) ) + Max( ( MRS - FirstVNF_Mem_Server ),PN ) ) ) + ( Min( ( Min( PN ,( MDR - ( RRS * FirstVNF_CPU ) ) ) - ( FirstVNF_RAM * ( CRS + FirstVNF_Mem ) ) ) ,( ( AMS / BR ) / ACS ) ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU - MUM ),( ( Max( MUC,MUC ) - ( Min( RRSe ,Min( Max( MUC,MUR ) ,( RCSe + MLU ) ) ) / Min( DS ,( MUM / RCSe ) ) ) ) * ( MUR * RCSe ) ) )", "obj1": 0.4051094890510949, "obj2": 0.6185565883993893}]}