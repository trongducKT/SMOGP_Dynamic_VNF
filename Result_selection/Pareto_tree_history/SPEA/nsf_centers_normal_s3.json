{"1": [{"determining": "( ( AMS - BR ) / ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( Max( MUR,MLU ) / ( DS / RMSe ) )", "obj1": 0.5967153284671532, "obj2": 0.4383877298597608}, {"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + ACS ) + Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC + MUM ) ,( RCSe / MUC ) )", "obj1": 0.4653284671532847, "obj2": 0.570869453635848}, {"determining": "( ( CRS + MDR ) - ( PN * RRS ) )", "choosing": "( ( RMSe * CS ) - ( MUC - RMSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( FirstVNF_CPU_Server * ( MDR - ACS ) ) - Min( ( Const / FirstVNF_RAM ) ,ARS ) )", "choosing": "( Max( ( RRSe - RCSe ),Min( RRSe ,MUR ) ) / ( Min( RCSe ,RMSe ) * ( RMSe * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Const,PN ),Min( FirstVNF_Mem ,AMS ) ) - ( ( FirstVNF_CPU * ACS ) + Min( ARS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( MUM / MUC ) ) * ( ( RCSe + MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_RAM_Server ) - ( ACS + MRS ) ) )", "choosing": "( ( MUC + MUR ) - ( RRSe + ( RMSe / MUC ) ) )", "obj1": 0.5656934306569343, "obj2": 0.48415773955324576}, {"determining": "( Min( MRS ,( AMS / ARS ) ) - Max( Max( AMS,DDR ),CRS ) )", "choosing": "( ( ( DS / RCSe ) * MUR ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS + MDR ) - ( ACS + AMS ) ) - Min( Min( MDR ,FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - RRSe ) ,MUC ) / Min( ( MUM / RMSe ) ,DS ) )", "obj1": 0.9507299270072993, "obj2": 0.06019072912763777}, {"determining": "( ( Min( ACS ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) * ( ( ACS / FirstVNF_Mem_Server ) - ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( MUR * MUR ) ) + ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM * ACS ) / ( DDR - FirstVNF_Mem_Server ) ) ,Min( ( MRS + FirstVNF_Mem ) ,( Const - FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR / MUR ) - Min( RCSe ,MUC ) ) + ( ( RCSe * MUM ) / ( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ACS * Const ) )", "choosing": "( ( Min( RCSe ,CS ) - ( MLU * RCSe ) ) - ( ( RMSe + MUC ) / ( MLU + MLU ) ) )", "obj1": 0.4981751824817518, "obj2": 0.4873350755621749}, {"determining": "( Min( CRS ,FirstVNF_CPU_Server ) - Max( RRS,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,DS ) + Min( RRSe ,RRSe ) ) ,( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - PN ) - Min( ARS ,DDR ) )", "choosing": "Max( Min( ( DS / MLU ) ,Min( MUM ,MUC ) ),( ( RMSe * MUR ) * ( MUM - MUC ) ) )", "obj1": 0.9708029197080292, "obj2": 0.02597825313287083}, {"determining": "( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,AMS ) + ( FirstVNF_Mem_Server * CRS ) )", "choosing": "Max( Min( ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ,Max( Max( MUM,RRSe ),Min( MUC ,RCSe ) ) ),( Max( ( DS / RMSe ),( RMSe * MLU ) ) * Min( Max( CS,CS ) ,( RRSe - RRSe ) ) ) )", "obj1": 0.9215328467153284, "obj2": 0.08430878421680844}, {"determining": "( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( MUM - RCSe ) * MUR ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Const ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( AMS / MRS ),( MRS / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / RRSe ) + ( RCSe + MUM ) ) * Min( Min( RCSe ,RMSe ) ,( RMSe * RCSe ) ) ) ,( ( Min( MLU ,DS ) + Min( RRSe ,RCSe ) ) * ( ( MUR - RMSe ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5516686976173807}, {"determining": "Max( Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( MDR / ACS ) ),( ( FirstVNF_RAM + DDR ) * Min( RRS ,PN ) ) ),( ( Min( BR ,BR ) + ( MRS * Const ) ) - ( ( FirstVNF_RAM + CRS ) - ( MRS - CRS ) ) ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( CS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5667132000338412}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,DS ) - Max( ( ( MUM + MUC ) - ( CS / RMSe ) ),( RRSe + MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.5413350636822255}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Max( RRS,( MDR + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe + RCSe ) + Max( Min( ( MLU + RCSe ) ,MUR ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + ACS ) + Min( MDR ,FirstVNF_CPU ) )", "choosing": "Min( ( MUC + MUM ) ,( RCSe / MUC ) )", "obj1": 0.4653284671532847, "obj2": 0.570869453635848}, {"determining": "( ( CRS + MDR ) - ( PN * RRS ) )", "choosing": "( ( RMSe * CS ) - ( MUC - RMSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( FirstVNF_CPU_Server * ( MDR - ACS ) ) - Min( ( Const / FirstVNF_RAM ) ,ARS ) )", "choosing": "( Max( ( RRSe - RCSe ),Min( RRSe ,MUR ) ) / ( Min( RCSe ,RMSe ) * ( RMSe * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Const,PN ),Min( FirstVNF_Mem ,AMS ) ) - ( ( FirstVNF_CPU * ACS ) + Min( ARS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( MUM / MUC ) ) * ( ( RCSe + MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( AMS / ARS ) ) - Max( Max( AMS,DDR ),CRS ) )", "choosing": "( ( ( DS / RCSe ) * MUR ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS + MDR ) - ( ACS + AMS ) ) - Min( Min( MDR ,FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - RRSe ) ,MUC ) / Min( ( MUM / RMSe ) ,DS ) )", "obj1": 0.9507299270072993, "obj2": 0.06019072912763777}, {"determining": "( ( Min( ACS ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) * ( ( ACS / FirstVNF_Mem_Server ) - ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( MUR * MUR ) ) + ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM * ACS ) / ( DDR - FirstVNF_Mem_Server ) ) ,Min( ( MRS + FirstVNF_Mem ) ,( Const - FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR / MUR ) - Min( RCSe ,MUC ) ) + ( ( RCSe * MUM ) / ( DS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ACS * Const ) )", "choosing": "( ( Min( RCSe ,CS ) - ( MLU * RCSe ) ) - ( ( RMSe + MUC ) / ( MLU + MLU ) ) )", "obj1": 0.4981751824817518, "obj2": 0.4873350755621749}, {"determining": "( Min( CRS ,FirstVNF_CPU_Server ) - Max( RRS,Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,DS ) + Min( RRSe ,RRSe ) ) ,( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( MUM - RCSe ) * MUR ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Const ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( AMS / MRS ),( MRS / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / RRSe ) + ( RCSe + MUM ) ) * Min( Min( RCSe ,RMSe ) ,( RMSe * RCSe ) ) ) ,( ( Min( MLU ,DS ) + Min( RRSe ,RCSe ) ) * ( ( MUR - RMSe ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5516686976173807}, {"determining": "Max( Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( MDR / ACS ) ),( ( FirstVNF_RAM + DDR ) * Min( RRS ,PN ) ) ),( ( Min( BR ,BR ) + ( MRS * Const ) ) - ( ( FirstVNF_RAM + CRS ) - ( MRS - CRS ) ) ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( CS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5667132000338412}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,DS ) - Max( ( ( MUM + MUC ) - ( CS / RMSe ) ),( RRSe + MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.5413350636822255}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Max( RRS,( MDR + FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe + RCSe ) + Max( Min( ( MLU + RCSe ) ,MUR ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + FirstVNF_CPU_Server ) / ( DDR / MDR ) ) + ( ( Const / FirstVNF_CPU ) / ( ARS + ARS ) ) ) * ( ( Max( Max( Const,PN ),Min( FirstVNF_Mem ,AMS ) ) - ( ( FirstVNF_CPU * ACS ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) - ( Min( CRS ,FirstVNF_RAM ) - ( MRS / DDR ) ) ) )", "choosing": "( ( MUR + CS ) * ( ( ( MLU / RCSe ) * ( MUR - ( ( RCSe + MUM ) / RMSe ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Const,PN ),Min( FirstVNF_Mem ,AMS ) ) - ( ( FirstVNF_CPU * ( ( ( ( Const + FirstVNF_CPU_Server ) / ( DDR / MDR ) ) + ( ( Const / FirstVNF_CPU ) / ( ARS + ARS ) ) ) * ( Min( ( FirstVNF_CPU * CRS ) ,( RRS * FirstVNF_Mem_Server ) ) - ( Min( CRS ,FirstVNF_RAM ) - ( MRS / DDR ) ) ) ) ) + Min( ARS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( CS / MUC ) ) * ( ( RCSe + MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Const,PN ),Min( FirstVNF_Mem ,AMS ) ) - ( ( FirstVNF_CPU * ACS ) + Min( ARS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + CS ) * ( ( ( MLU / RCSe ) * ( MUR - DS ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( Max( BR,RRS ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( Max( MLU,CS ) + ( MLU * MUM ) ) ,Min( ( DS - MUM ) ,Max( CS,MUR ) ) ) ,( MLU * MUR ) )", "obj1": 0.9945255474452555, "obj2": 0.0028037592374542037}, {"determining": "( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS * FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Max( MLU,CS ) + ( MLU * MUM ) ) ,Min( ( DS - MUM ) ,Max( CS,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS + MDR ) - ( ACS + AMS ) ) - Min( Min( MDR ,FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - RRSe ) ,MUC ) / Min( ( MUM / RMSe ) ,DS ) )", "obj1": 0.9507299270072993, "obj2": 0.06019072912763777}, {"determining": "( ( Min( ACS ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) * ( ( ACS / FirstVNF_Mem_Server ) - ( ( BR * BR ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( MUR * MUM ) ) + ( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) * ( ( ACS / FirstVNF_Mem_Server ) - ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( MUR * MUR ) ) + ( MUC / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) + ( Const * BR ) ) / ( ( AMS + DDR ) - ( BR / AMS ) ) ) - Max( Max( AMS,DDR ),CRS ) )", "choosing": "( Max( ( MUR + ( Max( MUC,MUM ) + CS ) ),Min( ( DS + ( RCSe * MUM ) ) ,( RMSe - DS ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( AMS / ARS ) ) - Max( Max( AMS,DDR ),CRS ) )", "choosing": "Max( ( MUR + ( Max( MUC,MUM ) + CS ) ),Min( ( DS + ( RCSe * MUM ) ) ,( RMSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem_Server / ACS ) + ( Const * BR ) ) / ( ( AMS + DDR ) - ( BR / AMS ) ) ),Max( ( Min( FirstVNF_Mem_Server ,MDR ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( DS / RCSe ) * MUR ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6274172088009421}, {"determining": "( ( PN + ( ( ACS - FirstVNF_RAM_Server ) - ( ACS + MRS ) ) ) - Max( FirstVNF_Mem_Server,ACS ) )", "choosing": "( ( CS + RCSe ) + ( CS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Max( RRS,Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( MLU + Max( Min( ( MLU + RCSe ) ,RRSe ),RMSe ) )", "obj1": 0.5748175182481752, "obj2": 0.3818620128079921}, {"determining": "Max( Max( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) + ( MDR / ACS ) ),( ( FirstVNF_RAM + MDR ) * Min( RRS ,PN ) ) ),( ( Min( BR ,BR ) + ( MRS * Const ) ) - ( DDR - ( MRS - CRS ) ) ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * Max( Min( ( DS / MLU ) ,Min( DS ,MUC ) ),( ( RMSe * MUR ) * ( MUM * MUC ) ) ) ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.5498641040904221}, {"determining": "( ( FirstVNF_Mem - PN ) - ( FirstVNF_RAM + DDR ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.9708029197080292, "obj2": 0.025978253132870825}, {"determining": "( ( PN + FirstVNF_CPU ) - Min( ( FirstVNF_RAM_Server - ACS ) ,FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS * CS ),Min( RMSe ,DS ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "Min( ( ARS - AMS ) ,( Const * Min( FirstVNF_Mem ,MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.5328467153284672, "obj2": 0.46924727469243727}, {"determining": "( ( FirstVNF_CPU_Server * ( MDR - ACS ) ) - Min( Min( MDR ,FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MLU - RRSe ) ,MUC ) / ( RMSe * MLU ) )", "obj1": 0.948905109489051, "obj2": 0.06211846162752526}, {"determining": "( ( ( ACS + MDR ) - ( ACS + AMS ) ) - Min( Min( MDR ,FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RRSe - RCSe ),Min( RRSe ,MUR ) ) / ( Min( RCSe ,RMSe ) * ( RMSe * MLU ) ) )", "obj1": 0.9507299270072993, "obj2": 0.06019072912763777}, {"determining": "( ( ( ACS + MDR ) - ( ACS + AMS ) ) - Min( Min( MDR ,FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RMSe ,DS ) - Min( RRSe ,RRSe ) ) ,( RRSe / MUM ) )", "obj1": 0.9507299270072993, "obj2": 0.06019072912763777}, {"determining": "( ( CRS + AMS ) / ( Min( FirstVNF_Mem ,MRS ) - MRS ) )", "choosing": "Min( ( ( CS - MUM ) * ( MUM + MUR ) ) ,( Max( MUM,MLU ) - ( MUR + RCSe ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Min( Const ,Max( FirstVNF_RAM,FirstVNF_Mem ) ) / ( ACS - ( ( DDR / FirstVNF_Mem_Server ) - ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,AMS ) + ( FirstVNF_Mem_Server * CRS ) ) ) ) )", "choosing": "Min( ( MUM + MUC ) ,( CS * ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ) )", "obj1": 0.5656934306569343, "obj2": 0.42048885211277687}, {"determining": "( ( FirstVNF_Mem - PN ) - Min( ARS ,DDR ) )", "choosing": "Max( Min( ( DS / MLU ) ,Min( MUM ,MUC ) ),( ( RMSe * MUR ) * ( MUM - MUC ) ) )", "obj1": 0.5602189781021898, "obj2": 0.45380254137195175}, {"determining": "( Min( ( FirstVNF_Mem - ( ( MRS / ( FirstVNF_CPU / ACS ) ) / ( DDR * ( BR / RRS ) ) ) ) ,AMS ) + ( FirstVNF_Mem_Server * CRS ) )", "choosing": "Max( Min( Min( Min( RCSe ,RRSe ) ,( MLU / MUC ) ) ,Max( Max( MUM,RRSe ),Min( MUC ,RCSe ) ) ),CS )", "obj1": 0.6204379562043796, "obj2": 0.3700268952437056}, {"determining": "( ( MDR / ( FirstVNF_CPU / ACS ) ) / ( DDR / ( BR / RRS ) ) )", "choosing": "Max( Min( ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ,Max( Max( MUM,RRSe ),Min( MUC ,RCSe ) ) ),( Max( ( DS / RMSe ),( RMSe * MLU ) ) * Min( Max( CS,CS ) ,( RRSe - RRSe ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.48847868684486984}, {"determining": "( ( ( ACS + MDR ) - ( ACS + AMS ) ) - Min( Min( MDR ,FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUM + MUC ) ,( CS * DS ) )", "obj1": 0.9507299270072993, "obj2": 0.06019072912763777}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( MUC + MUR ) ,( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RRSe / MUC ) ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( RRS,ACS ),Max( BR,RRS ) ) )", "choosing": "Min( Max( Max( MLU,CS ),( MLU * MUM ) ) ,Min( ( DS - MUM ) ,Max( CS,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.4700855525272268}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + ( MDR - MDR ) )", "choosing": "( Max( RMSe,DS ) - Min( ( ( MUM + MUC ) - ( CS / RMSe ) ) ,( RRSe / MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.5413350636822255}, {"determining": "Max( ( BR + FirstVNF_CPU ),FirstVNF_Mem_Server )", "choosing": "( ( Min( RCSe ,CS ) - ( MLU * RCSe ) ) - ( Max( ( DS / RMSe ),( RMSe * MLU ) ) / ( MLU + MLU ) ) )", "obj1": 0.4981751824817518, "obj2": 0.4873350755621749}, {"determining": "Max( ( BR + FirstVNF_CPU ),( ACS * Const ) )", "choosing": "Max( Min( ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ,Max( Max( MUM,RRSe ),Min( MUC ,RCSe ) ) ),( Max( ( DS / RMSe ),( RMSe * MLU ) ) * Min( Max( CS,CS ) ,( RRSe - RRSe ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.48847868684486984}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) - ( ( CRS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( Min( ACS ,MDR ) - ( FirstVNF_CPU_Server / ( ( PN + FirstVNF_CPU ) - Min( ( FirstVNF_RAM - FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ) * ( ( ACS / FirstVNF_Mem_Server ) - ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( ( MUR * DS ) ,( RMSe / MUC ) ),( MUR * MUR ) ) + ( CS + RRSe ) )", "obj1": 0.9671532846715328, "obj2": 0.050963328436949513}, {"determining": "( ( AMS - BR ) / ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( ( DS / RCSe ) * MUR ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6274172088009421}, {"determining": "( Min( Const ,Max( FirstVNF_RAM,FirstVNF_Mem ) ) / ( ACS - ( ( DDR / FirstVNF_Mem_Server ) - Min( ( ( FirstVNF_RAM * ACS ) / ( DDR - FirstVNF_Mem_Server ) ) ,Min( ( MRS + FirstVNF_Mem ) ,( Const - FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( MUR ,( CS * DS ) )", "obj1": 0.9178832116788321, "obj2": 0.07060169436137267}], "3": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + MDR ) - ( PN * RRS ) )", "choosing": "( ( RMSe * CS ) - ( MUC - RMSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Const ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( AMS / MRS ),( MRS / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / RRSe ) + ( RCSe + MUM ) ) * Min( Min( RCSe ,RMSe ) ,( RMSe * RCSe ) ) ) ,( ( Min( MLU ,DS ) + Min( RRSe ,RCSe ) ) * ( ( MUR - RMSe ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5516686976173807}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,DS ) - Max( ( ( MUM + MUC ) - ( CS / RMSe ) ),( RRSe + MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.5413350636822255}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Max( RRS,Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( MLU + Max( Min( ( MLU + RCSe ) ,RRSe ),RMSe ) )", "obj1": 0.5748175182481752, "obj2": 0.3818620128079921}, {"determining": "( ( FirstVNF_Mem - PN ) - ( FirstVNF_RAM + DDR ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.9708029197080292, "obj2": 0.025978253132870825}, {"determining": "( ( PN + FirstVNF_CPU ) - Min( ( FirstVNF_RAM_Server - ACS ) ,FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS * CS ),Min( RMSe ,DS ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "Min( ( ARS - AMS ) ,( Const * Min( FirstVNF_Mem ,MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.5328467153284672, "obj2": 0.46924727469243727}, {"determining": "( ( CRS + AMS ) / ( Min( FirstVNF_Mem ,MRS ) - MRS ) )", "choosing": "Min( ( ( CS - MUM ) * ( MUM + MUR ) ) ,( Max( MUM,MLU ) - ( MUR + RCSe ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Min( ( FirstVNF_Mem - ( ( MRS / ( FirstVNF_CPU / ACS ) ) / ( DDR * ( BR / RRS ) ) ) ) ,AMS ) + ( FirstVNF_Mem_Server * CRS ) )", "choosing": "Max( Min( Min( Min( RCSe ,RRSe ) ,( MLU / MUC ) ) ,Max( Max( MUM,RRSe ),Min( MUC ,RCSe ) ) ),CS )", "obj1": 0.6204379562043796, "obj2": 0.3700268952437056}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( MUC + MUR ) ,( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RRSe / MUC ) ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( RRS,ACS ),Max( BR,RRS ) ) )", "choosing": "Min( Max( Max( MLU,CS ),( MLU * MUM ) ) ,Min( ( DS - MUM ) ,Max( CS,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.4700855525272268}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + ( MDR - MDR ) )", "choosing": "( Max( RMSe,DS ) - Min( ( ( MUM + MUC ) - ( CS / RMSe ) ) ,( RRSe / MLU ) ) )", "obj1": 0.47992700729927007, "obj2": 0.5413350636822255}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) - ( ( CRS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,DS ) - Max( ( ( MUM + MUC ) - ( CS / RMSe ) ),( RRSe + MLU ) ) )", "obj1": 0.5437956204379562, "obj2": 0.45273350118636285}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( MUM - RCSe ) ,MUR ) ,( MLU * MUR ) )", "obj1": 0.5437956204379562, "obj2": 0.45273350118636285}, {"determining": "( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( MUM - RCSe ) * MUR ) ,( MLU * MUR ) )", "obj1": 0.4653284671532847, "obj2": 0.5629648093675881}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Max( RRS,( MDR + FirstVNF_RAM ) ) )", "choosing": "( MLU + Max( Min( ( MLU + RCSe ) ,MUR ),RMSe ) )", "obj1": 0.5748175182481752, "obj2": 0.3818620128079921}, {"determining": "( ( FirstVNF_Mem - PN ) - ( FirstVNF_RAM + Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( Min( Min( MLU ,RMSe ) ,Max( CS,MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.11413564913018813}, {"determining": "( ( FirstVNF_Mem - PN ) - ( FirstVNF_RAM + DDR ) )", "choosing": "Min( ( MUM + MUC ) ,( CS * DS ) )", "obj1": 0.9708029197080292, "obj2": 0.025978253132870825}, {"determining": "( Min( ( FirstVNF_Mem - ( ( MDR / ( FirstVNF_CPU / ACS ) ) / ( DDR / ( BR / RRS ) ) ) ) ,AMS ) + ( FirstVNF_Mem_Server * CRS ) )", "choosing": "Max( Min( ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ,Max( Max( MUM,RRSe ),Min( MUC ,RCSe ) ) ),CS )", "obj1": 0.6204379562043796, "obj2": 0.3700268952437056}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) - Max( RRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( MLU + ( MUR - MUM ) )", "obj1": 0.6295620437956204, "obj2": 0.30918835562492075}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_RAM ) ) )", "choosing": "( ( MLU - ( MUR * DS ) ) + ( CS / RMSe ) )", "obj1": 0.6240875912408759, "obj2": 0.3407218642337911}, {"determining": "Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "Max( Min( ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ,Min( ( MUC + MUM ) ,( RCSe / MUC ) ) ),( Max( ( DS / RMSe ),( RMSe * MLU ) ) * Min( Max( CS,CS ) ,( RRSe - RRSe ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4828580783596033}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) - Max( RRS,( MDR + FirstVNF_RAM ) ) )", "choosing": "( MLU + Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) )", "obj1": 0.5638686131386861, "obj2": 0.3900011721645146}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Max( RRS,( MDR + FirstVNF_RAM ) ) )", "choosing": "( MLU + Max( Min( ( MLU + RCSe ) ,MUR ),RMSe ) )", "obj1": 0.5638686131386861, "obj2": 0.3900011721645146}, {"determining": "( ( PN + FirstVNF_CPU ) - ( ( ( ( AMS * Const ) - Min( AMS ,AMS ) ) - PN ) - FirstVNF_CPU ) )", "choosing": "( ( MLU + ( MUM / MUC ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) * Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( PN + FirstVNF_CPU ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / CS ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( RMSe,DS ) - Min( ( ( MUM + MUC ) - ( CS / RMSe ) ) ,( RRSe - ( RRSe + MLU ) ) ) )", "obj1": 0.47992700729927007, "obj2": 0.5413350636822255}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( Max( Min( ( MUR * DS ) ,( RMSe / MUC ) ),( MUR * MUR ) ) + ( CS / RRSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) - ( ( CRS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( AMS - BR ) / BR )", "choosing": "( Max( MUR,CS ) + Max( ( DS - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( PN + FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( ( DS / RCSe ) * MUR ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "Max( ( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS * FirstVNF_Mem_Server ) ) ) ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( MUC + MUR ) ,( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * MLU ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5912048042244024}, {"determining": "Min( ( Min( FirstVNF_Mem ,MRS ) - MRS ) ,( Const * Min( FirstVNF_Mem ,MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,( CS - MUM ) ) ) ,MUC ) )", "obj1": 0.5328467153284672, "obj2": 0.46924727469243727}, {"determining": "Min( ( ARS - AMS ) ,( Const * Min( FirstVNF_Mem ,MRS ) ) )", "choosing": "Min( ( ( CS - MUM ) * ( MUM + MUR ) ) ,( Max( MUM,MLU ) - ( MUR + RCSe ) ) )", "obj1": 0.5328467153284672, "obj2": 0.46924727469243727}, {"determining": "( ( Const + CRS ) / ( Min( FirstVNF_Mem ,MRS ) - MRS ) )", "choosing": "( Min( ( RCSe / MLU ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( FirstVNF_Mem - Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM + DDR ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.7591240875912408, "obj2": 0.19997529213027118}, {"determining": "( ( FirstVNF_Mem - PN ) - ( FirstVNF_RAM + DDR ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.9708029197080292, "obj2": 0.025978253132870825}, {"determining": "( ( ( ACS + MDR ) - ( ( PN + FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) ) - Min( Min( MDR ,FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUM + ( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) ,( CS * DS ) )", "obj1": 0.8138686131386861, "obj2": 0.17256231181062057}, {"determining": "( ( PN - FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUM ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( ( Const / FirstVNF_RAM ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( Max( ( RRSe - RCSe ),Min( RRSe ,MUR ) ) - RCSe ) * MUR ) ,( MLU * MUR ) )", "obj1": 0.4653284671532847, "obj2": 0.5629648093675881}, {"determining": "( Min( ( FirstVNF_Mem - ( ( MDR / ( FirstVNF_CPU / ACS ) ) / ( DDR / ( BR / RRS ) ) ) ) ,AMS ) + ( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( MUM / MUC ) + Max( RMSe,DS ) )", "obj1": 0.6204379562043796, "obj2": 0.3700268952437056}, {"determining": "( ( AMS * FirstVNF_CPU_Server ) + Min( AMS ,AMS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Min( ( FirstVNF_Mem - ( ( PN + FirstVNF_CPU ) / ( DDR / ( BR / RRS ) ) ) ) ,AMS ) + ( FirstVNF_Mem_Server * CRS ) )", "choosing": "Max( Min( ( Min( ( MUR * DS ) ,( RMSe / MUC ) ) + ( DS / MUC ) ) ,Max( Max( MUM,RRSe ),Min( MUC ,RCSe ) ) ),CS )", "obj1": 0.9434306569343066, "obj2": 0.043920492181312595}, {"determining": "( ( PN + FirstVNF_CPU ) - Min( ( FirstVNF_RAM_Server - ACS ) ,FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS * CS ),Min( RMSe ,DS ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( FirstVNF_Mem + MDR ) - ( PN * RRS ) )", "choosing": "( ( CS - CS ) - ( MUC - RMSe ) )", "obj1": 0.4927007299270073, "obj2": 0.47155788145961464}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( AMS / MRS ),( MRS / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / RRSe ) + ( RCSe + MUM ) ) * Min( Min( RCSe ,RMSe ) ,( RMSe * RCSe ) ) ) ,( ( Min( MLU ,DS ) + Min( RRSe ,RCSe ) ) * ( ( MUR - RMSe ) * ( RCSe + MUM ) ) ) )", "obj1": 0.4726277372262774, "obj2": 0.5481306210860735}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Const ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( AMS / MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( RCSe / ( CS / MUC ) ) * ( ( RCSe + MUM ) / RMSe ) )", "obj1": 0.4708029197080292, "obj2": 0.5516686976173807}, {"determining": "Min( ( BR / ( Const - MDR ) ) ,( MRS / ( MDR * ARS ) ) )", "choosing": "( ( Max( ( Max( ( ( Min( MUC ,MUC ) * ( MLU / DS ) ) + ( ( MUC / RMSe ) - Min( RRSe ,RRSe ) ) ),( ( ( RMSe + DS ) - ( MUR / MLU ) ) + ( Min( RRSe ,RRSe ) - ( MUC - MUR ) ) ) ) + Min( ( ( ( RMSe - MUC ) / Max( RMSe,MLU ) ) * ( Min( CS ,RRSe ) / ( MUC / RCSe ) ) ) ,Max( Max( ( RMSe + RRSe ),( MUM * MUR ) ),( Max( MUC,MUM ) * Min( RMSe ,RMSe ) ) ) ) ),( Min( Max( ( Max( RCSe,MLU ) - Min( RRSe ,RRSe ) ),Max( ( MUC / MLU ),( RMSe / RCSe ) ) ) ,( ( Max( MUC,MUR ) - ( CS * RMSe ) ) / ( ( CS * RCSe ) * ( DS / MUR ) ) ) ) + ( Min( ( ( RRSe - MUC ) - ( RRSe * MUR ) ) ,( ( MUM - RCSe ) - Max( MUM,DS ) ) ) * ( ( Min( DS ,MUC ) * ( CS * MUC ) ) - ( Max( MUM,MLU ) * ( MLU + RCSe ) ) ) ) ) ) / ( ( Max( ( ( ( MUC * MUM ) + ( CS / MLU ) ) + Max( ( DS + MUR ),( DS - RMSe ) ) ),Min( ( ( RCSe / DS ) * Min( RRSe ,RCSe ) ) ,Min( ( RRSe * MUR ) ,( CS / MLU ) ) ) ) - ( ( ( ( RCSe - MUM ) * ( MUM / CS ) ) * Max( ( RMSe + MUM ),( RRSe * CS ) ) ) - ( ( ( RRSe * MUM ) * ( MUR - MUC ) ) - Min( Max( RCSe,RMSe ) ,( MUR + MUR ) ) ) ) ) - ( ( Max( ( ( DS / MLU ) - ( CS + CS ) ),( Max( CS,RRSe ) + Max( CS,MUM ) ) ) * ( Max( ( RRSe + CS ),( MUM - RRSe ) ) / Min( ( RCSe * RRSe ) ,( RCSe * DS ) ) ) ) - ( ( Max( ( CS + RMSe ),Max( MLU,MLU ) ) * ( ( RRSe * MUR ) - ( DS + MUC ) ) ) * ( Min( Max( MLU,RMSe ) ,( RRSe / MLU ) ) * Min( ( DS / RRSe ) ,Max( MUR,MUR ) ) ) ) ) ) ) * ( ( Min( ( ( ( Max( MUR,DS ) / ( MLU / MUR ) ) - Min( ( CS / RCSe ) ,Max( MUC,RMSe ) ) ) + ( Max( ( MUM + MUC ),( MUR / RRSe ) ) - Min( Max( DS,CS ) ,( MUC / RMSe ) ) ) ) ,( Max( ( Max( RRSe,CS ) - ( MUM * RMSe ) ),Min( Min( DS ,MUC ) ,Min( MUR ,CS ) ) ) * ( ( ( MLU + DS ) / ( MUR + RMSe ) ) * ( ( RRSe + DS ) / Min( RMSe ,MUC ) ) ) ) ) * ( ( ( ( ( RRSe * MUC ) * ( CS * RMSe ) ) / ( Min( DS ,CS ) - Max( MUR,DS ) ) ) + ( ( Max( RRSe,RRSe ) / ( RMSe / MUM ) ) - Max( ( RMSe + CS ),( RRSe / MUR ) ) ) ) + ( ( Max( ( DS * RMSe ),Max( CS,MUC ) ) / ( ( CS - MLU ) / ( RCSe + MUC ) ) ) * ( Min( ( RRSe + MUC ) ,Min( MLU ,RCSe ) ) - ( ( CS + RRSe ) * Min( MUR ,RRSe ) ) ) ) ) ) / Max( Max( ( ( ( ( MUR + MUC ) * ( RCSe - RCSe ) ) - Max( Max( RCSe,RCSe ),( DS - RMSe ) ) ) * ( ( Min( MLU ,RCSe ) - Min( DS ,RRSe ) ) + Max( ( RRSe + RRSe ),Min( MUC ,MUM ) ) ) ),( ( ( ( RMSe - RCSe ) + ( CS * MLU ) ) - ( Min( RRSe ,MUR ) - Max( MUM,MUM ) ) ) + ( Min( Min( RMSe ,CS ) ,Min( MUM ,MLU ) ) / ( Min( MUM ,RMSe ) * Min( MLU ,DS ) ) ) ) ),( ( ( ( Max( DS,MLU ) / ( DS / MUR ) ) - ( Min( RCSe ,MLU ) * Max( MUM,RCSe ) ) ) + Max( Min( ( MUC + MUC ) ,Max( MUC,RCSe ) ),( ( RCSe + RCSe ) - Min( RCSe ,DS ) ) ) ) - Min( ( ( ( DS / MUM ) / ( MUR + MLU ) ) - ( Max( RMSe,CS ) * ( CS - MUC ) ) ) ,( Max( Max( RMSe,MUC ),Min( MUC ,RRSe ) ) / ( ( MUR - RRSe ) * ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.885036496350365, "obj2": 0.0609472661940953}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU * MUM ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4343065693430657, "obj2": 0.602005494885357}], "4": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( RRS,ACS ),Max( BR,RRS ) ) )", "choosing": "Min( Max( Max( MLU,CS ),( MLU * MUM ) ) ,Min( ( DS - MUM ) ,Max( CS,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.4700855525272268}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,DS ) - Max( ( ( MUM + MUC ) - ( CS / RMSe ) ),( RRSe + MLU ) ) )", "obj1": 0.5437956204379562, "obj2": 0.45273350118636285}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( MUM - RCSe ) ,MUR ) ,( MLU * MUR ) )", "obj1": 0.5437956204379562, "obj2": 0.45273350118636285}, {"determining": "( ( FirstVNF_Mem - PN ) - ( FirstVNF_RAM + Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( Min( Min( MLU ,RMSe ) ,Max( CS,MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.11413564913018813}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) - Max( RRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) )", "choosing": "( MLU + ( MUR - MUM ) )", "obj1": 0.6295620437956204, "obj2": 0.30918835562492075}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Max( FirstVNF_CPU,( FirstVNF_CPU + FirstVNF_RAM ) ) )", "choosing": "( ( MLU - ( MUR * DS ) ) + ( CS / RMSe ) )", "obj1": 0.6240875912408759, "obj2": 0.3407218642337911}, {"determining": "Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "Max( Min( ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ,Min( ( MUC + MUM ) ,( RCSe / MUC ) ) ),( Max( ( DS / RMSe ),( RMSe * MLU ) ) * Min( Max( CS,CS ) ,( RRSe - RRSe ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4828580783596033}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + RRS ) ) - Max( RRS,( MDR + FirstVNF_RAM ) ) )", "choosing": "( MLU + Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) )", "obj1": 0.5638686131386861, "obj2": 0.3900011721645146}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Max( RRS,( MDR + FirstVNF_RAM ) ) )", "choosing": "( MLU + Max( Min( ( MLU + RCSe ) ,MUR ),RMSe ) )", "obj1": 0.5638686131386861, "obj2": 0.3900011721645146}, {"determining": "( ( AMS - BR ) / BR )", "choosing": "( Max( MUR,CS ) + Max( ( DS - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( FirstVNF_Mem - Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM + DDR ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( MUC,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.7591240875912408, "obj2": 0.19997529213027118}, {"determining": "( ( ( ACS + MDR ) - ( ( PN + FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) ) - Min( Min( MDR ,FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUM + ( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) ,( CS * DS ) )", "obj1": 0.8138686131386861, "obj2": 0.17256231181062057}, {"determining": "( ( FirstVNF_Mem + MDR ) - ( PN * RRS ) )", "choosing": "( ( CS - CS ) - ( MUC - RMSe ) )", "obj1": 0.4927007299270073, "obj2": 0.47155788145961464}, {"determining": "Min( ( BR / ( Const - MDR ) ) ,( MRS / ( MDR * ARS ) ) )", "choosing": "( ( Max( ( Max( ( ( Min( MUC ,MUC ) * ( MLU / DS ) ) + ( ( MUC / RMSe ) - Min( RRSe ,RRSe ) ) ),( ( ( RMSe + DS ) - ( MUR / MLU ) ) + ( Min( RRSe ,RRSe ) - ( MUC - MUR ) ) ) ) + Min( ( ( ( RMSe - MUC ) / Max( RMSe,MLU ) ) * ( Min( CS ,RRSe ) / ( MUC / RCSe ) ) ) ,Max( Max( ( RMSe + RRSe ),( MUM * MUR ) ),( Max( MUC,MUM ) * Min( RMSe ,RMSe ) ) ) ) ),( Min( Max( ( Max( RCSe,MLU ) - Min( RRSe ,RRSe ) ),Max( ( MUC / MLU ),( RMSe / RCSe ) ) ) ,( ( Max( MUC,MUR ) - ( CS * RMSe ) ) / ( ( CS * RCSe ) * ( DS / MUR ) ) ) ) + ( Min( ( ( RRSe - MUC ) - ( RRSe * MUR ) ) ,( ( MUM - RCSe ) - Max( MUM,DS ) ) ) * ( ( Min( DS ,MUC ) * ( CS * MUC ) ) - ( Max( MUM,MLU ) * ( MLU + RCSe ) ) ) ) ) ) / ( ( Max( ( ( ( MUC * MUM ) + ( CS / MLU ) ) + Max( ( DS + MUR ),( DS - RMSe ) ) ),Min( ( ( RCSe / DS ) * Min( RRSe ,RCSe ) ) ,Min( ( RRSe * MUR ) ,( CS / MLU ) ) ) ) - ( ( ( ( RCSe - MUM ) * ( MUM / CS ) ) * Max( ( RMSe + MUM ),( RRSe * CS ) ) ) - ( ( ( RRSe * MUM ) * ( MUR - MUC ) ) - Min( Max( RCSe,RMSe ) ,( MUR + MUR ) ) ) ) ) - ( ( Max( ( ( DS / MLU ) - ( CS + CS ) ),( Max( CS,RRSe ) + Max( CS,MUM ) ) ) * ( Max( ( RRSe + CS ),( MUM - RRSe ) ) / Min( ( RCSe * RRSe ) ,( RCSe * DS ) ) ) ) - ( ( Max( ( CS + RMSe ),Max( MLU,MLU ) ) * ( ( RRSe * MUR ) - ( DS + MUC ) ) ) * ( Min( Max( MLU,RMSe ) ,( RRSe / MLU ) ) * Min( ( DS / RRSe ) ,Max( MUR,MUR ) ) ) ) ) ) ) * ( ( Min( ( ( ( Max( MUR,DS ) / ( MLU / MUR ) ) - Min( ( CS / RCSe ) ,Max( MUC,RMSe ) ) ) + ( Max( ( MUM + MUC ),( MUR / RRSe ) ) - Min( Max( DS,CS ) ,( MUC / RMSe ) ) ) ) ,( Max( ( Max( RRSe,CS ) - ( MUM * RMSe ) ),Min( Min( DS ,MUC ) ,Min( MUR ,CS ) ) ) * ( ( ( MLU + DS ) / ( MUR + RMSe ) ) * ( ( RRSe + DS ) / Min( RMSe ,MUC ) ) ) ) ) * ( ( ( ( ( RRSe * MUC ) * ( CS * RMSe ) ) / ( Min( DS ,CS ) - Max( MUR,DS ) ) ) + ( ( Max( RRSe,RRSe ) / ( RMSe / MUM ) ) - Max( ( RMSe + CS ),( RRSe / MUR ) ) ) ) + ( ( Max( ( DS * RMSe ),Max( CS,MUC ) ) / ( ( CS - MLU ) / ( RCSe + MUC ) ) ) * ( Min( ( RRSe + MUC ) ,Min( MLU ,RCSe ) ) - ( ( CS + RRSe ) * Min( MUR ,RRSe ) ) ) ) ) ) / Max( Max( ( ( ( ( MUR + MUC ) * ( RCSe - RCSe ) ) - Max( Max( RCSe,RCSe ),( DS - RMSe ) ) ) * ( ( Min( MLU ,RCSe ) - Min( DS ,RRSe ) ) + Max( ( RRSe + RRSe ),Min( MUC ,MUM ) ) ) ),( ( ( ( RMSe - RCSe ) + ( CS * MLU ) ) - ( Min( RRSe ,MUR ) - Max( MUM,MUM ) ) ) + ( Min( Min( RMSe ,CS ) ,Min( MUM ,MLU ) ) / ( Min( MUM ,RMSe ) * Min( MLU ,DS ) ) ) ) ),( ( ( ( Max( DS,MLU ) / ( DS / MUR ) ) - ( Min( RCSe ,MLU ) * Max( MUM,RCSe ) ) ) + Max( Min( ( MUC + MUC ) ,Max( MUC,RCSe ) ),( ( RCSe + RCSe ) - Min( RCSe ,DS ) ) ) ) - Min( ( ( ( DS / MUM ) / ( MUR + MLU ) ) - ( Max( RMSe,CS ) * ( CS - MUC ) ) ) ,( Max( Max( RMSe,MUC ),Min( MUC ,RRSe ) ) / ( ( MUR - RRSe ) * ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.885036496350365, "obj2": 0.0609472661940953}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - ( RRS * ( MDR + FirstVNF_RAM ) ) )", "choosing": "Min( ( ( CS - MUM ) * ( MUM + MUR ) ) ,( Max( MUM,MLU ) - ( MUR + RMSe ) ) )", "obj1": 0.5766423357664233, "obj2": 0.3638527785226121}, {"determining": "( ( FirstVNF_Mem - Min( Min( MDR ,FirstVNF_RAM ) ,( FirstVNF_Mem - DDR ) ) ) - ( FirstVNF_RAM + DDR ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.7591240875912408, "obj2": 0.19997529213027118}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + MDR ) ) - Max( RRS,( MDR + FirstVNF_RAM ) ) )", "choosing": "( MLU + Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) )", "obj1": 0.583941605839416, "obj2": 0.3479219741363562}, {"determining": "( ( CRS + AMS ) / ( Min( ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ,MRS ) - MRS ) )", "choosing": "( Min( ( Min( ( DS - MUM ) ,Max( CS,MUR ) ) / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.46897810218978103, "obj2": 0.5448517985129159}, {"determining": "( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,DDR ) ) )", "choosing": "Min( ( Max( MLU,CS ) + ( MLU * MUM ) ) ,Min( ( DS - MUM ) ,( CS / MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.4700855525272268}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / RRSe ) + ( RCSe + MUM ) ) * Min( Min( RCSe ,RMSe ) ,( RMSe * RCSe ) ) ) ,( ( Min( MLU ,DS ) + Min( RRSe ,RCSe ) ) * Min( MUR ,MUM ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Max( RRS,( MDR + FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.551094890510949, "obj2": 0.39331410676639056}, {"determining": "( FirstVNF_Mem - Max( RRS,( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( MUR * MUM ) ) + ( CS / RCSe ) )", "obj1": 0.7627737226277372, "obj2": 0.1989531534487946}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Max( RRS,( MDR + FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.6240875912408759, "obj2": 0.3407218642337911}, {"determining": "( ( PN + FirstVNF_CPU ) - Min( ( FirstVNF_RAM_Server - ACS ) ,FirstVNF_CPU ) )", "choosing": "Max( Min( ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ,Min( ( MUC + MUM ) ,( RCSe / MUC ) ) ),( Max( ( DS / RMSe ),( RMSe * MLU ) ) * Min( Max( CS,CS ) ,( RRSe - RRSe ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4828580783596033}, {"determining": "( Min( ( ( ( ( Min( Max( MDR,DDR ) ,Min( MRS ,BR ) ) / ( ( ARS * FirstVNF_CPU ) + Min( AMS ,Const ) ) ) * ( ( ( Const * FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,AMS ) ) - ( ( AMS + FirstVNF_RAM ) + Min( DDR ,FirstVNF_CPU_Server ) ) ) ) / ( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,Max( MDR,CRS ) ) / ( ( RRS / FirstVNF_RAM ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) * Min( Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( FirstVNF_Mem / MRS ) ) ,Max( ( AMS * FirstVNF_CPU_Server ),Max( ACS,RRS ) ) ) ) ) / Min( ( ( ( ( ARS - FirstVNF_CPU_Server ) / ( DDR + FirstVNF_RAM_Server ) ) - ( ( ARS / AMS ) * Max( FirstVNF_Mem,MRS ) ) ) - ( ( ( FirstVNF_RAM * AMS ) + Min( RRS ,FirstVNF_Mem ) ) + ( ( PN + Const ) - ( DDR + ACS ) ) ) ) ,( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - Max( Const,ARS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - Min( CRS ,PN ) ) ) + Max( ( Max( MDR,DDR ) - Max( ACS,FirstVNF_CPU_Server ) ),Max( Max( CRS,FirstVNF_RAM_Server ),( ACS - FirstVNF_CPU ) ) ) ) ) ) ,( ( ( ( ( ( DDR / AMS ) * ( DDR - FirstVNF_CPU ) ) * ( ( RRS - ARS ) / ( Const - FirstVNF_RAM_Server ) ) ) + ( ( Min( Const ,BR ) - Min( Const ,FirstVNF_Mem_Server ) ) - ( ( ACS / PN ) * Max( FirstVNF_Mem,DDR ) ) ) ) * ( ( Max( ( FirstVNF_CPU - FirstVNF_CPU_Server ),( BR * Const ) ) * ( Max( FirstVNF_Mem_Server,ACS ) - ( MRS - ARS ) ) ) - Max( Min( ( ACS - PN ) ,Max( FirstVNF_CPU_Server,RRS ) ),Max( ( FirstVNF_RAM / FirstVNF_Mem ),( BR + MRS ) ) ) ) ) * ( ( ( Max( Max( RRS,Const ),( FirstVNF_CPU / PN ) ) * ( Min( RRS ,ARS ) + Max( MDR,PN ) ) ) - Min( Min( ( FirstVNF_CPU_Server / CRS ) ,Max( FirstVNF_RAM_Server,DDR ) ) ,( ( MRS + FirstVNF_Mem_Server ) * ( BR / BR ) ) ) ) + ( ( Max( ( Const - FirstVNF_Mem ),( MDR * Const ) ) + ( ( MDR * FirstVNF_Mem_Server ) + ( ARS - ACS ) ) ) / ( ( ( FirstVNF_RAM + AMS ) + ( Const - BR ) ) - ( ( MRS - FirstVNF_RAM ) * Min( ARS ,AMS ) ) ) ) ) ) ) / ( ( ( Max( ( ( Min( BR ,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * ( ( Const * BR ) / Min( MRS ,ARS ) ) ),( Max( ( DDR * RRS ),( Const / FirstVNF_CPU_Server ) ) + ( ( ACS + MRS ) - ( PN - FirstVNF_Mem_Server ) ) ) ) - ( ( Max( ( FirstVNF_RAM + MDR ),Max( ARS,RRS ) ) / Max( ( FirstVNF_RAM_Server / ACS ),( Const / PN ) ) ) + Min( Min( Min( AMS ,FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,ARS ) ) ,Max( ( PN / FirstVNF_RAM_Server ),Min( RRS ,Const ) ) ) ) ) - ( Max( ( ( Min( ACS ,ACS ) - Max( FirstVNF_Mem,ACS ) ) + ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * Min( ACS ,CRS ) ) ),( ( ( RRS - ACS ) + ( MDR / FirstVNF_Mem_Server ) ) * ( ( MRS - FirstVNF_RAM_Server ) / ( Const * BR ) ) ) ) + ( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) + ( FirstVNF_CPU - RRS ) ) - ( ( Const / FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) + ( ( Min( Const ,CRS ) + ( ARS + RRS ) ) / ( Min( FirstVNF_Mem ,RRS ) + Min( FirstVNF_CPU ,RRS ) ) ) ) ) ) + Max( ( Min( Max( ( ( FirstVNF_Mem - AMS ) / Max( FirstVNF_Mem_Server,BR ) ),( ( RRS / MRS ) + Min( ARS ,ACS ) ) ) ,( ( ( FirstVNF_CPU_Server * AMS ) - ( Const + ARS ) ) - ( ( FirstVNF_RAM_Server * MDR ) * Max( DDR,DDR ) ) ) ) + ( Min( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),Max( DDR,FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_Mem ) / Max( FirstVNF_Mem_Server,BR ) ) ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) - Min( RRS ,CRS ) ) + ( ( BR - FirstVNF_CPU ) / ( FirstVNF_CPU + ARS ) ) ) ) ),( Max( ( ( ( FirstVNF_Mem + ACS ) + ( FirstVNF_RAM + PN ) ) / ( Max( FirstVNF_Mem_Server,MDR ) - Min( MRS ,PN ) ) ),( ( ( BR - ACS ) - ( MRS * AMS ) ) + Max( ( Const / PN ),Min( MDR ,MDR ) ) ) ) / ( ( ( Min( DDR ,FirstVNF_RAM_Server ) + ( ACS * BR ) ) / ( ( MDR - ACS ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( Max( ( FirstVNF_RAM * FirstVNF_RAM ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) / ( Max( RRS,FirstVNF_RAM ) * Min( RRS ,Const ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( ( ( ( Min( Max( DS,RCSe ) ,( MUC / DS ) ) - Min( ( DS + MUC ) ,( MUR + MUR ) ) ) + ( ( ( CS - MUR ) / ( CS / MLU ) ) / Min( ( RRSe - DS ) ,( MUM + RCSe ) ) ) ) - Max( ( ( ( RRSe / MUM ) * ( MUM + MLU ) ) + ( ( MUR + DS ) * Max( MLU,MUC ) ) ),Max( ( ( DS * RMSe ) * ( RCSe * MUC ) ),Min( ( MUM + MUM ) ,Min( DS ,RRSe ) ) ) ) ) * Min( ( ( ( Max( MUR,MUR ) * ( DS / RMSe ) ) - ( ( DS * RRSe ) + Max( CS,CS ) ) ) / ( Min( Min( DS ,MUR ) ,( MUR - RCSe ) ) * ( ( RRSe - MUC ) / Max( MUC,CS ) ) ) ) ,( ( Max( ( MUR + MLU ),( RRSe / DS ) ) - ( Min( MLU ,MUR ) - ( MUR + RMSe ) ) ) / ( ( ( RCSe - RCSe ) + ( DS / CS ) ) + ( ( RMSe * MLU ) - ( DS - CS ) ) ) ) ) ),Max( ( ( Min( ( ( RRSe * DS ) + Max( RRSe,MUC ) ) ,( Min( MUR ,MLU ) * ( MUC / MUC ) ) ) - ( ( ( MUM - MUC ) * ( RRSe - DS ) ) * Max( Min( MLU ,MUC ),( MUC - MLU ) ) ) ) + ( Max( ( Max( RMSe,DS ) / ( MUM * RMSe ) ),Min( Min( MUC ,CS ) ,( MLU + MLU ) ) ) * ( ( ( MLU / MUM ) - Max( MUM,MUC ) ) / Min( ( MUM + RRSe ) ,( MUR * DS ) ) ) ) ),Max( ( ( ( ( MUM * MUR ) - ( RMSe / CS ) ) / ( ( MLU - DS ) * ( RRSe + MUR ) ) ) + Min( ( ( RMSe + RCSe ) / ( MUC - RMSe ) ) ,( Max( MLU,MUM ) - ( MLU / MUR ) ) ) ),( Min( ( Max( MUR,DS ) - ( MUR + MUC ) ) ,( ( MLU / RCSe ) + ( MUM + MLU ) ) ) / Max( ( ( CS * MUC ) * Min( RMSe ,MLU ) ),( ( CS / CS ) * ( MUM / RCSe ) ) ) ) ) ) ) ,( ( Max( ( ( Max( ( MLU / RRSe ),( CS - RRSe ) ) * ( ( MUR + RCSe ) - Min( DS ,RCSe ) ) ) * Max( ( ( MUM + RCSe ) / ( RRSe / MLU ) ),Max( Max( RMSe,MUC ),Max( MUM,RMSe ) ) ) ),( Min( ( Min( MUR ,MLU ) * Min( MLU ,DS ) ) ,( ( MUC * MLU ) * Max( MUM,RMSe ) ) ) - ( Min( ( RMSe - RMSe ) ,Max( MUC,DS ) ) - Max( ( MLU + MUR ),( MLU + RMSe ) ) ) ) ) * Min( ( ( ( ( RCSe * RRSe ) * Min( RMSe ,RMSe ) ) * ( ( RRSe * MUC ) - Max( MUR,MUR ) ) ) / Max( ( ( MUC / RMSe ) / Max( MUM,DS ) ),Min( Min( RCSe ,MUM ) ,( DS * CS ) ) ) ) ,Min( ( Max( ( MUR * CS ),( RMSe - MUC ) ) - ( ( MUC - RMSe ) - Min( MUR ,RRSe ) ) ) ,( Max( ( RRSe + MUC ),Min( MUC ,DS ) ) * ( ( RCSe * RMSe ) - Min( RMSe ,MLU ) ) ) ) ) ) * Min( ( ( Min( ( ( DS + MLU ) * ( RMSe + DS ) ) ,Min( Min( CS ,MLU ) ,Max( CS,RMSe ) ) ) * ( ( ( MUM - MUM ) / ( MUM + MUR ) ) - ( ( DS - MUM ) + ( MUM + MUM ) ) ) ) - ( ( ( Max( RMSe,CS ) / ( MUR + MLU ) ) + Min( ( DS * RMSe ) ,( DS / CS ) ) ) * ( ( ( RRSe + MLU ) - Max( MUR,RCSe ) ) + Max( ( MUC / RCSe ),( CS - RCSe ) ) ) ) ) ,( ( Max( Max( Min( RCSe ,CS ),( MUR + DS ) ),( ( RRSe - DS ) * Max( MLU,DS ) ) ) - ( Min( Max( MUR,MLU ) ,Min( DS ,RRSe ) ) + Max( ( RCSe + MLU ),( DS - RRSe ) ) ) ) - ( ( ( Min( RCSe ,MUR ) - Min( DS ,MUC ) ) + ( ( RMSe - RMSe ) + Max( MUC,MUM ) ) ) + ( ( ( RMSe - MUM ) / ( CS * RMSe ) ) / Max( Max( RMSe,CS ),( CS * RRSe ) ) ) ) ) ) ) )", "obj1": 0.7043795620437956, "obj2": 0.2582978846731574}, {"determining": "Max( ( ( Const * Min( FirstVNF_Mem ,MRS ) ) + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "Max( Min( ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ,Min( ( MUC + MUM ) ,( RCSe / MUC ) ) ),( Max( ( DS / RMSe ),( RMSe * MLU ) ) * Min( Max( CS,CS ) ,( RRSe - ( Min( ( RCSe / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) ) ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4828580783596033}, {"determining": "Min( ( ARS - AMS ) ,( Const * Min( FirstVNF_Mem ,MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.48905109489051096, "obj2": 0.4828580783596033}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) - Max( RRS,( MDR + FirstVNF_RAM ) ) )", "choosing": "( MLU + Max( Min( ( MLU + RCSe ) ,MUR ),RMSe ) )", "obj1": 0.5711678832116789, "obj2": 0.3764995389695253}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) - ( ( CRS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( MUC + MUR ) ,( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RRSe / MUC ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( MDR ,FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( RMSe,DS ) - Min( ( ( MUM + MUC ) - ( Min( ( Min( MLU ,RCSe ) / Max( CS,MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) / RMSe ) ) ,( RRSe - MLU ) ) )", "obj1": 0.4781021897810219, "obj2": 0.5322305154769337}, {"determining": "( ( FirstVNF_Mem - PN ) - ( FirstVNF_RAM + Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUM ) ) ,( ( MUM + MUC ) - ( CS / RMSe ) ) ) )", "obj1": 0.8686131386861314, "obj2": 0.11413564913018813}, {"determining": "( ( FirstVNF_Mem - PN ) - ( FirstVNF_RAM + Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,DS ) - Min( ( ( MUM + MUC ) - ( CS / RMSe ) ) ,( RRSe - MLU ) ) )", "obj1": 0.8686131386861314, "obj2": 0.11413564913018813}, {"determining": "( ( FirstVNF_Mem - PN ) / ( PN + Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( Min( Min( MLU ,RMSe ) ,Max( CS,MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5573185248053822}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) - ( ( CRS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,DS ) - Max( ( ( MUM + MUC ) - ( CS / RMSe ) ),( RRSe + MLU ) ) )", "obj1": 0.5437956204379562, "obj2": 0.45273350118636285}, {"determining": "( ( AMS - BR ) / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( Max( MUR,MLU ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "Max( ( ( AMS - BR ) + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "Max( Min( ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ,Min( ( MUC + MUM ) ,( RCSe / MUC ) ) ),( Max( ( DS / RMSe ),( RMSe * MLU ) ) * Min( Max( CS,Max( ( MLU - CS ),RCSe ) ) ,( RRSe - RRSe ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.49277494658962967}, {"determining": "Max( ( FirstVNF_Mem + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUC,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "Max( Min( ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ,Min( ( MUC + MUM ) ,( RCSe / MUC ) ) ),( Max( ( DS / RMSe ),( RMSe * MLU ) ) * Min( Max( CS,CS ) ,( RRSe - RRSe ) ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4828580783596033}, {"determining": "( Min( ( FirstVNF_Mem - ( ( MRS / ( FirstVNF_CPU / ACS ) ) / ( DDR * ( BR / RRS ) ) ) ) ,AMS ) + ( FirstVNF_Mem_Server * CRS ) )", "choosing": "Max( Min( Min( Min( RCSe ,RRSe ) ,( MLU / MUC ) ) ,Max( Max( MUM,RRSe ),Min( MUC ,RCSe ) ) ),CS )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "( Max( FirstVNF_RAM_Server,( CRS + MDR ) ) - Max( RRS,( MDR + FirstVNF_RAM ) ) )", "choosing": "( MLU + Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) )", "obj1": 0.5638686131386861, "obj2": 0.3900011721645146}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Min( ( ARS - AMS ) ,( Const * Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * DS ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( ( CRS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( Min( MLU ,MLU ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( DS - RCSe ) ,MUR ) ,( MLU * MUR ) )", "obj1": 0.5437956204379562, "obj2": 0.45273350118636285}, {"determining": "( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR - ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( MUM - RCSe ) * MUR ) ,( MLU * MUR ) )", "obj1": 0.45255474452554745, "obj2": 0.5738593811629391}, {"determining": "Max( ( Max( FirstVNF_Mem,( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS * FirstVNF_Mem_Server ) ) ) ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( MUC + RRSe ) ,( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * MLU ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5696585985777944}, {"determining": "Min( ( ARS - AMS ) ,CRS )", "choosing": "( Min( ( RCSe / RRSe ) ,( Min( MUR ,MUM ) - ( Min( ( ( CS - MUM ) * ( MUM + MUR ) ) ,( Max( MUM,MLU ) - ( MUR + RCSe ) ) ) - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.5456204379562044, "obj2": 0.4422622534992281}, {"determining": "( Max( FirstVNF_RAM_Server,CRS ) - Max( FirstVNF_CPU,( MDR + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) + ( CS / RRSe ) )", "obj1": 0.6496350364963503, "obj2": 0.30548578925628195}], "5": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( RRS,ACS ),Max( BR,RRS ) ) )", "choosing": "Min( Max( Max( MLU,CS ),( MLU * MUM ) ) ,Min( ( DS - MUM ) ,Max( CS,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.4700855525272268}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( DS,DS ) - Max( ( ( MUM + MUC ) - ( CS / RMSe ) ),( RRSe + MLU ) ) )", "obj1": 0.5437956204379562, "obj2": 0.45273350118636285}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( MUM - RCSe ) ,MUR ) ,( MLU * MUR ) )", "obj1": 0.5437956204379562, "obj2": 0.45273350118636285}, {"determining": "( ( AMS - BR ) / BR )", "choosing": "( Max( MUR,CS ) + Max( ( DS - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( CRS + AMS ) / ( Min( ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ,MRS ) - MRS ) )", "choosing": "( Min( ( Min( ( DS - MUM ) ,Max( CS,MUR ) ) / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.46897810218978103, "obj2": 0.5448517985129159}, {"determining": "( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,DDR ) ) )", "choosing": "Min( ( Max( MLU,CS ) + ( MLU * MUM ) ) ,Min( ( DS - MUM ) ,( CS / MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.4700855525272268}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / RRSe ) + ( RCSe + MUM ) ) * Min( Min( RCSe ,RMSe ) ,( RMSe * RCSe ) ) ) ,( ( Min( MLU ,DS ) + Min( RRSe ,RCSe ) ) * Min( MUR ,MUM ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) - ( ( CRS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( MUC + MUR ) ,( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RRSe / MUC ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( MDR ,FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( RMSe,DS ) - Min( ( ( MUM + MUC ) - ( Min( ( Min( MLU ,RCSe ) / Max( CS,MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) / RMSe ) ) ,( RRSe - MLU ) ) )", "obj1": 0.4781021897810219, "obj2": 0.5322305154769337}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) - ( ( CRS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,DS ) - Max( ( ( MUM + MUC ) - ( CS / RMSe ) ),( RRSe + MLU ) ) )", "obj1": 0.5437956204379562, "obj2": 0.45273350118636285}, {"determining": "( ( AMS - BR ) / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( Max( MUR,MLU ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "Max( ( ( AMS - BR ) + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "Max( Min( ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ,Min( ( MUC + MUM ) ,( RCSe / MUC ) ) ),( Max( ( DS / RMSe ),( RMSe * MLU ) ) * Min( Max( CS,Max( ( MLU - CS ),RCSe ) ) ,( RRSe - RRSe ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.49277494658962967}, {"determining": "Max( ( FirstVNF_Mem + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUC,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Min( ( FirstVNF_Mem - ( ( MRS / ( FirstVNF_CPU / ACS ) ) / ( DDR * ( BR / RRS ) ) ) ) ,AMS ) + ( FirstVNF_Mem_Server * CRS ) )", "choosing": "Max( Min( Min( Min( RCSe ,RRSe ) ,( MLU / MUC ) ) ,Max( Max( MUM,RRSe ),Min( MUC ,RCSe ) ) ),CS )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Min( ( ARS - AMS ) ,( Const * Min( FirstVNF_Mem ,ACS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * DS ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * FirstVNF_Mem ) - ( ( CRS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( Min( MLU ,MLU ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR - ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( MUM - RCSe ) * MUR ) ,( MLU * MUR ) )", "obj1": 0.45255474452554745, "obj2": 0.5738593811629391}, {"determining": "Max( ( Max( FirstVNF_Mem,( FirstVNF_CPU - FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS * FirstVNF_Mem_Server ) ) ) ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( MUC + RRSe ) ,( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * MLU ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5696585985777944}, {"determining": "( RRS + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,DS ) - Max( ( ( ( MUM + MUR ) + MUC ) - ( CS / RMSe ) ),( RRSe + MLU ) ) )", "obj1": 0.48905109489051096, "obj2": 0.4811194731363496}, {"determining": "( ( CRS + Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) ) ) / ( Min( ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ,MRS ) - MRS ) )", "choosing": "( Min( ( Min( ( DS - MUM ) ,Max( RCSe,MUR ) ) / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.46897810218978103, "obj2": 0.5448517985129159}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( MUC + MUR ) ,( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RRSe / MUC ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( CRS + AMS ) / ( Min( ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( Min( ( Min( ( DS - MUM ) ,Max( CS,MUR ) ) - RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - MLU ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.46897810218978103, "obj2": 0.5448517985129159}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) - ( ( CRS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "( ( Const - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,DS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( Const / FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) )", "choosing": "Min( ( Min( MLU ,CS ) + ( MLU * MUM ) ) ,Min( ( DS - MUM ) ,Max( CS,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.4700855525272268}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( PN,Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "Min( RCSe ,( ( Min( MLU ,DS ) + Min( RRSe ,RCSe ) ) * Min( MUR ,MUM ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUM ) ) ,( ( MUM + MUC ) - ( CS / RMSe ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,DDR ) ) )", "choosing": "Min( ( Max( MLU,CS ) + ( MLU * MUM ) ) ,Min( ( DS - MUM ) ,( CS / MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.4700855525272268}, {"determining": "( Max( FirstVNF_CPU,( MDR + FirstVNF_RAM ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "( Max( CS,CS ) - ( ( Max( MLU,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) + ( CS / RRSe ) ) * RMSe ) )", "obj1": 0.4927007299270073, "obj2": 0.47125286621757245}, {"determining": "Min( ( ARS - MRS ) ,( Const * Min( FirstVNF_RAM_Server ,MRS ) ) )", "choosing": "( Min( DS ,( ( MUR * MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),( MLU - MLU ) ) ,MUC ) )", "obj1": 0.5072992700729927, "obj2": 0.46558180308025265}, {"determining": "Min( ( ARS - AMS ) ,( Const * Min( FirstVNF_Mem ,MRS ) ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( ( Min( MLU ,RMSe ) / Max( CS,MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5486298130597234}, {"determining": "( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( Min( FirstVNF_Mem ,MRS ),ACS ),Max( BR,RRS ) ) )", "choosing": "Min( ( Max( MLU,CS ) + ( RMSe * RRSe ) ) ,Min( ( DS - MUM ) ,Max( CS,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.4700855525272268}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( MDR ,FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( MLU + Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) )", "obj1": 0.4781021897810219, "obj2": 0.5322305154769337}, {"determining": "( ( Max( RRS,( MDR + FirstVNF_RAM ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6199942077729538}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( ( AMS - BR ) + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( MLU + Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) )", "obj1": 0.48722627737226276, "obj2": 0.49277494658962967}, {"determining": "( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5738593811629391}, {"determining": "( FirstVNF_Mem - Max( RRS,( ARS - AMS ) ) )", "choosing": "( Max( MLU,( MUR * MUM ) ) + Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "Min( ( ARS - AMS ) ,( Const * Min( FirstVNF_Mem ,MRS ) ) )", "choosing": "( Min( ( RCSe / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( MDR ,FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "Max( Min( ( Min( RCSe ,RRSe ) + ( DS / MUC ) ) ,Min( ( MUC + MUM ) ,( RCSe / MUC ) ) ),( Max( ( DS / RMSe ),( RMSe * MLU ) ) * Min( Max( CS,CS ) ,( RRSe - RRSe ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.5322305154769337}, {"determining": "( FirstVNF_Mem_Server - ( ( CRS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Max( DS,DS ) / Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) )", "obj1": 0.5054744525547445, "obj2": 0.46681193896873646}, {"determining": "( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),RRS ) )", "choosing": "Min( ( MLU + ( MUR - MUM ) ) ,Min( ( DS - MUM ) ,Max( CS,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.4700855525272268}, {"determining": "( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) )", "choosing": "Min( ( Max( MLU,CS ) + ( MLU * MUM ) ) ,Min( ( DS - MUM ) ,Max( CS,MUR ) ) )", "obj1": 0.5018248175182481, "obj2": 0.4700855525272268}], "6": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) / BR )", "choosing": "( Max( MUR,CS ) + Max( ( DS - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( CRS + AMS ) / ( Min( ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ,MRS ) - MRS ) )", "choosing": "( Min( ( Min( ( DS - MUM ) ,Max( CS,MUR ) ) / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.46897810218978103, "obj2": 0.5448517985129159}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / RRSe ) + ( RCSe + MUM ) ) * Min( Min( RCSe ,RMSe ) ,( RMSe * RCSe ) ) ) ,( ( Min( MLU ,DS ) + Min( RRSe ,RCSe ) ) * Min( MUR ,MUM ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( MUC + MUR ) ,( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RRSe / MUC ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( AMS - BR ) / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( Max( MUR,MLU ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "Max( ( FirstVNF_Mem + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUC,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR - ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( MUM - RCSe ) * MUR ) ,( MLU * MUR ) )", "obj1": 0.45255474452554745, "obj2": 0.5738593811629391}, {"determining": "( ( CRS + Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) ) ) / ( Min( ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ,MRS ) - MRS ) )", "choosing": "( Min( ( Min( ( DS - MUM ) ,Max( RCSe,MUR ) ) / RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.46897810218978103, "obj2": 0.5448517985129159}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "Min( ( MUC + MUR ) ,( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RRSe / MUC ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( CRS + AMS ) / ( Min( ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) )", "choosing": "( Min( ( Min( ( DS - MUM ) ,Max( CS,MUR ) ) - RRSe ) ,( Min( MUR ,MUM ) - ( RCSe - MLU ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.46897810218978103, "obj2": 0.5448517985129159}, {"determining": "( ( Const - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,DS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( PN,Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "Min( RCSe ,( ( Min( MLU ,DS ) + Min( RRSe ,RCSe ) ) * Min( MUR ,MUM ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUM ) ) ,( ( MUM + MUC ) - ( CS / RMSe ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "Min( ( ARS - AMS ) ,( Const * Min( FirstVNF_Mem ,MRS ) ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( ( Min( MLU ,RMSe ) / Max( CS,MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.46715328467153283, "obj2": 0.5486298130597234}, {"determining": "( ( Max( RRS,( MDR + FirstVNF_RAM ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6199942077729538}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5738593811629391}, {"determining": "( ( Const * Min( FirstVNF_Mem ,MRS ) ) / ( Min( ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ,MRS ) - MRS ) )", "choosing": "( Min( ( Min( ( DS - MUM ) ,Max( RCSe,MUR ) ) / RRSe ) ,( MLU - ( RCSe - CS ) ) ) / Min( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) ,MUC ) )", "obj1": 0.46897810218978103, "obj2": 0.5448517985129159}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.568754630536154}, {"determining": "( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5738593811629391}, {"determining": "( ( Max( ( ( AMS - BR ) / FirstVNF_CPU ),( MDR + FirstVNF_RAM ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Max( ( MLU - CS ),RCSe ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6199942077729538}, {"determining": "( ( Max( RRS,( MDR + FirstVNF_RAM ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6199942077729538}, {"determining": "( FirstVNF_Mem_Server / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( ( Min( Max( MUR,CS ) ,Min( RCSe ,RCSe ) ) / Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.41788321167883213, "obj2": 0.6413989590605755}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,MLU ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,( AMS - BR ) ) )", "choosing": "Min( ( MUC + MUR ) ,( ( MLU + Max( MUR,CS ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RRSe / MUC ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "Min( ( MUC + MUR ) ,( ( MLU + Max( ( DS * CS ),Min( RMSe ,MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RRSe / MUC ) ) ) ) )", "obj1": 0.4251824817518248, "obj2": 0.5842151078354548}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( Min( Min( Min( RCSe ,RRSe ) ,( MLU / MUC ) ) ,Max( Max( MUM,RRSe ),Min( MUC ,RCSe ) ) ),CS )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( PN,Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "( Max( FirstVNF_Mem,Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( RCSe ,( ( Min( MLU ,DS ) + Min( RRSe ,RCSe ) ) * Min( MUR ,MUM ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5738593811629391}, {"determining": "( Max( BR,RRS ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( ( Max( MLU,CS ) + ( MLU * MUM ) ) ,Min( ( DS - MUM ) ,Max( CS,MUR ) ) ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.568754630536154}, {"determining": "( Max( FirstVNF_Mem,Max( RRS,FirstVNF_Mem ) ) * ( ( ARS - ( DDR + ARS ) ) + ( BR + ( CRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( Max( MLU,CS ) + Max( MLU,MUM ) ) ,Min( ( DS - MUM ) ,Max( CS,MUR ) ) )", "obj1": 0.45255474452554745, "obj2": 0.5738593811629391}, {"determining": "( ( AMS - ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) - Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * RCSe ),Max( MLU,MLU ) ) - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( ( RRSe * MLU ) + ( MUM / MLU ) ) * ( ( MUM + RCSe ) - ( DS - RMSe ) ) ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUM ) ) ,( ( MUM + MUC ) - ( CS / RMSe ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( RCSe + RCSe )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUM,MLU ) + RCSe )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( ( MLU + Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( MLU + Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( ( MUR - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4653284671532847, "obj2": 0.5625204737589247}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS / MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MUR * RRSe ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}], "7": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) / BR )", "choosing": "( Max( MUR,CS ) + Max( ( DS - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( Max( MUR,MLU ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "Max( ( FirstVNF_Mem + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUC,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Const - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,DS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( RRS,( MDR + FirstVNF_RAM ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( MUR,MLU ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( Min( Min( Min( RCSe ,RRSe ) ,( MLU / MUC ) ) ,Max( Max( MUM,RRSe ),Min( MUC ,RCSe ) ) ),CS )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( ( AMS - ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) - Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * RCSe ),Max( MLU,MLU ) ) - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( RCSe + RCSe )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUM,MLU ) + RCSe )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( ( MLU + Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( MLU + Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS / MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MUR * RRSe ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( Min( Min( Min( RCSe ,RRSe ) ,( MLU / MUC ) ) ,Max( Max( MUM,RRSe ),Min( MUC ,RCSe ) ) ),CS )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( Max( Min( PN ,PN ),Min( FirstVNF_RAM_Server ,BR ) ) / MDR )", "choosing": "( Min( ( MLU + CS ) ,( MUC / RRSe ) ) + RCSe )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( MRS ,BR ) )", "choosing": "( Max( DS,MLU ) + RCSe )", "obj1": 0.4215328467153285, "obj2": 0.6256456536129744}, {"determining": "( ( ( AMS - BR ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),Max( ( MLU - CS ),RCSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - MDR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,RCSe ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ARS - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,CS ) + Max( ( MLU - CS ),CS ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ARS / BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU * MUR ),DS ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( Max( ( PN / Const ),( MDR + Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + ( ( MLU - RRSe ) / Min( ( Min( MUM ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( FirstVNF_Mem - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( RMSe ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR - FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - RMSe ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS / DDR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Min( MLU ,CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) / MRS )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - ( MLU - Max( ( DS * MUM ),Min( RMSe ,MUR ) ) ) ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RMSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,CS ) + ( RMSe / RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - MLU ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS / BR ) / FirstVNF_RAM )", "choosing": "( Max( MUR,MUM ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( ( MLU - CS ),RCSe ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( Const + FirstVNF_CPU ),BR )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),Max( ( MLU - CS ),DS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR + FirstVNF_CPU ),ACS )", "choosing": "( Max( MUC,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( RCSe + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( ARS,( MDR + FirstVNF_RAM ) ) - DDR ) / FirstVNF_RAM_Server )", "choosing": "( Max( MUR,CS ) + Max( ( ( ( RMSe * RRSe ) / ( DS - MLU ) ) - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR + ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ),FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * RRSe ),Max( MLU,MLU ) ) - CS ),RCSe ) )", "obj1": 0.41788321167883213, "obj2": 0.6374806960665759}, {"determining": "( ( AMS - MRS ) / ARS )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),MUC ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( PN - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}], "8": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) / BR )", "choosing": "( Max( MUR,CS ) + Max( ( DS - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( FirstVNF_Mem + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUC,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Const - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,DS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( RRS,( MDR + FirstVNF_RAM ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) - Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * RCSe ),Max( MLU,MLU ) ) - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUM,MLU ) + RCSe )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS / MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MUR * RRSe ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ( AMS - BR ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),Max( ( MLU - CS ),RCSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - MDR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,RCSe ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ARS - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,CS ) + Max( ( MLU - CS ),CS ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ARS / BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU * MUR ),DS ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( Max( ( PN / Const ),( MDR + Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + ( ( MLU - RRSe ) / Min( ( Min( MUM ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( FirstVNF_Mem - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( RMSe ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR - FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - RMSe ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS / DDR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Min( MLU ,CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) / MRS )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - ( MLU - Max( ( DS * MUM ),Min( RMSe ,MUR ) ) ) ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RMSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,CS ) + ( RMSe / RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - MLU ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS / BR ) / FirstVNF_RAM )", "choosing": "( Max( MUR,MUM ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( ( MLU - CS ),RCSe ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( Const + FirstVNF_CPU ),BR )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),Max( ( MLU - CS ),DS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR + FirstVNF_CPU ),ACS )", "choosing": "( Max( MUC,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( RCSe + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( ARS,( MDR + FirstVNF_RAM ) ) - DDR ) / FirstVNF_RAM_Server )", "choosing": "( Max( MUR,CS ) + Max( ( ( ( RMSe * RRSe ) / ( DS - MLU ) ) - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - MRS ) / ARS )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),MUC ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( PN - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - RRS ) / FirstVNF_CPU )", "choosing": "( Max( ( MLU + Max( Min( Max( MLU,( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ( PN - Max( ( FirstVNF_CPU / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ( AMS - BR ) ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / MDR ) ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,CS ) + Max( MUR,MLU ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - FirstVNF_CPU ) / MDR )", "choosing": "( ( MUR * MLU ) + RCSe )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) ) / MDR )", "choosing": "( Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) + RCSe )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( RRS,( MDR + FirstVNF_RAM ) ) - AMS ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( Max( RMSe,RRSe ),Max( MLU,MLU ) ) - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( ARS,( MDR + FirstVNF_RAM ) ) - DDR ) / FirstVNF_RAM_Server )", "choosing": "( Max( MUR,CS ) + Max( ( ( ( RMSe * RRSe ) / ( DS - MLU ) ) - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( BR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.629662138591785}, {"determining": "Max( ( BR + MDR ),FirstVNF_CPU )", "choosing": "( MLU + Max( ( MLU - RCSe ),RCSe ) )", "obj1": 0.41605839416058393, "obj2": 0.6335499012989717}, {"determining": "( ( DDR - BR ) / Max( ( BR + ( AMS - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( MUR,MLU ) + Max( MLU,RMSe ) )", "obj1": 0.41605839416058393, "obj2": 0.6335499012989717}], "9": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) / BR )", "choosing": "( Max( MUR,CS ) + Max( ( DS - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( FirstVNF_Mem + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUC,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Const - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,DS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( RRS,( MDR + FirstVNF_RAM ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) - Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * RCSe ),Max( MLU,MLU ) ) - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUM,MLU ) + RCSe )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS / MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MUR * RRSe ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ( AMS - BR ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),Max( ( MLU - CS ),RCSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - MDR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,RCSe ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ARS - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,CS ) + Max( ( MLU - CS ),CS ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ARS / BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU * MUR ),DS ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( Max( ( PN / Const ),( MDR + Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + ( ( MLU - RRSe ) / Min( ( Min( MUM ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( FirstVNF_Mem - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( RMSe ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR - FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - RMSe ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS / DDR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Min( MLU ,CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) / MRS )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - ( MLU - Max( ( DS * MUM ),Min( RMSe ,MUR ) ) ) ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RMSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,CS ) + ( RMSe / RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - MLU ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS / BR ) / FirstVNF_RAM )", "choosing": "( Max( MUR,MUM ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( ( MLU - CS ),RCSe ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( Const + FirstVNF_CPU ),BR )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),Max( ( MLU - CS ),DS ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR + FirstVNF_CPU ),ACS )", "choosing": "( Max( MUC,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( RCSe + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( ARS,( MDR + FirstVNF_RAM ) ) - DDR ) / FirstVNF_RAM_Server )", "choosing": "( Max( MUR,CS ) + Max( ( ( ( RMSe * RRSe ) / ( DS - MLU ) ) - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - MRS ) / ARS )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),MUC ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( PN - ( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( Const ,FirstVNF_RAM_Server ) ) * Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - RRS ) / FirstVNF_CPU )", "choosing": "( Max( ( MLU + Max( Min( Max( MLU,( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ( PN - Max( ( FirstVNF_CPU / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ( AMS - BR ) ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / MDR ) ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,CS ) + Max( MUR,MLU ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( BR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.629662138591785}, {"determining": "( ( AMS / BR ) / Max( ( BR + ( Min( ( PN / Const ) ,( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) ,Min( ( MLU + RCSe ) ,( MUC - RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( BR + MDR ),FirstVNF_CPU )", "choosing": "( MLU + Max( ( MLU - RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( ( AMS - AMS ) - BR ) / FirstVNF_CPU )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - ( Max( ( MLU - CS ),RCSe ) - Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.629662138591785}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.629662138591785}], "10": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) / BR )", "choosing": "( Max( MUR,CS ) + Max( ( DS - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( FirstVNF_Mem + FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUC,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Const - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,DS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( RRS,( MDR + FirstVNF_RAM ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,( RCSe / RCSe ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,Min( Const ,FirstVNF_RAM_Server ) ) - Max( Max( MRS,ACS ),Max( BR,RRS ) ) ) ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * RCSe ),Max( MLU,MLU ) ) - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUM,MLU ) + RCSe )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS / MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MUR * RRSe ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ( AMS - BR ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),Max( ( MLU - CS ),RCSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - MDR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,RCSe ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ARS - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,CS ) + Max( ( MLU - CS ),CS ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ARS / BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU * MUR ),DS ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( Max( Max( ( PN / Const ),( MDR + Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + ( ( MLU - RRSe ) / Min( ( Min( MUM ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( FirstVNF_Mem - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( RMSe ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( ( BR - FirstVNF_CPU ),FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - RMSe ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS / DDR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Min( MLU ,CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) / MRS )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - ( MLU - Max( ( DS * MUM ),Min( RMSe ,MUR ) ) ) ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "Max( Min( PN ,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RMSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( AMS - BR ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) )", "choosing": "( Max( MUR,CS ) + ( RMSe / RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - MLU ),RCSe ) )", "obj1": 0.4197080291970803, "obj2": 0.6260578501637367}, {"determining": "( ( ( PN - Max( ( FirstVNF_CPU / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( BR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.629662138591785}, {"determining": "( ( AMS / BR ) / Max( ( BR + ( Min( ( PN / Const ) ,( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) ,Min( ( MLU + RCSe ) ,( MUC - RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( BR + MDR ),FirstVNF_CPU )", "choosing": "( MLU + Max( ( MLU - RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( ( AMS - AMS ) - BR ) / FirstVNF_CPU )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - ( Max( ( MLU - CS ),RCSe ) - Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.629662138591785}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.629662138591785}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( FirstVNF_Mem_Server,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( BR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.41788321167883213, "obj2": 0.629662138591785}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( AMS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Min( MRS ,MDR ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MUC + ( ( RMSe - CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RRSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( RMSe,DS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MUM ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( PN - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,ARS ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( ( MLU - RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),CS ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( BR + FirstVNF_CPU ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.629662138591785}, {"determining": "Max( ( FirstVNF_RAM_Server + FirstVNF_CPU ),BR )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC + RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.629662138591785}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.629662138591785}, {"determining": "( ( Max( ARS,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) - DDR ) / FirstVNF_RAM_Server )", "choosing": "( Max( MUR,CS ) + Max( ( RCSe - CS ),RCSe ) )", "obj1": 0.41605839416058393, "obj2": 0.6329415195853959}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.629662138591785}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "Max( ( BR + MDR ),FirstVNF_CPU )", "choosing": "( MLU + Max( ( MLU - RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "Max( ( BR + MDR ),( ( AMS - BR ) / PN ) )", "choosing": "( MLU + ( MLU - ( MLU + Max( ( DS * MUM ),Max( RMSe,MUR ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) / PN )", "choosing": "( MLU + Max( ( MLU - RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}], "11": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Max( ( FirstVNF_CPU / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS / BR ) / Max( ( BR + ( Min( ( PN / Const ) ,( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) ,Min( ( MLU + RCSe ) ,( MUC - RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( BR + MDR ),FirstVNF_CPU )", "choosing": "( MLU + Max( ( MLU - RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( FirstVNF_Mem_Server,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( AMS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Min( MRS ,MDR ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MUC + ( ( RMSe - CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RRSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( RMSe,DS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MUM ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( PN - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,ARS ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( ( MLU - RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),CS ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( ARS,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) - DDR ) / FirstVNF_RAM_Server )", "choosing": "( Max( MUR,CS ) + Max( ( RCSe - CS ),RCSe ) )", "obj1": 0.41605839416058393, "obj2": 0.6329415195853959}, {"determining": "Max( Min( PN ,FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( Max( MUR,CS ) + Max( ( MLU - CS ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "Max( ( BR + MDR ),FirstVNF_CPU )", "choosing": "( MLU + Max( ( MLU - RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "Max( ( BR + MDR ),( ( AMS - BR ) / PN ) )", "choosing": "( MLU + ( MLU - ( MLU + Max( ( DS * MUM ),Max( RMSe,MUR ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) / PN )", "choosing": "( MLU + Max( ( MLU - RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "Max( ( BR + MDR ),FirstVNF_CPU )", "choosing": "( MLU + ( MLU - ( MLU + Max( ( DS * MUM ),Min( RMSe ,CS ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / FirstVNF_Mem )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( BR + MDR ),( ( AMS - FirstVNF_Mem_Server ) / PN ) )", "choosing": "( MLU + ( MLU - ( MLU + Max( ( DS * MUM ),Min( RMSe ,MUR ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( ARS - FirstVNF_Mem_Server ) / RRS )", "choosing": "( Max( MUR,DS ) + Max( ( Max( ( RMSe * MUR ),Max( MLU,MLU ) ) + CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( BR + MDR ),( ( AMS - BR ) / PN ) )", "choosing": "( MLU + ( MLU - ( MLU + Max( ( DS * MUM ),Max( RMSe,MUR ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( BR * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,Max( ( DS * MUM ),Max( RMSe,MUR ) ) ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "Max( ( BR + MDR ),( Min( AMS ,BR ) / PN ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "Max( ( BR + BR ),BR )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( RRS ,( BR + FirstVNF_CPU ) ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / ( Max( MUR,RMSe ) + MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,DDR ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Min( ( RMSe * MUR ) ,Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - PN ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR - MUC ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - FirstVNF_Mem_Server ) / Max( ( ARS / FirstVNF_CPU_Server ),( MDR / AMS ) ) )", "choosing": "( MLU + Max( ( MLU + RCSe ),CS ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( BR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( MLU + Max( ( MLU - RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),( BR + FirstVNF_CPU ) ) ) - BR ) / DDR )", "choosing": "( Max( CS,RMSe ) + Max( MUR,MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + MDR ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,( ( BR / FirstVNF_CPU ) - DDR ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MUR * MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( FirstVNF_Mem + BR ),FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( ( RRS / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) )", "choosing": "( Max( MLU,RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / ( Max( MUR,MLU ) + RCSe ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ( ( AMS - BR ) / FirstVNF_CPU ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,Max( CS,CS ) ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,RRSe ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( CS / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_RAM_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( ( Max( MUR,RMSe ) / MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( ( MUR / CS ) + Max( Max( CS,DS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR + AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Max( Max( MUR,CS ),MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( Min( MDR ,FirstVNF_CPU ),BR )", "choosing": "( ( DS - CS ) + Max( ( DS - CS ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS - BR ) / BR )", "choosing": "( Max( MUR,CS ) + Max( ( DS - CS ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / PN )", "choosing": "( MLU + Max( ( MLU - RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}], "12": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Max( ( FirstVNF_CPU / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS / BR ) / Max( ( BR + ( Min( ( PN / Const ) ,( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) ,Min( ( MLU + RCSe ) ,( MUC - RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( FirstVNF_Mem_Server,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( AMS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Min( MRS ,MDR ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MUC + ( ( RMSe - CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RRSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( RMSe,DS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MUM ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( PN - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,ARS ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( ( MLU - RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),CS ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / FirstVNF_Mem )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ARS - FirstVNF_Mem_Server ) / RRS )", "choosing": "( Max( MUR,DS ) + Max( ( Max( ( RMSe * MUR ),Max( MLU,MLU ) ) + CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( BR + BR ),BR )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( RRS ,( BR + FirstVNF_CPU ) ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / ( Max( MUR,RMSe ) + MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,DDR ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Min( ( RMSe * MUR ) ,Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - PN ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR - MUC ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),( BR + FirstVNF_CPU ) ) ) - BR ) / DDR )", "choosing": "( Max( CS,RMSe ) + Max( MUR,MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + MDR ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,( ( BR / FirstVNF_CPU ) - DDR ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MUR * MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( FirstVNF_Mem + BR ),FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( ( RRS / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) )", "choosing": "( Max( MLU,RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / ( Max( MUR,MLU ) + RCSe ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ( ( AMS - BR ) / FirstVNF_CPU ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,Max( CS,CS ) ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,RRSe ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( CS / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_RAM_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( ( Max( MUR,RMSe ) / MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( ( MUR / CS ) + Max( Max( CS,DS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR + AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Max( Max( MUR,CS ),MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( BR ,AMS ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe + DS ),Max( MLU,MLU ) ),( MLU + Max( ( DS * MUM ),Min( Max( MLU,MLU ) ,MUR ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - DDR ) / Max( ( BR + ( Min( BR ,FirstVNF_Mem_Server ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( RMSe + ( MLU / RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - ACS ) / ( ( BR + ( ( ( PN - Const ) / ( PN + Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,RCSe ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( Min( MLU ,RCSe ) ,( MUC / RRSe ) ) ) ) ) * MLU ) + Max( RMSe,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),( MLU - Max( ( DS * MUM ),Min( RMSe ,MUR ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / FirstVNF_Mem )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( CS,MLU ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR * BR ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( RCSe,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / FirstVNF_RAM_Server )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( Min( RMSe ,MUR ),Max( MLU,RMSe ) ),( MUC + Max( ( DS / MUR ),Min( RMSe ,MUR ) ) ) ),MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( Max( RRS,Max( Max( ( BR + MDR ),FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) )", "choosing": "( ( MLU - RRSe ) - Min( Max( ( DS * MUM ),Min( RMSe ,CS ) ) ,Min( ( MLU + RCSe ) ,( MUC / ( Max( MUR,MLU ) + RCSe ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - FirstVNF_CPU ) )", "choosing": "( MLU + ( MLU - ( MLU + ( ( DS * MUM ) - Min( RMSe ,CS ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ),( BR + FirstVNF_RAM_Server ) ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( DS,MLU ) + Max( MUR,MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ( BR + FirstVNF_CPU ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MLU )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}], "13": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Max( ( FirstVNF_CPU / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS / BR ) / Max( ( BR + ( Min( ( PN / Const ) ,( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) ,Min( ( MLU + RCSe ) ,( MUC - RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( FirstVNF_Mem_Server,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( AMS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Min( MRS ,MDR ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MUC + ( ( RMSe - CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RRSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( RMSe,DS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MUM ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( PN - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,ARS ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( ( MLU - RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),CS ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / FirstVNF_Mem )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ARS - FirstVNF_Mem_Server ) / RRS )", "choosing": "( Max( MUR,DS ) + Max( ( Max( ( RMSe * MUR ),Max( MLU,MLU ) ) + CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( BR + BR ),BR )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( RRS ,( BR + FirstVNF_CPU ) ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / ( Max( MUR,RMSe ) + MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,DDR ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Min( ( RMSe * MUR ) ,Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - PN ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR - MUC ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),( BR + FirstVNF_CPU ) ) ) - BR ) / DDR )", "choosing": "( Max( CS,RMSe ) + Max( MUR,MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + MDR ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,( ( BR / FirstVNF_CPU ) - DDR ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MUR * MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( FirstVNF_Mem + BR ),FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( ( RRS / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) )", "choosing": "( Max( MLU,RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / ( Max( MUR,MLU ) + RCSe ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ( ( AMS - BR ) / FirstVNF_CPU ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,Max( CS,CS ) ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,RRSe ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( CS / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_RAM_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( ( Max( MUR,RMSe ) / MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( ( MUR / CS ) + Max( Max( CS,DS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR + AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Max( Max( MUR,CS ),MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( BR ,AMS ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe + DS ),Max( MLU,MLU ) ),( MLU + Max( ( DS * MUM ),Min( Max( MLU,MLU ) ,MUR ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - DDR ) / Max( ( BR + ( Min( BR ,FirstVNF_Mem_Server ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( RMSe + ( MLU / RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - ACS ) / ( ( BR + ( ( ( PN - Const ) / ( PN + Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,RCSe ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( Min( MLU ,RCSe ) ,( MUC / RRSe ) ) ) ) ) * MLU ) + Max( RMSe,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),( MLU - Max( ( DS * MUM ),Min( RMSe ,MUR ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / FirstVNF_Mem )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( CS,MLU ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR * BR ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( RCSe,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / FirstVNF_RAM_Server )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( Min( RMSe ,MUR ),Max( MLU,RMSe ) ),( MUC + Max( ( DS / MUR ),Min( RMSe ,MUR ) ) ) ),MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( Max( RRS,Max( Max( ( BR + MDR ),FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) )", "choosing": "( ( MLU - RRSe ) - Min( Max( ( DS * MUM ),Min( RMSe ,CS ) ) ,Min( ( MLU + RCSe ) ,( MUC / ( Max( MUR,MLU ) + RCSe ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - FirstVNF_CPU ) )", "choosing": "( MLU + ( MLU - ( MLU + ( ( DS * MUM ) - Min( RMSe ,CS ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ),( BR + FirstVNF_RAM_Server ) ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( DS,MLU ) + Max( MUR,MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}], "14": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Max( ( FirstVNF_CPU / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS / BR ) / Max( ( BR + ( Min( ( PN / Const ) ,( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) ,Min( ( MLU + RCSe ) ,( MUC - RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( FirstVNF_Mem_Server,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( AMS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Min( MRS ,MDR ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MUC + ( ( RMSe - CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RRSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( RMSe,DS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MUM ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( PN - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,ARS ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( ( MLU - RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),CS ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / FirstVNF_Mem )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ARS - FirstVNF_Mem_Server ) / RRS )", "choosing": "( Max( MUR,DS ) + Max( ( Max( ( RMSe * MUR ),Max( MLU,MLU ) ) + CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( BR + BR ),BR )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( RRS ,( BR + FirstVNF_CPU ) ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / ( Max( MUR,RMSe ) + MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,DDR ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Min( ( RMSe * MUR ) ,Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - PN ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR - MUC ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),( BR + FirstVNF_CPU ) ) ) - BR ) / DDR )", "choosing": "( Max( CS,RMSe ) + Max( MUR,MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + MDR ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,( ( BR / FirstVNF_CPU ) - DDR ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MUR * MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( FirstVNF_Mem + BR ),FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( ( RRS / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) )", "choosing": "( Max( MLU,RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / ( Max( MUR,MLU ) + RCSe ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ( ( AMS - BR ) / FirstVNF_CPU ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,Max( CS,CS ) ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,RRSe ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( CS / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_RAM_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( ( Max( MUR,RMSe ) / MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( ( MUR / CS ) + Max( Max( CS,DS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR + AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Max( Max( MUR,CS ),MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( BR ,AMS ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe + DS ),Max( MLU,MLU ) ),( MLU + Max( ( DS * MUM ),Min( Max( MLU,MLU ) ,MUR ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - DDR ) / Max( ( BR + ( Min( BR ,FirstVNF_Mem_Server ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( RMSe + ( MLU / RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - ACS ) / ( ( BR + ( ( ( PN - Const ) / ( PN + Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,RCSe ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( Min( MLU ,RCSe ) ,( MUC / RRSe ) ) ) ) ) * MLU ) + Max( RMSe,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),( MLU - Max( ( DS * MUM ),Min( RMSe ,MUR ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / FirstVNF_Mem )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( CS,MLU ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR * BR ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( RCSe,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / FirstVNF_RAM_Server )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( Min( RMSe ,MUR ),Max( MLU,RMSe ) ),( MUC + Max( ( DS / MUR ),Min( RMSe ,MUR ) ) ) ),MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( Max( RRS,Max( Max( ( BR + MDR ),FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) )", "choosing": "( ( MLU - RRSe ) - Min( Max( ( DS * MUM ),Min( RMSe ,CS ) ) ,Min( ( MLU + RCSe ) ,( MUC / ( Max( MUR,MLU ) + RCSe ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( FirstVNF_CPU_Server + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / PN ) ) ) ) )", "choosing": "( ( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ) / RRSe ) + Max( ( MLU + DS ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,MRS ) - ( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUC ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}], "15": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Max( ( FirstVNF_CPU / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS / BR ) / Max( ( BR + ( Min( ( PN / Const ) ,( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) ,Min( ( MLU + RCSe ) ,( MUC - RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( FirstVNF_Mem_Server,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( AMS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Min( MRS ,MDR ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MUC + ( ( RMSe - CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RRSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( RMSe,DS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MUM ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( PN - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,ARS ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( ( MLU - RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),CS ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / FirstVNF_Mem )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ARS - FirstVNF_Mem_Server ) / RRS )", "choosing": "( Max( MUR,DS ) + Max( ( Max( ( RMSe * MUR ),Max( MLU,MLU ) ) + CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( BR + BR ),BR )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( RRS ,( BR + FirstVNF_CPU ) ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / ( Max( MUR,RMSe ) + MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,DDR ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Min( ( RMSe * MUR ) ,Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - PN ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR - MUC ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),( BR + FirstVNF_CPU ) ) ) - BR ) / DDR )", "choosing": "( Max( CS,RMSe ) + Max( MUR,MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + MDR ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,( ( BR / FirstVNF_CPU ) - DDR ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MUR * MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( FirstVNF_Mem + BR ),FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( ( RRS / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) )", "choosing": "( Max( MLU,RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / ( Max( MUR,MLU ) + RCSe ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ( ( AMS - BR ) / FirstVNF_CPU ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,Max( CS,CS ) ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,RRSe ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( CS / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_RAM_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( ( Max( MUR,RMSe ) / MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( ( MUR / CS ) + Max( Max( CS,DS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR + AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Max( Max( MUR,CS ),MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( BR ,AMS ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe + DS ),Max( MLU,MLU ) ),( MLU + Max( ( DS * MUM ),Min( Max( MLU,MLU ) ,MUR ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - DDR ) / Max( ( BR + ( Min( BR ,FirstVNF_Mem_Server ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( RMSe + ( MLU / RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - ACS ) / ( ( BR + ( ( ( PN - Const ) / ( PN + Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,RCSe ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( Min( MLU ,RCSe ) ,( MUC / RRSe ) ) ) ) ) * MLU ) + Max( RMSe,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),( MLU - Max( ( DS * MUM ),Min( RMSe ,MUR ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / FirstVNF_Mem )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( CS,MLU ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR * BR ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( RCSe,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / CS ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / FirstVNF_RAM_Server )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( Min( RMSe ,MUR ),Max( MLU,RMSe ) ),( MUC + Max( ( DS / MUR ),Min( RMSe ,MUR ) ) ) ),MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( Max( RRS,Max( Max( ( BR + MDR ),FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) )", "choosing": "( ( MLU - RRSe ) - Min( Max( ( DS * MUM ),Min( RMSe ,CS ) ) ,Min( ( MLU + RCSe ) ,( MUC / ( Max( MUR,MLU ) + RCSe ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( FirstVNF_CPU_Server + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / PN ) ) ) ) )", "choosing": "( ( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ) / RRSe ) + Max( ( MLU + DS ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,MRS ) - ( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUC ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}], "16": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Max( ( FirstVNF_CPU / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS / BR ) / Max( ( BR + ( Min( ( PN / Const ) ,( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) ,Min( ( MLU + RCSe ) ,( MUC - RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( FirstVNF_Mem_Server,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( AMS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Min( MRS ,MDR ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MUC + ( ( RMSe - CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RRSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( RMSe,DS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MUM ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( PN - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,ARS ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( ( MLU - RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),CS ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / FirstVNF_Mem )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ARS - FirstVNF_Mem_Server ) / RRS )", "choosing": "( Max( MUR,DS ) + Max( ( Max( ( RMSe * MUR ),Max( MLU,MLU ) ) + CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( BR + BR ),BR )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( RRS ,( BR + FirstVNF_CPU ) ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / ( Max( MUR,RMSe ) + MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,DDR ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Min( ( RMSe * MUR ) ,Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - PN ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR - MUC ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),( BR + FirstVNF_CPU ) ) ) - BR ) / DDR )", "choosing": "( Max( CS,RMSe ) + Max( MUR,MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + MDR ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,( ( BR / FirstVNF_CPU ) - DDR ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MUR * MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( FirstVNF_Mem + BR ),FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( ( RRS / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) )", "choosing": "( Max( MLU,RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / ( Max( MUR,MLU ) + RCSe ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ( ( AMS - BR ) / FirstVNF_CPU ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,Max( CS,CS ) ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,RRSe ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( CS / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_RAM_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( ( Max( MUR,RMSe ) / MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),DS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( ( MUR / CS ) + Max( Max( CS,DS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR + AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Max( Max( MUR,CS ),MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( BR ,AMS ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe + DS ),Max( MLU,MLU ) ),( MLU + Max( ( DS * MUM ),Min( Max( MLU,MLU ) ,MUR ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - DDR ) / Max( ( BR + ( Min( BR ,FirstVNF_Mem_Server ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( RMSe + ( MLU / RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - ACS ) / ( ( BR + ( ( ( PN - Const ) / ( PN + Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,RCSe ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( Min( MLU ,RCSe ) ,( MUC / RRSe ) ) ) ) ) * MLU ) + Max( RMSe,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),( MLU - Max( ( DS * MUM ),Min( RMSe ,MUR ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / FirstVNF_Mem )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( Max( CS,MLU ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR * BR ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( RCSe,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( FirstVNF_CPU_Server + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / PN ) ) ) ) )", "choosing": "( ( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ) / RRSe ) + Max( ( MLU + DS ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,MRS ) - ( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUC ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( RCSe / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Min( ( ACS / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( DS,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),CS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}], "17": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Max( ( FirstVNF_CPU / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS / BR ) / Max( ( BR + ( Min( ( PN / Const ) ,( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem_Server ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) ,Min( ( MLU + RCSe ) ,( MUC - RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + ARS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( FirstVNF_Mem_Server,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( AMS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Min( MRS ,MDR ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MUC + ( ( RMSe - CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RRSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( Max( RMSe,DS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MUM ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( PN - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,ARS ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( ( MLU - RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),CS ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / FirstVNF_Mem )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ARS - FirstVNF_Mem_Server ) / RRS )", "choosing": "( Max( MUR,DS ) + Max( ( Max( ( RMSe * MUR ),Max( MLU,MLU ) ) + CS ),( MUC / RRSe ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( BR + BR ),BR )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( RRS ,( BR + FirstVNF_CPU ) ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Max( ( RMSe * MUR ),Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / ( Max( MUR,RMSe ) + MUM ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / Max( ( BR + ( Max( ( PN / Const ),( PN / Min( ARS ,DDR ) ) ) - BR ) ),FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Min( ( RMSe * MUR ) ,Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Max( MLU,RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - PN ) / FirstVNF_CPU_Server )", "choosing": "( ( MUR - MUC ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),( BR + FirstVNF_CPU ) ) ) - BR ) / DDR )", "choosing": "( Max( CS,RMSe ) + Max( MUR,MLU ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR + MDR ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,MLU ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,( ( BR / FirstVNF_CPU ) - DDR ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MUR * MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "Max( ( FirstVNF_Mem + BR ),FirstVNF_CPU )", "choosing": "( Max( RRSe,RCSe ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / MDR )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / ( ( RRS / Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) )", "choosing": "( Max( MLU,RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / ( Max( MUR,MLU ) + RCSe ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( ( ( AMS - BR ) / FirstVNF_CPU ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,Max( CS,CS ) ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS - BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,RRSe ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( Max( RRS,Max( ( BR / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( CS / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_RAM_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( ( Max( MUR,RMSe ) / MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4124087591240876, "obj2": 0.6392054290974571}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( FirstVNF_CPU_Server + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / PN ) ) ) ) )", "choosing": "( ( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ) / RRSe ) + Max( ( MLU + DS ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,MRS ) - ( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUC ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( RCSe / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Min( ( ACS / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( DS,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),CS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUM,RMSe ) + MUM )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MDR / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + MUR ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( CRS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RRSe ) * Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / RMSe ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * Min( BR ,AMS ) ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( RCSe,MLU ) + MLU )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( RCSe,MUC ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( Min( ACS ,FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,CS ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) * Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( FirstVNF_RAM / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + MUR ) ,( MUC / CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}], "18": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( FirstVNF_CPU_Server + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / PN ) ) ) ) )", "choosing": "( ( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ) / RRSe ) + Max( ( MLU + DS ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,MRS ) - ( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUC ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( RCSe / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Min( ( ACS / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( DS,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),CS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUM,RMSe ) + MUM )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MDR / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + MUR ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( CRS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RRSe ) * Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / RMSe ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * Min( BR ,AMS ) ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( RCSe,MLU ) + MLU )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( RCSe,MUC ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( Min( ACS ,FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,CS ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) * Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( FirstVNF_RAM / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + MUR ) ,( MUC / CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( DDR / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS / RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) * Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( FirstVNF_RAM / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + MUR ) ,( MUC / CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( FirstVNF_RAM_Server + Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) - Min( ( MLU + MUM ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "Min( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) ,Min( ( MLU - CS ) ,MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MLU,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( FirstVNF_RAM_Server + ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( FirstVNF_RAM / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( RRSe + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUR ) + Max( ( MLU + MUC ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / DS ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Min( MRS ,CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - ( ( DS + RCSe ) - ( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "Max( ( FirstVNF_Mem - BR ),FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS * RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( RRS,Max( ( BR / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( CS / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "Max( ( FirstVNF_Mem + BR ),RRS )", "choosing": "( Max( RCSe,CS ) + MUM )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * ( PN / Const ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + Max( CS,MLU ) ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( ( MLU - RRSe ) ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( AMS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Min( ( RMSe * MUR ) ,Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Min( MLU ,RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( DDR,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RRSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( MLU,MLU ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( RRS,Max( ( BR + FirstVNF_CPU ),( BR + FirstVNF_CPU ) ) ) - BR ) / DDR )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}], "19": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( FirstVNF_CPU_Server + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / PN ) ) ) ) )", "choosing": "( ( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ) / RRSe ) + Max( ( MLU + DS ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,MRS ) - ( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUC ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( RCSe / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Min( ( ACS / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( DS,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),CS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUM,RMSe ) + MUM )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MDR / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + MUR ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( CRS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RRSe ) * Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / RMSe ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * Min( BR ,AMS ) ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( RCSe,MLU ) + MLU )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( RCSe,MUC ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( Min( ACS ,FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,CS ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) * Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( FirstVNF_RAM / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + MUR ) ,( MUC / CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( DDR / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS / RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) * Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( FirstVNF_RAM / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + MUR ) ,( MUC / CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( FirstVNF_RAM_Server + Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) - Min( ( MLU + MUM ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "Min( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) ,Min( ( MLU - CS ) ,MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MLU,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( FirstVNF_RAM_Server + ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( FirstVNF_RAM / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( RRSe + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUR ) + Max( ( MLU + MUC ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / DS ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Min( MRS ,CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - ( ( DS + RCSe ) - ( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "Max( ( FirstVNF_Mem - BR ),FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS * RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( RRS,Max( ( BR / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( CS / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "Max( ( FirstVNF_Mem + BR ),RRS )", "choosing": "( Max( RCSe,CS ) + MUM )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * ( PN / Const ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + Max( CS,MLU ) ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( ( MLU - RRSe ) ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( AMS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( ( Max( MUR,CS ) + ( Max( Min( ( RMSe * MUR ) ,Max( MLU,MLU ) ),CS ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) ) ),MLU ) + Min( MLU ,RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( DDR,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RRSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( AMS,Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( Min( DS ,Max( RCSe,MLU ) ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}], "20": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( FirstVNF_CPU_Server + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / PN ) ) ) ) )", "choosing": "( ( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ) / RRSe ) + Max( ( MLU + DS ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,MRS ) - ( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUC ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( RCSe / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Min( ( ACS / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( DS,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),CS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUM,RMSe ) + MUM )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MDR / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + MUR ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( CRS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RRSe ) * Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / RMSe ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( AMS,BR ) / FirstVNF_CPU )", "choosing": "( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / RRSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * Min( BR ,AMS ) ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( RCSe,MLU ) + MLU )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Min( BR ,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( RCSe,MUC ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( Min( ACS ,FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,CS ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) * Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( FirstVNF_RAM / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + MUR ) ,( MUC / CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( DDR / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS / RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) * Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( FirstVNF_RAM / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + MUR ) ,( MUC / CS ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( FirstVNF_RAM_Server + Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) - Min( ( MLU + MUM ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "Min( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) ,Min( ( MLU - CS ) ,MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MLU,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( FirstVNF_RAM_Server + ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) ) / FirstVNF_CPU )", "choosing": "( Max( RCSe,MLU ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( FirstVNF_RAM / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( RRSe + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUR ) + Max( ( MLU + MUC ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( MDR / Min( ARS ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / DS ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Min( MRS ,CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - ( ( DS + RCSe ) - ( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "Max( ( FirstVNF_Mem - BR ),FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS * RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( RRS,Max( ( BR / FirstVNF_CPU ),FirstVNF_CPU ) ) - BR ) / FirstVNF_CPU )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( CS / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "Max( ( FirstVNF_Mem + BR ),RRS )", "choosing": "( Max( RCSe,CS ) + MUM )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUR,CS ) + Max( Max( ( ( RMSe * MUR ) / Max( MLU,MLU ) ),( MLU + Max( ( DS / MUM ),Min( RMSe ,CS ) ) ) ),( MUC / RRSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( AMS,Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( Min( DS ,Max( RCSe,MLU ) ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}], "21": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( FirstVNF_CPU_Server + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / PN ) ) ) ) )", "choosing": "( ( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ) / RRSe ) + Max( ( MLU + DS ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,MRS ) - ( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUC ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( RCSe / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Min( ( ACS / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( DS,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),CS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUM,RMSe ) + MUM )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MDR / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + MUR ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( CRS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RRSe ) * Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - ( ( DS + RCSe ) - ( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( AMS,Max( RRS,Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( Min( DS ,Max( RCSe,MLU ) ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU - ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,( Max( AMS,BR ) / FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUR,CS ) + Max( ( Max( ( RMSe * MLU ),Max( MLU,MLU ) ) / CS ),( MUC / RRSe ) ) ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( Max( ( DS + RCSe ),( MUC / RRSe ) ) + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MLU ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUR,MLU ) + MUM )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - Max( ( DS + RCSe ),( MUC / RRSe ) ) ),MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - RRSe ) - ( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "Min( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) ,Min( ( MLU - CS ) ,MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Min( RRS ,FirstVNF_CPU_Server ) / Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) / Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RRSe ) ) ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( MLU * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( RCSe,MLU ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6489209684687437}], "22": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( FirstVNF_CPU_Server + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / PN ) ) ) ) )", "choosing": "( ( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ) / RRSe ) + Max( ( MLU + DS ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,MRS ) - ( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUC ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( RCSe / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Min( ( ACS / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( DS,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),CS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUM,RMSe ) + MUM )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MDR / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + MUR ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( CRS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RRSe ) * Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MLU ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( Const / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,MUR ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) - ( MUC / RRSe ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.5547301062284052}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( FirstVNF_Mem_Server / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),( MUM - RCSe ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6326077093147421}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR * AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( RCSe - RCSe ) ,MUR ) - Min( Max( ( MLU - MLU ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( AMS ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + ( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( PN / Const ) )", "choosing": "( ( MLU - ( Max( DS,MLU ) + RCSe ) ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * DDR ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 0.4708029197080292, "obj2": 0.5813005990480465}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MDR / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + MUR ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe - CS ) - ( MUC / RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( ( AMS * CRS ) / PN ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,RCSe ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6304300320660778}, {"determining": "( ( AMS * CRS ) / PN )", "choosing": "( MLU + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,ARS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( MLU + RRSe ) ,( MUR / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,Max( RRS,Max( ( BR + ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),FirstVNF_CPU ) ) ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,Max( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ),MLU ) ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6374480919013602}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Min( AMS ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( MLU + RMSe ) ,( MUC / RRSe ) ) ) + ( Min( DS ,RCSe ) / Max( CS,MLU ) ) )", "obj1": 0.42883211678832117, "obj2": 0.6289843586247675}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( BR + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 0.4708029197080292, "obj2": 0.5813005990480465}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) / Min( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) ) - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4781021897810219, "obj2": 0.5788636345455808}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ) ) )", "choosing": "( ( ( MUC / RRSe ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.43613138686131386, "obj2": 0.6111324396673702}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * MDR ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / ARS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( MLU + ( ( DS * RRSe ) - ( MUC - RCSe ) ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( Const / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU / ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RMSe ) ) ) ,MUR ),MUM ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ) ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Max( MUR,CS ) ,MLU ) / Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6479662638152418}, {"determining": "( ( AMS * DDR ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 0.4708029197080292, "obj2": 0.5813005990480465}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * Max( CRS,CRS ) )", "choosing": "( Max( Min( ( ( Max( ( ( RCSe * MUC ) + ( MLU + MUC ) ),( ( CS / RMSe ) * ( MUC + DS ) ) ) * ( Max( Max( DS,MUR ),Min( RCSe ,MUC ) ) + ( Max( MUC,RMSe ) + ( MUR - MLU ) ) ) ) / Max( Min( ( ( MUR - MUR ) - ( MUC / RMSe ) ) ,( Max( MUR,RMSe ) / ( MUM + DS ) ) ),Min( Min( Max( DS,MLU ) ,Max( MUM,CS ) ) ,( Max( RMSe,MUM ) - Max( RRSe,RMSe ) ) ) ) ) ,( Max( Min( Min( ( MUM + MLU ) ,( MLU + MUM ) ) ,Min( ( MUM - MUC ) ,( MUC + DS ) ) ),Min( ( ( MLU - MUR ) * ( DS / MUM ) ) ,( ( CS + MUM ) / ( CS / MUC ) ) ) ) - ( ( ( Min( DS ,DS ) + Min( MUC ,MUM ) ) + Max( Max( RCSe,DS ),Max( RCSe,MUR ) ) ) * ( ( Max( CS,RCSe ) * ( DS - MUC ) ) + ( ( RCSe + DS ) + ( MUM / RRSe ) ) ) ) ) ),( Max( ( ( ( Max( RCSe,RRSe ) + ( MUC / MLU ) ) / ( Min( MUC ,MUM ) * ( MUM + RCSe ) ) ) + Min( ( Min( MUM ,MUC ) + ( MUC * DS ) ) ,( Max( RCSe,RCSe ) + ( RCSe - MUC ) ) ) ),( Max( Max( ( MLU * RCSe ),( RRSe - RMSe ) ),( ( RMSe - MUR ) - Min( MUR ,RRSe ) ) ) - Max( ( ( RCSe - RCSe ) * ( RRSe - MLU ) ),( ( MUC + RRSe ) - Max( CS,RMSe ) ) ) ) ) + ( Max( ( ( ( MUR - RMSe ) + ( RMSe + RCSe ) ) + ( Min( RMSe ,MLU ) / ( DS / MUM ) ) ),( Max( Max( RRSe,MUR ),( DS + RCSe ) ) * Min( ( MUR / MUR ) ,( MLU - MUM ) ) ) ) / ( ( ( Max( DS,RCSe ) + ( RCSe + RRSe ) ) + ( ( DS - RMSe ) * Max( RRSe,RMSe ) ) ) / ( ( ( MUM / DS ) * ( CS / MUM ) ) + ( ( DS + RCSe ) / Max( RMSe,RMSe ) ) ) ) ) ) ) * ( ( ( ( ( ( ( MUM + MUR ) - ( CS / RMSe ) ) / ( ( MUM - MUR ) / ( MUR * CS ) ) ) / Min( Min( ( RCSe + DS ) ,( CS / RCSe ) ) ,( ( MUC / MUR ) / ( DS / DS ) ) ) ) + ( Max( ( Min( MLU ,RRSe ) - ( RRSe * DS ) ),Max( Min( MUM ,MLU ),Min( MUR ,MUR ) ) ) + Max( ( ( MUM - MUR ) - ( RRSe - MUR ) ),Max( ( RCSe * RMSe ),( RMSe - RMSe ) ) ) ) ) - Max( Max( Min( ( ( CS + CS ) - ( MLU * CS ) ) ,Max( Max( MUM,DS ),Min( MUC ,MUR ) ) ),( ( ( MUM + MUR ) - ( MUR - MLU ) ) * ( Max( RCSe,MUR ) / ( MLU * RCSe ) ) ) ),( ( ( ( RMSe - DS ) * ( RCSe + RRSe ) ) / ( ( MUR / RMSe ) + ( MUC / MUR ) ) ) * Min( Max( Min( CS ,RRSe ),( MUC / MUR ) ) ,( ( RCSe - DS ) / Max( RRSe,MUR ) ) ) ) ) ) / ( ( Max( ( Min( ( MUR - CS ) ,Max( RCSe,RCSe ) ) + Min( Min( RCSe ,MUC ) ,( CS - MLU ) ) ),Max( ( ( DS - MLU ) + ( MLU * CS ) ),( ( RMSe * MUC ) * ( RMSe + MUM ) ) ) ) * Max( ( ( ( RCSe / RMSe ) + ( CS / RCSe ) ) / ( Max( MUR,MUR ) + ( CS + MUM ) ) ),( ( Max( RMSe,RCSe ) - Max( MLU,MUC ) ) / ( ( RMSe - RCSe ) / Max( RMSe,RRSe ) ) ) ) ) / Min( Max( ( ( ( MUM - RCSe ) * ( MUM * MLU ) ) * Max( ( MUR / MLU ),Min( MUR ,RCSe ) ) ),( ( Min( MLU ,MUC ) + ( MUR / CS ) ) * ( ( MUM * RCSe ) * Min( CS ,RCSe ) ) ) ) ,( ( Max( ( RCSe / MUC ),Min( DS ,RCSe ) ) - ( ( MUR - MUC ) / ( RCSe + MUR ) ) ) - ( ( Min( CS ,CS ) * ( MLU * MUC ) ) / Min( ( CS + CS ) ,( RRSe * RRSe ) ) ) ) ) ) ) )", "obj1": 0.5018248175182481, "obj2": 0.5120292136258735}, {"determining": "( ( MRS / BR ) / Max( FirstVNF_RAM,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( ( ( ( MLU + MUC ) + ( CS / RMSe ) ) / ( ( RMSe * DS ) + Max( RRSe,MLU ) ) ) / ( ( ( RCSe * CS ) / ( MLU + MUM ) ) / ( Max( DS,MUR ) - ( MLU * DS ) ) ) ) - ( ( ( Max( RRSe,RRSe ) + ( RRSe / RMSe ) ) - ( ( MLU - MUC ) * Min( RCSe ,CS ) ) ) * ( ( ( RMSe * MUM ) * ( MUR / DS ) ) / ( ( CS - MUR ) * ( CS / MLU ) ) ) ) ) * ( ( ( Max( ( MUC * MLU ),( MLU + DS ) ) / ( ( CS / DS ) - Max( MUR,MUR ) ) ) / ( ( ( MUM - MUC ) / ( RRSe - RCSe ) ) + Max( Min( MLU ,RMSe ),( MLU - RMSe ) ) ) ) / ( ( Max( Min( MUC ,MLU ),( CS * MUR ) ) / ( ( DS / MUM ) + ( RMSe - MUC ) ) ) * Min( ( ( RMSe - DS ) / Min( MUR ,MLU ) ) ,( ( RRSe / CS ) + Max( RCSe,MUM ) ) ) ) ) ) - ( ( Min( ( Min( Max( DS,MUC ) ,( RCSe * MUC ) ) + Min( Min( MUC ,MUR ) ,( MUC - RRSe ) ) ) ,( Max( Min( RRSe ,RRSe ),Max( RMSe,RMSe ) ) - Max( ( MLU * MUR ),Max( RRSe,DS ) ) ) ) / Min( ( Min( ( MUR * CS ) ,( MUC - CS ) ) * ( Min( MLU ,MUC ) / ( MUM / RCSe ) ) ) ,Min( Min( ( MUC / MUC ) ,( RRSe + MLU ) ) ,( Max( MUC,RMSe ) * ( CS + RMSe ) ) ) ) ) + Max( Max( Min( ( ( MUC * MUM ) * Min( MUR ,CS ) ) ,( ( MUM / MUR ) / Max( DS,CS ) ) ),( Min( Max( RMSe,MUR ) ,( RCSe / RRSe ) ) - ( Min( MUC ,RCSe ) / Max( MUM,DS ) ) ) ),Max( ( Max( ( MUC + RRSe ),( RCSe + DS ) ) * ( Min( RMSe ,RMSe ) * Min( MUM ,MUR ) ) ),Max( ( ( DS + MLU ) + ( MUM / RRSe ) ),( Max( MUM,MUM ) - ( CS - RRSe ) ) ) ) ) ) ),Min( ( Min( Max( Min( ( ( MUC * DS ) / Max( CS,RMSe ) ) ,Min( ( DS - MUR ) ,( RCSe * MUC ) ) ),( ( Min( MUC ,MUR ) * Min( MUM ,MUM ) ) + Max( ( CS - RRSe ),( MUM / DS ) ) ) ) ,( Min( ( Max( MUM,MUR ) * ( MUC / RMSe ) ) ,( Min( DS ,MUR ) * ( CS - DS ) ) ) * ( ( Min( RRSe ,RCSe ) * ( MLU + MUM ) ) * ( ( RCSe / MLU ) + Min( DS ,MUR ) ) ) ) ) + ( ( Max( ( ( MLU + MUM ) - ( MUC - MUM ) ),( Min( RRSe ,CS ) * Max( MLU,MLU ) ) ) / Max( Min( Max( RCSe,CS ) ,Min( RRSe ,MLU ) ),Min( Max( RMSe,MLU ) ,( RMSe - MUM ) ) ) ) + ( Min( Min( ( CS / MUR ) ,( CS + MUC ) ) ,( Max( MUR,RMSe ) - Min( RCSe ,RMSe ) ) ) * Max( Min( Max( MUC,RCSe ) ,Min( MUM ,RCSe ) ),( ( RRSe - CS ) * ( MUR + RRSe ) ) ) ) ) ) ,Max( Min( Max( ( ( ( CS * MUC ) / ( MUM - CS ) ) * ( Max( MUM,RRSe ) + Min( DS ,CS ) ) ),Max( ( ( MUC - MUR ) + ( RMSe / MUM ) ),( ( MUM - RMSe ) / ( RCSe - CS ) ) ) ) ,( ( ( Min( MUC ,MLU ) * ( MUC - RMSe ) ) * ( ( MLU * RRSe ) * ( MLU - DS ) ) ) - ( Min( ( DS / CS ) ,Max( RMSe,MLU ) ) + ( ( CS / RCSe ) / ( MUC * MUC ) ) ) ) ),( ( Min( Max( Max( MUC,RCSe ),Min( DS ,RMSe ) ) ,( ( MUR / MUM ) - Min( MUR ,MUC ) ) ) / Max( ( ( RMSe + MUR ) + Max( MUM,RRSe ) ),Min( ( MUR - CS ) ,( MLU / MUR ) ) ) ) - Max( Min( ( ( MUM + DS ) - ( DS / MLU ) ) ,Min( Max( DS,MLU ) ,( RMSe + MUR ) ) ),( ( Min( RMSe ,MUM ) * Max( MUC,MUR ) ) / Min( ( RRSe - MUR ) ,Max( RMSe,RMSe ) ) ) ) ) ) ) )", "obj1": 0.458029197080292, "obj2": 0.5854303048909688}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MRS / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( CS + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}], "23": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( FirstVNF_CPU_Server + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / PN ) ) ) ) )", "choosing": "( ( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ) / RRSe ) + Max( ( MLU + DS ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,MRS ) - ( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUC ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( RCSe / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Min( ( ACS / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( DS,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),CS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUM,RMSe ) + MUM )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MDR / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + MUR ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( CRS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RRSe ) * Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( Const / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,MUR ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR * AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( RCSe - RCSe ) ,MUR ) - Min( Max( ( MLU - MLU ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( PN / Const ) )", "choosing": "( ( MLU - ( Max( DS,MLU ) + RCSe ) ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe - CS ) - ( MUC / RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * CRS ) / PN )", "choosing": "( MLU + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,ARS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( MLU + RRSe ) ,( MUR / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( BR + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * MDR ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / ARS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( MLU + ( ( DS * RRSe ) - ( MUC - RCSe ) ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( Const / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU / ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RMSe ) ) ) ,MUR ),MUM ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6479662638152418}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MRS / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( CS + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * DDR ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) )", "choosing": "( ( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) / Min( ( MLU + RMSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MLU - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * CRS ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( ( MLU + RCSe ),RCSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),( ( ACS / FirstVNF_CPU_Server ) + ( MDR / AMS ) ) ) / Max( ( ( ARS + PN ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,ACS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,MUM ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * RCSe ) - ( MUC / RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( ARS * CRS ) / Const )", "choosing": "( RCSe + Max( Min( MLU ,RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * DDR ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( MLU + RMSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6479662638152418}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) ) ) / Max( ( ( FirstVNF_Mem_Server + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( MUM + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6479662638152418}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( RCSe ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( FirstVNF_RAM_Server * DDR ) - Min( RRS ,DDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6479662638152418}], "24": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( FirstVNF_CPU_Server + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / PN ) ) ) ) )", "choosing": "( ( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ) / RRSe ) + Max( ( MLU + DS ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,MRS ) - ( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUC ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( RCSe / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Min( ( ACS / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( DS,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),CS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUM,RMSe ) + MUM )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MDR / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + MUR ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( CRS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RRSe ) * Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( Const / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,MUR ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR * AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( RCSe - RCSe ) ,MUR ) - Min( Max( ( MLU - MLU ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( PN / Const ) )", "choosing": "( ( MLU - ( Max( DS,MLU ) + RCSe ) ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe - CS ) - ( MUC / RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * CRS ) / PN )", "choosing": "( MLU + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,ARS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( MLU + RRSe ) ,( MUR / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( BR + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * MDR ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / ARS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( MLU + ( ( DS * RRSe ) - ( MUC - RCSe ) ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( Const / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU / ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RMSe ) ) ) ,MUR ),MUM ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MRS / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( CS + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * DDR ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) )", "choosing": "( ( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) / Min( ( MLU + RMSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MLU - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * CRS ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( ( MLU + RCSe ),RCSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),( ( ACS / FirstVNF_CPU_Server ) + ( MDR / AMS ) ) ) / Max( ( ( ARS + PN ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,ACS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,MUM ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * RCSe ) - ( MUC / RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( ARS * CRS ) / Const )", "choosing": "( RCSe + Max( Min( MLU ,RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * DDR ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( MLU + RMSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) ) ) / Max( ( ( FirstVNF_Mem_Server + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( MUM + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( RCSe ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),( ( MLU - RRSe ) - ( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) ) ) ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}], "25": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( FirstVNF_CPU_Server + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / PN ) ) ) ) )", "choosing": "( ( ( MLU + ( ( RMSe * CS ) - ( MUC * RMSe ) ) ) / RRSe ) + Max( ( MLU + DS ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( FirstVNF_Mem ,MRS ) - ( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC - RMSe ) ) ) ,MUC ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( RCSe / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Min( ( ACS / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( DS,MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Min( ( MUM - RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),CS ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUM,RMSe ) + MUM )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MDR / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + MUR ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( CRS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RRSe ) * Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( Const / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,MUR ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( AMS,FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR * AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( RCSe - RCSe ) ,MUR ) - Min( Max( ( MLU - MLU ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( MLU ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( PN / Const ) )", "choosing": "( ( MLU - ( Max( DS,MLU ) + RCSe ) ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe - CS ) - ( MUC / RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * CRS ) / PN )", "choosing": "( MLU + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS - CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,Min( MUC ,RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,ARS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( MLU + RRSe ) ,( MUR / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( ( ( BR + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( CS + RMSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * MDR ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / ARS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( MLU + ( ( DS * RRSe ) - ( MUC - RCSe ) ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( Const / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU / ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( AMS * PN ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RMSe ) ) ) ,MUR ),MUM ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MRS / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( CS + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * DDR ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( RMSe,MLU ) ) ,Min( ( MLU + RCSe ) ,( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) )", "choosing": "( ( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) / Min( ( MLU + RMSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MLU - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * CRS ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( ( MLU + RCSe ),RCSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),( ( ACS / FirstVNF_CPU_Server ) + ( MDR / AMS ) ) ) / Max( ( ( ARS + PN ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,ACS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,MUM ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * RCSe ) - ( MUC / RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( ARS * CRS ) / Const )", "choosing": "( RCSe + Max( Min( MLU ,RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * DDR ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( MLU + RMSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) ) ) / Max( ( ( FirstVNF_Mem_Server + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( MUM + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - ( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( RCSe ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),( ( MLU - RRSe ) - ( ( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) + Max( ( MLU - CS ),MUR ) ) ) ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.6431588685551475}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM * RCSe ) ) - ( ( Min( MUR ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}], "26": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM * RCSe ) ) - ( ( Min( MUR ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( AMS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Max( ( DS + RCSe ),( ( MLU + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) - Max( ( RCSe + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( RMSe + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) * Min( PN ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( RCSe + Max( ( MLU + RCSe ),MUC ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * Const ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( ( MLU * CS ) - ( MUC - RMSe ) ),MLU ) + RCSe )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MRS / AMS ) ) ) / Max( ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( RCSe,RMSe ) ),MLU ) + RCSe )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MRS / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( DS,MLU ) + RCSe )", "obj1": 0.43795620437956206, "obj2": 0.5698927099700907}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,ARS ),( MRS / CRS ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,Min( ( MLU + RRSe ) ,( MUR / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.4251824817518248, "obj2": 0.6314632410349807}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) )", "choosing": "( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RMSe ) ) ) ,MUR ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR * AMS ) ) ),FirstVNF_CPU_Server ) / ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MLU ,( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / MLU ) ) ) ,MUR ) + RMSe ) ),MLU ) + RCSe )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) / Min( ( MLU + RMSe ) ,( MUC / RRSe ) ) ) + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,Min( ( DS + Max( Max( ( MLU * ( RCSe * RCSe ) ),Min( CS ,CS ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.4781021897810219, "obj2": 0.5609429568844895}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( Min( ( ( MLU / RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) + ( ( DS * CS ) - ( MUC - RMSe ) ) ),MLU ) + RCSe )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( Min( ACS ,FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( PN / Const ) )", "choosing": "( ( MLU - ( Max( DS,MLU ) + RCSe ) ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),Min( MUC ,RRSe ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( MRS / CRS ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),Max( ( MLU + ( ( DS * CS ) - ( MUC - RMSe ) ) ),MLU ) ) )", "obj1": 0.43613138686131386, "obj2": 0.6111324396673702}, {"determining": "( ( ARS * FirstVNF_Mem ) / ( Max( Max( ( PN / Const ),( Const / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU / ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + Max( ( DS + RCSe ),( MUC / RRSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6424718356720999}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU / ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ( AMS * CRS ) / Const ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( ( MLU + RCSe ) + ( ( DS * CS ) - ( MLU - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5689091239019016}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MLU - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4397810218978102, "obj2": 0.5689091239019016}, {"determining": "( ( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * CRS ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) ) / ( Max( Max( ( RRS / Const ),( Const / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,MUR ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( Min( DS ,RCSe ) / Max( ( MLU + RCSe ),RCSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Min( ( ACS / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6334528608886437}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( RMSe + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,DS ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM * RCSe ) ) - ( ( Min( MUR ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( ARS * CRS ) / Const )", "choosing": "( RCSe + Max( Min( MLU ,RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( AMS * ( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + MLU )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ( AMS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server ),( MDR / ARS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( MLU + ( ( DS * RRSe ) - ( ( MLU + ( ( RMSe * CS ) - ( MUC / RMSe ) ) ) - RMSe ) ) ),MLU ) + RCSe )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( AMS * FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( Min( AMS ,MRS ) / Const ) / Const )", "choosing": "( MUM + ( RCSe + Max( ( MLU + RCSe ),RCSe ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS * MRS ) / Const )", "choosing": "( RCSe + Max( ( MLU + RCSe ),RCSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( ( MUC / RRSe ) * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ) / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( CS,MLU ) ) ,MLU ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) * Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( CRS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_Mem ,MRS ) ,( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RRSe ) * Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( Min( DS ,RCSe ) - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - Max( MUM,RRSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU * DS ) ,MUR ),MUM ) ),MLU ) + RCSe )", "obj1": 0.42700729927007297, "obj2": 0.6236402872241472}, {"determining": "( RRS / ( ( ( FirstVNF_Mem_Server + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - ( MLU - ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - Min( ( Min( ( RMSe * CS ) ,RCSe ) / ( CS / MLU ) ) ,Max( ( MUM + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6391560848494168}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( ( MRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS - FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( Max( ( MLU + DS ),RCSe ) + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( FirstVNF_RAM / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( MLU + ( ( DS * RRSe ) - ( MUC - RCSe ) ) ),MLU ) + RCSe )", "obj1": 0.43795620437956206, "obj2": 0.5698927099700907}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * CRS ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RRSe,RCSe ) ) - RRSe )", "obj1": 0.4124087591240876, "obj2": 0.6391560848494168}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( RCSe ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * DDR ) - PN )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( DS,MLU ) ) ,( ( MLU + Max( ( DS + CS ),( MUM + MUR ) ) ) + Max( Min( Max( MUR,CS ) ,MLU ),Min( ( MUR * DS ) ,( MLU / MUC ) ) ) ) ) + Max( ( DS + RCSe ),( MUC / RRSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6325190447838988}], "27": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM * RCSe ) ) - ( ( Min( MUR ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( AMS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Max( ( DS + RCSe ),( ( MLU + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) - Max( ( RCSe + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( RMSe + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( ARS * FirstVNF_Mem ) / ( Max( Max( ( PN / Const ),( Const / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU / ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + Max( ( DS + RCSe ),( MUC / RRSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6424718356720999}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( RMSe + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,DS ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM * RCSe ) ) - ( ( Min( MUR ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( ( MUC / RRSe ) * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( Min( DS ,RCSe ) - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - Max( MUM,RRSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( RRS / ( ( ( FirstVNF_Mem_Server + MDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - ( MLU - ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - Min( ( Min( ( RMSe * CS ) ,RCSe ) / ( CS / MLU ) ) ,Max( ( MUM + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6391560848494168}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * CRS ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RRSe,RCSe ) ) - RRSe )", "obj1": 0.4124087591240876, "obj2": 0.6391560848494168}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( RCSe ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU / ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),RRSe ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RMSe ) ) ) ,MUR ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( DS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,Const ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RRSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - RRSe )", "obj1": 0.4124087591240876, "obj2": 0.6391560848494168}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * CRS ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( DDR ,FirstVNF_Mem_Server ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - RRSe )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( ARS * FirstVNF_Mem ) / ( Max( Max( ( PN / Const ),( Const / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU / ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),MLU ) + Max( ( DS + RCSe ),( MUC / RRSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6424718356720999}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / RRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ARS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ( RRS / FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / CRS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( Max( DS,RCSe ),( MUC / RRSe ) ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( MLU,( ( MLU + ( ( RRSe * CS ) - ( MUM - DS ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * CRS ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) ) / ( Max( Max( ( RRS / Const ),( Const / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,MUR ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( Min( DS ,RCSe ) / Max( ( MLU + RCSe ),RCSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( MLU + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) * Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( ( MUC / RRSe ) * CS ) - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( RRS / Max( ( ( FirstVNF_Mem_Server + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Const ) )", "choosing": "( ( MLU - ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - Min( ( Max( ( MLU + RCSe ),RCSe ) / Max( CS,MLU ) ) ,Max( ( MUM + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6391560848494168}, {"determining": "( RRS / Max( ( ( FirstVNF_Mem_Server + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,MRS ),( MRS / CRS ) ) ) )", "choosing": "( RCSe + Max( ( MLU / RCSe ),RCSe ) )", "obj1": 0.4124087591240876, "obj2": 0.6391560848494168}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - ( Max( ( MLU - CS ),RCSe ) * Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( RCSe ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( RRS / Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - Min( ( Min( ( RMSe * CS ) ,( ( RMSe * CS ) - ( MUC / MLU ) ) ) / Max( CS,MLU ) ) ,Max( ( MUM + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6391560848494168}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( Min( ( ( MLU / RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) + ( ( DS * CS ) - ( MUC - RMSe ) ) ),MLU ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( ( AMS * ( Max( ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ),BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS + RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * ( MUM - RMSe ) ) - ( Min( DS ,RCSe ) - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( Min( DS ,RCSe ) - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,Min( ( DS + Max( Max( ( MLU * ( RCSe * RCSe ) ),Min( CS ,CS ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( MLU / MUC ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( DDR,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,MUC ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( PN / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + Max( Min( ( MLU + DS ) ,MUR ),MUM ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS * CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( Max( ( MLU * ( RCSe * RCSe ) ),Min( CS ,MUC ) ),RMSe ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}], "28": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM * RCSe ) ) - ( ( Min( MUR ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( AMS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Max( ( DS + RCSe ),( ( MLU + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) - Max( ( RCSe + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( RMSe + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( RMSe + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,DS ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM * RCSe ) ) - ( ( Min( MUR ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( ( MUC / RRSe ) * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( Min( DS ,RCSe ) - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - Max( MUM,RRSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( RCSe ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU / ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),RRSe ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RMSe ) ) ) ,MUR ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( DS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,Const ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RRSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * CRS ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( DDR ,FirstVNF_Mem_Server ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - RRSe )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / RRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ARS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ( RRS / FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / CRS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( Max( DS,RCSe ),( MUC / RRSe ) ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( MLU,( ( MLU + ( ( RRSe * CS ) - ( MUM - DS ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * CRS ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) ) / ( Max( Max( ( RRS / Const ),( Const / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,MUR ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( Min( DS ,RCSe ) / Max( ( MLU + RCSe ),RCSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( MLU + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) * Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( ( MUC / RRSe ) * CS ) - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) ),Max( FirstVNF_RAM_Server,( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - ( Max( ( MLU - CS ),RCSe ) * Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( RCSe ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( Min( ( ( MLU / RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) + ( ( DS * CS ) - ( MUC - RMSe ) ) ),MLU ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( ( AMS * ( Max( ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ),BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS + RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * ( MUM - RMSe ) ) - ( Min( DS ,RCSe ) - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( Min( DS ,RCSe ) - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Min( FirstVNF_CPU ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,Min( ( DS + Max( Max( ( MLU * ( RCSe * RCSe ) ),Min( CS ,CS ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( MLU / MUC ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( DDR,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,MUC ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( PN / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + Max( Min( ( MLU + DS ) ,MUR ),MUM ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Min( ( DS + RCSe ) ,( MUC / MUC ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS * CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Max( Max( ( MLU * ( RCSe * RCSe ) ),Min( CS ,MUC ) ),RMSe ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem / MDR ),( MRS / CRS ) ) ) ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - MUM ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( MRS * MRS ) / Max( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( PN / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + RMSe ) ) ) + ( Min( Min( MUR ,CS ) ,MUR ) + Min( ( MUR * DS ) ,( DS / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + DDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Max( DS,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUM ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - ( MUM + RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}], "29": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM * RCSe ) ) - ( ( Min( MUR ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( AMS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Max( ( DS + RCSe ),( ( MLU + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) - Max( ( RCSe + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( RMSe + Max( ( MLU + RCSe ),RCSe ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( RMSe + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,DS ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * MRS ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + RRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( RRS * FirstVNF_Mem_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM * RCSe ) ) - ( ( Min( MUR ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( ( MUC / RRSe ) * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( CRS / FirstVNF_CPU_Server ),( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( ( AMS * ( Max( AMS,BR ) / FirstVNF_CPU ) ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / ( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) / Max( Min( FirstVNF_Mem ,MRS ),( RRS / CRS ) ) ) ) ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( Min( DS ,RCSe ) - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - Max( MUM,RRSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / Min( ARS ,( MDR + FirstVNF_CPU ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - RRSe ) - Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( ( DS + RCSe ),( MUC / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( MDR * FirstVNF_Mem_Server ) / ( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,MUR ) - Min( Max( ( MLU - CS ),RCSe ) ,Min( ( MLU + RCSe ) ,( MUC / ( ( MLU - RRSe ) - Min( ( Min( RCSe ,RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU / ( ( DS * CS ) - ( MUC - RMSe ) ) ) ,MUR ),RMSe ) ),RRSe ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RMSe ) ) ) ,MUR ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( DS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,Const ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MLU ,Max( Min( ( MLU + ( ( RMSe * CS ) - ( MUC / RRSe ) ) ) ,MUR ),RMSe ) ),MLU ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( ARS * CRS ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( DDR ,FirstVNF_Mem_Server ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - RRSe )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / RRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ARS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ( RRS / FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / CRS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) ,Max( Max( DS,RCSe ),( MUC / RRSe ) ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( MLU,( ( MLU + ( ( RRSe * CS ) - ( MUM - DS ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6455228600070043}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + DDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Max( DS,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUM ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - ( MUM + RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * ( AMS * DDR ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( ARS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Max( RRSe,MUR ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * DDR ) - ( RRS / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,MUM ) + Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( Max( RRS,DDR ),ACS ) * ( FirstVNF_Mem / BR ) )", "choosing": "( Max( RMSe,Min( ( RMSe + Max( Max( ( MLU * MUR ),Min( CS ,RMSe ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( ( RRS / Const ),( Const / ( ARS * FirstVNF_Mem ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - ( Min( DS ,RCSe ) / Max( ( MLU + RCSe ),RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( CRS,ACS ) / ( Min( FirstVNF_RAM_Server ,CRS ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,MUR ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS / RCSe ) + Max( ( MLU + RCSe ),RCSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / RRS ) ) ) )", "choosing": "Min( ( MUR - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( DDR * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( RCSe + RCSe ),( ( MUC + ( ( ( MLU / RCSe ) / Max( CS,MLU ) ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( Min( ( ( MLU / RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) + ( ( DS * CS ) - ( MUC - RMSe ) ) ),MLU ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,AMS ) / Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),FirstVNF_CPU_Server ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( RCSe - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),( ARS / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( Min( MLU ,Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( Max( RRS,FirstVNF_CPU_Server ) / PN ) )", "choosing": "( Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( MLU / MUC ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Min( ( DS + RCSe ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( MUC + MUR ) + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / CRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( PN ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM / RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}], "30": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( RMSe + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,DS ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / RRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + DDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Max( DS,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUM ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - ( MUM + RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * ( AMS * DDR ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( ARS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Max( RRSe,MUR ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * DDR ) - ( RRS / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,MUM ) + Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( Max( RRS,DDR ),ACS ) * ( FirstVNF_Mem / BR ) )", "choosing": "( Max( RMSe,Min( ( RMSe + Max( Max( ( MLU * MUR ),Min( CS ,RMSe ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( ( RRS / Const ),( Const / ( ARS * FirstVNF_Mem ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - ( Min( DS ,RCSe ) / Max( ( MLU + RCSe ),RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( CRS,ACS ) / ( Min( FirstVNF_RAM_Server ,CRS ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,MUR ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS / RCSe ) + Max( ( MLU + RCSe ),RCSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / RRS ) ) ) )", "choosing": "Min( ( MUR - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( DDR * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( RCSe + RCSe ),( ( MUC + ( ( ( MLU / RCSe ) / Max( CS,MLU ) ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( Min( ( ( MLU / RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) + ( ( DS * CS ) - ( MUC - RMSe ) ) ),MLU ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,AMS ) / Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),FirstVNF_CPU_Server ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( RCSe - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),( ARS / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( Min( MLU ,Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( Max( RRS,FirstVNF_CPU_Server ) / PN ) )", "choosing": "( Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( MLU / MUC ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Min( ( DS + RCSe ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( MUC + MUR ) + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / CRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( PN ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM / RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( MLU / Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( MUM,( ( MLU * ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ARS ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( Min( ( DS * RCSe ) ,Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * RCSe ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( PN ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + CS ),( ( MLU + ( ( MUR * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( RRS * FirstVNF_CPU_Server ) / MRS )", "choosing": "( ( Max( MUM,MUR ) / MUC ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_Mem )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( MUR ,RCSe ) / Max( MLU,MUR ) ) + Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * ARS ) / ( ( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ) + Max( RRS,FirstVNF_CPU_Server ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( CS + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) + Max( ( CS - CS ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - Max( MUM,RRSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,RCSe ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( Max( Max( ( MLU * DS ),Min( CS ,CS ) ),RMSe ),MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ) * Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) )", "choosing": "( DS - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( PN ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( RMSe,Min( ( DS * Max( Max( ( MLU * DS ),Min( CS ,CS ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ARS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( MUR ,RCSe ) - Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( Max( RMSe,Min( ( DS + Max( Max( ( MLU * DS ),Min( CS ,CS ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( Max( RRS,DDR ),ACS ) * ( FirstVNF_Mem / BR ) )", "choosing": "( Max( RMSe,Min( ( RMSe + Max( Max( ( MLU * MUR ),Min( CS ,RMSe ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}], "31": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( RMSe + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,DS ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / RRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + DDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Max( DS,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUM ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - ( MUM + RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * ( AMS * DDR ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( ARS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Max( RRSe,MUR ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * DDR ) - ( RRS / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,MUM ) + Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( Max( RRS,DDR ),ACS ) * ( FirstVNF_Mem / BR ) )", "choosing": "( Max( RMSe,Min( ( RMSe + Max( Max( ( MLU * MUR ),Min( CS ,RMSe ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( ( RRS / Const ),( Const / ( ARS * FirstVNF_Mem ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - ( Min( DS ,RCSe ) / Max( ( MLU + RCSe ),RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( CRS,ACS ) / ( Min( FirstVNF_RAM_Server ,CRS ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,MUR ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS / RCSe ) + Max( ( MLU + RCSe ),RCSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / RRS ) ) ) )", "choosing": "Min( ( MUR - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( DDR * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( RCSe + RCSe ),( ( MUC + ( ( ( MLU / RCSe ) / Max( CS,MLU ) ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( Min( ( ( MLU / RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) + ( ( DS * CS ) - ( MUC - RMSe ) ) ),MLU ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,AMS ) / Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),FirstVNF_CPU_Server ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( RCSe - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),( ARS / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( Min( MLU ,Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( Max( RRS,FirstVNF_CPU_Server ) / PN ) )", "choosing": "( Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( MLU / MUC ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Min( ( DS + RCSe ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( MUC + MUR ) + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / CRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( PN ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM / RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( MLU / Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( MUM,( ( MLU * ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ARS ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( Min( ( DS * RCSe ) ,Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * RCSe ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( PN ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + CS ),( ( MLU + ( ( MUR * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( RRS * FirstVNF_CPU_Server ) / MRS )", "choosing": "( ( Max( MUM,MUR ) / MUC ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_Mem )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( MUR ,RCSe ) / Max( MLU,MUR ) ) + Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * ARS ) / ( ( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ) + Max( RRS,FirstVNF_CPU_Server ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( CS + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) + Max( ( CS - CS ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - Max( MUM,RRSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,RCSe ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( Max( Max( ( MLU * DS ),Min( CS ,CS ) ),RMSe ),MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ) * Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) )", "choosing": "( DS - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( PN ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( RMSe,Min( ( DS * Max( Max( ( MLU * DS ),Min( CS ,CS ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ARS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( MUR ,RCSe ) - Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( Max( RMSe,Min( ( DS + Max( Max( ( MLU * DS ),Min( CS ,CS ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( Max( RRS,DDR ),ACS ) * ( FirstVNF_Mem / BR ) )", "choosing": "( Max( RMSe,Min( ( RMSe + Max( Max( ( MLU * MUR ),Min( CS ,RMSe ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}], "32": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( RMSe + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,DS ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / RRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + DDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Max( DS,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUM ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - ( MUM + RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * ( AMS * DDR ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( ARS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Max( RRSe,MUR ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * DDR ) - ( RRS / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,MUM ) + Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( Max( RRS,DDR ),ACS ) * ( FirstVNF_Mem / BR ) )", "choosing": "( Max( RMSe,Min( ( RMSe + Max( Max( ( MLU * MUR ),Min( CS ,RMSe ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( ( RRS / Const ),( Const / ( ARS * FirstVNF_Mem ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - ( Min( DS ,RCSe ) / Max( ( MLU + RCSe ),RCSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( CRS,ACS ) / ( Min( FirstVNF_RAM_Server ,CRS ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,MUR ) / Max( CS,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS / RCSe ) + Max( ( MLU + RCSe ),RCSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / RRS ) ) ) )", "choosing": "Min( ( MUR - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( DDR * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( CS,MLU ) ) - Max( ( RCSe + RCSe ),( ( MUC + ( ( ( MLU / RCSe ) / Max( CS,MLU ) ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( ( Min( ( ( MLU / RCSe ) / Max( CS,MLU ) ) ,( ( MLU + RCSe ) + ( MUC - RCSe ) ) ) + ( ( DS * CS ) - ( MUC - RMSe ) ) ),MLU ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,AMS ) / Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) + Max( ( MLU - CS ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),FirstVNF_CPU_Server ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( RCSe - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe - MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),( ARS / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( Min( MLU ,Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( Max( RRS,FirstVNF_CPU_Server ) / PN ) )", "choosing": "( Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / PN )", "choosing": "( ( MLU / MUC ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Min( ( DS + RCSe ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( MUC + MUR ) + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Const / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / CRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * PN ) )", "choosing": "( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( PN ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM / RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) * RRS ) )", "choosing": "( ( MLU / Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( MUM,( ( MLU * ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ARS ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( Min( ( DS * RCSe ) ,Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * RCSe ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( PN ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + CS ),( ( MLU + ( ( MUR * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( RRS * FirstVNF_CPU_Server ) / MRS )", "choosing": "( ( Max( MUM,MUR ) / MUC ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_Mem )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( MUR ,RCSe ) / Max( MLU,MUR ) ) + Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * ARS ) / ( ( Max( ( RRS / PN ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ) + Max( RRS,FirstVNF_CPU_Server ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( MLU + Max( ( CS + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) + Max( ( CS - CS ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Min( ACS ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - Max( MUM,RRSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / FirstVNF_CPU_Server )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,RCSe ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( Max( Max( ( MLU * DS ),Min( CS ,CS ) ),RMSe ),MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ) * Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) )", "choosing": "( DS - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( PN ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( RMSe,Min( ( DS * Max( Max( ( MLU * DS ),Min( CS ,CS ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ARS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( MUR ,RCSe ) - Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( Max( RMSe,Min( ( DS + Max( Max( ( MLU * DS ),Min( CS ,CS ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}, {"determining": "( Max( Max( RRS,DDR ),ACS ) * ( FirstVNF_Mem / BR ) )", "choosing": "( Max( RMSe,Min( ( RMSe + Max( Max( ( MLU * MUR ),Min( CS ,RMSe ) ),RMSe ) ) ,CS ) ) - Max( ( DS - MUR ),RRSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6493691192956679}], "33": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - DDR ) * ( Min( MDR ,BR ) / ( Min( PN ,RRS ) + Min( Min( ARS ,( FirstVNF_CPU_Server / ( ACS * MRS ) ) ) ,MDR ) ) ) )", "choosing": "( ( MLU * Min( MLU ,MUM ) ) * ( ( ( CS - CS ) - ( MLU / MUM ) ) / ( Max( MUC,RCSe ) + ( ( ( ( ( MLU * MUR ) / RRSe ) / Max( MUC,CS ) ) + Min( DS ,( MUR + DS ) ) ) * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / AMS ) ) ) ),FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Min( ( MLU - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.6192548124238527}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.6192548124238527}, {"determining": "( Min( Max( RRS,( Min( ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) * RRS ) ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6442429662578432}, {"determining": "( ( ( ( ( ( Min( Max( FirstVNF_RAM,ARS ) ,( ARS / FirstVNF_CPU_Server ) ) * Min( ( ARS / Const ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) + Max( Max( ( FirstVNF_Mem / DDR ),( RRS * RRS ) ),Min( ( MDR + CRS ) ,( MRS - BR ) ) ) ) / Max( ( ( Max( Const,ARS ) - ( BR - MDR ) ) - ( Min( FirstVNF_RAM_Server ,PN ) / ( FirstVNF_RAM - MDR ) ) ),Max( Min( ( Const - FirstVNF_CPU_Server ) ,Min( PN ,ACS ) ),Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,MRS ) ) ) ) ) + ( ( ( ( ( BR - ARS ) * ( PN / FirstVNF_Mem ) ) * ( ( Const + MRS ) / ( ACS + FirstVNF_RAM_Server ) ) ) + ( ( Max( BR,FirstVNF_Mem ) + Min( CRS ,CRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) - Max( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( CRS - PN ) ) * Min( ( PN * FirstVNF_RAM_Server ) ,( ACS - BR ) ) ),( ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,BR ) ) - Max( Min( PN ,Const ),( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) ) + Max( Max( ( Min( ( ( FirstVNF_RAM * AMS ) / ( CRS - Const ) ) ,Min( ( DDR / RRS ) ,( MRS - FirstVNF_Mem ) ) ) + Min( ( ( MRS / PN ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ACS * FirstVNF_RAM_Server ),( FirstVNF_RAM - PN ) ) ) ),( ( ( ( ARS + MDR ) + Max( BR,ACS ) ) * ( ( FirstVNF_Mem + PN ) - ( FirstVNF_RAM_Server * CRS ) ) ) + Max( ( Min( FirstVNF_CPU_Server ,Const ) * ( AMS - FirstVNF_RAM_Server ) ),Min( ( CRS + ARS ) ,( FirstVNF_CPU_Server / MRS ) ) ) ) ),( Max( ( Max( Min( FirstVNF_Mem ,MDR ),( ARS / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,ARS ) ) ),( ( Max( ACS,AMS ) + ( RRS - MDR ) ) - Min( ( DDR / MRS ) ,( ACS + MDR ) ) ) ) / ( ( Min( ( MRS * FirstVNF_Mem ) ,Min( ARS ,PN ) ) * ( ( AMS * RRS ) * ( ARS / ACS ) ) ) - Min( Min( ( ACS * PN ) ,( DDR + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_Mem_Server / Const ) ,( CRS + DDR ) ) ) ) ) ) ) / ( ( ( Max( ( ( ( MDR * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS - Const ) ) ),Min( ( Min( FirstVNF_Mem ,BR ) * ( FirstVNF_Mem_Server / Const ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) + ( RRS + FirstVNF_Mem_Server ) ) ) ) * ( ( Max( Min( BR ,ACS ),( FirstVNF_Mem_Server - MDR ) ) + Max( Min( RRS ,FirstVNF_RAM ),Max( PN,ARS ) ) ) * ( ( ( ARS - RRS ) - ( Const - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / MRS ) / ( ACS + DDR ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM - RRS ) * ( MDR * RRS ) ) - ( ( Const - BR ) + ( FirstVNF_RAM * DDR ) ) ) / Max( Min( Min( PN ,PN ) ,Max( ARS,MDR ) ),Min( ( FirstVNF_RAM + RRS ) ,Max( FirstVNF_CPU_Server,AMS ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_Mem ) - Min( MRS ,ARS ) ) - ( ( PN + FirstVNF_Mem ) * Max( PN,FirstVNF_CPU ) ) ) ,( ( ( RRS * CRS ) * Min( ACS ,Const ) ) - ( ( AMS - DDR ) * ( MDR / MRS ) ) ) ) ) ) - ( ( ( ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( DDR * PN ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ,Max( RRS,CRS ) ) ) / ( ( ( MDR + BR ) * ( FirstVNF_RAM_Server * ARS ) ) / ( ( CRS + MDR ) * ( RRS * AMS ) ) ) ) - Max( ( Max( Max( FirstVNF_CPU_Server,ACS ),Max( CRS,PN ) ) + ( ( FirstVNF_RAM_Server - MDR ) / Max( FirstVNF_CPU,Const ) ) ),( ( ( RRS * AMS ) * ( PN - ARS ) ) + ( ( MRS * FirstVNF_Mem_Server ) + ( RRS * DDR ) ) ) ) ) - ( ( ( ( ( RRS - ARS ) + ( ARS + FirstVNF_Mem_Server ) ) * ( ( MRS * CRS ) * Min( Const ,RRS ) ) ) + ( ( Max( FirstVNF_Mem,MDR ) + ( MRS - FirstVNF_CPU ) ) + ( Max( DDR,FirstVNF_CPU_Server ) / Min( DDR ,DDR ) ) ) ) * Max( ( ( ( ARS - MRS ) * ( FirstVNF_CPU_Server - PN ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM ) ) ),( ( ( Const / PN ) - Min( FirstVNF_CPU ,CRS ) ) + ( Max( ACS,FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( MUC + RCSe ) * MLU ) / ( ( ( MUR - CS ) - RMSe ) + MLU ) )", "obj1": 0.593065693430657, "obj2": 0.43525968038522633}, {"determining": "( ( MRS + FirstVNF_Mem_Server ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( DS / CS ) + ( MUR - ( MLU - MLU ) ) )", "obj1": 0.6386861313868614, "obj2": 0.3676491366334357}, {"determining": "( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ) * ( FirstVNF_Mem / BR ) )", "choosing": "( Max( RMSe,Min( ( DS + Max( Max( ( MLU * MUR ),Min( CS ,RMSe ) ),RMSe ) ) ,CS ) ) - Max( ( ( ( MLU - ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) - MUR ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( Min( Max( RRS,DDR ) ,ACS ) * ( FirstVNF_Mem / BR ) ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Max( Max( ( MLU * MUR ),Min( CS ,RMSe ) ),RMSe ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.640836173147842}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( PN ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + CS ),( ( MLU + ( ( MUR * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.640836173147842}, {"determining": "( ( AMS * DDR ) - Min( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + ( ( DS * CS ) - ( MUM - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * DDR ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4708029197080292, "obj2": 0.5813005990480465}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( FirstVNF_CPU_Server ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( DS * CS ) - ( MUM / RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.48722627737226276, "obj2": 0.5782662796063703}, {"determining": "( Max( RRS,Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * Const ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) - CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.6080251420765431}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const - Const ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( RRSe + RCSe ),( ( MLU + Min( ( DS * CS ) ,( MUM / DS ) ) ) / RRSe ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.6080251420765431}, {"determining": "( ( Const * FirstVNF_Mem ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( MUR - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41605839416058393, "obj2": 0.638008621008869}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ),FirstVNF_CPU_Server ) / PN )", "choosing": "( ( Min( CS ,CS ) / MUC ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Min( ( DS + RCSe ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6198527028472555}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / ( MLU + ( MUC + MUR ) ) ) - Max( ( DS + RCSe ),( ( MLU + ( Max( DS,RCSe ) - ( MUM - RMSe ) ) ) / RMSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6442429662578432}, {"determining": "Min( Max( Const,BR ) ,Min( RRS ,FirstVNF_RAM ) )", "choosing": "( Min( ( ( Min( ( ( ( CS / RMSe ) - Max( MUM,DS ) ) - ( ( RCSe / MLU ) * Min( MUC ,MUC ) ) ) ,( ( ( RMSe / RMSe ) * Min( MUM ,MUC ) ) / ( ( CS - DS ) - Min( RRSe ,RCSe ) ) ) ) + Min( ( ( ( CS - RMSe ) + ( MUC - MUC ) ) * Max( ( MUC * MLU ),Max( MUR,RCSe ) ) ) ,( Max( ( RRSe / DS ),Max( MUC,MUM ) ) * Min( Min( DS ,DS ) ,Max( RRSe,RCSe ) ) ) ) ) + ( ( ( ( ( RCSe * RCSe ) * ( MLU + MUC ) ) + ( ( MUR + MLU ) * ( CS * MLU ) ) ) - ( ( Max( MLU,RRSe ) - Max( RCSe,MUM ) ) * ( ( MLU - MUM ) / ( RRSe + CS ) ) ) ) - Min( ( ( Max( DS,MLU ) - ( RMSe / MUM ) ) / Min( ( RCSe + CS ) ,Max( MUC,MLU ) ) ) ,( ( ( CS - CS ) * ( RRSe - MLU ) ) - ( Max( MLU,MLU ) * ( MUM / RRSe ) ) ) ) ) ) ,( Min( ( ( ( ( DS * RMSe ) / ( RCSe + MLU ) ) / ( Max( DS,MUR ) + ( MUR * DS ) ) ) / ( Max( Max( MUC,RMSe ),( MLU + RRSe ) ) + ( ( CS + DS ) * Min( RMSe ,RCSe ) ) ) ) ,( ( ( ( RCSe + RCSe ) + ( RRSe - RCSe ) ) + Max( ( DS - MUM ),Min( CS ,DS ) ) ) / ( ( Min( RCSe ,CS ) - ( RCSe + CS ) ) / ( ( RCSe - RCSe ) / ( MUM - RCSe ) ) ) ) ) - ( Min( ( ( ( CS / MUC ) / ( RMSe / CS ) ) * ( ( DS * CS ) - ( MUM - MUR ) ) ) ,Max( Min( ( RRSe / MLU ) ,( RMSe + DS ) ),( ( MUC * RMSe ) / Max( RMSe,MUR ) ) ) ) / ( Min( ( Max( RMSe,CS ) * ( DS * MUM ) ) ,Min( ( DS + MUC ) ,( MUC / MLU ) ) ) / ( Min( Min( CS ,DS ) ,Max( DS,MUM ) ) - Max( ( MUM - RMSe ),Max( RCSe,DS ) ) ) ) ) ) ) * Max( Max( ( Max( Max( ( Min( DS ,MUR ) - Min( CS ,RMSe ) ),( Min( MUR ,DS ) + ( RMSe - MLU ) ) ),Min( ( Max( CS,CS ) - ( DS - MLU ) ) ,( ( CS - RMSe ) - ( RMSe - MUR ) ) ) ) / ( ( Max( ( MUR * MUR ),Min( RRSe ,MUM ) ) * ( Min( RMSe ,RCSe ) + ( RMSe + MUC ) ) ) / Min( ( Max( MUR,RMSe ) + Min( MUM ,RCSe ) ) ,Min( ( RCSe - CS ) ,( MUR * DS ) ) ) ) ),Max( ( Max( ( ( MUM / RMSe ) - ( RMSe / MUC ) ),Max( ( MUC - MUM ),( MUC / RCSe ) ) ) * ( ( ( CS / MUC ) * ( RRSe + MUC ) ) - ( Min( MLU ,MUM ) + Max( RMSe,CS ) ) ) ),Min( ( ( ( MUR + MUC ) + ( RRSe - DS ) ) + Max( ( RCSe + MUR ),( MUM - RCSe ) ) ) ,Min( ( Min( RMSe ,MLU ) / Max( CS,MUR ) ) ,Min( Min( MLU ,MUR ) ,( DS / MUM ) ) ) ) ) ),( ( ( ( ( ( RRSe / DS ) - ( RMSe * RMSe ) ) + Max( ( DS / DS ),( DS - CS ) ) ) / Min( ( Min( MUC ,RCSe ) / ( RRSe - MLU ) ) ,( ( RMSe - MUM ) - Min( MUM ,MUM ) ) ) ) / ( ( ( ( RRSe / RRSe ) / Max( DS,RRSe ) ) + ( Min( MUM ,DS ) * Max( MUC,MLU ) ) ) / ( ( Min( MLU ,RRSe ) - Max( MLU,RMSe ) ) + ( ( MUM / RCSe ) + Min( DS ,MUR ) ) ) ) ) / ( ( Min( ( Max( RRSe,RMSe ) / Min( RMSe ,MLU ) ) ,( ( RRSe * MUC ) - ( MUM + RCSe ) ) ) * ( Max( ( CS / CS ),( DS - MUM ) ) - ( ( MUR / RCSe ) / ( MUC * MUC ) ) ) ) - ( ( ( Max( RCSe,RMSe ) * ( MUM * RRSe ) ) / Min( ( MUR * DS ) ,( RCSe * DS ) ) ) - ( Min( Min( MLU ,MUM ) ,Max( MLU,RCSe ) ) - ( ( MUM + RRSe ) + Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.5414368860753821}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - ( MUM + RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6439703778747508}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ARS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * Max( DDR,ACS ) )", "choosing": "( Min( Max( RCSe,CS ) ,Max( Min( ( Min( MLU ,( ( DS * CS ) - Max( MUC,CS ) ) ) + CS ) ,RMSe ),( ( ( RMSe * ( RRSe + RMSe ) ) * RMSe ) / Max( RRSe,DS ) ) ) ) + ( DS * ( ( DS - Min( ( ( ( MUC - RCSe ) - MUM ) + MLU ) ,DS ) ) - RRSe ) ) )", "obj1": 0.9215328467153284, "obj2": 0.08430878421680844}, {"determining": "( Const / Max( FirstVNF_RAM_Server,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( MLU,( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.5766423357664233, "obj2": 0.4739257050789401}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ARS ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( Min( ( DS * RCSe ) ,Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * RCSe ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( ( AMS * DDR ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 0.4708029197080292, "obj2": 0.5813005990480465}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ,( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * PN ) ) ) * RRS ) )", "choosing": "( ( MLU / Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( MUM,( ( MLU + ( ( DS * CS ) - ( MUM - DS ) ) ) / RRSe ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.626267133848732}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * PN ) )", "choosing": "( ( MLU - ( MUM + RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6439703778747508}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( PN / Const ),( ARS / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( Min( MLU ,Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.46897810218978103, "obj2": 0.5859897759770868}, {"determining": "( Max( RRS,AMS ) / Min( ( Max( Max( RRS,DDR ),ACS ) * PN ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) / Max( Max( ( MLU * MUR ),Min( CS ,RMSe ) ),RMSe ) ) )", "obj1": 0.4197080291970803, "obj2": 0.6363183214729411}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( RRS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( RMSe + MUR ) ) ) + ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6198527028472555}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( RMSe + MUR ) ) ) + ( Min( Min( RCSe ,CS ) ,DS ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6198527028472555}, {"determining": "( Max( RRS,MRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MUR - DS ) + ( RMSe / MUC ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6442429662578432}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) / ARS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MUC + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Const / ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,FirstVNF_CPU_Server ) ,ACS ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( MUC + MUR ) + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,( MLU + CS ) ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.626267133848732}, {"determining": "( ( AMS * DDR ) - Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 0.4708029197080292, "obj2": 0.5813005990480465}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( Max( RRS,( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / RRS ) ) ) / PN ) )", "choosing": "( Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - MUM ) ) ) / RRSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.626267133848732}], "34": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / AMS ) ) ) ),FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Min( ( MLU - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.6192548124238527}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.6192548124238527}, {"determining": "( ( ( ( ( ( Min( Max( FirstVNF_RAM,ARS ) ,( ARS / FirstVNF_CPU_Server ) ) * Min( ( ARS / Const ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) + Max( Max( ( FirstVNF_Mem / DDR ),( RRS * RRS ) ),Min( ( MDR + CRS ) ,( MRS - BR ) ) ) ) / Max( ( ( Max( Const,ARS ) - ( BR - MDR ) ) - ( Min( FirstVNF_RAM_Server ,PN ) / ( FirstVNF_RAM - MDR ) ) ),Max( Min( ( Const - FirstVNF_CPU_Server ) ,Min( PN ,ACS ) ),Max( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ),Min( FirstVNF_RAM ,MRS ) ) ) ) ) + ( ( ( ( ( BR - ARS ) * ( PN / FirstVNF_Mem ) ) * ( ( Const + MRS ) / ( ACS + FirstVNF_RAM_Server ) ) ) + ( ( Max( BR,FirstVNF_Mem ) + Min( CRS ,CRS ) ) + Min( ( FirstVNF_RAM / Const ) ,( FirstVNF_Mem / FirstVNF_CPU ) ) ) ) - Max( ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * ( CRS - PN ) ) * Min( ( PN * FirstVNF_RAM_Server ) ,( ACS - BR ) ) ),( ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,BR ) ) - Max( Min( PN ,Const ),( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) ) ) + Max( Max( ( Min( ( ( FirstVNF_RAM * AMS ) / ( CRS - Const ) ) ,Min( ( DDR / RRS ) ,( MRS - FirstVNF_Mem ) ) ) + Min( ( ( MRS / PN ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,Max( ( ACS * FirstVNF_RAM_Server ),( FirstVNF_RAM - PN ) ) ) ),( ( ( ( ARS + MDR ) + Max( BR,ACS ) ) * ( ( FirstVNF_Mem + PN ) - ( FirstVNF_RAM_Server * CRS ) ) ) + Max( ( Min( FirstVNF_CPU_Server ,Const ) * ( AMS - FirstVNF_RAM_Server ) ),Min( ( CRS + ARS ) ,( FirstVNF_CPU_Server / MRS ) ) ) ) ),( Max( ( Max( Min( FirstVNF_Mem ,MDR ),( ARS / FirstVNF_CPU_Server ) ) * Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,ARS ) ) ),( ( Max( ACS,AMS ) + ( RRS - MDR ) ) - Min( ( DDR / MRS ) ,( ACS + MDR ) ) ) ) / ( ( Min( ( MRS * FirstVNF_Mem ) ,Min( ARS ,PN ) ) * ( ( AMS * RRS ) * ( ARS / ACS ) ) ) - Min( Min( ( ACS * PN ) ,( DDR + FirstVNF_CPU_Server ) ) ,Min( ( FirstVNF_Mem_Server / Const ) ,( CRS + DDR ) ) ) ) ) ) ) / ( ( ( Max( ( ( ( MDR * FirstVNF_Mem_Server ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( RRS - Const ) ) ),Min( ( Min( FirstVNF_Mem ,BR ) * ( FirstVNF_Mem_Server / Const ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) + ( RRS + FirstVNF_Mem_Server ) ) ) ) * ( ( Max( Min( BR ,ACS ),( FirstVNF_Mem_Server - MDR ) ) + Max( Min( RRS ,FirstVNF_RAM ),Max( PN,ARS ) ) ) * ( ( ( ARS - RRS ) - ( Const - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / MRS ) / ( ACS + DDR ) ) ) ) ) * ( ( ( ( ( FirstVNF_RAM - RRS ) * ( MDR * RRS ) ) - ( ( Const - BR ) + ( FirstVNF_RAM * DDR ) ) ) / Max( Min( Min( PN ,PN ) ,Max( ARS,MDR ) ),Min( ( FirstVNF_RAM + RRS ) ,Max( FirstVNF_CPU_Server,AMS ) ) ) ) / Min( ( ( Min( DDR ,FirstVNF_Mem ) - Min( MRS ,ARS ) ) - ( ( PN + FirstVNF_Mem ) * Max( PN,FirstVNF_CPU ) ) ) ,( ( ( RRS * CRS ) * Min( ACS ,Const ) ) - ( ( AMS - DDR ) * ( MDR / MRS ) ) ) ) ) ) - ( ( ( ( ( Min( FirstVNF_RAM_Server ,AMS ) / ( DDR * PN ) ) - Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ,Max( RRS,CRS ) ) ) / ( ( ( MDR + BR ) * ( FirstVNF_RAM_Server * ARS ) ) / ( ( CRS + MDR ) * ( RRS * AMS ) ) ) ) - Max( ( Max( Max( FirstVNF_CPU_Server,ACS ),Max( CRS,PN ) ) + ( ( FirstVNF_RAM_Server - MDR ) / Max( FirstVNF_CPU,Const ) ) ),( ( ( RRS * AMS ) * ( PN - ARS ) ) + ( ( MRS * FirstVNF_Mem_Server ) + ( RRS * DDR ) ) ) ) ) - ( ( ( ( ( RRS - ARS ) + ( ARS + FirstVNF_Mem_Server ) ) * ( ( MRS * CRS ) * Min( Const ,RRS ) ) ) + ( ( Max( FirstVNF_Mem,MDR ) + ( MRS - FirstVNF_CPU ) ) + ( Max( DDR,FirstVNF_CPU_Server ) / Min( DDR ,DDR ) ) ) ) * Max( ( ( ( ARS - MRS ) * ( FirstVNF_CPU_Server - PN ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM ) ) ),( ( ( Const / PN ) - Min( FirstVNF_CPU ,CRS ) ) + ( Max( ACS,FirstVNF_RAM_Server ) * Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( MUC + RCSe ) * MLU ) / ( ( ( MUR - CS ) - RMSe ) + MLU ) )", "obj1": 0.593065693430657, "obj2": 0.43525968038522633}, {"determining": "( Max( RRS,Min( ARS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * Const ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) - CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.6080251420765431}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const - Const ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( RRSe + RCSe ),( ( MLU + Min( ( DS * CS ) ,( MUM / DS ) ) ) / RRSe ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.6080251420765431}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "Min( Max( Const,BR ) ,Min( RRS ,FirstVNF_RAM ) )", "choosing": "( Min( ( ( Min( ( ( ( CS / RMSe ) - Max( MUM,DS ) ) - ( ( RCSe / MLU ) * Min( MUC ,MUC ) ) ) ,( ( ( RMSe / RMSe ) * Min( MUM ,MUC ) ) / ( ( CS - DS ) - Min( RRSe ,RCSe ) ) ) ) + Min( ( ( ( CS - RMSe ) + ( MUC - MUC ) ) * Max( ( MUC * MLU ),Max( MUR,RCSe ) ) ) ,( Max( ( RRSe / DS ),Max( MUC,MUM ) ) * Min( Min( DS ,DS ) ,Max( RRSe,RCSe ) ) ) ) ) + ( ( ( ( ( RCSe * RCSe ) * ( MLU + MUC ) ) + ( ( MUR + MLU ) * ( CS * MLU ) ) ) - ( ( Max( MLU,RRSe ) - Max( RCSe,MUM ) ) * ( ( MLU - MUM ) / ( RRSe + CS ) ) ) ) - Min( ( ( Max( DS,MLU ) - ( RMSe / MUM ) ) / Min( ( RCSe + CS ) ,Max( MUC,MLU ) ) ) ,( ( ( CS - CS ) * ( RRSe - MLU ) ) - ( Max( MLU,MLU ) * ( MUM / RRSe ) ) ) ) ) ) ,( Min( ( ( ( ( DS * RMSe ) / ( RCSe + MLU ) ) / ( Max( DS,MUR ) + ( MUR * DS ) ) ) / ( Max( Max( MUC,RMSe ),( MLU + RRSe ) ) + ( ( CS + DS ) * Min( RMSe ,RCSe ) ) ) ) ,( ( ( ( RCSe + RCSe ) + ( RRSe - RCSe ) ) + Max( ( DS - MUM ),Min( CS ,DS ) ) ) / ( ( Min( RCSe ,CS ) - ( RCSe + CS ) ) / ( ( RCSe - RCSe ) / ( MUM - RCSe ) ) ) ) ) - ( Min( ( ( ( CS / MUC ) / ( RMSe / CS ) ) * ( ( DS * CS ) - ( MUM - MUR ) ) ) ,Max( Min( ( RRSe / MLU ) ,( RMSe + DS ) ),( ( MUC * RMSe ) / Max( RMSe,MUR ) ) ) ) / ( Min( ( Max( RMSe,CS ) * ( DS * MUM ) ) ,Min( ( DS + MUC ) ,( MUC / MLU ) ) ) / ( Min( Min( CS ,DS ) ,Max( DS,MUM ) ) - Max( ( MUM - RMSe ),Max( RCSe,DS ) ) ) ) ) ) ) * Max( Max( ( Max( Max( ( Min( DS ,MUR ) - Min( CS ,RMSe ) ),( Min( MUR ,DS ) + ( RMSe - MLU ) ) ),Min( ( Max( CS,CS ) - ( DS - MLU ) ) ,( ( CS - RMSe ) - ( RMSe - MUR ) ) ) ) / ( ( Max( ( MUR * MUR ),Min( RRSe ,MUM ) ) * ( Min( RMSe ,RCSe ) + ( RMSe + MUC ) ) ) / Min( ( Max( MUR,RMSe ) + Min( MUM ,RCSe ) ) ,Min( ( RCSe - CS ) ,( MUR * DS ) ) ) ) ),Max( ( Max( ( ( MUM / RMSe ) - ( RMSe / MUC ) ),Max( ( MUC - MUM ),( MUC / RCSe ) ) ) * ( ( ( CS / MUC ) * ( RRSe + MUC ) ) - ( Min( MLU ,MUM ) + Max( RMSe,CS ) ) ) ),Min( ( ( ( MUR + MUC ) + ( RRSe - DS ) ) + Max( ( RCSe + MUR ),( MUM - RCSe ) ) ) ,Min( ( Min( RMSe ,MLU ) / Max( CS,MUR ) ) ,Min( Min( MLU ,MUR ) ,( DS / MUM ) ) ) ) ) ),( ( ( ( ( ( RRSe / DS ) - ( RMSe * RMSe ) ) + Max( ( DS / DS ),( DS - CS ) ) ) / Min( ( Min( MUC ,RCSe ) / ( RRSe - MLU ) ) ,( ( RMSe - MUM ) - Min( MUM ,MUM ) ) ) ) / ( ( ( ( RRSe / RRSe ) / Max( DS,RRSe ) ) + ( Min( MUM ,DS ) * Max( MUC,MLU ) ) ) / ( ( Min( MLU ,RRSe ) - Max( MLU,RMSe ) ) + ( ( MUM / RCSe ) + Min( DS ,MUR ) ) ) ) ) / ( ( Min( ( Max( RRSe,RMSe ) / Min( RMSe ,MLU ) ) ,( ( RRSe * MUC ) - ( MUM + RCSe ) ) ) * ( Max( ( CS / CS ),( DS - MUM ) ) - ( ( MUR / RCSe ) / ( MUC * MUC ) ) ) ) - ( ( ( Max( RCSe,RMSe ) * ( MUM * RRSe ) ) / Min( ( MUR * DS ) ,( RCSe * DS ) ) ) - ( Min( Min( MLU ,MUM ) ,Max( MLU,RCSe ) ) - ( ( MUM + RRSe ) + Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.5414368860753821}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ARS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Const / Max( FirstVNF_RAM_Server,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( MLU,( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.5766423357664233, "obj2": 0.4739257050789401}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ARS ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( Min( ( DS * RCSe ) ,Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * RCSe ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) / ARS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MUC + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( Max( FirstVNF_Mem_Server,DDR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_CPU_Server ) ) ) * DDR ) - Min( RRS ,CRS ) )", "choosing": "( Min( MUM ,Min( ( DS + RCSe ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) + ( RRSe / MUR ) )", "obj1": 0.5821167883211679, "obj2": 0.4498413695479936}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - ( MUM - RMSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.44525547445255476, "obj2": 0.5871475299930061}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server )", "choosing": "( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.6080251420765431}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ARS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6240975292254735}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) / ( Max( RRS,( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / RRS ) ) ) / PN ) ) / Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( RRS * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6228406820621466}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS + FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server - ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - ( MUC + ( ( DS * RMSe ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( ( MUR * DS ) ,( RMSe / MUC ) ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.42700729927007297, "obj2": 0.6193465115158796}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - Min( ( MUR * DS ) ,( RMSe / MUC ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6240975292254735}, {"determining": "( Max( ( FirstVNF_Mem / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / AMS ) ) ) ),FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - ( ( MLU + ( MUR - ( MUM - RMSe ) ) ) / RRSe ) ) - ( Min( ( MLU - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6296912954906523}, {"determining": "( ( Const * FirstVNF_Mem ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Min( ( MLU - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.6192548124238527}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / ( MLU + ( MUC + MUR ) ) ) - Max( ( DS + RCSe ),( ( MLU + ( Max( DS,RCSe ) - ( MUM - RMSe ) ) ) / RMSe ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * RRS ) )", "choosing": "( ( ( MLU + ( ( DS * CS ) - ( MUM - DS ) ) ) - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( ( ( ( Min( ( ( ( ACS + RRS ) + ( MDR - FirstVNF_Mem_Server ) ) + ( ( PN + PN ) / Min( MRS ,FirstVNF_CPU ) ) ) ,( ( ( FirstVNF_RAM / PN ) * ( RRS - PN ) ) / ( ( RRS - MRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( ( Min( ( FirstVNF_RAM / FirstVNF_RAM ) ,( FirstVNF_Mem_Server / MDR ) ) - Min( ( CRS - FirstVNF_CPU ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) + ( ( ( ACS * Const ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) / ( ( CRS + FirstVNF_RAM_Server ) - ( ARS - DDR ) ) ) ) ) - ( ( Min( ( Min( FirstVNF_Mem_Server ,RRS ) * ( FirstVNF_Mem_Server * ARS ) ) ,Min( ( FirstVNF_RAM + DDR ) ,( ARS - PN ) ) ) * ( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),FirstVNF_CPU_Server ) * ( ( MDR - FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server * CRS ) ) ) ) - ( ( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem ) ,( PN - FirstVNF_CPU_Server ) ) + Max( ( MRS + MDR ),Max( FirstVNF_Mem,Const ) ) ) * ( Max( ( AMS + RRS ),Min( BR ,FirstVNF_CPU_Server ) ) + ( ( BR / PN ) - ( MRS - ARS ) ) ) ) ) ) * ( Max( ( ( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),( BR + FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM * PN ) / ( FirstVNF_RAM_Server * BR ) ) ) / ( Min( ( MRS / BR ) ,( FirstVNF_RAM + BR ) ) + ( Min( MRS ,DDR ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ),( ( ( ( FirstVNF_Mem - RRS ) / ( CRS - FirstVNF_Mem ) ) + ( ( AMS - AMS ) * ( AMS + AMS ) ) ) * ( ( Max( Const,AMS ) / Min( FirstVNF_CPU_Server ,ACS ) ) / ( Min( FirstVNF_RAM_Server ,ACS ) - ( FirstVNF_Mem_Server + ARS ) ) ) ) ) * Max( ( ( ( Min( AMS ,FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server - MRS ) ) * ( ( DDR - FirstVNF_RAM ) / ( AMS * AMS ) ) ) * Max( Min( ( BR - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,DDR ) ),Min( Min( PN ,FirstVNF_CPU ) ,Min( AMS ,ARS ) ) ) ),Min( ( ( Min( ARS ,FirstVNF_RAM_Server ) - Max( Const,ACS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) * ( MDR * ARS ) ) ) ,Min( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,Max( BR,FirstVNF_RAM ) ) ,( ( FirstVNF_Mem_Server * ACS ) + ( MRS + DDR ) ) ) ) ) ) ) / Min( ( ( ( Min( ( ( FirstVNF_CPU * FirstVNF_CPU ) / ( AMS - FirstVNF_RAM_Server ) ) ,( ( DDR / FirstVNF_Mem_Server ) / ( MRS / Const ) ) ) - ( ( ( RRS + ARS ) * Max( FirstVNF_Mem,Const ) ) * ( ( ARS / ACS ) + ( FirstVNF_CPU_Server * AMS ) ) ) ) * ( ( ( ( FirstVNF_Mem - FirstVNF_Mem ) / ( PN / ARS ) ) / ( ( BR / MDR ) - ( AMS - FirstVNF_CPU ) ) ) * ( Max( ( MDR - AMS ),( FirstVNF_RAM_Server / ACS ) ) / ( Max( MRS,FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) ) ) * Max( ( ( ( ( FirstVNF_CPU - CRS ) - ( BR - AMS ) ) + ( ( PN - AMS ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) * ( ( ( CRS + AMS ) * ( Const * RRS ) ) * Max( ( MRS + PN ),( FirstVNF_Mem + RRS ) ) ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + ( PN - PN ) ) * ( ( AMS - FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / AMS ) ) ) * Max( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU * ACS ) ),( ( Const - MDR ) * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) ) ) ) ,( ( ( ( ( ( MRS * CRS ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( FirstVNF_RAM - MRS ) * ( ARS + CRS ) ) ) + Min( Min( ( FirstVNF_Mem_Server + MRS ) ,( MDR + AMS ) ) ,( ( FirstVNF_CPU - MDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) / ( Min( ( ( FirstVNF_Mem_Server + RRS ) + ( DDR * FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_RAM,BR ) - ( MRS + ACS ) ) ) * ( Min( ( MRS * PN ) ,( FirstVNF_Mem - BR ) ) + Max( ( MDR + CRS ),( FirstVNF_Mem_Server * AMS ) ) ) ) ) * Max( ( ( Max( Min( FirstVNF_Mem ,PN ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ) + Min( ( ACS * FirstVNF_RAM ) ,( ARS / ACS ) ) ) - ( ( ( PN * ACS ) / Min( CRS ,FirstVNF_CPU ) ) - ( ( BR * FirstVNF_RAM ) * ( RRS - PN ) ) ) ),( ( ( Max( CRS,BR ) - ( DDR * CRS ) ) * ( Max( FirstVNF_RAM_Server,MDR ) / ( MDR * ARS ) ) ) + Max( Min( ( FirstVNF_RAM * CRS ) ,Min( MRS ,AMS ) ),Min( ( FirstVNF_Mem_Server - DDR ) ,( AMS - PN ) ) ) ) ) ) ) )", "choosing": "( ( CS + ( ( Max( MUM,RCSe ) + ( ( MLU + Max( ( MLU + CS ),( MUC + MUM ) ) ) - ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) ) / MUR ) ) - ( RMSe / ( CS * MUM ) ) )", "obj1": 0.5109489051094891, "obj2": 0.5184976756928353}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( Min( PN ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.6192548124238527}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( RCSe,CS ) ,Max( Min( ( Min( MLU ,( ( DS * CS ) - Max( MUC,CS ) ) ) + CS ) ,RMSe ),( ( ( RMSe * ( RRSe + RMSe ) ) * RMSe ) / Max( RRSe,DS ) ) ) ) + ( DS * ( CS / MUC ) ) )", "obj1": 0.5383211678832117, "obj2": 0.4912297609672485}, {"determining": "Min( Max( Const,BR ) ,Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( Min( ( ( ( CS / RMSe ) - Max( MUM,DS ) ) - ( ( RCSe / MLU ) * Min( MUC ,MUC ) ) ) ,( ( ( RMSe / RMSe ) * Min( MUM ,MUC ) ) / ( ( CS - DS ) - Min( RRSe ,RCSe ) ) ) ) + Min( ( ( ( CS - RMSe ) + ( MUC - MUC ) ) * Max( ( MUC * MLU ),Max( MUR,RCSe ) ) ) ,( Max( ( RRSe / DS ),Max( MUC,MUM ) ) * Min( Min( DS ,DS ) ,Max( RRSe,RCSe ) ) ) ) ) + ( ( ( ( ( RCSe * RCSe ) * ( MLU + MUC ) ) + ( ( MUR + MLU ) * ( CS * MLU ) ) ) - ( ( Max( MLU,RRSe ) - Max( RCSe,MUM ) ) * ( ( MLU - MUM ) / ( RRSe + CS ) ) ) ) - Min( ( ( Max( DS,MLU ) - ( RMSe / MUM ) ) / Min( ( RCSe + CS ) ,Max( MUC,MLU ) ) ) ,( ( ( CS - CS ) * ( RRSe - MLU ) ) - ( Max( MLU,MLU ) * ( MUM / RRSe ) ) ) ) ) ) ,( Min( ( ( ( ( DS * RMSe ) / ( RCSe + MLU ) ) / ( Max( DS,MUR ) + ( MUR * DS ) ) ) / ( Max( Max( MUC,RMSe ),( MLU + RRSe ) ) + ( ( CS + DS ) * Min( RMSe ,RCSe ) ) ) ) ,( ( ( ( RCSe + RCSe ) + ( RRSe - RCSe ) ) + Max( ( DS - MUM ),Min( CS ,DS ) ) ) / ( ( Min( RCSe ,CS ) - ( RCSe + CS ) ) / ( ( RCSe - RCSe ) / ( MUM - RCSe ) ) ) ) ) - ( Min( ( ( ( CS / MUC ) / ( RMSe / CS ) ) * ( ( DS * CS ) - ( MUM - MUR ) ) ) ,Max( Min( ( RRSe / MLU ) ,( RMSe + DS ) ),( ( MUC * RMSe ) / Max( RMSe,MUR ) ) ) ) / ( Min( ( Max( RMSe,CS ) * ( DS * MUM ) ) ,Min( ( DS + MUC ) ,( MUC / MLU ) ) ) / ( Min( Min( CS ,DS ) ,Max( DS,MUM ) ) - Max( ( MUM - RMSe ),Max( RCSe,DS ) ) ) ) ) ) ) * Max( Max( ( Max( Max( ( Min( DS ,MUR ) - Min( CS ,RMSe ) ),( Min( MUR ,DS ) + ( RMSe - MLU ) ) ),Min( ( Max( CS,CS ) - ( DS - MLU ) ) ,( ( CS - RMSe ) - ( RMSe - MUR ) ) ) ) / ( ( Max( ( MUR * MUR ),Min( RRSe ,MUM ) ) * ( Min( RMSe ,RCSe ) + ( RMSe + MUC ) ) ) / Min( ( Max( MUR,RMSe ) + Min( MUM ,RCSe ) ) ,Min( ( RCSe - CS ) ,( MUR * DS ) ) ) ) ),Max( ( Min( ( ( MUM / RMSe ) - ( RMSe / MUC ) ) ,Max( ( MUC - MUM ),( MUC / RCSe ) ) ) * ( ( ( CS / MUC ) * ( RRSe + MUC ) ) - ( Min( MLU ,MUM ) + Max( RMSe,CS ) ) ) ),Min( ( ( ( MUR + MUC ) + ( RRSe - DS ) ) + Max( ( RCSe + MUR ),( MUM - RCSe ) ) ) ,Min( ( Min( RMSe ,MLU ) / Max( CS,MUR ) ) ,Min( Min( MLU ,MUR ) ,( DS / MUM ) ) ) ) ) ),( ( ( ( ( ( RRSe / DS ) - ( RMSe * RMSe ) ) + Max( ( DS / DS ),( DS - CS ) ) ) / Min( ( Min( MUC ,RCSe ) / ( RRSe - MLU ) ) ,( ( RMSe - MUM ) - Min( MUM ,MUM ) ) ) ) / ( ( ( ( RRSe / RRSe ) / Max( DS,RRSe ) ) + ( Min( MUM ,DS ) * Max( MUC,MLU ) ) ) / ( ( Min( MLU ,RRSe ) - Max( MLU,RMSe ) ) + ( ( MUM / RCSe ) + Min( DS ,MUR ) ) ) ) ) / ( ( Min( ( Max( RRSe,RMSe ) / Min( RMSe ,MLU ) ) ,( ( RRSe * MUC ) - ( MUM + RCSe ) ) ) * ( Max( ( CS / CS ),( DS - MUM ) ) - ( ( MUR / RCSe ) / ( MUC * MUC ) ) ) ) - ( ( ( Max( RCSe,RMSe ) * ( MUM * RRSe ) ) / Min( ( MUR * DS ) ,( RCSe * DS ) ) ) - ( Min( Min( MLU ,MUM ) ,Max( MLU,RCSe ) ) - ( ( MUM + RRSe ) + Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.531021897810219, "obj2": 0.5128254963396963}, {"determining": "Min( Max( Const,BR ) ,Min( RRS ,FirstVNF_RAM ) )", "choosing": "( Min( ( ( Min( ( ( ( CS / RMSe ) - Max( MUM,DS ) ) - ( ( RCSe / MLU ) * Min( MUC ,MUC ) ) ) ,( ( ( RMSe / RMSe ) * Min( MUM ,MUC ) ) / ( ( CS - DS ) - Min( RRSe ,RCSe ) ) ) ) + Min( ( ( ( CS - RMSe ) + ( MUC - MUC ) ) * Max( ( MUC * MLU ),Max( MUR,RCSe ) ) ) ,( Max( ( RRSe / DS ),Max( MUC,MUM ) ) * Min( Min( DS ,DS ) ,Max( RRSe,RCSe ) ) ) ) ) + ( ( ( ( ( RCSe * RCSe ) * ( MLU + MUC ) ) + ( ( MUR + MLU ) * ( CS * MLU ) ) ) - ( ( Max( MLU,RRSe ) - Max( RCSe,MUM ) ) * ( ( MLU - MUM ) / ( RRSe + CS ) ) ) ) - Min( ( ( Max( DS,MLU ) - ( RMSe / MUM ) ) / Min( ( RCSe + CS ) ,Max( MUC,MLU ) ) ) ,( ( ( CS - CS ) * ( RRSe - MLU ) ) - ( Max( MLU,MLU ) * ( MUM / RRSe ) ) ) ) ) ) ,( Min( ( ( ( ( DS * RMSe ) / ( RCSe + MLU ) ) / ( Max( DS,MUR ) + ( MUR * DS ) ) ) / ( Max( Max( MUC,RMSe ),( MLU + RRSe ) ) + ( ( CS + DS ) * Min( RMSe ,RCSe ) ) ) ) ,( ( ( ( RCSe + RCSe ) + ( RRSe - RCSe ) ) + Max( ( DS - MUM ),Min( CS ,DS ) ) ) / ( ( Min( RCSe ,CS ) - ( RCSe + CS ) ) / ( ( RCSe - RCSe ) / ( MUM - RCSe ) ) ) ) ) - ( Min( ( ( ( CS / MUC ) / ( RMSe / CS ) ) * ( ( DS * CS ) - ( MUM - MUR ) ) ) ,Max( Min( ( RRSe / MLU ) ,( RMSe + DS ) ),( ( MUC * RMSe ) / Max( RMSe,MUR ) ) ) ) / ( Min( ( Max( RMSe,CS ) * ( DS * MUM ) ) ,Min( ( DS + MUC ) ,( MUC / MLU ) ) ) / ( Min( Min( CS ,DS ) ,Max( DS,MUM ) ) - Max( ( MUM - RMSe ),Max( RCSe,DS ) ) ) ) ) ) ) * Max( Max( ( Max( Max( ( Min( DS ,MUR ) - Min( CS ,RMSe ) ),( Min( MUR ,DS ) + ( RMSe - MLU ) ) ),Min( ( Max( CS,CS ) - ( DS - MLU ) ) ,( ( CS - RMSe ) - ( RMSe - MUR ) ) ) ) / ( ( Max( ( MUR * MUR ),Min( RRSe ,MUM ) ) * ( Min( RMSe ,RCSe ) + ( RMSe + MUC ) ) ) / Min( ( Max( MUR,RMSe ) + Min( MUM ,RCSe ) ) ,Min( ( RCSe - CS ) ,( MUR * DS ) ) ) ) ),Max( ( Max( ( ( MUM / RMSe ) - ( RMSe / MUC ) ),Max( ( MUC - MUM ),( MUC / RCSe ) ) ) * ( ( ( CS / MUC ) * ( RRSe + MUC ) ) - ( Min( MLU ,MUM ) + Max( RMSe,CS ) ) ) ),Min( ( ( ( MUR + MUC ) + ( RRSe - DS ) ) + Max( ( RCSe + MUR ),( MUM - RCSe ) ) ) ,Min( ( Min( RMSe ,MLU ) / Max( CS,MUR ) ) ,Min( Min( MLU ,MUR ) ,( DS / MUM ) ) ) ) ) ),( ( ( ( ( ( RRSe / DS ) - ( RMSe * RMSe ) ) + Max( ( DS / DS ),( DS - CS ) ) ) / Min( ( Min( MUC ,RCSe ) / ( RRSe - MLU ) ) ,( ( RMSe - MUM ) - Min( MUM ,MUM ) ) ) ) / ( ( ( ( RRSe / RRSe ) / Max( DS,RRSe ) ) + ( Min( MUM ,DS ) * Max( MUC,MLU ) ) ) / ( ( Min( MLU ,RRSe ) - Max( MLU,RMSe ) ) + ( ( MUM / RCSe ) + Min( DS ,MUR ) ) ) ) ) / ( ( Min( ( Max( RRSe,RMSe ) / Min( RMSe ,MLU ) ) ,( ( RRSe * MUC ) - ( MUM + RCSe ) ) ) * ( Max( ( CS / CS ),( DS - MUM ) ) - ( ( MUR / RCSe ) / ( MUC * MUC ) ) ) ) - ( ( ( Max( RCSe,RMSe ) * ( MUM * RRSe ) ) / Min( ( MUR * DS ) ,( RCSe * DS ) ) ) - ( Min( Min( MLU ,MUM ) ,Max( MLU,RCSe ) ) - ( ( MUM + RRSe ) + Min( RMSe ,MUC ) ) ) ) ) ) ) )", "obj1": 0.49452554744525545, "obj2": 0.5414368860753821}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / PN ) ) ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - CS ) ) ) / RRSe ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.6080251420765431}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * RRS ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( Min( MLU ,( ( DS * CS ) - ( MUM / RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643535336041147}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643535336041147}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * ( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const + FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) ) ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,RCSe ) ) - MUC ) )", "obj1": 0.44343065693430656, "obj2": 0.6034451490811902}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * RRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + ( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.6192548124238527}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643535336041147}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.6192548124238527}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / FirstVNF_CPU ) + ( FirstVNF_RAM_Server / ( Const * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Max( MUM,RCSe ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM / RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4324817518248175, "obj2": 0.6080251420765431}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) / Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - Min( ( MUR - MUR ) ,( RMSe / MUC ) ) )", "obj1": 0.4324817518248175, "obj2": 0.6080251420765431}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const - Const ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( RRSe + RCSe ),( ( MLU + Min( ( DS * CS ) ,( MUM / DS ) ) ) / RRSe ) ) ) )", "obj1": 0.46167883211678834, "obj2": 0.5598877811368614}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( Max( RRS,DDR ) ,ACS ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * Min( MUR ,CS ) ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643535336041147}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( ( MLU + CS ),RMSe ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643535336041147}, {"determining": "( Max( ( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ) * ( FirstVNF_Mem / BR ) ) ),FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),Min( MDR ,Const ) ) ) )", "choosing": "( ( MLU - CS ) - ( Min( ( MLU - Max( MUM,RCSe ) ) ,Min( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) ,( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.42883211678832117, "obj2": 0.6192548124238527}, {"determining": "( Max( ( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / AMS ) ) ) ),FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( Max( RMSe,Min( ( DS + Max( Max( ( MLU * MUR ),Min( CS ,RMSe ) ),RMSe ) ) ,CS ) ) - Max( ( ( ( MLU - ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) - MUR ),RRSe ) )", "obj1": 0.42883211678832117, "obj2": 0.6192548124238527}], "35": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ARS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ARS ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( Min( ( DS * RCSe ) ,Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * RCSe ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) / ARS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MUC + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server )", "choosing": "( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ARS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6240975292254735}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - Min( ( MUR * DS ) ,( RMSe / MUC ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6240975292254735}, {"determining": "( Max( ( FirstVNF_Mem / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / AMS ) ) ) ),FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - ( ( MLU + ( MUR - ( MUM - RMSe ) ) ) / RRSe ) ) - ( Min( ( MLU - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6296912954906523}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / ( MLU + ( MUC + MUR ) ) ) - Max( ( DS + RCSe ),( ( MLU + ( Max( DS,RCSe ) - ( MUM - RMSe ) ) ) / RMSe ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * RRS ) )", "choosing": "( ( ( MLU + ( ( DS * CS ) - ( MUM - DS ) ) ) - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * RRS ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( Min( MLU ,( ( DS * CS ) - ( MUM / RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643535336041147}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643535336041147}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643535336041147}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( Max( RRS,DDR ) ,ACS ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * Min( MUR ,CS ) ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643535336041147}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( ( MLU + CS ),RMSe ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643535336041147}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - Min( ( MUR * DS ) ,( RMSe / MUC ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6240975292254735}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) ) )", "choosing": "( Min( MLU ,Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( RCSe + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( MUR * RRSe ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( MLU,( ( DS * CS ) - ( MUC - CS ) ) ) + CS ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( RCSe,CS ) ,Max( Min( ( Min( MLU ,( ( DS * CS ) - Max( MUC,CS ) ) ) + CS ) ,RMSe ),( ( ( RMSe * ( RRSe + RMSe ) ) * RMSe ) / Max( RRSe,DS ) ) ) ) + ( DS * ( CS / MUC ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / MDR ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + ( MUR * DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * FirstVNF_CPU_Server ),Min( Min( MRS ,MRS ) ,( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe * MUC ) ) ) + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / ( MLU + ( MUC + MUR ) ) ) - Max( ( DS + DS ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / ( MLU + ( MUC + MUR ) ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * RRS ) )", "choosing": "( ( ( MLU + ( ( DS * CS ) - ( MUM - DS ) ) ) - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / ( MLU + ( MUC + MUR ) ) ) - Max( ( DS + RCSe ),( ( MLU + ( Max( DS,CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * RRS ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,Max( MUC,CS ) ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Min( ( MLU - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + ( ( RMSe * Min( MUR ,CS ) ) - ( CS - RMSe ) ) ) + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( Max( RRS,DDR ) ,ACS ) / Min( ( PN / Const ) ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * Min( MUR ,CS ) ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643535336041147}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( ( Max( RRS,FirstVNF_CPU_Server ) / Max( ( ( PN - Const ) - ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + ( MDR / AMS ) ) ) ),FirstVNF_CPU_Server ) / ( ( ( PN / Const ) + ( FirstVNF_Mem_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( Max( RMSe,Min( ( DS + Max( Max( ( MLU * MUR ),Min( CS ,RMSe ) ),RMSe ) ) ,CS ) ) - Max( ( ( ( MLU - ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) - MUR ),RRSe ) )", "obj1": 0.41058394160583944, "obj2": 0.643535336041147}], "36": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ARS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ARS ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( Min( ( DS * RCSe ) ,Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * RCSe ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) / ARS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MUC + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server )", "choosing": "( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * RRS ) )", "choosing": "( ( ( MLU + ( ( DS * CS ) - ( MUM - DS ) ) ) - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( MLU,( ( DS * CS ) - ( MUC - CS ) ) ) + CS ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( RCSe,CS ) ,Max( Min( ( Min( MLU ,( ( DS * CS ) - Max( MUC,CS ) ) ) + CS ) ,RMSe ),( ( ( RMSe * ( RRSe + RMSe ) ) * RMSe ) / Max( RRSe,DS ) ) ) ) + ( DS * ( CS / MUC ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / MDR ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + ( MUR * DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * FirstVNF_CPU_Server ),Min( Min( MRS ,MRS ) ,( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe * MUC ) ) ) + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * RRS ) )", "choosing": "( ( ( MLU + ( ( DS * CS ) - ( MUM - DS ) ) ) - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * RRS ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,Max( MUC,CS ) ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Min( ( MLU - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + ( ( RMSe * Min( MUR ,CS ) ) - ( CS - RMSe ) ) ) + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) / FirstVNF_Mem_Server )", "choosing": "( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / ( ( MLU - Max( MUM,RCSe ) ) - Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - Min( ( MUR * DS ) ,( RMSe / MUC ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( DS * RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( Min( DS ,RCSe ) / ( MLU + ( MUC + MUR ) ) ) - Max( ( DS + RCSe ),( ( MLU + ( Max( DS,CS ) - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MDR / Const ) ) ) )", "choosing": "( DS + ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( AMS ,FirstVNF_Mem_Server ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + DS ),( MUC + MUR ) ) ) / DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Const * FirstVNF_Mem ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( CS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,MDR ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) + Max( ( DS + RCSe ),( ( MLU + ( DS - ( ( DS + RMSe ) - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}], "37": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ARS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ARS ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( Min( ( DS * RCSe ) ,Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * RCSe ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) / ARS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MUC + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server )", "choosing": "( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * RRS ) )", "choosing": "( ( ( MLU + ( ( DS * CS ) - ( MUM - DS ) ) ) - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * RRS ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( MLU,( ( DS * CS ) - ( MUC - CS ) ) ) + CS ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( ( FirstVNF_Mem - FirstVNF_RAM_Server ) * Min( RRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( RCSe,CS ) ,Max( Min( ( Min( MLU ,( ( DS * CS ) - Max( MUC,CS ) ) ) + CS ) ,RMSe ),( ( ( RMSe * ( RRSe + RMSe ) ) * RMSe ) / Max( RRSe,DS ) ) ) ) + ( DS * ( CS / MUC ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / MDR ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + ( MUR * DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * FirstVNF_CPU_Server ),Min( Min( MRS ,MRS ) ,( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe * MUC ) ) ) + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * RRS ) )", "choosing": "( ( ( MLU + ( ( DS * CS ) - ( MUM - DS ) ) ) - Max( MUM,RCSe ) ) - ( ( ( DS * RCSe ) / Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * CS ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * RRS ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,Max( MUC,CS ) ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( ( MLU - Max( MUM,RCSe ) ) + CS ),( MUC + MUR ) ) ) / ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * CS ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Min( ( MLU - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + ( ( RMSe * Min( MUR ,CS ) ) - ( CS - RMSe ) ) ) + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) / FirstVNF_Mem_Server )", "choosing": "( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / ( ( MLU - Max( MUM,RCSe ) ) - Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( ( PN / Const ) + ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ) + Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - Min( ( MUR * DS ) ,( RMSe / MUC ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( DS * RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) / RRS ) ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( RMSe ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - DS ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,CRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RRSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( ( ( ACS / FirstVNF_CPU_Server ) * ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUR - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * DS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( RRS,Min( AMS ,FirstVNF_Mem_Server ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( Max( Max( ( FirstVNF_RAM_Server / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + RMSe ) + ( ( Min( MUR ,CS ) / MLU ) + Min( ( MUR / DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( RRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( ( DS + RMSe ) * RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}], "38": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - ARS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),Min( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ,( MDR / AMS ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ARS ) )", "choosing": "( ( MLU - Min( MUM ,RCSe ) ) - ( Min( ( DS * RCSe ) ,Max( MLU,MUR ) ) - Max( ( DS + RCSe ),( ( MLU + ( ( RMSe * RCSe ) - ( CS - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812663}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) / ARS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MUC + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Min( ( MLU - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( DS * RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) / RRS ) ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( RMSe ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - DS ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,CRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RRSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( ( ( ACS / FirstVNF_CPU_Server ) * ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUR - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * DS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( RRS,Min( AMS ,FirstVNF_Mem_Server ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( Max( Max( ( FirstVNF_RAM_Server / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + RMSe ) + ( ( Min( MUR ,CS ) / MLU ) + Min( ( MUR / DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( RRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( ( DS + RMSe ) * RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( Max( RRS,FirstVNF_CPU_Server ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( RRSe - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,ACS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Min( ( MLU + CS ) ,( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( FirstVNF_RAM_Server / CRS ) )", "choosing": "( DS + MUM )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,ARS ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * DS ) - ( RMSe - DS ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS / RCSe ),( ( MLU + ( DS - ( ( DS + RMSe ) - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * DS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( ( PN / CRS ),( RRS / ( ARS * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( ( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MUC + CS ),( MUC + MUR ) ) ) * ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR / DS ) ,( RMSe / RRSe ) ) ) ) ),RCSe ) ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server + CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / DS ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( DS + RMSe ) + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS / CRS ) ) ) )", "choosing": "( RCSe + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / Const ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MUR ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - DS ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS / DS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,ARS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,MUC ) * MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( DS + MUC )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( RRS,Min( AMS ,FirstVNF_Mem_Server ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) )", "choosing": "( ( ( Max( MLU,( ( DS * CS ) - ( MUC - CS ) ) ) + CS ) + RCSe ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( MLU,( ( DS * CS ) - ( DS - CS ) ) ) + CS ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}], "39": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) / ARS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MUC + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( Min( ( MLU - Max( MUM,RCSe ) ) ,( ( MLU + Max( ( MLU + MLU ),( MUC + MUR ) ) ) + ( Min( ( DS - CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / MUC ) ) ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * MUM ) ,( RMSe / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( DS * RRSe ) ,Max( RMSe,MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) / RRS ) ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( RMSe ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - DS ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,CRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RRSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( ( ( ACS / FirstVNF_CPU_Server ) * ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUR - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * DS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( RRS,Min( AMS ,FirstVNF_Mem_Server ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( Max( Max( ( FirstVNF_RAM_Server / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + RMSe ) + ( ( Min( MUR ,CS ) / MLU ) + Min( ( MUR / DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( RRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( ( DS + RMSe ) * RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( Max( RRS,FirstVNF_CPU_Server ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( RRSe - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,ACS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Min( ( MLU + CS ) ,( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( FirstVNF_RAM_Server / CRS ) )", "choosing": "( DS + MUM )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,ARS ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * DS ) - ( RMSe - DS ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS / RCSe ),( ( MLU + ( DS - ( ( DS + RMSe ) - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * DS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( ( PN / CRS ),( RRS / ( ARS * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( ( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MUC + CS ),( MUC + MUR ) ) ) * ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR / DS ) ,( RMSe / RRSe ) ) ) ) ),RCSe ) ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server + CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / DS ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_Mem ),( MDR / AMS ) ) ) / Max( Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( DS + RMSe ) + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) / Max( Max( ( ( ( RRS * FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_CPU_Server ) ) - Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem_Server ) ) ),Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS / CRS ) ) ) )", "choosing": "( RCSe + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / Const ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MUR ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - DS ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Min( Max( RRS,MDR ) ,FirstVNF_CPU_Server ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS / DS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,ARS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,MUC ) * MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( ( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( DS + MUC )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( RRS,Min( AMS ,FirstVNF_Mem_Server ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + RMSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) )", "choosing": "( ( ( Max( MLU,( ( DS * CS ) - ( MUC - CS ) ) ) + CS ) + RCSe ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( MLU,( ( DS * CS ) - ( DS - CS ) ) ) + CS ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( BR * DDR ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( Max( MUM,RCSe ) ,( ( MLU + ( ( DS * DS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) * ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( Min( MRS ,MRS ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + Max( MUC,DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367129}], "40": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( RMSe * CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - RMSe ) )", "obj1": 0.41605839416058393, "obj2": 0.6385415679894144}, {"determining": "( ( Max( Max( Max( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - RRSe )", "obj1": 0.5784671532846716, "obj2": 0.47240623831993445}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + ( DS + RMSe ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( ( AMS / ( Const - FirstVNF_RAM_Server ) ) / ( ( Const + ( AMS + Const ) ) - FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( ( ( ( RMSe / MUR ) / ( MUC / MUR ) ) - ( ( MUR * MUM ) - ( MLU + MUR ) ) ) ,( Min( ( MLU * CS ) ,( RMSe / CS ) ) + ( ( MUC - RMSe ) + ( MUC - RRSe ) ) ) ) * Min( Max( Max( ( RRSe + MLU ),( RMSe / MUM ) ),( ( MUR / RRSe ) / ( MUC / MLU ) ) ) ,( Max( ( MUC * MUC ),( MUC / MLU ) ) / ( ( RMSe / DS ) / ( MLU * MUR ) ) ) ) ) * Min( Max( Max( Min( Min( MUR ,DS ) ,Max( MUC,RCSe ) ),( Max( MLU,RCSe ) / ( MLU - RRSe ) ) ),( Max( ( RMSe * MUR ),( MUM - RRSe ) ) * ( ( CS * MUC ) / Min( MLU ,RRSe ) ) ) ) ,( ( Max( ( RRSe * MLU ),( RMSe * MUM ) ) - ( ( CS - RRSe ) / Max( DS,RRSe ) ) ) * ( ( Max( MUC,MLU ) / ( RCSe * MUR ) ) - ( ( MUR * RMSe ) * ( MUM * DS ) ) ) ) ) ) - Min( Min( Min( ( Max( Min( RRSe ,MUM ),Min( DS ,MLU ) ) - ( ( RMSe - MUM ) * ( RRSe * RRSe ) ) ) ,( ( ( RCSe * CS ) + ( MLU * MUC ) ) * ( ( RRSe / CS ) * ( MUR * MUR ) ) ) ) ,( ( ( ( RMSe + MUC ) / Min( MUC ,CS ) ) - Max( ( MLU * MLU ),( RMSe - MUC ) ) ) - ( ( ( MUC + RMSe ) / Min( MUR ,MUR ) ) + ( ( DS / RRSe ) * ( MUR + MLU ) ) ) ) ) ,( Max( Min( ( ( RMSe / RMSe ) + ( MUC - MLU ) ) ,Max( Min( MLU ,CS ),( RRSe / MUM ) ) ),Max( Max( ( MUR * DS ),( MUM + CS ) ),Min( ( RCSe / RMSe ) ,Max( CS,RMSe ) ) ) ) - ( ( Max( ( RRSe / RMSe ),Max( MUM,RRSe ) ) + ( ( RRSe + MUC ) * ( MUR / DS ) ) ) + Min( ( Min( RRSe ,RRSe ) * Min( DS ,RCSe ) ) ,( ( MUR + RCSe ) / ( MUC + DS ) ) ) ) ) ) ) / Min( ( ( Max( ( ( ( CS + RMSe ) * ( DS + MLU ) ) / ( ( MUC * CS ) / ( MUC * RCSe ) ) ),( ( ( RMSe * DS ) * ( MUC * CS ) ) - Max( ( RMSe / MUM ),( RMSe / MUC ) ) ) ) * ( Max( ( ( MUC + DS ) * ( MUM - RRSe ) ),Min( ( RMSe / CS ) ,( CS - MUM ) ) ) / ( ( Max( MUC,RMSe ) + ( MLU / MLU ) ) * Max( Min( RMSe ,MUR ),( RCSe + MLU ) ) ) ) ) - ( Min( ( ( Max( RMSe,MUR ) / ( RMSe * MUR ) ) + Max( Max( MLU,MUM ),( MUC * CS ) ) ) ,( Min( ( RRSe / DS ) ,Max( MUR,DS ) ) - Min( ( CS + RMSe ) ,( MUR * CS ) ) ) ) + Max( ( Min( ( MUR / RRSe ) ,Max( MUC,RMSe ) ) + ( ( RCSe + MUM ) - Min( MUM ,MUC ) ) ),( ( Max( MLU,RCSe ) - ( MLU / RMSe ) ) - Max( ( RMSe * RMSe ),( MUC + MUC ) ) ) ) ) ) ,( Min( ( ( Max( Max( MUC,MLU ),( RRSe - MUR ) ) + ( Min( CS ,MLU ) / ( CS - DS ) ) ) - Min( ( ( DS + DS ) + Max( DS,MLU ) ) ,Max( ( RCSe - MUC ),( MLU / RRSe ) ) ) ) ,( ( ( ( RMSe + RRSe ) * Min( MLU ,RMSe ) ) / ( ( DS / DS ) - Min( DS ,DS ) ) ) - Max( ( ( RCSe / RCSe ) * ( DS / MUM ) ),( Min( CS ,RRSe ) + ( MUR / DS ) ) ) ) ) - ( ( ( Min( Max( DS,MLU ) ,Max( DS,MUC ) ) * ( ( MUM * DS ) / Max( RCSe,CS ) ) ) / ( ( ( MLU + MUR ) - ( MUR - CS ) ) + ( ( MUR + MUR ) * ( MLU / DS ) ) ) ) - Min( Max( ( ( RMSe / RRSe ) * ( DS / RMSe ) ),Min( ( DS + DS ) ,( MUC + MLU ) ) ) ,( ( Min( RMSe ,MUM ) / ( DS - RRSe ) ) / ( ( DS / RRSe ) + ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS * FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - ( MUC / ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( DS - ( ( DS + RMSe ) - RMSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6169888447960847}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,ACS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Min( ( MLU + CS ) ,( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.5474452554744526, "obj2": 0.5225072332815259}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_Mem_Server / ARS ) * ( FirstVNF_RAM_Server + BR ) ) - ( ( RRS - ARS ) - ( DDR / DDR ) ) ) + ( Max( ( PN - CRS ),( FirstVNF_Mem * BR ) ) / Max( ( FirstVNF_Mem_Server - ACS ),( MDR - Const ) ) ) ) - ( ( ( ( ACS / ARS ) / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) / Max( ( MRS + DDR ),Max( AMS,AMS ) ) ) - ( ( ( ACS * PN ) - ( MRS - BR ) ) - ( ( FirstVNF_Mem - RRS ) - Min( Const ,PN ) ) ) ) ) + ( ( ( ( ( MRS + FirstVNF_RAM ) / ( MDR + CRS ) ) - ( ( ACS + MRS ) + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_RAM * Const ),( AMS / MDR ) ) / Max( ( CRS * FirstVNF_Mem ),Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) / Max( Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( FirstVNF_Mem_Server - Const ) ) ,( Min( PN ,CRS ) + Min( Const ,FirstVNF_Mem ) ) ),( ( ( RRS / CRS ) + Max( ARS,AMS ) ) + ( ( FirstVNF_CPU_Server / MDR ) - ( MRS / ARS ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_Mem / Const ) * Min( FirstVNF_CPU_Server ,PN ) ) + ( Max( MRS,ARS ) / ( RRS + BR ) ) ) + ( Max( ( AMS - Const ),( RRS + MDR ) ) + Min( ( CRS * FirstVNF_RAM_Server ) ,( FirstVNF_RAM / MRS ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server / MDR ) - ( PN / ACS ) ),( ( RRS + FirstVNF_Mem ) * ( CRS * CRS ) ) ) - ( ( ( ACS * AMS ) + ( FirstVNF_RAM + CRS ) ) * Max( ( FirstVNF_Mem / MRS ),( DDR / Const ) ) ) ) ) / ( ( ( ( Max( Const,ACS ) / ( ARS / FirstVNF_CPU ) ) * Min( ( MRS + Const ) ,( FirstVNF_RAM + AMS ) ) ) - ( Min( Max( BR,FirstVNF_Mem ) ,Max( Const,FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( CRS * FirstVNF_CPU_Server ) ) ) ) * ( ( ( ( FirstVNF_Mem_Server + ARS ) * Max( RRS,FirstVNF_RAM ) ) - ( ( ARS / ARS ) - ( FirstVNF_RAM_Server - ARS ) ) ) - ( ( ( FirstVNF_Mem / Const ) - ( FirstVNF_Mem / BR ) ) * ( ( ARS + Const ) / ( PN - RRS ) ) ) ) ) ) ) - ( Min( ( ( ( ( ( DDR + BR ) + ( FirstVNF_Mem / Const ) ) * ( Min( Const ,MDR ) - ( FirstVNF_CPU * ARS ) ) ) - Min( Min( ( AMS * FirstVNF_CPU_Server ) ,( DDR / AMS ) ) ,Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server * DDR ) ) ) ) + Max( ( ( ( FirstVNF_Mem_Server + MRS ) - ( RRS * FirstVNF_CPU_Server ) ) * ( ( AMS * ARS ) + Min( MRS ,FirstVNF_CPU_Server ) ) ),Max( ( ( AMS - MDR ) / Min( CRS ,ARS ) ),Min( ( ACS - CRS ) ,( RRS - AMS ) ) ) ) ) ,( Max( Max( ( ( CRS * Const ) * ( RRS - FirstVNF_CPU_Server ) ),( ( MDR * ARS ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ),( Max( ( MDR / RRS ),Max( CRS,PN ) ) + ( ( FirstVNF_RAM / ARS ) * Min( MDR ,ARS ) ) ) ) + ( ( Max( ( FirstVNF_CPU + DDR ),Max( FirstVNF_Mem_Server,BR ) ) * Min( ( DDR - PN ) ,( PN / DDR ) ) ) + Min( Min( Max( FirstVNF_RAM,RRS ) ,( RRS * FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server / BR ) ) ) ) ) ) * Min( Min( Max( Max( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,DDR ) ),( ( FirstVNF_CPU / ACS ) + ( ACS - FirstVNF_RAM ) ) ),( ( ( CRS + FirstVNF_Mem ) / ( ARS + FirstVNF_CPU ) ) + ( Max( MRS,DDR ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) ,Max( ( Max( Max( FirstVNF_CPU,RRS ),( FirstVNF_CPU * PN ) ) + ( Min( FirstVNF_CPU_Server ,ACS ) * Min( DDR ,Const ) ) ),( ( Max( FirstVNF_Mem_Server,Const ) / Min( CRS ,FirstVNF_Mem ) ) - ( Min( DDR ,BR ) - ( PN * PN ) ) ) ) ) ,Min( ( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( MDR - MRS ) ) ,( ( ACS * AMS ) - ( FirstVNF_CPU_Server / CRS ) ) ) / ( ( ( ARS / ACS ) / ( ARS / FirstVNF_Mem ) ) * Min( Max( MRS,Const ) ,( ACS + MRS ) ) ) ) ,Min( ( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / DDR ) ) * ( Min( FirstVNF_Mem ,CRS ) / ( BR - FirstVNF_Mem_Server ) ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) * Min( ( PN + Const ) ,( FirstVNF_RAM_Server - MDR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( Min( ( Max( ( DS * RRSe ),Max( MLU,RCSe ) ) / ( ( MUC * DS ) + ( DS + MUR ) ) ) ,( ( Min( RCSe ,MUC ) / ( MUC - DS ) ) + ( ( MUM * DS ) / Max( MUM,CS ) ) ) ) ,Min( ( ( Min( DS ,MLU ) / ( MUM / RMSe ) ) / Min( Min( RMSe ,DS ) ,Min( RCSe ,MUC ) ) ) ,( Min( ( MUR + RMSe ) ,( MUC - CS ) ) + ( Min( RMSe ,RCSe ) / ( MUC / MUM ) ) ) ) ) / ( ( Min( ( ( DS + RRSe ) + ( MUM - RMSe ) ) ,( ( RCSe / RRSe ) * ( DS + CS ) ) ) * ( Max( Max( MUC,DS ),Max( MLU,CS ) ) / ( Max( RRSe,MLU ) + Max( RMSe,RRSe ) ) ) ) * Max( ( Max( ( MUR + RCSe ),( MUC + RRSe ) ) * ( ( RMSe - DS ) - Max( DS,DS ) ) ),Max( Min( ( RCSe - MUM ) ,( MUC * MUM ) ),Max( ( MUR + MUR ),Max( MUM,DS ) ) ) ) ) ) / ( Min( Min( ( ( ( RCSe * MUM ) * Max( RRSe,MLU ) ) * ( ( RMSe - MUC ) / ( CS + MUM ) ) ) ,( ( Max( RRSe,MUM ) + ( MLU * MUC ) ) / ( ( RRSe * MUC ) + ( RCSe * RMSe ) ) ) ) ,( ( ( ( MUM / DS ) + ( CS / CS ) ) - Max( ( MLU + MLU ),Max( DS,MUR ) ) ) * Min( ( Min( MUR ,DS ) * ( RMSe * RRSe ) ) ,Max( Max( MLU,DS ),( CS - DS ) ) ) ) ) * ( ( ( ( ( MUR / MUM ) / ( RMSe + RMSe ) ) * ( Min( RCSe ,RMSe ) - Min( RMSe ,MUC ) ) ) * ( ( Max( MLU,DS ) / Min( MLU ,RMSe ) ) * ( ( RRSe - MLU ) + Min( RRSe ,DS ) ) ) ) + ( Min( ( ( MLU / MUR ) * Min( MUR ,CS ) ) ,( Max( MLU,DS ) + Max( RMSe,CS ) ) ) / Max( ( ( MLU - MUM ) - ( MUM / MLU ) ),Max( Min( CS ,MLU ),( RCSe * MUC ) ) ) ) ) ) ) * Min( ( ( ( ( ( ( MUR + CS ) + Max( RMSe,RCSe ) ) + Max( ( MLU / RMSe ),( MLU + MLU ) ) ) / Max( ( ( MUC * MUM ) * ( RMSe * RCSe ) ),( ( RMSe - CS ) - ( MLU * MUR ) ) ) ) * ( Min( ( ( RMSe / RCSe ) - Max( MUR,MUR ) ) ,( Max( CS,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( MUR ,RCSe ) / ( CS * RRSe ) ) ,( ( RMSe * MUC ) - ( MUC + RRSe ) ) ) ) ) + Min( ( ( ( ( MUM + RCSe ) + ( MUM * CS ) ) - ( ( MUC * RMSe ) / ( RMSe / MUR ) ) ) - ( ( ( MLU * MUM ) + ( RMSe + DS ) ) - Max( ( RCSe / MUM ),Min( MUM ,RRSe ) ) ) ) ,( Min( ( Min( CS ,DS ) * ( RRSe + DS ) ) ,( Min( MUM ,MUR ) / ( CS - RMSe ) ) ) + ( ( ( MUC * MUR ) - ( MUC / DS ) ) * Max( ( MUC / RMSe ),( RMSe * DS ) ) ) ) ) ) ,( Max( ( ( Min( ( MUC * MLU ) ,( RRSe - DS ) ) - Max( ( MUM / DS ),Max( CS,DS ) ) ) / Min( ( ( MUC + MUM ) + ( CS - RCSe ) ) ,( ( MUR * MUR ) + ( MUM / MUM ) ) ) ),Min( ( Min( Max( MUR,RRSe ) ,( RRSe * MUC ) ) - Max( ( CS / CS ),( MLU / RCSe ) ) ) ,( ( ( DS / MUM ) / ( DS - CS ) ) - Min( Min( RRSe ,RRSe ) ,Max( CS,RMSe ) ) ) ) ) + ( ( ( Max( ( RMSe + MUM ),( RMSe - MUR ) ) + ( ( MUR - RCSe ) + ( RRSe - CS ) ) ) / Max( ( ( RCSe - MLU ) * ( MLU - RRSe ) ),Max( ( RMSe / MUR ),( MUM * MUR ) ) ) ) + Min( Min( Max( ( DS - MUR ),Max( MUR,RRSe ) ) ,( Max( MLU,MUR ) / Max( MUM,RRSe ) ) ) ,( ( ( MUR - RRSe ) * ( MUM / MUC ) ) + ( ( RMSe * RRSe ) - ( MLU / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( Max( ( ARS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Min( Min( MUR ,MUC ) ,MLU ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( RRS,Max( AMS,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - MLU ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( Max( RRS,( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( ( DS + RMSe ) * ( MUC + MUR ) ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6492983863367127}, {"determining": "( ( BR * DDR ) - Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) )", "choosing": "( Max( Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ),RCSe ) + Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,( ( MLU + CS ) + RMSe ) ) )", "obj1": 0.5748175182481752, "obj2": 0.48300353367833426}, {"determining": "( Max( Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + RMSe )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * DDR ) - Min( ARS ,( ACS / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( MUM,RCSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MRS ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( Min( Min( MUR ,CS ) ,MLU ) + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6246302351527715}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,ACS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Min( ( MLU + CS ) ,( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.5474452554744526, "obj2": 0.5225072332815259}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Min( ( MLU + CS ) ,( MUC - MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( RMSe / RRSe ) ) ) ) )", "obj1": 0.5474452554744526, "obj2": 0.5225072332815259}, {"determining": "( ( BR * DDR ) - Min( ARS ,CRS ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MUC + CS ),( MUC + MUR ) ) ) * ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR / DS ) ,( RMSe / RRSe ) ) ) ) ) ) )", "obj1": 0.6605839416058394, "obj2": 0.3236291375539459}, {"determining": "( Max( ( PN / CRS ),( RRS / ( ARS * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( ( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MUC + CS ),( MUC + MUR ) ) ) * ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR / DS ) ,( RMSe / RRSe ) ) ) ) ),RCSe ) ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( MLU,( ( DS * CS ) - ( DS - CS ) ) ) + CS ) + RCSe )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( FirstVNF_Mem_Server,Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + ( ( MLU + ( ( DS * DS ) - ( RMSe - RMSe ) ) ) / MUC ) )", "obj1": 0.41605839416058393, "obj2": 0.6385415679894144}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( ( RRS / Const ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( ( Min( ( CRS - AMS ) ,DDR ) * ARS ) / Min( FirstVNF_CPU_Server ,ARS ) )", "choosing": "( ( Min( ( Min( Min( Max( ( MUM + MUM ),( MUM * RRSe ) ) ,Min( ( DS + MLU ) ,( DS / RMSe ) ) ) ,( ( ( DS - DS ) / Min( RRSe ,RRSe ) ) * ( ( CS / MUR ) - ( RCSe * RRSe ) ) ) ) - Min( ( ( ( MLU + MUM ) - Min( DS ,RRSe ) ) + Max( Max( RMSe,RRSe ),( RRSe * MLU ) ) ) ,( ( ( RRSe * RMSe ) + Max( DS,RCSe ) ) - ( ( RRSe - MUR ) + ( RMSe - DS ) ) ) ) ) ,( ( ( ( ( MLU + RMSe ) / ( DS / RRSe ) ) + ( ( RMSe + MUM ) + Min( MLU ,MUC ) ) ) + ( Min( Max( RCSe,DS ) ,Max( DS,MLU ) ) / ( ( CS / CS ) - ( MUC / RCSe ) ) ) ) / ( ( ( Min( MUR ,RRSe ) / Min( MUM ,MUR ) ) / ( ( RCSe - MUR ) / ( MUC + MUR ) ) ) - Max( ( ( MLU + MUC ) / ( RMSe * DS ) ),( ( MLU * MLU ) / Max( MUC,MUM ) ) ) ) ) ) * ( ( Max( Min( ( Max( MUC,MUR ) - ( RCSe - MUM ) ) ,Max( ( RCSe / MUC ),( RRSe / RMSe ) ) ),Max( ( ( MUM - MUC ) + ( MUR + RRSe ) ),( ( RRSe - MUC ) * ( MUR - CS ) ) ) ) / ( ( ( ( MUR / RMSe ) / ( RRSe * MUM ) ) / ( Min( MLU ,MUM ) + ( DS + MUM ) ) ) + ( ( ( MUC / CS ) * ( RRSe + CS ) ) / ( ( DS - MUM ) + ( RCSe + MUR ) ) ) ) ) + ( Max( ( ( ( MLU / MUR ) * Max( RMSe,MUC ) ) + ( ( DS + MUR ) + Min( RMSe ,CS ) ) ),Min( ( ( MLU * DS ) * ( RMSe / MLU ) ) ,Max( ( MUC * MLU ),Max( RCSe,MUM ) ) ) ) * ( ( ( ( MLU / MLU ) + Min( MUR ,MUR ) ) / Min( Max( MUC,RCSe ) ,( RRSe / DS ) ) ) / Min( Max( Max( DS,MUM ),( RRSe * MUC ) ) ,Max( Min( MUM ,RCSe ),Max( RMSe,MLU ) ) ) ) ) ) ) + ( ( ( ( Max( ( Max( RCSe,RMSe ) - ( RMSe + CS ) ),Max( ( DS - MUC ),( RCSe - MUR ) ) ) + ( ( Min( RRSe ,CS ) / ( MUC / RRSe ) ) + Min( Min( RCSe ,MUR ) ,( MUR - MUC ) ) ) ) - ( ( ( ( MUR - MUM ) - ( RMSe + RCSe ) ) + Max( ( CS - MLU ),( RRSe + DS ) ) ) - ( ( ( DS + CS ) * ( MUM / RMSe ) ) + ( ( RCSe - RCSe ) / ( RMSe * RMSe ) ) ) ) ) + ( ( Max( ( Min( MUM ,MUM ) + ( RMSe * CS ) ),( ( RMSe - MUC ) / Max( MUC,RMSe ) ) ) / ( Max( ( RMSe - CS ),( MUC - MUR ) ) + ( ( MLU / MUM ) + ( RRSe * RCSe ) ) ) ) / ( Max( Min( ( RRSe - MUC ) ,Min( MUC ,MLU ) ),( ( MUR / DS ) * ( MUM - MUM ) ) ) + Min( ( ( CS - MUC ) * ( MUR * CS ) ) ,Min( ( RMSe * DS ) ,( MLU * MUC ) ) ) ) ) ) / ( ( ( Min( Min( ( RMSe / MUC ) ,Min( MLU ,RMSe ) ) ,Max( ( RRSe - RMSe ),( RCSe - MUM ) ) ) * Min( ( ( RCSe / DS ) + Max( MUR,MUC ) ) ,( ( MUM - MUR ) / Min( CS ,RRSe ) ) ) ) + ( ( ( Min( RMSe ,MUR ) + Max( CS,RMSe ) ) * Max( ( RRSe + MLU ),( MUM - MUM ) ) ) + Max( Max( ( CS + MUC ),Max( RCSe,RRSe ) ),( ( RRSe - CS ) * Max( DS,MLU ) ) ) ) ) / Min( Min( ( ( Min( MUR ,RMSe ) * ( RCSe * MUC ) ) * Max( ( RRSe / RMSe ),( CS / MUM ) ) ) ,( Max( Min( RCSe ,MUM ),( CS / MUC ) ) * Max( ( CS + MUM ),( MUR + DS ) ) ) ) ,Max( ( Max( ( MUM + MUC ),( MLU + MUM ) ) * ( ( MUR / DS ) + ( MUC / RCSe ) ) ),( Max( Max( RCSe,MUC ),( RMSe / RRSe ) ) - Min( ( MUC * RCSe ) ,Min( DS ,MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ( Min( ( FirstVNF_RAM - FirstVNF_Mem ) ,Min( FirstVNF_RAM_Server ,BR ) ) * ( Min( MDR ,ACS ) / ( FirstVNF_CPU - DDR ) ) ) - ( ( ( FirstVNF_Mem_Server + RRS ) - ( RRS / PN ) ) + Min( Min( FirstVNF_RAM_Server ,DDR ) ,Max( FirstVNF_Mem_Server,ARS ) ) ) ),( ( ( ( CRS * FirstVNF_CPU ) * ( MDR / DDR ) ) - Min( ( BR * Const ) ,( RRS * CRS ) ) ) + ( ( ( ARS / FirstVNF_CPU_Server ) * ( AMS + BR ) ) / ( ( MDR / FirstVNF_CPU_Server ) * Min( Const ,MDR ) ) ) ) ) / Min( Max( ( ( ( ACS + ACS ) / ( DDR / FirstVNF_Mem ) ) * ( ( AMS / FirstVNF_CPU ) - Min( BR ,FirstVNF_RAM ) ) ),Max( Min( Max( PN,FirstVNF_Mem_Server ) ,( MDR - FirstVNF_CPU ) ),Max( ( FirstVNF_Mem + FirstVNF_CPU ),( FirstVNF_CPU_Server / ARS ) ) ) ) ,Min( Min( ( ( PN * MDR ) + ( AMS + FirstVNF_CPU_Server ) ) ,Max( ( RRS - MRS ),( MRS + BR ) ) ) ,Min( ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) - ( BR + FirstVNF_RAM ) ) ,Max( Min( RRS ,FirstVNF_Mem ),( BR + FirstVNF_CPU ) ) ) ) ) ),( Min( ( Min( ( ( ARS * FirstVNF_RAM ) - Max( AMS,CRS ) ) ,( ( MRS - MDR ) + ( BR / FirstVNF_CPU ) ) ) * Min( Max( ( MDR * MDR ),( AMS - FirstVNF_Mem_Server ) ) ,( Max( Const,FirstVNF_Mem_Server ) + ( Const / AMS ) ) ) ) ,( ( Min( ( BR * CRS ) ,( Const + FirstVNF_CPU ) ) / Max( ( FirstVNF_CPU_Server - DDR ),Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) - ( ( Max( RRS,FirstVNF_RAM_Server ) * ( CRS - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) * ( FirstVNF_CPU_Server - DDR ) ) ) ) ) * ( ( ( Min( ( FirstVNF_RAM + RRS ) ,( MRS - ARS ) ) - Max( ( AMS - FirstVNF_RAM_Server ),Min( Const ,FirstVNF_CPU_Server ) ) ) * Min( ( ( MDR * Const ) - ( ACS / AMS ) ) ,( ( AMS / MRS ) / Max( RRS,FirstVNF_RAM ) ) ) ) / ( ( Max( ( FirstVNF_Mem / RRS ),Max( RRS,BR ) ) / ( Max( FirstVNF_CPU,CRS ) / Max( MRS,MRS ) ) ) * Min( ( ( FirstVNF_RAM + ARS ) - ( DDR / AMS ) ) ,Max( Min( FirstVNF_CPU_Server ,RRS ),Min( AMS ,CRS ) ) ) ) ) ) ) * ( ( Min( Max( Min( ( ( AMS - PN ) / Min( BR ,ARS ) ) ,( ( ARS / Const ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),( ( ( FirstVNF_RAM_Server - ARS ) + ( PN - ARS ) ) + Max( ( PN * FirstVNF_Mem_Server ),( Const * MDR ) ) ) ) ,( ( ( Min( MDR ,FirstVNF_CPU ) + ( MDR - BR ) ) * Min( Max( ARS,PN ) ,Max( ACS,MRS ) ) ) - Min( Min( ( FirstVNF_CPU_Server + MRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( FirstVNF_RAM * MRS ) ) ) ) ) * ( ( ( Min( ( Const / FirstVNF_Mem ) ,Min( AMS ,MDR ) ) / ( Min( FirstVNF_CPU_Server ,CRS ) * Max( MDR,DDR ) ) ) * ( Max( ( ACS - AMS ),( MDR - FirstVNF_RAM ) ) + Min( ( MRS / MRS ) ,Min( RRS ,Const ) ) ) ) - ( Min( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ,Min( Max( Const,Const ) ,( MRS * FirstVNF_Mem ) ) ) * Min( Max( ( FirstVNF_RAM / FirstVNF_CPU_Server ),( Const / ACS ) ) ,( ( RRS / FirstVNF_Mem ) / Max( FirstVNF_Mem,PN ) ) ) ) ) ) + ( ( ( Max( Max( Min( MRS ,MRS ),Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ),Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),( CRS + DDR ) ) ) * ( Min( ( BR / DDR ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) - ( Min( MRS ,ACS ) / ( MRS + BR ) ) ) ) * Max( Min( ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + Min( PN ,RRS ) ) ,( ( ACS + ACS ) - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ),Min( ( Max( Const,BR ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( ( Const * RRS ) / ( ACS * AMS ) ) ) ) ) * ( ( ( ( Max( AMS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + RRS ) ) * ( ( FirstVNF_RAM + MDR ) - ( ACS * AMS ) ) ) + ( Min( ( RRS - AMS ) ,( FirstVNF_Mem - AMS ) ) * Max( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ),( PN - CRS ) ) ) ) + Max( ( ( ( AMS + DDR ) * ( FirstVNF_Mem - PN ) ) * ( Max( BR,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * PN ) ) ),Min( ( ( DDR - FirstVNF_CPU ) * ( MRS / MDR ) ) ,( ( AMS - DDR ) / ( MRS + ACS ) ) ) ) ) ) ) )", "choosing": "Max( Max( MUM,MUR ),( DS * ( Min( ( ( Max( CS,MUM ) - MUC ) * RRSe ) ,( ( DS - Max( RMSe,Max( MUR,RMSe ) ) ) * RRSe ) ) + DS ) ) )", "obj1": 0.8266423357664233, "obj2": 0.19353821715521421}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( ( DS + RMSe ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.5492700729927007, "obj2": 0.519989082991386}], "41": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + ( DS + RMSe ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS * FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - ( MUC / ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( DS - ( ( DS + RMSe ) - RMSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6169888447960847}, {"determining": "( ( Max( Max( Max( ( ARS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Min( Min( MUR ,MUC ) ,MLU ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( RRS,Max( AMS,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - MLU ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + RMSe )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( ( PN / CRS ),( RRS / ( ARS * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( ( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MUC + CS ),( MUC + MUR ) ) ) * ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR / DS ) ,( RMSe / RRSe ) ) ) ) ),RCSe ) ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( MLU,( ( DS * CS ) - ( DS - CS ) ) ) + CS ) + RCSe )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( ( RRS / Const ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MUC + CS ),( MUC + MUR ) ) ) * ( Min( ( DS + RRSe ) ,MLU ) + Min( ( MUR / DS ) ,( RMSe / RRSe ) ) ) ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,CRS ),( MRS / CRS ) ) ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MUC + CS ),( MUC + MUR ) ) ) * ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR / DS ) ,( RMSe / RRSe ) ) ) ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,ARS ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( MLU,( ( DS * CS ) - ( DS - CS ) ) ) + CS ) + RCSe )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + ( Min( ( RMSe + CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( MLU - DS ) ) / MUC ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) / RRS ) ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( RMSe ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( MLU - DS ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( RRS,Max( AMS,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - MLU ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( ( ( Const + ( AMS + Const ) ) - FirstVNF_RAM ) / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( ( RRS / Const ) * FirstVNF_Mem ) ) ),( ( ACS / FirstVNF_CPU_Server ) - ( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU + ( DS - Min( RCSe ,( CS + RMSe ) ) ) ) + RCSe )", "obj1": 0.4343065693430657, "obj2": 0.6080715569399292}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( ( RRS / Const ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( ( ( Min( ( ( ( RMSe / MUR ) / ( MUC / MUR ) ) - ( ( MUR * MUM ) - ( MLU + MUR ) ) ) ,( Min( ( MLU * CS ) ,( RMSe / CS ) ) + ( ( MUC - RMSe ) + ( MUC - RRSe ) ) ) ) * Min( Max( Max( ( RRSe + MLU ),( RMSe / MUM ) ),( ( MUR / RRSe ) / ( MUC / MLU ) ) ) ,( Max( ( MUC * MUC ),( MUC / MLU ) ) / ( ( RMSe / DS ) / ( MLU * MUR ) ) ) ) ) * Min( Max( Max( Min( Min( MUR ,DS ) ,Max( MUC,RCSe ) ),( Max( MLU,RCSe ) / ( MLU - RRSe ) ) ),( Max( ( RMSe * MUR ),( MUM - RRSe ) ) * ( ( CS * MUC ) / Min( MLU ,RRSe ) ) ) ) ,( ( Max( ( RRSe * MLU ),( RMSe * MUM ) ) - ( ( CS - RRSe ) / Max( DS,RRSe ) ) ) * ( ( Max( MUC,MLU ) / ( RCSe * MUR ) ) - ( ( MUR * RMSe ) * ( MUM * DS ) ) ) ) ) ) - Min( Min( Min( ( Max( Min( RRSe ,MUM ),Min( DS ,MLU ) ) - ( ( RMSe - MUM ) * ( RRSe * RRSe ) ) ) ,( ( ( RCSe * CS ) + ( MLU * MUC ) ) * ( ( RRSe / CS ) * ( MUR * MUR ) ) ) ) ,( ( ( ( RMSe + MUC ) / Min( MUC ,CS ) ) - Max( ( MLU * MLU ),( RMSe - MUC ) ) ) - ( ( ( MUC + RMSe ) / Min( MUR ,MUR ) ) + ( ( DS / RRSe ) * ( MUR + MLU ) ) ) ) ) ,( Max( Min( ( ( RMSe / RMSe ) + ( MUC - MLU ) ) ,Max( Min( MLU ,CS ),( RRSe / MUM ) ) ),Max( Max( ( MUR * DS ),( MUM + CS ) ),Min( ( RCSe / RMSe ) ,Max( CS,RMSe ) ) ) ) - ( ( Max( ( RRSe / RMSe ),Max( MUM,RRSe ) ) + ( ( RRSe + MUC ) * ( MUR / DS ) ) ) + Min( ( Min( RRSe ,RRSe ) * Min( DS ,RCSe ) ) ,( ( MUR + RCSe ) / ( MUC + DS ) ) ) ) ) ) ) / Min( ( ( Max( ( ( ( CS + RMSe ) * ( DS + MLU ) ) / ( ( MUC * CS ) / ( MUC * RCSe ) ) ),( ( ( RMSe * DS ) * ( MUC * CS ) ) - Max( ( RMSe / MUM ),( RMSe / MUC ) ) ) ) * ( Max( ( ( MUC + DS ) * ( MUM - RRSe ) ),Min( ( RMSe / CS ) ,( CS - MUM ) ) ) / ( ( Max( MUC,RMSe ) + ( MLU / MLU ) ) * Max( Min( RMSe ,MUR ),( RCSe + MLU ) ) ) ) ) - ( Min( ( ( Max( RMSe,MUR ) / ( RMSe * MUR ) ) + Max( Max( MLU,MUM ),( MUC * CS ) ) ) ,( Min( ( RRSe / DS ) ,Max( MUR,DS ) ) - Min( ( CS + RMSe ) ,( MUR * CS ) ) ) ) + Max( ( Min( ( MUR / RRSe ) ,Max( MUC,RMSe ) ) + ( ( RCSe + MUM ) - Min( MUM ,MUC ) ) ),( ( Max( MLU,RCSe ) - ( MLU / RMSe ) ) - Max( ( RMSe * RMSe ),( MUC + MUC ) ) ) ) ) ) ,( Min( ( ( Max( Max( MUC,MLU ),( RRSe - MUR ) ) + ( Min( CS ,MLU ) / ( CS - DS ) ) ) - Min( ( ( DS + DS ) + Max( DS,MLU ) ) ,Max( ( RCSe - MUC ),( MLU / RRSe ) ) ) ) ,( ( ( ( RMSe + RRSe ) * Min( MLU ,RMSe ) ) / ( ( DS / DS ) - Min( DS ,DS ) ) ) - Max( ( ( RCSe / RCSe ) * ( DS / MUM ) ),( Min( CS ,RRSe ) + ( MUR / DS ) ) ) ) ) - ( ( ( Min( Max( DS,MLU ) ,Max( DS,MUC ) ) * ( ( MUM * DS ) / Max( RCSe,CS ) ) ) / ( ( ( MLU + MUR ) - ( MUR - CS ) ) + ( ( MUR + MUR ) * ( MLU / DS ) ) ) ) - Min( Max( ( ( RMSe / RRSe ) * ( DS / RMSe ) ),Min( ( DS + DS ) ,( MUC + MLU ) ) ) ,( ( Min( RMSe ,MUM ) / ( DS - RRSe ) ) / ( ( DS / RRSe ) + ( MLU / MUR ) ) ) ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( Max( Max( RRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( ( DS + RMSe ) * RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( ( PN / CRS ),( RRS / ( ARS * FirstVNF_CPU_Server ) ) ) * ( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( ( RRS - FirstVNF_CPU_Server ) / Min( MDR ,ARS ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( Max( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ),( ( MLU + Max( ( MUC + CS ),( MUC + MUR ) ) ) * ( Min( Min( MUR ,CS ) ,MUR ) + Min( ( MUR / DS ) ,( RMSe / RRSe ) ) ) ) ),RCSe ) ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,ARS ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * DS ) - ( RMSe - DS ) ) ) / MUC ) ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( CRS ,FirstVNF_Mem_Server ) ),Max( FirstVNF_CPU_Server,( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( ( MLU + ( DS - ( RCSe - RMSe ) ) ) + RCSe ),( ( MLU + ( DS - ( RCSe - DS ) ) ) / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( MDR / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( ACS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) + Max( ( DS + RCSe ),( ( CS + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( ( ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,ARS ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( DS + ( DS + RMSe ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) * ( Max( ( ( ARS + MDR ) * Min( BR ,FirstVNF_Mem_Server ) ),( ( MDR / AMS ) * ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM - RMSe ) ) ),DS ) )", "obj1": 0.42700729927007297, "obj2": 0.6159498203874856}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( RRS / ( ARS * FirstVNF_CPU_Server ) ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + Min( MUR ,CS ) ) / RRSe ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( Max( ( PN / CRS ),( RRS / ( ARS * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( ( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MUC + CS ),( MUC + MUR ) ) ) * ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR / DS ) ,( RMSe / RRSe ) ) ) ) ),RCSe ) ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( ( DS + ( DS + RMSe ) ) + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( DS + ( DS + RMSe ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( Max( Max( ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + ( RMSe + RMSe ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( ( ( RRS / PN ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) - ( ( Min( MUR ,CS ) + MLU ) / ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / Max( Max( RRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( Min( Min( MUR ,CS ) ,MLU ) + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6246262674059198}, {"determining": "( Max( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( MDR / AMS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + RMSe ) + RMSe )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + RMSe )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( ( RRS / Const ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( Min( RRS ,FirstVNF_Mem_Server ) ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( RCSe - RMSe ) ) ) + Max( Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ),RCSe ) )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( ( RRS / Const ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Max( Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ),RCSe ) + Max( RRSe,MUR ) )", "obj1": 0.41788321167883213, "obj2": 0.6303408728165765}, {"determining": "( Max( Max( RRS,( ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - Min( ( MUR * DS ) ,( ( MLU + ( MLU - DS ) ) / MUC ) ) )", "obj1": 0.4142335766423358, "obj2": 0.6335007251772626}, {"determining": "( ( ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,ARS ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( MUM,RCSe ) + Max( RRSe,MUR ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + RMSe )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( Max( ( Min( ARS ,MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + ( ( Min( Min( MUR ,CS ) ,MLU ) + ( DS - ( MUM - RMSe ) ) ) / MLU ) )", "obj1": 0.4543795620437956, "obj2": 0.5916041771262086}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MRS ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( Min( Min( MUR ,CS ) ,MLU ) + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( Max( ( PN / CRS ),( RRS / ( ARS * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( Min( ( Max( ( DS * RRSe ),Max( MLU,RCSe ) ) / ( ( MUC * DS ) + ( DS + MUR ) ) ) ,( ( Min( RCSe ,MUC ) / ( MUC - DS ) ) + ( ( MUM * DS ) / Max( MUM,CS ) ) ) ) ,Min( ( ( Min( DS ,MLU ) / ( MUM / RMSe ) ) / Min( Min( RMSe ,DS ) ,Min( RCSe ,MUC ) ) ) ,( Min( ( MUR + RMSe ) ,( MUC - CS ) ) + ( Min( RMSe ,RCSe ) / ( MUC / MUM ) ) ) ) ) / ( ( Min( ( ( DS + RRSe ) + ( MUM - RMSe ) ) ,( ( RCSe / RRSe ) * ( DS + CS ) ) ) * ( Max( Max( MUC,DS ),Max( MLU,CS ) ) / ( Max( RRSe,MLU ) + Max( RMSe,RRSe ) ) ) ) * Max( ( Max( ( MUR + RCSe ),( MUC + RRSe ) ) * ( ( RMSe - DS ) - Max( DS,DS ) ) ),Max( Min( ( RCSe - MUM ) ,( MUC * MUM ) ),Max( ( MUR + MUR ),Max( MUM,DS ) ) ) ) ) ) / ( Min( Min( ( ( ( RCSe * MUM ) * Max( RRSe,MLU ) ) * ( ( RMSe - MUC ) / ( CS + MUM ) ) ) ,( ( Max( RRSe,MUM ) + ( MLU * MUC ) ) / ( ( RRSe * MUC ) + ( RCSe * RMSe ) ) ) ) ,( ( ( ( MUM / DS ) + ( CS / CS ) ) - Max( ( MLU + MLU ),Max( DS,MUR ) ) ) * Min( ( Min( MUR ,DS ) * ( RMSe * RRSe ) ) ,Max( Max( MLU,DS ),( CS - DS ) ) ) ) ) * ( ( ( ( ( MUR / MUM ) / ( RMSe + RMSe ) ) * ( Min( RCSe ,RMSe ) - Min( RMSe ,MUC ) ) ) * ( ( Max( MLU,DS ) / Min( MLU ,RMSe ) ) * ( ( RRSe - MLU ) + Min( RRSe ,DS ) ) ) ) + ( Min( ( ( MLU / MUR ) * Min( MUR ,CS ) ) ,( Max( MLU,DS ) + Max( RMSe,CS ) ) ) / Max( ( ( MLU - MUM ) - ( MUM / MLU ) ),Max( Min( CS ,MLU ),( RCSe * MUC ) ) ) ) ) ) ) * Min( ( ( ( ( ( ( MUR + CS ) + Max( RMSe,RCSe ) ) + Max( ( MLU / RMSe ),( MLU + MLU ) ) ) / Max( ( ( MUC * MUM ) * ( RMSe * RCSe ) ),( ( RMSe - CS ) - ( MLU * MUR ) ) ) ) * ( Min( ( ( RMSe / RCSe ) - Max( MUR,MUR ) ) ,( Max( CS,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( MUR ,RCSe ) / ( CS * RRSe ) ) ,( ( RMSe * MUC ) - ( MUC + RRSe ) ) ) ) ) + Min( ( ( ( ( MUM + RCSe ) + ( MUM * CS ) ) - ( ( MUC * RMSe ) / ( RMSe / MUR ) ) ) - ( ( ( MLU * MUM ) + ( RMSe + DS ) ) - Max( ( RCSe / MUM ),Min( MUM ,RRSe ) ) ) ) ,( Min( ( Min( CS ,DS ) * ( RRSe + DS ) ) ,( Min( MUM ,MUR ) / ( CS - RMSe ) ) ) + ( ( ( MUC * MUR ) - ( MUC / DS ) ) * Max( ( MUC / RMSe ),( RMSe * DS ) ) ) ) ) ) ,( Max( ( ( Min( ( MUC * MLU ) ,( RRSe - DS ) ) - Max( ( MUM / DS ),Max( CS,DS ) ) ) / Min( ( ( MUC + MUM ) + ( CS - RCSe ) ) ,( ( MUR * MUR ) + ( MUM / MUM ) ) ) ),Min( ( Min( Max( MUR,RRSe ) ,( RRSe * MUC ) ) - Max( ( CS / CS ),( MLU / RCSe ) ) ) ,( ( ( DS / MUM ) / ( DS - CS ) ) - Min( Min( RRSe ,RRSe ) ,Max( CS,RMSe ) ) ) ) ) + ( ( ( Max( ( RMSe + MUM ),( RMSe - MUR ) ) + ( ( MUR - RCSe ) + ( RRSe - CS ) ) ) / Max( ( ( RCSe - MLU ) * ( MLU - RRSe ) ),Max( ( RMSe / MUR ),( MUM * MUR ) ) ) ) + Min( Min( Max( ( DS - MUR ),Max( MUR,RRSe ) ) ,( Max( MLU,MUR ) / Max( MUM,RRSe ) ) ) ,( ( ( MUR - RRSe ) * ( MUM / MUC ) ) + ( ( RMSe * RRSe ) - ( MLU / MUC ) ) ) ) ) ) ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,BR ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( DS + ( MLU + ( MUM - ( MUM - RMSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Max( Max( Max( ( FirstVNF_RAM_Server / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.4562043795620438, "obj2": 0.5744391900690659}], "42": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + ( DS + RMSe ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS * FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - ( MUC / ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( DS - ( ( DS + RMSe ) - RMSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6169888447960847}, {"determining": "( ( Max( Max( Max( ( ARS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Min( Min( MUR ,MUC ) ,MLU ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( RRS,Max( AMS,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - MLU ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + ( Min( ( RMSe + CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( MLU - DS ) ) / MUC ) ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) / RRS ) ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( RMSe ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( MLU - DS ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( RRS,Max( AMS,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - MLU ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( ( ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,ARS ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( DS + ( DS + RMSe ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( ( DS + ( DS + RMSe ) ) + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( DS + ( DS + RMSe ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( Max( Max( ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( DS + ( RMSe + RMSe ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( ( ( RRS / PN ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) - ( ( Min( MUR ,CS ) + MLU ) / ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / Max( Max( RRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( Min( Min( MUR ,CS ) ,MLU ) + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.4215328467153285, "obj2": 0.6246262674059198}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,BR ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( DS + ( MLU + ( MUM - ( MUM - RMSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( RMSe ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( MLU - DS ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( Min( AMS ,BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( Const / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) * ( ( Min( RRSe ,MUM ) + MUM ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( ( RRS / Const ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / ( FirstVNF_RAM_Server / ( ( RRS / Const ) * FirstVNF_Mem ) ) ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + ( DS - ( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( ( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MUC + CS ),( MUC + MUR ) ) ) * ( Min( Min( MUR ,CS ) ,MUR ) + Min( ( MUR / DS ) ,( RMSe / RRSe ) ) ) ) ),RCSe ) ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( ( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( MDR / AMS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + Max( ( MLU + CS ),( MUC + ( MLU + RMSe ) ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( MDR / AMS ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + RMSe ) + RMSe )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( ( DS + ( DS + RMSe ) ) + MUR ) ) ) + ( Min( Min( RMSe ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( MLU - DS ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( ( DS + ( DS + RMSe ) ) + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) / RRS ) ) )", "choosing": "( Min( Min( MUR ,MUC ) ,MLU ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( RMSe ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( MLU - DS ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - Max( ( ( MLU - ( MUC + ( ( DS * CS ) - ( MUM - RMSe ) ) ) ) - ( ( MLU + Max( ( MUC + CS ),( MUC + MUR ) ) ) * ( Min( Min( MUR ,CS ) ,MUR ) + Min( ( MUR / DS ) ,( RMSe / RRSe ) ) ) ) ),RCSe ) ) - ( ( MLU + RMSe ) + ( Min( Min( MUR ,CS ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( ( DS + ( DS + RMSe ) ) + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( DS - ( ( DS + RMSe ) - RMSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6169888447960847}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / ( RRS / Const ) ) ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.4142335766423358, "obj2": 0.6269555673052123}, {"determining": "( ( ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,ARS ) ) ) * ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) )", "choosing": "( DS + ( DS + RMSe ) )", "obj1": 0.4233576642335766, "obj2": 0.6169888447960847}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( DS - ( ( DS + RMSe ) - RMSe ) ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - ( MUC + ( ( DS / CS ) - ( MUM - RMSe ) ) ) ) - ( DS - ( ( DS + RMSe ) - RMSe ) ) )", "obj1": 0.4233576642335766, "obj2": 0.6169888447960847}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( Max( RRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( ( DS + RMSe ) * RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM - RMSe ) ) ),DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( MUC / RMSe ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,ACS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Max( ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU + CS ) + RMSe )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( DS + ( DS + RMSe ) )", "obj1": 0.41058394160583944, "obj2": 0.643605044242358}, {"determining": "( FirstVNF_Mem_Server / ( Max( ( Max( RRS,BR ) - Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( Min( MLU ,CS ),( MUC + MUR ) ) ) + ( ( Min( MUC ,CS ) + MLU ) + ( DS * RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( DS + ( CS + ( DS - ( MUM - RMSe ) ) ) )", "obj1": 0.4124087591240876, "obj2": 0.6431407749801816}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / AMS ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( MUC,MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}], "43": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( Max( ( ARS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Min( Min( MUR ,MUC ) ,MLU ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( ( RRS / PN ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) - ( ( Min( MUR ,CS ) + MLU ) / ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( Min( AMS ,BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( Const / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) * ( ( Min( RRSe ,MUM ) + MUM ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM - RMSe ) ) ),DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( MUC / RMSe ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,ACS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( ( Max( RRS,BR ) - Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( Min( MLU ,CS ),( MUC + MUR ) ) ) + ( ( Min( MUC ,CS ) + MLU ) + ( DS * RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / AMS ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( MUC,MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( MDR / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( Max( RMSe,RRSe ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU * CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( MUC / RMSe ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( Min( ( ARS + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( MLU,DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( ( RRS / Const ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - RMSe ) + Max( ( MLU + ( ( DS - CS ) - ( MUM - RMSe ) ) ),DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM - RMSe ) ) ),DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,ACS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Min( Min( MUR ,CS ) ,MLU ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( BR / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( ( MUM - MUC ),RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.41058394160583944, "obj2": 0.6432615947247844}, {"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( BR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,Const ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( FirstVNF_CPU_Server / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,( Min( Min( DS ,RCSe ) ,Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( DS - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Max( RRS,FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,ACS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( ARS + MDR ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Min( Min( MUR ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ,MLU ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( Max( ( MDR / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,BR ) ),Max( Min( FirstVNF_Mem ,MRS ),( MRS / CRS ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( RMSe - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( ( ( BR * AMS ) - Min( RRS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Min( CS ,RMSe ) ) - Max( ( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ),MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,ACS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( ( Min( PN ,Const ) / ( FirstVNF_RAM_Server / ( ARS + FirstVNF_CPU_Server ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( RCSe * MUR ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - RRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - Min( Min( RMSe ,CS ) ,MLU ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + MLU ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( BR / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM * RMSe ) ) ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( ( ( ACS * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( DS - ( MUM - MUC ) ) - Max( RRSe,MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) * ( Min( RRS ,ACS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + ( CS + RMSe ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( RCSe,( ( DS * CS ) - ( MUM - MLU ) ) ) ) - Min( Min( MUR ,CS ) ,MLU ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( RRS,Max( AMS,Const ) ) / ( ( Min( PN ,Const ) * ( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( RRSe - Max( RCSe,RCSe ) ) - Min( Min( MUR ,CS ) ,MLU ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( DDR / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM - RMSe ) ) ),MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Min( DS ,( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / Max( Max( RRS,FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( MUC / RMSe ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}], "44": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( Max( ( ARS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Min( Min( MUR ,MUC ) ,MLU ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( ( RRS / PN ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) - ( ( Min( MUR ,CS ) + MLU ) / ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( Min( AMS ,BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( Const / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) * ( ( Min( RRSe ,MUM ) + MUM ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM - RMSe ) ) ),DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( MUC / RMSe ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( Min( ( PN / Const ) ,Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_RAM ) ) ) / ( Max( Max( ( RRS / Const ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Min( RRS ,ACS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( ( Max( RRS,BR ) - Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( Min( MLU ,CS ),( MUC + MUR ) ) ) + ( ( Min( MUC ,CS ) + MLU ) + ( DS * RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / AMS ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( MUC,MUR ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( MDR / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_CPU_Server ),( MDR / Const ) ) ) )", "choosing": "( ( Max( RMSe,RRSe ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU * CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( MUC / RMSe ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( Min( ( ARS + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( MLU,DS ) )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( ( RRS / Const ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU + ( DS - ( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.40875912408759124, "obj2": 0.6459251337812664}, {"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( BR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( ( Min( PN ,Const ) / ( FirstVNF_RAM_Server / ( ARS + FirstVNF_CPU_Server ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( RCSe * MUR ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( BR / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM * RMSe ) ) ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Min( DS ,( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( RCSe / RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( ( Min( MUR ,CS ) + MLU ) ,( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MLU ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( DS + RCSe ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,CRS ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + Min( Max( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / MRS ),FirstVNF_CPU_Server ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( MUM,( MLU - Max( RCSe,RCSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Min( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ) ,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC * RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,Const ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( RRSe + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) * ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * MDR )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( MUM + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),Min( MRS ,CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_RAM / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Const ) / RRS ) * ( ARS + MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + RCSe ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM * RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - ACS ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * ( MUM + RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( DS ,RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / Min( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ,Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,( BR * DDR ) ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RRSe,RCSe ) ) - ( ( MLU + Max( Max( RRSe,MUR ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( ACS * RRS ) - Min( ARS ,PN ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + ( DS * ( MLU - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) / ( Max( ( PN / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( PN ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( RRSe / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_Mem - RRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( Min( ( Min( RRS ,Const ) + ( ( ( RRS / MDR ) + FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MLU + ( DS - ( RCSe - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + RMSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Max( MDR,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ),Max( ( ACS / Const ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,DS ) ) - ( Min( DS ,RCSe ) / Max( MUC,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}], "45": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / PN ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) - ( ( Min( MUR ,CS ) + MLU ) / ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( Min( AMS ,BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( Const / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) * ( ( Min( RRSe ,MUM ) + MUM ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( ( Max( RRS,BR ) - Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( Min( MLU ,CS ),( MUC + MUR ) ) ) + ( ( Min( MUC ,CS ) + MLU ) + ( DS * RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU * CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( Min( ( ARS + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( BR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( ( Min( PN ,Const ) / ( FirstVNF_RAM_Server / ( ARS + FirstVNF_CPU_Server ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( RCSe * MUR ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( BR / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM * RMSe ) ) ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Min( DS ,( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( RCSe / RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( ( Min( MUR ,CS ) + MLU ) ,( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MLU ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( DS + RCSe ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,CRS ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + Min( Max( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / MRS ),FirstVNF_CPU_Server ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( MUM,( MLU - Max( RCSe,RCSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Min( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ) ,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC * RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,Const ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( RRSe + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) * ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * MDR )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( MUM + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),Min( MRS ,CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_RAM / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Const ) / RRS ) * ( ARS + MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + RCSe ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM * RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - ACS ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * ( MUM + RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( DS ,RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / Min( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ,Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,( BR * DDR ) ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RRSe,RCSe ) ) - ( ( MLU + Max( Max( RRSe,MUR ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( ACS * RRS ) - Min( ARS ,PN ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + ( DS * ( MLU - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) / ( Max( ( PN / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( PN ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( RRSe / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_Mem - RRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( Min( ( Min( RRS ,Const ) + ( ( ( RRS / MDR ) + FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MLU + ( DS - ( RCSe - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + RMSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Max( MDR,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ),Max( ( ACS / Const ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,DS ) ) - ( Min( DS ,RCSe ) / Max( MUC,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + ( FirstVNF_Mem / PN ) ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,Const ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + ( DS * RCSe ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( RRS * DDR ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM - ( RCSe - RMSe ) ) ) + MUR )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server * CRS ) ) ) / AMS ) ) * Min( BR ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( MLU,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( CRS,Max( FirstVNF_CPU_Server,Const ) ) / ACS )", "choosing": "( ( ( MLU - Max( RCSe,RCSe ) ) - ( MUC - RMSe ) ) - Max( MUC,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( ( ( RRS / Const ) - ( FirstVNF_CPU_Server / ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( RCSe / RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( Min( MDR ,FirstVNF_Mem_Server ) / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( Max( MUM,RCSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),MUM ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( MRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU * Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / Min( Const ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( RRSe + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( AMS / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / ACS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( DS + CS ),( RCSe + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}], "46": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / PN ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) - ( ( Min( MUR ,CS ) + MLU ) / ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( Min( AMS ,BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( Const / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) * ( ( Min( RRSe ,MUM ) + MUM ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( ( Max( RRS,BR ) - Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( Min( MLU ,CS ),( MUC + MUR ) ) ) + ( ( Min( MUC ,CS ) + MLU ) + ( DS * RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU * CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( Min( ( ARS + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( BR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( ( Min( PN ,Const ) / ( FirstVNF_RAM_Server / ( ARS + FirstVNF_CPU_Server ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( RCSe * MUR ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( BR / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM * RMSe ) ) ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Min( DS ,( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( RCSe / RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( ( Min( MUR ,CS ) + MLU ) ,( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MLU ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( DS + RCSe ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,CRS ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + Min( Max( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / MRS ),FirstVNF_CPU_Server ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( MUM,( MLU - Max( RCSe,RCSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Min( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ) ,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC * RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,Const ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( RRSe + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) * ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * MDR )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( MUM + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),Min( MRS ,CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_RAM / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Const ) / RRS ) * ( ARS + MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + RCSe ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM * RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - ACS ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * ( MUM + RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( DS ,RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / Min( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ,Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,( BR * DDR ) ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RRSe,RCSe ) ) - ( ( MLU + Max( Max( RRSe,MUR ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( ACS * RRS ) - Min( ARS ,PN ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + ( DS * ( MLU - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) / ( Max( ( PN / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( PN ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( RRSe / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_Mem - RRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( Min( ( Min( RRS ,Const ) + ( ( ( RRS / MDR ) + FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MLU + ( DS - ( RCSe - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + RMSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Max( MDR,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ),Max( ( ACS / Const ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,DS ) ) - ( Min( DS ,RCSe ) / Max( MUC,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + ( FirstVNF_Mem / PN ) ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,Const ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + ( DS * RCSe ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( RRS * DDR ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM - ( RCSe - RMSe ) ) ) + MUR )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server * CRS ) ) ) / AMS ) ) * Min( BR ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( MLU,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( CRS,Max( FirstVNF_CPU_Server,Const ) ) / ACS )", "choosing": "( ( ( MLU - Max( RCSe,RCSe ) ) - ( MUC - RMSe ) ) - Max( MUC,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( ( ( RRS / Const ) - ( FirstVNF_CPU_Server / ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( RCSe / RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( Min( MDR ,FirstVNF_Mem_Server ) / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( Max( MUM,RCSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),MUM ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( MRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU * Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / Min( Const ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( RRSe + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( AMS / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / ACS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( DS + CS ),( RCSe + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}], "47": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / PN ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) - ( ( Min( MUR ,CS ) + MLU ) / ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( Min( AMS ,BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( Const / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) * ( ( Min( RRSe ,MUM ) + MUM ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( ( Max( RRS,BR ) - Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( Min( MLU ,CS ),( MUC + MUR ) ) ) + ( ( Min( MUC ,CS ) + MLU ) + ( DS * RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU * CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( Min( ( ARS + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( BR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( ( Min( PN ,Const ) / ( FirstVNF_RAM_Server / ( ARS + FirstVNF_CPU_Server ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( RCSe * MUR ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( BR / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM * RMSe ) ) ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Min( DS ,( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( RCSe / RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( ( Min( MUR ,CS ) + MLU ) ,( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MLU ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( DS + RCSe ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,CRS ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + Min( Max( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / MRS ),FirstVNF_CPU_Server ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( MUM,( MLU - Max( RCSe,RCSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Min( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ) ,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC * RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,Const ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( RRSe + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) * ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * MDR )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( MUM + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),Min( MRS ,CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_RAM / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Const ) / RRS ) * ( ARS + MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + RCSe ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM * RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - ACS ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * ( MUM + RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( DS ,RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / Min( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ,Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,( BR * DDR ) ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RRSe,RCSe ) ) - ( ( MLU + Max( Max( RRSe,MUR ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( ACS * RRS ) - Min( ARS ,PN ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + ( DS * ( MLU - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) / ( Max( ( PN / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( PN ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( RRSe / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_Mem - RRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( Min( ( Min( RRS ,Const ) + ( ( ( RRS / MDR ) + FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MLU + ( DS - ( RCSe - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + RMSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Max( MDR,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ),Max( ( ACS / Const ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,DS ) ) - ( Min( DS ,RCSe ) / Max( MUC,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + ( FirstVNF_Mem / PN ) ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,Const ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + ( DS * RCSe ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( RRS * DDR ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM - ( RCSe - RMSe ) ) ) + MUR )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server * CRS ) ) ) / AMS ) ) * Min( BR ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( MLU,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( CRS,Max( FirstVNF_CPU_Server,Const ) ) / ACS )", "choosing": "( ( ( MLU - Max( RCSe,RCSe ) ) - ( MUC - RMSe ) ) - Max( MUC,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( ( ( RRS / Const ) - ( FirstVNF_CPU_Server / ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( RCSe / RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( Min( MDR ,FirstVNF_Mem_Server ) / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( Max( MUM,RCSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),MUM ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( MRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU * Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / Min( Const ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( RRSe + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( AMS / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / ACS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( DS + CS ),( RCSe + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}], "48": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / PN ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) - ( ( Min( MUR ,CS ) + MLU ) / ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( Min( AMS ,BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( Const / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) * ( ( Min( RRSe ,MUM ) + MUM ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( ( Max( RRS,BR ) - Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( Min( MLU ,CS ),( MUC + MUR ) ) ) + ( ( Min( MUC ,CS ) + MLU ) + ( DS * RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU * CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( Min( ( ARS + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( BR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( ( Min( PN ,Const ) / ( FirstVNF_RAM_Server / ( ARS + FirstVNF_CPU_Server ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( RCSe * MUR ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( BR / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM * RMSe ) ) ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Min( DS ,( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( RCSe / RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( ( Min( MUR ,CS ) + MLU ) ,( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MLU ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( DS + RCSe ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,CRS ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + Min( Max( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / MRS ),FirstVNF_CPU_Server ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( MUM,( MLU - Max( RCSe,RCSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Min( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ) ,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC * RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,Const ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( RRSe + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) * ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * MDR )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( MUM + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),Min( MRS ,CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_RAM / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Const ) / RRS ) * ( ARS + MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + RCSe ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM * RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - ACS ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * ( MUM + RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( DS ,RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / Min( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ,Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,( BR * DDR ) ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RRSe,RCSe ) ) - ( ( MLU + Max( Max( RRSe,MUR ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( ACS * RRS ) - Min( ARS ,PN ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + ( DS * ( MLU - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) / ( Max( ( PN / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( PN ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( RRSe / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_Mem - RRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( Min( ( Min( RRS ,Const ) + ( ( ( RRS / MDR ) + FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MLU + ( DS - ( RCSe - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + RMSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Max( MDR,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ),Max( ( ACS / Const ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,DS ) ) - ( Min( DS ,RCSe ) / Max( MUC,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + ( FirstVNF_Mem / PN ) ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,Const ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + ( DS * RCSe ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( RRS * DDR ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM - ( RCSe - RMSe ) ) ) + MUR )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server * CRS ) ) ) / AMS ) ) * Min( BR ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( MLU,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( CRS,Max( FirstVNF_CPU_Server,Const ) ) / ACS )", "choosing": "( ( ( MLU - Max( RCSe,RCSe ) ) - ( MUC - RMSe ) ) - Max( MUC,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( ( ( RRS / Const ) - ( FirstVNF_CPU_Server / ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( RCSe / RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( Min( MDR ,FirstVNF_Mem_Server ) / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( Max( MUM,RCSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),MUM ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( MRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU * Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / Min( Const ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( RRSe + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( AMS / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / ACS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( DS + CS ),( RCSe + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}], "49": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / PN ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) - ( ( Min( MUR ,CS ) + MLU ) / ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( Min( AMS ,BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( Const / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) * ( ( Min( RRSe ,MUM ) + MUM ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( ( Max( RRS,BR ) - Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( Min( MLU ,CS ),( MUC + MUR ) ) ) + ( ( Min( MUC ,CS ) + MLU ) + ( DS * RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU * CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( Min( ( ARS + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( BR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( ( Min( PN ,Const ) / ( FirstVNF_RAM_Server / ( ARS + FirstVNF_CPU_Server ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( RCSe * MUR ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( BR / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM * RMSe ) ) ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Min( DS ,( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( RCSe / RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( ( Min( MUR ,CS ) + MLU ) ,( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MLU ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( DS + RCSe ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,CRS ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + Min( Max( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / MRS ),FirstVNF_CPU_Server ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( MUM,( MLU - Max( RCSe,RCSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Min( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ) ,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC * RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,Const ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( RRSe + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) * ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * MDR )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( MUM + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),Min( MRS ,CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_RAM / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Const ) / RRS ) * ( ARS + MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + RCSe ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM * RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - ACS ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * ( MUM + RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( DS ,RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / Min( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ,Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,( BR * DDR ) ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RRSe,RCSe ) ) - ( ( MLU + Max( Max( RRSe,MUR ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( ACS * RRS ) - Min( ARS ,PN ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + ( DS * ( MLU - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) / ( Max( ( PN / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( PN ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( RRSe / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_Mem - RRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( Min( ( Min( RRS ,Const ) + ( ( ( RRS / MDR ) + FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MLU + ( DS - ( RCSe - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + RMSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Max( MDR,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ),Max( ( ACS / Const ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,DS ) ) - ( Min( DS ,RCSe ) / Max( MUC,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + ( FirstVNF_Mem / PN ) ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,Const ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + ( DS * RCSe ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( RRS * DDR ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM - ( RCSe - RMSe ) ) ) + MUR )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server * CRS ) ) ) / AMS ) ) * Min( BR ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( MLU,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( CRS,Max( FirstVNF_CPU_Server,Const ) ) / ACS )", "choosing": "( ( ( MLU - Max( RCSe,RCSe ) ) - ( MUC - RMSe ) ) - Max( MUC,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( ( ( RRS / Const ) - ( FirstVNF_CPU_Server / ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( RCSe / RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( Min( MDR ,FirstVNF_Mem_Server ) / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( Max( MUM,RCSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),MUM ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( MRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU * Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / Min( Const ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( RRSe + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( AMS / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / ACS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( DS + CS ),( RCSe + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}], "50": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / PN ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) - ( ( Min( MUR ,CS ) + MLU ) / ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( Min( AMS ,BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( Const / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) * ( ( Min( RRSe ,MUM ) + MUM ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( ( Max( RRS,BR ) - Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( Min( MLU ,CS ),( MUC + MUR ) ) ) + ( ( Min( MUC ,CS ) + MLU ) + ( DS * RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU * CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( Min( ( ARS + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( BR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( ( Min( PN ,Const ) / ( FirstVNF_RAM_Server / ( ARS + FirstVNF_CPU_Server ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( RCSe * MUR ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( BR / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM * RMSe ) ) ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Min( DS ,( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( RCSe / RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( ( Min( MUR ,CS ) + MLU ) ,( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MLU ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( DS + RCSe ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,CRS ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + Min( Max( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / MRS ),FirstVNF_CPU_Server ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( MUM,( MLU - Max( RCSe,RCSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Min( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ) ,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC * RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,Const ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( RRSe + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) * ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * MDR )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( MUM + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),Min( MRS ,CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_RAM / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Const ) / RRS ) * ( ARS + MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + RCSe ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM * RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - ACS ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * ( MUM + RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( DS ,RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / Min( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ,Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,( BR * DDR ) ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RRSe,RCSe ) ) - ( ( MLU + Max( Max( RRSe,MUR ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( ACS * RRS ) - Min( ARS ,PN ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + ( DS * ( MLU - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) / ( Max( ( PN / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( PN ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( RRSe / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_Mem - RRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( Min( ( Min( RRS ,Const ) + ( ( ( RRS / MDR ) + FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MLU + ( DS - ( RCSe - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + RMSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Max( MDR,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ),Max( ( ACS / Const ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,DS ) ) - ( Min( DS ,RCSe ) / Max( MUC,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + ( FirstVNF_Mem / PN ) ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,Const ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + ( DS * RCSe ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( RRS * DDR ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM - ( RCSe - RMSe ) ) ) + MUR )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server * CRS ) ) ) / AMS ) ) * Min( BR ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( MLU,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( CRS,Max( FirstVNF_CPU_Server,Const ) ) / ACS )", "choosing": "( ( ( MLU - Max( RCSe,RCSe ) ) - ( MUC - RMSe ) ) - Max( MUC,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( ( ( RRS / Const ) - ( FirstVNF_CPU_Server / ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( RCSe / RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( Min( MDR ,FirstVNF_Mem_Server ) / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( Max( MUM,RCSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),MUM ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( MRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU * Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / Min( Const ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( RRSe + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( AMS / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / ACS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( DS + CS ),( RCSe + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}], "51": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / PN ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) - ( ( Min( MUR ,CS ) + MLU ) / ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( Min( AMS ,BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( Const / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) * ( ( Min( RRSe ,MUM ) + MUM ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( ( Max( RRS,BR ) - Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( Min( MLU ,CS ),( MUC + MUR ) ) ) + ( ( Min( MUC ,CS ) + MLU ) + ( DS * RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU * CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( Min( ( ARS + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( BR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( ( Min( PN ,Const ) / ( FirstVNF_RAM_Server / ( ARS + FirstVNF_CPU_Server ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( RCSe * MUR ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( BR / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM * RMSe ) ) ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Min( DS ,( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( RCSe / RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( ( Min( MUR ,CS ) + MLU ) ,( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MLU ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( DS + RCSe ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,CRS ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + Min( Max( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / MRS ),FirstVNF_CPU_Server ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( MUM,( MLU - Max( RCSe,RCSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Min( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ) ,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC * RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,Const ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( RRSe + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) * ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * MDR )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( MUM + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),Min( MRS ,CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_RAM / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Const ) / RRS ) * ( ARS + MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + RCSe ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM * RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - ACS ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * ( MUM + RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( DS ,RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / Min( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ,Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,( BR * DDR ) ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RRSe,RCSe ) ) - ( ( MLU + Max( Max( RRSe,MUR ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( ACS * RRS ) - Min( ARS ,PN ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + ( DS * ( MLU - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) / ( Max( ( PN / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( PN ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( RRSe / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_Mem - RRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( Min( ( Min( RRS ,Const ) + ( ( ( RRS / MDR ) + FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MLU + ( DS - ( RCSe - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + RMSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Max( MDR,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ),Max( ( ACS / Const ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,DS ) ) - ( Min( DS ,RCSe ) / Max( MUC,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + ( FirstVNF_Mem / PN ) ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,Const ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + ( DS * RCSe ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( RRS * DDR ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM - ( RCSe - RMSe ) ) ) + MUR )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server * CRS ) ) ) / AMS ) ) * Min( BR ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( MLU,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( CRS,Max( FirstVNF_CPU_Server,Const ) ) / ACS )", "choosing": "( ( ( MLU - Max( RCSe,RCSe ) ) - ( MUC - RMSe ) ) - Max( MUC,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( ( ( RRS / Const ) - ( FirstVNF_CPU_Server / ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( RCSe / RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( Min( MDR ,FirstVNF_Mem_Server ) / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( Max( MUM,RCSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),MUM ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( MRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU * Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / Min( Const ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( RRSe + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( AMS / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / ACS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( DS + CS ),( RCSe + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}], "52": [{"determining": "( ( BR + DDR ) - Min( ARS ,MRS ) )", "choosing": "( Max( MUM,DS ) + ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / PN ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) - ( ( Min( MUR ,CS ) + MLU ) / ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( Min( AMS ,BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( Const / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MRS ),( MRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) * ( ( Min( RRSe ,MUM ) + MUM ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( ( Max( RRS,BR ) - Min( FirstVNF_RAM_Server ,( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU - Max( Min( MLU ,CS ),( MUC + MUR ) ) ) + ( ( Min( MUC ,CS ) + MLU ) + ( DS * RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU * CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( Min( ( ARS + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( FirstVNF_Mem_Server ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( BR / Const ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( ( Min( PN ,Const ) / ( FirstVNF_RAM_Server / ( ARS + FirstVNF_CPU_Server ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( RCSe * MUR ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / FirstVNF_RAM_Server ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( ( MLU + Max( ( MLU + DS ),( MUC + MUR ) ) ) + ( Min( Min( MUR ,MUC ) ,RMSe ) + Min( ( MUR * DS ) ,( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) / MUC ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( BR / FirstVNF_CPU_Server ) )", "choosing": "( DS + Max( ( MLU + ( ( DS - CS ) - ( MUM * RMSe ) ) ),DS ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Min( DS ,( RCSe - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( RCSe / RCSe ) ) - Max( RRSe,( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( ( Min( MUR ,CS ) + MLU ) ,( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Min( Min( AMS ,FirstVNF_Mem_Server ) ,FirstVNF_Mem_Server ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,CRS ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MLU ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( DS + RCSe ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,CRS ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MUM / RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( ( MLU + ( DS - ( RCSe - RMSe ) ) ) ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( DS + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + Min( Max( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / MRS ),FirstVNF_CPU_Server ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( MUM,( MLU - Max( RCSe,RCSe ) ) ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( DS + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Min( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ) ,Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC * RMSe ) ) - ( ( Min( DS ,RCSe ) + Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,Const ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( RRSe + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) * ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( MDR / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * MDR )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( CS + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Max( ( DS + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( RRS,FirstVNF_Mem_Server ) + ( Max( ( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( MRS ,MRS ),( FirstVNF_RAM / CRS ) ) ) / AMS ),FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) - Max( ( MUM + RCSe ),( ( MLU + ( DS - ( RCSe - RMSe ) ) ) / RRSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),Min( MRS ,CRS ) ) ) ) )", "choosing": "( ( Max( RMSe,CS ) - ( MUC / RMSe ) ) - ( ( Min( DS ,RCSe ) / Max( MLU,RMSe ) ) - Max( ( DS + RCSe ),( ( MLU + ( DS - ( MUM - RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_RAM / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Const ) / RRS ) * ( ARS + MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + RCSe ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM * RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( Max( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - ACS ),( MRS / CRS ) ) ) / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * ( MUM + RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + Min( DS ,RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / Min( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) ,Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,( BR * DDR ) ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_CPU - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( RRSe,RCSe ) ) - ( ( MLU + Max( Max( RRSe,MUR ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * RRS ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( ACS * RRS ) - Min( ARS ,PN ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU + ( DS * ( MLU - RMSe ) ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( BR * DDR ) - Min( ARS ,FirstVNF_Mem_Server ) ) / RRS ) / ( Max( ( PN / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( PN ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( RRSe / MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / ( ( ( Min( RRS ,Const ) + ( Max( RRS,FirstVNF_CPU_Server ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * Max( ( FirstVNF_Mem - RRS ),( MRS / CRS ) ) ) ) )", "choosing": "( ( CS - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( Min( ( Min( RRS ,Const ) + ( ( ( RRS / MDR ) + FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - ( MLU + ( DS - ( RCSe - RMSe ) ) ) ) - ( ( MLU + Max( ( MLU + RMSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),Min( MDR ,AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Max( MDR,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC * MUR ) ) ) + RMSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( FirstVNF_CPU_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM - RMSe ) ) ) + RMSe ) ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ),Max( ( ACS / Const ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,DS ) ) - ( Min( DS ,RCSe ) / Max( MUC,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + ( FirstVNF_Mem / PN ) ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,Const ),( FirstVNF_RAM_Server / CRS ) ) ) / AMS ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + ( DS * RCSe ) ) + RCSe )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( ( ( RRS * DDR ) - Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - ( MUM - ( RCSe - RMSe ) ) ) + MUR )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( ( ACS / FirstVNF_CPU_Server ),( Max( ( ( ARS + MDR ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_RAM_Server * CRS ) ) ) / AMS ) ) * Min( BR ,FirstVNF_Mem_Server ) ) * ( Min( ( ACS / FirstVNF_CPU_Server ) ,ACS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Max( MLU,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( CRS,Max( FirstVNF_CPU_Server,Const ) ) / ACS )", "choosing": "( ( ( MLU - Max( RCSe,RCSe ) ) - ( MUC - RMSe ) ) - Max( MUC,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( ( ( RRS / Const ) - ( FirstVNF_CPU_Server / ( Min( ACS ,FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - ( RCSe / RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( Min( MDR ,FirstVNF_Mem_Server ) / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( Max( MUM,RCSe ),( MUC + MUR ) ) ) / RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),MUM ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / ( Const * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( MRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU * Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( FirstVNF_Mem_Server / ( Max( Max( ( RRS / BR ),( FirstVNF_RAM_Server / Min( Const ,FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ) / Max( ( ( Min( RRS ,Const ) + ( ( ( RRS / Const ) * FirstVNF_Mem ) / Min( MDR ,FirstVNF_Mem_Server ) ) ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),Max( ( FirstVNF_Mem - MDR ),( MRS / CRS ) ) ) ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( RRSe + Max( ( MLU + CS ),( MUC + MUR ) ) ) + RCSe ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( Max( RRS,Min( AMS ,Const ) ) / ( Max( ( PN / Const ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_CPU_Server ) ) ) + Max( ( ACS / MRS ),( MDR / Const ) ) ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - ( Min( DS ,RCSe ) / Max( MLU,MLU ) ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( MDR,( FirstVNF_CPU_Server / ( ( ACS / FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),FirstVNF_CPU_Server ) / RRS ) * ( FirstVNF_Mem / FirstVNF_CPU_Server ) )", "choosing": "( ( MLU - Max( RCSe,RCSe ) ) - Max( RRSe,MUR ) )", "obj1": 0.40693430656934304, "obj2": 0.6478901467089757}, {"determining": "( ( Max( Max( Max( ( RRS / Const ),( Max( RRS,BR ) / Min( MDR ,FirstVNF_Mem_Server ) ) ),Max( ( ACS / FirstVNF_CPU_Server ),( MDR / AMS ) ) ),Const ) / RRS ) * ( ARS + MDR ) )", "choosing": "( ( MLU - Max( MUM,RCSe ) ) - ( ( MLU + Max( ( MLU + RCSe ),( MUC + MUR ) ) ) + ( ( Min( MUR ,CS ) + MLU ) + ( ( MLU + ( ( DS * CS ) - ( MUM * MLU ) ) ) + RMSe ) ) ) )", "obj1": 0.4032846715328467, "obj2": 0.6526956849327976}]}