{"1": [{"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( DS + MUM ) - ( RRSe - MLU ) )", "obj1": 0.25510204081632654, "obj2": 0.745324599856636}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / MDR ) ,( BR + FirstVNF_RAM ) )", "choosing": "( Min( DS ,DS ) - ( RCSe - MUR ) )", "obj1": 0.3551020408163265, "obj2": 0.644572669707097}, {"determining": "Max( ( AMS * MDR ),( Const - MDR ) )", "choosing": "( ( MUR / RCSe ) * Max( CS,RRSe ) )", "obj1": 0.2857142857142857, "obj2": 0.6971499150827145}, {"determining": "( ( MDR + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( ( MUC * MUR ) + ( RMSe / RCSe ) )", "obj1": 0.3693877551020408, "obj2": 0.6265437165965124}, {"determining": "( ( BR / AMS ) - Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "( Min( CS ,MUC ) - ( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Max( DDR,FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,MLU ),( MUR + RCSe ) )", "obj1": 0.746938775510204, "obj2": 0.2594327993834697}, {"determining": "( ( AMS + MRS ) / ( CRS * AMS ) )", "choosing": "( ( MUM + RRSe ) + ( MUM * CS ) )", "obj1": 0.36122448979591837, "obj2": 0.6431685690747122}, {"determining": "( ( FirstVNF_CPU_Server + BR ) / ( AMS + MRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.2693877551020408, "obj2": 0.734816118912259}, {"determining": "( ( PN / PN ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( RMSe * DS ) * ( MLU - MUM ) )", "obj1": 0.3673469387755102, "obj2": 0.6301427444347231}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - Min( CRS ,CRS ) )", "choosing": "( Min( MLU ,DS ) * ( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_CPU_Server ) ,( RRS - BR ) )", "choosing": "( ( CS / RCSe ) + ( ( MLU * RCSe ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ACS ) / ( FirstVNF_CPU_Server - Const ) ) / Max( Min( PN ,BR ),( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( MLU + RRSe ),Min( MUC ,MLU ) ) ,( ( RCSe / CS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / DDR ) + ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUR / MUC ) + ( RRSe * MUR ) )", "obj1": 0.33877551020408164, "obj2": 0.6657562820400901}, {"determining": "Min( ( MDR * ( PN + MRS ) ) ,( ( RRS - BR ) - RRS ) )", "choosing": "( ( ( MUR * MUR ) - ( DS - MUR ) ) + ( Max( DS,RCSe ) + Min( MUC ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) + ( ( PN - ARS ) + ( MRS + CRS ) ) )", "choosing": "( ( MUM / ( RCSe / CS ) ) - ( ( MUR + RMSe ) * ( RMSe / DS ) ) )", "obj1": 0.40408163265306124, "obj2": 0.5982330464241227}, {"determining": "( Max( ( FirstVNF_CPU_Server * AMS ),( ARS + FirstVNF_Mem ) ) - Max( ( AMS / BR ),( ACS * CRS ) ) )", "choosing": "Max( Min( Min( MLU ,MUR ) ,( MUR * MUM ) ),( ( CS - RCSe ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( CRS - ARS ) ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUC - RRSe ) / Max( MUC,CS ) ) + Min( Min( CS ,MUM ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,MDR ) * ( Const / FirstVNF_Mem_Server ) ) ,( ( RRS / ARS ) + ( ARS * FirstVNF_Mem ) ) )", "choosing": "Max( Min( Max( MLU,DS ) ,Max( MUM,RCSe ) ),Max( Max( DS,RMSe ),( MUC + RCSe ) ) )", "obj1": 0.32653061224489793, "obj2": 0.668128651132736}, {"determining": "( Max( Max( ( FirstVNF_RAM_Server + DDR ),CRS ),FirstVNF_Mem ) / ( DDR - Max( AMS,BR ) ) )", "choosing": "( Min( ( ( MLU / RMSe ) - Max( CS,RRSe ) ) ,( Min( RCSe ,DS ) * Min( DS ,RMSe ) ) ) / Min( ( ( MUR / RCSe ) + ( MUC - MUC ) ) ,( ( MUC - CS ) - ( MUC - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( DDR,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Min( ( Max( MLU,DS ) - ( DS / MUR ) ) ,( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.6697530922575923}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) + Max( ( FirstVNF_RAM * DDR ),( Const + ( FirstVNF_RAM - MRS ) ) ) )", "choosing": "( ( ( DS / CS ) / Max( MUC,MLU ) ) + ( CS * MUR ) )", "obj1": 0.4387755102040816, "obj2": 0.5815828865992632}, {"determining": "( ( ( Min( Const ,DDR ) / Max( Const,RRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS + PN ) ) ) / Max( ( Min( Const ,AMS ) * ( FirstVNF_Mem + BR ) ),( ( FirstVNF_RAM - FirstVNF_CPU_Server ) + ( DDR - BR ) ) ) )", "choosing": "( Max( ( CS - RCSe ),MLU ) * ( MUM + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,CRS ) ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) / ( ( DDR + ACS ) + ( CRS + MRS ) ) ) - Min( ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( RRS ,FirstVNF_Mem_Server ) ) ,Min( ( FirstVNF_CPU_Server * MDR ) ,( FirstVNF_CPU_Server / ACS ) ) ) )", "choosing": "( ( ( Max( MUM,RMSe ) * Min( MLU ,RRSe ) ) + ( Min( MLU ,MUM ) * ( MUC - RRSe ) ) ) - ( ( Min( MUC ,RMSe ) / ( MLU * RMSe ) ) / ( ( RRSe - RMSe ) + ( RCSe + MUM ) ) ) )", "obj1": 0.41020408163265304, "obj2": 0.5855477920025406}, {"determining": "Min( Min( ( ( AMS + FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( ( FirstVNF_Mem + MRS ) - Min( BR ,FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) - Max( Min( BR ,ACS ),( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS * MLU ),Min( ( MUC / MLU ) ,MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.24094445424079558}, {"determining": "( ( ( ( FirstVNF_CPU_Server * CRS ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU + AMS ),( FirstVNF_CPU_Server + BR ) ) ) / ( ( ( FirstVNF_RAM_Server / PN ) + ( FirstVNF_RAM_Server + AMS ) ) - ( Min( FirstVNF_RAM ,ARS ) * Min( MDR ,BR ) ) ) )", "choosing": "( ( ( CS * MUM ) + ( RRSe * ( RRSe - RMSe ) ) ) + ( MUR + ( Min( MUR ,RRSe ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM / ( MUR + RMSe ) ) * RCSe ) - Max( MUM,Max( ( MUC * MUR ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7538283099800115}, {"determining": "Max( ( Min( ( ARS + RRS ) ,( FirstVNF_Mem / FirstVNF_RAM ) ) + ( ( ACS * FirstVNF_CPU_Server ) / Min( BR ,DDR ) ) ),( ( Max( ARS,FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + CRS ) ) + Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( DS / ( MUC * MUM ) ),( RMSe * MUC ) )", "obj1": 0.3, "obj2": 0.6852567573027161}], "2": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS * MDR ),( Const - MDR ) )", "choosing": "( ( MUR / RCSe ) * Max( CS,RRSe ) )", "obj1": 0.2857142857142857, "obj2": 0.6971499150827145}, {"determining": "( ( MDR + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( ( MUC * MUR ) + ( RMSe / RCSe ) )", "obj1": 0.3693877551020408, "obj2": 0.6265437165965124}, {"determining": "( ( BR / AMS ) - Max( FirstVNF_CPU_Server,ARS ) )", "choosing": "( Min( CS ,MUC ) - ( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Max( DDR,FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,MLU ),( MUR + RCSe ) )", "obj1": 0.746938775510204, "obj2": 0.2594327993834697}, {"determining": "( ( PN / PN ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( RMSe * DS ) * ( MLU - MUM ) )", "obj1": 0.3673469387755102, "obj2": 0.6301427444347231}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - Min( CRS ,CRS ) )", "choosing": "( Min( MLU ,DS ) * ( DS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_CPU_Server ) ,( RRS - BR ) )", "choosing": "( ( CS / RCSe ) + ( ( MLU * RCSe ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ACS ) / ( FirstVNF_CPU_Server - Const ) ) / Max( Min( PN ,BR ),( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( MLU + RRSe ),Min( MUC ,MLU ) ) ,( ( RCSe / CS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) + ( ( PN - ARS ) + ( MRS + CRS ) ) )", "choosing": "( ( MUM / ( RCSe / CS ) ) - ( ( MUR + RMSe ) * ( RMSe / DS ) ) )", "obj1": 0.40408163265306124, "obj2": 0.5982330464241227}, {"determining": "Min( Min( ( ( AMS + FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( ( FirstVNF_Mem + MRS ) - Min( BR ,FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) - Max( Min( BR ,ACS ),( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS * MLU ),Min( ( MUC / MLU ) ,MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.24094445424079558}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7538283099800115}, {"determining": "( Min( ARS ,FirstVNF_RAM ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) / PN ) )", "choosing": "( ( ( RMSe / MLU ) * ( MUC + DS ) ) / ( Max( MUC,MLU ) / Max( MUM,DS ) ) )", "obj1": 0.3326530612244898, "obj2": 0.6547126330646881}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( MDR / BR ) ) * ( ( BR + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Max( ( DS / ( RMSe * MUM ) ),( RMSe * MUC ) )", "obj1": 0.3081632653061224, "obj2": 0.6779615670683512}, {"determining": "Max( ARS,( ( Max( ARS,FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + CRS ) ) + Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( DS / ( MUC + CS ) ),( RMSe * MUC ) )", "obj1": 0.3142857142857143, "obj2": 0.6765096486708163}, {"determining": "Min( Min( ( Min( ARS ,Const ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem + MRS ) - Min( BR ,FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) - Max( Min( BR ,ACS ),( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS * CS ),Min( ( MUC * ( RCSe / MUR ) ) ,MUR ) )", "obj1": 0.8285714285714286, "obj2": 0.16217700668808668}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / Max( FirstVNF_RAM,ARS ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( BR + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.6487487006092998}, {"determining": "Max( ( ( ( DDR * AMS ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( BR + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( ( RRSe - MUC ) / ( MUM * MUR ) ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7538283099800115}, {"determining": "Min( Min( ( ( AMS + FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem + MRS ) - Min( BR ,FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) - Max( Min( BR ,ACS ),( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS * CS ),Min( ( MUC * MLU ) ,MUR ) )", "obj1": 0.7551020408163265, "obj2": 0.24094445424079558}, {"determining": "Min( Min( ( ( AMS + FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( ( FirstVNF_Mem + MRS ) - Min( BR ,FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) - Max( Min( BR ,ACS ),( MDR + FirstVNF_Mem ) ) ) )", "choosing": "( ( CS * CS ) - Min( ( MUC * MLU ) ,MUR ) )", "obj1": 0.7489795918367347, "obj2": 0.24722153378297507}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7495578375343191}, {"determining": "( Min( ( Max( ( Min( ( Min( FirstVNF_Mem ,MRS ) * ( ARS * MDR ) ) ,( ( RRS + Const ) + ( ACS / FirstVNF_Mem_Server ) ) ) * ( ( Max( PN,PN ) - Min( FirstVNF_RAM_Server ,MDR ) ) - ( Min( RRS ,Const ) - ( MDR * MRS ) ) ) ),( ( ( Min( Const ,DDR ) / ( ARS / Const ) ) * ( Min( RRS ,FirstVNF_RAM_Server ) + Min( AMS ,DDR ) ) ) / ( Max( ( MRS / MDR ),( FirstVNF_CPU + BR ) ) / Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( DDR / ACS ) ) ) ) ) + ( Min( ( ( Max( DDR,BR ) * ( BR - BR ) ) * ( Min( DDR ,CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,RRS ) * ( MDR + MDR ) ) - ( ( RRS * FirstVNF_CPU ) / ( CRS / BR ) ) ) ) * ( ( ( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) - ( RRS + MRS ) ) / Min( ( RRS / FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,ACS ) ) ) - ( Min( ( DDR + ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) ) + ( Max( DDR,RRS ) + Min( PN ,FirstVNF_Mem ) ) ) ) ) ) ,( ( ( Max( ( ( ARS / FirstVNF_CPU ) + ( FirstVNF_RAM_Server / CRS ) ),Max( ( CRS - FirstVNF_CPU_Server ),Min( FirstVNF_Mem ,ACS ) ) ) - ( ( ( FirstVNF_CPU_Server + MRS ) * ( ARS * CRS ) ) / ( ( RRS - FirstVNF_Mem_Server ) - ( ACS / FirstVNF_RAM_Server ) ) ) ) - Min( Min( ( ( FirstVNF_RAM * AMS ) / ( ACS * AMS ) ) ,Min( ( ARS * FirstVNF_RAM ) ,Min( AMS ,FirstVNF_Mem ) ) ) ,Max( ( Min( PN ,BR ) / ( FirstVNF_CPU_Server - DDR ) ),Min( ( FirstVNF_CPU_Server + ARS ) ,( DDR + ARS ) ) ) ) ) + ( Max( Min( ( ( FirstVNF_RAM * AMS ) / ( PN - ACS ) ) ,( Max( FirstVNF_Mem_Server,PN ) - ( PN + RRS ) ) ),( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,BR ) ) + ( ( DDR - MDR ) * ( FirstVNF_Mem_Server - CRS ) ) ) ) / Max( ( ( ( FirstVNF_Mem_Server * RRS ) + ( ACS + BR ) ) + Max( Min( DDR ,FirstVNF_RAM ),( MRS - FirstVNF_RAM ) ) ),( ( Max( RRS,FirstVNF_Mem_Server ) / ( ARS * FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem_Server,CRS ) / ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) ) ) ) / ( ( Max( ( ( ( ( ARS * DDR ) - ( PN * CRS ) ) * ( ( FirstVNF_RAM_Server * BR ) / ( PN * DDR ) ) ) - ( ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ),( Max( ( ( CRS - PN ) / ( MDR - FirstVNF_RAM ) ),( ( BR - PN ) + Max( FirstVNF_CPU,ACS ) ) ) * Max( ( ( MRS - FirstVNF_Mem ) * ( MRS + PN ) ),Max( Min( BR ,ACS ),( MRS - FirstVNF_CPU ) ) ) ) ) / Max( ( ( ( Max( ACS,Const ) / ( PN + FirstVNF_RAM_Server ) ) / ( ( CRS - RRS ) / ( AMS * FirstVNF_CPU_Server ) ) ) + ( Max( ( FirstVNF_CPU_Server - RRS ),( RRS * FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / MRS ) + Max( FirstVNF_Mem,PN ) ) ) ),( ( ( ( CRS - FirstVNF_CPU ) - ( FirstVNF_RAM * RRS ) ) * ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_RAM / Const ) ) ) - ( ( ( Const + PN ) + Max( ARS,ACS ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( RRS - ACS ) ) ) ) ) ) / ( Max( ( ( ( ( RRS * ARS ) + ( BR - DDR ) ) + ( ( FirstVNF_Mem_Server / PN ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_Mem * CRS ) - ( DDR * FirstVNF_CPU_Server ) ) + ( ( Const + Const ) + ( CRS + MRS ) ) ) ),( Max( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),( FirstVNF_CPU_Server / MDR ) ),( ( DDR / MRS ) / ( CRS / MDR ) ) ) * ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,( FirstVNF_CPU_Server * Const ) ) + Min( ( BR * BR ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) ) / Min( ( Min( ( Min( FirstVNF_Mem ,AMS ) / ( CRS + ACS ) ) ,( ( FirstVNF_Mem_Server / Const ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) ) - ( ( ( BR + RRS ) / Min( FirstVNF_Mem_Server ,MDR ) ) / ( Min( FirstVNF_Mem_Server ,ARS ) + Max( DDR,ARS ) ) ) ) ,( ( Max( ( DDR / FirstVNF_Mem_Server ),( FirstVNF_RAM - MDR ) ) + Max( Max( PN,Const ),( BR * FirstVNF_Mem_Server ) ) ) / ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - ( PN - CRS ) ) * ( Max( AMS,FirstVNF_CPU ) * ( PN / FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Min( Min( MLU ,MUC ) ,( MLU - RCSe ) )", "obj1": 0.8816326530612245, "obj2": 0.1360115444132753}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) + ( ( PN - ARS ) + ( MRS + CRS ) ) )", "choosing": "( ( MUM + ( RCSe / CS ) ) - ( ( MUR + RMSe ) * ( RMSe / ( RCSe + MUM ) ) ) )", "obj1": 0.32040816326530613, "obj2": 0.6649282472535148}, {"determining": "Max( ( FirstVNF_Mem / MDR ),( FirstVNF_Mem - MDR ) )", "choosing": "( ( MUR / RRSe ) * DS )", "obj1": 0.42244897959183675, "obj2": 0.5624348608817337}, {"determining": "Min( ( FirstVNF_Mem / MDR ) ,( BR + FirstVNF_RAM ) )", "choosing": "( ( MUR / RCSe ) * Max( CS,MUM ) )", "obj1": 0.2857142857142857, "obj2": 0.6971499150827145}, {"determining": "Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Max( DDR,FirstVNF_CPU ) ),( FirstVNF_Mem - MDR ) )", "choosing": "( ( MUR / RCSe ) * Max( Min( MUC ,MLU ),( MUR + RCSe ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6303290157883181}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Max( ( Max( CS,MUM ) + MLU ),( MUR + RCSe ) )", "obj1": 0.9122448979591836, "obj2": 0.09611532780644104}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MUR / RCSe ) * Max( CS,MUM ) )", "obj1": 0.673469387755102, "obj2": 0.3363812850257998}, {"determining": "Max( ( AMS * MDR ),( FirstVNF_Mem - MDR ) )", "choosing": "Max( Min( MUC ,MLU ),( MUR + RCSe ) )", "obj1": 0.3163265306122449, "obj2": 0.6756596123276468}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Max( Max( MRS,( MDR + BR ) ),FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,MLU ),( MUR + RCSe ) )", "obj1": 0.7020408163265306, "obj2": 0.298968334325776}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) / ( DDR + ACS ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) / ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) * ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( ( ( Max( Min( Min( MUM ,RMSe ) ,( CS + RCSe ) ),( ( CS + DS ) * ( MUM * DS ) ) ) * ( ( ( MUM + RRSe ) - ( RMSe * CS ) ) * ( ( MUR * RMSe ) - ( RCSe + MUM ) ) ) ) * ( ( ( ( MUR / DS ) - ( RRSe * MUR ) ) / ( Max( RRSe,MUR ) + ( MUC * RMSe ) ) ) * Min( ( ( MUR + RCSe ) * ( RRSe * RCSe ) ) ,( ( MUC / MUR ) + ( RMSe - MUM ) ) ) ) ),( Max( Max( ( ( MUM * MLU ) / ( MLU + MUC ) ),( Max( MUM,RMSe ) / ( CS * MUC ) ) ),( ( Min( MLU ,RMSe ) * ( MLU - CS ) ) / ( Min( RMSe ,CS ) * Min( MUM ,CS ) ) ) ) + ( Max( ( Min( MLU ,CS ) * ( RCSe * MUM ) ),( ( MUR * DS ) * Max( MUC,RRSe ) ) ) / ( ( Min( MUC ,MLU ) - ( MUM + RMSe ) ) / Min( Max( MLU,MUR ) ,( MUR + CS ) ) ) ) ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.8409892041037346}, {"determining": "( ( ( FirstVNF_CPU + AMS ) + BR ) / ( AMS + MRS ) )", "choosing": "( Max( MUC,MLU ) / Max( ( MUR + ( Min( MUR ,RRSe ) - CS ) ),DS ) )", "obj1": 0.22244897959183674, "obj2": 0.7983295303018731}, {"determining": "Min( ( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) + ( Max( PN,ARS ) + ( MRS + CRS ) ) ) ,( ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) - Max( Min( BR ,ACS ),( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS * CS ),RMSe )", "obj1": 0.8142857142857143, "obj2": 0.18606245242742703}, {"determining": "( Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) + ( ( PN - ARS ) + ( MRS + CRS ) ) )", "choosing": "( ( MUM + ( RCSe / CS ) ) - ( ( Max( ( CS * CS ),Min( ( MUC * MLU ) ,MUR ) ) + RMSe ) * ( RMSe / DS ) ) )", "obj1": 0.38979591836734695, "obj2": 0.5998599615240434}, {"determining": "Min( Min( ( ( AMS + FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( ( FirstVNF_Mem + MRS ) - Min( BR ,FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) - Max( Min( BR ,ACS ),( MDR + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS * MLU ),Min( ( MUC / MLU ) ,MUR ) )", "obj1": 0.7591836734693878, "obj2": 0.2370945230586323}, {"determining": "( ( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - ARS ) ) ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU * RMSe ) * ( DS / RRSe ) )", "obj1": 0.4122448979591837, "obj2": 0.5679020013656774}, {"determining": "( ( MDR + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( ( MLU * DS ) * ( DS / RRSe ) )", "obj1": 0.46938775510204084, "obj2": 0.5031040965761882}, {"determining": "( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.15510204081632653, "obj2": 0.8562306777966447}, {"determining": "( ( ( Min( BR ,ARS ) - CRS ) + ( DDR - Max( MRS,( MDR + BR ) ) ) ) / ( FirstVNF_Mem_Server * DDR ) )", "choosing": "Min( Max( Min( Min( DS ,RRSe ) ,( MLU / MUC ) ),( Min( DS ,RMSe ) / Max( MUC,MUM ) ) ) ,Min( MLU ,RMSe ) )", "obj1": 0.45102040816326533, "obj2": 0.5482507857783845}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + MRS ) )", "choosing": "( Max( CS,MLU ) / DS )", "obj1": 0.12448979591836734, "obj2": 0.8614374799770227}, {"determining": "Min( ( ( FirstVNF_CPU_Server + BR ) / ( AMS + MRS ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( DS + ( Max( MUC,MLU ) / Max( MLU,DS ) ) ) - ( RRSe - MLU ) )", "obj1": 0.23061224489795917, "obj2": 0.7753519264335639}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.2755102040816326, "obj2": 0.7203583317151221}, {"determining": "Min( ( FirstVNF_RAM * ( Min( MRS ,FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( Min( DS ,RRSe ) + ( RMSe * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.7264842213898561}, {"determining": "( ( MDR * ( CRS - ARS ) ) - ( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( DDR ,DDR ) ) )", "choosing": "( ( ( MUC - RRSe ) / Max( MUC,CS ) ) + Min( Min( CS ,MUM ) ,Min( ( DS + MUR ) ,RCSe ) ) )", "obj1": 0.9938775510204082, "obj2": 0.006269816467354243}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / DDR )", "choosing": "( ( MUC * RMSe ) / Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.3816326530612245, "obj2": 0.6231683557017511}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "( ( MUC * RMSe ) / ( RCSe - RRSe ) )", "obj1": 0.2816326530612245, "obj2": 0.7103352876282987}, {"determining": "Min( ( ( ( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_Mem + MRS ) ) + MDR ) * ARS ) ,Max( ACS,RRS ) )", "choosing": "( ( DS / Min( RMSe ,( Max( MUC,MLU ) / Max( MLU,DS ) ) ) ) - ( Min( Max( CS,RMSe ) ,MUC ) * ( RMSe - RMSe ) ) )", "obj1": 0.41020408163265304, "obj2": 0.5773073525201184}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( DS / MUR ) ) ,( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6837607870776852}, {"determining": "( Max( BR,FirstVNF_RAM ) + ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( MUC - RMSe ) / ( RCSe - RMSe ) )", "obj1": 0.32653061224489793, "obj2": 0.6584993043298681}, {"determining": "( ( Min( BR ,ARS ) - CRS ) + ( DDR - ( FirstVNF_Mem - MDR ) ) )", "choosing": "( Max( Min( Min( DS ,RRSe ) ,( MLU / MUC ) ),( Min( DS ,RMSe ) / Max( MUC,MUM ) ) ) / ( ( MUR / RCSe ) * Max( CS,MUM ) ) )", "obj1": 0.7408163265306122, "obj2": 0.27605222235725235}, {"determining": "( ( Min( BR ,ARS ) - CRS ) + ( DDR - Max( MRS,( MDR + BR ) ) ) )", "choosing": "( Max( Min( Min( DS ,RRSe ) ,( MLU / MUC ) ),( Min( DS ,RMSe ) / Max( MUC,MUM ) ) ) / ( Max( Min( RRSe ,MUM ),( RMSe * DS ) ) + Min( ( MUR / RRSe ) ,( RRSe * RCSe ) ) ) )", "obj1": 0.35306122448979593, "obj2": 0.6410437311409787}], "3": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS * MDR ),( Const - MDR ) )", "choosing": "( ( MUR / RCSe ) * Max( CS,RRSe ) )", "obj1": 0.2857142857142857, "obj2": 0.6971499150827145}, {"determining": "( ( PN / PN ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( RMSe * DS ) * ( MLU - MUM ) )", "obj1": 0.3673469387755102, "obj2": 0.6301427444347231}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7538283099800115}, {"determining": "Max( ( ( ( DDR * AMS ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( BR + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( ( RRSe - MUC ) / ( MUM * MUR ) ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7538283099800115}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7495578375343191}, {"determining": "Max( ( FirstVNF_Mem / MDR ),( FirstVNF_Mem - MDR ) )", "choosing": "( ( MUR / RRSe ) * DS )", "obj1": 0.42244897959183675, "obj2": 0.5624348608817337}, {"determining": "Min( ( FirstVNF_Mem / MDR ) ,( BR + FirstVNF_RAM ) )", "choosing": "( ( MUR / RCSe ) * Max( CS,MUM ) )", "obj1": 0.2857142857142857, "obj2": 0.6971499150827145}, {"determining": "Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Max( DDR,FirstVNF_CPU ) ),( FirstVNF_Mem - MDR ) )", "choosing": "( ( MUR / RCSe ) * Max( Min( MUC ,MLU ),( MUR + RCSe ) ) )", "obj1": 0.36122448979591837, "obj2": 0.6303290157883181}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) / ( DDR + ACS ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) / ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) * ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( ( ( Max( Min( Min( MUM ,RMSe ) ,( CS + RCSe ) ),( ( CS + DS ) * ( MUM * DS ) ) ) * ( ( ( MUM + RRSe ) - ( RMSe * CS ) ) * ( ( MUR * RMSe ) - ( RCSe + MUM ) ) ) ) * ( ( ( ( MUR / DS ) - ( RRSe * MUR ) ) / ( Max( RRSe,MUR ) + ( MUC * RMSe ) ) ) * Min( ( ( MUR + RCSe ) * ( RRSe * RCSe ) ) ,( ( MUC / MUR ) + ( RMSe - MUM ) ) ) ) ),( Max( Max( ( ( MUM * MLU ) / ( MLU + MUC ) ),( Max( MUM,RMSe ) / ( CS * MUC ) ) ),( ( Min( MLU ,RMSe ) * ( MLU - CS ) ) / ( Min( RMSe ,CS ) * Min( MUM ,CS ) ) ) ) + ( Max( ( Min( MLU ,CS ) * ( RCSe * MUM ) ),( ( MUR * DS ) * Max( MUC,RRSe ) ) ) / ( ( Min( MUC ,MLU ) - ( MUM + RMSe ) ) / Min( Max( MLU,MUR ) ,( MUR + CS ) ) ) ) ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.8409892041037346}, {"determining": "( Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) + ( ( PN - ARS ) + ( MRS + CRS ) ) )", "choosing": "( ( MUM + ( RCSe / CS ) ) - ( ( Max( ( CS * CS ),Min( ( MUC * MLU ) ,MUR ) ) + RMSe ) * ( RMSe / DS ) ) )", "obj1": 0.38979591836734695, "obj2": 0.5998599615240434}, {"determining": "( ( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - ARS ) ) ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU * RMSe ) * ( DS / RRSe ) )", "obj1": 0.4122448979591837, "obj2": 0.5679020013656774}, {"determining": "( ( MDR + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - ARS ) )", "choosing": "( ( MLU * DS ) * ( DS / RRSe ) )", "obj1": 0.46938775510204084, "obj2": 0.5031040965761882}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + MRS ) )", "choosing": "( Max( CS,MLU ) / DS )", "obj1": 0.12448979591836734, "obj2": 0.8614374799770227}, {"determining": "Min( ( FirstVNF_RAM * ( Min( MRS ,FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( Min( DS ,RRSe ) + ( RMSe * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.7264842213898561}, {"determining": "Min( ( ( ( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_Mem + MRS ) ) + MDR ) * ARS ) ,Max( ACS,RRS ) )", "choosing": "( ( DS / Min( RMSe ,( Max( MUC,MLU ) / Max( MLU,DS ) ) ) ) - ( Min( Max( CS,RMSe ) ,MUC ) * ( RMSe - RMSe ) ) )", "obj1": 0.41020408163265304, "obj2": 0.5773073525201184}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( DS / MUR ) ) ,( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6837607870776852}, {"determining": "Min( ( FirstVNF_Mem / MDR ) ,( BR + FirstVNF_RAM ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( Min( DS ,RRSe ) + ( MLU * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6580074807293057}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1469387755102041, "obj2": 0.8560460273477419}, {"determining": "Min( ( ( Max( MRS,FirstVNF_RAM_Server ) / DDR ) * ( ( MRS / FirstVNF_Mem_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * CS ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.707032965203406}, {"determining": "Min( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "( ( MUC * RMSe ) / Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6076914094864522}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / Max( FirstVNF_RAM,ARS ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7800174409180105}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) - ( ( BR + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( RRSe - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) )", "obj1": 0.23469387755102042, "obj2": 0.7538283099800115}, {"determining": "( ( Min( BR ,ARS ) - CRS ) + ( DDR - Max( MRS,( MDR + BR ) ) ) )", "choosing": "( Max( Min( Min( DS ,RRSe ) ,( MLU / MUC ) ),( Min( DS ,RMSe ) / Max( MUC,MUM ) ) ) / ( Max( Min( RRSe ,MUM ),( RMSe * DS ) ) + Min( ( MUR / RCSe ) ,( RRSe * RCSe ) ) ) )", "obj1": 0.3693877551020408, "obj2": 0.6206469881185382}, {"determining": "( ( Min( BR ,ARS ) - RRS ) + ( DDR - Max( MRS,( MDR + BR ) ) ) )", "choosing": "( ( MUM / RCSe ) * Max( CS,MUM ) )", "obj1": 0.3040816326530612, "obj2": 0.6762312471531089}, {"determining": "Max( ( AMS * MDR ),( FirstVNF_Mem - MDR ) )", "choosing": "( ( MUR / RCSe ) * Max( CS,MUM ) )", "obj1": 0.2857142857142857, "obj2": 0.6971499150827145}, {"determining": "( ( Max( ( Max( ( ( ( ACS - DDR ) / ( FirstVNF_RAM_Server + ACS ) ) / ( ( AMS - DDR ) * ( FirstVNF_Mem * CRS ) ) ),( ( ( FirstVNF_RAM + Const ) * ( PN / BR ) ) * Min( Min( FirstVNF_Mem_Server ,ARS ) ,Max( RRS,RRS ) ) ) ) * Max( ( Max( Min( CRS ,ACS ),( FirstVNF_Mem_Server * DDR ) ) - ( ( PN / ACS ) / ( FirstVNF_CPU * FirstVNF_RAM ) ) ),( ( ( FirstVNF_RAM + FirstVNF_Mem ) / Min( MRS ,CRS ) ) * ( ( FirstVNF_RAM_Server * AMS ) + ( FirstVNF_Mem / MRS ) ) ) ) ),( ( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + ( ( FirstVNF_Mem / MDR ) / ( BR - FirstVNF_CPU ) ) ) + ( ( ( PN + CRS ) + ( PN + FirstVNF_RAM ) ) - ( ( MRS / MDR ) - ( PN - FirstVNF_CPU ) ) ) ) + ( ( Max( ( PN * ACS ),( ARS * FirstVNF_Mem ) ) / ( ( CRS / FirstVNF_CPU ) + Min( ARS ,MRS ) ) ) + ( ( ( MRS / FirstVNF_RAM ) - ( Const * PN ) ) * ( ( ARS - BR ) + ( FirstVNF_RAM_Server * PN ) ) ) ) ) ) * ( ( ( Max( Max( ( BR + ARS ),Max( MDR,FirstVNF_CPU ) ),( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( ACS + FirstVNF_RAM ) ) ) * Min( ( ( FirstVNF_RAM_Server - CRS ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,Min( Min( RRS ,ACS ) ,Max( Const,DDR ) ) ) ) / ( ( Min( ( CRS - FirstVNF_RAM ) ,( FirstVNF_CPU + PN ) ) + Max( ( BR / MDR ),Min( RRS ,ACS ) ) ) + ( ( ( Const * MRS ) * ( MDR - FirstVNF_RAM ) ) - Max( ( CRS - PN ),( CRS - Const ) ) ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server - Const ) + Max( FirstVNF_RAM_Server,RRS ) ) / Min( ( FirstVNF_RAM * ACS ) ,Max( RRS,FirstVNF_RAM_Server ) ) ) - ( ( ( CRS / FirstVNF_Mem ) * ( Const + PN ) ) / ( Min( RRS ,ACS ) / ( CRS + CRS ) ) ) ) * ( ( ( Min( BR ,FirstVNF_RAM_Server ) - Min( CRS ,AMS ) ) + ( Max( FirstVNF_CPU,Const ) / ( RRS / ARS ) ) ) / ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem ) + ( BR / AMS ) ) - Min( ( MDR - PN ) ,( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) ) ) ) - ( ( ( ( Min( ( ( FirstVNF_Mem_Server / ARS ) + ( FirstVNF_Mem * MRS ) ) ,( ( AMS + AMS ) + ( PN / FirstVNF_Mem_Server ) ) ) * Min( Min( ( PN - PN ) ,Min( FirstVNF_Mem_Server ,Const ) ) ,Min( ( ARS * AMS ) ,Max( ACS,MDR ) ) ) ) + Min( Max( ( ( DDR * FirstVNF_CPU_Server ) * ( Const + MRS ) ),Max( ( CRS * FirstVNF_RAM_Server ),Min( RRS ,FirstVNF_RAM ) ) ) ,( Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,Max( RRS,FirstVNF_Mem_Server ) ) - Min( Max( ACS,FirstVNF_Mem_Server ) ,( RRS - FirstVNF_RAM_Server ) ) ) ) ) - ( Min( ( ( ( MDR * PN ) * Min( Const ,BR ) ) / Max( ( BR / FirstVNF_Mem ),( DDR + FirstVNF_CPU_Server ) ) ) ,( Min( Min( PN ,FirstVNF_CPU_Server ) ,( MRS * DDR ) ) + ( ( RRS - BR ) * Max( CRS,FirstVNF_RAM_Server ) ) ) ) * Min( ( Max( Max( ARS,AMS ),( ARS * PN ) ) - ( ( PN + FirstVNF_Mem ) / ( CRS / FirstVNF_CPU_Server ) ) ) ,( ( Max( FirstVNF_RAM,ACS ) - Min( DDR ,PN ) ) + ( Min( FirstVNF_CPU_Server ,MDR ) / ( ACS + FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Max( Max( ( ( AMS + MDR ) - ( RRS / PN ) ),( ( RRS * MRS ) / Min( Const ,PN ) ) ),Min( Max( ( FirstVNF_CPU + ARS ),( ARS / MDR ) ) ,( Max( BR,FirstVNF_Mem_Server ) - Min( PN ,BR ) ) ) ) * ( ( ( ( ARS * CRS ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) * ( ( CRS - ACS ) - ( DDR + FirstVNF_Mem ) ) ) + Min( Max( ( ACS * FirstVNF_CPU ),( ARS / FirstVNF_Mem_Server ) ) ,( ( MDR / FirstVNF_RAM_Server ) - ( MDR / FirstVNF_CPU_Server ) ) ) ) ) / ( Max( Max( Max( ( ARS + CRS ),( FirstVNF_RAM - FirstVNF_CPU ) ),Max( ( FirstVNF_Mem_Server + MRS ),( PN * Const ) ) ),Min( ( Max( DDR,CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,Min( ( FirstVNF_RAM + FirstVNF_RAM_Server ) ,Max( MRS,AMS ) ) ) ) * Max( ( ( Max( FirstVNF_Mem,ACS ) * ( RRS - PN ) ) - ( Min( PN ,FirstVNF_Mem ) + ( RRS - CRS ) ) ),Max( ( ( BR + PN ) + ( FirstVNF_CPU_Server + RRS ) ),Max( Max( ARS,ARS ),( FirstVNF_Mem_Server - BR ) ) ) ) ) ) ) )", "choosing": "( Max( RMSe,RRSe ) - ( DS / MUR ) )", "obj1": 0.42653061224489797, "obj2": 0.5432439443047828}, {"determining": "Min( ( ( ( ( FirstVNF_CPU_Server + BR ) / ( AMS + MRS ) ) + MDR ) * ARS ) ,Max( ACS,RRS ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7495578375343191}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "( ( DS / Min( RMSe ,( Max( MUC,MLU ) / Max( MLU,DS ) ) ) ) - ( Min( Max( CS,RMSe ) ,MUC ) * ( RMSe - MUM ) ) )", "obj1": 0.41020408163265304, "obj2": 0.5773073525201184}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( ( MUC / DS ) * ( MUR - CS ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.3326530612244898, "obj2": 0.6404523011943748}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / DDR )", "choosing": "( Min( ( Min( MLU ,DS ) - ( DS / MUR ) ) ,( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6837607870776852}, {"determining": "( ( AMS - ACS ) / ( DDR + ( MRS + CRS ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) / ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,MUR ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( ( ( Max( Min( Min( MUM ,RMSe ) ,( CS + RCSe ) ),( ( CS + DS ) * ( MUM * DS ) ) ) * ( ( ( MUM + RRSe ) - ( RMSe * CS ) ) * ( ( MUR * RMSe ) - ( RCSe + MUM ) ) ) ) * ( ( ( ( MUR / DS ) - ( RRSe * MUR ) ) / ( Max( RRSe,MUR ) + ( MUC * RMSe ) ) ) * Min( ( ( MUR + RCSe ) * ( RRSe * RCSe ) ) ,( ( MUC / MUR ) + ( RMSe - MUM ) ) ) ) ),( Max( Max( ( ( MUM * MLU ) / ( MLU + MUC ) ),( Max( MUM,RMSe ) / ( CS * MUC ) ) ),( ( Min( MLU ,RMSe ) * ( MLU - CS ) ) / ( Min( RMSe ,CS ) * Min( MUM ,CS ) ) ) ) + ( Max( ( Min( MLU ,CS ) * ( RCSe * MUM ) ),( ( MUR * DS ) * Max( MUC,RRSe ) ) ) / ( ( Min( MUC ,MLU ) * ( MUM + RMSe ) ) / Min( Max( MLU,MUR ) ,( MUR + CS ) ) ) ) ) ) ) )", "obj1": 0.17551020408163265, "obj2": 0.8395161686492545}, {"determining": "( ( AMS - ACS ) / ( DDR + ACS ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) / ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( ( ( Max( Min( Min( MUM ,RMSe ) ,( CS + RCSe ) ),( ( CS + DS ) * ( MUM * DS ) ) ) * ( ( ( MUM + RRSe ) - ( RMSe * CS ) ) * ( ( MUR * RMSe ) - ( RCSe + MUM ) ) ) ) * ( ( ( ( MUR / DS ) - ( RRSe * MUR ) ) / ( Max( RRSe,MUR ) + ( MUC * RMSe ) ) ) * Min( ( ( MUR + RCSe ) * ( RRSe * RCSe ) ) ,( ( MUC / MUR ) + ( RMSe - MUM ) ) ) ) ),( Max( Max( ( ( MUM * MLU ) / ( MLU + MUC ) ),( Max( MUM,RMSe ) / ( CS * MUC ) ) ),( ( Min( MLU ,RMSe ) * ( MLU - CS ) ) / ( Min( RMSe ,CS ) * Min( MUM ,CS ) ) ) ) + ( Max( ( Min( MLU ,CS ) * ( RCSe * MUM ) ),( ( MUR * DS ) * Max( MUC,RRSe ) ) ) / ( ( Min( MUC ,MLU ) * ( MUM + RMSe ) ) / Min( Max( MLU,MUR ) ,( MUR + CS ) ) ) ) ) ) ) )", "obj1": 0.16938775510204082, "obj2": 0.8409892041037346}, {"determining": "Max( ( AMS * MDR ),( Const - PN ) )", "choosing": "( Max( RRSe,MLU ) / Max( MLU,DS ) )", "obj1": 0.2673469387755102, "obj2": 0.7182111895524613}, {"determining": "( AMS - Max( DDR,FirstVNF_CPU ) )", "choosing": "Max( Min( Max( MUC,MUM ) ,MLU ),( MUR + RCSe ) )", "obj1": 0.46122448979591835, "obj2": 0.5225101272486291}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "( ( MUR / RCSe ) * ( RCSe + MUM ) )", "obj1": 0.37755102040816324, "obj2": 0.6045169920979343}, {"determining": "( ( ( FirstVNF_Mem + MRS ) - Min( BR ,FirstVNF_Mem_Server ) ) - Min( CRS ,ARS ) )", "choosing": "( Min( ( MUC * MLU ) ,MUR ) * ( DS / RRSe ) )", "obj1": 0.39183673469387753, "obj2": 0.5905226159830848}, {"determining": "( ( MDR + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( ( MLU * DS ) * RCSe )", "obj1": 0.5081632653061224, "obj2": 0.47465189730261126}, {"determining": "( ( MDR / FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( ( MLU + DS ) * ( DS / RRSe ) )", "obj1": 0.46938775510204084, "obj2": 0.5031040965761882}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ACS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) - ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) )", "obj1": 0.24489795918367346, "obj2": 0.7495578375343191}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.19183673469387755, "obj2": 0.8021939163147036}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + ( DDR / FirstVNF_RAM_Server ) ) ) + ( ( PN - ARS ) + ( MRS + CRS ) ) )", "choosing": "( ( MUM / ( RCSe / CS ) ) - ( Max( ( ( ( MUC / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) ) * ( RMSe / DS ) ) )", "obj1": 0.4163265306122449, "obj2": 0.5676893625886293}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( ( MUC * MLU ) / Max( RMSe,DS ) )", "obj1": 0.20816326530612245, "obj2": 0.7802855951077933}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "Max( ( ( PN - ARS ) / MDR ),( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( ( Max( ( CS * CS ),Min( ( MUC * MLU ) ,MUR ) ) + RMSe ) * ( RMSe / DS ) ) / RCSe ) * DS )", "obj1": 0.35918367346938773, "obj2": 0.6334036144114255}, {"determining": "( Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) + ( ( PN - ARS ) + ( MRS + CRS ) ) )", "choosing": "( ( MUR / RCSe ) * DS )", "obj1": 0.42244897959183675, "obj2": 0.5624348608817337}, {"determining": "Max( ( FirstVNF_Mem / MDR ),( FirstVNF_Mem - MDR ) )", "choosing": "( ( MUM + ( RCSe / CS ) ) - ( ( Max( ( CS * CS ),Min( ( MUC * MLU ) ,MUR ) ) + RMSe ) * ( RMSe / DS ) ) )", "obj1": 0.38979591836734695, "obj2": 0.5998599615240434}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUC * MLU ) ) )", "obj1": 0.23061224489795917, "obj2": 0.7657164872159248}, {"determining": "Max( ARS,( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM_Server + CRS ) ) + Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( MLU,DS ),( RMSe * MUC ) )", "obj1": 0.20612244897959184, "obj2": 0.7876665793681751}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( Min( ARS ,FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( Max( ( DS / ( MUC + MUM ) ),MLU ) / Max( MLU,DS ) )", "obj1": 0.3142857142857143, "obj2": 0.6741576744963772}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}], "4": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) + ( ( PN - ARS ) + ( MRS + CRS ) ) )", "choosing": "( ( MUM + ( RCSe / CS ) ) - ( ( Max( ( CS * CS ),Min( ( MUC * MLU ) ,MUR ) ) + RMSe ) * ( RMSe / DS ) ) )", "obj1": 0.38979591836734695, "obj2": 0.5998599615240434}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + MRS ) )", "choosing": "( Max( CS,MLU ) / DS )", "obj1": 0.12448979591836734, "obj2": 0.8614374799770227}, {"determining": "Min( ( FirstVNF_RAM * ( Min( MRS ,FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( Min( DS ,RRSe ) + ( RMSe * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.7264842213898561}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( DS / MUR ) ) ,( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6837607870776852}, {"determining": "Min( ( FirstVNF_Mem / MDR ) ,( BR + FirstVNF_RAM ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( Min( DS ,RRSe ) + ( MLU * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) )", "obj1": 0.3163265306122449, "obj2": 0.6580074807293057}, {"determining": "Min( ( ( Max( MRS,FirstVNF_RAM_Server ) / DDR ) * ( ( MRS / FirstVNF_Mem_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * CS ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.707032965203406}, {"determining": "Min( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "( ( MUC * RMSe ) / Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6076914094864522}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / Max( FirstVNF_RAM,ARS ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7800174409180105}, {"determining": "( ( Min( BR ,ARS ) - RRS ) + ( DDR - Max( MRS,( MDR + BR ) ) ) )", "choosing": "( ( MUM / RCSe ) * Max( CS,MUM ) )", "obj1": 0.3040816326530612, "obj2": 0.6762312471531089}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( ( ( MUC / DS ) * ( MUR - CS ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.3326530612244898, "obj2": 0.6404523011943748}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / DDR )", "choosing": "( Min( ( Min( MLU ,DS ) - ( DS / MUR ) ) ,( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6837607870776852}, {"determining": "Max( ( AMS * MDR ),( Const - PN ) )", "choosing": "( Max( RRSe,MLU ) / Max( MLU,DS ) )", "obj1": 0.2673469387755102, "obj2": 0.7182111895524613}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "( ( MUR / RCSe ) * ( RCSe + MUM ) )", "obj1": 0.37755102040816324, "obj2": 0.6045169920979343}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.19183673469387755, "obj2": 0.8021939163147036}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( ( MUC * MLU ) / Max( RMSe,DS ) )", "obj1": 0.20816326530612245, "obj2": 0.7802855951077933}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "Max( ( ( PN - ARS ) / MDR ),( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( ( Max( ( CS * CS ),Min( ( MUC * MLU ) ,MUR ) ) + RMSe ) * ( RMSe / DS ) ) / RCSe ) * DS )", "obj1": 0.35918367346938773, "obj2": 0.6334036144114255}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "Max( ( AMS * MDR ),( Const - MDR ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.2673469387755102, "obj2": 0.7182111895524613}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUC * MLU ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7856512491253114}, {"determining": "( Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) * ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.19183673469387755, "obj2": 0.8021939163147036}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / Max( FirstVNF_RAM,ARS ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7800174409180105}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "Min( ( FirstVNF_RAM * ( ( ( ( FirstVNF_CPU_Server / CRS ) + Const ) * ( FirstVNF_CPU_Server / CRS ) ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "( ( MUC * RMSe ) / Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUR - CS ) ) ) )", "obj1": 0.3408163265306122, "obj2": 0.6341737697629518}, {"determining": "Min( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "( ( MUC * RMSe ) / Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6076914094864522}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / Max( FirstVNF_RAM,ARS ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7800174409180105}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "Min( ( ( ( ( FirstVNF_CPU_Server + BR ) / ( AMS + MRS ) ) + MDR ) * ARS ) ,Max( ACS,RRS ) )", "choosing": "( ( ( MUC / DS ) * ( MUR - CS ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.34285714285714286, "obj2": 0.6341481387045569}, {"determining": "Min( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( Min( DS ,RRSe ) + ( MLU * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.7264842213898561}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.22244897959183674, "obj2": 0.7431682088267454}, {"determining": "Max( ( ( MDR + BR ) / ( AMS + MRS ) ),( Const - MDR ) )", "choosing": "( Max( MUC,MLU ) / ( MUC + MUC ) )", "obj1": 0.21428571428571427, "obj2": 0.7691612497296215}, {"determining": "Min( ( ( ( ( FirstVNF_CPU_Server + BR ) / ( AMS + MRS ) ) + MDR ) * ARS ) ,Max( ACS,RRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.2673469387755102, "obj2": 0.7182111895524613}, {"determining": "( ( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - ARS ) ) ) / Min( CRS ,ARS ) )", "choosing": "( ( MLU * RMSe ) / ( DS / RRSe ) )", "obj1": 0.17551020408163265, "obj2": 0.8157706088221447}, {"determining": "( ( FirstVNF_Mem_Server - ( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - ARS ) ) ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU * RMSe ) * Max( ( MUC + DS ),( RRSe - RRSe ) ) )", "obj1": 0.3877551020408163, "obj2": 0.6040699331793093}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( CRS * FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_RAM_Server ) * ( DDR - ARS ) ) ) - Min( CRS ,ARS ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( RRSe + DS ),( RRSe - RRSe ) ),Min( ( DS - MUC ) ,RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7954169110591748}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( DDR - MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) * ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.707032965203406}, {"determining": "Min( ( ( Max( MRS,FirstVNF_RAM_Server ) / DDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "( ( MUR / RCSe ) * ( RCSe + MUM ) )", "obj1": 0.37755102040816324, "obj2": 0.6045169920979343}, {"determining": "Min( ( ( Max( MRS,FirstVNF_RAM_Server ) / ACS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( DS - RRSe ),Max( MUC,MLU ) ) ),Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.707032965203406}, {"determining": "( ( Min( BR ,ARS ) - CRS ) + ( ( DDR / BR ) - Max( MRS,( MDR + BR ) ) ) )", "choosing": "( Max( Min( Min( DS ,RRSe ) ,( MLU / MUC ) ),( ( MUC / DS ) / Max( MUC,MUM ) ) ) / ( Max( Min( RRSe ,MUM ),( RMSe * DS ) ) + Min( ( MUR / RCSe ) ,( RRSe * RCSe ) ) ) )", "obj1": 0.1653061224489796, "obj2": 0.8185211711740196}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) ) ) )", "choosing": "( Max( MUC,MLU ) / Max( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUC * MLU ) ) ),DS ) )", "obj1": 0.11224489795918367, "obj2": 0.8921009607177716}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) / ( DDR + ACS ) )", "choosing": "( ( MUC * RMSe ) / Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.37551020408163266, "obj2": 0.6076914094864522}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / DDR )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * CS ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.3081632653061224, "obj2": 0.6725201307377959}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( DS / MUR ) ) ,( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.697893816629858}, {"determining": "Max( ( ( BR / AMS ) - ( Max( ( AMS * MDR ),( Const - MDR ) ) - ARS ) ),( Const - MDR ) )", "choosing": "( ( MUR / RCSe ) * ( RCSe + MUM ) )", "obj1": 0.36122448979591837, "obj2": 0.620490493958655}, {"determining": "Max( ( AMS * MDR ),( Const - MDR ) )", "choosing": "( ( MUR / RCSe ) * ( RCSe + MUM ) )", "obj1": 0.37755102040816324, "obj2": 0.6045169920979343}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / Max( FirstVNF_RAM,ARS ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( FirstVNF_Mem_Server + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7800174409180105}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( DDR - FirstVNF_RAM ) ) / Max( FirstVNF_RAM,ARS ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / BR ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Min( ( RRSe - MUC ) ,( MUM * MUR ) ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7800174409180105}, {"determining": "( ( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - ARS ) ) ) - Min( CRS ,ARS ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( DS / MUR ) ) ,( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6871547869359098}], "5": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * ( Min( MRS ,FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( Min( DS ,RRSe ) + ( RMSe * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.7264842213898561}, {"determining": "Min( ( ( Max( MRS,FirstVNF_RAM_Server ) / DDR ) * ( ( MRS / FirstVNF_Mem_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * CS ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.707032965203406}, {"determining": "Max( ( AMS * MDR ),( Const - PN ) )", "choosing": "( Max( RRSe,MLU ) / Max( MLU,DS ) )", "obj1": 0.2673469387755102, "obj2": 0.7182111895524613}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( ( MUC * MLU ) / Max( RMSe,DS ) )", "obj1": 0.20816326530612245, "obj2": 0.7802855951077933}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "Max( ( AMS * MDR ),( Const - MDR ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.2673469387755102, "obj2": 0.7182111895524613}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUC * MLU ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7856512491253114}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "Min( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( Min( DS ,RRSe ) + ( MLU * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.7264842213898561}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.22244897959183674, "obj2": 0.7431682088267454}, {"determining": "Max( ( ( MDR + BR ) / ( AMS + MRS ) ),( Const - MDR ) )", "choosing": "( Max( MUC,MLU ) / ( MUC + MUC ) )", "obj1": 0.21428571428571427, "obj2": 0.7691612497296215}, {"determining": "Min( ( ( ( ( FirstVNF_CPU_Server + BR ) / ( AMS + MRS ) ) + MDR ) * ARS ) ,Max( ACS,RRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.2673469387755102, "obj2": 0.7182111895524613}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( CRS * FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_RAM_Server ) * ( DDR - ARS ) ) ) - Min( CRS ,ARS ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( RRSe + DS ),( RRSe - RRSe ) ),Min( ( DS - MUC ) ,RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7954169110591748}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( DDR - MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) * ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.707032965203406}, {"determining": "Min( ( ( Max( MRS,FirstVNF_RAM_Server ) / ACS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( DS - RRSe ),Max( MUC,MLU ) ) ),Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.707032965203406}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( DS / MUR ) ) ,( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.27755102040816326, "obj2": 0.697893816629858}, {"determining": "( ( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - ARS ) ) ) - Min( CRS ,ARS ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( DS / MUR ) ) ,( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6871547869359098}, {"determining": "( ( ( FirstVNF_CPU_Server / CRS ) + Const ) / ( AMS - MRS ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( ( ( RCSe / MUR ) / Max( CS,MUM ) ) ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.09591836734693877, "obj2": 0.8904079837043976}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( MUC + MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / DDR )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.707032965203406}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( RMSe / DS ),MLU ) / DS )", "obj1": 0.12040816326530612, "obj2": 0.8600386305535187}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR / MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - ARS ) ) ) - Min( CRS ,ARS ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( RMSe,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7954169110591748}, {"determining": "Min( ( ( ( ( FirstVNF_CPU_Server - BR ) / ( AMS + MRS ) ) + MDR ) * ARS ) ,Max( ACS,ACS ) )", "choosing": "( Max( ( Min( MLU ,DS ) - ( MLU / MUR ) ),( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.27346938775510204, "obj2": 0.7053757194999644}, {"determining": "Min( ( FirstVNF_Mem / MDR ) ,( BR + FirstVNF_RAM ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( DS / MUR ) ) ,( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.2816326530612245, "obj2": 0.6871547869359098}, {"determining": "Min( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( ( ( FirstVNF_CPU_Server * ACS ) / ( DDR + ACS ) ) + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),Max( MUC,MLU ) ) ),Min( ( Min( DS ,RRSe ) + ( MLU * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.7264842213898561}, {"determining": "Min( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( Min( DS ,RRSe ) + ( MLU * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.7264842213898561}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8440486612949948}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( MUC,MLU ) / ( MUC + DS ) )", "obj1": 0.18775510204081633, "obj2": 0.7968122885343183}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server + BR ) / ( AMS + MRS ) ) + MDR ),( Const - MDR ) )", "choosing": "Max( Min( ( ( MUC / DS ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.2530612244897959, "obj2": 0.7341949128981067}, {"determining": "Max( ( AMS * MDR ),( Const - MDR ) )", "choosing": "( Max( MUC,MLU ) / Max( RMSe,DS ) )", "obj1": 0.20816326530612245, "obj2": 0.7802855951077933}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.2673469387755102, "obj2": 0.7182111895524613}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / Max( FirstVNF_RAM,ARS ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + Min( ( ( ( ( FirstVNF_CPU_Server + BR ) / ( AMS + MRS ) ) + MDR ) * ARS ) ,Max( ACS,RRS ) ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUR ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7778945015665951}, {"determining": "Max( ( ( BR / AMS ) - ( RRS - ARS ) ),( Const - MDR ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUC * MLU ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7947861914520037}, {"determining": "( Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) + ( ( PN - ARS ) + ( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / Max( FirstVNF_RAM,ARS ) ) + CRS ) ) )", "choosing": "( ( MUM + ( RCSe / CS ) ) - ( ( Max( ( CS * CS ),Min( ( ( MUR - CS ) * MLU ) ,MUR ) ) + RMSe ) * ( RMSe / DS ) ) )", "obj1": 0.2795918367346939, "obj2": 0.6950624546158873}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1346938775510204, "obj2": 0.851729745433102}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / CRS ) ) )", "choosing": "Max( ( MUC + MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( ( FirstVNF_Mem_Server - ( ( MDR + AMS ) * ( FirstVNF_Mem_Server - ARS ) ) ) - Min( CRS ,ARS ) )", "choosing": "( Min( ( Min( MLU ,DS ) - ( DS / MUR ) ) ,( ( RMSe / MLU ) * ( MUM - CS ) ) ) * Max( ( ( DS + MUM ) + ( DS + MUM ) ),( Min( RCSe ,MUR ) + ( MUC * RCSe ) ) ) )", "obj1": 0.2653061224489796, "obj2": 0.7200619510002663}, {"determining": "( Max( DDR,( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - DS ),( RRSe + MUM ) )", "obj1": 0.18571428571428572, "obj2": 0.8065844299557502}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / ( AMS + MRS ) ),( Const - MDR ) )", "choosing": "( Max( DS,MLU ) / ( MUC + DS ) )", "obj1": 0.21428571428571427, "obj2": 0.7691612497296215}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.2714285714285714, "obj2": 0.707032965203406}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / ( DDR + FirstVNF_RAM ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / MLU ) / RRSe ) - ( Max( MUC,MLU ) - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1653061224489796, "obj2": 0.8179859367112488}, {"determining": "Min( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( Min( DS ,RRSe ) + ( MLU * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) )", "obj1": 0.25510204081632654, "obj2": 0.7264842213898561}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( Max( MUC,RRSe ) / Max( RMSe,DS ) )", "obj1": 0.20816326530612245, "obj2": 0.7802855951077933}], "6": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( ( MUC * MLU ) / Max( RMSe,DS ) )", "obj1": 0.20816326530612245, "obj2": 0.7802855951077933}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUC * MLU ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7856512491253114}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( MUC,MLU ) / Max( MLU,DS ) )", "obj1": 0.24693877551020407, "obj2": 0.736158906670965}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.22244897959183674, "obj2": 0.7431682088267454}, {"determining": "Max( ( ( MDR + BR ) / ( AMS + MRS ) ),( Const - MDR ) )", "choosing": "( Max( MUC,MLU ) / ( MUC + MUC ) )", "obj1": 0.21428571428571427, "obj2": 0.7691612497296215}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( CRS * FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_RAM_Server ) * ( DDR - ARS ) ) ) - Min( CRS ,ARS ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( RRSe + DS ),( RRSe - RRSe ) ),Min( ( DS - MUC ) ,RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7954169110591748}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( RMSe / DS ),MLU ) / DS )", "obj1": 0.12040816326530612, "obj2": 0.8600386305535187}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR / MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server - ( ( MDR + FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server - ARS ) ) ) - Min( CRS ,ARS ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( RMSe,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7954169110591748}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8440486612949948}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( MUC,MLU ) / ( MUC + DS ) )", "obj1": 0.18775510204081633, "obj2": 0.7968122885343183}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "Max( ( AMS * MDR ),( Const - MDR ) )", "choosing": "( Max( MUC,MLU ) / Max( RMSe,DS ) )", "obj1": 0.20816326530612245, "obj2": 0.7802855951077933}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / Max( FirstVNF_RAM,ARS ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + Min( ( ( ( ( FirstVNF_CPU_Server + BR ) / ( AMS + MRS ) ) + MDR ) * ARS ) ,Max( ACS,RRS ) ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUR ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7778945015665951}, {"determining": "Max( ( ( BR / AMS ) - ( RRS - ARS ) ),( Const - MDR ) )", "choosing": "Min( ( ( ( RCSe / RMSe ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUC * MLU ) ) )", "obj1": 0.19795918367346937, "obj2": 0.7947861914520037}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1346938775510204, "obj2": 0.851729745433102}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / CRS ) ) )", "choosing": "Max( ( MUC + MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / ( AMS + MRS ) ),( Const - MDR ) )", "choosing": "( Max( DS,MLU ) / ( MUC + DS ) )", "obj1": 0.21428571428571427, "obj2": 0.7691612497296215}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / ( DDR + FirstVNF_RAM ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / MLU ) / RRSe ) - ( Max( MUC,MLU ) - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1653061224489796, "obj2": 0.8179859367112488}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( Max( MUC,RRSe ) / Max( RMSe,DS ) )", "obj1": 0.20816326530612245, "obj2": 0.7802855951077933}, {"determining": "Min( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) ,( DDR + MDR ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),DS ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8567486767968265}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8584480816058443}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8440486612949948}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server - RRS ) )", "choosing": "( Max( MUC,MLU ) / ( MUC + DS ) )", "obj1": 0.18775510204081633, "obj2": 0.7968122885343183}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.10816326530612246, "obj2": 0.8714870340752283}, {"determining": "( ( ( FirstVNF_CPU_Server / CRS ) + Const ) / ( AMS - MRS ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( ( ( RCSe / MUR ) / Max( CS,MUM ) ) ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.09387755102040816, "obj2": 0.8878397465866278}, {"determining": "Max( ( ( FirstVNF_CPU_Server + BR ) / ( AMS + MRS ) ),( Const - MDR ) )", "choosing": "( Max( MUC,MLU ) / ( MUC + DS ) )", "obj1": 0.2163265306122449, "obj2": 0.7656295552557133}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / ( DDR + MDR ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( Max( MUC,MLU ) - MUM ) ),( RRSe + MUM ) )", "obj1": 0.17755102040816326, "obj2": 0.8041027134666305}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / Max( FirstVNF_RAM,ARS ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + Min( ( ( ( ( FirstVNF_CPU_Server + BR ) / ( AMS + MRS ) ) + MDR ) * ARS ) ,Max( ACS,RRS ) ) ) * ( ( ( FirstVNF_CPU_Server / CRS ) + Const ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUR ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.21224489795918366, "obj2": 0.7778945015665951}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUC * MLU ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7856512491253114}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.10204081632653061, "obj2": 0.8796842183989738}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( Const * BR ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( Min( CS ,RRSe ) + ( RMSe * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1510204081632653, "obj2": 0.8405520308960988}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( Max( MUC,MLU ) / Max( RMSe,DS ) )", "obj1": 0.20816326530612245, "obj2": 0.7802855951077933}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MLU ) / Max( RMSe,DS ) )", "obj1": 0.20816326530612245, "obj2": 0.7802855951077933}, {"determining": "Max( ( ( ( DDR * FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) / ( Min( Const ,AMS ) / Min( ARS ,Const ) ) ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) + ( DDR / ( Max( FirstVNF_CPU,CRS ) * Max( FirstVNF_RAM,ARS ) ) ) ) * ( ( BR + Const ) * ( MDR / CRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUC * MLU ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7856512491253114}, {"determining": "Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.12857142857142856, "obj2": 0.856576957672015}, {"determining": "Min( MDR ,( DDR + MDR ) )", "choosing": "Max( ( MLU / DS ),( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) * Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8440486612949948}, {"determining": "Min( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( ( ( FirstVNF_CPU_Server * ACS ) / ( DDR + ACS ) ) + MDR ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7954169110591748}, {"determining": "Max( ( AMS * MDR ),( Const - MDR ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),RRSe ) ) )", "obj1": 0.19591836734693877, "obj2": 0.7954169110591748}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUC / MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( Max( ( Min( RCSe ,MUR ) + ( MUC * RCSe ) ),MLU ) / Max( MLU,DS ) )", "obj1": 0.24285714285714285, "obj2": 0.7413040790453429}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MLU ) / DS )", "obj1": 0.11428571428571428, "obj2": 0.8657763375054677}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( RMSe / DS ),MLU ) / DS )", "obj1": 0.12040816326530612, "obj2": 0.8600386305535187}, {"determining": "Min( ( FirstVNF_RAM * ( Min( MRS ,FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( ( ( RCSe / MUR ) / Max( CS,MUM ) ) ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.09387755102040816, "obj2": 0.8878397465866278}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( MUC + MLU ) / Max( MLU,DS ) )", "obj1": 0.22040816326530613, "obj2": 0.7620638339367142}, {"determining": "Max( ( ( FirstVNF_CPU_Server + BR ) / ( AMS + MRS ) ),( Const - MDR ) )", "choosing": "( Max( MUC,MLU ) / ( MUC + DS ) )", "obj1": 0.21428571428571427, "obj2": 0.7691612497296215}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( DDR * CRS ) )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + MUC ),( RRSe - RRSe ) ),( MUC * MLU ) ) )", "obj1": 0.20612244897959184, "obj2": 0.7856512491253114}], "7": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( RMSe / DS ),MLU ) / DS )", "obj1": 0.12040816326530612, "obj2": 0.8600386305535187}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR / MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8440486612949948}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / CRS ) ) )", "choosing": "Max( ( MUC + MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / ( DDR + FirstVNF_RAM ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / MLU ) / RRSe ) - ( Max( MUC,MLU ) - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1653061224489796, "obj2": 0.8179859367112488}, {"determining": "Min( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) ,( DDR + MDR ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),DS ) ) ) )", "obj1": 0.12653061224489795, "obj2": 0.8567486767968265}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8440486612949948}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.10816326530612246, "obj2": 0.8714870340752283}, {"determining": "( ( ( FirstVNF_CPU_Server / CRS ) + Const ) / ( AMS - MRS ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( ( ( RCSe / MUR ) / Max( CS,MUM ) ) ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.09387755102040816, "obj2": 0.8878397465866278}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / ( DDR + MDR ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( Max( MUC,MLU ) - MUM ) ),( RRSe + MUM ) )", "obj1": 0.17755102040816326, "obj2": 0.8041027134666305}, {"determining": "Min( MDR ,( DDR + MDR ) )", "choosing": "Max( ( MLU / DS ),( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) * Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8440486612949948}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUC / MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MLU ) / DS )", "obj1": 0.11428571428571428, "obj2": 0.8657763375054677}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( RMSe / DS ),MLU ) / DS )", "obj1": 0.12040816326530612, "obj2": 0.8600386305535187}, {"determining": "Min( ( FirstVNF_RAM * ( Min( MRS ,FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( ( ( RCSe / MUR ) / Max( CS,MUM ) ) ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.09387755102040816, "obj2": 0.8878397465866278}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.18775510204081633, "obj2": 0.7823296914223591}, {"determining": "Min( FirstVNF_Mem_Server ,( AMS + Max( Min( MRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,MUR ) + DS ) + MLU ) / Max( MLU,DS ) )", "obj1": 0.2755102040816326, "obj2": 0.7122850858095239}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + ( Min( ACS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( RMSe / CS ),MLU ) / DS )", "obj1": 0.12040816326530612, "obj2": 0.8600386305535187}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1816326530612245, "obj2": 0.8017327494901569}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10408163265306122, "obj2": 0.8715162369857928}, {"determining": "( ( DDR + MDR ) / ( DDR / ( DDR + MDR ) ) )", "choosing": "Max( ( ( RCSe / MUR ) - Max( CS,MUM ) ),( RRSe + MUM ) )", "obj1": 0.32653061224489793, "obj2": 0.6662589533835698}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.10816326530612246, "obj2": 0.8714870340752283}, {"determining": "( Max( ( DDR / ( Max( FirstVNF_CPU,FirstVNF_CPU ) * Max( FirstVNF_RAM,ARS ) ) ),FirstVNF_CPU_Server ) - ( ( DDR / DDR ) / ( Const * BR ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) / ( MUR - CS ) ) ) ,Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - CS ),Max( MUC,MLU ) ) ),Min( ( Min( CS ,RRSe ) + ( RMSe * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.12448979591836734, "obj2": 0.856763976013774}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( Const * BR ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Max( Min( ( Min( MLU ,MUM ) - ( MUC * RCSe ) ) ,Max( ( RMSe - RRSe ),Max( MUC,MLU ) ) ),Min( ( Min( CS ,RRSe ) + ( RMSe * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.10816326530612246, "obj2": 0.8714870340752283}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8440486612949948}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ),MLU ) / DS )", "obj1": 0.18571428571428572, "obj2": 0.8005609283324921}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( RMSe / RMSe ),MLU ) / DS )", "obj1": 0.11632653061224489, "obj2": 0.8636984217539416}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09591836734693877, "obj2": 0.877231436225299}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8457281941170129}, {"determining": "( ( ( BR - BR ) * Max( Min( DDR ,( ACS * ( BR - ( Const / FirstVNF_RAM ) ) ) ),DDR ) ) * ( ( ACS * CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,MLU ) / ( ( Min( ( RCSe + MUR ) ,RMSe ) - RCSe ) * Min( ( RMSe + RMSe ) ,MUM ) ) )", "obj1": 0.336734693877551, "obj2": 0.6627947616634892}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( MUC - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7335639014513414}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ) ) )", "choosing": "Max( Min( MUC ,MLU ),MUC )", "obj1": 0.27755102040816326, "obj2": 0.6964950023888811}, {"determining": "Max( ( ( BR / AMS ) * ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / RRSe ) / MLU ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ),( Const - MDR ) )", "choosing": "Max( ( MUC * MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( DDR + MDR ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8908875899103795}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8440486612949948}, {"determining": "Min( ( FirstVNF_CPU * MDR ) ,( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( DDR + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC / DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( MLU,DS ) )", "obj1": 0.15918367346938775, "obj2": 0.8315864900141802}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server / CRS ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.12857142857142856, "obj2": 0.8563789142167122}, {"determining": "( Min( ( FirstVNF_RAM * FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( ( MUC + MLU ) / Max( RCSe,DS ) )", "obj1": 0.2571428571428571, "obj2": 0.7234505437023221}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + MRS ) )", "choosing": "( Max( ( RMSe / DS ),Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( ( ( RCSe / MUR ) / Max( CS,MUM ) ) ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.12040816326530612, "obj2": 0.8600386305535187}, {"determining": "( ( ( FirstVNF_CPU_Server / CRS ) + Const ) / ( AMS - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUM / DS ),MLU ) / DS )", "obj1": 0.12040816326530612, "obj2": 0.8600386305535187}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,Min( FirstVNF_Mem_Server ,CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( ( ( RCSe / MUR ) / Max( CS,MUM ) ) ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( ( ( MUC + DS ) / ( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.09387755102040816, "obj2": 0.8878397465866278}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + CRS ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + MUC ),( RRSe - RRSe ) ),( MUC * MLU ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.1469387755102041, "obj2": 0.83875652158907}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + MDR ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( RRSe / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8440486612949948}, {"determining": "( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( MUR - RRSe ) ),Max( ( RRSe - RMSe ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1346938775510204, "obj2": 0.8488350491126707}, {"determining": "Max( ( AMS * MDR ),FirstVNF_RAM_Server )", "choosing": "Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - MUR ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),RRSe ) ) )", "obj1": 0.35918367346938773, "obj2": 0.6329751000237113}, {"determining": "Max( ( ( MDR + BR ) / ( AMS + MRS ) ),( Const - MDR ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.10816326530612246, "obj2": 0.8714870340752283}], "8": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR / MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / CRS ) ) )", "choosing": "Max( ( MUC + MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUC / MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.18775510204081633, "obj2": 0.7823296914223591}, {"determining": "Min( FirstVNF_Mem_Server ,( AMS + Max( Min( MRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( ( ( Min( RCSe ,MUR ) + DS ) + MLU ) / Max( MLU,DS ) )", "obj1": 0.2755102040816326, "obj2": 0.7122850858095239}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( ( Min( RCSe ,MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ),MLU ) / DS )", "obj1": 0.18571428571428572, "obj2": 0.8005609283324921}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09591836734693877, "obj2": 0.877231436225299}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.13673469387755102, "obj2": 0.8457281941170129}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( MUC - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7335639014513414}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ) ) )", "choosing": "Max( Min( MUC ,MLU ),MUC )", "obj1": 0.27755102040816326, "obj2": 0.6964950023888811}, {"determining": "Max( ( ( BR / AMS ) * ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / RRSe ) / MLU ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ),( Const - MDR ) )", "choosing": "Max( ( MUC * MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( Min( ( FirstVNF_RAM * FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( ( MUC + MLU ) / Max( RCSe,DS ) )", "obj1": 0.2571428571428571, "obj2": 0.7234505437023221}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + CRS ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + MUC ),( RRSe - RRSe ) ),( MUC * MLU ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.1469387755102041, "obj2": 0.83875652158907}, {"determining": "( Max( FirstVNF_CPU_Server,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( MUR - RRSe ) ),Max( ( RRSe - RMSe ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1346938775510204, "obj2": 0.8488350491126707}, {"determining": "( Min( Min( ACS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( ( Max( ( RMSe / DS ),MLU ) / DS ) / DS )", "obj1": 0.11836734693877551, "obj2": 0.8597941518338991}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / CRS ) ) ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( ( ( ( MUC / DS ) / RRSe ) + RCSe ) - MUM ) ),( RRSe + MUM ) )", "obj1": 0.29183673469387755, "obj2": 0.6903896837057995}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( ( MUC + MLU ) / Max( MLU,DS ) )", "obj1": 0.2571428571428571, "obj2": 0.7234505437023221}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / ( DDR + MDR ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( MUR - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1346938775510204, "obj2": 0.8488350491126707}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + ARS ) )", "choosing": "Max( Min( ( Min( CS ,RRSe ) + ( RMSe * CS ) ) ,( Min( RCSe ,RMSe ) - ( RMSe / MUC ) ) ),( RRSe + MUM ) )", "obj1": 0.3142857142857143, "obj2": 0.6718210173449418}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Min( RCSe ,MUR ) + DS ),MLU ) / Max( MLU,DS ) )", "obj1": 0.2755102040816326, "obj2": 0.7122850858095239}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,AMS )", "choosing": "( Max( ( MUC / DS ),Max( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ),Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,( ( MUC + MLU ) / Max( RCSe,DS ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8120175301010478}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( MUR - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1346938775510204, "obj2": 0.8488350491126707}, {"determining": "Min( ( FirstVNF_RAM * ( Min( MRS ,FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MUC ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( ( FirstVNF_RAM * MDR ) ,( RRS / Min( FirstVNF_RAM_Server ,( DDR + MDR ) ) ) ) ) )", "choosing": "Max( ( ( ( ( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) / ( RCSe / CS ) ) / DS ) / RRSe ) + ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.3081632653061224, "obj2": 0.6834967335385634}, {"determining": "( ( DDR + MDR ) / ( DDR / ( ( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + MRS ) ) + MDR ) ) )", "choosing": "Max( ( ( RCSe / MUR ) - Max( CS,MUM ) ),( Min( ( ( RCSe / MUR ) / Max( CS,MUM ) ) ,( ( MUC / DS ) * ( MUR - CS ) ) ) + MUM ) )", "obj1": 0.3224489795918367, "obj2": 0.651021682804082}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_CPU + DDR ) ) / ( DDR / ( DDR + MDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( Max( MUC,MLU ) - MUM ) ),( RRSe + MUM ) ) / Max( MLU,DS ) )", "obj1": 0.17346938775510204, "obj2": 0.8013064746198277}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR - ( DDR + MDR ) ) )", "choosing": "( Max( ( ( RCSe - MUR ) + DS ),MLU ) / Max( MLU,DS ) )", "obj1": 0.2979591836734694, "obj2": 0.6887041953058773}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09591836734693877, "obj2": 0.877231436225299}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.14081632653061224, "obj2": 0.8445306270838445}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "Min( MDR ,( DDR + MDR ) )", "choosing": "Max( ( Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) ) / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.14285714285714285, "obj2": 0.8429684855378667}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + Min( FirstVNF_RAM_Server ,( DDR + MDR ) ) ) )", "choosing": "Max( ( ( ( ( DS - MUC ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.3448979591836735, "obj2": 0.6396109533261749}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / RMSe ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + MDR ) ) ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( MUC ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.09183673469387756, "obj2": 0.8857185573357397}, {"determining": "Min( FirstVNF_Mem_Server ,( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( Min( RCSe ,MUR ) + DS ),MLU ) / Max( MLU,DS ) )", "obj1": 0.27346938775510204, "obj2": 0.7137229425095505}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.18775510204081633, "obj2": 0.7823296914223591}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ),( Const - MDR ) )", "choosing": "Max( ( MUC * MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.1326530612244898, "obj2": 0.8522267570641757}, {"determining": "( Min( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ),MLU ) / DS )", "obj1": 0.18571428571428572, "obj2": 0.8005609283324921}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( ARS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC - DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8538430608542869}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + ( RMSe / DS ) ) )", "obj1": 0.18979591836734694, "obj2": 0.7619990494718075}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.15306122448979592, "obj2": 0.83252015664358}], "9": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR / MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09591836734693877, "obj2": 0.877231436225299}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( MUC - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7335639014513414}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ) ) )", "choosing": "Max( Min( MUC ,MLU ),MUC )", "obj1": 0.27755102040816326, "obj2": 0.6964950023888811}, {"determining": "( Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / CRS ) ) ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( ( ( ( MUC / DS ) / RRSe ) + RCSe ) - MUM ) ),( RRSe + MUM ) )", "obj1": 0.29183673469387755, "obj2": 0.6903896837057995}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,AMS )", "choosing": "( Max( ( MUC / DS ),Max( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ),Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,( ( MUC + MLU ) / Max( RCSe,DS ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8120175301010478}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( ( DDR + MDR ) / ( DDR / ( ( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + MRS ) ) + MDR ) ) )", "choosing": "Max( ( ( RCSe / MUR ) - Max( CS,MUM ) ),( Min( ( ( RCSe / MUR ) / Max( CS,MUM ) ) ,( ( MUC / DS ) * ( MUR - CS ) ) ) + MUM ) )", "obj1": 0.3224489795918367, "obj2": 0.651021682804082}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_CPU + DDR ) ) / ( DDR / ( DDR + MDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( Max( MUC,MLU ) - MUM ) ),( RRSe + MUM ) ) / Max( MLU,DS ) )", "obj1": 0.17346938775510204, "obj2": 0.8013064746198277}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR - ( DDR + MDR ) ) )", "choosing": "( Max( ( ( RCSe - MUR ) + DS ),MLU ) / Max( MLU,DS ) )", "obj1": 0.2979591836734694, "obj2": 0.6887041953058773}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09591836734693877, "obj2": 0.877231436225299}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / RMSe ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + MDR ) ) ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( MUC ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.09183673469387756, "obj2": 0.8857185573357397}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( ARS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC - DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR - MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RRSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( MUC + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_Mem_Server ,( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( ( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) ) + DDR ) ) ) )", "choosing": "( Max( ( Min( RCSe ,MUR ) + DS ),MLU ) / Min( Min( ( ( ( RCSe / MUR ) / Max( MUC,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( MUR - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ) )", "obj1": 0.3448979591836735, "obj2": 0.624164710908731}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU_Server,( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) ) ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( MUR - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( Min( RCSe ,MUR ) + DS ) )", "obj1": 0.38571428571428573, "obj2": 0.6011023117171478}, {"determining": "( Max( ( Min( Min( Min( ( Max( ARS,Const ) / Min( CRS ,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server / MDR ) + ( Const - MRS ) ) ) ,( ( Max( BR,PN ) + ( FirstVNF_CPU_Server + AMS ) ) - ( ( Const * AMS ) * ( MRS + AMS ) ) ) ) ,Min( Max( ( ( CRS / ACS ) / ( ARS * RRS ) ),( Max( ACS,CRS ) - ( MDR / FirstVNF_CPU_Server ) ) ) ,( ( ( BR + FirstVNF_CPU ) - ( FirstVNF_Mem_Server + ACS ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( Const / ARS ) ) ) ) ) * ( Max( ( ( ( AMS + PN ) - ( FirstVNF_Mem_Server * MDR ) ) * ( Min( FirstVNF_Mem_Server ,MRS ) - Min( MDR ,FirstVNF_CPU ) ) ),( ( ( CRS - CRS ) * ( Const + Const ) ) / ( ( PN / FirstVNF_RAM_Server ) - ( Const - ACS ) ) ) ) / ( ( ( Max( RRS,MDR ) - ( Const + CRS ) ) + Min( Min( FirstVNF_CPU_Server ,ARS ) ,Max( DDR,DDR ) ) ) + ( ( ( FirstVNF_CPU * MDR ) / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) + ( ( PN / FirstVNF_Mem_Server ) - ( MRS / PN ) ) ) ) ) ),( ( ( Max( ( Max( AMS,BR ) / Max( FirstVNF_RAM,BR ) ),( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( Const / RRS ) ) ) - ( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) / ( DDR + BR ) ) / ( Min( ACS ,FirstVNF_RAM_Server ) * ( RRS - ACS ) ) ) ) / Min( ( ( Max( DDR,ACS ) - ( CRS + ARS ) ) / Min( ( PN + ACS ) ,( FirstVNF_Mem - RRS ) ) ) ,( ( ( AMS / AMS ) - Min( RRS ,FirstVNF_RAM ) ) - ( ( DDR / CRS ) / ( BR + ARS ) ) ) ) ) + Max( ( ( ( Min( MRS ,FirstVNF_CPU_Server ) - ( AMS + ACS ) ) - Min( ( Const + ARS ) ,Max( FirstVNF_Mem,ARS ) ) ) * ( Max( ( FirstVNF_Mem_Server - BR ),( FirstVNF_RAM_Server / FirstVNF_Mem ) ) + Min( ( MDR / FirstVNF_CPU ) ,( FirstVNF_CPU / FirstVNF_Mem ) ) ) ),( ( ( Min( MDR ,FirstVNF_RAM ) + ( AMS + ARS ) ) / Max( ( FirstVNF_RAM * PN ),Max( FirstVNF_CPU_Server,PN ) ) ) / Max( ( ( FirstVNF_Mem_Server / CRS ) + ( PN - PN ) ),( ( AMS * MRS ) + Max( Const,DDR ) ) ) ) ) ) ) - ( Min( ( ( ( ( ( FirstVNF_Mem * FirstVNF_RAM ) - Max( AMS,AMS ) ) - ( Max( PN,FirstVNF_RAM ) + Min( BR ,FirstVNF_CPU_Server ) ) ) * ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),Max( Const,RRS ) ) / ( ( FirstVNF_CPU_Server * MRS ) - Min( PN ,DDR ) ) ) ) + Min( ( Max( Max( FirstVNF_Mem,MRS ),( ACS * FirstVNF_Mem_Server ) ) - ( Max( MRS,Const ) + ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ,( ( ( AMS - RRS ) - ( FirstVNF_Mem / FirstVNF_Mem ) ) * ( Max( MDR,MDR ) * ( MRS + ARS ) ) ) ) ) ,( Min( ( ( ( BR - BR ) + ( FirstVNF_Mem * MDR ) ) / ( ( AMS * FirstVNF_CPU ) / Max( MRS,AMS ) ) ) ,Max( Max( ( AMS + RRS ),( PN - FirstVNF_Mem ) ),( Max( AMS,FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ) - ( ( Min( ( CRS + FirstVNF_RAM ) ,( DDR * FirstVNF_RAM_Server ) ) + ( Min( MDR ,FirstVNF_Mem_Server ) - Min( DDR ,Const ) ) ) / ( Min( ( RRS / FirstVNF_Mem_Server ) ,( ACS - DDR ) ) - ( ( DDR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server - CRS ) ) ) ) ) ) - ( ( ( ( ( ( ACS + MDR ) - Max( RRS,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_RAM_Server ) ,( RRS / FirstVNF_RAM_Server ) ) ) * ( ( ( Const / RRS ) * ( ARS - PN ) ) * Max( Min( FirstVNF_Mem_Server ,RRS ),Max( CRS,MDR ) ) ) ) + ( ( ( Max( PN,ACS ) - ( FirstVNF_Mem / CRS ) ) * ( ( FirstVNF_CPU * DDR ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_RAM ,DDR ) - Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ,( ( RRS + MDR ) / ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ) ) - Min( ( ( Max( ( FirstVNF_RAM * DDR ),Min( FirstVNF_Mem ,FirstVNF_CPU ) ) - ( ( MDR / AMS ) - ( Const / DDR ) ) ) - ( Max( ( Const - PN ),( FirstVNF_RAM - FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU_Server - MRS ) ,Min( ACS ,PN ) ) ) ) ,( ( ( ( CRS / DDR ) + Min( Const ,ACS ) ) * Min( ( ARS * FirstVNF_CPU ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) + ( ( Max( MDR,CRS ) / ( MRS + ARS ) ) / ( Max( ACS,Const ) * Min( Const ,RRS ) ) ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( Max( RRSe,MUM ) * Min( RRSe ,DS ) ) / ( Min( MUR ,RRSe ) - Min( RMSe ,MUC ) ) ) / Max( Max( Max( RRSe,CS ),( MUM - MUM ) ),Min( ( MUM / MLU ) ,( DS - RRSe ) ) ) ) / Max( ( ( Min( RMSe ,MLU ) / Max( MUM,MUC ) ) + ( ( CS * CS ) + ( MUC - RMSe ) ) ),( ( ( DS * RMSe ) * Max( RRSe,MLU ) ) / ( ( RCSe - MUC ) + ( RMSe - RRSe ) ) ) ) ) / Min( Min( Max( ( Max( RRSe,MLU ) * Min( MUR ,MUR ) ),Min( Min( RMSe ,DS ) ,( MUR + DS ) ) ) ,( ( Max( RMSe,RCSe ) / ( MUR - MUR ) ) + ( ( MLU / MUM ) / ( MLU - RMSe ) ) ) ) ,Min( Max( ( ( CS * MUR ) * ( RMSe + MUM ) ),( Min( MUC ,DS ) / ( CS * MLU ) ) ) ,( ( Min( DS ,MUC ) - ( MUC * DS ) ) + ( ( RRSe / MLU ) + Min( RRSe ,MUC ) ) ) ) ) ),( Max( Max( Min( ( ( MUM - MUR ) - Min( CS ,MUM ) ) ,( Min( MLU ,MUM ) / ( MUC - RCSe ) ) ),( ( Min( DS ,DS ) / Min( RMSe ,DS ) ) / ( Min( DS ,MLU ) + Min( MLU ,MUC ) ) ) ),Min( Max( ( ( MUM / CS ) / ( MUR * MUM ) ),( ( RCSe / RRSe ) * ( MUR / MUR ) ) ) ,( Max( Min( MUC ,RMSe ),( MUM + RRSe ) ) - ( ( MLU / RRSe ) / ( RMSe / MLU ) ) ) ) ) / Max( ( ( ( ( MUR / MUC ) / ( RRSe + RCSe ) ) / Min( ( DS / DS ) ,Max( DS,RMSe ) ) ) + ( ( ( CS / MUR ) + Min( CS ,RCSe ) ) - Min( Min( MUC ,DS ) ,( RRSe + RMSe ) ) ) ),( ( Max( Min( MUC ,MLU ),( CS + MUR ) ) * ( ( MUR + RCSe ) / ( RCSe / DS ) ) ) - ( Max( ( MUR / MUM ),( DS * MUM ) ) * ( ( MUM * RRSe ) - ( MUR + CS ) ) ) ) ) ) ) - Min( ( Max( ( ( ( ( RRSe / RCSe ) - ( RCSe - RMSe ) ) * ( Min( MUM ,RCSe ) / ( DS + RCSe ) ) ) - Min( ( ( MLU / MUC ) / Max( MLU,RMSe ) ) ,( ( RCSe / MUR ) - Min( MUR ,MUC ) ) ) ),( Min( ( ( MLU * MUR ) + ( MUM * RRSe ) ) ,( ( MUC + MUM ) * ( RRSe - DS ) ) ) / Min( ( ( MUC * MUR ) + ( RRSe + MUC ) ) ,( ( RCSe + MLU ) - Max( RRSe,RMSe ) ) ) ) ) / Max( ( Max( ( Max( MLU,MLU ) / Min( MUC ,MUR ) ),Min( ( RRSe - RCSe ) ,( RRSe / MUM ) ) ) / ( Min( Max( MUR,MUM ) ,( CS - RRSe ) ) / ( Max( RMSe,MLU ) - ( MLU + MUR ) ) ) ),( Min( Max( Max( CS,RRSe ),( DS * RMSe ) ) ,Max( ( MUR - MUC ),Max( MLU,RMSe ) ) ) + Min( Max( ( MUM - MUM ),( CS + MLU ) ) ,( ( RRSe / MUR ) + ( MUR * RRSe ) ) ) ) ) ) ,( ( ( ( ( Min( CS ,MUR ) * ( MUC / MUC ) ) + ( ( CS - MUC ) / ( MUM / MUC ) ) ) + ( ( ( MUR - MLU ) - ( MUM / RRSe ) ) - ( Min( CS ,CS ) + Min( RCSe ,CS ) ) ) ) / Max( ( ( ( RMSe * MLU ) * ( MUR + RMSe ) ) + ( Max( CS,RMSe ) - ( MUC * MLU ) ) ),( Min( ( MUR / MUR ) ,Max( MUM,MUM ) ) * ( ( RCSe + MLU ) + ( RCSe / MLU ) ) ) ) ) * ( ( Min( Min( ( CS - MUM ) ,( MUM - MUM ) ) ,( ( RRSe / DS ) / ( MLU - CS ) ) ) - ( Max( ( RCSe * MUM ),Min( MUR ,MUM ) ) + ( ( MUM - DS ) / ( CS / MUR ) ) ) ) / Max( ( Min( ( DS * MUM ) ,( RCSe - RCSe ) ) / ( ( MUC + RRSe ) * Min( MLU ,CS ) ) ),( ( ( MUC - MUR ) * ( MUC / CS ) ) - Max( ( MLU - RRSe ),Max( MUM,MLU ) ) ) ) ) ) ) )", "obj1": 0.2897959183673469, "obj2": 0.6907682310774625}, {"determining": "( Min( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Min( ( FirstVNF_RAM * ( Min( MRS ,FirstVNF_RAM_Server ) * ( Const * BR ) ) ) ,( DDR + MDR ) ) ) )", "choosing": "( Max( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( MUC ,MLU ) ),MLU ) / DS )", "obj1": 0.12244897959183673, "obj2": 0.8490378958103885}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.16938775510204082, "obj2": 0.8044436484815601}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - ( ( RRS / ( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) ) ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( MUR - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( RMSe * MUC ) / Max( MUM,MLU ) ) )", "obj1": 0.8326530612244898, "obj2": 0.23571682442328779}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( MUR - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.17551020408163265, "obj2": 0.7805277170935063}, {"determining": "Min( Const ,( DDR + MDR ) )", "choosing": "Max( ( ( ( Max( ( Min( RCSe ,MUR ) + DS ),MLU ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RMSe + MUM ) )", "obj1": 0.13673469387755102, "obj2": 0.8361940976555974}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / MDR )", "choosing": "( Max( ( Min( RCSe ,MUR ) + DS ),MLU ) / Max( Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) ),DS ) )", "obj1": 0.37551020408163266, "obj2": 0.6014386311438447}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / ( DDR + MDR ) ) )", "choosing": "( Max( ( Min( RCSe ,MUR ) + DS ),MLU ) / Max( MLU,DS ) )", "obj1": 0.2979591836734694, "obj2": 0.6887041953058773}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( MRS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR + MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.42244897959183675, "obj2": 0.5063087228476711}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11836734693877551, "obj2": 0.8505462680044463}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Max( Min( ( MLU + MUM ) ,( RRSe / CS ) ),Min( ( ( ( RCSe / MUR ) - Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + MUC ),( RRSe - RRSe ) ),( MUC * MLU ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.3183673469387755, "obj2": 0.6581746885392611}, {"determining": "( Max( MRS,Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.12653061224489795, "obj2": 0.8421444048520806}, {"determining": "Min( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) ,AMS )", "choosing": "( Max( ( MUC / DS ),Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,( ( MUC + MLU ) / Max( RCSe,( Max( ( Min( RCSe ,MUR ) + DS ),MLU ) / Max( MLU,DS ) ) ) ) ) )", "obj1": 0.1469387755102041, "obj2": 0.8277962377364629}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / DS ),Max( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ),Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,( ( ( ( ( MUC / DS ) / RRSe ) + RCSe ) + MLU ) / Max( RCSe,DS ) ) ) )", "obj1": 0.6489795918367347, "obj2": 0.35739069768892573}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( ( ( ( MUC / DS ) / RRSe ) + RCSe ) - MUM ) ),( RRSe + MUM ) )", "obj1": 0.2857142857142857, "obj2": 0.6931393925736187}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + MDR ) ) ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( MUC ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.08979591836734693, "obj2": 0.891773100099727}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( ( DDR + MDR ) / ( DDR / ( ( Min( ( ( DDR / FirstVNF_RAM_Server ) * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + MRS ) ) + MDR ) ) )", "choosing": "Max( ( ( RCSe / MUR ) - Max( CS,MUM ) ),( Min( ( ( RCSe / MUR ) / Max( CS,MUM ) ) ,( ( Min( RCSe ,MUR ) + DS ) * ( MUR - CS ) ) ) + MUM ) )", "obj1": 0.33877551020408164, "obj2": 0.6291070716242858}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( RCSe / MUR ) - Max( CS,MUM ) ),( Min( ( ( RCSe / MUR ) / Max( CS,MUM ) ) ,( ( MUC * DS ) * ( MUR - CS ) ) ) + MUM ) )", "obj1": 0.336734693877551, "obj2": 0.6378848115900451}, {"determining": "( Max( CRS,Max( Const,ACS ) ) + ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) )", "choosing": "Min( Max( ( ( Max( ( ( RRSe * CS ) + CS ),MLU ) - DS ) * DS ),DS ) ,( RMSe / RMSe ) )", "obj1": 0.4857142857142857, "obj2": 0.5015992245066744}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "Max( ( ( RCSe / MUR ) - Max( CS,MUM ) ),( Min( ( ( RCSe / MUR ) / Max( CS,MUM ) ) ,( ( MUC / DS ) * ( MUR - CS ) ) ) + MUM ) )", "obj1": 0.3040816326530612, "obj2": 0.6665916891858095}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / ( DDR + MDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( Max( MUC,MLU ) - MUM ) ),( RRSe + MUM ) ) / Max( MLU,DS ) )", "obj1": 0.17346938775510204, "obj2": 0.8013064746198277}, {"determining": "( Max( Min( ARS ,FirstVNF_Mem_Server ),( MDR + FirstVNF_Mem ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,( ( MUC - DS ) / RRSe ) ) / ( MUC + CS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + ( RMSe / DS ) ) )", "obj1": 0.24081632653061225, "obj2": 0.6991780424581134}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.18571428571428572, "obj2": 0.7545530076886549}], "10": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR / MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09591836734693877, "obj2": 0.877231436225299}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( MUC - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7335639014513414}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( ( FirstVNF_RAM + MDR ) ,AMS )", "choosing": "( Max( ( MUC / DS ),Max( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ),Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,( ( MUC + MLU ) / Max( RCSe,DS ) ) ) )", "obj1": 0.15714285714285714, "obj2": 0.8120175301010478}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_CPU + DDR ) ) / ( DDR / ( DDR + MDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( Max( MUC,MLU ) - MUM ) ),( RRSe + MUM ) ) / Max( MLU,DS ) )", "obj1": 0.17346938775510204, "obj2": 0.8013064746198277}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09591836734693877, "obj2": 0.877231436225299}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / RMSe ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + MDR ) ) ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( MUC ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.09183673469387756, "obj2": 0.8857185573357397}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( ARS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC - DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR - MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RRSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( MUC + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.16938775510204082, "obj2": 0.8044436484815601}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( MUR - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.17551020408163265, "obj2": 0.7805277170935063}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( Max( MRS,Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.12653061224489795, "obj2": 0.8421444048520806}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + MDR ) ) ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( MUC ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.08979591836734693, "obj2": 0.891773100099727}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / ( DDR + MDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( Max( MUC,MLU ) - MUM ) ),( RRSe + MUM ) ) / Max( MLU,DS ) )", "obj1": 0.17346938775510204, "obj2": 0.8013064746198277}, {"determining": "( Max( Min( ARS ,FirstVNF_Mem_Server ),( MDR + FirstVNF_Mem ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,( ( MUC - DS ) / RRSe ) ) / ( MUC + CS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.18571428571428572, "obj2": 0.7545530076886549}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( Const / ( DDR + MDR ) ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe / MUM ) )", "obj1": 0.16938775510204082, "obj2": 0.8044436484815601}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "( Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( Max( MUC,MLU ) - MUM ) ),( RRSe + MUM ) ) / Max( MLU,DS ) )", "obj1": 0.17346938775510204, "obj2": 0.8013064746198277}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( MUR - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.17551020408163265, "obj2": 0.7805277170935063}, {"determining": "( Min( FirstVNF_CPU_Server ,ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - Max( MRS,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) * Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.1469387755102041, "obj2": 0.815884422115043}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + ( ( RRS / DDR ) / ( DDR / CRS ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.11632653061224489, "obj2": 0.8452404774236784}, {"determining": "( ( FirstVNF_CPU_Server * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - ( ( RRS / DDR ) / ( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) * ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( Max( MRS,CRS ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC * ( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + MRS ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( MUC ,( ( MUC / ( MUC / DS ) ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.08163265306122448, "obj2": 0.9009566428152009}, {"determining": "Max( ( ( CRS / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / Min( ( MUC / DS ) ,( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09591836734693877, "obj2": 0.877231436225299}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.16938775510204082, "obj2": 0.8044436484815601}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "Min( FirstVNF_RAM ,( DDR + MDR ) )", "choosing": "Max( ( ( ( Max( ( Min( RCSe ,MUR ) + ( ( MUR - RMSe ) * Max( RRSe,MUC ) ) ),MLU ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RMSe + MUM ) )", "obj1": 0.13673469387755102, "obj2": 0.8274710303363819}, {"determining": "( Min( FirstVNF_RAM_Server ,( DDR + MDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.17142857142857143, "obj2": 0.8036592282074236}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR / MDR ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - Min( MUR ,MUM ) ),( RRSe + MUM ) )", "obj1": 0.1673469387755102, "obj2": 0.8083958632334587}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) - RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "Max( ( ( BR / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( MUC ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.09183673469387756, "obj2": 0.8857185573357397}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + MDR ) ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.16938775510204082, "obj2": 0.8044436484815601}], "11": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09591836734693877, "obj2": 0.877231436225299}, {"determining": "( ( FirstVNF_CPU_Server * ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( MUC - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7335639014513414}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09591836734693877, "obj2": 0.877231436225299}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( ARS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC - DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( Max( MRS,Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.12653061224489795, "obj2": 0.8421444048520806}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + MDR ) ) ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( MUC ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.08979591836734693, "obj2": 0.891773100099727}, {"determining": "( Max( Min( ARS ,FirstVNF_Mem_Server ),( MDR + FirstVNF_Mem ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,( ( MUC - DS ) / RRSe ) ) / ( MUC + CS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.18571428571428572, "obj2": 0.7545530076886549}, {"determining": "( Min( FirstVNF_CPU_Server ,ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - Max( MRS,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) * Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.1469387755102041, "obj2": 0.815884422115043}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + ( ( RRS / DDR ) / ( DDR / CRS ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.11632653061224489, "obj2": 0.8452404774236784}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( Max( MRS,CRS ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC * ( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + MRS ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( MUC ,( ( MUC / ( MUC / DS ) ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.08163265306122448, "obj2": 0.9009566428152009}, {"determining": "Max( ( ( CRS / AMS ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / Min( ( MUC / DS ) ,( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09591836734693877, "obj2": 0.877231436225299}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "Min( FirstVNF_RAM ,( DDR + MDR ) )", "choosing": "Max( ( ( ( Max( ( Min( RCSe ,MUR ) + ( ( MUR - RMSe ) * Max( RRSe,MUC ) ) ),MLU ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RMSe + MUM ) )", "obj1": 0.13673469387755102, "obj2": 0.8274710303363819}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) - RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "Max( Min( Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( MUR - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ,MLU ),( ( ( MUC / DS ) / RRSe ) + RCSe ) )", "obj1": 0.14285714285714285, "obj2": 0.8274325993803848}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - Max( MRS,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.1510204081632653, "obj2": 0.8119949404434246}, {"determining": "( ( ( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) ) - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8826821931481211}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.18571428571428572, "obj2": 0.7545530076886549}, {"determining": "Min( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS + FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( ( RMSe / MUC ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( Max( ( MUC / DS ),( RRSe - RRSe ) ) + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09591836734693877, "obj2": 0.877231436225299}, {"determining": "Min( ( Max( AMS,Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ,( DDR + MDR ) )", "choosing": "Max( ( ( ( ( ( Max( MUC,DS ) * ( MUR - CS ) ) / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.3183673469387755, "obj2": 0.6696173658153572}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + ( DDR + MDR ) ) - FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.17142857142857143, "obj2": 0.7705598018264636}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + FirstVNF_RAM ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MLU * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "Min( FirstVNF_RAM ,( DDR + MDR ) )", "choosing": "Max( ( ( ( Max( ( Min( RCSe ,MUR ) + ( ( MUR - RMSe ) * Max( RRSe,MUC ) ) ),MLU ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RMSe + MUM ) )", "obj1": 0.13673469387755102, "obj2": 0.8274710303363819}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "( ( FirstVNF_CPU - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - Max( MRS,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUC / DS ),( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) * Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.1510204081632653, "obj2": 0.8119949404434246}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7335639014513414}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.22653061224489796, "obj2": 0.702735005276799}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( AMS - ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUR - MUM ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.15918367346938775, "obj2": 0.7844163043411396}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / ( MUC + DS ) )", "obj1": 0.12653061224489795, "obj2": 0.8421444048520806}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,( ARS - FirstVNF_RAM ) )", "choosing": "( ( MUR - RMSe ) * Max( RRSe,MUC ) )", "obj1": 0.29591836734693877, "obj2": 0.6887510881494653}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( Min( FirstVNF_RAM_Server ,( DDR + MDR ) ) + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( ( ( MUM / ( RCSe / CS ) ) / DS ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.18979591836734694, "obj2": 0.7543162467601112}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ) )", "choosing": "Max( ( ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RRSe + MUM ) )", "obj1": 0.22653061224489796, "obj2": 0.702735005276799}, {"determining": "Min( FirstVNF_RAM ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( ( ( Min( RCSe ,MUR ) + ( ( MUR - RMSe ) * Max( RRSe,MUC ) ) ) - MLU ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RMSe + MUM ) )", "obj1": 0.13673469387755102, "obj2": 0.8274710303363819}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "Max( ( ( ( Max( ( Min( RCSe ,MUR ) + ( ( MUR - RMSe ) * Max( RRSe,MUC ) ) ),MLU ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RMSe + MUM ) )", "obj1": 0.13673469387755102, "obj2": 0.8274710303363819}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUM / ( RCSe / CS ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_CPU + DDR ) ) / ( DDR / ( DDR + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Min( ( ( ( MUR / RRSe ) * ( MUR * DS ) ) / Max( ( CS + MUR ),Min( RMSe ,MUM ) ) ) ,( ( ( CS - RCSe ) - Max( MLU,RCSe ) ) - ( Max( MUC,DS ) - ( CS + DS ) ) ) ) / ( Max( ( ( RCSe - RCSe ) - ( CS - RCSe ) ),( Max( RRSe,RMSe ) * ( RRSe - MUR ) ) ) + Max( ( ( RRSe + MUR ) / ( MUM / MUR ) ),( ( RRSe + RRSe ) / ( DS + RMSe ) ) ) ) ) / ( Min( ( ( ( MUR * MLU ) + ( RRSe - RMSe ) ) / ( ( RMSe * DS ) - Min( MLU ,RRSe ) ) ) ,( Max( Min( RCSe ,RCSe ),( CS * RCSe ) ) * ( ( RRSe - MLU ) - ( MUC + MUR ) ) ) ) - ( Min( Min( Min( RCSe ,MUR ) ,( RMSe * DS ) ) ,( ( MUM / RMSe ) * ( MUR / MLU ) ) ) + Min( ( Max( RMSe,RMSe ) * ( DS * CS ) ) ,Max( ( MUM / CS ),Max( MUM,RRSe ) ) ) ) ) ) - Max( ( Min( ( ( Min( MUR ,MUC ) - Max( RRSe,CS ) ) - ( ( RCSe * CS ) - Min( RCSe ,RCSe ) ) ) ,Min( ( ( DS - MUC ) - ( MUR / MLU ) ) ,( Max( MLU,RRSe ) / ( MUR * MUC ) ) ) ) / ( ( Max( Min( DS ,MUR ),( MLU - DS ) ) * Min( ( MLU + MUM ) ,( RRSe / CS ) ) ) / ( Min( ( RMSe * RRSe ) ,( RCSe + RCSe ) ) * ( Min( CS ,DS ) + ( RMSe - RRSe ) ) ) ) ),( ( ( ( Max( MUM,MUR ) / Max( RCSe,RRSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) * ( ( ( MUR * MUR ) + ( MUC + RMSe ) ) / ( Max( MUC,MUC ) - Max( CS,MLU ) ) ) ) * ( Max( ( ( RMSe * MUC ) / Max( MUM,MLU ) ),( Max( CS,MUR ) / Min( MUM ,RCSe ) ) ) - ( ( ( RCSe - RMSe ) * ( MUR / RMSe ) ) - ( Min( MUC ,RRSe ) - ( RMSe + CS ) ) ) ) ) ) ) + ( Max( ( Max( Min( ( ( MLU / MLU ) + ( DS - CS ) ) ,Max( Min( DS ,MUC ),Min( RMSe ,RCSe ) ) ),( ( Max( RMSe,RMSe ) * ( CS / DS ) ) - ( ( RRSe * MUR ) + ( DS + DS ) ) ) ) - ( ( ( Max( CS,CS ) + ( DS * RRSe ) ) / ( ( RMSe - RMSe ) + Max( MUR,MLU ) ) ) / Max( ( ( MUC * CS ) / Max( MLU,RRSe ) ),( Min( MUM ,MUM ) - Min( RMSe ,MUR ) ) ) ) ),( ( ( ( ( CS - MUR ) - ( RRSe + CS ) ) / ( ( MUC - RRSe ) + ( RRSe * RRSe ) ) ) / Min( Max( Min( RCSe ,RMSe ),( RCSe + RCSe ) ) ,( ( MUM / CS ) / ( CS / RCSe ) ) ) ) + ( ( ( ( MUR + CS ) - Min( MUM ,DS ) ) + ( Max( MUC,RRSe ) * ( RCSe / MLU ) ) ) - ( ( Max( MUM,RCSe ) / ( RCSe * MUM ) ) + ( Min( CS ,RRSe ) + Max( MUR,RCSe ) ) ) ) ) ) + Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) )", "obj1": 0.20816326530612245, "obj2": 0.7335639014513414}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( BR + MRS ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( MUC ,( MUM * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.08571428571428572, "obj2": 0.8979861613540725}, {"determining": "Max( ( ( BR / ( Min( ( FirstVNF_RAM + MDR ) ,( FirstVNF_Mem_Server * CRS ) ) / ( AMS + MRS ) ) ) - ( FirstVNF_CPU_Server - ARS ) ),( Const - MDR ) )", "choosing": "Max( MUR,( RRSe + MUC ) )", "obj1": 0.3326530612244898, "obj2": 0.6529628734895814}, {"determining": "( Min( ( FirstVNF_RAM * MDR ) ,( PN * CRS ) ) / ( AMS + MRS ) )", "choosing": "( Min( CS ,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( MUC ,( ( MUC / ( MUC / DS ) ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.08163265306122448, "obj2": 0.9009566428152009}], "12": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( ARS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC - DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( Max( Min( ARS ,FirstVNF_Mem_Server ),( MDR + FirstVNF_Mem ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,( ( MUC - DS ) / RRSe ) ) / ( MUC + CS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + ( ( RRS / DDR ) / ( DDR / CRS ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( ( MUM / ( RCSe / CS ) ) / DS ) / RRSe ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.11632653061224489, "obj2": 0.8452404774236784}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( Max( MRS,CRS ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC * ( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) - RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + FirstVNF_RAM ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MLU * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "Min( FirstVNF_RAM ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUM / ( RCSe / CS ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_CPU + DDR ) ) / ( DDR / ( DDR + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8844923488121057}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_CPU + DDR ) ) / ( DDR / ( DDR + MDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "Min( FirstVNF_RAM ,( ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) + MDR ) )", "choosing": "Max( ( ( ( Max( ( Min( ( DS - MUC ) ,MUR ) + ( ( MUR - RMSe ) * Max( RRSe,MUC ) ) ),MLU ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RMSe + MUM ) )", "obj1": 0.1346938775510204, "obj2": 0.8316081821411867}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( ( ( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) ) - ACS ) / ( Min( DDR ,FirstVNF_RAM_Server ) - ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( CS,Min( ( ( ( RCSe / MUR ) / Max( CS,MUM ) ) / Min( ( MUC * MLU ) ,MUR ) ) ,Min( Min( MUC ,( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( RRSe - MUC ),( MUM * MUR ) ) ) ) ) ) / DS )", "obj1": 0.0836734693877551, "obj2": 0.8963821982767806}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ARS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( MUC / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUM / ( RCSe / CS ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.854409843934098}, {"determining": "Min( FirstVNF_RAM ,( DDR + MDR ) )", "choosing": "Max( ( ( ( Max( ( Min( RCSe ,MUR ) + ( ( MUR - RMSe ) * Max( RRSe,MUC ) ) ),MLU ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RMSe + MUM ) )", "obj1": 0.12653061224489795, "obj2": 0.8405241885486578}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8851729139707256}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.11020408163265306, "obj2": 0.8595086239338169}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "Min( CRS ,( DDR + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / RRSe ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * Max( MUR,CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Max( FirstVNF_RAM,DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC * DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "Min( ( FirstVNF_RAM * MDR ) ,Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,( ( ( Min( DDR ,FirstVNF_RAM_Server ) - ( PN - FirstVNF_RAM ) ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) + MDR ) ) ) )", "choosing": "Max( ( ( ( Max( ( Min( RCSe ,MUR ) + ( ( MUR - RMSe ) * Min( RCSe ,RMSe ) ) ),MLU ) / DS ) / RRSe ) - ( MUR - MUM ) ),( RMSe + MUM ) )", "obj1": 0.1306122448979592, "obj2": 0.8364999065916842}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( ( AMS + ( DDR + MDR ) ) - FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / MUR ) ) / ( MUC + DS ) )", "obj1": 0.10408163265306122, "obj2": 0.8608786466095582}, {"determining": "Min( ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + DDR ) ) ) - FirstVNF_RAM ) ,( DDR + MDR ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( RMSe / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8806515428978273}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8785567505906835}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM + DDR ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,( Max( ( MUC + DS ),( RRSe - RRSe ) ) + ( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( MLU,DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8993383154860448}, {"determining": "( ( MRS * AMS ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUM / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC * ( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}], "13": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "( Max( Min( ARS ,FirstVNF_Mem_Server ),( MDR + FirstVNF_Mem ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,( ( MUC - DS ) / RRSe ) ) / ( MUC + CS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,CRS ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC * ( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) - RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "Min( FirstVNF_RAM ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8844923488121057}, {"determining": "Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_CPU + DDR ) ) / ( DDR / ( DDR + MDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8851729139707256}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Max( FirstVNF_RAM,DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC * DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( ( AMS + ( DDR + MDR ) ) - FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / MUR ) ) / ( MUC + DS ) )", "obj1": 0.10408163265306122, "obj2": 0.8608786466095582}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM + DDR ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,( Max( ( MUC + DS ),( RRSe - RRSe ) ) + ( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( MLU,DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8993383154860448}, {"determining": "( ( MRS * AMS ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUM / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( ( MUC * ( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR - FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUM / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM + DDR ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,( Max( ( MUC + DS ),( RRSe - RRSe ) ) + ( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( MLU,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUR + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "( Max( MRS,AMS ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.8600147547226057}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8844923488121057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( ( AMS + ( DDR + MDR ) ) - FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / MUR ) ) / ( MUC + DS ) )", "obj1": 0.10408163265306122, "obj2": 0.8608786466095582}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + BR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUR + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + ARS ) )", "choosing": "( Max( MUC,( ( MUC / DS ) - RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8635484970743794}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( BR / MDR ) )", "choosing": "( Max( MUC,( ( MUC / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS * FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * FirstVNF_CPU_Server ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( MLU,MUM ) ) / ( ( MUC / DS ) * ( MUC - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + MUM ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8746383759481957}], "14": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8844923488121057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8851729139707256}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR - FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUM / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM + DDR ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,( Max( ( MUC + DS ),( RRSe - RRSe ) ) + ( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( MLU,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8844923488121057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + BR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUR + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( BR / MDR ) )", "choosing": "( Max( MUC,( ( MUC / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS * FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_RAM + DDR ) ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8844923488121057}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8844923488121057}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "Min( FirstVNF_RAM ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC + DS ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.874214544073663}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * FirstVNF_CPU_Server ) ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( MLU,MUM ) ) / ( ( MUC / DS ) * ( MUC - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8844923488121057}, {"determining": "Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RMSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR - MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) - RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM / DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUR / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( ( ( AMS + Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ) - FirstVNF_RAM ) ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM + DDR ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,( Max( ( MUC + DS ),( RRSe - RRSe ) ) + ( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( MLU,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ARS ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / RRSe ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8942524148916579}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8844923488121057}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8851729139707256}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Max( FirstVNF_RAM,DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "( Max( ( BR * FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( Min( ARS ,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8681968790332624}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8844923488121057}], "15": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR - FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUM / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM + DDR ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,( Max( ( MUC + DS ),( RRSe - RRSe ) ) + ( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( MLU,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM / DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( MUR / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM + DDR ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,( Max( ( MUC + DS ),( RRSe - RRSe ) ) + ( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( MLU,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ARS ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / RRSe ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8942524148916579}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( Max( ( BR * FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( Min( ARS ,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( ( MUC / DS ) / RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / ( ( MUC / DS ) / RRSe ) ) ) / ( MUC + DS ) )", "obj1": 0.2, "obj2": 0.7806401476156396}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "Min( MDR ,( Const + MDR ) )", "choosing": "( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC / MUR ) ) / ( MUC + MUC ) )", "obj1": 0.1510204081632653, "obj2": 0.811833739226816}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "Min( ( Max( Min( BR ,FirstVNF_Mem_Server ),Max( FirstVNF_RAM,DDR ) ) / ( DDR / FirstVNF_RAM_Server ) ) ,( DDR + MDR ) )", "choosing": "( Max( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.13877551020408163, "obj2": 0.8354942298249523}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / ( ( MUC / DS ) / RRSe ) ) ) / ( MUC + DS ) )", "obj1": 0.23673469387755103, "obj2": 0.7372843417898507}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ARS ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / RRSe ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8942524148916579}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + ( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + RRSe ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC + DS ) * Max( MUM,CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + ( ( MUC / DS ) / RRSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8466265195720906}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS * FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8623062590427946}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / Min( FirstVNF_RAM ,Min( BR ,FirstVNF_Mem_Server ) ) ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( Max( ( MUC + DS ),( ( MUC / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.8587732713493677}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * FirstVNF_CPU_Server ) ) ) + MDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( FirstVNF_RAM + DDR ) / ( DDR / FirstVNF_CPU ) )", "choosing": "( Max( MUC,( ( MUC / RMSe ) * ( CS / CS ) ) ) / ( MUC + DS ) )", "obj1": 0.12244897959183673, "obj2": 0.854338341115601}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) ) / ( FirstVNF_Mem / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( ( MUM / CS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.1346938775510204, "obj2": 0.8393184672281192}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Max( FirstVNF_RAM,DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( ( DDR + MDR ) * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * Max( MUC,( ( MUC / DS ) / RRSe ) ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07959183673469387, "obj2": 0.9003360483505045}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( RCSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8939988925697678}, {"determining": "( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / ( MUC + DS ) ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.17551020408163265, "obj2": 0.7987882935202618}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / ( MUC + DS ) ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.15510204081632653, "obj2": 0.8107985641169599}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - RMSe ) * Max( RRSe,MUM ) )", "obj1": 0.19591836734693877, "obj2": 0.7956116106222382}, {"determining": "Min( FirstVNF_RAM_Server ,( Const + FirstVNF_CPU ) )", "choosing": "( Max( MUC,( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / MUR ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.2673469387755102, "obj2": 0.724321830191674}, {"determining": "( Min( Min( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / ( ( MUC / DS ) / RRSe ) )", "obj1": 0.3, "obj2": 0.6980224723617352}], "16": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR - FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUM / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( ( BR * FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( Min( ARS ,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_Mem ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "Min( MDR ,( Const + MDR ) )", "choosing": "( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC / MUR ) ) / ( MUC + MUC ) )", "obj1": 0.1510204081632653, "obj2": 0.811833739226816}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC + DS ) * Max( MUM,CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + ( ( MUC / DS ) / RRSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8466265195720906}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS * FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8623062590427946}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * FirstVNF_CPU_Server ) ) ) + MDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( FirstVNF_RAM + DDR ) / ( DDR / FirstVNF_CPU ) )", "choosing": "( Max( MUC,( ( MUC / RMSe ) * ( CS / CS ) ) ) / ( MUC + DS ) )", "obj1": 0.12244897959183673, "obj2": 0.854338341115601}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "Min( FirstVNF_RAM_Server ,( DDR + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( MRS / ( ( ARS + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / CS ) / RRSe ) ) / ( MUC + ( ( MUC / DS ) / RRSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8466265195720906}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035853798287861}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( RRS * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - DS ) ) ) ,Max( Max( ( MUC + DS ),( CS - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8623062590427946}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( PN * FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,( Max( ( MUC + DS ),( RRSe - RRSe ) ) + Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + ( ( MUC / DS ) / RRSe ) ) )", "obj1": 0.12448979591836734, "obj2": 0.8466265195720906}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * FirstVNF_CPU_Server ) ) ) + MDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( PN / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( RCSe,( ( ( MUR / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.13877551020408163, "obj2": 0.8260942274835057}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) ) / ( AMS + Max( Min( ACS ,( ( MRS / Min( FirstVNF_RAM ,Min( BR ,FirstVNF_Mem_Server ) ) ) * DDR ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( Max( ( MUC + DS ),( ( MUC / DS ) / RRSe ) ),( ( DS / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11836734693877551, "obj2": 0.8553918330752137}, {"determining": "( Max( FirstVNF_RAM,Const ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.15306122448979592, "obj2": 0.8095361331746813}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) / ( MUC + DS ) )", "obj1": 0.1306122448979592, "obj2": 0.838355975513107}, {"determining": "Min( DDR ,( Const + MDR ) )", "choosing": "( Max( MUC,( ( MUC / ( MUC + DS ) ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.16326530612244897, "obj2": 0.8065734825113174}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ( DDR + MDR ) * ( Min( MRS ,FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( ( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.8566887506458201}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( ( ( MUC + DS ) - ( CS - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( Min( BR ,MDR ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) - RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * MDR ) ) + MDR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12653061224489795, "obj2": 0.842121748477419}, {"determining": "Min( RRS ,( Const + MDR ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8769253697153419}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + ( FirstVNF_RAM + DDR ) ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * FirstVNF_CPU_Server ) ) ) + MDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + ( MUC / DS ) ) )", "obj1": 0.16938775510204082, "obj2": 0.8035824991446906}, {"determining": "( Max( ( BR * FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8872847812750887}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08979591836734693, "obj2": 0.8806279957615298}], "17": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MDR ,( Const + MDR ) )", "choosing": "( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC / MUR ) ) / ( MUC + MUC ) )", "obj1": 0.1510204081632653, "obj2": 0.811833739226816}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS * FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8623062590427946}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035853798287861}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( RRS * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - DS ) ) ) ,Max( Max( ( MUC + DS ),( CS - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8623062590427946}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( PN / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( RCSe,( ( ( MUR / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.13877551020408163, "obj2": 0.8260942274835057}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( FirstVNF_RAM,Const ) / FirstVNF_CPU_Server )", "choosing": "( Max( MUC,( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.15306122448979592, "obj2": 0.8095361331746813}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) / ( MUC + DS ) )", "obj1": 0.1306122448979592, "obj2": 0.838355975513107}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ( DDR + MDR ) * ( Min( MRS ,FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( ( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.8566887506458201}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( ( ( MUC + DS ) - ( CS - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( Min( BR ,MDR ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) - RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * MDR ) ) + MDR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12653061224489795, "obj2": 0.842121748477419}, {"determining": "( Max( Min( BR ,AMS ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035853798287861}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) / RRS )", "choosing": "( ( Max( MUC,( ( MUC / CS ) / RRSe ) ) / ( MUC + DS ) ) / ( MUC + MUC ) )", "obj1": 0.1306122448979592, "obj2": 0.838355975513107}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( ( MUR / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12244897959183673, "obj2": 0.8450580020953116}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( PN / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( RCSe,( ( ( MUR / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.13673469387755102, "obj2": 0.8350973692102385}, {"determining": "( Max( MRS,FirstVNF_RAM ) / MRS )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / DDR )", "choosing": "( Max( MUC,( ( RCSe / DS ) + RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + FirstVNF_Mem_Server ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * RRSe ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8765770209501674}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( ( RMSe / ( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / DS ) / MLU ) ) / ( DS + DS ) )", "obj1": 0.11632653061224489, "obj2": 0.855233598456095}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( ( MUR / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12244897959183673, "obj2": 0.8450580020953116}, {"determining": "Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + RCSe ) )", "obj1": 0.10612244897959183, "obj2": 0.858384977143957}, {"determining": "( ( ( FirstVNF_RAM + DDR ) / ( DDR / FirstVNF_CPU ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUR / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.13673469387755102, "obj2": 0.8350973692102385}, {"determining": "( ( ( Min( BR ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( ( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( CS + DS ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.8566887506458201}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / CRS )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035853798287861}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12653061224489795, "obj2": 0.842121748477419}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * MDR ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035853798287861}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server )", "choosing": "( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) / ( MUC + DS ) )", "obj1": 0.1306122448979592, "obj2": 0.838355975513107}, {"determining": "( Max( Max( MRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8745757196485555}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.8566887506458201}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / ( AMS + Max( Min( ACS ,( ( MRS / FirstVNF_RAM_Server ) * ( Const * BR ) ) ),( FirstVNF_RAM + DDR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + ( MUC / DS ) ) )", "obj1": 0.1489795918367347, "obj2": 0.8209734588415022}, {"determining": "( Min( ( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( DDR / BR ) )", "choosing": "( ( Min( RCSe ,DS ) / RRSe ) / ( MUC / DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( PN - FirstVNF_RAM_Server ) ) / ( ARS / MRS ) )", "choosing": "( ( MUC - Max( ( RCSe / DS ),MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.16326530612244897, "obj2": 0.8062385795064106}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.16326530612244897, "obj2": 0.8062385795064106}, {"determining": "( Min( ( BR * ACS ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,MUM ) / ( ( MUC / RCSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + ( ( RCSe / RCSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.16326530612244897, "obj2": 0.8062385795064106}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) ) / ( BR * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MUC + DS ),( ( MUC / DS ) / RRSe ) ),( ( DS / DS ) / RRSe ) ) / RCSe )", "obj1": 0.12448979591836734, "obj2": 0.8448304831925486}, {"determining": "( Min( ( BR * FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe / RCSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.16326530612244897, "obj2": 0.8062385795064106}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * MDR ) ) + MDR ) ) ) )", "choosing": "( Max( MUC,( Max( ( MUC / DS ),RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12653061224489795, "obj2": 0.842121748477419}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( FirstVNF_RAM_Server * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1326530612244898, "obj2": 0.8371292316293902}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( PN * FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,( Max( ( MUC + DS ),( RRSe - RRSe ) ) + Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + ( ( MUC / DS ) / RRSe ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8480291240207085}], "18": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS * FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8623062590427946}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035853798287861}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( RRS * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - DS ) ) ) ,Max( Max( ( MUC + DS ),( CS - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8623062590427946}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ( DDR + MDR ) * ( Min( MRS ,FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( ( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.8566887506458201}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( ( ( MUC + DS ) - ( CS - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( Min( BR ,MDR ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) - RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * MDR ) ) + MDR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12653061224489795, "obj2": 0.842121748477419}, {"determining": "( Max( Min( BR ,AMS ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035853798287861}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( ( MUR / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12244897959183673, "obj2": 0.8450580020953116}, {"determining": "( Max( MRS,FirstVNF_RAM ) / MRS )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / DDR )", "choosing": "( Max( MUC,( ( RCSe / DS ) + RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + FirstVNF_Mem_Server ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * RRSe ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8765770209501674}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( ( RMSe / ( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / DS ) / MLU ) ) / ( DS + DS ) )", "obj1": 0.11632653061224489, "obj2": 0.855233598456095}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( ( MUR / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12244897959183673, "obj2": 0.8450580020953116}, {"determining": "Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + RCSe ) )", "obj1": 0.10612244897959183, "obj2": 0.858384977143957}, {"determining": "( ( ( Min( BR ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( ( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( CS + DS ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.8566887506458201}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / CRS )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035853798287861}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * MDR ) ) + MDR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035853798287861}, {"determining": "( Max( Max( MRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8745757196485555}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.8566887506458201}, {"determining": "( Min( ( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( DDR / BR ) )", "choosing": "( ( Min( RCSe ,DS ) / RRSe ) / ( MUC / DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( PN - FirstVNF_RAM_Server ) ) / ( ARS / MRS ) )", "choosing": "( ( MUC - Max( ( RCSe / DS ),MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * ACS ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,MUM ) / ( ( MUC / RCSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) ) / ( BR * FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( ( MUC + DS ),( ( MUC / DS ) / RRSe ) ),( ( DS / DS ) / RRSe ) ) / RCSe )", "obj1": 0.12448979591836734, "obj2": 0.8448304831925486}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( PN * FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,( Max( ( MUC + DS ),( RRSe - RRSe ) ) + Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + ( ( MUC / DS ) / RRSe ) ) )", "obj1": 0.12040816326530612, "obj2": 0.8480291240207085}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8765770209501674}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( ( MUR / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12244897959183673, "obj2": 0.8450580020953116}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( ( BR * FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( CRS * CRS ) ) / Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RMSe ) ) / ( MUC + MLU ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035853798287861}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( CS - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.858384977143957}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( FirstVNF_Mem_Server * CRS ) ) / CRS )", "choosing": "( Max( ( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.8566887506458201}, {"determining": "( ( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ( DDR + MDR ) * ( Min( MRS ,FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035853798287861}, {"determining": "( ( ( FirstVNF_RAM + DDR ) / ( DDR / FirstVNF_CPU ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( ( ( RCSe / DS ) / RRSe ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.858384977143957}, {"determining": "( Max( Max( MRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Const ) * BR ) ) ) )", "choosing": "( Max( Min( ( Max( ( MUC / DS ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10408163265306122, "obj2": 0.859019190608148}, {"determining": "( ( ( FirstVNF_RAM + DDR ) / ( DDR / FirstVNF_CPU ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( ( ( RCSe / DS ) / RRSe ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.858384977143957}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RMSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) / RRS )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "Min( ( FirstVNF_RAM * CRS ) ,Max( Min( FirstVNF_Mem_Server ,ACS ),Min( FirstVNF_RAM_Server ,( ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * MDR ) ) + MDR ) ) ) )", "choosing": "( Max( ( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.8566887506458201}], "19": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS * FirstVNF_RAM_Server ) * ( Const * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8623062590427946}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( RRS * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - DS ) ) ) ,Max( Max( ( MUC + DS ),( CS - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8623062590427946}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( ( ( MUC + DS ) - ( CS - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( Min( BR ,MDR ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) - RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( Min( BR ,AMS ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( Max( MRS,FirstVNF_RAM ) / MRS )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / DDR )", "choosing": "( Max( MUC,( ( RCSe / DS ) + RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + FirstVNF_Mem_Server ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * RRSe ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8765770209501674}, {"determining": "Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + RCSe ) )", "obj1": 0.10612244897959183, "obj2": 0.858384977143957}, {"determining": "( Max( Max( MRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8745757196485555}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Min( ( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( DDR / BR ) )", "choosing": "( ( Min( RCSe ,DS ) / RRSe ) / ( MUC / DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( PN - FirstVNF_RAM_Server ) ) / ( ARS / MRS ) )", "choosing": "( ( MUC - Max( ( RCSe / DS ),MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * ACS ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,MUM ) / ( ( MUC / RCSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8765770209501674}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( ( BR * FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( CRS * CRS ) ) / Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RMSe ) ) / ( MUC + MLU ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( CS - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10612244897959183, "obj2": 0.858384977143957}, {"determining": "( Max( Max( MRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Const ) * BR ) ) ) )", "choosing": "( Max( Min( ( Max( ( MUC / DS ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10408163265306122, "obj2": 0.859019190608148}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RMSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) / RRS )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,RRSe ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( RRS * ( Const + MDR ) ) ) ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( RRS * ( Const + MDR ) ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "( Max( Max( MRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8745757196485555}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Max( DDR,FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8765770209501674}, {"determining": "( Max( Min( BR ,FirstVNF_RAM_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( ( ( FirstVNF_RAM + DDR ) / ( DDR / FirstVNF_CPU ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8765770209501674}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8708787860821096}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ),FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( MUC + DS ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10408163265306122, "obj2": 0.859019190608148}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8765770209501674}, {"determining": "( Max( Max( MRS,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( CS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8745757196485555}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( ( RCSe / DS ) + RRSe ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8745757196485555}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / DDR )", "choosing": "( Max( Min( ( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09183673469387756, "obj2": 0.8745757196485555}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( Max( MUC,( ( MUC / MUC ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}], "20": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,MDR ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) - RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( Min( BR ,AMS ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( Max( MRS,FirstVNF_RAM ) / MRS )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / DDR )", "choosing": "( Max( MUC,( ( RCSe / DS ) + RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( DDR / BR ) )", "choosing": "( ( Min( RCSe ,DS ) / RRSe ) / ( MUC / DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( PN - FirstVNF_RAM_Server ) ) / ( ARS / MRS ) )", "choosing": "( ( MUC - Max( ( RCSe / DS ),MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * ACS ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RCSe,MUM ) / ( ( MUC / RCSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MLU ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( ( BR * FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( ( ( FirstVNF_RAM * ( FirstVNF_CPU_Server * ACS ) ) - ( CRS * CRS ) ) / Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RMSe ) ) / ( MUC + MLU ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RMSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,RRSe ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Max( DDR,FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( Max( Min( BR ,FirstVNF_RAM_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( Max( MUC,( ( MUC / MUC ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) / ( DDR / MRS ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( RRS + ARS ) ) / Min( DDR ,DDR ) )", "choosing": "( Max( ( MUC - DS ),( ( MUC / DS ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / MRS ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUR / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0836734693877551, "obj2": 0.8846210259350987}, {"determining": "Min( ( Max( Min( BR ,MDR ),( FirstVNF_RAM - RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) ) ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + MUC ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( RRSe + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Min( CS ,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,BR ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( RRSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,MDR ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / MRS ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUR,( ( MUM / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) + ( ( MUC / DS ) * MUC ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / ( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUM / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8828510697361176}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8872666717968474}, {"determining": "( ( ( FirstVNF_RAM + DDR ) / ( DDR / MDR ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MUC ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / RCSe ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( FirstVNF_Mem_Server ,( BR / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}], "21": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / MRS )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / DDR )", "choosing": "( Max( MUC,( ( RCSe / DS ) + RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( DDR / BR ) )", "choosing": "( ( Min( RCSe ,DS ) / RRSe ) / ( MUC / DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( PN - FirstVNF_RAM_Server ) ) / ( ARS / MRS ) )", "choosing": "( ( MUC - Max( ( RCSe / DS ),MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RMSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,RRSe ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( Max( MUC,( ( MUC / MUC ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) / ( DDR / MRS ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( RRS + ARS ) ) / Min( DDR ,DDR ) )", "choosing": "( Max( ( MUC - DS ),( ( MUC / DS ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( ( Max( Min( BR ,MDR ),( FirstVNF_RAM - RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) ) ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + MUC ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( RRSe + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Min( CS ,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,BR ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( RRSe / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,MDR ),( FirstVNF_RAM + DDR ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUR,( ( MUM / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) + ( ( MUC / DS ) * MUC ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / ( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUM / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( FirstVNF_RAM + DDR ) / ( DDR / MDR ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MUC ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / RCSe ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( FirstVNF_Mem_Server ,( BR / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,AMS ) ) )", "choosing": "( Max( ( MUC / DS ),Min( DS ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Min( CS ,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,( ( RCSe / DS ) / RRSe ) ) / ( ( MUC / RMSe ) * ( MUR / RCSe ) ) ) ,Max( Max( ( MUC + DS ),( RRSe * RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / RCSe ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( ( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) ) ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + MUC ),( MUC + DS ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + MUC ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUM + DS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + MUC ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( ( Max( Min( BR ,MDR ),( FirstVNF_RAM - RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) ) ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + MUC ),( RRSe - RRSe ) ),( RCSe / CS ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( RRSe + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / RCSe ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,MDR ),( FirstVNF_RAM + Min( BR ,FirstVNF_Mem_Server ) ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( ( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( MUC - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + MUC ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( RRSe + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.07346938775510205, "obj2": 0.9035669507022003}], "22": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / MRS )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / DDR )", "choosing": "( Max( MUC,( ( RCSe / DS ) + RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( DDR / BR ) )", "choosing": "( ( Min( RCSe ,DS ) / RRSe ) / ( MUC / DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( PN - FirstVNF_RAM_Server ) ) / ( ARS / MRS ) )", "choosing": "( ( MUC - Max( ( RCSe / DS ),MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RMSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( Max( MUC,( ( MUC / MUC ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) / ( DDR / MRS ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( RRS + ARS ) ) / Min( DDR ,DDR ) )", "choosing": "( Max( ( MUC - DS ),( ( MUC / DS ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUR,( ( MUM / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / ( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUM / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( FirstVNF_RAM + DDR ) / ( DDR / MDR ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MUC ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,( BR / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) / ( DDR / AMS ) )", "choosing": "( Max( MLU,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_Mem_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) + ( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( RRS ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC / ( ( RCSe / DS ) / MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RCSe,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( BR + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RCSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR / DDR ) )", "choosing": "( Max( Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Max( MUC,MUM ),( ( CS / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,( BR / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( MDR / DDR ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC + DS ) / CS ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + RRSe ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( AMS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,( ( RCSe / DS ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( ( FirstVNF_RAM + RRS ) ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MUC / DS ),Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( MUR / RCSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) / Max( RMSe,DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8939231121023063}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / ( DDR / AMS ) )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / ( ( MUC / DS ) / RRSe ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,( BR * FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / ( BR - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}], "23": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / MRS )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / DDR )", "choosing": "( Max( MUC,( ( RCSe / DS ) + RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( DDR / BR ) )", "choosing": "( ( Min( RCSe ,DS ) / RRSe ) / ( MUC / DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( PN - FirstVNF_RAM_Server ) ) / ( ARS / MRS ) )", "choosing": "( ( MUC - Max( ( RCSe / DS ),MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RMSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( Max( MUC,( ( MUC / MUC ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) / ( DDR / MRS ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( RRS + ARS ) ) / Min( DDR ,DDR ) )", "choosing": "( Max( ( MUC - DS ),( ( MUC / DS ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUR,( ( MUM / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / ( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUM / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( FirstVNF_RAM + DDR ) / ( DDR / MDR ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MUC ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,( BR / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) / ( DDR / AMS ) )", "choosing": "( Max( MLU,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_Mem_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) + ( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( RRS ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC / ( ( RCSe / DS ) / MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RCSe,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( BR + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RCSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR / DDR ) )", "choosing": "( Max( Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Max( MUC,MUM ),( ( CS / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,( BR / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( MDR / DDR ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC + DS ) / CS ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + RRSe ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( AMS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,( ( RCSe / DS ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / ( DDR / AMS ) )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / ( ( MUC / DS ) / RRSe ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,( BR * FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / ( BR - FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}], "24": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / MRS )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / DDR )", "choosing": "( Max( MUC,( ( RCSe / DS ) + RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( DDR / BR ) )", "choosing": "( ( Min( RCSe ,DS ) / RRSe ) / ( MUC / DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( PN - FirstVNF_RAM_Server ) ) / ( ARS / MRS ) )", "choosing": "( ( MUC - Max( ( RCSe / DS ),MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RMSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( Max( MUC,( ( MUC / MUC ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) / ( DDR / MRS ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( RRS + ARS ) ) / Min( DDR ,DDR ) )", "choosing": "( Max( ( MUC - DS ),( ( MUC / DS ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUR,( ( MUM / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / ( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUM / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( FirstVNF_RAM + DDR ) / ( DDR / MDR ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MUC ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,( BR / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) / ( DDR / AMS ) )", "choosing": "( Max( MLU,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_Mem_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) + ( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( RRS ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC / ( ( RCSe / DS ) / MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RCSe,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( BR + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RCSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR / DDR ) )", "choosing": "( Max( Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Max( MUC,MUM ),( ( CS / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,( BR / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( MDR / DDR ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC + DS ) / CS ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + RRSe ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( AMS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,( ( RCSe / DS ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}], "25": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / MRS )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / DDR )", "choosing": "( Max( MUC,( ( RCSe / DS ) + RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( DDR / BR ) )", "choosing": "( ( Min( RCSe ,DS ) / RRSe ) / ( MUC / DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( PN - FirstVNF_RAM_Server ) ) / ( ARS / MRS ) )", "choosing": "( ( MUC - Max( ( RCSe / DS ),MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RMSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( Max( MUC,( ( MUC / MUC ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) / ( DDR / MRS ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( RRS + ARS ) ) / Min( DDR ,DDR ) )", "choosing": "( Max( ( MUC - DS ),( ( MUC / DS ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( MUC,MUM ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUR,( ( MUM / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / ( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUM / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( FirstVNF_RAM + DDR ) / ( DDR / MDR ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Const * ( Const + MDR ) ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - MUC ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,( BR / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) / ( DDR / AMS ) )", "choosing": "( Max( MLU,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_Mem_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ) + ( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( RRS ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC / ( ( RCSe / DS ) / MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RCSe,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( BR + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RCSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR / DDR ) )", "choosing": "( Max( Min( ( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),( RCSe / MUC ) ) ) / ( ( MUC / RMSe ) * ( MUR / CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem / DDR ) )", "choosing": "( Max( Max( MUC,MUM ),( ( CS / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,( BR / FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Min( ( ( ( RCSe / MUR ) - Max( CS,MUM ) ) / ( ( MUC / DS ) * ( MUM - CS ) ) ) ,Min( ( ( ( RCSe / MUR ) - Max( MUC,MUM ) ) / ( ( MUC / DS ) * ( MUR - CS ) ) ) ,Max( Max( ( MUC + DS ),( RRSe - RRSe ) ),Max( ( DS - MUC ),( MUM * MUR ) ) ) ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}], "26": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( BR * Const ) ,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) / ( DDR + FirstVNF_RAM ) )", "choosing": "( ( MUC + ( ( RCSe - RCSe ) / RRSe ) ) / ( MUM + MUC ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( MRS,FirstVNF_RAM ) / MRS )", "choosing": "( Max( Max( MUC,( ( RCSe / DS ) / RRSe ) ),( ( MUC / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / DDR )", "choosing": "( Max( MUC,( ( RCSe / DS ) + RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( ( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / ( DDR / BR ) )", "choosing": "( ( Min( RCSe ,DS ) / RRSe ) / ( MUC / DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) ) / Max( DDR,FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( PN - FirstVNF_RAM_Server ) ) / ( ARS / MRS ) )", "choosing": "( ( MUC - Max( ( RCSe / DS ),MUR ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RMSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( MUC / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( DDR / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( Max( MUC,( ( MUC / MUC ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,( ( RCSe / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8991191766114262}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}], "27": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( DDR + MDR ) / FirstVNF_Mem_Server ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( MUC / RCSe ) / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( BR ,MDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,ARS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( MUC / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - MRS ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( CS / RRSe ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( CRS ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ARS + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / ARS ) )", "choosing": "( Max( MUM,( ( Min( RRSe ,RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Max( BR,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / DDR ) / DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( MUC * ( ( Min( MUC ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( DDR ,( ( DDR + MDR ) + FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( Min( MUC ,DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,MDR ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Max( PN,MRS ) )", "choosing": "( Max( MUC,( ( ( MLU / DS ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( CRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}], "28": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( DDR + MDR ) / FirstVNF_Mem_Server ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( MUC / RCSe ) / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( BR ,MDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,ARS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( MUC / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - MRS ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( CS / RRSe ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( CRS ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ARS + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / ARS ) )", "choosing": "( Max( MUM,( ( Min( RRSe ,RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Max( BR,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / DDR ) / DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( MUC * ( ( Min( MUC ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( DDR ,( ( DDR + MDR ) + FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( Min( MUC ,DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,MDR ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Max( PN,MRS ) )", "choosing": "( Max( MUC,( ( ( MLU / DS ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( CRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}], "29": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( DDR + MDR ) / FirstVNF_Mem_Server ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( MUC / RCSe ) / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( BR ,MDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,ARS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( MUC / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - MRS ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( CS / RRSe ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( CRS ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ARS + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / ARS ) )", "choosing": "( Max( MUM,( ( Min( RRSe ,RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Max( BR,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / DDR ) / DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( MUC * ( ( Min( MUC ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( DDR ,( ( DDR + MDR ) + FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( Min( MUC ,DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,MDR ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Max( PN,MRS ) )", "choosing": "( Max( MUC,( ( ( MLU / DS ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( CRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}], "30": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( DDR + MDR ) / FirstVNF_Mem_Server ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( MUC / RCSe ) / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( BR ,MDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,ARS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( MUC / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - MRS ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( CS / RRSe ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( CRS ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ARS + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / ARS ) )", "choosing": "( Max( MUM,( ( Min( RRSe ,RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Max( BR,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / DDR ) / DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( MUC * ( ( Min( MUC ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( DDR ,( ( DDR + MDR ) + FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( Min( MUC ,DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,MDR ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Max( PN,MRS ) )", "choosing": "( Max( MUC,( ( ( MLU / DS ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( CRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}], "31": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( DDR + MDR ) / FirstVNF_Mem_Server ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( MUC / RCSe ) / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( BR ,MDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,ARS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( MUC / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - MRS ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( CS / RRSe ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( CRS ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ARS + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / ARS ) )", "choosing": "( Max( MUM,( ( Min( RRSe ,RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Max( BR,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / DDR ) / DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( MUC * ( ( Min( MUC ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( DDR ,( ( DDR + MDR ) + FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( Min( MUC ,DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,MDR ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Max( PN,MRS ) )", "choosing": "( Max( MUC,( ( ( MLU / DS ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( CRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}], "32": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( DDR + MDR ) / FirstVNF_Mem_Server ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( MUC / RCSe ) / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( BR ,MDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,ARS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( MUC / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - MRS ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( CS / RRSe ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( CRS ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ARS + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / ARS ) )", "choosing": "( Max( MUM,( ( Min( RRSe ,RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Max( BR,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / DDR ) / DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( MUC * ( ( Min( MUC ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( DDR ,( ( DDR + MDR ) + FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( Min( MUC ,DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,MDR ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Max( PN,MRS ) )", "choosing": "( Max( MUC,( ( ( MLU / DS ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( CRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}], "33": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( DDR + MDR ) / FirstVNF_Mem_Server ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( MUC / RCSe ) / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( BR ,MDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,ARS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( MUC / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - MRS ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( CS / RRSe ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( CRS ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ARS + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / ARS ) )", "choosing": "( Max( MUM,( ( Min( RRSe ,RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Max( BR,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / DDR ) / DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( MUC * ( ( Min( MUC ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( DDR ,( ( DDR + MDR ) + FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( Min( MUC ,DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,MDR ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Max( PN,MRS ) )", "choosing": "( Max( MUC,( ( ( MLU / DS ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( CRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}], "34": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( DDR + MDR ) / FirstVNF_Mem_Server ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( MUC / RCSe ) / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( BR ,MDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,ARS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( MUC / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - MRS ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( CS / RRSe ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( CRS ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ARS + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / ARS ) )", "choosing": "( Max( MUM,( ( Min( RRSe ,RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Max( BR,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / DDR ) / DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( MUC * ( ( Min( MUC ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( DDR ,( ( DDR + MDR ) + FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( Min( MUC ,DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,MDR ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Max( PN,MRS ) )", "choosing": "( Max( MUC,( ( ( MLU / DS ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( CRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}], "35": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( DDR + MDR ) / FirstVNF_Mem_Server ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( MUC / RCSe ) / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( BR ,MDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,ARS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( MUC / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - MRS ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( CS / RRSe ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( CRS ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ARS + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / ARS ) )", "choosing": "( Max( MUM,( ( Min( RRSe ,RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Max( BR,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / DDR ) / DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( MUC * ( ( Min( MUC ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( DDR ,( ( DDR + MDR ) + FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( Min( MUC ,DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,MDR ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Max( PN,MRS ) )", "choosing": "( Max( MUC,( ( ( MLU / DS ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "36": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( DDR + MDR ) / FirstVNF_Mem_Server ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( MUC / RCSe ) / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( BR ,MDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,ARS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( MUC / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - MRS ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( CS / RRSe ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( CRS ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ARS + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / ARS ) )", "choosing": "( Max( MUM,( ( Min( RRSe ,RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Max( BR,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / DDR ) / DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( ( MUC * ( ( Min( MUC ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( DDR ,( ( DDR + MDR ) + FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( Min( MUC ,DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / RMSe ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "37": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( DDR + MDR ) / FirstVNF_Mem_Server ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( MUC / RCSe ) / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( BR ,MDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,ARS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( MUC / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - MRS ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( CS / RRSe ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( CRS ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( ARS + RRS ) ) / ( DDR / Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / ARS ) )", "choosing": "( Max( MUM,( ( Min( RRSe ,RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Max( BR,FirstVNF_Mem_Server ) ) ),( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / RMSe ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( ACS,PN ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) / DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "38": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / MDR ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS / MRS ) / RRS )", "choosing": "( Max( MUC,( ( ( RCSe + DS ) / RMSe ) / MUR ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * MUM ) + DS ) * RRSe ) ) / ( MUC - RRSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem_Server ,Min( CRS ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server + DDR ) ) ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / DS ),( ( ( RCSe - RCSe ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,ARS ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ) / Min( PN ,MRS ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( RCSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( RRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( DDR + MDR ) / FirstVNF_Mem_Server ) ) * RRS ) ) ) )", "choosing": "( Max( ( ( MUC / RCSe ) / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( Min( BR ,MDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,ARS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( MUC / MLU ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - MRS ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( CS / RRSe ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / RMSe ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( ACS,PN ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) / DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( ( DDR + RRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server / ( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / MUR ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( CRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "39": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,DDR ),( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( Max( MUC,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( MRS - FirstVNF_RAM_Server ) / ( ( DDR + ARS ) * ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( Max( ( RMSe / DS ),MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / CS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( FirstVNF_RAM / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,AMS ) ) * BR ) ) ) )", "choosing": "( Max( CS,( ( ( RMSe / DS ) / DS ) / CS ) ) / ( RRSe + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / RRS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "Min( FirstVNF_Mem_Server ,Min( BR ,AMS ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / RCSe ) / RCSe ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ),Max( FirstVNF_RAM,RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,PN ) ) )", "choosing": "( Max( MUC,( ( ( MUR - DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server - Max( ( DDR + MDR ),FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( MUC / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( ( RRS / CRS ) ,DDR ) / Min( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem ,Min( ( CRS + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( CS,Max( Min( ( MUC * DS ) ,DS ),RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( BR + FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( ( ( MUC + MUM ) + ( ( ( MUC / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe / DS ) + DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) / ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( MUC,( ( Max( MUC,DS ) + MUC ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * Min( BR ,FirstVNF_RAM ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( Max( RMSe,DS ) * DS ) ,RRSe ) ) / ( MUM + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( AMS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( BR - FirstVNF_Mem ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC + RRSe ) / MUC ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( Min( BR ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM + RRS ) ) / ( DDR / ( RRS / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( MUC / MUM ) / DS ) / MUM ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / ACS ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,MUR ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / FirstVNF_CPU ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Const / FirstVNF_RAM_Server ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,Const ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) - MLU ) + RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / DDR ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_RAM_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC * MUM ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM + RRS ) / ( DDR * DDR ) )", "choosing": "( Max( ( ( MUC / DS ) / CS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( FirstVNF_RAM - FirstVNF_RAM_Server ) ) / ( PN / MRS ) )", "choosing": "( ( MUC / ( Max( ( MUC / DS ),DS ) - RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( ( MRS / FirstVNF_RAM_Server ) + FirstVNF_Mem ) * ( ( MRS / FirstVNF_RAM_Server ) - ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( MUC / RMSe ) / DS ) / RRSe ) ) / ( MUC / DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / RMSe ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( ACS,PN ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) / DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( ( DDR + RRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server / ( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / MUR ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( CRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( RRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Const / FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * RRS ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + Const ) ) / ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( Min( ( ( CS / DS ) / DS ) ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RMSe ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( AMS + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) - DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Const ,( AMS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( CS / DS ) / DS ) / RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "40": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,BR ),( FirstVNF_Mem_Server + DDR ) ) / Max( Min( RRS ,FirstVNF_Mem_Server ),( FirstVNF_RAM / ACS ) ) )", "choosing": "( Max( Max( MUC,MUC ),( ( ( MUC / DS ) / RRSe ) / RMSe ) ) / ( MUC + RCSe ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( Min( DDR ,FirstVNF_Mem ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( CS / DS ) / DS ) / MUM ) ) / ( CS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( Max( MUC,MUM ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( MRS / CRS ) / DDR ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( ACS / CRS ) - DDR ) / ( ( Max( MRS,FirstVNF_RAM_Server ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( PN * Min( ( DDR + MDR ) ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUR / DS ) / DS ) / MUM ) ) / ( DS + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR * MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( MUC / DS ) / DS ),( ( ( MUC / DS ) / DS ) / RRSe ) ) / ( MUR + CS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,Min( ( ( RCSe / MUC ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( ( BR - Min( MRS ,Min( BR ,FirstVNF_Mem_Server ) ) ) - ( FirstVNF_RAM + RRS ) ) / ( FirstVNF_RAM_Server - Min( BR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( ( MUC / DS ) / MUM ) / RRSe ) ) / ( MLU + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / RMSe ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( ACS,PN ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) / DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( ( DDR + RRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server / ( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / MUR ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( CRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( RRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Const / FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * RRS ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + Const ) ) / ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( Min( ( ( CS / DS ) / DS ) ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RMSe ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( AMS + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) - DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Const ,( AMS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( CS / DS ) / DS ) / RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + ACS ) * ( ( RRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,( PN / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) - DS ) / MUC ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS * CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Max( BR,DDR ) / ( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,Const ) )", "choosing": "( Max( Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ),( ( ( MUC / DS ) / MUC ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_CPU_Server / MDR ) ,FirstVNF_Mem_Server ) ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( CS / DS ) * DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / CRS ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS + DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / Max( ( DDR * MDR ),( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( PN / MDR ) ) * BR ) ) ) )", "choosing": "( Min( ( MUC + DS ) ,( ( ( ( ( RCSe / RMSe ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUR / DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,( MRS / BR ) ) * BR ) ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) / FirstVNF_Mem ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + PN ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + MDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS - DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) * RCSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( DDR / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) + RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( BR / RRS ) / Max( DDR,DDR ) )", "choosing": "( ( MUC / ( ( ( Max( ( MUM / DS ),DS ) / DS ) / MUM ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "41": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / RMSe ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( ACS,PN ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) / DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( ( DDR + RRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server / ( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / MUR ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( CRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( RRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Const / FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * RRS ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + Const ) ) / ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( Min( ( ( CS / DS ) / DS ) ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RMSe ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( AMS + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) - DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Const ,( AMS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( CS / DS ) / DS ) / RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + ACS ) * ( ( RRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,( PN / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) - DS ) / MUC ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS * CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Max( BR,DDR ) / ( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,Const ) )", "choosing": "( Max( Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ),( ( ( MUC / DS ) / MUC ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_CPU_Server / MDR ) ,FirstVNF_Mem_Server ) ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( CS / DS ) * DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / CRS ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS + DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / Max( ( DDR * MDR ),( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( PN / MDR ) ) * BR ) ) ) )", "choosing": "( Min( ( MUC + DS ) ,( ( ( ( ( RCSe / RMSe ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUR / DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,( MRS / BR ) ) * BR ) ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) / FirstVNF_Mem ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + PN ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + MDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS - DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) * RCSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( DDR / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) + RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( BR / RRS ) / Max( DDR,DDR ) )", "choosing": "( ( MUC / ( ( ( Max( ( MUM / DS ),DS ) / DS ) / MUM ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS + FirstVNF_RAM_Server ) * ( Min( ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + PN ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RCSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / ( ( DDR + MDR ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Max( ( MRS / FirstVNF_Mem_Server ),( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( ( MUC * Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "42": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / RMSe ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( ACS,PN ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) / DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( ( DDR + RRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server / ( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / MUR ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( CRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( RRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Const / FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * RRS ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + Const ) ) / ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( Min( ( ( CS / DS ) / DS ) ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RMSe ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( AMS + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) - DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Const ,( AMS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( CS / DS ) / DS ) / RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + ACS ) * ( ( RRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,( PN / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) - DS ) / MUC ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS * CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Max( BR,DDR ) / ( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,Const ) )", "choosing": "( Max( Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ),( ( ( MUC / DS ) / MUC ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_CPU_Server / MDR ) ,FirstVNF_Mem_Server ) ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( CS / DS ) * DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / CRS ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS + DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / Max( ( DDR * MDR ),( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( PN / MDR ) ) * BR ) ) ) )", "choosing": "( Min( ( MUC + DS ) ,( ( ( ( ( RCSe / RMSe ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUR / DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,( MRS / BR ) ) * BR ) ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) / FirstVNF_Mem ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + PN ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + MDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS - DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) * RCSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( DDR / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) + RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( BR / RRS ) / Max( DDR,DDR ) )", "choosing": "( ( MUC / ( ( ( Max( ( MUM / DS ),DS ) / DS ) / MUM ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS + FirstVNF_RAM_Server ) * ( Min( ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + PN ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RCSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / ( ( DDR + MDR ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Max( ( MRS / FirstVNF_Mem_Server ),( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( ( MUC * Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "43": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / RMSe ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( ACS,PN ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) / DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( ( DDR + RRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server / ( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / MUR ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( CRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( RRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Const / FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * RRS ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + Const ) ) / ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( Min( ( ( CS / DS ) / DS ) ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RMSe ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( AMS + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) - DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Const ,( AMS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( CS / DS ) / DS ) / RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + ACS ) * ( ( RRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,( PN / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) - DS ) / MUC ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS * CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Max( BR,DDR ) / ( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,Const ) )", "choosing": "( Max( Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ),( ( ( MUC / DS ) / MUC ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_CPU_Server / MDR ) ,FirstVNF_Mem_Server ) ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( CS / DS ) * DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / CRS ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS + DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / Max( ( DDR * MDR ),( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( PN / MDR ) ) * BR ) ) ) )", "choosing": "( Min( ( MUC + DS ) ,( ( ( ( ( RCSe / RMSe ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUR / DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,( MRS / BR ) ) * BR ) ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) / FirstVNF_Mem ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + PN ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + MDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS - DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) * RCSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( DDR / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) + RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( BR / RRS ) / Max( DDR,DDR ) )", "choosing": "( ( MUC / ( ( ( Max( ( MUM / DS ),DS ) / DS ) / MUM ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS + FirstVNF_RAM_Server ) * ( Min( ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + PN ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RCSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / ( ( DDR + MDR ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Max( ( MRS / FirstVNF_Mem_Server ),( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( ( MUC * Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "44": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / RMSe ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( ACS,PN ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) / DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( ( DDR + RRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server / ( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / MUR ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( CRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( RRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Const / FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * RRS ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + Const ) ) / ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( Min( ( ( CS / DS ) / DS ) ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RMSe ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( AMS + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) - DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Const ,( AMS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( CS / DS ) / DS ) / RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + ACS ) * ( ( RRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,( PN / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) - DS ) / MUC ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS * CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Max( BR,DDR ) / ( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,Const ) )", "choosing": "( Max( Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ),( ( ( MUC / DS ) / MUC ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_CPU_Server / MDR ) ,FirstVNF_Mem_Server ) ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( CS / DS ) * DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / CRS ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS + DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / Max( ( DDR * MDR ),( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( PN / MDR ) ) * BR ) ) ) )", "choosing": "( Min( ( MUC + DS ) ,( ( ( ( ( RCSe / RMSe ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUR / DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,( MRS / BR ) ) * BR ) ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) / FirstVNF_Mem ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + PN ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + MDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS - DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) * RCSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( DDR / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) + RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( BR / RRS ) / Max( DDR,DDR ) )", "choosing": "( ( MUC / ( ( ( Max( ( MUM / DS ),DS ) / DS ) / MUM ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS + FirstVNF_RAM_Server ) * ( Min( ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + PN ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RCSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / ( ( DDR + MDR ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Max( ( MRS / FirstVNF_Mem_Server ),( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( ( MUC * Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "45": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / RMSe ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( ACS,PN ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) / DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( ( DDR + RRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server / ( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / MUR ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( CRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( RRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Const / FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * RRS ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + Const ) ) / ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( Min( ( ( CS / DS ) / DS ) ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RMSe ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( AMS + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) - DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Const ,( AMS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( CS / DS ) / DS ) / RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + ACS ) * ( ( RRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,( PN / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) - DS ) / MUC ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS * CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Max( BR,DDR ) / ( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,Const ) )", "choosing": "( Max( Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ),( ( ( MUC / DS ) / MUC ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_CPU_Server / MDR ) ,FirstVNF_Mem_Server ) ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( CS / DS ) * DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / CRS ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS + DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / Max( ( DDR * MDR ),( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( PN / MDR ) ) * BR ) ) ) )", "choosing": "( Min( ( MUC + DS ) ,( ( ( ( ( RCSe / RMSe ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUR / DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,( MRS / BR ) ) * BR ) ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) / FirstVNF_Mem ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + PN ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + MDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS - DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) * RCSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( DDR / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) + RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( BR / RRS ) / Max( DDR,DDR ) )", "choosing": "( ( MUC / ( ( ( Max( ( MUM / DS ),DS ) / DS ) / MUM ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS + FirstVNF_RAM_Server ) * ( Min( ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + PN ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RCSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / ( ( DDR + MDR ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Max( ( MRS / FirstVNF_Mem_Server ),( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( ( MUC * Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "46": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / RMSe ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( ACS,PN ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) / DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( ( DDR + RRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server / ( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / MUR ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( CRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( RRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Const / FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * RRS ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + Const ) ) / ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( Min( ( ( CS / DS ) / DS ) ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RMSe ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( AMS + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) - DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Const ,( AMS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( CS / DS ) / DS ) / RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + ACS ) * ( ( RRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,( PN / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) - DS ) / MUC ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS * CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Max( BR,DDR ) / ( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,Const ) )", "choosing": "( Max( Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ),( ( ( MUC / DS ) / MUC ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_CPU_Server / MDR ) ,FirstVNF_Mem_Server ) ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( CS / DS ) * DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / CRS ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS + DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / Max( ( DDR * MDR ),( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( PN / MDR ) ) * BR ) ) ) )", "choosing": "( Min( ( MUC + DS ) ,( ( ( ( ( RCSe / RMSe ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUR / DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,( MRS / BR ) ) * BR ) ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) / FirstVNF_Mem ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + PN ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + MDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS - DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) * RCSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( DDR / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) + RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( BR / RRS ) / Max( DDR,DDR ) )", "choosing": "( ( MUC / ( ( ( Max( ( MUM / DS ),DS ) / DS ) / MUM ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS + FirstVNF_RAM_Server ) * ( Min( ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + PN ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RCSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / ( ( DDR + MDR ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Max( ( MRS / FirstVNF_Mem_Server ),( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( ( MUC * Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "47": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / RMSe ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( ACS,PN ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) / DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) + BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( ( DDR + RRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server / ( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / MUR ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( CRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( RRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Const / FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * RRS ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + Const ) ) / ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( Min( ( ( CS / DS ) / DS ) ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RMSe ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem_Server * ( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( ( MUR * ( ( ( Max( ( CS / DS ),DS ) / DS ) / RMSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( AMS + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) - DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ( DDR / MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Const ,( AMS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( CS / DS ) / DS ) / RMSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + ACS ) * ( ( RRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU ,( PN / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) - DS ) / MUC ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS * CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Max( BR,DDR ) / ( FirstVNF_Mem + DDR ) ) / Min( FirstVNF_RAM ,Const ) )", "choosing": "( Max( Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ),( ( ( MUC / DS ) / MUC ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) / ( ( Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_CPU_Server / MDR ) ,FirstVNF_Mem_Server ) ) + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( CS / DS ) * DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / CRS ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS + DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / Max( ( DDR * MDR ),( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( PN / MDR ) ) * BR ) ) ) )", "choosing": "( Min( ( MUC + DS ) ,( ( ( ( ( RCSe / RMSe ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUR / DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,( MRS / BR ) ) * BR ) ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( MRS / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) / FirstVNF_Mem ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_RAM ,DDR ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( MRS,FirstVNF_RAM_Server ) / ( ( DDR + PN ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_CPU_Server ,Min( BR ,Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + MDR ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS - DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( MUC / DS ) / DS ) * RCSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( DDR / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) + RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( ( BR / RRS ) / Max( DDR,DDR ) )", "choosing": "( ( MUC / ( ( ( Max( ( MUM / DS ),DS ) / DS ) / MUM ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS + FirstVNF_RAM_Server ) * ( Min( ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / Max( MUC,DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + PN ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RCSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( DDR / ( ( DDR + MDR ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( MUC + DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * Max( ( MRS / FirstVNF_Mem_Server ),( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( ( MUC * Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.0653061224489796, "obj2": 0.9130288412991601}], "48": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + FirstVNF_Mem_Server ) ,( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( MUC / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.08775510204081632, "obj2": 0.8857126247324862}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( ( ( ( MUR / DS ) / DS ) + DS ) / DS ) / RRSe ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) * ( Min( FirstVNF_Mem_Server ,( CRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( Max( ( DS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11836734693877551, "obj2": 0.8529617362702827}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM + ACS ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10816326530612246, "obj2": 0.8678433355934536}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( CS / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( Min( FirstVNF_Mem ,RRS ) + ( ARS - MRS ) )", "choosing": "( Min( DS ,Min( ( ( MUM - ( MUC / MUM ) ) - MUR ) ,( MUR + CS ) ) ) - ( MUM - DS ) )", "obj1": 0.27346938775510204, "obj2": 0.7160081272880223}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / MUR ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / ( ( ( CS / DS ) / RRSe ) / DS ) ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.41020408163265304, "obj2": 0.5645391665174061}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / Max( ( ( CS / RCSe ) / DS ),RMSe ) ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.21836734693877552, "obj2": 0.7380749558349305}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS + DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09795918367346938, "obj2": 0.8710221673039373}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.09591836734693877, "obj2": 0.8785816175348508}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS + PN ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RCSe ) ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.3816326530612245, "obj2": 0.6065367245672811}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( CS / RCSe ),DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / ( AMS / FirstVNF_RAM_Server ) ) ) * RRS ) ) ) )", "choosing": "( Max( MUC,( ( ( RMSe * RMSe ) * ( RRSe + MUM ) ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.32040816326530613, "obj2": 0.7137373524216313}, {"determining": "( Max( FirstVNF_RAM_Server,AMS ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * RRS ) ) ) )", "choosing": "( ( RMSe * RMSe ) * ( RRSe + MUM ) )", "obj1": 0.3489795918367347, "obj2": 0.643762126314881}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / MDR ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / RRSe ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.1469387755102041, "obj2": 0.817289150744091}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS + PN ) ) * BR ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,Min( ( DDR / MDR ) ,FirstVNF_Mem_Server ) ),BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ) ) / ( MUC + DS ) )", "obj1": 0.17142857142857143, "obj2": 0.802511371091148}, {"determining": "( DDR / ( ( DDR + MDR ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,BR ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( Max( ( CS / ( CS * DS ) ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / ARS ) * Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + RRSe ) )", "obj1": 0.16326530612244897, "obj2": 0.8070638235692982}, {"determining": "( DDR / ( ( DDR + MDR ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Const ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / MRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( DS / DS ) / DS ) / DS ) / MLU ) ) / ( MUC + DS ) )", "obj1": 0.11836734693877551, "obj2": 0.8529617362702827}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( Max( MRS,FirstVNF_RAM_Server ) * ( Min( CRS ,Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / DS ) / DS ) / DS ) / ( ( CS / DS ) / DS ) ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1816326530612245, "obj2": 0.7979984680216561}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,Min( ( ( ( ( CS / DS ) / MLU ) / DS ) / DS ) ,RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.09183673469387756, "obj2": 0.883732481067694}, {"determining": "( Min( ( PN - ARS ) ,FirstVNF_RAM ) + ( Max( DDR,PN ) / FirstVNF_RAM_Server ) )", "choosing": "Min( Max( Min( ( ( ( MLU * RRSe ) * ( MUC + Min( ( RCSe * MUR ) ,RCSe ) ) ) - RRSe ) ,Max( ( DS / RCSe ),( ( ( MUC * ( MUC - RRSe ) ) * Min( MUR ,RCSe ) ) * CS ) ) ),( ( Min( MLU ,( MUR + Max( RRSe,MUM ) ) ) - ( ( MUM / DS ) - Max( CS,( Max( DS,MUR ) / RMSe ) ) ) ) * ( CS * Max( ( RMSe / RMSe ),Max( RMSe,( ( RRSe * RCSe ) * ( RMSe / RCSe ) ) ) ) ) ) ) ,Max( MUC,RCSe ) )", "obj1": 0.33877551020408164, "obj2": 0.6558338082287835}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUC - DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8801038994553504}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MLU,( ( Min( ( ( CS / DS ) / DS ) ,( ( MUR / DS ) / DS ) ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8951219016037666}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / ( ( ( CS / DS ) / DS ) / DS ) ) / DS ) / RCSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.20204081632653062, "obj2": 0.7848063687396547}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( MUM + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8425465551650478}, {"determining": "( DDR / ( ( DDR + MDR ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( Max( ( CS / DS ),DS ) / ( ( ( MUR / DS ) / DS ) + DS ) ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( DDR + MDR ) * ( ( MRS - FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUR / DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.8655315629710659}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / MRS ) * Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,BR ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.09591836734693877, "obj2": 0.8785816175348508}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( ( ( ACS / FirstVNF_RAM_Server ) + ( Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) * BR ) ) / FirstVNF_Mem ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,Min( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.21020408163265306, "obj2": 0.7780363488413714}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) / CRS ) ) ,( FirstVNF_RAM + ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,( MRS / BR ) ) * BR ) ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ) ) / ( MUC + DS ) )", "obj1": 0.38979591836734695, "obj2": 0.5940779623235323}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( FirstVNF_RAM / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / ( MUC + DS ) ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( PN + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( BR ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) + DS ) / RRSe ) - Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,( MRS / CRS ) ) ,( FirstVNF_RAM + ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_RAM_Server ,( MRS / BR ) ) * BR ) ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.4204081632653061, "obj2": 0.5601801569182145}, {"determining": "( ( BR + RRS ) / ( DDR + MDR ) )", "choosing": "( ( ( Min( ( ( CS / DS ) / DS ) ,DS ) / DS ) / ( ( ( Max( ( CS / DS ),DS ) / DS ) / MUM ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.40816326530612246, "obj2": 0.5737373813987009}, {"determining": "( Max( Const,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( CRS ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( ( MUC / ( ( ( Max( ( CS / DS ),DS ) / DS ) / MUM ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.42244897959183675, "obj2": 0.5601156254174202}, {"determining": "( ( BR / RRS ) / Max( DDR,DDR ) )", "choosing": "( ( MUC / ( ( ( Max( ( MUM / DS ),DS ) / DS ) / MUM ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.4346938775510204, "obj2": 0.5416265526320045}], "49": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + FirstVNF_Mem_Server ) ,( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( MUC / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.08775510204081632, "obj2": 0.8857126247324862}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( ( ( ( MUR / DS ) / DS ) + DS ) / DS ) / RRSe ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( CS / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / Max( ( ( CS / RCSe ) / DS ),RMSe ) ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.21836734693877552, "obj2": 0.7380749558349305}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.09591836734693877, "obj2": 0.8785816175348508}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( CS / RCSe ),DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / MDR ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / RRSe ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.1469387755102041, "obj2": 0.817289150744091}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / ARS ) * Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + RRSe ) )", "obj1": 0.16326530612244897, "obj2": 0.8070638235692982}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,Min( ( ( ( ( CS / DS ) / MLU ) / DS ) / DS ) ,RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.09183673469387756, "obj2": 0.883732481067694}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUC - DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8801038994553504}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MLU,( ( Min( ( ( CS / DS ) / DS ) ,( ( MUR / DS ) / DS ) ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8951219016037666}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( MUM + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8425465551650478}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / MRS ) * Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,BR ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.09591836734693877, "obj2": 0.8785816175348508}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( FirstVNF_RAM / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / ( MUC + DS ) ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( PN + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( BR ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) + DS ) / RRSe ) - Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( ( MRS + FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( DS / DS ) / DS ) + MLU ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11632653061224489, "obj2": 0.852742672200986}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * ( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / Max( ( ( CS / RRSe ) / DS ),RMSe ) ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.9023872688974387}, {"determining": "( Max( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ),FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Min( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RCSe ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( FirstVNF_RAM_Server / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.14081632653061224, "obj2": 0.832030629220436}, {"determining": "( ( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM * RRS ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM + ACS ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) - DS ) / ( ( ( CS / DS ) / DS ) / DS ) ) / DS ) / RCSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.16938775510204082, "obj2": 0.8010493934641569}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( Min( ( FirstVNF_RAM + ACS ) ,( MRS / CRS ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / ( ( CS / DS ) / DS ) ) / ( ( ( CS / DS ) / DS ) / DS ) ) / DS ) / RCSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( ( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / ( ( ( CS / DS ) / DS ) / DS ) ) / DS ) / RCSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.16938775510204082, "obj2": 0.8010493934641569}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / RCSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( MUC + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09795918367346938, "obj2": 0.8701141712691879}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / ( CS / DS ) ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / Min( BR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) + MUC ) )", "obj1": 0.09183673469387756, "obj2": 0.883732481067694}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.09183673469387756, "obj2": 0.883732481067694}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ACS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) + DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Min( FirstVNF_Mem ,RRS ) + ( DDR - MRS ) ) * ( Min( CRS ,Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / MUM ) / DS ) / DS ) / Min( ( CS / DS ) ,DS ) ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.2571428571428571, "obj2": 0.7237612517481118}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / CS ) ) / ( CS + DS ) )", "obj1": 0.1469387755102041, "obj2": 0.817289150744091}, {"determining": "( ( ARS + RRS ) * ( CRS * RRS ) )", "choosing": "( ( MUM + Min( MUM ,RCSe ) ) / ( ( Max( Max( RCSe,DS ),Min( Max( ( MUM * MLU ),MUM ) ,DS ) ) * ( Max( RMSe,DS ) + MUC ) ) / RCSe ) )", "obj1": 0.2510204081632653, "obj2": 0.7358655094730538}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Min( ( ( MUC / DS ) / DS ) ,RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( ( ( CS / RCSe ) / DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( Max( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( ( Max( Max( ( CS / RCSe ),DS ),RMSe ) / DS ) / RRSe ) ,Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.19591836734693877, "obj2": 0.7921373345130774}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUC / DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09387755102040816, "obj2": 0.8801038994553504}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RMSe ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.17142857142857143, "obj2": 0.7925392334763348}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + DDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.10408163265306122, "obj2": 0.8609779137218752}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.20816326530612245, "obj2": 0.7500992097388618}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / MRS ) * Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,BR ) ) ) )", "choosing": "( Max( MLU,( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.09183673469387756, "obj2": 0.883732481067694}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( ( ARS - MRS ) + ACS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "( Min( FirstVNF_Mem ,RRS ) + ( ARS - MRS ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "Min( ( FirstVNF_RAM_Server / MRS ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.19795918367346937, "obj2": 0.7634772977580581}, {"determining": "( Max( Min( ACS ,FirstVNF_Mem_Server ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( Min( BR ,( MRS / CRS ) ) * ( FirstVNF_RAM + Max( ( MRS / FirstVNF_RAM_Server ),( Min( BR ,( MRS / BR ) ) + FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( CS / RCSe ) / MUR ),RMSe ) / DS ) / RRSe ) - Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.16122448979591836, "obj2": 0.8171309144212573}], "50": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + FirstVNF_Mem_Server ) ,( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( MUC / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.08775510204081632, "obj2": 0.8857126247324862}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( CS / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.21836734693877552, "obj2": 0.7380749558349305}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( MUM / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / MDR ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / RRSe ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.1469387755102041, "obj2": 0.817289150744091}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / ARS ) * Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + RRSe ) )", "obj1": 0.16326530612244897, "obj2": 0.8070638235692982}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MLU,( ( Min( ( ( CS / DS ) / DS ) ,( ( MUR / DS ) / DS ) ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8951219016037666}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( MUM + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8425465551650478}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( ( MRS + FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( DS / DS ) / DS ) + MLU ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11632653061224489, "obj2": 0.852742672200986}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.14081632653061224, "obj2": 0.832030629220436}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / RCSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( MUC + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09795918367346938, "obj2": 0.8701141712691879}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / ( CS / DS ) ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - ACS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) + DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Min( FirstVNF_Mem ,RRS ) + ( DDR - MRS ) ) * ( Min( CRS ,Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) * BR ) ) ) )", "choosing": "( Max( RCSe,( ( ( ( ( DS / MUM ) / DS ) / DS ) / Min( ( CS / DS ) ,DS ) ) + RRSe ) ) / ( MUC + DS ) )", "obj1": 0.2571428571428571, "obj2": 0.7237612517481118}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / CS ) ) / ( CS + DS ) )", "obj1": 0.1469387755102041, "obj2": 0.817289150744091}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / DS ) / RMSe ) / RRSe ) ) / ( RCSe + DS ) )", "obj1": 0.17142857142857143, "obj2": 0.7925392334763348}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + DDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.10408163265306122, "obj2": 0.8609779137218752}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / RCSe ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.20816326530612245, "obj2": 0.7500992097388618}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( ( ARS - MRS ) + ACS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "( Min( FirstVNF_Mem ,RRS ) + ( ARS - MRS ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "Min( ( FirstVNF_RAM_Server / MRS ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.19795918367346937, "obj2": 0.7634772977580581}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + RRSe ) )", "obj1": 0.16326530612244897, "obj2": 0.8070638235692982}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( CRS / FirstVNF_RAM ) ) * Min( BR ,( MRS / CRS ) ) ) ) ) )", "choosing": "( Max( DS,( Max( ( ( MUC / DS ) / DS ),DS ) / RRSe ) ) / Min( MUC ,DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8857126247324862}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + FirstVNF_Mem_Server ) ,( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) ) )", "choosing": "( Max( MUM,( ( ( ( MUC / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.09183673469387756, "obj2": 0.878907593431583}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.15918367346938775, "obj2": 0.8080288581091717}, {"determining": "( ( ( FirstVNF_RAM + RRS ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM + ACS ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) / RCSe ),Min( ( ( MUC / DS ) / DS ) ,RRSe ) ) / ( MUC + DS ) )", "obj1": 0.13673469387755102, "obj2": 0.8405447140733069}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( Const ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( DS / DS ) / DS ) / MUR ) / RRSe ),( ( ( ( ( MUR / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( RRS - CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( RCSe / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( DS,( ( ( ( MUC + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8425465551650478}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1673469387755102, "obj2": 0.7992787215812724}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( ( ARS - MRS ) + ACS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( ( CRS * RRS ) / ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / DS ) / DS ) / Min( Max( ( MUM * MLU ),MUM ) ,DS ) ) / RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.1, "obj2": 0.8688792336296919}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.14081632653061224, "obj2": 0.832030629220436}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.15918367346938775, "obj2": 0.8080288581091717}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / ARS ) * Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + RRSe ) )", "obj1": 0.16326530612244897, "obj2": 0.8070638235692982}, {"determining": "Min( Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server + DDR ) ) ,( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( RMSe,Min( ( ( ( ( CS / DS ) / MLU ) / DS ) / DS ) ,RRSe ) ) / ( MUC + MUC ) )", "obj1": 0.08979591836734693, "obj2": 0.883884588251434}, {"determining": "( FirstVNF_RAM_Server / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.14081632653061224, "obj2": 0.832030629220436}, {"determining": "( FirstVNF_RAM_Server / Min( ( AMS / FirstVNF_RAM_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( RRSe / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8936887748785548}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8746884426684222}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.2163265306122449, "obj2": 0.7479021097642939}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / ARS ) * Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8880510240693406}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ) / ( MUC + RRSe ) )", "obj1": 0.16326530612244897, "obj2": 0.8070638235692982}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MRS,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MLU,( ( ( ( CS / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( CS / DS ) / RRSe ) / RCSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / Min( FirstVNF_RAM_Server ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( MUC,( ( ( RRSe / DS ) / DS ) / RRSe ) ) / ( MUC + RMSe ) )", "obj1": 0.1836734693877551, "obj2": 0.7677856637653496}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) * ( FirstVNF_RAM - DDR ) ) / ( FirstVNF_RAM_Server / ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( Min( ( ( DS / DS ) / DS ) ,DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.22244897959183674, "obj2": 0.7319647287310259}], "51": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( CS / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MLU,( ( Min( ( ( CS / DS ) / DS ) ,( ( MUR / DS ) / DS ) ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8951219016037666}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( MUM + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8425465551650478}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( ( MRS + FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( DS / DS ) / DS ) + MLU ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11632653061224489, "obj2": 0.852742672200986}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.14081632653061224, "obj2": 0.832030629220436}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / RCSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( MUC + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09795918367346938, "obj2": 0.8701141712691879}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + DDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( ( MUC / ( ( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + MUM ) )", "obj1": 0.10408163265306122, "obj2": 0.8609779137218752}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( Const ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( DS / DS ) / DS ) / MUR ) / RRSe ),( ( ( ( ( MUR / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( RRS - CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( RCSe / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( DS,( ( ( ( MUC + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8425465551650478}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( ( ARS - MRS ) + ACS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.14081632653061224, "obj2": 0.832030629220436}, {"determining": "( FirstVNF_RAM_Server / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU ) ) * BR ) ) ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.14081632653061224, "obj2": 0.832030629220436}, {"determining": "( FirstVNF_RAM_Server / Min( ( AMS / FirstVNF_RAM_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( RRSe / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8936887748785548}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8746884426684222}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MRS,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MLU,( ( ( ( CS / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( CS / DS ) / RRSe ) / RCSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( Max( CS,DS ) / DS ) / CS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1306122448979592, "obj2": 0.8350045790789167}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( CS / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( DS,( ( ( ( RCSe + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8425465551650478}, {"determining": "( Min( FirstVNF_Mem ,RRS ) + ( ARS - MRS ) )", "choosing": "( Max( DS,( ( ( ( MUC + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8425465551650478}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( ARS ,MDR ) * ( ( MRS / ARS ) * Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8746884426684222}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS / CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8779103233588729}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Max( FirstVNF_Mem_Server,( MRS / CRS ) ) ,( MRS / CRS ) ) - DDR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( CS - DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.14081632653061224, "obj2": 0.832030629220436}, {"determining": "( FirstVNF_RAM_Server / ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( RRS / FirstVNF_CPU ) ) * BR ) ) ) ) )", "choosing": "( Max( RCSe,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.14081632653061224, "obj2": 0.832030629220436}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,RRS ) ) )", "choosing": "( Max( DS,( ( ( ( ( DS / DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11632653061224489, "obj2": 0.852742672200986}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + DDR ) ) / Min( ( BR * ( MRS / CRS ) ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( MUC * DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.14081632653061224, "obj2": 0.832030629220436}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( CS / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + FirstVNF_RAM ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( CS / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( Max( ( BR - FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / ( ( MUR / DS ) / DS ) ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8848378765178284}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( CS / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( MUC + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.09795918367346938, "obj2": 0.8701141712691879}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) * DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( ( MRS / FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS * ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,( ( ( ( ( DS / DS ) / DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11632653061224489, "obj2": 0.852742672200986}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( FirstVNF_RAM_Server / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( DS,( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( DS,( ( ( ( MUC + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12857142857142856, "obj2": 0.8425465551650478}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( FirstVNF_RAM_Server / Min( ( AMS / FirstVNF_RAM_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( RRSe / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8936887748785548}, {"determining": "( ( ( FirstVNF_RAM + RRS ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM + ACS ) ,( MRS / CRS ) ) * BR ) ) ) )", "choosing": "( Max( MUC,( ( ( ( CS / DS ) / RRSe ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12040816326530612, "obj2": 0.8460558890795327}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR - ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC - RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( ( MRS + FirstVNF_RAM_Server ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( DS / DS ) / DS ) + MLU ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11428571428571428, "obj2": 0.8538855471111255}], "52": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS / Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / CS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MLU,( ( Min( ( ( CS / DS ) / DS ) ,( ( MUR / DS ) / DS ) ) / DS ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8951219016037666}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / RCSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( Const ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( DS / DS ) / DS ) / MUR ) / RRSe ),( ( ( ( ( MUR / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( RRS - CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( RCSe / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( ( ARS - MRS ) + ACS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( FirstVNF_RAM_Server / Min( ( AMS / FirstVNF_RAM_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( RRSe / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8936887748785548}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS / CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8779103233588729}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Max( FirstVNF_Mem_Server,( MRS / CRS ) ) ,( MRS / CRS ) ) - DDR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( CS - DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( ( BR - FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / ( ( MUR / DS ) / DS ) ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8848378765178284}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) * DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( FirstVNF_RAM_Server / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( DS,( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( FirstVNF_RAM_Server / Min( ( AMS / FirstVNF_RAM_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( RRSe / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8936887748785548}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR - ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC - RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( FirstVNF_RAM_Server / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( MUC + DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_Mem_Server ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( RRSe / MLU ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8936887748785548}, {"determining": "( FirstVNF_RAM_Server / Min( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) + DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( FirstVNF_RAM_Server / Min( ( AMS / FirstVNF_RAM_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( RRSe / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8936887748785548}, {"determining": "( FirstVNF_RAM_Server / Min( Min( CRS ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) + DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( MDR - ( FirstVNF_RAM + DDR ) ) / Min( ( BR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( Max( ( ( CS / DS ) / DS ),DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / MUR ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8779103233588729}, {"determining": "( Max( Min( BR ,FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( Min( ( ( ( MUC + DS ) / DS ) / DS ) ,( ( MUR / DS ) / DS ) ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8848378765178284}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / MUC ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) / DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( RRSe / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8936887748785548}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MDR / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( RCSe + DS ) + DS ) / DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ) )", "choosing": "( Min( DS ,( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM * ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( RRSe,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( MRS / CRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / ( MUC / DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( BR / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( Max( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( Min( ( ( CS / DS ) / DS ) ,( ( MUR / DS ) / DS ) ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07551020408163266, "obj2": 0.8951219016037666}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( RRS - CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( RCSe / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / RRSe ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( AMS / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) + DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( Max( MUM,DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( DDR / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / MUC ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9060616751335445}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) + ( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / RCSe ) / DS ) / RRSe ),( RRSe / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8936887748785548}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}], "53": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / RCSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( ( ARS - MRS ) + ACS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS / CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8779103233588729}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Max( FirstVNF_Mem_Server,( MRS / CRS ) ) ,( MRS / CRS ) ) - DDR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( CS - DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) * DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( FirstVNF_RAM_Server / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( DS,( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( FirstVNF_RAM_Server / Min( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) + DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( MDR - ( FirstVNF_RAM + DDR ) ) / Min( ( BR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( Max( ( ( CS / DS ) / DS ),DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / MUR ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8779103233588729}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) / DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ) )", "choosing": "( Min( DS ,( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM * ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( RRSe,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( BR / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( AMS / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) + DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( Max( MUM,DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Max( ( BR - FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / FirstVNF_RAM_Server )", "choosing": "( Max( MUC,( ( ( MUC + MLU ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11632653061224489, "obj2": 0.8547034980660945}, {"determining": "( Max( ( BR - FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM / DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / ( ( MUR / DS ) / DS ) ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1306122448979592, "obj2": 0.8449996706037198}, {"determining": "( FirstVNF_RAM_Server / ( FirstVNF_RAM + RRS ) )", "choosing": "( Max( DS,( ( ( ( ( CS / DS ) / ( ( CS / DS ) / DS ) ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.17755102040816326, "obj2": 0.7987104052927048}, {"determining": "( FirstVNF_RAM_Server * Min( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) + DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.3306122448979592, "obj2": 0.6720267541220514}, {"determining": "( FirstVNF_RAM_Server / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / ( ( ( CS / DS ) / DS ) / DS ) ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.22244897959183674, "obj2": 0.755979422706488}, {"determining": "( FirstVNF_RAM_Server / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * Min( MRS ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) ) / ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) )", "obj1": 0.3877551020408163, "obj2": 0.5981226873699504}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( PN / FirstVNF_RAM_Server ) * ( Min( Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( ( ( ( ( CS / DS ) / DS ) / DS ) + DS ) / RRSe ) )", "obj1": 0.4142857142857143, "obj2": 0.5636960672632831}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MLU,( ( Min( ( ( CS / DS ) / DS ) ,( ( MUR / DS ) / DS ) ) / ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ) * RRSe ) ) / ( MUC + DS ) )", "obj1": 0.35714285714285715, "obj2": 0.6274325357509495}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / RCSe ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( DS / DS ) / DS ) + DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.13877551020408163, "obj2": 0.8319290600878274}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( AMS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) / DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Min( ( DDR + FirstVNF_CPU ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) / DS ) + DS ) / MUC ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( Max( ( ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) - FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,RRS ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( DS / DS ) / DS ) / ( ( MUR / DS ) / DS ) ) / DS ) / RCSe ) ) / ( MUC + DS ) )", "obj1": 0.1816326530612245, "obj2": 0.7921179649138864}, {"determining": "( Max( ( BR - FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / ( Min( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / ( ( MUR / DS ) / DS ) ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1306122448979592, "obj2": 0.8449996706037198}, {"determining": "( Min( BR ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( DDR / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07755102040816327, "obj2": 0.8923222257360495}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / Min( ( ( FirstVNF_RAM / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) ) + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( DDR / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / MUC ) / DS ) / DS ) + RRSe ) ) / ( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) )", "obj1": 0.17551020408163265, "obj2": 0.7993371166096914}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / MRS ) * ( Min( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM + RRS ) / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / ( ( ( CS / DS ) / DS ) / DS ) ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.20408163265306123, "obj2": 0.7830627424012625}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / ( ( CS / DS ) / DS ) ) ) / ( MUC + DS ) )", "obj1": 0.17755102040816326, "obj2": 0.7987104052927048}, {"determining": "Min( ( DDR - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RRSe + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( FirstVNF_RAM_Server / ( ( BR / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( DS,( Max( ( ( ( MUC / DS ) + MLU ) + DS ),DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12244897959183673, "obj2": 0.8497420438728908}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( ( MRS / ( DDR + MDR ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( RRSe / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( FirstVNF_RAM_Server / Min( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( FirstVNF_CPU / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) * DDR ) ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( DS,( Min( Min( ( DS / DS ) ,DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.3306122448979592, "obj2": 0.6720267541220514}, {"determining": "( FirstVNF_RAM_Server / Min( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * PN ) ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( DS,( Min( ( ( Min( CS ,DS ) / DS ) + DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.3510204081632653, "obj2": 0.6485478981003484}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( ( BR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),BR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS - DS ) / DS ) * RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10816326530612246, "obj2": 0.8603132389077407}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( Const + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUR + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / ( ( ( CS / DS ) / DS ) / DS ) ) / DS ) / RRSe ),( RRSe / MLU ) ) / ( MUC + DS ) )", "obj1": 0.18979591836734694, "obj2": 0.7877349280499742}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11836734693877551, "obj2": 0.8537100896735482}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( ( AMS / FirstVNF_RAM_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( DS,( ( ( ( CS - DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10816326530612246, "obj2": 0.8603132389077407}], "54": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / RCSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( ( ARS - MRS ) + ACS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS / CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8779103233588729}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Max( FirstVNF_Mem_Server,( MRS / CRS ) ) ,( MRS / CRS ) ) - DDR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( CS - DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) * DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( FirstVNF_RAM_Server / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( DS,( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( FirstVNF_RAM_Server / Min( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) + DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( MDR - ( FirstVNF_RAM + DDR ) ) / Min( ( BR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( Max( ( ( CS / DS ) / DS ),DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / MUR ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8779103233588729}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) / DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ) )", "choosing": "( Min( DS ,( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM * ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( RRSe,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( BR / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( MUC,( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( AMS / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) + DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( Max( MUM,DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Max( ( BR - FirstVNF_Mem_Server ),Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / FirstVNF_RAM_Server )", "choosing": "( Max( MUC,( ( ( MUC + MLU ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11632653061224489, "obj2": 0.8547034980660945}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( ( Min( BR ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / Max( Min( BR ,FirstVNF_Mem_Server ),( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / RCSe ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( AMS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) / DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Min( ( DDR + FirstVNF_CPU ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) / DS ) + DS ) / MUC ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( Min( BR ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( DDR / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07755102040816327, "obj2": 0.8923222257360495}, {"determining": "Min( ( DDR - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RRSe + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( FirstVNF_RAM_Server / ( ( BR / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( DS,( Max( ( ( ( MUC / DS ) + MLU ) + DS ),DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.12244897959183673, "obj2": 0.8497420438728908}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( ( MRS / ( DDR + MDR ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( RRSe / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( Const + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUR + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11836734693877551, "obj2": 0.8537100896735482}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( FirstVNF_RAM_Server / ( AMS * ( ( BR / FirstVNF_Mem_Server ) / ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "( Max( ( ( ( MUM - RMSe ) + DS ) / DS ),( ( ( ( Max( CS,RRSe ) / MUC ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MRS ) * ( ( MRS / FirstVNF_RAM_Server ) * Max( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ),BR ) ) ) )", "choosing": "( Max( DS,( ( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11836734693877551, "obj2": 0.8537100896735482}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_RAM_Server ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8859069008111964}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( DDR - BR ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - RRSe ) / DS ) / DS ) / RRSe ),( ( Min( ( CS / DS ) ,( MUC + RMSe ) ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11836734693877551, "obj2": 0.8537100896735482}, {"determining": "( Max( ( ( Min( BR ,FirstVNF_Mem_Server ) + Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) / Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ) ),FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( Min( ( ( CS / DS ) / DS ) ,( ( MUR / DS ) / DS ) ) / ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) ) * RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS - FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) + DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) - RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / CS ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,Max( ( MRS / FirstVNF_RAM_Server ),( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( ( MRS / ( DDR + MDR ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( RRSe / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}, {"determining": "( FirstVNF_RAM_Server / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) * ( BR * Min( BR ,( MRS / CRS ) ) ) ) )", "choosing": "( Max( DS,( Max( ( ( MUC / DS ) + DS ),DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10816326530612246, "obj2": 0.8564636549166973}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( DS,( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / RRSe ) ),( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( MUC / DS ) + DS ) + DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08163265306122448, "obj2": 0.8851625977321604}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( PN / FirstVNF_RAM_Server ) * ( Min( Min( Min( BR ,FirstVNF_CPU_Server ) ,( FirstVNF_RAM + RRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( RRSe / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8990213794587874}], "55": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / RCSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS / CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8779103233588729}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Max( FirstVNF_Mem_Server,( MRS / CRS ) ) ,( MRS / CRS ) ) - DDR ) ) ) )", "choosing": "( Max( MUM,( ( ( ( CS - DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( DDR,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) * DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( FirstVNF_RAM_Server / Min( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ,( FirstVNF_RAM + RRS ) ) )", "choosing": "( Max( DS,( Min( ( ( ( CS / DS ) / DS ) + DS ) ,DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( MDR - ( FirstVNF_RAM + DDR ) ) / Min( ( BR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( Max( ( ( CS / DS ) / DS ),DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / MUR ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8779103233588729}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) / DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM * ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( RRSe,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( AMS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) / DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / Min( ( DDR + FirstVNF_CPU ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) / DS ) + DS ) / MUC ) / DS ) / RRSe ) ) / ( MUC - DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "Min( ( DDR - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RRSe + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( Const + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUR + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / ( AMS * ( ( BR / FirstVNF_Mem_Server ) / ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "( Max( ( ( ( MUM - RMSe ) + DS ) / DS ),( ( ( ( Max( CS,RRSe ) / MUC ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS - FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) + DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) - RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / CS ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,Max( ( MRS / FirstVNF_RAM_Server ),( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( Max( FirstVNF_RAM_Server,MRS ) / Min( ( DDR + Max( FirstVNF_RAM,ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / MRS ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / RMSe ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe - MLU ) ) / DS ) / DS ) / DS ) / ( ( Max( CS,DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( DDR / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / ( ( ( DS / DS ) / DS ) / DS ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( ( MRS / ( DDR + MDR ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Max( DDR,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,( ( Min( ( ( CS * DS ) / DS ) ,RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_RAM_Server ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.11224489795918367, "obj2": 0.8536409129392302}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8963914843446267}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR * MDR ) ,Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Min( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ) ,( ( ( ( ( CS / MUR ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( ( BR / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + ( MUC + DS ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8837833333992953}, {"determining": "( FirstVNF_RAM_Server / ( AMS / ( Min( BR ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / RMSe ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( MUM - DS ) + DS ) / DS ),( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( FirstVNF_RAM_Server / Min( ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + RRSe ) )", "obj1": 0.10816326530612246, "obj2": 0.8557302496947408}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0836734693877551, "obj2": 0.8829430682813576}, {"determining": "( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( ( BR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( Min( Max( FirstVNF_Mem_Server,( MRS / CRS ) ) ,( MRS / CRS ) ) - FirstVNF_Mem_Server ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) + DS ) / DS ) / ( ( ( CS - DS ) / DS ) / RRSe ) ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_RAM_Server ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) ,DDR ) ) ) )", "choosing": "( Max( DS,( Min( ( ( CS / DS ) / DS ) ,RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( Max( ( ( CS / DS ) + DS ),DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_RAM_Server ) ) ) ) ) ,( Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( MUC / DS ) + DS ) + DS ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8895051177110489}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) / DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / AMS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( ( ( DS / DS ) / DS ) + DS ) / DS ) / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.1, "obj2": 0.8665134784442885}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( MRS / ( DDR + MDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( ( ( CS / DS ) / DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.10204081632653061, "obj2": 0.8638573152308517}], "56": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS / CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / MLU ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8779103233588729}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( Const / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( ( MDR - ( FirstVNF_RAM + DDR ) ) / Min( ( BR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( Max( ( ( CS / DS ) / DS ),DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / MUR ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.08775510204081632, "obj2": 0.8779103233588729}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM * ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( RRSe,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "Min( ( DDR - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RRSe + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( Const + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUR + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / ( AMS * ( ( BR / FirstVNF_Mem_Server ) / ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "( Max( ( ( ( MUM - RMSe ) + DS ) / DS ),( ( ( ( Max( CS,RRSe ) / MUC ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS - FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) + DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) - RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / CS ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( Max( FirstVNF_RAM_Server,MRS ) / Min( ( DDR + Max( FirstVNF_RAM,ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / MRS ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / RMSe ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe - MLU ) ) / DS ) / DS ) / DS ) / ( ( Max( CS,DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM ) * Min( FirstVNF_Mem_Server ,( DDR / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / ( ( ( DS / DS ) / DS ) / DS ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( ( MRS / ( DDR + MDR ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Max( DDR,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,( ( Min( ( ( CS * DS ) / DS ) ,RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8963914843446267}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR * MDR ) ,Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Min( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ) ,( ( ( ( ( CS / MUR ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( ( BR / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + ( MUC + DS ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8837833333992953}, {"determining": "( FirstVNF_RAM_Server / ( AMS / ( Min( BR ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM + RRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / RMSe ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( MUM - DS ) + DS ) / DS ),( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0836734693877551, "obj2": 0.8829430682813576}, {"determining": "( FirstVNF_RAM_Server / ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( ( BR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) )", "choosing": "( Max( MUC,( ( ( ( Max( CS,DS ) / DS ) / CS ) / DS ) / RRSe ) ) / ( CS + DS ) )", "obj1": 0.09591836734693877, "obj2": 0.8674829342319306}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( Min( Max( FirstVNF_Mem_Server,( MRS / CRS ) ) ,( MRS / CRS ) ) - FirstVNF_Mem_Server ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) + DS ) / DS ) / ( ( ( CS - DS ) / DS ) / RRSe ) ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_RAM_Server ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( Max( ( ( CS / DS ) + DS ),DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_RAM_Server ) ) ) ) ) ,( Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( MUC / DS ) + DS ) + DS ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8895051177110489}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / MLU ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / ( FirstVNF_Mem_Server * ( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / MUM ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( RRS ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / ( ( ( DS / RRSe ) / DS ) + DS ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS - FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / FirstVNF_RAM_Server ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) - ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / FirstVNF_RAM_Server ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / MUM ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "Min( ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / ( ( ( CS - DS ) / ( MUC + DS ) ) / RRSe ) ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM + ACS ) / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( DS + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_CPU_Server ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( Max( ( ( MUC + DS ) / DS ),DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + Max( FirstVNF_RAM,ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / MRS ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / ( ( ( CS - DS ) / DS ) / RRSe ) ) / RRSe ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.08571428571428572, "obj2": 0.8824620844678176}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS / CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / Max( FirstVNF_RAM_Server,MRS ) ) ,( ( MRS - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( ACS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( MUC * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0836734693877551, "obj2": 0.8829430682813576}, {"determining": "( FirstVNF_RAM_Server / Min( ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / DDR ) ) * DDR ) ,( ( DDR + Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / PN ) ) ) + ACS ) ) )", "choosing": "( ( ( ( ( ( ( DS / DS ) / DS ) - DS ) / DS ) / DS ) / RRSe ) / ( CS + RRSe ) )", "obj1": 0.08979591836734693, "obj2": 0.8729470769475131}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}], "57": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( Const + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUR + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS - FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) + DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) - RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / CS ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,MRS ) / Min( ( DDR + Max( FirstVNF_RAM,ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / MRS ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / RMSe ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe - MLU ) ) / DS ) / DS ) / DS ) / ( ( Max( CS,DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Max( DDR,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,( ( Min( ( ( CS * DS ) / DS ) ,RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8963914843446267}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR * MDR ) ,Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Min( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ) ,( ( ( ( ( CS / MUR ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( ( BR / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( MUM - DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + ( MUC + DS ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8837833333992953}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0836734693877551, "obj2": 0.8829430682813576}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_RAM_Server ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( Max( ( ( CS / DS ) + DS ),DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_RAM_Server ) ) ) ) ) ,( Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( MUC / DS ) + DS ) + DS ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8895051177110489}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / MLU ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / ( FirstVNF_Mem_Server * ( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / MUM ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS - FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / FirstVNF_RAM_Server ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) - ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / FirstVNF_RAM_Server ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / MUM ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( MRS / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS / CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / Max( FirstVNF_RAM_Server,MRS ) ) ,( ( MRS - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( ACS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( MUC * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( Max( ( CS / DS ),DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0836734693877551, "obj2": 0.8829430682813576}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / RRS ) ) ) ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( DDR / FirstVNF_RAM_Server ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / RMSe ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / PN ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) + DS ) / DS ) / DS ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( ( BR / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) * Min( FirstVNF_RAM ,( MRS / CRS ) ) ) ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( Min( MUM ,DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + ( MUC + DS ) ) )", "obj1": 0.08163265306122448, "obj2": 0.8837833333992953}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_RAM_Server ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ( MRS / CRS ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_RAM_Server ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / Max( FirstVNF_RAM_Server,MRS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( MUC * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0836734693877551, "obj2": 0.8829430682813576}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,Max( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( AMS / FirstVNF_RAM_Server ) ),( Min( FirstVNF_Mem_Server ,( ( FirstVNF_RAM + ACS ) / ( DDR + MDR ) ) ) + FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0836734693877551, "obj2": 0.8829430682813576}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * DDR ) ,( AMS / FirstVNF_RAM_Server ) ) / Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( DS + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( RMSe + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / ( ( Max( CS,DS ) / DS ) / CS ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( AMS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_RAM_Server ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( CS + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,MDR ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( ( CS + DS ) / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / FirstVNF_RAM_Server ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS - ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( FirstVNF_RAM_Server / ( AMS * Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / FirstVNF_RAM_Server ) ) ) ,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / ( ( ( CS / ( ( MUM - DS ) + DS ) ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( FirstVNF_Mem + ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / FirstVNF_RAM_Server ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / ( ( ( CS / MUM ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9032131923830573}, {"determining": "( FirstVNF_RAM_Server / Min( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + DS ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + ACS ) ) )", "choosing": "( Max( ( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / RRSe ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07959183673469387, "obj2": 0.8854581068274581}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_CPU_Server ,( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / RCSe ) / DS ) / DS ) / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}], "58": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) - RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / CS ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Max( DDR,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,( ( Min( ( ( CS * DS ) / DS ) ,RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8963914843446267}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR * MDR ) ,Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Min( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ) ,( ( ( ( ( CS / MUR ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( Max( ( ( CS / DS ) + DS ),DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( MRS / FirstVNF_RAM_Server ) ) ) ) ) ,( Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) * FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( MUC / DS ) + DS ) + DS ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + DS ) )", "obj1": 0.07755102040816327, "obj2": 0.8895051177110489}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) - DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / MLU ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / ( FirstVNF_Mem_Server * ( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / MUM ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / ( ( Max( CS,DS ) / DS ) / CS ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( FirstVNF_RAM_Server / Min( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + DS ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_CPU_Server ,( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / RCSe ) / DS ) / DS ) / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8963914843446267}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / DS ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / DS ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_RAM + ACS ) / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / ( AMS * Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / FirstVNF_RAM_Server ) ) ) ,MRS ) * ( MRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( MDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( MRS / FirstVNF_RAM_Server ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( Min( ( MRS / CRS ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / RRS ) ) ) ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / ( DDR / FirstVNF_RAM_Server ) ) ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / RMSe ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,MDR ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( ( CS + DS ) / ( DS / MLU ) ) / DS ) / DS ) / DS ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9028947941519575}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,MDR ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / DS ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / ( ( Max( CS,DS ) / DS ) / CS ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_CPU_Server ,( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / RCSe ) / DS ) / DS ) / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "Min( ( FirstVNF_RAM_Server - Min( ( MRS / PN ) ,( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) / RRS ) ) ) ) ) ,( AMS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) + DS ) / DS ) / DS ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( FirstVNF_CPU_Server ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_CPU_Server ,( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / RCSe ) / DS ) / DS ) / ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( ( BR / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) * Min( BR ,( MRS / CRS ) ) ) ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / ( AMS * Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}], "59": [{"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_RAM ) ,( RRS / FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) * ( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) - RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / CS ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Max( DDR,MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,( ( Min( ( ( CS * DS ) / DS ) ,RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8963914843446267}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR * MDR ) ,Min( ( MRS / FirstVNF_RAM_Server ) ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Min( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ) ,( ( ( ( ( CS / MUR ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( Max( ( ( CS / DS ) + DS ),DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.07551020408163266, "obj2": 0.8940046790841195}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + DS ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ) )", "choosing": "( Max( DS,( ( Max( ( ( ( MUC / DS ) + DS ) + DS ),DS ) / RRSe ) / DS ) ) / ( MUC + DS ) )", "obj1": 0.07142857142857142, "obj2": 0.8963914843446267}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_Mem_Server ,( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / DS ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / DS ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( ( FirstVNF_RAM + ACS ) / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( ( MUC + DS ) / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,MDR ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( ( CS + DS ) / ( DS / MLU ) ) / DS ) / DS ) / DS ) / ( ( ( CS / DS ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0673469387755102, "obj2": 0.9028947941519575}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + ( FirstVNF_RAM + ACS ) ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,MDR ) ,MRS ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / ( ( Max( CS,DS ) / DS ) / CS ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( FirstVNF_CPU_Server ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,FirstVNF_RAM_Server ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / ( DS / ( MUC + DS ) ) ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_CPU_Server ,( MRS / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / ( RRSe / MLU ) ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server / RRS ) ) ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( MUC + DS ) / DS ) / DS ) / DS ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Min( ( DDR + MDR ) ,( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) * DDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( ( ( MRS / FirstVNF_RAM_Server ) * ( Min( Min( FirstVNF_Mem_Server ,( MRS / CRS ) ) ,Max( MRS,BR ) ) * DDR ) ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + DS ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server / ( AMS * Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + RRS ) ) ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / DS ) / ( ( ( CS / ( DS / DS ) ) / DS ) + DS ) ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( ( MRS / CRS ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( FirstVNF_CPU_Server ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( DS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / Min( Min( FirstVNF_CPU_Server ,( MRS / CRS ) ) ,( MRS / CRS ) ) ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,( MRS / CRS ) ) ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( DS / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( FirstVNF_CPU_Server ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / ( ( Max( CS,DS ) / DS ) / CS ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( FirstVNF_RAM_Server / Min( Min( BR ,FirstVNF_Mem_Server ) ,( Min( Min( FirstVNF_CPU ,( MRS / CRS ) ) ,( MRS / CRS ) ) + RRS ) ) )", "choosing": "( Max( Max( MUC,( ( ( ( ( CS * DS ) / DS ) + RRSe ) / DS ) / RRSe ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ),( ( ( ( ( CS / DS ) / ( MUC + RMSe ) ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( ( DDR + MDR ) * ( ( MRS / FirstVNF_RAM_Server ) * ( Min( FirstVNF_Mem_Server ,( Max( MDR,( FirstVNF_RAM + DDR ) ) / Min( Min( BR ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) ) * BR ) ) ) )", "choosing": "( Max( ( ( ( ( ( DS / ( MUC + DS ) ) / DS ) / DS ) / DS ) / ( ( Max( CS,DS ) / DS ) / CS ) ),( ( ( ( ( CS / DS ) / DS ) / DS ) / DS ) / RRSe ) ) / ( MUC + MLU ) )", "obj1": 0.0653061224489796, "obj2": 0.9058906736204344}]}