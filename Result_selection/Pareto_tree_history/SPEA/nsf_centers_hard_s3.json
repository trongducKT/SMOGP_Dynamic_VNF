{"1": [{"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "( ( MUC + RMSe ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) - ( FirstVNF_CPU_Server / PN ) )", "choosing": "Max( ( RMSe + MUC ),Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "( ( RRSe * CS ) * ( RCSe + MUM ) )", "obj1": 0.7751605995717344, "obj2": 0.1845568561603132}, {"determining": "Min( Min( Const ,Const ) ,( MRS - CRS ) )", "choosing": "( Max( MUR,DS ) - ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,RRS ) * ( FirstVNF_Mem + PN ) )", "choosing": "Min( ( RMSe - MUM ) ,Min( MUC ,MLU ) )", "obj1": 0.683083511777302, "obj2": 0.26652661315602033}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * RRSe ) )", "obj1": 0.9079229122055674, "obj2": 0.09328660261463126}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) / Max( DDR,PN ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "Min( ( Max( ARS,PN ) / ( MDR * BR ) ) ,Min( ( FirstVNF_Mem_Server - FirstVNF_CPU ) ,( MRS / Const ) ) )", "choosing": "Min( Max( ( MUM + MUC ),Max( Max( RMSe,DS ),Min( ( Max( DS,MUC ) + CS ) ,RCSe ) ) ) ,( ( MLU - RCSe ) - ( MUR * RRSe ) ) )", "obj1": 0.8993576017130621, "obj2": 0.10141314460669582}, {"determining": "( Max( Max( FirstVNF_RAM_Server,BR ),DDR ) - ( FirstVNF_RAM_Server + BR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( RRSe / MUR ) ),( Max( MUC,RMSe ) * ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,Min( PN ,ARS ) ) * ( Max( MDR,FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "Min( Min( DS ,( RRSe * MLU ) ) ,Max( RRSe,( MUR + RMSe ) ) )", "obj1": 0.6937901498929336, "obj2": 0.2531707844278994}, {"determining": "( ( ( BR - Const ) / ( AMS - FirstVNF_RAM ) ) / ( ( MDR + BR ) / ( Const - DDR ) ) )", "choosing": "Max( ( RCSe - Min( ( MUC - CS ) ,RRSe ) ),( RRSe + ( RMSe * MUM ) ) )", "obj1": 0.8394004282655246, "obj2": 0.16666961647079745}, {"determining": "( Max( ( AMS - ACS ),DDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MUC ,MLU ),RRSe ) - ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( MDR - DDR ) + Min( ( RRS + ( RRS - ( ( MRS / RRS ) * FirstVNF_Mem ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - ( RRSe + ( Max( CS,MUM ) / MUM ) ) ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,ACS ) ,( MRS / ( ACS - ACS ) ) )", "choosing": "Max( ( RMSe + DS ),( ( RMSe - DS ) / DS ) )", "obj1": 0.7687366167023555, "obj2": 0.24942750310550116}, {"determining": "( ( Max( Const,( FirstVNF_Mem_Server - BR ) ) - ( MDR - FirstVNF_RAM ) ) * Min( ( BR * CRS ) ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "( ( CS + ( ( ( RMSe - RCSe ) * RCSe ) + MLU ) ) * ( ( RRSe + DS ) * MUC ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / Max( ( ( PN / FirstVNF_CPU ) * ( FirstVNF_CPU / MRS ) ),Max( ( PN + ACS ),( RRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / DS ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.26652661315602033}, {"determining": "( ( Min( ( FirstVNF_CPU / AMS ) ,( Const * PN ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_Mem / DDR ) ) ) / ( Min( ( AMS * CRS ) ,( Const * PN ) ) - Max( Min( MDR ,MRS ),( CRS / MDR ) ) ) )", "choosing": "( ( Min( Max( RCSe,MUM ) ,Min( MUM ,RMSe ) ) + Max( Min( RRSe ,MUR ),( MUM * RMSe ) ) ) + Max( Max( ( RRSe - CS ),Min( RMSe ,CS ) ),Max( Min( RMSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.21028335152636668}, {"determining": "( ( DDR * MDR ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUR ,RCSe ) / ( MUM - RRSe ) ) - ( ( MUR - RRSe ) - Min( RCSe ,MUC ) ) ) * ( ( Min( RCSe ,MUM ) / Max( MUC,MUC ) ) - Min( ( MUR * RRSe ) ,( CS / RMSe ) ) ) )", "obj1": 0.7580299785867237, "obj2": 0.25266845387140185}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) * Min( Min( CRS ,Const ) ,ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / ARS ) / Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( MUM / MUR ) * ( MUR / MUM ) ) ,( ( RRSe + MUR ) - Max( MLU,RRSe ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + Min( ( ( CS + ( Min( MUM ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( Const,Const ) ,Max( ACS,MDR ) ) / ( ( AMS - MDR ) * Max( RRS,MRS ) ) ) + ( ( ( PN - ACS ) / ( FirstVNF_Mem / ACS ) ) - Max( Max( ARS,ARS ),Max( MDR,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS - ( MLU * RRSe ) ) + ( RMSe + ( MLU + MUR ) ) ) + ( Min( MUM ,MUR ) - Max( CS,( RMSe / MUC ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.16883144539564693}, {"determining": "( Min( ( Max( MRS,FirstVNF_RAM ) * Min( MDR ,CRS ) ) ,( Min( RRS ,PN ) - Max( PN,FirstVNF_CPU_Server ) ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( Const / FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,Min( RRS ,AMS ) ) ) )", "choosing": "( ( RMSe - ( ( MUM - MUR ) / Min( MLU ,DS ) ) ) / ( Max( MUR,CS ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server / Const ) - ( RRS * AMS ) ) + ( Max( Const,RRS ) / Min( ARS ,RRS ) ) ) ,( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( MRS - ACS ) ) * ( ( MDR * FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( ( RRSe / MUC ) ,( RRSe - RCSe ) ) / Max( ( MLU * RCSe ),( MUM - MUM ) ) ) ,( ( ( DS - CS ) * ( MUC + RCSe ) ) * ( Min( CS ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - ACS ),Min( MDR ,FirstVNF_RAM ) ) - ( ( Const * MDR ) + Min( FirstVNF_Mem ,MRS ) ) ) * ( ( ( AMS + ACS ) / Min( FirstVNF_Mem_Server ,RRS ) ) / ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( CRS / MRS ) ) ) )", "choosing": "Min( ( ( MUM + ( MUM / MUM ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) - Min( Max( FirstVNF_RAM_Server,ARS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( ( ( RMSe - MUM ) / ( RMSe + DS ) ) * Max( ( CS * MUM ),Min( RMSe ,MUR ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.261120002760117}, {"determining": "( Max( ( Max( FirstVNF_RAM,PN ) + ( ACS + FirstVNF_CPU_Server ) ),Min( Max( CRS,MRS ) ,( FirstVNF_CPU_Server / AMS ) ) ) * ( ( ( CRS + ACS ) - ( BR * MDR ) ) - ( ( MDR / PN ) / ( AMS * AMS ) ) ) )", "choosing": "( ( ( DS - RCSe ) + MLU ) * Min( Max( RCSe,MUC ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "( ( MUC + RMSe ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) - ( FirstVNF_CPU_Server / PN ) )", "choosing": "Max( ( RMSe + MUC ),Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( MRS - CRS ) )", "choosing": "( Max( MUR,DS ) - ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * RRSe ) )", "obj1": 0.9079229122055674, "obj2": 0.09328660261463126}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) / Max( DDR,PN ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "Min( ( Max( ARS,PN ) / ( MDR * BR ) ) ,Min( ( FirstVNF_Mem_Server - FirstVNF_CPU ) ,( MRS / Const ) ) )", "choosing": "Min( Max( ( MUM + MUC ),Max( Max( RMSe,DS ),Min( ( Max( DS,MUC ) + CS ) ,RCSe ) ) ) ,( ( MLU - RCSe ) - ( MUR * RRSe ) ) )", "obj1": 0.8993576017130621, "obj2": 0.10141314460669582}, {"determining": "( Max( Max( FirstVNF_RAM_Server,BR ),DDR ) - ( FirstVNF_RAM_Server + BR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( RRSe / MUR ) ),( Max( MUC,RMSe ) * ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ACS ),DDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MUC ,MLU ),RRSe ) - ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( MDR - DDR ) + Min( ( RRS + ( RRS - ( ( MRS / RRS ) * FirstVNF_Mem ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - ( RRSe + ( Max( CS,MUM ) / MUM ) ) ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( FirstVNF_Mem_Server - BR ) ) - ( MDR - FirstVNF_RAM ) ) * Min( ( BR * CRS ) ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "( ( CS + ( ( ( RMSe - RCSe ) * RCSe ) + MLU ) ) * ( ( RRSe + DS ) * MUC ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) * Min( Min( CRS ,Const ) ,ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / ARS ) / Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( MUM / MUR ) * ( MUR / MUM ) ) ,( ( RRSe + MUR ) - Max( MLU,RRSe ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + Min( ( ( CS + ( Min( MUM ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,FirstVNF_RAM ) * Min( MDR ,CRS ) ) ,( Min( RRS ,PN ) - Max( PN,FirstVNF_CPU_Server ) ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( Const / FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,Min( RRS ,AMS ) ) ) )", "choosing": "( ( RMSe - ( ( MUM - MUR ) / Min( MLU ,DS ) ) ) / ( Max( MUR,CS ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server / Const ) - ( RRS * AMS ) ) + ( Max( Const,RRS ) / Min( ARS ,RRS ) ) ) ,( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( MRS - ACS ) ) * ( ( MDR * FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( ( RRSe / MUC ) ,( RRSe - RCSe ) ) / Max( ( MLU * RCSe ),( MUM - MUM ) ) ) ,( ( ( DS - CS ) * ( MUC + RCSe ) ) * ( Min( CS ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - ACS ),Min( MDR ,FirstVNF_RAM ) ) - ( ( Const * MDR ) + Min( FirstVNF_Mem ,MRS ) ) ) * ( ( ( AMS + ACS ) / Min( FirstVNF_Mem_Server ,RRS ) ) / ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( CRS / MRS ) ) ) )", "choosing": "Min( ( ( MUM + ( MUM / MUM ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) - Min( Max( FirstVNF_RAM_Server,ARS ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * ( ( ( RMSe - MUM ) / ( RMSe + DS ) ) * Max( ( CS * MUM ),Min( RMSe ,MUR ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.261120002760117}, {"determining": "( Max( ( Max( FirstVNF_RAM,PN ) + ( ACS + FirstVNF_CPU_Server ) ),Min( Max( CRS,MRS ) ,( FirstVNF_CPU_Server / AMS ) ) ) * ( ( ( CRS + ACS ) - ( BR * MDR ) ) - ( ( MDR / PN ) / ( AMS * AMS ) ) ) )", "choosing": "( ( ( DS - RCSe ) + MLU ) * Min( Max( RCSe,MUC ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / FirstVNF_RAM_Server ) ,( MRS - CRS ) )", "choosing": "( Max( MUR,DS ) - ( CS - ( ( RMSe - ( ( MUM - MUR ) / Min( MLU ,DS ) ) ) / ( Max( MUR,CS ) / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,FirstVNF_RAM ) * Min( MDR ,CRS ) ) ,( Min( RRS ,PN ) - Max( PN,FirstVNF_CPU_Server ) ) ) - Min( Const ,Const ) )", "choosing": "( ( ( Max( MUR,DS ) - ( CS - MUC ) ) - ( ( MUM - MUR ) / Min( MLU ,DS ) ) ) / ( Max( MUR,CS ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( MRS - CRS ) )", "choosing": "( ( RMSe - ( ( MUM - MUR ) / Min( MLU ,DS ) ) ) / ( Max( MUR,CS ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,FirstVNF_RAM ) * Min( MDR ,CRS ) ) ,( Min( RRS ,PN ) - Max( PN,FirstVNF_CPU_Server ) ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( Const / FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,Min( RRS ,AMS ) ) ) )", "choosing": "( Max( MUR,DS ) - ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - ACS ) / ( FirstVNF_Mem / ACS ) ) - Max( Max( ARS,ARS ),Max( MDR,FirstVNF_Mem ) ) ) - ( RRS + Const ) )", "choosing": "( ( DS + RMSe ) / Max( ( RMSe + ( MLU + MUR ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "Min( ( ( Max( FirstVNF_RAM,ACS ) + ( ACS / RRS ) ) + ( Max( Const,RRS ) / Min( ARS ,RRS ) ) ) ,( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( MRS - ACS ) ) * ( ( MDR * FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( ( RRSe / MUC ) ,( RRSe - RCSe ) ) / Max( ( MLU * RCSe ),( MUM - MUR ) ) ) ,( ( ( DS - CS ) * ( MUC + RCSe ) ) * ( Min( CS ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS * AMS ) - ( FirstVNF_CPU_Server / MDR ) ) * ( Max( Const,RRS ) / Min( ARS ,RRS ) ) ) ,( Min( Min( ( ( ARS / Max( FirstVNF_RAM,PN ) ) - AMS ) ,( CRS * ( ( ( FirstVNF_Mem_Server + Const ) + FirstVNF_Mem_Server ) + Const ) ) ) ,( MRS - ACS ) ) * ( ( MDR * FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( Max( ( CS + MUR ),Max( RMSe,MUR ) ) - MUM ) * RRSe ) * MUM ) / Max( ( MLU * Min( ( Max( ( CS - MUM ),RCSe ) - RMSe ) ,( RCSe - Max( Max( CS,MUR ),MUR ) ) ) ),( MUM - MUM ) ) ) ,( ( Min( DS ,CS ) * ( DS + RCSe ) ) * ( Min( MUR ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,Const ) - ( Min( FirstVNF_Mem ,DDR ) + FirstVNF_RAM ) ) * ( ( BR * CRS ) + Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + CS ) * ( ( ( MLU * RMSe ) + RRSe ) * MUC ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( Max( ( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) ),DDR ) - ( FirstVNF_RAM_Server + BR ) )", "choosing": "Max( ( RCSe / ( RRSe / MUR ) ),( Max( MUC,RMSe ) * ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,BR ),DDR ) - ( FirstVNF_RAM_Server + BR ) ) / ( CRS * CRS ) )", "choosing": "( Max( ( ( RCSe * RRSe ) / ( RRSe / MUR ) ),( Max( MUC,RMSe ) * ( MLU - MUR ) ) ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( PN * Min( ARS ,MDR ) ) ),DDR ) - ( FirstVNF_RAM_Server + BR ) )", "choosing": "( Max( ( ( ( Max( DS,MUR ) / ( MUC + ( Max( MUM,MUR ) * ( RMSe - RCSe ) ) ) ) + RCSe ) - RCSe ),DS ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( RRSe / MUR ) ),( Max( MUC,RMSe ) * ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU / AMS ) ,( Const * PN ) ) * ( ( FirstVNF_RAM_Server - FirstVNF_CPU ) * ( FirstVNF_Mem / DDR ) ) ) / MDR )", "choosing": "( Max( Max( CS,RRSe ),Max( Min( CS ,RCSe ),RCSe ) ) + Max( Max( ( RRSe - CS ),Min( RMSe ,CS ) ),Max( Min( RMSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 0.9143468950749465, "obj2": 0.08560980058789193}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( BR,ARS ) ) + Max( ( MRS * Max( FirstVNF_RAM_Server,DDR ) ),Max( Min( FirstVNF_CPU ,CRS ),Min( MDR ,( AMS - ( RRS * ( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( Min( Max( RCSe,MUM ) ,Min( MUM ,RMSe ) ) + Max( Min( RRSe ,MUR ),( MUM * RMSe ) ) ) + ( Max( RCSe,( ( MUR + Min( MLU ,( RRSe * ( MUC / MUR ) ) ) ) / RCSe ) ) * Max( Min( RMSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( ( FirstVNF_RAM / MRS ) / Max( BR,FirstVNF_Mem_Server ) ) ,Min( Max( CRS,FirstVNF_CPU ) ,( FirstVNF_RAM * ARS ) ) ) * ARS ) * ( FirstVNF_Mem_Server / ACS ) ) - Const ) - ( Min( ACS ,CRS ) / ( ( MDR / AMS ) * FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR / RMSe ) - Max( MLU,RRSe ) ) ,( ( MUR / MUR ) * ( CS / MUR ) ) ) + Min( MUM ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM * MRS ) / Max( MDR,FirstVNF_Mem_Server ) ) ,Min( Max( CRS,FirstVNF_CPU ) ,( FirstVNF_RAM * ARS ) ) )", "choosing": "Max( Max( MLU,Min( ( ( RMSe - MLU ) / ( MUC + MUC ) ) ,RRSe ) ),( RCSe * ( MUR / RMSe ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( ( ( ( FirstVNF_Mem * ARS ) * ( FirstVNF_Mem_Server / ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / AMS ) * FirstVNF_Mem ) ) )", "choosing": "Max( Max( MLU,Min( MUC ,RRSe ) ),( RCSe * ( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) * Min( Min( CRS ,Const ) ,ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / ARS ) / Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( MUM / MUR ) * ( MUR / MUM ) ) ,( ( RRSe + MUR ) - Max( MLU,RRSe ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + Min( ( ( CS + ( Min( MUM ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) * Min( Min( CRS ,Const ) ,ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / ARS ) / Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( MUM / MUR ) * ( MUR / MUM ) ) ,( ( RRSe + MUR ) - Max( MLU,RRSe ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + Min( ( ( CS + ( Min( MUM ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) * Min( Min( CRS ,Const ) ,ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / ARS ) / Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( MUM / MUR ) * ( MUR / MUM ) ) ,( ( RRSe + MUR ) - Max( MLU,RRSe ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + Min( ( ( CS + ( Min( MUM ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( CRS ,Const ) ,ACS ) * ( FirstVNF_Mem_Server / ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / ARS ) * FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR + RRSe ) - Max( MLU,RRSe ) ) ,( ( MUM / MUR ) * ( MUR / MUR ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + ( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) / ( ( MRS / ( ACS - ACS ) ) * CRS ) )", "choosing": "( DS - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "Max( ( RMSe + DS ),( ( RMSe - DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const - BR ),AMS ) / ( Min( ( FirstVNF_Mem_Server - MDR ) ,( MDR / ( FirstVNF_Mem / Max( RRS,Min( FirstVNF_CPU_Server ,ARS ) ) ) ) ) * DDR ) )", "choosing": "Min( ( ( RCSe + CS ) - MUM ) ,Max( CS,RMSe ) )", "obj1": 0.7858672376873662, "obj2": 0.16273831309586884}, {"determining": "( ( ( BR - Const ) / ( AMS - FirstVNF_RAM ) ) / ( Max( MDR,BR ) / ( MDR + ACS ) ) )", "choosing": "Max( ( RCSe - Min( MUR ,RRSe ) ),( RRSe + ( MUM * RMSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.1614542036430793}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( AMS - FirstVNF_RAM ) ) + ( DDR * ACS ) )", "choosing": "Max( ( RCSe - Max( MUR,RRSe ) ),( Min( MUM ,RMSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( MDR - DDR ) + Min( ( RRS + ( RRS - ( ( MRS / RRS ) * FirstVNF_Mem ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - ( RRSe + ( Max( CS,MUM ) / MUM ) ) ) ) ) - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( MDR - DDR ) + Min( ( RRS + ( RRS - ( ( MRS / RRS ) * FirstVNF_Mem ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - ( RRSe + ( Max( CS,MUM ) / MUM ) ) ) ) ) - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( MDR - DDR ) + Min( ( RRS + ( RRS - ( ( MRS / RRS ) * FirstVNF_Mem ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - ( RRSe + ( Max( CS,MUM ) / MUM ) ) ) ) ) - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( DDR - DDR ),AMS ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( Min( BR ,FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server + ACS ) )", "choosing": "( ( MUC + MUC ) - ( MUM + DS ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( Max( ( AMS - ACS ),DDR ) - Max( Max( Const,ARS ),( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( Max( Min( ( DS / MUC ) ,MLU ),RRSe ) - ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ACS ),DDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MUC ,MLU ),RRSe ) - ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - ( ACS / ( ACS - DDR ) ) ) * ( RRS * PN ) ) ) / ( ACS - FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) / ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / ( Max( MUC,Max( ( RRSe * RCSe ),( ( MUC - MLU ) / DS ) ) ) / CS ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ACS - Min( MRS ,Max( PN,RRS ) ) ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / DS ),( MUM + CS ) ) - ( ( MUC / RRSe ) / ( ( RMSe / MLU ) + ( MUR * MUR ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( MRS - Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * ACS ) ) ) / ( CRS * CRS ) )", "choosing": "( ( MLU + MUR ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "( ( MUC + RMSe ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,PN ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe / RCSe ) ) * ( ( ( ( Max( ( MUM - MUR ),RMSe ) + MUC ) - RMSe ) / RRSe ) + Min( DS ,MUC ) ) ) - ( DS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ACS ),( FirstVNF_CPU * ( ( FirstVNF_RAM_Server * ACS ) * Min( ( MRS / AMS ) ,MDR ) ) ) ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe / RCSe ) + ( DS / MUR ) ) / ( CS - Min( ( ( MUC + ( MUC + DS ) ) / MUC ) ,( RCSe - ( RRSe / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( CRS ,Const ) ,ACS ) * ( FirstVNF_Mem_Server / ACS ) ) - Const ) - FirstVNF_Mem )", "choosing": "( ( CS / DS ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + ( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( CRS ,Const ) ,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( ACS / Const ) + ACS ) ) )", "choosing": "( Min( ( ( MUR + RRSe ) - Max( MLU,RRSe ) ) ,( ( DS / MUR ) * ( MUR / MUR ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( ( CS + ( RRSe - RRSe ) ),RRSe ) ) + ( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( FirstVNF_Mem + PN ) ) ,( Max( PN,( ARS * BR ) ) * RRS ) ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUR ,RCSe ) / Max( MUM,RRSe ) ) - ( ( MUR - RRSe ) - Max( ( Min( RRSe ,CS ) * Min( CS ,RCSe ) ),( Max( CS,MUR ) - ( MUM - DS ) ) ) ) ) * ( ( Min( RCSe ,MUM ) / ( RRSe - MUM ) ) - Min( ( MUR * RRSe ) ,( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( Max( ( AMS - ACS ),DDR ) - Max( ACS,FirstVNF_Mem_Server ) ) ) * Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( DS ,( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * AMS ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MUC ,MLU ),RRSe ) - ( Min( ( MUR + RRSe ) ,( RCSe * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ACS ),DDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MUC ,MLU ),RRSe ) - ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS - PN ),( Const * MDR ) ) / Min( ( ( BR / CRS ) * MDR ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) * ( ( ( CRS + ACS ) - ( BR * MDR ) ) - ( Min( MDR ,PN ) / ( AMS * AMS ) ) ) )", "choosing": "( ( RMSe * Max( CS,( CS * ( MLU + MUM ) ) ) ) * ( Max( MUR,DS ) + ( CS / Max( ( MUC - MUM ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,PN ) + ( ACS + FirstVNF_CPU_Server ) ),Min( Max( CRS,MRS ) ,( FirstVNF_CPU_Server / AMS ) ) ) * ( ( ( CRS + ACS ) - ( BR * MDR ) ) - ( ( MDR / PN ) / ( AMS * AMS ) ) ) )", "choosing": "( Max( MUR,DS ) + ( CS / Max( ( MUC - RMSe ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) / ( ( ( Max( FirstVNF_RAM,Min( FirstVNF_CPU_Server ,( FirstVNF_Mem_Server * PN ) ) ) * Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( ACS,PN ),Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe * DS ) * ( RCSe + MUM ) )", "obj1": 0.7708779443254818, "obj2": 0.1843477382210662}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) - ( AMS - DDR ) )", "choosing": "Max( ( ( ( MUM + CS ) * ( RRSe + CS ) ) - Min( ( CS * RMSe ) ,( RCSe - RMSe ) ) ),( ( Min( RRSe ,RRSe ) + ( RRSe - MLU ) ) / ( ( RCSe - RMSe ) / ( RCSe + MUR ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.261120002760117}, {"determining": "( Min( ( Max( MRS,FirstVNF_RAM ) * Min( MDR ,CRS ) ) ,( Min( RRS ,PN ) - Max( PN,FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_Mem_Server + Const ),( FirstVNF_Mem / MRS ) ) / Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,Min( RRS ,AMS ) ) ) )", "choosing": "( ( RMSe - ( ( MUM - MUR ) / Min( MLU ,DS ) ) ) / ( Max( MUR,CS ) / Min( Min( ( RCSe - MUR ) ,Max( DS,MUM ) ) ,Max( Min( RCSe ,RRSe ),Max( MUC,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,FirstVNF_RAM ) * Min( MDR ,CRS ) ) ,( Min( RRS ,PN ) - Max( PN,FirstVNF_CPU_Server ) ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( Const / FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,Min( RRS ,AMS ) ) ) )", "choosing": "Min( Min( ( RCSe - MUR ) ,Max( DS,MUM ) ) ,Max( Min( RCSe ,RRSe ),Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) / Max( DDR,PN ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) - ( AMS - DDR ) )", "choosing": "( Max( RCSe,( MUM / MUM ) ) - ( Min( MUR ,MUR ) + MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.261120002760117}, {"determining": "( ( BR * DDR ) / ( MRS * Min( DDR ,( AMS * ( Min( FirstVNF_RAM_Server ,RRS ) - AMS ) ) ) ) )", "choosing": "( ( Min( ( MLU * ( Max( RMSe,Min( ( RCSe * MUM ) ,( CS - CS ) ) ) - Min( DS ,( Max( RCSe,MUC ) + RRSe ) ) ) ) ,Max( CS,RRSe ) ) + ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) ) + MUC )", "obj1": 0.6937901498929336, "obj2": 0.25008579385074914}, {"determining": "Min( ( Const / DDR ) ,( Min( Max( RRS,( MDR - BR ) ) ,( MRS - ACS ) ) * ( ( MDR * FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( ( RRSe / MUC ) ,( Min( MUR ,Max( MUM,RRSe ) ) - RCSe ) ) / Max( ( MLU * RCSe ),( Min( RRSe ,MLU ) - MUM ) ) ) ,( ( ( CS - DS ) * ( MUC + RCSe ) ) * ( Min( CS ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server / Const ) - ( RRS * AMS ) ) + ( Max( Const,RRS ) / Min( ARS ,RRS ) ) ) ,( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( MRS - ACS ) ) * ( ( MDR * FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( ( RRSe / MUC ) ,( RRSe - RCSe ) ) / Max( ( MLU * RCSe ),( MUM - MUM ) ) ) ,( ( ( DS - CS ) * ( MUC + RCSe ) ) * ( Min( CS ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( Min( Max( ( MUM + MUC ),Max( RRSe,MUM ) ) ,( ( MLU - RCSe ) - ( MUR * RRSe ) ) ) * ( MUR * RRSe ) )", "obj1": 0.9014989293361885, "obj2": 0.09925935051141889}, {"determining": "Min( Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,Min( ( FirstVNF_Mem_Server - FirstVNF_CPU ) ,( MRS / Const ) ) )", "choosing": "Min( Max( DS,Max( RRSe,MUM ) ) ,( ( MLU - RCSe ) - ( MUR * RRSe ) ) )", "obj1": 0.9057815845824411, "obj2": 0.09627446725735957}, {"determining": "Min( ( ( FirstVNF_CPU - Const ) / ( MDR * MRS ) ) ,Min( ( MRS / ( FirstVNF_Mem * BR ) ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( Max( ( ( ( Max( MUC,MLU ) * CS ) / RMSe ) + ( MUR / RMSe ) ),( MUC / DS ) ) / DS ),Max( RRSe,MUM ) ) ,( ( MLU - RCSe ) - ( MUR * RRSe ) ) )", "obj1": 0.8993576017130621, "obj2": 0.10141314460669582}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * RRSe ) )", "obj1": 0.9079229122055674, "obj2": 0.09328660261463126}, {"determining": "( ( RRS * PN ) - ( ( ( FirstVNF_CPU - MRS ) * MRS ) / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( RRSe + MUC ),Min( DS ,CS ) )", "obj1": 0.8736616702355461, "obj2": 0.13107856747276156}, {"determining": "( ( ( FirstVNF_CPU - MRS ) * MRS ) / ( ( ( RRS * PN ) - ( FirstVNF_CPU_Server / PN ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / ( Max( ( RMSe + MUC ),Min( DS ,CS ) ) * RCSe ) ) - ( DS * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) - ( FirstVNF_CPU_Server / PN ) )", "choosing": "( ( MUM / ( MUR * RCSe ) ) - ( DS * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) - ( FirstVNF_CPU_Server / PN ) )", "choosing": "Max( ( CS - DS ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * BR ) - ( FirstVNF_CPU_Server / PN ) )", "choosing": "Max( MUM,Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) - ( FirstVNF_CPU_Server / PN ) )", "choosing": "Max( ( RMSe + MUC ),Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + Min( PN ,ARS ) ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,MLU ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "Max( FirstVNF_CPU,Min( Const ,BR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),RRSe ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - ( ( Min( MUR ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6916488222698073, "obj2": 0.2610501206628808}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7837259100642399, "obj2": 0.1789924330707388}, {"determining": "( Min( MDR ,CRS ) - ( ( MRS * ( ACS / PN ) ) - DDR ) )", "choosing": "Max( ( RMSe / Min( CS ,RMSe ) ),Min( ( ( DS * RCSe ) - DS ) ,MUC ) )", "obj1": 0.6873661670235546, "obj2": 0.261120002760117}, {"determining": "( ( BR / ( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( DDR * ARS ) ) / Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) ) + Min( ( Max( Const,Const ) - Max( DDR,RRS ) ) ,Max( ( PN / RRS ),( AMS / FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( CS / RMSe ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,DS ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.23458120599252055}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) * ( Max( PN,( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( CRS / MRS ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( ( MUC * MUC ) ,( RRSe / RRSe ) ) ,( ( MUR + RRSe ) / Max( RMSe,DS ) ) ) * ( Min( Min( ( ( MUM + ( MUM / MUM ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) ) ,( RCSe - MUR ) ) - ( ( RMSe / MUC ) / ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - ACS ),( MDR - FirstVNF_RAM ) ) - ( ( Const * MDR ) + Min( FirstVNF_Mem ,MRS ) ) ) * ( ( Min( FirstVNF_Mem_Server ,RRS ) / ( AMS + ACS ) ) / Max( ( MDR / CRS ),PN ) ) )", "choosing": "Min( Min( MUR ,MUM ) ,( MUM - ( MLU * ( MUM / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "( ( MUC + RMSe ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) - ( FirstVNF_CPU_Server / PN ) )", "choosing": "Max( ( RMSe + MUC ),Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( MRS - CRS ) )", "choosing": "( Max( MUR,DS ) - ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( Max( Max( FirstVNF_RAM_Server,BR ),DDR ) - ( FirstVNF_RAM_Server + BR ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( RRSe / MUR ) ),( Max( MUC,RMSe ) * ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ACS ),DDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MUC ,MLU ),RRSe ) - ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( MDR - DDR ) + Min( ( RRS + ( RRS - ( ( MRS / RRS ) * FirstVNF_Mem ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - ( RRSe + ( Max( CS,MUM ) / MUM ) ) ) ) ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,( FirstVNF_Mem_Server - BR ) ) - ( MDR - FirstVNF_RAM ) ) * Min( ( BR * CRS ) ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "( ( CS + ( ( ( RMSe - RCSe ) * RCSe ) + MLU ) ) * ( ( RRSe + DS ) * MUC ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) * Min( Min( CRS ,Const ) ,ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / ARS ) / Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( MUM / MUR ) * ( MUR / MUM ) ) ,( ( RRSe + MUR ) - Max( MLU,RRSe ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + Min( ( ( CS + ( Min( MUM ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,FirstVNF_RAM ) * Min( MDR ,CRS ) ) ,( Min( RRS ,PN ) - Max( PN,FirstVNF_CPU_Server ) ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( Const / FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,Min( RRS ,AMS ) ) ) )", "choosing": "( ( RMSe - ( ( MUM - MUR ) / Min( MLU ,DS ) ) ) / ( Max( MUR,CS ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server / Const ) - ( RRS * AMS ) ) + ( Max( Const,RRS ) / Min( ARS ,RRS ) ) ) ,( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( MRS - ACS ) ) * ( ( MDR * FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( ( RRSe / MUC ) ,( RRSe - RCSe ) ) / Max( ( MLU * RCSe ),( MUM - MUM ) ) ) ,( ( ( DS - CS ) * ( MUC + RCSe ) ) * ( Min( CS ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - ACS ),Min( MDR ,FirstVNF_RAM ) ) - ( ( Const * MDR ) + Min( FirstVNF_Mem ,MRS ) ) ) * ( ( ( AMS + ACS ) / Min( FirstVNF_Mem_Server ,RRS ) ) / ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( CRS / MRS ) ) ) )", "choosing": "Min( ( ( MUM + ( MUM / MUM ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,PN ) + ( ACS + FirstVNF_CPU_Server ) ),Min( Max( CRS,MRS ) ,( FirstVNF_CPU_Server / AMS ) ) ) * ( ( ( CRS + ACS ) - ( BR * MDR ) ) - ( ( MDR / PN ) / ( AMS * AMS ) ) ) )", "choosing": "( ( ( DS - RCSe ) + MLU ) * Min( Max( RCSe,MUC ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / FirstVNF_RAM_Server ) ,( MRS - CRS ) )", "choosing": "( Max( MUR,DS ) - ( CS - ( ( RMSe - ( ( MUM - MUR ) / Min( MLU ,DS ) ) ) / ( Max( MUR,CS ) / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,FirstVNF_RAM ) * Min( MDR ,CRS ) ) ,( Min( RRS ,PN ) - Max( PN,FirstVNF_CPU_Server ) ) ) - Min( Const ,Const ) )", "choosing": "( ( ( Max( MUR,DS ) - ( CS - MUC ) ) - ( ( MUM - MUR ) / Min( MLU ,DS ) ) ) / ( Max( MUR,CS ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Const ,Const ) ,( MRS - CRS ) )", "choosing": "( ( RMSe - ( ( MUM - MUR ) / Min( MLU ,DS ) ) ) / ( Max( MUR,CS ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,FirstVNF_RAM ) * Min( MDR ,CRS ) ) ,( Min( RRS ,PN ) - Max( PN,FirstVNF_CPU_Server ) ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( Const / FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,Min( RRS ,AMS ) ) ) )", "choosing": "( Max( MUR,DS ) - ( CS - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - ACS ) / ( FirstVNF_Mem / ACS ) ) - Max( Max( ARS,ARS ),Max( MDR,FirstVNF_Mem ) ) ) - ( RRS + Const ) )", "choosing": "( ( DS + RMSe ) / Max( ( RMSe + ( MLU + MUR ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "Min( ( ( Max( FirstVNF_RAM,ACS ) + ( ACS / RRS ) ) + ( Max( Const,RRS ) / Min( ARS ,RRS ) ) ) ,( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( MRS - ACS ) ) * ( ( MDR * FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( ( RRSe / MUC ) ,( RRSe - RCSe ) ) / Max( ( MLU * RCSe ),( MUM - MUR ) ) ) ,( ( ( DS - CS ) * ( MUC + RCSe ) ) * ( Min( CS ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( RRS * AMS ) - ( FirstVNF_CPU_Server / MDR ) ) * ( Max( Const,RRS ) / Min( ARS ,RRS ) ) ) ,( Min( Min( ( ( ARS / Max( FirstVNF_RAM,PN ) ) - AMS ) ,( CRS * ( ( ( FirstVNF_Mem_Server + Const ) + FirstVNF_Mem_Server ) + Const ) ) ) ,( MRS - ACS ) ) * ( ( MDR * FirstVNF_Mem_Server ) + Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( Max( ( CS + MUR ),Max( RMSe,MUR ) ) - MUM ) * RRSe ) * MUM ) / Max( ( MLU * Min( ( Max( ( CS - MUM ),RCSe ) - RMSe ) ,( RCSe - Max( Max( CS,MUR ),MUR ) ) ) ),( MUM - MUM ) ) ) ,( ( Min( DS ,CS ) * ( DS + RCSe ) ) * ( Min( MUR ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,Const ) - ( Min( FirstVNF_Mem ,DDR ) + FirstVNF_RAM ) ) * ( ( BR * CRS ) + Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + CS ) * ( ( ( MLU * RMSe ) + RRSe ) * MUC ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( Max( ( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) ),DDR ) - ( FirstVNF_RAM_Server + BR ) )", "choosing": "Max( ( RCSe / ( RRSe / MUR ) ),( Max( MUC,RMSe ) * ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_RAM_Server,BR ),DDR ) - ( FirstVNF_RAM_Server + BR ) ) / ( CRS * CRS ) )", "choosing": "( Max( ( ( RCSe * RRSe ) / ( RRSe / MUR ) ),( Max( MUC,RMSe ) * ( MLU - MUR ) ) ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_RAM_Server,( PN * Min( ARS ,MDR ) ) ),DDR ) - ( FirstVNF_RAM_Server + BR ) )", "choosing": "( Max( ( ( ( Max( DS,MUR ) / ( MUC + ( Max( MUM,MUR ) * ( RMSe - RCSe ) ) ) ) + RCSe ) - RCSe ),DS ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( RRSe / MUR ) ),( Max( MUC,RMSe ) * ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( BR,ARS ) ) + Max( ( MRS * Max( FirstVNF_RAM_Server,DDR ) ),Max( Min( FirstVNF_CPU ,CRS ),Min( MDR ,( AMS - ( RRS * ( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( Min( Max( RCSe,MUM ) ,Min( MUM ,RMSe ) ) + Max( Min( RRSe ,MUR ),( MUM * RMSe ) ) ) + ( Max( RCSe,( ( MUR + Min( MLU ,( RRSe * ( MUC / MUR ) ) ) ) / RCSe ) ) * Max( Min( RMSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( ( FirstVNF_RAM / MRS ) / Max( BR,FirstVNF_Mem_Server ) ) ,Min( Max( CRS,FirstVNF_CPU ) ,( FirstVNF_RAM * ARS ) ) ) * ARS ) * ( FirstVNF_Mem_Server / ACS ) ) - Const ) - ( Min( ACS ,CRS ) / ( ( MDR / AMS ) * FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR / RMSe ) - Max( MLU,RRSe ) ) ,( ( MUR / MUR ) * ( CS / MUR ) ) ) + Min( MUM ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * ARS ) * ( FirstVNF_Mem_Server / ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / AMS ) * FirstVNF_Mem ) ) )", "choosing": "Max( Max( MLU,Min( MUC ,RRSe ) ),( RCSe * ( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) * Min( Min( CRS ,Const ) ,ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / ARS ) / Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( MUM / MUR ) * ( MUR / MUM ) ) ,( ( RRSe + MUR ) - Max( MLU,RRSe ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + Min( ( ( CS + ( Min( MUM ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) * Min( Min( CRS ,Const ) ,ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / ARS ) / Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( MUM / MUR ) * ( MUR / MUM ) ) ,( ( RRSe + MUR ) - Max( MLU,RRSe ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + Min( ( ( CS + ( Min( MUM ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) * Min( Min( CRS ,Const ) ,ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / ARS ) / Max( DDR,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( ( MUM / MUR ) * ( MUR / MUM ) ) ,( ( RRSe + MUR ) - Max( MLU,RRSe ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + Min( ( ( CS + ( Min( MUM ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( CRS ,Const ) ,ACS ) * ( FirstVNF_Mem_Server / ACS ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( MDR / ARS ) * FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR + RRSe ) - Max( MLU,RRSe ) ) ,( ( MUM / MUR ) * ( MUR / MUR ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + ( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) / ( ( MRS / ( ACS - ACS ) ) * CRS ) )", "choosing": "( DS - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "Max( ( RMSe + DS ),( ( RMSe - DS ) / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( AMS - FirstVNF_RAM ) ) + ( DDR * ACS ) )", "choosing": "Max( ( RCSe - Max( MUR,RRSe ) ),( Min( MUM ,RMSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( MDR - DDR ) + Min( ( RRS + ( RRS - ( ( MRS / RRS ) * FirstVNF_Mem ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - ( RRSe + ( Max( CS,MUM ) / MUM ) ) ) ) ) - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( MDR - DDR ) + Min( ( RRS + ( RRS - ( ( MRS / RRS ) * FirstVNF_Mem ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - ( RRSe + ( Max( CS,MUM ) / MUM ) ) ) ) ) - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( MDR - DDR ) + Min( ( RRS + ( RRS - ( ( MRS / RRS ) * FirstVNF_Mem ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - ( RRSe + ( Max( CS,MUM ) / MUM ) ) ) ) ) - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( DDR - DDR ),AMS ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( Max( ( AMS - ACS ),DDR ) - Max( Max( Const,ARS ),( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( Max( Min( ( DS / MUC ) ,MLU ),RRSe ) - ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ACS ),DDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MUC ,MLU ),RRSe ) - ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - ( ACS / ( ACS - DDR ) ) ) * ( RRS * PN ) ) ) / ( ACS - FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) / ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / ( Max( MUC,Max( ( RRSe * RCSe ),( ( MUC - MLU ) / DS ) ) ) / CS ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ACS - Min( MRS ,Max( PN,RRS ) ) ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / DS ),( MUM + CS ) ) - ( ( MUC / RRSe ) / ( ( RMSe / MLU ) + ( MUR * MUR ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( MRS - Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * ACS ) ) ) / ( CRS * CRS ) )", "choosing": "( ( MLU + MUR ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "( ( MUC + RMSe ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,PN ) )", "choosing": "( ( ( ( DS / MUR ) + ( RMSe / RCSe ) ) * ( ( ( ( Max( ( MUM - MUR ),RMSe ) + MUC ) - RMSe ) / RRSe ) + Min( DS ,MUC ) ) ) - ( DS - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ACS ),( FirstVNF_CPU * ( ( FirstVNF_RAM_Server * ACS ) * Min( ( MRS / AMS ) ,MDR ) ) ) ) - Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe / RCSe ) + ( DS / MUR ) ) / ( CS - Min( ( ( MUC + ( MUC + DS ) ) / MUC ) ,( RCSe - ( RRSe / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( CRS ,Const ) ,ACS ) * ( FirstVNF_Mem_Server / ACS ) ) - Const ) - FirstVNF_Mem )", "choosing": "( ( CS / DS ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + ( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Min( CRS ,Const ) ,ACS ) * ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) - Const ) - ( FirstVNF_RAM_Server / ( ( ACS / Const ) + ACS ) ) )", "choosing": "( Min( ( ( MUR + RRSe ) - Max( MLU,RRSe ) ) ,( ( DS / MUR ) * ( MUR / MUR ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( ( CS + ( RRSe - RRSe ) ),RRSe ) ) + ( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * ( FirstVNF_Mem + PN ) ) ,( Max( PN,( ARS * BR ) ) * RRS ) ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( ( Min( MUR ,RCSe ) / Max( MUM,RRSe ) ) - ( ( MUR - RRSe ) - Max( ( Min( RRSe ,CS ) * Min( CS ,RCSe ) ),( Max( CS,MUR ) - ( MUM - DS ) ) ) ) ) * ( ( Min( RCSe ,MUM ) / ( RRSe - MUM ) ) - Min( ( MUR * RRSe ) ,( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( Max( ( AMS - ACS ),DDR ) - Max( ACS,FirstVNF_Mem_Server ) ) ) * Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( DS ,( RCSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS * AMS ) * Min( BR ,FirstVNF_RAM_Server ) ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MUC ,MLU ),RRSe ) - ( Min( ( MUR + RRSe ) ,( RCSe * MUM ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ACS ),DDR ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MUC ,MLU ),RRSe ) - ( MUM - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS - PN ),( Const * MDR ) ) / Min( ( ( BR / CRS ) * MDR ) ,( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) * ( ( ( CRS + ACS ) - ( BR * MDR ) ) - ( Min( MDR ,PN ) / ( AMS * AMS ) ) ) )", "choosing": "( ( RMSe * Max( CS,( CS * ( MLU + MUM ) ) ) ) * ( Max( MUR,DS ) + ( CS / Max( ( MUC - MUM ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,PN ) + ( ACS + FirstVNF_CPU_Server ) ),Min( Max( CRS,MRS ) ,( FirstVNF_CPU_Server / AMS ) ) ) * ( ( ( CRS + ACS ) - ( BR * MDR ) ) - ( ( MDR / PN ) / ( AMS * AMS ) ) ) )", "choosing": "( Max( MUR,DS ) + ( CS / Max( ( MUC - RMSe ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * DDR ) / ( MRS * Min( DDR ,( AMS * ( Min( FirstVNF_RAM_Server ,RRS ) - AMS ) ) ) ) )", "choosing": "( ( Min( ( MLU * ( Max( RMSe,Min( ( RCSe * MUM ) ,( CS - CS ) ) ) - Min( DS ,( Max( RCSe,MUC ) + RRSe ) ) ) ) ,Max( CS,RRSe ) ) + ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) ) + MUC )", "obj1": 0.6937901498929336, "obj2": 0.25008579385074914}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + Min( PN ,ARS ) ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,MLU ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( BR / ( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( DDR * ARS ) ) / Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) ) + Min( ( Max( Const,Const ) - Max( DDR,RRS ) ) ,Max( ( PN / RRS ),( AMS / FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( CS / RMSe ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,DS ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.23458120599252055}, {"determining": "( ( BR / ( Max( PN,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( CS / Max( DS,MUM ) ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,DS ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.24610876151726496}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( Max( DS,MUM ) * ( Min( RMSe ,Min( MUM ,CS ) ) / MUM ) ) ,Max( Min( RCSe ,RRSe ),Max( MUC,RRSe ) ) )", "obj1": 0.715203426124197, "obj2": 0.23458120599252055}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( Max( Const,Min( MRS ,FirstVNF_CPU ) ) / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ( MDR / ARS ) * FirstVNF_Mem ) ) ) ) ,MDR ) ) )", "choosing": "Max( Max( Min( RCSe ,( RCSe / MUM ) ),RCSe ),Max( CS,CS ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( DDR - DDR ),AMS ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( MRS - ( RRS / FirstVNF_CPU ) ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,Max( Max( ( CS / DS ),( ( DS - CS ) * ( MUC + RCSe ) ) ),( ( RCSe / RRSe ) / Min( DS ,( MLU + ( RCSe / ( MUM / MUM ) ) ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( ( Min( ( RRSe / MUC ) ,( RRSe - RCSe ) ) / Max( ( MLU * RCSe ),( Min( RRSe ,MLU ) - MUM ) ) ) ,( ( ( DS - CS ) * ( MUC + RCSe ) ) * ( Min( CS ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_Mem_Server ,BR ),( ( MDR + DDR ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MUC * MLU ) ,( ( MUR + RRSe ) / Max( RMSe,DS ) ) ) * ( Min( Min( ( ( ( ( RMSe * RCSe ) * CS ) + ( MLU / DS ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) ) ,( MUR - RCSe ) ) - ( ( MUC / RMSe ) / ( DS + RRSe ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.09234705136075777}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( DDR - DDR ),AMS ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( ( MDR / ( FirstVNF_Mem / Max( RRS,Min( FirstVNF_CPU_Server ,ARS ) ) ) ) - DDR ) + Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( RCSe - Min( ( RCSe + CS ) ,RRSe ) ),( RRSe + ( MUM * RMSe ) ) )", "obj1": 0.9700214132762313, "obj2": 0.03407221075738487}, {"determining": "( FirstVNF_CPU / ( ACS / FirstVNF_Mem ) )", "choosing": "Min( ( ( CS - ( MUR + MUM ) ) / ( ( CS * MUC ) * MLU ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( MUM ,DS ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.1731126341718516}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),RRSe ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - ( ( Min( MUR ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( FirstVNF_RAM_Server / ( ( MDR / ARS ) * FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server / ( ( MDR / AMS ) * FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( MUR / RMSe ) - Max( MLU,RRSe ) ) ,( ( MUR / MUR ) * ( MUM / MUR ) ) ) + ( RMSe / ( Max( MLU,MUM ) + ( RMSe / MLU ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.07394209143146485}, {"determining": "( Max( MRS,Min( MRS ,Min( ( Min( ARS ,FirstVNF_Mem_Server ) / Max( DDR,PN ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.683083511777302, "obj2": 0.256273511184719}, {"determining": "( ( MDR + Max( Const,FirstVNF_RAM ) ) / ( AMS * DDR ) )", "choosing": "( Min( CS ,MUM ) - Min( CS ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.12576751981305895}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.12576751981305895}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.12576751981305895}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,( PN / ( DDR / ( ( ( ( FirstVNF_RAM_Server * ACS ) + ( ARS * MRS ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) - ACS ) ) / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( DS - MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,MUC ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.12576751981305895}, {"determining": "( ( ( Max( Const,( FirstVNF_Mem_Server - BR ) ) - ( MDR - FirstVNF_RAM ) ) + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / ( ( RMSe - RCSe ) * RCSe ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( ( FirstVNF_RAM + ( AMS + FirstVNF_RAM_Server ) ) + Max( Min( DDR ,DDR ),AMS ) ) ,MDR ) ) )", "choosing": "( Min( Max( MUR,Max( MLU,MUR ) ) ,RMSe ) * ( ( RRSe + DS ) * MUC ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( Max( FirstVNF_RAM_Server,Const ) - ( MDR + FirstVNF_RAM ) ) * Min( ( BR * CRS ) ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( BR * DDR ) / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) + Min( ( MLU * RCSe ) ,Max( CS,RRSe ) ) ) + MUC )", "obj1": 0.6937901498929336, "obj2": 0.25008579385074914}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( DDR - DDR ),AMS ) ) ,MDR ) ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * RRSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( Min( ( DDR + FirstVNF_RAM_Server ) ,( MRS + ( RRS * PN ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( FirstVNF_CPU + ACS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( MUM * CS ) ,( DS + CS ) ) ) ,Min( MLU ,MLU ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + PN ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * Max( MDR,FirstVNF_CPU_Server ) ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,Min( MLU ,( RCSe - RRSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) - MDR )", "choosing": "( Max( RCSe,( MUM / MUM ) ) - MUM )", "obj1": 0.7858672376873662, "obj2": 0.1596746515877292}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( DDR - DDR ),AMS ) ) ,MDR ) ) )", "choosing": "( ( ( Min( MUR ,RCSe ) / ( MUM - RRSe ) ) - ( ( MUR - RRSe ) - Max( ( Min( RRSe ,CS ) * Min( CS ,RCSe ) ),( Max( CS,MUR ) - ( MUM - DS ) ) ) ) ) * ( ( Min( RCSe ,MUM ) / Max( MUC,MUC ) ) - Min( ( MUR * RRSe ) ,( CS / RMSe ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( ( AMS + FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( ARS + FirstVNF_RAM_Server ),AMS ) ) ,MDR ) ) )", "choosing": "Max( MUR,Max( Min( ( ( RCSe * CS ) / Max( MLU,RRSe ) ) ,( CS + ( Max( MLU,Min( MUM ,CS ) ) - ( ( MUM + RMSe ) - RRSe ) ) ) ),RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( Max( Max( FirstVNF_CPU,RRS ),DDR ) + ( ( MDR - DDR ) + Min( ( RRS + Max( Min( DDR ,DDR ),AMS ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,Max( RCSe,MUM ) ),Max( Min( RCSe ,( CS + ( ( ( RMSe + MUM ) - RRSe ) - ( MLU / Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( ARS * FirstVNF_Mem_Server ) * ( Min( Max( ( FirstVNF_CPU_Server + ( PN - BR ) ),( Max( PN,RRS ) + Min( BR ,( MDR * ( ARS - AMS ) ) ) ) ) ,FirstVNF_Mem ) + MRS ) )", "choosing": "( Min( ( ( RMSe - MLU ) - RRSe ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - Max( RMSe,( RMSe - Max( ( RCSe * ( Max( Min( RCSe ,RRSe ),( RCSe / MUR ) ) * RRSe ) ),MUC ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( ( BR - ( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) ) ) / ( AMS - FirstVNF_RAM ) ) / ( Max( MDR,BR ) / ( MDR + ACS ) ) )", "choosing": "Max( Max( CS,RRSe ),DS )", "obj1": 0.892933618843683, "obj2": 0.1153146794580677}, {"determining": "( ( BR / ( ( ( Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( DDR * ARS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) * ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) - Const ) ) * ( FirstVNF_Mem_Server - MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( RCSe / RMSe ) ,( RRSe - RMSe ) ) ) - Min( Min( MUR ,( ( CS + ( Min( ( DS * MUR ) ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.2296262123339203}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.12576751981305895}, {"determining": "Min( ( ( MDR - Const ) / MDR ) ,( FirstVNF_Mem_Server - Min( ( FirstVNF_RAM * Const ) ,Min( FirstVNF_Mem ,MRS ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.08544070247759679}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * DDR ) )", "choosing": "( Min( MUM ,DS ) * ( MUR * Max( Max( MLU,Min( ( ( RMSe - MLU ) / ( MUC + MUC ) ) ,RRSe ) ),( RCSe * ( MUR / ( Max( ( MUC - CS ),MUM ) / ( RCSe / RRSe ) ) ) ) ) ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324307}, {"determining": "Min( ( ( FirstVNF_CPU - Const ) / ( MDR * MRS ) ) ,Min( ( FirstVNF_Mem_Server - FirstVNF_CPU ) ,( MRS / Const ) ) )", "choosing": "Min( Max( ( MUM + MUC ),Max( RRSe,MUM ) ) ,( ( MLU - RCSe ) - ( MUR * RRSe ) ) )", "obj1": 0.8993576017130621, "obj2": 0.09932705076047647}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_Mem_Server / BR ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUR ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( CS - RMSe ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( MUM ,DS ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server - FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( ( DS / MUR ) + ( RMSe / RCSe ) ) / ( ( RCSe / RRSe ) + Min( DS ,MUC ) ) ) - ( MUM - DS ) ) ,( ( MLU - RCSe ) - ( MUR * RRSe ) ) ) * ( MUR * RRSe ) )", "obj1": 0.8993576017130621, "obj2": 0.09932705076047647}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( AMS,Min( ACS ,( ( ARS * ARS ) + FirstVNF_RAM_Server ) ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Max( MUM,( MUM / MUC ) ) ) ) ) ),RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}], "4": [{"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "( ( MUC + RMSe ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( Max( Const,( FirstVNF_Mem_Server - BR ) ) - ( MDR - FirstVNF_RAM ) ) * Min( ( BR * CRS ) ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "( ( CS + ( ( ( RMSe - RCSe ) * RCSe ) + MLU ) ) * ( ( RRSe + DS ) * MUC ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Max( FirstVNF_RAM_Server,Const ) - ( Min( FirstVNF_Mem ,DDR ) + FirstVNF_RAM ) ) * ( ( BR * CRS ) + Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + CS ) * ( ( ( MLU * RMSe ) + RRSe ) * MUC ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( MDR - DDR ) + Min( ( RRS + ( RRS - ( ( MRS / RRS ) * FirstVNF_Mem ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - ( RRSe + ( Max( CS,MUM ) / MUM ) ) ) ) ) - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( MDR - DDR ) + Min( ( RRS + ( RRS - ( ( MRS / RRS ) * FirstVNF_Mem ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - ( RRSe + ( Max( CS,MUM ) / MUM ) ) ) ) ) - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) + ( ( MDR - DDR ) + Min( ( RRS + ( RRS - ( ( MRS / RRS ) * FirstVNF_Mem ) ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - ( RRSe + ( Max( CS,MUM ) / MUM ) ) ) ) ) - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( DDR - DDR ),AMS ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - ( ACS / ( ACS - DDR ) ) ) * ( RRS * PN ) ) ) / ( ACS - FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) / ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / ( Max( MUC,Max( ( RRSe * RCSe ),( ( MUC - MLU ) / DS ) ) ) / CS ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ACS - Min( MRS ,Max( PN,RRS ) ) ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / DS ),( MUM + CS ) ) - ( ( MUC / RRSe ) / ( ( RMSe / MLU ) + ( MUR * MUR ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( BR * DDR ) / ( MRS * Min( DDR ,( AMS * ( Min( FirstVNF_RAM_Server ,RRS ) - AMS ) ) ) ) )", "choosing": "( ( Min( ( MLU * ( Max( RMSe,Min( ( RCSe * MUM ) ,( CS - CS ) ) ) - Min( DS ,( Max( RCSe,MUC ) + RRSe ) ) ) ) ,Max( CS,RRSe ) ) + ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) ) + MUC )", "obj1": 0.6937901498929336, "obj2": 0.25008579385074914}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + Min( PN ,ARS ) ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,MLU ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( BR / ( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( DDR * ARS ) ) / Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) ) + Min( ( Max( Const,Const ) - Max( DDR,RRS ) ) ,Max( ( PN / RRS ),( AMS / FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( CS / RMSe ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,DS ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.23458120599252055}, {"determining": "( ( BR / ( Max( PN,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( CS / Max( DS,MUM ) ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,DS ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.24610876151726496}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( Max( DS,MUM ) * ( Min( RMSe ,Min( MUM ,CS ) ) / MUM ) ) ,Max( Min( RCSe ,RRSe ),Max( MUC,RRSe ) ) )", "obj1": 0.715203426124197, "obj2": 0.23458120599252055}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( Max( Const,Min( MRS ,FirstVNF_CPU ) ) / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / ( ( MDR / ARS ) * FirstVNF_Mem ) ) ) ) ,MDR ) ) )", "choosing": "Max( Max( Min( RCSe ,( RCSe / MUM ) ),RCSe ),Max( CS,CS ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( DDR - DDR ),AMS ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( MRS - ( RRS / FirstVNF_CPU ) ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,Max( Max( ( CS / DS ),( ( DS - CS ) * ( MUC + RCSe ) ) ),( ( RCSe / RRSe ) / Min( DS ,( MLU + ( RCSe / ( MUM / MUM ) ) ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( ( Min( ( RRSe / MUC ) ,( RRSe - RCSe ) ) / Max( ( MLU * RCSe ),( Min( RRSe ,MLU ) - MUM ) ) ) ,( ( ( DS - CS ) * ( MUC + RCSe ) ) * ( Min( CS ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_Mem_Server ,BR ),( ( MDR + DDR ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MUC * MLU ) ,( ( MUR + RRSe ) / Max( RMSe,DS ) ) ) * ( Min( Min( ( ( ( ( RMSe * RCSe ) * CS ) + ( MLU / DS ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) ) ,( MUR - RCSe ) ) - ( ( MUC / RMSe ) / ( DS + RRSe ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.09234705136075777}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( DDR - DDR ),AMS ) ) ,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( ( MDR / ( FirstVNF_Mem / Max( RRS,Min( FirstVNF_CPU_Server ,ARS ) ) ) ) - DDR ) + Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( RCSe - Min( ( RCSe + CS ) ,RRSe ) ),( RRSe + ( MUM * RMSe ) ) )", "obj1": 0.9700214132762313, "obj2": 0.03407221075738487}, {"determining": "( FirstVNF_CPU / ( ACS / FirstVNF_Mem ) )", "choosing": "Min( ( ( CS - ( MUR + MUM ) ) / ( ( CS * MUC ) * MLU ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( MUM ,DS ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.1731126341718516}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),RRSe ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - ( ( Min( MUR ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Max( MRS,Min( MRS ,Min( ( Min( ARS ,FirstVNF_Mem_Server ) / Max( DDR,PN ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.683083511777302, "obj2": 0.256273511184719}, {"determining": "( ( MDR + Max( Const,FirstVNF_RAM ) ) / ( AMS * DDR ) )", "choosing": "( Min( CS ,MUM ) - Min( CS ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( ( Max( Const,( FirstVNF_Mem_Server - BR ) ) - ( MDR - FirstVNF_RAM ) ) + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / ( ( RMSe - RCSe ) * RCSe ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( ( FirstVNF_RAM + ( AMS + FirstVNF_RAM_Server ) ) + Max( Min( DDR ,DDR ),AMS ) ) ,MDR ) ) )", "choosing": "( Min( Max( MUR,Max( MLU,MUR ) ) ,RMSe ) * ( ( RRSe + DS ) * MUC ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( Max( FirstVNF_RAM_Server,Const ) - ( MDR + FirstVNF_RAM ) ) * Min( ( BR * CRS ) ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( BR * DDR ) / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) + Min( ( MLU * RCSe ) ,Max( CS,RRSe ) ) ) + MUC )", "obj1": 0.6937901498929336, "obj2": 0.25008579385074914}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( DDR - DDR ),AMS ) ) ,MDR ) ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * RRSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( Min( ( DDR + FirstVNF_RAM_Server ) ,( MRS + ( RRS * PN ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( FirstVNF_CPU + ACS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( MUM * CS ) ,( DS + CS ) ) ) ,Min( MLU ,MLU ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + PN ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * Max( MDR,FirstVNF_CPU_Server ) ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,Min( MLU ,( RCSe - RRSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) - MDR )", "choosing": "( Max( RCSe,( MUM / MUM ) ) - MUM )", "obj1": 0.7858672376873662, "obj2": 0.1596746515877292}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ( RRS + Max( ( DDR - DDR ),AMS ) ) ,MDR ) ) )", "choosing": "( ( ( Min( MUR ,RCSe ) / ( MUM - RRSe ) ) - ( ( MUR - RRSe ) - Max( ( Min( RRSe ,CS ) * Min( CS ,RCSe ) ),( Max( CS,MUR ) - ( MUM - DS ) ) ) ) ) * ( ( Min( RCSe ,MUM ) / Max( MUC,MUC ) ) - Min( ( MUR * RRSe ) ,( CS / RMSe ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0023416707432960962}, {"determining": "( ( ARS * FirstVNF_Mem_Server ) * ( Min( Max( ( FirstVNF_CPU_Server + ( PN - BR ) ),( Max( PN,RRS ) + Min( BR ,( MDR * ( ARS - AMS ) ) ) ) ) ,FirstVNF_Mem ) + MRS ) )", "choosing": "( Min( ( ( RMSe - MLU ) - RRSe ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - Max( RMSe,( RMSe - Max( ( RCSe * ( Max( Min( RCSe ,RRSe ),( RCSe / MUR ) ) * RRSe ) ),MUC ) ) ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( BR / ( ( ( Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( DDR * ARS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) * ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) - Const ) ) * ( FirstVNF_Mem_Server - MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( RCSe / RMSe ) ,( RRSe - RMSe ) ) ) - Min( Min( MUR ,( ( CS + ( Min( ( DS * MUR ) ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.2296262123339203}, {"determining": "Min( ( ( MDR - Const ) / MDR ) ,( FirstVNF_Mem_Server - Min( ( FirstVNF_RAM * Const ) ,Min( FirstVNF_Mem ,MRS ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.08544070247759679}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * DDR ) )", "choosing": "( Min( MUM ,DS ) * ( MUR * Max( Max( MLU,Min( ( ( RMSe - MLU ) / ( MUC + MUC ) ) ,RRSe ) ),( RCSe * ( MUR / ( Max( ( MUC - CS ),MUM ) / ( RCSe / RRSe ) ) ) ) ) ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324307}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_Mem_Server / BR ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUR ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( CS - RMSe ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( MUM ,DS ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( Max( CRS,FirstVNF_CPU ) - FirstVNF_CPU ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324307}, {"determining": "( MDR - ( MDR / Max( ( ( Const + FirstVNF_Mem ) + AMS ),ACS ) ) )", "choosing": "( Min( ( RCSe / MUM ) ,( MUR - MUC ) ) - DS )", "obj1": 0.7858672376873662, "obj2": 0.1596746515877292}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.12160891654692418}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - ( CRS * CRS ) ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / DS ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( ( MUC + RMSe ) ,MUM ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( ( ( ACS - MRS ) / BR ) - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Min( ( ( MLU + MUM ) * RCSe ) ,( MLU - MLU ) ) / ( RMSe + Min( RMSe ,RRSe ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "Max( ( ( RCSe * RRSe ) / ( RRSe / MUR ) ),( Max( MUC,RMSe ) * ( MLU - MUR ) ) )", "obj1": 0.8565310492505354, "obj2": 0.13497114939252233}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( MRS - Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * ACS ) ) ) / ( ( BR / ( Max( PN,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) - Min( RMSe ,RCSe ) )", "obj1": 0.9379014989293362, "obj2": 0.06696965139143579}, {"determining": "( ( BR / ( Max( PN,FirstVNF_CPU_Server ) * Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * ACS ) ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( CS / Max( DS,MUM ) ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,RCSe ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.24610876151726496}, {"determining": "( ( BR / ( Max( PN,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( CS / Max( DS,MUM ) ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,DS ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.24610876151726496}, {"determining": "( Max( MRS,Min( ( BR + FirstVNF_Mem_Server ) ,( Min( ( ( FirstVNF_RAM_Server / BR ) - ACS ) ,Const ) / FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( RRSe,MUR ) ) ,( Min( RMSe ,MUM ) - ( RRSe * CS ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( Min( MUC ,MUM ) ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( ( MLU * MUM ) ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Min( CRS ,( AMS / FirstVNF_Mem_Server ) ) * ( Max( PN,( ( ( BR - Const ) / ( AMS - FirstVNF_RAM ) ) / ( Max( MDR,BR ) / AMS ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( Min( ( RCSe - MUR ) ,Max( DS,MUM ) ) ,Max( Min( RCSe ,RRSe ),Max( MUC,RRSe ) ) ) ,( ( MUR + RRSe ) / Max( RMSe,DS ) ) ) * ( Min( Min( ( ( MUM + ( MUM / RRSe ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) ) ,( RCSe - MUR ) ) - ( ( RMSe / MUC ) / ( DS + RRSe ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.09234705136075777}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) * ( Max( PN,( ( ( BR - Const ) / ( AMS - FirstVNF_RAM ) ) / ( Max( MDR,BR ) / AMS ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( Min( ( MUC * MUC ) ,( RRSe / RRSe ) ) ,( ( MUR + RRSe ) / Max( RMSe,DS ) ) ) * ( Min( Min( ( ( MUM + ( MUM / RRSe ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) ) ,( RCSe - MUR ) ) - ( ( RMSe / MUC ) / ( DS + RRSe ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.09234705136075777}, {"determining": "( ( PN * FirstVNF_CPU_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( DS - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.867237687366167, "obj2": 0.12533341350687865}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ACS ) * Min( Min( CRS ,Const ) ,ACS ) ) - Const ) - ( DDR - DDR ) )", "choosing": "( Min( ( ( MUM / MUR ) * ( MUR / MUM ) ) ,( ( RRSe + MUR ) - Max( MLU,RRSe ) ) ) + ( ( ( RMSe - MLU ) / ( MUC + CS ) ) / ( Max( MLU,Max( CS,RRSe ) ) + Min( ( ( CS + ( Min( MUM ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ,MUR ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.06538317476912292}, {"determining": "( ( Max( FirstVNF_RAM_Server,Const ) - ( MDR + FirstVNF_RAM ) ) * Min( ( BR * CRS ) ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "( ( RRSe + CS ) * ( ( RRSe + DS ) * MUC ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( Max( Const,ARS ) - FirstVNF_CPU ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( RRSe,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.09008697298143471}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * ( Const / FirstVNF_RAM_Server ) ) / Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,Min( RRS ,AMS ) ) ) + Min( PN ,ARS ) ) ) )", "choosing": "( Min( ( Max( MUR,CS ) / MUR ) ,CS ) / Min( RCSe ,MLU ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + Min( PN ,ARS ) ) ) )", "choosing": "( ( RMSe - ( ( MUM - MUR ) / Min( MLU ,DS ) ) ) / ( Max( MUR,CS ) / MUR ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),RRSe ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - ( ( Min( MUR ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ( Max( Const,( FirstVNF_Mem_Server - BR ) ) - ( MDR - FirstVNF_RAM ) ) + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / ( ( RMSe - RCSe ) * RCSe ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( ( MDR / ( FirstVNF_Mem / Max( RRS,Min( FirstVNF_CPU_Server ,ARS ) ) ) ) - DDR ) + Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "( ( DS + RMSe ) / Max( ( RMSe + ( MLU + MUR ) ),MLU ) )", "obj1": 0.9700214132762313, "obj2": 0.03407221075738487}, {"determining": "( ( FirstVNF_CPU * FirstVNF_CPU_Server ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.8650963597430407, "obj2": 0.12667947195920043}, {"determining": "( AMS - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - MUR ) - ( MUM - DS ) )", "obj1": 0.9293361884368309, "obj2": 0.07393453846399163}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "( ( Min( Max( RCSe,MUM ) ,Min( MUM ,RMSe ) ) + Max( Min( RRSe ,MUR ),( MUM * RMSe ) ) ) + Max( Max( ( RRSe - CS ),Min( RMSe ,CS ) ),Max( Min( RMSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( Max( BR,FirstVNF_CPU_Server ) - ( AMS - FirstVNF_RAM ) ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "( Min( MUM ,CS ) / Max( MUR,RRSe ) )", "obj1": 0.8394004282655246, "obj2": 0.14925572493757863}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) )", "choosing": "Max( ( RCSe - Max( MUR,RRSe ) ),( Min( MUM ,RMSe ) + ( MUM * RMSe ) ) )", "obj1": 0.8479657387580299, "obj2": 0.13834812171406508}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( ( MDR - DDR ) + Min( ( RRS + Max( ( DDR - DDR ),AMS ) ) ,MDR ) ) )", "choosing": "( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ) * ( MUR * Max( Max( MLU,Min( ( ( RMSe - MLU ) / ( MUC + MUC ) ) ,RRSe ) ),( RCSe * ( MUR / RMSe ) ) ) ) )", "obj1": 0.9186295503211992, "obj2": 0.08053791392676256}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( Max( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),FirstVNF_CPU ) - FirstVNF_CPU ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * Max( Max( MLU,Min( CS ,RRSe ) ),( RCSe * ( MUR / RMSe ) ) ) ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324307}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( BR,ARS ) ) + Max( ( MRS * Max( FirstVNF_RAM_Server,DDR ) ),Max( Min( FirstVNF_CPU ,CRS ),Min( MDR ,( AMS - ( RRS * ( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( Min( Max( RCSe,MUM ) ,Min( MUM ,RMSe ) ) + Max( Min( RRSe ,MUR ),( MUM * RMSe ) ) ) + ( Max( RCSe,( ( MUR + Min( MLU ,( RRSe * ( MUC / MUR ) ) ) ) / RCSe ) ) * Max( Min( RMSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.0669396699906259}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( BR,ARS ) ) + Max( ( MRS * Max( FirstVNF_RAM_Server,DDR ) ),Max( Min( FirstVNF_CPU ,CRS ),Min( MDR ,( AMS - ( RRS * ( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( Min( Max( RCSe,MUM ) ,Min( MUM ,RMSe ) ) + Max( Min( RRSe ,MUR ),( MUM * RMSe ) ) ) + ( Max( RCSe,( ( MUR + Min( MLU ,( RRSe * ( MUC / MUR ) ) ) ) / RCSe ) ) * Max( Min( RMSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.0669396699906259}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( BR,ARS ) ) + Max( ( MRS * Max( FirstVNF_RAM_Server,DDR ) ),Max( Min( FirstVNF_CPU ,CRS ),Min( MDR ,( AMS - ( RRS * ( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( Min( Max( RCSe,MUM ) ,Min( MUM ,RMSe ) ) + Max( Min( RRSe ,MUR ),( MUM * RMSe ) ) ) + ( Max( RCSe,( ( MUR + Min( MLU ,( RRSe * ( MUC / MUR ) ) ) ) / RCSe ) ) * Max( Min( RMSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.0669396699906259}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + Max( ( MRS * Max( FirstVNF_RAM_Server,DDR ) ),Max( Min( FirstVNF_CPU ,CRS ),DDR ) ) )", "choosing": "( ( Min( Max( RCSe,MUM ) ,Min( MUM ,RMSe ) ) + Max( Min( RRSe ,MUR ),( MUM * RMSe ) ) ) + Max( Max( RCSe,( ( Min( MLU ,( RRSe * ( MUM / MUR ) ) ) + MUR ) / RCSe ) ),Max( Min( RMSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.0669396699906259}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS - AMS ) ) + Min( MRS ,PN ) ) / ( ACS - MDR ) )", "choosing": "( ( MUC + RMSe ) - Max( ( ( ( RRSe * RMSe ) + MUM ) * MUC ),( Max( RCSe,CS ) - ( CS + Max( MUM,Max( MUM,DS ) ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.21091884819573106}, {"determining": "( FirstVNF_CPU_Server / Max( MDR,ARS ) )", "choosing": "Min( Min( ( CS - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( ( ( ( RRSe + Min( MUC ,RCSe ) ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.892933618843683, "obj2": 0.11106413850005603}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - AMS ) ,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server - Max( ARS,AMS ) ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( ( MUC - ( MUR - CS ) ),RRSe ) * Max( MLU,( MUM * CS ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( MDR - DDR ) + Min( ARS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( ( MLU - MUM ) + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.0500697115769876}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + Max( ( MRS * Max( FirstVNF_RAM_Server,DDR ) ),Max( Min( FirstVNF_CPU ,CRS ),DDR ) ) )", "choosing": "( ( Min( Max( RCSe,MUM ) ,Min( MUM ,RMSe ) ) + Max( Min( RRSe ,MUR ),( MUM * RMSe ) ) ) + Max( Max( RCSe,( ( Min( MLU ,( RRSe * ( MUM / MUR ) ) ) + MUR ) / RCSe ) ),Max( Min( RMSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.0669396699906259}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + ( RRS * ( Min( DDR ,FirstVNF_CPU ) - MDR ) ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * ( MUR * MUM ) ),DS ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Max( MRS,Min( MRS ,Min( ( Min( ARS ,FirstVNF_Mem_Server ) / Max( DDR,PN ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( Max( ( RMSe + MUC ),Min( DS ,CS ) ) * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.256273511184719}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * Max( ACS,FirstVNF_Mem_Server ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),RRSe ) ,( ( MUM - DS ) - ( MUC * RRSe ) ) ) - ( ( Min( MUR ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7580299785867237, "obj2": 0.1866973414439736}, {"determining": "( ( ( MDR + FirstVNF_CPU_Server ) - Max( FirstVNF_RAM_Server,Const ) ) * Min( ( BR * Min( Min( ( Min( Const ,CRS ) + ( Const * Max( MDR,ARS ) ) ) ,RRS ) ,MRS ) ) ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "Max( ( Max( CS,MLU ) * ( Max( ( ( Min( MUC ,MUR ) + ( ( MUR * RMSe ) * RRSe ) ) - MUM ),CS ) * CS ) ),Min( Min( ( ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) + CS ) ,RCSe ) ,( MUR - RRSe ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Max( ( DDR - ACS ),Min( MDR ,MRS ) ) - ( ( Const * MDR ) + Min( FirstVNF_Mem ,MRS ) ) ) * ( ( ( AMS + ACS ) / Min( FirstVNF_Mem_Server ,RRS ) ) / ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( CRS / MRS ) ) ) )", "choosing": "Min( ( ( MUM + ( MUM / MUM ) ) * MUC ) ,Max( ( MUM + ( MUM / MUM ) ),( MLU * ( MUM / MUR ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.16953048525519826}, {"determining": "( ( FirstVNF_CPU_Server / PN ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,DS ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.12032415040141096}, {"determining": "( ( Max( FirstVNF_RAM_Server,Const ) - ( MDR + FirstVNF_RAM ) ) * MDR )", "choosing": "Max( Max( CS,MLU ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_RAM_Server - Const ) - ( MDR + FirstVNF_RAM ) ) * Min( CRS ,Max( FirstVNF_Mem,RRS ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( ( RCSe - ( ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,( MUC * MUC ) ) ) + CS ) ),RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( Max( ( MDR / ( FirstVNF_Mem / Max( RRS,( MRS * Const ) ) ) ),DDR ) + Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Min( ( ( ( ( Max( ( CS + MUR ),Max( RMSe,MUR ) ) - MUM ) * RRSe ) * MUM ) / ( ( MLU * Min( ( Max( ( CS - MUM ),RCSe ) - RMSe ) ,( RCSe - Max( Max( CS,MUR ),MUR ) ) ) ) / ( MUM - MUM ) ) ) ,( Min( ( MUR + MUM ) ,( RCSe + MLU ) ) * ( Min( MUR ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.03407221075738487}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( RRS ,Min( FirstVNF_Mem_Server ,MRS ) ) ,FirstVNF_Mem ) ) ) / ( AMS * Min( DDR ,RRS ) ) )", "choosing": "( Min( ( Max( ( MUR / ( MUC * RCSe ) ),MUC ) - MUR ) ,CS ) - ( MUC + MUC ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU * FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ),RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9357601713062098, "obj2": 0.07020240637552749}, {"determining": "( ( ( AMS - FirstVNF_RAM ) - Max( BR,FirstVNF_CPU_Server ) ) + ( ( ( Max( FirstVNF_Mem_Server,( ACS * RRS ) ) / ( FirstVNF_Mem / Max( RRS,Min( FirstVNF_CPU_Server ,ARS ) ) ) ) - DDR ) + Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "( Max( Min( MUC ,MLU ),( DS / Min( MUC ,CS ) ) ) - ( MUM - DS ) )", "obj1": 0.9700214132762313, "obj2": 0.03407221075738487}, {"determining": "Min( ( ( FirstVNF_CPU - Max( Max( FirstVNF_CPU,ARS ),DDR ) ) / ( MDR * MRS ) ) ,Min( ( FirstVNF_Mem_Server - FirstVNF_CPU ) ,( MRS / FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( RCSe + RCSe ) ,( RCSe * RMSe ) ) + Min( ( MLU * RCSe ) ,Max( ( ( MUC / DS ) / MUM ),Max( MLU,RMSe ) ) ) ) + MUC )", "obj1": 0.8972162740899358, "obj2": 0.09534943545671108}, {"determining": "( ( Max( FirstVNF_RAM_Server,Const ) - ( MDR + FirstVNF_RAM ) ) * Min( ( BR * CRS ) ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.21091884819573106}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( FirstVNF_RAM / MRS ) / Max( BR,FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,( ( MUR + RRSe ) / Max( RMSe,DS ) ) ) * ( Min( Min( ( ( ( ( RMSe * RCSe ) * CS ) + ( MUM / DS ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) ) ,( MUR - RCSe ) ) - ( ( MUC / RMSe ) / ( DS + RRSe ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2623312165738547}], "5": [{"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "( ( MUC + RMSe ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - ( ACS / ( ACS - DDR ) ) ) * ( RRS * PN ) ) ) / ( ACS - FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) / ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / ( Max( MUC,Max( ( RRSe * RCSe ),( ( MUC - MLU ) / DS ) ) ) / CS ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ACS - Min( MRS ,Max( PN,RRS ) ) ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / DS ),( MUM + CS ) ) - ( ( MUC / RRSe ) / ( ( RMSe / MLU ) + ( MUR * MUR ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( BR * DDR ) / ( MRS * Min( DDR ,( AMS * ( Min( FirstVNF_RAM_Server ,RRS ) - AMS ) ) ) ) )", "choosing": "( ( Min( ( MLU * ( Max( RMSe,Min( ( RCSe * MUM ) ,( CS - CS ) ) ) - Min( DS ,( Max( RCSe,MUC ) + RRSe ) ) ) ) ,Max( CS,RRSe ) ) + ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) ) + MUC )", "obj1": 0.6937901498929336, "obj2": 0.25008579385074914}, {"determining": "( ( BR / ( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( DDR * ARS ) ) / Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) ) + Min( ( Max( Const,Const ) - Max( DDR,RRS ) ) ,Max( ( PN / RRS ),( AMS / FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( CS / RMSe ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,DS ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.23458120599252055}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( Max( DS,MUM ) * ( Min( RMSe ,Min( MUM ,CS ) ) / MUM ) ) ,Max( Min( RCSe ,RRSe ),Max( MUC,RRSe ) ) )", "obj1": 0.715203426124197, "obj2": 0.23458120599252055}, {"determining": "( ( MRS - ( RRS / FirstVNF_CPU ) ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,Max( Max( ( CS / DS ),( ( DS - CS ) * ( MUC + RCSe ) ) ),( ( RCSe / RRSe ) / Min( DS ,( MLU + ( RCSe / ( MUM / MUM ) ) ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( ( Min( ( RRSe / MUC ) ,( RRSe - RCSe ) ) / Max( ( MLU * RCSe ),( Min( RRSe ,MLU ) - MUM ) ) ) ,( ( ( DS - CS ) * ( MUC + RCSe ) ) * ( Min( CS ,DS ) - ( RCSe + CS ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),RRSe ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - ( ( Min( MUR ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( MDR + Max( Const,FirstVNF_RAM ) ) / ( AMS * DDR ) )", "choosing": "( Min( CS ,MUM ) - Min( CS ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( BR * DDR ) / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) + Min( ( MLU * RCSe ) ,Max( CS,RRSe ) ) ) + MUC )", "obj1": 0.6937901498929336, "obj2": 0.25008579385074914}, {"determining": "( ( Min( ( DDR + FirstVNF_RAM_Server ) ,( MRS + ( RRS * PN ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( FirstVNF_CPU + ACS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( MUM * CS ) ,( DS + CS ) ) ) ,Min( MLU ,MLU ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + PN ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * Max( MDR,FirstVNF_CPU_Server ) ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,Min( MLU ,( RCSe - RRSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) - MDR )", "choosing": "( Max( RCSe,( MUM / MUM ) ) - MUM )", "obj1": 0.7858672376873662, "obj2": 0.1596746515877292}, {"determining": "( ( BR / ( ( ( Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( DDR * ARS ) ) ) + ( ( ( FirstVNF_Mem_Server / ACS ) * ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) - Const ) ) * ( FirstVNF_Mem_Server - MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( RCSe / RMSe ) ,( RRSe - RMSe ) ) ) - Min( Min( MUR ,( ( CS + ( Min( ( DS * MUR ) ,CS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.2296262123339203}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( MDR * DDR ) )", "choosing": "( Min( MUM ,DS ) * ( MUR * Max( Max( MLU,Min( ( ( RMSe - MLU ) / ( MUC + MUC ) ) ,RRSe ) ),( RCSe * ( MUR / ( Max( ( MUC - CS ),MUM ) / ( RCSe / RRSe ) ) ) ) ) ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324307}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_Mem_Server / BR ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUR ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( CS - RMSe ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( MUM ,DS ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( Max( CRS,FirstVNF_CPU ) - FirstVNF_CPU ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324307}, {"determining": "( MDR - ( MDR / Max( ( ( Const + FirstVNF_Mem ) + AMS ),ACS ) ) )", "choosing": "( Min( ( RCSe / MUM ) ,( MUR - MUC ) ) - DS )", "obj1": 0.7858672376873662, "obj2": 0.1596746515877292}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - ( CRS * CRS ) ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / DS ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( ( MUC + RMSe ) ,MUM ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( ( ( ACS - MRS ) / BR ) - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Min( ( ( MLU + MUM ) * RCSe ) ,( MLU - MLU ) ) / ( RMSe + Min( RMSe ,RRSe ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( Max( MRS,Min( ( BR + FirstVNF_Mem_Server ) ,( Min( ( ( FirstVNF_RAM_Server / BR ) - ACS ) ,Const ) / FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( RRSe,MUR ) ) ,( Min( RMSe ,MUM ) - ( RRSe * CS ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( Min( MUC ,MUM ) ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( ( MLU * MUM ) ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),RRSe ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - ( ( Min( MUR ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "( ( Min( Max( RCSe,MUM ) ,Min( MUM ,RMSe ) ) + Max( Min( RRSe ,MUR ),( MUM * RMSe ) ) ) + Max( Max( ( RRSe - CS ),Min( RMSe ,CS ) ),Max( Min( RMSe ,MUR ),( RRSe * DS ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( Max( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),FirstVNF_CPU ) - FirstVNF_CPU ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * Max( Max( MLU,Min( CS ,RRSe ) ),( RCSe * ( MUR / RMSe ) ) ) ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324307}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - AMS ) ,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server - Max( ARS,AMS ) ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( ( MUC - ( MUR - CS ) ),RRSe ) * Max( MLU,( MUM * CS ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + ( RRS * ( Min( DDR ,FirstVNF_CPU ) - MDR ) ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * ( MUR * MUM ) ),DS ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Max( ( DDR - ACS ),Min( MDR ,MRS ) ) - ( ( Const * MDR ) + Min( FirstVNF_Mem ,MRS ) ) ) * ( ( ( AMS + ACS ) / Min( FirstVNF_Mem_Server ,RRS ) ) / ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( CRS / MRS ) ) ) )", "choosing": "Min( ( ( MUM + ( MUM / MUM ) ) * MUC ) ,Max( ( MUM + ( MUM / MUM ) ),( MLU * ( MUM / MUR ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.16953048525519826}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( RRS ,Min( FirstVNF_Mem_Server ,MRS ) ) ,FirstVNF_Mem ) ) ) / ( AMS * Min( DDR ,RRS ) ) )", "choosing": "( Min( ( Max( ( MUR / ( MUC * RCSe ) ),MUC ) - MUR ) ,CS ) - ( MUC + MUC ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( FirstVNF_RAM / MRS ) / Max( BR,FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,( ( MUR + RRSe ) / Max( RMSe,DS ) ) ) * ( Min( Min( ( ( ( ( RMSe * RCSe ) * CS ) + ( MUM / DS ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) ) ,( MUR - RCSe ) ) - ( ( MUC / RMSe ) / ( DS + RRSe ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2623312165738547}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( PN ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * ( PN - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR + RMSe ) + MUC ) - Min( RRSe ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( ARS ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( Const ,Const ) ) ) ) / Max( AMS,DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,Min( ( ( ( ( RRSe - Min( MUC ,RRSe ) ) - RMSe ) / MLU ) / CS ) ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + Min( FirstVNF_CPU_Server ,Const ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( MUM ,( Max( Min( ( ( ( RRSe + CS ) / MUR ) - RCSe ) ,RRSe ),MLU ) - CS ) ) / Min( RCSe ,CS ) )", "obj1": 0.7259100642398287, "obj2": 0.20151156636418507}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( ( MUM + RMSe ) - RRSe ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( FirstVNF_CPU_Server * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( ( MLU + DS ) / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) - Min( RMSe ,RCSe ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "( ( ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) + Min( ( MLU * RCSe ) ,Max( CS,RRSe ) ) ) + MUC )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( FirstVNF_RAM_Server * DDR ) / Max( FirstVNF_RAM_Server,Min( Max( ( AMS - ( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem ),Const ) - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) ,Min( CRS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUR,( ( RMSe - ( MUC + RCSe ) ) - RMSe ) ) / MUR ) - Min( MLU ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( MDR * Min( Max( BR,FirstVNF_CPU_Server ) ,( MDR / FirstVNF_Mem_Server ) ) ) / ( BR * DDR ) )", "choosing": "( ( ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) + Min( ( ( Min( MLU ,( RRSe * ( MUM / RRSe ) ) ) - MUR ) / RCSe ) ,Max( CS,RRSe ) ) ) + MUC )", "obj1": 0.6937901498929336, "obj2": 0.25008579385074914}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + ( RRS * PN ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( Max( ( RMSe + MUC ),Min( DS ,CS ) ) * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "Min( ( ( MDR - Const ) / MDR ) ,( FirstVNF_Mem_Server - Min( ( FirstVNF_RAM * Const ) ,Min( FirstVNF_Mem ,MRS ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.17216282720016732}, {"determining": "Min( ( ( MDR - Const ) / MDR ) ,( FirstVNF_Mem_Server - Min( ( FirstVNF_RAM * Const ) ,Min( FirstVNF_Mem ,MRS ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.17216282720016732}, {"determining": "Min( ( FirstVNF_Mem_Server - ( ( DDR * DDR ) - RRS ) ) ,( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * Const ) + Min( FirstVNF_Mem ,MRS ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM / ( MLU + RRSe ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.17216282720016732}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( Max( CRS,FirstVNF_CPU ) - FirstVNF_CPU ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * Max( Max( MLU,Min( ( ( RMSe - MLU ) / ( MUC + MUC ) ) ,RRSe ) ),( RCSe * ( MUR / RMSe ) ) ) ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324307}, {"determining": "( Min( MDR ,FirstVNF_Mem_Server ) - MDR )", "choosing": "( Max( RCSe,( MUM / MUM ) ) - MUM )", "obj1": 0.7858672376873662, "obj2": 0.1596746515877292}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( Max( CRS,FirstVNF_CPU ) - Min( ( ( FirstVNF_CPU - Max( Max( FirstVNF_CPU,ARS ),DDR ) ) / ( MDR * MRS ) ) ,Min( ( FirstVNF_Mem_Server - FirstVNF_CPU ) ,( MRS / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * Max( Max( MLU,Min( ( ( RMSe - MLU ) / ( MUC + MUC ) ) ,RRSe ) ),Min( ( RCSe + RCSe ) ,( RCSe * RMSe ) ) ) ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324307}, {"determining": "( FirstVNF_CPU / ( ACS - MDR ) )", "choosing": "Min( ( ( CS - ( MUR + MUM ) ) / ( ( CS * MUC ) * MLU ) ) ,( Max( ( CS / ( Min( ( CS * MUM ) ,( DS + CS ) ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( MUM ,DS ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( ACS - MDR ) / ACS )", "choosing": "Min( ( RRSe * CS ) ,( Max( ( CS / DS ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / DS ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / DS ),( ( DS - CS ) * ( MUC + RCSe ) ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( Max( MRS,Min( ( MDR + FirstVNF_CPU_Server ) ,Min( Min( Const ,( FirstVNF_RAM_Server + Min( FirstVNF_CPU ,( ACS * MDR ) ) ) ) ,FirstVNF_Mem ) ) ) / ( DDR * DDR ) )", "choosing": "( ( Max( ( RMSe - MLU ),Max( DS,MUR ) ) - ( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( ( RCSe * RCSe ) + ( RMSe * Min( Min( RMSe ,CS ) ,Max( Max( ( MLU + RRSe ),MUR ),Min( MUR ,Max( MLU,RRSe ) ) ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( BR * DDR ) / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) + Min( ( MLU * RCSe ) ,Max( CS,RRSe ) ) ) + MUC )", "obj1": 0.6937901498929336, "obj2": 0.25008579385074914}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( BR * DDR ) / ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) )", "choosing": "( DS + MUC )", "obj1": 0.6937901498929336, "obj2": 0.25008579385074914}, {"determining": "( ( BR * DDR ) / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) + Min( ( MLU * RCSe ) ,Max( CS,RRSe ) ) ) + MUC )", "obj1": 0.6937901498929336, "obj2": 0.25008579385074914}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),RRSe ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - ( ( Min( MUR ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( ( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) ) ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( RCSe ,CS ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( FirstVNF_Mem + ( FirstVNF_Mem + ( FirstVNF_Mem_Server * BR ) ) ) - Max( ACS,FirstVNF_Mem_Server ) )", "choosing": "( ( MUM - Min( MUR ,( ( CS + ( Min( ( DS * MUR ) ,CS ) + Min( Max( MUM,MLU ) ,RCSe ) ) ) / ( DS * RRSe ) ) ) ) - ( MUM - DS ) )", "obj1": 0.8479657387580299, "obj2": 0.08473659340324105}, {"determining": "( ( BR / ( ( ( Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( DDR * ARS ) ) ) + ( ( ( AMS - Max( ACS,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + FirstVNF_RAM_Server ) ) - Const ) ) * ( FirstVNF_Mem_Server - MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( RCSe / RMSe ) ,( RRSe - RMSe ) ) ) - Min( Min( MUR ,( ( CS + ( ( MUM - DS ) + ( MUR / MUC ) ) ) / ( DS * RRSe ) ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.1632594752195134}, {"determining": "( ( ACS - MDR ) / FirstVNF_CPU )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),RCSe ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.7408993576017131, "obj2": 0.18982427122854392}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,( FirstVNF_CPU - DDR ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( MRS + RRS ) ,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) + Max( ( FirstVNF_RAM - FirstVNF_Mem ),( RRS * PN ) ) ) / ( ACS - ( Max( MDR,DDR ) + RRS ) ) )", "choosing": "Min( Min( ( ( Min( Max( Max( ( RRSe - MUM ),Max( RMSe,MLU ) ),( ( MUM - RMSe ) - Max( RCSe,MUM ) ) ) ,Min( MUC ,( RMSe / Min( CS ,MUR ) ) ) ) + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( CS + MUM ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Max( MRS,Min( MRS ,( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,( ( RRSe * CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( AMS * DDR ) ) / ( ACS - MDR ) )", "choosing": "Min( ( ( MUC + MUC ) - Min( MLU ,DS ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7473233404710921, "obj2": 0.1823648249412032}, {"determining": "Min( ( FirstVNF_Mem_Server - ( ( DDR * DDR ) - RRS ) ) ,( FirstVNF_Mem_Server - ( ( Max( DDR,PN ) * Const ) + Min( FirstVNF_Mem ,MRS ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM / ( ( Max( ( RMSe + MUC ),Min( DS ,CS ) ) * CS ) * ( RCSe + MUM ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.173129696091566}, {"determining": "Min( ( FirstVNF_Mem_Server - ( ( DDR * DDR ) - RRS ) ) ,( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * Const ) + Min( FirstVNF_Mem ,MRS ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM / ( MLU + RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.17345939588980644}, {"determining": "( ( Min( ( ( Max( CRS,FirstVNF_CPU ) - FirstVNF_CPU ) + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.7408993576017131, "obj2": 0.18982427122854392}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( Max( CRS,FirstVNF_CPU ) - FirstVNF_CPU ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * Max( Max( MLU,Min( ( ( RMSe - MLU ) / ( MUC + MUC ) ) ,RRSe ) ),( RCSe * ( MUR / RMSe ) ) ) ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324307}, {"determining": "( ( ACS - MDR ) / CRS )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / DS ),( ( DS - CS ) * ( MUC + ( RCSe * ( MUR / RMSe ) ) ) ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "Min( ( ACS - MDR ) ,( Max( CRS,( PN - FirstVNF_Mem_Server ) ) - FirstVNF_CPU ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * Max( Max( MLU,Min( ( ( CS * MUR ) / ( MUC + MUC ) ) ,RRSe ) ),( ( MUC + MUC ) - CS ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18982427122854392}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * Max( Max( MLU,Min( ( ( RMSe - MLU ) / ( MUC + MUC ) ) ,RRSe ) ),( RCSe * ( MUR / RMSe ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18982427122854392}, {"determining": "( Max( FirstVNF_RAM_Server,Const ) - MDR )", "choosing": "( Max( RCSe,( MUM / MUM ) ) - ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14247772630265257}, {"determining": "( ( BR / ( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( DDR * ARS ) ) / Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) ) + Min( ( Max( Const,Const ) - Max( DDR,RRS ) ) ,Max( ( PN / RRS ),( AMS / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,Min( MUM ,CS ) ) + ( MLU + DS ) ) / Min( ( CS / RMSe ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,DS ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.23458120599252055}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + ( RRS * PN ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.7473233404710921, "obj2": 0.1823648249412032}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( FirstVNF_RAM_Server * ACS ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),RRSe ) ,( ( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( CS / Max( DS,MUM ) ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,RCSe ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) ) - ( MUC * RRSe ) ) ) - ( ( Min( MUR ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1885342087533543}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( ACS - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.7473233404710921, "obj2": 0.1823648249412032}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( PN - RRS ) ) ) + AMS ) ) + ( ( Max( ( MRS - DDR ),( CRS * ( AMS * MRS ) ) ) - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( ( ( RCSe / RRSe ) / ( DS * ( RCSe / MUM ) ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ( ACS / RRS ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) / ( AMS * ACS ) )", "choosing": "Min( Min( ( ( RMSe - RCSe ) - ( MUR + MUM ) ) ,Min( ( CS * ( ( CS + ( MUM + RMSe ) ) - ( MLU + ( MUR - CS ) ) ) ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RRSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ACS - MDR ) / ( ( FirstVNF_Mem - CRS ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * Min( RRS ,PN ) ) ) )", "choosing": "Min( Min( ( ( MUR * MUR ) - Max( RRSe,( RCSe / ( MUM * ( DS + RRSe ) ) ) ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RRSe / RCSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( MUM ,CS ) / Max( MUR,RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Min( ( MUC * ( ( Min( ( RCSe - MLU ) ,DS ) + MUR ) + RRSe ) ) ,( RRSe / RRSe ) ) ,( ( MUR + RRSe ) / Max( RMSe,DS ) ) ) * ( Min( Min( ( ( ( ( RMSe * RCSe ) * CS ) + ( MUM / DS ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) ) ,( MUR - RCSe ) ) - ( ( MUC / RMSe ) / ( DS + RRSe ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( MDR + CRS ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( ( ( FirstVNF_RAM_Server - Const ) - ( MDR + FirstVNF_RAM ) ) * Min( CRS ,Max( FirstVNF_Mem,RRS ) ) ) )", "choosing": "Min( ( Max( DS,MUM ) * ( Min( RMSe ,Min( MUM ,CS ) ) / MUM ) ) ,Max( Max( MLU,( MUC * MUC ) ),Max( MUC,RRSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.24560263562704682}, {"determining": "( ( BR / ( BR - CRS ) ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) / ( MLU + DS ) ) / Min( Min( CS ,Max( ( ( RRSe - DS ) / RRSe ),MUM ) ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,RCSe ) * ( ( ( MUM * DS ) + Max( MLU,( RMSe * CS ) ) ) + RCSe ) ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2560737626915278}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18982427122854392}, {"determining": "( ( BR / ( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( DDR * ARS ) ) / Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) ) + Min( ( Max( Const,Const ) - Max( DDR,RRS ) ) ,Max( ( PN / RRS ),( AMS / FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,( CRS - Max( FirstVNF_Mem_Server,CRS ) ) ) ) ) + ( FirstVNF_CPU + DDR ) )", "choosing": "( Min( RRSe ,( Min( RRSe ,MLU ) / MUC ) ) / Min( CS ,RCSe ) )", "obj1": 0.715203426124197, "obj2": 0.23458120599252055}], "6": [{"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "( ( MUC + RMSe ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - ( ACS / ( ACS - DDR ) ) ) * ( RRS * PN ) ) ) / ( ACS - FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) / ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / ( Max( MUC,Max( ( RRSe * RCSe ),( ( MUC - MLU ) / DS ) ) ) / CS ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),RRSe ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - ( ( Min( MUR ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( MDR + Max( Const,FirstVNF_RAM ) ) / ( AMS * DDR ) )", "choosing": "( Min( CS ,MUM ) - Min( CS ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( DDR + FirstVNF_RAM_Server ) ,( MRS + ( RRS * PN ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( FirstVNF_CPU + ACS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( MUM * CS ) ,( DS + CS ) ) ) ,Min( MLU ,MLU ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + PN ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * Max( MDR,FirstVNF_CPU_Server ) ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,Min( MLU ,( RCSe - RRSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_Mem_Server / BR ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUR ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( CS - RMSe ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( MUM ,DS ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Max( MRS,Min( ( BR + FirstVNF_Mem_Server ) ,( Min( ( ( FirstVNF_RAM_Server / BR ) - ACS ) ,Const ) / FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( RRSe,MUR ) ) ,( Min( RMSe ,MUM ) - ( RRSe * CS ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( Min( MUC ,MUM ) ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( ( MLU * MUM ) ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),RRSe ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - ( ( Min( MUR ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - AMS ) ,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server - Max( ARS,AMS ) ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( ( MUC - ( MUR - CS ) ),RRSe ) * Max( MLU,( MUM * CS ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + ( RRS * ( Min( DDR ,FirstVNF_CPU ) - MDR ) ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * ( MUR * MUM ) ),DS ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( RRS ,Min( FirstVNF_Mem_Server ,MRS ) ) ,FirstVNF_Mem ) ) ) / ( AMS * Min( DDR ,RRS ) ) )", "choosing": "( Min( ( Max( ( MUR / ( MUC * RCSe ) ),MUC ) - MUR ) ,CS ) - ( MUC + MUC ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( FirstVNF_RAM / MRS ) / Max( BR,FirstVNF_Mem_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( MUR ,( ( MUR + RRSe ) / Max( RMSe,DS ) ) ) * ( Min( Min( ( ( ( ( RMSe * RCSe ) * CS ) + ( MUM / DS ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) ) ,( MUR - RCSe ) ) - ( ( MUC / RMSe ) / ( DS + RRSe ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2623312165738547}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( PN ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * ( PN - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR + RMSe ) + MUC ) - Min( RRSe ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( ARS ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ,Min( Const ,Const ) ) ) ) / Max( AMS,DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,Min( ( ( ( ( RRSe - Min( MUC ,RRSe ) ) - RMSe ) / MLU ) / CS ) ,RMSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + Min( FirstVNF_CPU_Server ,Const ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( MUM ,( Max( Min( ( ( ( RRSe + CS ) / MUR ) - RCSe ) ,RRSe ),MLU ) - CS ) ) / Min( RCSe ,CS ) )", "obj1": 0.7259100642398287, "obj2": 0.20151156636418507}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) - Min( RMSe ,RCSe ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( FirstVNF_RAM_Server * DDR ) / Max( FirstVNF_RAM_Server,Min( Max( ( AMS - ( Max( ( FirstVNF_CPU_Server - FirstVNF_Mem ),Const ) - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) ,Min( CRS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( MUR,( ( RMSe - ( MUC + RCSe ) ) - RMSe ) ) / MUR ) - Min( MLU ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + ( RRS * PN ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( Max( ( RMSe + MUC ),Min( DS ,CS ) ) * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Max( MRS,Min( ( MDR + FirstVNF_CPU_Server ) ,Min( Min( Const ,( FirstVNF_RAM_Server + Min( FirstVNF_CPU ,( ACS * MDR ) ) ) ) ,FirstVNF_Mem ) ) ) / ( DDR * DDR ) )", "choosing": "( ( Max( ( RMSe - MLU ),Max( DS,MUR ) ) - ( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( ( RCSe * RCSe ) + ( RMSe * Min( Min( RMSe ,CS ) ,Max( Max( ( MLU + RRSe ),MUR ),Min( MUR ,Max( MLU,RRSe ) ) ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),RRSe ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - ( ( Min( MUR ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( ( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) ) ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( RCSe ,CS ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,( FirstVNF_CPU - DDR ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Max( MRS,Min( MRS ,( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,( ( RRSe * CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( PN - RRS ) ) ) + AMS ) ) + ( ( Max( ( MRS - DDR ),( CRS * ( AMS * MRS ) ) ) - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( ( ( RCSe / RRSe ) / ( DS * ( RCSe / MUM ) ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ( ACS / RRS ) + ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) / ( AMS * ACS ) )", "choosing": "Min( Min( ( ( RMSe - RCSe ) - ( MUR + MUM ) ) ,Min( ( CS * ( ( CS + ( MUM + RMSe ) ) - ( MLU + ( MUR - CS ) ) ) ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RRSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( ACS - MDR ) / ( ( FirstVNF_Mem - CRS ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * Min( RRS ,PN ) ) ) )", "choosing": "Min( Min( ( ( MUR * MUR ) - Max( RRSe,( RCSe / ( MUM * ( DS + RRSe ) ) ) ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RRSe / RCSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( MUM ,CS ) / Max( MUR,RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( Min( ( MUC * ( ( Min( ( RCSe - MLU ) ,DS ) + MUR ) + RRSe ) ) ,( RRSe / RRSe ) ) ,( ( MUR + RRSe ) / Max( RMSe,DS ) ) ) * ( Min( Min( ( ( ( ( RMSe * RCSe ) * CS ) + ( MUM / DS ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) ) ,( MUR - RCSe ) ) - ( ( MUC / RMSe ) / ( DS + RRSe ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( MDR + CRS ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( BR / ( BR - CRS ) ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) / ( MLU + DS ) ) / Min( Min( CS ,Max( ( ( RRSe - DS ) / RRSe ),MUM ) ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,RCSe ) * ( ( ( MUM * DS ) + Max( MLU,( RMSe * CS ) ) ) + RCSe ) ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2560737626915278}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "Min( ( MDR - ACS ) ,( ( Min( MRS ,Min( Min( MRS ,Const ) ,( ( Max( Const,MDR ) / FirstVNF_RAM_Server ) - Const ) ) ) * FirstVNF_CPU ) - FirstVNF_CPU ) )", "choosing": "( Min( DS ,MUM ) * ( Max( MLU,DS ) * Max( Max( MLU,Min( ( ( CS * DS ) / ( MUC + RRSe ) ) ,RRSe ) ),( RCSe * Max( MLU,RRSe ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18754783363741184}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( MRS ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( MLU ,DS ) + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) ),Min( MRS ,Min( Min( ( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) ) ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( RCSe ,CS ) - Min( ( MUC * RRSe ) ,DS ) )", "obj1": 0.734475374732334, "obj2": 0.1940790374265749}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.19163046093073888}, {"determining": "( ( BR / ( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( Max( CRS,FirstVNF_CPU ) - FirstVNF_CPU ) ) / Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) ) + Min( ( Max( Const,Const ) - Max( DDR,RRS ) ) ,Max( ( PN / RRS ),( AMS / FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( MUM ,CS ) / ( MUR * Max( Max( MLU,Min( ( ( RMSe - MLU ) / ( MUC + MUC ) ) ,RRSe ) ),( RCSe * ( MUR / RMSe ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.23760354069987133}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( MDR + CRS ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Min( Min( Const ,Const ) ,FirstVNF_Mem ) ,BR ) ,Min( ACS ,Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,Min( CS ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,( MUR / ( RMSe * DS ) ) ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.18725143482125509}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( ( DDR * DDR ) - RRS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( Min( MUM ,CS ) ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( ( ( ( ACS - MRS ) / BR ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) ) ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( RCSe ,CS ) - Min( MLU ,( RMSe + Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( ( ( ACS - MRS ) / BR ) - MDR ) / ( FirstVNF_CPU - MRS ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Min( ( ( MLU + MUM ) * RCSe ) ,( MLU - MLU ) ) / ( RMSe + Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( ( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) ) ,Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( ( Min( MUM ,CS ) / Min( RCSe ,CS ) ) ,CS ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( FirstVNF_RAM / MRS ) / Max( BR,FirstVNF_Mem_Server ) ) ) / MDR ) )", "choosing": "( Min( MUR ,Max( Max( ( RRSe - CS ),Min( RMSe ,CS ) ),Max( Min( RMSe ,MUR ),( RRSe * DS ) ) ) ) * ( Min( Min( ( ( ( ( RMSe * RCSe ) * CS ) + ( MUM / DS ) ) * MUC ) ,Max( MUM,( MLU * ( MUM / MUR ) ) ) ) ,( MUR - RCSe ) ) - ( ( MUC / RMSe ) / ( DS + RRSe ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2623312165738547}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Max( Max( MDR,Min( ( ( FirstVNF_CPU + MDR ) - ARS ) ,MRS ) ),Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * FirstVNF_RAM ) )", "choosing": "Min( Max( CS,RCSe ) ,Max( ( Max( RRSe,MLU ) * Max( MLU,Min( MUM ,Min( MUM ,( Min( RMSe ,CS ) * ( DS - CS ) ) ) ) ) ),RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Max( Const,( ( AMS / FirstVNF_CPU_Server ) / MDR ) ) ,FirstVNF_Mem ) ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( PN * RRS ) ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Max( DS,MUC ),( Max( DS,Min( MLU ,( ( RRSe * CS ) * ( RCSe + MUM ) ) ) ) * RRSe ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,( ( RRSe * CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,( Min( MRS ,Min( CRS ,FirstVNF_Mem ) ) - DDR ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( ( MUC + MUC ) - Min( MLU ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,( FirstVNF_CPU - DDR ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( CRS ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,( FirstVNF_CPU - DDR ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( ACS - MDR ) / ( ( DDR - FirstVNF_Mem ) * PN ) )", "choosing": "Min( ( MUC - CS ) ,( ( Min( MUM ,RRSe ) * ( MUM + CS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( ( ( ( ACS / RRS ) + ( ( FirstVNF_Mem - FirstVNF_RAM ) * ( RRS * PN ) ) ) / ( ACS * MDR ) ) * DDR ) / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) + Min( ( CS * MUM ) ,Max( CS,RRSe ) ) ) + MUC )", "obj1": 0.6937901498929336, "obj2": 0.24923977828904129}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( Max( MRS,Min( Min( ( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) ) ,Const ) ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Max( Max( CS,Min( RCSe ,CS ) ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( ( ( FirstVNF_RAM_Server + MRS ) * ( Const / ( FirstVNF_RAM + ARS ) ) ) ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( RCSe ,Max( MLU,Min( MUM ,CS ) ) ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Max( Max( CS,RRSe ),Max( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ),RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( ( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) ) ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( RCSe ,CS ) - Min( MLU ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( BR / ( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( DDR * ARS ) ) / Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) ) + Min( ( Max( Const,Const ) - Max( DDR,RRS ) ) ,Max( ( PN / RRS ),( AMS / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,Min( MUM ,CS ) ) + ( MLU + DS ) ) / Min( ( CS / RMSe ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,DS ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.2248050562863055}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.7259100642398287, "obj2": 0.20151156636418507}, {"determining": "( ( Min( ( FirstVNF_Mem + ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( DS,( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.20014804942782433}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( RRS ,Min( FirstVNF_Mem_Server ,MRS ) ) ,FirstVNF_Mem ) ) ) / ( AMS * Min( DDR ,RRS ) ) )", "choosing": "( Min( ( Max( ( MUR / ( MUC * RCSe ) ),MUC ) - MUR ) ,CS ) - ( MUC + MUC ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( RRS ,Min( FirstVNF_Mem_Server ,MRS ) ) ,FirstVNF_Mem ) ) ) / ( AMS * Min( DDR ,RRS ) ) )", "choosing": "( Min( ( Max( ( MUR / ( MUC * RCSe ) ),MUC ) - MUR ) ,CS ) - ( MUC + MUC ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( RRS ,Min( FirstVNF_Mem_Server ,MRS ) ) ,FirstVNF_Mem ) ) ) / ( AMS * Min( DDR ,RRS ) ) )", "choosing": "( Min( ( Max( ( MUR / ( MUC * RCSe ) ),MUC ) - MUR ) ,CS ) - ( MUC + MUC ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) ) / ( AMS * ( DDR / RRS ) ) )", "choosing": "( Min( ( MUR + ( MUR + ( MUR / Max( DS,CS ) ) ) ) ,CS ) - ( MUC + MUC ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( BR - Max( RRS,DDR ) ) / ( DDR * AMS ) )", "choosing": "( ( MUC + MUC ) - ( ( ( ( RRSe - RMSe ) * Min( RCSe ,( MLU + ( ( RRSe + RMSe ) - DS ) ) ) ) * Min( MLU ,RRSe ) ) * ( CS / CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Min( MRS ,( MDR - DDR ) ) ) / ( DDR * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( ( RCSe + RCSe ) + ( RMSe * Min( DS ,Max( Min( MUR ,MUC ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.2642216193853866}, {"determining": "( Max( MRS,Min( MRS ,Min( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( Min( RCSe ,RMSe ) ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.25560057945709336}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( ( RCSe + RCSe ) + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( DDR / FirstVNF_RAM_Server ) / ( DDR * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( DS + Max( MUC,( MLU - Max( ( MUC / DS ),Min( MUC ,CS ) ) ) ) ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),RMSe ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( AMS,Min( Max( MRS,( AMS - ARS ) ) ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( MLU * ( Max( RMSe,Min( ( CS - CS ) ,( RCSe * MUM ) ) ) - Min( Min( ( RMSe - MUR ) ,( DS + RMSe ) ) ,( Max( RCSe,MUC ) + RRSe ) ) ) ) ,Max( CS,RRSe ) ) + ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) ) + MUC )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.7259100642398287, "obj2": 0.20151156636418507}, {"determining": "( Max( MRS,( Max( ( RRS / MDR ),FirstVNF_RAM_Server ) * MRS ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( ( RMSe * Min( DS ,Max( Max( MUR,Max( CS,CS ) ),MUC ) ) ) * ( ( MLU + Max( ( RMSe + ( MUC / RMSe ) ),MUC ) ) * MUM ) ) / ( Min( CS ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,( Min( ( ( ARS / FirstVNF_Mem_Server ) + Const ) ,RRS ) / FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( DS - MUM ),MUR ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( CRS / DDR ) / ( ARS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,( RRSe * ( RCSe - CS ) ) ) * RRSe ),RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}], "7": [{"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "( ( MUC + RMSe ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - AMS ) ,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server - Max( ARS,AMS ) ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( ( MUC - ( MUR - CS ) ),RRSe ) * Max( MLU,( MUM * CS ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + Min( FirstVNF_CPU_Server ,Const ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( MUM ,( Max( Min( ( ( ( RRSe + CS ) / MUR ) - RCSe ) ,RRSe ),MLU ) - CS ) ) / Min( RCSe ,CS ) )", "obj1": 0.7259100642398287, "obj2": 0.20151156636418507}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( BR - CRS ) ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) / ( MLU + DS ) ) / Min( Min( CS ,Max( ( ( RRSe - DS ) / RRSe ),MUM ) ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,RCSe ) * ( ( ( MUM * DS ) + Max( MLU,( RMSe * CS ) ) ) + RCSe ) ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2560737626915278}, {"determining": "Min( ( MDR - ACS ) ,( ( Min( MRS ,Min( Min( MRS ,Const ) ,( ( Max( Const,MDR ) / FirstVNF_RAM_Server ) - Const ) ) ) * FirstVNF_CPU ) - FirstVNF_CPU ) )", "choosing": "( Min( DS ,MUM ) * ( Max( MLU,DS ) * Max( Max( MLU,Min( ( ( CS * DS ) / ( MUC + RRSe ) ) ,RRSe ) ),( RCSe * Max( MLU,RRSe ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18754783363741184}, {"determining": "( Max( ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) ),Min( MRS ,Min( Min( ( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) ) ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( RCSe ,CS ) - Min( ( MUC * RRSe ) ,DS ) )", "obj1": 0.734475374732334, "obj2": 0.1940790374265749}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.19163046093073888}, {"determining": "( ( BR / ( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( Max( CRS,FirstVNF_CPU ) - FirstVNF_CPU ) ) / Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) ) + Min( ( Max( Const,Const ) - Max( DDR,RRS ) ) ,Max( ( PN / RRS ),( AMS / FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( MUM ,CS ) / ( MUR * Max( Max( MLU,Min( ( ( RMSe - MLU ) / ( MUC + MUC ) ) ,RRSe ) ),( RCSe * ( MUR / RMSe ) ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.23760354069987133}, {"determining": "( Max( MRS,Max( Max( MDR,Min( ( ( FirstVNF_CPU + MDR ) - ARS ) ,MRS ) ),Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * FirstVNF_RAM ) )", "choosing": "Min( Max( CS,RCSe ) ,Max( ( Max( RRSe,MLU ) * Max( MLU,Min( MUM ,Min( MUM ,( Min( RMSe ,CS ) * ( DS - CS ) ) ) ) ) ),RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( ( ( ( ACS / RRS ) + ( ( FirstVNF_Mem - FirstVNF_RAM ) * ( RRS * PN ) ) ) / ( ACS * MDR ) ) * DDR ) / ( FirstVNF_Mem_Server * Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( ( ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) + Min( ( CS * MUM ) ,Max( CS,RRSe ) ) ) + MUC )", "obj1": 0.6937901498929336, "obj2": 0.24923977828904129}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( ( BR / ( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( DDR * ARS ) ) / Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) ) + Min( ( Max( Const,Const ) - Max( DDR,RRS ) ) ,Max( ( PN / RRS ),( AMS / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,Min( MUM ,CS ) ) + ( MLU + DS ) ) / Min( ( CS / RMSe ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,DS ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.2248050562863055}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.7259100642398287, "obj2": 0.20151156636418507}, {"determining": "( ( DDR / FirstVNF_RAM_Server ) / ( DDR * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( DS + Max( MUC,( MLU - Max( ( MUC / DS ),Min( MUC ,CS ) ) ) ) ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),RMSe ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.7259100642398287, "obj2": 0.20151156636418507}, {"determining": "( Max( MRS,( Max( ( RRS / MDR ),FirstVNF_RAM_Server ) * MRS ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( ( RMSe * Min( DS ,Max( Max( MUR,Max( CS,CS ) ),MUC ) ) ) * ( ( MLU + Max( ( RMSe + ( MUC / RMSe ) ),MUC ) ) * MUM ) ) / ( Min( CS ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR - Max( RRS,DDR ) ) / ( DDR * AMS ) )", "choosing": "( ( MUC + MUC ) - ( ( ( ( RRSe - RMSe ) * Min( RCSe ,( MLU + ( ( RRSe + RMSe ) - DS ) ) ) ) * Min( MLU ,RRSe ) ) * ( CS / CS ) ) )", "obj1": 0.8501070663811563, "obj2": 0.14565259169296887}, {"determining": "( ( BR - Max( RRS,DDR ) ) / ( DDR * AMS ) )", "choosing": "( ( MUC + MUC ) - ( ( ( ( RRSe - RMSe ) * Min( RCSe ,( MLU + ( ( RRSe + RMSe ) - DS ) ) ) ) * Min( MLU ,RRSe ) ) * ( CS / CS ) ) )", "obj1": 0.8501070663811563, "obj2": 0.14565259169296887}, {"determining": "( ( BR - Max( RRS,DDR ) ) / ( DDR * AMS ) )", "choosing": "( ( MUC + MUC ) - ( ( ( ( RRSe - RMSe ) * Min( RCSe ,( MLU + ( ( RRSe + RMSe ) - DS ) ) ) ) * Min( MLU ,RRSe ) ) * ( CS / CS ) ) )", "obj1": 0.8501070663811563, "obj2": 0.14565259169296887}, {"determining": "( ( MRS * Min( MRS ,Min( Min( ( ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) * ( FirstVNF_RAM_Server + MRS ) ) ,Const ) ,Min( AMS ,Max( FirstVNF_CPU_Server,Min( Const ,ACS ) ) ) ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + MUC ) - ( MUC - RMSe ) )", "obj1": 0.8501070663811563, "obj2": 0.14565259169296887}, {"determining": "( ( ACS - MDR ) / ( ( FirstVNF_Mem - CRS ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * Min( RRS ,PN ) ) ) )", "choosing": "Min( Min( ( ( MUR * MUR ) - Max( RRSe,( RCSe / ( MUM * ( DS + RRSe ) ) ) ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RRSe / RCSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1966055197463102}, {"determining": "( ( ACS - MDR ) / ( ( FirstVNF_Mem - CRS ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * Min( RRS ,PN ) ) ) )", "choosing": "Min( Min( ( ( MUR * MUR ) - Max( RRSe,( RCSe / ( MUM * ( DS + RRSe ) ) ) ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RRSe / RCSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1966055197463102}, {"determining": "( ( ACS - MDR ) / ( ( FirstVNF_Mem - CRS ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * Min( RRS ,PN ) ) ) )", "choosing": "Min( Min( ( ( MUR * MUR ) - Max( RRSe,( RCSe / ( MUM * ( DS + RRSe ) ) ) ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RRSe / RCSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1966055197463102}, {"determining": "( ( ACS - MDR ) / ( ( FirstVNF_Mem - CRS ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * Min( RRS ,PN ) ) ) )", "choosing": "Min( Min( ( ( MUR * MUR ) - Max( RRSe,( RCSe / ( MUM * ( DS + RRSe ) ) ) ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RRSe / RCSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1966055197463102}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - ( ACS / ( CRS - DDR ) ) ) * ( RRS * PN ) ) ) / ( ACS - FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( ( MUC + MUC ) - Min( MLU ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) / ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / ( Max( MUC,Max( ( RRSe * RCSe ),( ( MUC - MLU ) / DS ) ) ) / CS ) ) ) )", "obj1": 0.8693790149892934, "obj2": 0.12365173474414119}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - ( ACS / ( ACS - DDR ) ) ) * ( RRS * PN ) ) ) / ( ACS - FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - Min( MLU ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) )", "obj1": 0.8736616702355461, "obj2": 0.12266807459816458}, {"determining": "( Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,( MUR / Max( DS,CS ) ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) ) / ( ( DDR * DDR ) - DDR ) )", "choosing": "( Min( ( MUR + ( MUR + ( Max( DS,RMSe ) / Max( DS,CS ) ) ) ) ,CS ) - ( MUC + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),Min( MRS ,( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( ( MUM / ( RMSe / ( RCSe / DS ) ) ) ,CS ) - ( ( RMSe + ( RMSe * Min( DS ,Max( ( MUR * Max( MLU,RRSe ) ),( Min( MUM ,CS ) / Min( RCSe ,CS ) ) ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Min( MUM ,CS ) / ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * ( FirstVNF_RAM / DDR ) ) + DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( ( ( MLU + Max( ( RMSe + ( MUC / RMSe ) ),MUC ) ) * MUM ) + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( CS ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( Max( ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) ),Min( MRS ,Min( Min( ( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) ) ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( RCSe ,CS ) - Min( ( MUC * RRSe ) ,DS ) )", "obj1": 0.7451820128479657, "obj2": 0.18434614777926017}, {"determining": "( Max( MRS,Min( Max( MRS,Min( MRS ,( Const / Min( FirstVNF_Mem_Server ,( ACS - MRS ) ) ) ) ) ,Min( FirstVNF_Mem ,Min( FirstVNF_CPU_Server ,Const ) ) ) ) / ( AMS * ( PN - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR + Max( DS,MUR ) ) + Max( RRSe,( Max( ( ( MUR / MUM ) + Min( ( MLU - RMSe ) ,MLU ) ),DS ) / MLU ) ) ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( PN ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * ( PN - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR + RMSe ) + MUC ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / Min( ( MDR - DDR ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.7259100642398287, "obj2": 0.20151156636418507}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( MUM ,CS ) / Min( RCSe ,CS ) )", "obj1": 0.7259100642398287, "obj2": 0.20151156636418507}, {"determining": "( Max( ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) ),Min( MRS ,Min( Min( ( ( FirstVNF_RAM_Server + MRS ) * ( ( ACS - FirstVNF_Mem ) / ( FirstVNF_RAM + ARS ) ) ) ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.1940790374265749}, {"determining": "( ( MRS / ARS ) / ( DDR * MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( ( RCSe + RCSe ) + ( RMSe / Min( DS ,Max( Min( MUR ,MUC ),MUC ) ) ) ) / ( Min( RMSe ,RCSe ) + ( MUR - Min( Min( Min( DS ,MUR ) ,RRSe ) ,MLU ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - FirstVNF_Mem ) + ( RRS * PN ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( Max( ( RMSe + MUC ),Min( DS ,CS ) ) * CS ) * ( MUR + MUR ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.17328213483304575}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / Min( MLU ,DS ) ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( ( MUC + MUC ) - Min( MLU ,( ( RRSe * CS ) * ( RCSe + MUM ) ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.26099596520101265}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6788008565310493, "obj2": 0.26192822473046146}, {"determining": "( Max( ( CRS - AMS ),MRS ) / ( DDR + AMS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( RRSe - ( Max( Max( RRSe,Max( RCSe,RRSe ) ),RRSe ) + DS ) ) ) ,Min( Max( ( Min( DS ,CS ) - RMSe ),Max( ( MUR + Max( RCSe,( MUM / RMSe ) ) ),( ( Min( CS ,RMSe ) / DS ) - DS ) ) ) ,( Max( MLU,Max( CS,CS ) ) / RRSe ) ) ) - ( ( RMSe + ( RMSe * Min( RMSe ,Max( Max( MUR,Max( MLU,MUR ) ),MUC ) ) ) ) / ( Max( DS,RMSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( ( AMS * DDR ) * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( ( MUM * ( MUC * DS ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7473233404710921, "obj2": 0.18235360028921913}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( Min( FirstVNF_Mem_Server ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2552158223862625}, {"determining": "( Max( MRS,( Min( ( MDR - DDR ) ,FirstVNF_Mem ) + ( MDR * FirstVNF_Mem_Server ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / ( MLU * DS ) ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.19163046093073888}, {"determining": "( Min( MRS ,Min( CRS ,FirstVNF_Mem ) ) / Min( BR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS - MLU ) - ( DS - MUR ) ) + ( ( MUC + ( MUC / MLU ) ) - Min( MLU ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,( MUM + CS ) ) ) ) ) ) - Min( MLU ,( ( RCSe + MUM ) * ( RRSe * CS ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26292618022367015}, {"determining": "( Min( FirstVNF_CPU ,Max( ARS,AMS ) ) + ( DDR - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( RRSe / Min( ( ( RCSe + MUR ) - ( MUC * MUR ) ) ,MUR ) ),RMSe ) + ( MLU + DS ) ) / Min( ( Max( DS,MUM ) / CS ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,RCSe ) * MUC ) - ( MLU + RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2560737626915278}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( DDR * DDR ) ) ) / ( ACS - MDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( RMSe * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7580299785867237, "obj2": 0.17654922944526022}, {"determining": "( ( ( Const / FirstVNF_RAM ) * DDR ) / Max( MRS,( FirstVNF_RAM * ( RRS * PN ) ) ) )", "choosing": "( Max( ( ( RMSe * ( MUR * RRSe ) ) + Min( RCSe ,RCSe ) ),Max( MUM,MLU ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( Max( MLU,RRSe ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( AMS,Min( Max( MRS,( Min( MRS ,( MDR - DDR ) ) - ARS ) ) ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( MLU * ( Max( RMSe,Min( ( CS - CS ) ,( RCSe * MUM ) ) ) - Min( Min( ( RMSe - MUR ) ,( DS + RMSe ) ) ,( Max( DS,RMSe ) + RRSe ) ) ) ) ,Max( CS,RRSe ) ) + ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) ) + MUC )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Max( Min( Const ,Const ),FirstVNF_Mem ) ) ) / ( AMS * ( BR + Min( FirstVNF_CPU_Server ,( ( ARS - MRS ) - MDR ) ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( ( ( ( MUR / RCSe ) - ( DS - Min( RMSe ,MLU ) ) ) * CS ) + ( MLU * RMSe ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( PN * FirstVNF_CPU_Server ) / Min( ( MDR * Const ) ,MRS ) )", "choosing": "Max( Max( CS,( ( RRSe - ( ( ( CS + ( MUM + DS ) ) + RMSe ) - DS ) ) + MUR ) ),Max( RCSe,Min( RRSe ,( ( DS + CS ) + ( ( ( MUM + RMSe ) - RRSe ) - ( Min( RMSe ,CS ) * Min( ( MUR + CS ) ,DS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ACS ) / ( MRS + MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( MUM + ( Min( ( MUR * ( DS / ( RRSe - ( RMSe / RMSe ) ) ) ) ,Max( MUC,( MUM - ( MUM - RRSe ) ) ) ) * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - Const ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( RMSe,MLU ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( CS,( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( MDR + CRS ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( ( Min( FirstVNF_Mem_Server ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( Min( MUM ,MUC ) + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7066381156316917, "obj2": 0.23592870797536067}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.19163046093073888}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / Min( Min( Const ,( Min( MRS ,Min( CRS ,FirstVNF_Mem ) ) - DDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( MUM ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,Min( Max( ( AMS - ( Max( RRS,Const ) - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) ,Min( CRS ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( ( ( MLU + Max( ( RMSe + ( MUC / RMSe ) ),MUC ) ) * MUM ) + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( CS ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - Min( Min( Const ,( FirstVNF_CPU - DDR ) ) ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * ( Max( RRSe,RMSe ) + ( MLU + DS ) ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) ) - Min( MLU ,DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( PN ,Const ) ,FirstVNF_Mem ) ) ) / ( Max( MRS,Min( MRS ,( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) ) ) ) * ( PN - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR + RMSe ) + MUC ) - Min( MLU ,( ( RRSe * CS ) * ( RCSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( PN ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * ( PN - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR + RMSe ) + MUC ) - Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( Max( MRS,Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) ) * ( RRS * PN ) ) ) / ( ACS - MDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( ( DS * CS ) * ( RCSe + MUM ) ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + ( RRS * ( Min( DDR ,FirstVNF_CPU ) - MDR ) ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( ACS - MDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * ( Min( MLU ,DS ) * MUM ) ),DS ) )", "obj1": 0.7494646680942184, "obj2": 0.18122860475346514}, {"determining": "( ( BR / ( ( ( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( Max( CRS,FirstVNF_CPU ) - FirstVNF_CPU ) ) / Min( ( RRS + FirstVNF_RAM_Server ) ,( MRS / BR ) ) ) + Min( ( Max( Const,Const ) - Max( DDR,RRS ) ) ,Max( ( PN / RRS ),( AMS / FirstVNF_Mem_Server ) ) ) ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( ( Max( ( MUR / ( MUC * RCSe ) ),MUC ) - MUR ) ,CS ) - ( MUC + MUC ) )", "obj1": 0.7044967880085653, "obj2": 0.23760354069987133}], "8": [{"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "( ( MUC + RMSe ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - AMS ) ,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server - Max( ARS,AMS ) ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( ( MUC - ( MUR - CS ) ),RRSe ) * Max( MLU,( MUM * CS ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( BR - CRS ) ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) / ( MLU + DS ) ) / Min( Min( CS ,Max( ( ( RRSe - DS ) / RRSe ),MUM ) ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,RCSe ) * ( ( ( MUM * DS ) + Max( MLU,( RMSe * CS ) ) ) + RCSe ) ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2560737626915278}, {"determining": "( Max( MRS,Max( Max( MDR,Min( ( ( FirstVNF_CPU + MDR ) - ARS ) ,MRS ) ),Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * FirstVNF_RAM ) )", "choosing": "Min( Max( CS,RCSe ) ,Max( ( Max( RRSe,MLU ) * Max( MLU,Min( MUM ,Min( MUM ,( Min( RMSe ,CS ) * ( DS - CS ) ) ) ) ) ),RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( ( DDR / FirstVNF_RAM_Server ) / ( DDR * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( DS + Max( MUC,( MLU - Max( ( MUC / DS ),Min( MUC ,CS ) ) ) ) ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),RMSe ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,( Max( ( RRS / MDR ),FirstVNF_RAM_Server ) * MRS ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( ( RMSe * Min( DS ,Max( Max( MUR,Max( CS,CS ) ),MUC ) ) ) * ( ( MLU + Max( ( RMSe + ( MUC / RMSe ) ),MUC ) ) * MUM ) ) / ( Min( CS ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,( MUR / Max( DS,CS ) ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),Min( MRS ,( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( ( MUM / ( RMSe / ( RCSe / DS ) ) ) ,CS ) - ( ( RMSe + ( RMSe * Min( DS ,Max( ( MUR * Max( MLU,RRSe ) ),( Min( MUM ,CS ) / Min( RCSe ,CS ) ) ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * ( FirstVNF_RAM / DDR ) ) + DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( ( ( MLU + Max( ( RMSe + ( MUC / RMSe ) ),MUC ) ) * MUM ) + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( CS ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( ( MRS / ARS ) / ( DDR * MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( ( RCSe + RCSe ) + ( RMSe / Min( DS ,Max( Min( MUR ,MUC ),MUC ) ) ) ) / ( Min( RMSe ,RCSe ) + ( MUR - Min( Min( Min( DS ,MUR ) ,RRSe ) ,MLU ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / Min( MLU ,DS ) ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( ( MUC + MUC ) - Min( MLU ,( ( RRSe * CS ) * ( RCSe + MUM ) ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.26099596520101265}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6788008565310493, "obj2": 0.26192822473046146}, {"determining": "( Max( ( CRS - AMS ),MRS ) / ( DDR + AMS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( RRSe - ( Max( Max( RRSe,Max( RCSe,RRSe ) ),RRSe ) + DS ) ) ) ,Min( Max( ( Min( DS ,CS ) - RMSe ),Max( ( MUR + Max( RCSe,( MUM / RMSe ) ) ),( ( Min( CS ,RMSe ) / DS ) - DS ) ) ) ,( Max( MLU,Max( CS,CS ) ) / RRSe ) ) ) - ( ( RMSe + ( RMSe * Min( RMSe ,Max( Max( MUR,Max( MLU,MUR ) ),MUC ) ) ) ) / ( Max( DS,RMSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,( Min( ( MDR - DDR ) ,FirstVNF_Mem ) + ( MDR * FirstVNF_Mem_Server ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / ( MLU * DS ) ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Min( MRS ,Min( CRS ,FirstVNF_Mem ) ) / Min( BR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS - MLU ) - ( DS - MUR ) ) + ( ( MUC + ( MUC / MLU ) ) - Min( MLU ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,( MUM + CS ) ) ) ) ) ) - Min( MLU ,( ( RCSe + MUM ) * ( RRSe * CS ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26292618022367015}, {"determining": "( Min( FirstVNF_CPU ,Max( ARS,AMS ) ) + ( DDR - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( RRSe / Min( ( ( RCSe + MUR ) - ( MUC * MUR ) ) ,MUR ) ),RMSe ) + ( MLU + DS ) ) / Min( ( Max( DS,MUM ) / CS ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,RCSe ) * MUC ) - ( MLU + RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2560737626915278}, {"determining": "( ( ( Const / FirstVNF_RAM ) * DDR ) / Max( MRS,( FirstVNF_RAM * ( RRS * PN ) ) ) )", "choosing": "( Max( ( ( RMSe * ( MUR * RRSe ) ) + Min( RCSe ,RCSe ) ),Max( MUM,MLU ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( Max( MLU,RRSe ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( AMS,Min( Max( MRS,( Min( MRS ,( MDR - DDR ) ) - ARS ) ) ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( MLU * ( Max( RMSe,Min( ( CS - CS ) ,( RCSe * MUM ) ) ) - Min( Min( ( RMSe - MUR ) ,( DS + RMSe ) ) ,( Max( DS,RMSe ) + RRSe ) ) ) ) ,Max( CS,RRSe ) ) + ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) ) + MUC )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Max( Min( Const ,Const ),FirstVNF_Mem ) ) ) / ( AMS * ( BR + Min( FirstVNF_CPU_Server ,( ( ARS - MRS ) - MDR ) ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( ( ( ( MUR / RCSe ) - ( DS - Min( RMSe ,MLU ) ) ) * CS ) + ( MLU * RMSe ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( AMS * ACS ) / ( MRS + MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( MUM + ( Min( ( MUR * ( DS / ( RRSe - ( RMSe / RMSe ) ) ) ) ,Max( MUC,( MUM - ( MUM - RRSe ) ) ) ) * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( MDR + CRS ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( FirstVNF_RAM_Server,Min( Max( ( AMS - ( Max( RRS,Const ) - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) ,Min( CRS ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( ( ( MLU + Max( ( RMSe + ( MUC / RMSe ) ),MUC ) ) * MUM ) + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( CS ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - Min( Min( Const ,( FirstVNF_CPU - DDR ) ) ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * ( Max( RRSe,RMSe ) + ( MLU + DS ) ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) ) - Min( MLU ,DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) ) ) / ( AMS * DDR ) )", "choosing": "Min( MUM ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) * ( FirstVNF_CPU_Server * MDR ) ) )", "choosing": "Min( ( CS + ( ( ( Min( RMSe ,( DS * MLU ) ) + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),Max( CS,MUM ) ) - ( Min( DS ,MUM ) / ( RCSe / RRSe ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.26099596520101265}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( RCSe ,CS ) - Min( ( MUC * RRSe ) ,DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) ) ) ) / ( DDR * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( ( RCSe + RCSe ) + ( RMSe * Min( DS ,Max( Max( MLU,Min( MUM ,MUC ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( CRS ,FirstVNF_Mem ) ) / ( AMS * DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) - Min( RMSe ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.26292618022367015}, {"determining": "( Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) / ( AMS * FirstVNF_Mem ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( ( ( RRSe * CS ) * ( RCSe + MUM ) ) * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,( MUR / Max( DS,CS ) ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,( MUR / Max( DS,CS ) ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( ( MUC + MUC ) - Min( MLU ,( ( RRSe * CS ) * ( RCSe + MUM ) ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.26099596520101265}, {"determining": "( ( BR / ( Max( PN,FirstVNF_CPU_Server ) * Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * ACS ) ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( CS / Max( DS,MUM ) ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,RCSe ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2560737626915278}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( Max( AMS,Min( Max( MRS,( Min( MRS ,( MDR - DDR ) ) - ARS ) ) ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( MLU * ( Max( RMSe,Min( ( CS - CS ) ,( RCSe * MUM ) ) ) - Min( Min( ( RMSe - MUR ) ,( DS + RMSe ) ) ,( Max( DS,RMSe ) + RRSe ) ) ) ) ,Max( CS,RRSe ) ) + ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) ) + MUC )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( CRS - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ),Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( RCSe,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( ( ACS * FirstVNF_Mem_Server ) * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( DS - MUR ) ) ,( ( RRSe * MUC ) - Min( ( MLU * CS ) ,( RCSe / DS ) ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( ( Min( MUM ,DS ) / MLU ) ,RRSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( Min( MUM ,MUC ) + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,( AMS * DDR ) ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( ( MDR - DDR ) ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + Max( ( Max( MUC,RRSe ) * Max( MLU,Min( MUM ,CS ) ) ),DS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * Max( MLU,Min( MUM ,CS ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,( RCSe / RRSe ) ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / Max( PN,( ( FirstVNF_RAM - FirstVNF_Mem ) / Min( CRS ,AMS ) ) ) ) )", "choosing": "( Min( MUC ,( Max( CS,MUR ) / RCSe ) ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2540900258667437}, {"determining": "( Max( MRS,( MRS / Min( Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ,Min( Const ,Const ) ) ) ) / ( ( ( ( ( PN + FirstVNF_CPU ) + FirstVNF_RAM_Server ) - CRS ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * Min( RRS ,PN ) ) ) * DDR ) )", "choosing": "Min( ( CS / ( ( MLU * CS ) * ( RMSe + ( Max( Min( MUR ,RMSe ),RRSe ) - ( MLU / RMSe ) ) ) ) ) ,( MLU - MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.26192822473046146}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6788008565310493, "obj2": 0.26192822473046146}, {"determining": "( Max( FirstVNF_RAM_Server,Min( Max( ( AMS - ( Max( RRS,Const ) - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) ,Min( CRS ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( MLU ,DS ) + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Max( ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - FirstVNF_Mem ) + ( RRS * PN ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) ),Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * FirstVNF_RAM ) )", "choosing": "Min( ( MUR + MUM ) ,Max( ( Max( RRSe,MLU ) * Max( MLU,Min( MUM ,Min( MUM ,( Min( RMSe ,CS ) * ( DS - CS ) ) ) ) ) ),RMSe ) )", "obj1": 0.6852248394004282, "obj2": 0.2540900258667437}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - MRS ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( Min( FirstVNF_Mem_Server ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,Min( DDR ,RRS ) ) + Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_Mem_Server / BR ) ) ) ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( ( RCSe / RRSe ) ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUR ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( MUC * RCSe ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( MUM ,DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_Mem_Server / BR ) ) ) ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( Min( RCSe ,( CS + ( ( ( MUM + CS ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ) * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ) * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( FirstVNF_RAM_Server,Min( Max( ( AMS - ( Max( RRS,Const ) - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) ,Min( CRS ,FirstVNF_Mem ) ) ) / Min( ( FirstVNF_Mem + Min( MRS ,Min( CRS ,FirstVNF_Mem ) ) ) ,( MRS + AMS ) ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - ( ( ( ( MLU + Max( ( RMSe + ( MUC / RMSe ) ),MUC ) ) * MUM ) + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( CS ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * Max( Max( MLU,Min( ( ( CS * DS ) / ( MUC + RRSe ) ) ,RRSe ) ),( RCSe * Max( MLU,RRSe ) ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * Max( Max( MLU,Min( ( ( CS * DS ) / ( MUC + RRSe ) ) ,RRSe ) ),( RCSe * Max( MLU,RRSe ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( RMSe,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( ( CRS - AMS ),MRS ) / ( DDR + AMS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( RRSe - ( Max( Max( RRSe,Max( RCSe,RRSe ) ),RRSe ) + DS ) ) ) ,Min( Max( ( Min( DS ,CS ) - RMSe ),Max( ( MUR + Max( RCSe,( MUM / RMSe ) ) ),( ( Min( CS ,RMSe ) / DS ) - DS ) ) ) ,( Max( MLU,Max( CS,CS ) ) / RRSe ) ) ) - ( ( RMSe + ( RMSe * Min( RMSe ,Max( Max( MUR,Max( MLU,MUR ) ),MUC ) ) ) ) / ( Max( DS,RMSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( ( CRS - AMS ),MRS ) / ( DDR + AMS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( RRSe - ( Max( Max( RRSe,Max( RCSe,RRSe ) ),RRSe ) + DS ) ) ) ,Min( Max( ( Min( DS ,CS ) - RMSe ),Max( ( MUR + Max( RCSe,( MUM / RMSe ) ) ),( ( Min( CS ,RMSe ) / DS ) - DS ) ) ) ,( Max( MLU,Max( CS,CS ) ) / RRSe ) ) ) - ( ( RMSe + ( RMSe * Min( RMSe ,Max( Max( MUR,Max( MLU,MUR ) ),MUC ) ) ) ) / ( Max( DS,RMSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( ( CRS - AMS ),MRS ) / ( DDR + AMS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( RRSe - ( Max( Max( RRSe,Max( RCSe,RRSe ) ),RRSe ) + DS ) ) ) ,Min( Max( ( Min( DS ,CS ) - RMSe ),Max( ( MUR + Max( RCSe,( MUM / RMSe ) ) ),( ( Min( CS ,RMSe ) / DS ) - DS ) ) ) ,( Max( MLU,Max( CS,CS ) ) / RRSe ) ) ) - ( ( RMSe + ( RMSe * Min( RMSe ,Max( Max( MUR,Max( MLU,MUR ) ),MUC ) ) ) ) / ( Max( DS,RMSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,( ( PN - FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) / ( DDR * AMS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( RRSe - ( DS + Max( Max( Max( RCSe,RRSe ),RRSe ),RRSe ) ) ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Max( DS,RMSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( PN ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,DS ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( ( MUR + RMSe ) + MUC ) - Min( RRSe ,DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * Max( MLU,Min( MUM ,CS ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( MDR + CRS ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MUC ) - ( ( ( ( RRSe - RMSe ) * Min( RCSe ,( MLU + ( ( RRSe + RMSe ) - DS ) ) ) ) * Min( MLU ,RRSe ) ) * ( CS / CS ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( MRS / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RMSe * Min( DS ,Max( Min( MUR ,MUC ),MUC ) ) ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( Min( RRS ,Min( ( FirstVNF_Mem_Server + ( ( AMS / FirstVNF_CPU_Server ) + ( MDR - CRS ) ) ) ,( Max( PN,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server / DDR ) ) ) ) - BR ) / ( AMS * DDR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - Min( ( MLU * CS ) ,Min( RMSe ,MUR ) ) ) ,Max( ( MLU - RMSe ),Max( DS,MUR ) ) ) - ( ( ( ( MUC + MUM ) * MUC ) + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,MLU ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Min( DS ,RRSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,( MDR - DDR ) ) ) / ( DDR * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( ( RCSe + RCSe ) + ( RMSe * Min( DS ,Max( Min( MUR ,MUC ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( Min( Const ,ACS ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * Max( MLU,Min( MUM ,CS ) ) ),MUC ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( PN * FirstVNF_CPU_Server ) / Min( ( MDR * Const ) ,MRS ) )", "choosing": "Max( Max( CS,( ( RRSe - ( ( ( CS + ( MUM + DS ) ) + RMSe ) - DS ) ) + MUR ) ),Max( RCSe,Min( RRSe ,( ( DS + CS ) + ( ( ( MUM + RMSe ) - RRSe ) - ( Min( RMSe ,CS ) * Min( ( MUR + CS ) ,DS ) ) ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26192822473046146}, {"determining": "( ( PN * FirstVNF_CPU_Server ) / Min( ( MDR * Const ) ,MRS ) )", "choosing": "Max( Max( CS,( ( RRSe - ( ( ( CS + ( MUM + DS ) ) + RMSe ) - DS ) ) + MUR ) ),Max( RCSe,Min( RRSe ,( ( DS + CS ) + ( ( ( MUM + RMSe ) - RRSe ) - ( Min( RMSe ,CS ) * Min( ( MUR + CS ) ,DS ) ) ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26192822473046146}, {"determining": "( ( PN * FirstVNF_CPU_Server ) / Min( ( MDR * Const ) ,MRS ) )", "choosing": "Max( Max( CS,( ( RRSe - ( ( ( CS + ( MUM + DS ) ) + RMSe ) - DS ) ) + MUR ) ),Max( RCSe,Min( RRSe ,( ( DS + CS ) + ( ( ( MUM + RMSe ) - RRSe ) - ( Min( RMSe ,CS ) * Min( ( MUR + CS ) ,DS ) ) ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26192822473046146}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,Const ) ,FirstVNF_Mem ) ) ) / Min( MRS ,Min( ( MDR - RRS ) ,FirstVNF_Mem ) ) )", "choosing": "Max( Max( CS,( ( RRSe - ( ( RMSe + ( CS + ( MUM + DS ) ) ) - DS ) ) + MUR ) ),Max( RCSe,Min( RRSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( Min( MUM ,CS ),Min( MUM ,CS ) ) ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26192822473046146}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( MDR + CRS ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Min( ( CS * MUM ) ,( DS + CS ) ) ,( ( MUR + MUR ) - ( MUR + MUM ) ) ) ,( Max( ( CS / ( ( CS * Min( MLU ,( MUM - RMSe ) ) ) * ( RCSe * MLU ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( AMS,Min( Max( MRS,( Min( MRS ,( MDR - DDR ) ) - ARS ) ) ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ACS - MDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - ( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) ) ) ,Max( ( Max( MUC,RRSe ) * Max( MLU,Min( MUM ,CS ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * Max( MLU,Min( MUM ,CS ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUR ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( CS - RMSe ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( MUM ,DS ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}], "9": [{"determining": "( ( MRS - FirstVNF_Mem ) / ( CRS * CRS ) )", "choosing": "( ( MUC + RMSe ) - Min( RMSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - AMS ) ,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server - Max( ARS,AMS ) ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( ( MUC - ( MUR - CS ) ),RRSe ) * Max( MLU,( MUM * CS ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( BR - CRS ) ) + ( FirstVNF_CPU / DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) / ( MLU + DS ) ) / Min( Min( CS ,Max( ( ( RRSe - DS ) / RRSe ),MUM ) ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,RCSe ) * ( ( ( MUM * DS ) + Max( MLU,( RMSe * CS ) ) ) + RCSe ) ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2560737626915278}, {"determining": "( Max( MRS,Max( Max( MDR,Min( ( ( FirstVNF_CPU + MDR ) - ARS ) ,MRS ) ),Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * FirstVNF_RAM ) )", "choosing": "Min( Max( CS,RCSe ) ,Max( ( Max( RRSe,MLU ) * Max( MLU,Min( MUM ,Min( MUM ,( Min( RMSe ,CS ) * ( DS - CS ) ) ) ) ) ),RMSe ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( ( DDR / FirstVNF_RAM_Server ) / ( DDR * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( DS + Max( MUC,( MLU - Max( ( MUC / DS ),Min( MUC ,CS ) ) ) ) ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( MLU,RRSe ) ),RMSe ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( PN ,Min( ( ( DDR * ( FirstVNF_CPU / Max( MDR,FirstVNF_RAM ) ) ) - DDR ) ,( PN + Const ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( MUM * Min( DS ,Max( Max( ( MUM * CS ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,( Max( ( RRS / MDR ),FirstVNF_RAM_Server ) * MRS ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( ( RMSe * Min( DS ,Max( Max( MUR,Max( CS,CS ) ),MUC ) ) ) * ( ( MLU + Max( ( RMSe + ( MUC / RMSe ) ),MUC ) ) * MUM ) ) / ( Min( CS ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,( MUR / Max( DS,CS ) ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem ),Min( MRS ,( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( ( MUM / ( RMSe / ( RCSe / DS ) ) ) ,CS ) - ( ( RMSe + ( RMSe * Min( DS ,Max( ( MUR * Max( MLU,RRSe ) ),( Min( MUM ,CS ) / Min( RCSe ,CS ) ) ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * ( FirstVNF_RAM / DDR ) ) + DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( ( ( MLU + Max( ( RMSe + ( MUC / RMSe ) ),MUC ) ) * MUM ) + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( CS ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( ( MRS / ARS ) / ( DDR * MDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( ( RCSe + RCSe ) + ( RMSe / Min( DS ,Max( Min( MUR ,MUC ),MUC ) ) ) ) / ( Min( RMSe ,RCSe ) + ( MUR - Min( Min( Min( DS ,MUR ) ,RRSe ) ,MLU ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / Min( MLU ,DS ) ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( ( CRS - AMS ),MRS ) / ( DDR + AMS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( RRSe - ( Max( Max( RRSe,Max( RCSe,RRSe ) ),RRSe ) + DS ) ) ) ,Min( Max( ( Min( DS ,CS ) - RMSe ),Max( ( MUR + Max( RCSe,( MUM / RMSe ) ) ),( ( Min( CS ,RMSe ) / DS ) - DS ) ) ) ,( Max( MLU,Max( CS,CS ) ) / RRSe ) ) ) - ( ( RMSe + ( RMSe * Min( RMSe ,Max( Max( MUR,Max( MLU,MUR ) ),MUC ) ) ) ) / ( Max( DS,RMSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,( Min( ( MDR - DDR ) ,FirstVNF_Mem ) + ( MDR * FirstVNF_Mem_Server ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / ( MLU * DS ) ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Min( MRS ,Min( CRS ,FirstVNF_Mem ) ) / Min( BR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( CS - MLU ) - ( DS - MUR ) ) + ( ( MUC + ( MUC / MLU ) ) - Min( MLU ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,( MUM + CS ) ) ) ) ) ) - Min( MLU ,( ( RCSe + MUM ) * ( RRSe * CS ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26292618022367015}, {"determining": "( Min( FirstVNF_CPU ,Max( ARS,AMS ) ) + ( DDR - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( RRSe / Min( ( ( RCSe + MUR ) - ( MUC * MUR ) ) ,MUR ) ),RMSe ) + ( MLU + DS ) ) / Min( ( Max( DS,MUM ) / CS ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,RCSe ) * MUC ) - ( MLU + RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2560737626915278}, {"determining": "( ( ( Const / FirstVNF_RAM ) * DDR ) / Max( MRS,( FirstVNF_RAM * ( RRS * PN ) ) ) )", "choosing": "( Max( ( ( RMSe * ( MUR * RRSe ) ) + Min( RCSe ,RCSe ) ),Max( MUM,MLU ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( Max( MLU,RRSe ),MUR ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( AMS,Min( Max( MRS,( Min( MRS ,( MDR - DDR ) ) - ARS ) ) ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( MLU * ( Max( RMSe,Min( ( CS - CS ) ,( RCSe * MUM ) ) ) - Min( Min( ( RMSe - MUR ) ,( DS + RMSe ) ) ,( Max( DS,RMSe ) + RRSe ) ) ) ) ,Max( CS,RRSe ) ) + ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) ) + MUC )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Max( Min( Const ,Const ),FirstVNF_Mem ) ) ) / ( AMS * ( BR + Min( FirstVNF_CPU_Server ,( ( ARS - MRS ) - MDR ) ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( ( ( ( MUR / RCSe ) - ( DS - Min( RMSe ,MLU ) ) ) * CS ) + ( MLU * RMSe ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( AMS * ACS ) / ( MRS + MDR ) )", "choosing": "( Min( MUM ,RMSe ) * ( MUM + ( Min( ( MUR * ( DS / ( RRSe - ( RMSe / RMSe ) ) ) ) ,Max( MUC,( MUM - ( MUM - RRSe ) ) ) ) * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( MDR + CRS ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( FirstVNF_RAM_Server,Min( Max( ( AMS - ( Max( RRS,Const ) - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) ,Min( CRS ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( ( ( MLU + Max( ( RMSe + ( MUC / RMSe ) ),MUC ) ) * MUM ) + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( CS ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - Min( Min( Const ,( FirstVNF_CPU - DDR ) ) ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * ( Max( RRSe,RMSe ) + ( MLU + DS ) ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) ) - Min( MLU ,DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) ) ) / ( AMS * DDR ) )", "choosing": "Min( MUM ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( RCSe ,CS ) - Min( ( MUC * RRSe ) ,DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,( ( Min( FirstVNF_Mem_Server ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( ACS - MDR ) ) ) ) / ( DDR * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( ( RCSe + RCSe ) + ( RMSe * Min( DS ,Max( Max( MLU,Min( MUM ,MUC ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( CRS ,FirstVNF_Mem ) ) / ( AMS * DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) - Min( RMSe ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.26292618022367015}, {"determining": "( Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) / ( AMS * FirstVNF_Mem ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( ( ( RRSe * CS ) * ( RCSe + MUM ) ) * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,( MUR / Max( DS,CS ) ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,( MUR / Max( DS,CS ) ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( Max( PN,FirstVNF_CPU_Server ) * Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * ACS ) ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) / Min( ( CS / Max( DS,MUM ) ) ,( RRSe - RMSe ) ) ) - Min( ( ( Max( MUM,RCSe ) * MUC ) - ( MLU - RCSe ) ) ,( ( MLU / RRSe ) / Max( MLU,MLU ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2560737626915278}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( Max( AMS,Min( Max( MRS,( Min( MRS ,( MDR - DDR ) ) - ARS ) ) ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( ( MLU * ( Max( RMSe,Min( ( CS - CS ) ,( RCSe * MUM ) ) ) - Min( Min( ( RMSe - MUR ) ,( DS + RMSe ) ) ,( Max( DS,RMSe ) + RRSe ) ) ) ) ,Max( CS,RRSe ) ) + ( ( RCSe + RCSe ) + ( RCSe * RMSe ) ) ) + MUC )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( CRS - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ),Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( RCSe,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( ( ACS * FirstVNF_Mem_Server ) * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( DS - MUR ) ) ,( ( RRSe * MUC ) - Min( ( MLU * CS ) ,( RCSe / DS ) ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( ( Min( MUM ,DS ) / MLU ) ,RRSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( RRSe * CS ) * ( RCSe + MUM ) ) ),( Min( MUM ,MUC ) + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,( AMS * DDR ) ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( ( MDR - DDR ) ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + Max( ( Max( MUC,RRSe ) * Max( MLU,Min( MUM ,CS ) ) ),DS ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * Max( MLU,Min( MUM ,CS ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,( RCSe / RRSe ) ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,( FirstVNF_Mem_Server * ( RRS * PN ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * ( FirstVNF_RAM_Server / Max( PN,( ( FirstVNF_RAM - FirstVNF_Mem ) / Min( CRS ,AMS ) ) ) ) )", "choosing": "( Min( MUC ,( Max( CS,MUR ) / RCSe ) ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2540900258667437}, {"determining": "( Max( FirstVNF_RAM_Server,Min( Max( ( AMS - ( Max( RRS,Const ) - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) ,Min( CRS ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( Min( MLU ,DS ) + MUC ) - Min( MLU ,DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Max( ( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( ( FirstVNF_RAM - FirstVNF_Mem ) + ( RRS * PN ) ) ) + ( ( FirstVNF_RAM - FirstVNF_Mem ) * ( RRS * PN ) ) ) / ( ACS - MDR ) ),Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * FirstVNF_RAM ) )", "choosing": "Min( ( MUR + MUM ) ,Max( ( Max( RRSe,MLU ) * Max( MLU,Min( MUM ,Min( MUM ,( Min( RMSe ,CS ) * ( DS - CS ) ) ) ) ) ),RMSe ) )", "obj1": 0.6852248394004282, "obj2": 0.2540900258667437}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - MRS ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( Min( FirstVNF_Mem_Server ,( MRS + AMS ) ) + ( FirstVNF_Mem_Server * ( RRS * PN ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( MUM * ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,Min( DDR ,RRS ) ) + Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_Mem_Server / BR ) ) ) ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( ( RCSe / RRSe ) ,MUM ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUR ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( MUC * RCSe ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( MUM ,DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ) + Max( ( FirstVNF_RAM - FirstVNF_Mem ),( FirstVNF_Mem_Server / BR ) ) ) ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( Min( RCSe ,( CS + ( ( ( MUM + CS ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ) * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( Const ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( MUM ,CS ) * ( MUM + ( Min( RCSe ,( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ) * ( MUC * DS ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( FirstVNF_RAM_Server,Min( Max( ( AMS - ( Max( RRS,Const ) - FirstVNF_Mem_Server ) ),FirstVNF_Mem ) ,Min( CRS ,FirstVNF_Mem ) ) ) / Min( ( FirstVNF_Mem + Min( MRS ,Min( CRS ,FirstVNF_Mem ) ) ) ,( MRS + AMS ) ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( MUC * RRSe ) ) ) - ( ( ( ( MLU + Max( ( RMSe + ( MUC / RMSe ) ),MUC ) ) * MUM ) + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( CS ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * Max( Max( MLU,Min( ( ( CS * DS ) / ( MUC + RRSe ) ) ,RRSe ) ),( RCSe * Max( MLU,RRSe ) ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * Max( Max( MLU,Min( ( ( CS * DS ) / ( MUC + RRSe ) ) ,RRSe ) ),( RCSe * Max( MLU,RRSe ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( MUM ,RMSe ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Min( MUR ,Max( RMSe,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,( Min( MUM ,CS ) * ( MUM + ( MUM * ( MUC * DS ) ) ) ) ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( ( CRS - AMS ),MRS ) / ( DDR + AMS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( RRSe - ( Max( Max( RRSe,Max( RCSe,RRSe ) ),RRSe ) + DS ) ) ) ,Min( Max( ( Min( DS ,CS ) - RMSe ),Max( ( MUR + Max( RCSe,( MUM / RMSe ) ) ),( ( Min( CS ,RMSe ) / DS ) - DS ) ) ) ,( Max( MLU,Max( CS,CS ) ) / RRSe ) ) ) - ( ( RMSe + ( RMSe * Min( RMSe ,Max( Max( MUR,Max( MLU,MUR ) ),MUC ) ) ) ) / ( Max( DS,RMSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( ( CRS - AMS ),MRS ) / ( DDR + AMS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( RRSe - ( Max( Max( RRSe,Max( RCSe,RRSe ) ),RRSe ) + DS ) ) ) ,Min( Max( ( Min( DS ,CS ) - RMSe ),Max( ( MUR + Max( RCSe,( MUM / RMSe ) ) ),( ( Min( CS ,RMSe ) / DS ) - DS ) ) ) ,( Max( MLU,Max( CS,CS ) ) / RRSe ) ) ) - ( ( RMSe + ( RMSe * Min( RMSe ,Max( Max( MUR,Max( MLU,MUR ) ),MUC ) ) ) ) / ( Max( DS,RMSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( ( CRS - AMS ),MRS ) / ( DDR + AMS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( RRSe - ( Max( Max( RRSe,Max( RCSe,RRSe ) ),RRSe ) + DS ) ) ) ,Min( Max( ( Min( DS ,CS ) - RMSe ),Max( ( MUR + Max( RCSe,( MUM / RMSe ) ) ),( ( Min( CS ,RMSe ) / DS ) - DS ) ) ) ,( Max( MLU,Max( CS,CS ) ) / RRSe ) ) ) - ( ( RMSe + ( RMSe * Min( RMSe ,Max( Max( MUR,Max( MLU,MUR ) ),MUC ) ) ) ) / ( Max( DS,RMSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,( ( PN - FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ) / ( DDR * AMS ) )", "choosing": "( Min( Max( ( RMSe - MLU ),( RRSe - ( DS + Max( Max( Max( RCSe,RRSe ),RRSe ),RRSe ) ) ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Max( DS,RMSe ) + Min( RCSe ,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( Min( PN ,Const ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,DS ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( ( MUR + RMSe ) + MUC ) - Min( RRSe ,DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * Max( MLU,Min( MUM ,CS ) ) ),DS ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( MDR + CRS ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + MUC ) - ( ( ( ( RRSe - RMSe ) * Min( RCSe ,( MLU + ( ( RRSe + RMSe ) - DS ) ) ) ) * Min( MLU ,RRSe ) ) * ( CS / CS ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( MRS / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RMSe * Min( DS ,Max( Min( MUR ,MUC ),MUC ) ) ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25333056275628546}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( Min( ( ( MUR + MUR ) - ( MUR + MUM ) ) ,Min( ( CS * MUR ) ,( DS + CS ) ) ) ,( Max( ( CS / ( ( CS - RMSe ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( MUM ,DS ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( Min( MUM ,CS ),RRSe ) * RRSe ),DS ) )", "obj1": 0.6766595289079229, "obj2": 0.2596515430703474}, {"determining": "( Max( MRS,Min( MRS ,Min( Max( MRS,Min( CRS ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( ( MUM + RMSe ) * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26292618022367015}, {"determining": "( Max( MRS,Min( CRS ,FirstVNF_Mem ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + ( ( MUC + ( MUC / MLU ) ) - Min( MLU ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ) ) - Min( MLU ,( ( RRSe * CS ) * ( RCSe + MUM ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26292618022367015}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( FirstVNF_RAM - FirstVNF_Mem ) / DDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,Min( ( ( MUR + MUR ) - ( RMSe + MUM ) ) ,Min( ( CS * MUM ) ,Min( MUM ,CS ) ) ) ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2540900258667437}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( FirstVNF_RAM - FirstVNF_Mem ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,Min( ( ( MUR + MUR ) - ( RMSe + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2540900258667437}, {"determining": "( Max( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( MRS + AMS ) ),Min( MRS ,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "( ( ( Max( RRSe,RMSe ) + ( MLU + DS ) ) + MUR ) - Min( RMSe ,RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.26292618022367015}, {"determining": "( Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,( AMS * DDR ) ) ) ) / ( AMS * DDR ) )", "choosing": "( Min( RCSe ,CS ) - Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.2883041570568388}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,( MUM * CS ) ),MUC ) ) ) ) / ( Min( RCSe ,MUC ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( Max( MRS,Min( ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) / ( AMS * DDR ) )", "choosing": "Min( ( CS + ( ( ( MUM + Min( ( ( MUR + MUR ) - ( RMSe + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ) - RRSe ) - Max( MLU,Min( MUM ,MUC ) ) ) ) ,( Max( ( CS / ( ( DS * CS ) * ( RCSe + MUM ) ) ),( CS + MUM ) ) - ( ( RCSe / RRSe ) / Min( DS ,MUM ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2540900258667437}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( FirstVNF_RAM - FirstVNF_Mem ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / Max( MRS,Min( MRS ,Min( ( MDR - DDR ) ,FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( MUM ,Min( ( ( MUR + MUR ) - ( RMSe + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2540900258667437}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) * ( Max( PN,( ( FirstVNF_RAM - FirstVNF_Mem ) / ( Max( MDR,BR ) / ( FirstVNF_Mem_Server + RRS ) ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,Min( ( ( MUR + MUR ) - ( RMSe + MUM ) ) ,Min( ( CS * MUM ) ,( DS + CS ) ) ) ) * ( MUM + ( MUM * ( MUC * DS ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2540900258667437}, {"determining": "( Max( MRS,Min( ( ( DDR * DDR ) - DDR ) ,FirstVNF_Mem ) ) / ( AMS * DDR ) )", "choosing": "( ( MUC + ( ( MUC + ( MUC / MLU ) ) - Min( MLU ,( ( ( MUM + RMSe ) - RRSe ) - Max( MLU,Min( MUM ,CS ) ) ) ) ) ) - ( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26292618022367015}, {"determining": "( Max( MRS,Min( CRS ,FirstVNF_Mem ) ) / ( AMS * DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26292618022367015}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,Max( Max( MUR,Max( MLU,RRSe ) ),MUC ) ) ) ) / ( Min( RCSe ,RMSe ) + Max( DS,RMSe ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( Min( MRS ,Min( Min( Const ,RRS ) ,FirstVNF_Mem ) ) / ( AMS * ( MDR - DDR ) ) )", "choosing": "( Min( Max( ( RMSe - MLU ),Max( DS,MUR ) ) ,( Min( ( MLU * CS ) ,( RCSe / DS ) ) - ( RRSe * MUC ) ) ) - ( ( RMSe + ( RMSe * Min( DS ,( MUR / Max( DS,CS ) ) ) ) ) / Max( ( RMSe - MLU ),Max( DS,MUR ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.2883041570568388}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( MLU - MUM ) ,Max( ( Max( MUC,RRSe ) * RRSe ),DS ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}, {"determining": "( ( BR / ( ( PN + FirstVNF_RAM ) * Max( FirstVNF_Mem_Server,MDR ) ) ) + ( FirstVNF_CPU - DDR ) )", "choosing": "( Min( DS ,MUM ) * ( MUR * Max( Max( MLU,Min( ( ( ( MUR + MUM ) * DS ) / ( MUC + RRSe ) ) ,RRSe ) ),( RCSe * Max( MLU,RRSe ) ) ) ) )", "obj1": 0.6723768736616702, "obj2": 0.27023239804049387}]}