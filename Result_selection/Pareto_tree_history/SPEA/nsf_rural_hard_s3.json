{"1": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) + Min( MRS ,Const ) )", "choosing": "Min( Min( DS ,MUM ) ,( RCSe + RRSe ) )", "obj1": 0.7468619246861925, "obj2": 0.23437414651114247}, {"determining": "( ( RRS - BR ) - ( AMS + CRS ) )", "choosing": "( ( RMSe - RMSe ) / Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - AMS ),Min( RRS ,AMS ) )", "choosing": "( Max( MLU,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}, {"determining": "Min( Max( DDR,FirstVNF_Mem_Server ) ,( ACS / DDR ) )", "choosing": "Min( ( CS * MUM ) ,Min( RRSe ,DS ) )", "obj1": 0.7343096234309623, "obj2": 0.23595201617879805}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( Max( RMSe,RRSe ) - Max( RCSe,DS ) )", "obj1": 0.805439330543933, "obj2": 0.16466475378507067}, {"determining": "( ( ( ACS * FirstVNF_Mem ) - ( RRS / RRS ) ) / ( Max( PN,MRS ) * Max( BR,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR * MUM ),( RMSe + DS ) ) * Min( CS ,CS ) )", "obj1": 0.9602510460251046, "obj2": 0.03939061609200024}, {"determining": "( Min( ( MRS - PN ) ,( DDR * MRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) + ( MRS * RRS ) ) )", "choosing": "( Max( DS,Min( CS ,MUM ) ) + ( Min( MUM ,MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR + DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / AMS ) / ( BR * ( MDR - DDR ) ) )", "choosing": "( ( ( MLU / RMSe ) / MUC ) * ( MUM + DS ) )", "obj1": 0.7845188284518828, "obj2": 0.20828393925461372}, {"determining": "Min( Min( ( RRS * DDR ) ,( MRS * BR ) ) ,Max( ( FirstVNF_Mem - ARS ),Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( ( ( CS + RMSe ) / ( RRSe / RRSe ) ) / ( Min( MUC ,CS ) * MUC ) )", "obj1": 0.6255230125523012, "obj2": 0.26987638727168156}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) / Max( PN,AMS ) ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( AMS + BR ),Min( PN ,ACS ) ) / ( ( AMS * FirstVNF_RAM ) * Max( MRS,MRS ) ) ),Min( ( ( CRS - AMS ) - ( BR - Const ) ) ,( ( MDR + FirstVNF_CPU ) * ( RRS - ARS ) ) ) )", "choosing": "Max( ( ( Min( CS ,RCSe ) * ( MUC / MLU ) ) / ( ( MLU - CS ) + ( CS * RRSe ) ) ),( Max( Min( RMSe ,MLU ),( MUR - MLU ) ) * ( Min( CS ,MUR ) - Min( MUC ,MUC ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.26895972891034364}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( PN ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU - ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR / FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server / Const ) ) * Max( Min( PN ,FirstVNF_Mem_Server ),( FirstVNF_Mem - CRS ) ) ) * ( Min( ( ACS / FirstVNF_CPU ) ,( BR - Const ) ) * ( ( FirstVNF_RAM_Server - PN ) - ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( Max( ( MLU * MLU ),( MUC + RRSe ) ),Max( ( RRSe / RMSe ),( DS - MUR ) ) ) - ( Max( Min( RCSe ,RCSe ),Min( RRSe ,RRSe ) ) + ( ( RMSe * MUR ) - ( RMSe - DS ) ) ) )", "obj1": 0.7301255230125523, "obj2": 0.23878195257761928}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - AMS ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + Const ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe - Min( ( CS - RCSe ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( Min( ( FirstVNF_Mem_Server + MRS ) ,Min( FirstVNF_CPU_Server ,CRS ) ) / Max( Max( FirstVNF_RAM_Server,Const ),( RRS * FirstVNF_Mem_Server ) ) ) / ( Min( ( ACS / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) + Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( Min( RCSe ,( DS - MLU ) ) * ( MUR - RRSe ) )", "obj1": 0.6401673640167364, "obj2": 0.2624750376107921}], "2": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) - ( AMS + CRS ) )", "choosing": "( ( RMSe - RMSe ) / Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - AMS ),Min( RRS ,AMS ) )", "choosing": "( Max( MLU,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( Max( RMSe,RRSe ) - Max( RCSe,DS ) )", "obj1": 0.805439330543933, "obj2": 0.16466475378507067}, {"determining": "( Min( ( MRS - PN ) ,( DDR * MRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) + ( MRS * RRS ) ) )", "choosing": "( Max( DS,Min( CS ,MUM ) ) + ( Min( MUM ,MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR + DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) / Max( PN,AMS ) ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( PN ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU - ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - AMS ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + Const ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe - Min( ( CS - RCSe ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_CPU - ARS ) ) )", "choosing": "Min( ( Max( ( MUR * MUR ),Min( RRSe ,RCSe ) ) + MUM ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Max( ( MUR * MUR ),Min( RRSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( ACS / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem - AMS ) + ( PN * RRS ) ) ) * Max( ( Min( ACS ,FirstVNF_RAM ) * ( AMS + AMS ) ),Max( Max( CRS,FirstVNF_Mem ),( RRS * ACS ) ) ) ),( ( ( ( CRS * ACS ) / ( DDR - ACS ) ) / Min( ( AMS / DDR ) ,( MRS / FirstVNF_Mem_Server ) ) ) / ( ( ( PN / RRS ) * Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( ( MDR - PN ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( Max( ( Max( Min( PN ,DDR ),( MDR + FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server + MRS ) + Min( BR ,BR ) ) ),( Min( ( FirstVNF_RAM_Server * RRS ) ,( Const - MRS ) ) / ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * Min( ARS ,MDR ) ) ) ) / ( ( ( ( PN * Const ) * ( AMS / DDR ) ) + ( ( MDR * ARS ) * ( ACS / DDR ) ) ) - ( ( ( MDR * FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + PN ) ) / Max( Min( FirstVNF_Mem ,AMS ),( FirstVNF_RAM * MRS ) ) ) ) ) ) - Min( Max( Min( ( ( Min( RRS ,FirstVNF_CPU ) + ( Const + Const ) ) + Max( ( CRS - DDR ),( CRS + Const ) ) ) ,( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( Min( PN ,FirstVNF_Mem ) + ( FirstVNF_Mem - MDR ) ) ) ),( ( ( ( ARS + ARS ) * ( BR + CRS ) ) * ( ( DDR / FirstVNF_RAM_Server ) / ( Const - PN ) ) ) / ( Max( Min( Const ,PN ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM + BR ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( Min( Min( ( MDR / BR ) ,( FirstVNF_RAM - CRS ) ) ,( ( DDR - ACS ) + Min( RRS ,PN ) ) ) - Min( ( Min( DDR ,Const ) * ( BR * RRS ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Min( DDR ,BR ) ) ) ) + ( ( Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS * BR ) * Min( FirstVNF_RAM ,AMS ) ) ) + Min( ( ( FirstVNF_Mem + PN ) * ( DDR + DDR ) ) ,( ( FirstVNF_CPU_Server * MDR ) - ( AMS * ACS ) ) ) ) ) ) ) ,( ( ( ( ( ( ( ARS + MDR ) / ( MRS / ARS ) ) * ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) - ( DDR * FirstVNF_Mem ) ) ) / ( Max( ( MRS - FirstVNF_RAM_Server ),Max( Const,DDR ) ) * ( Max( AMS,FirstVNF_CPU ) + Min( Const ,Const ) ) ) ) * ( ( ( ( RRS + ARS ) / ( ARS - FirstVNF_Mem ) ) * Min( ( DDR / MDR ) ,Max( AMS,DDR ) ) ) * ( ( ( MRS + BR ) + Max( FirstVNF_CPU_Server,CRS ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) ) + ( ( ( ( Max( MRS,FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM_Server ) ) - ( Max( MRS,RRS ) * ( AMS + FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - MDR ) ) - ( ( DDR / MDR ) - ( MRS / MDR ) ) ) ) / ( ( Max( Min( FirstVNF_RAM_Server ,MRS ),( Const + PN ) ) + Max( ( ARS / RRS ),( MRS * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_CPU - MDR ),( ARS + ARS ) ),Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) ) * ( ( ( Max( ( Min( DDR ,MDR ) + ( MDR + MRS ) ),Max( ( FirstVNF_RAM_Server * AMS ),( FirstVNF_RAM_Server / MDR ) ) ) / Min( Max( Min( ACS ,ARS ),( FirstVNF_Mem * ARS ) ) ,Min( Min( RRS ,ACS ) ,Max( FirstVNF_CPU_Server,AMS ) ) ) ) + ( ( ( ( FirstVNF_RAM_Server + PN ) + ( DDR - FirstVNF_Mem_Server ) ) + Max( Max( Const,ACS ),( FirstVNF_CPU_Server - Const ) ) ) + Max( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( DDR * MDR ) ),Min( Max( ACS,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( ( Min( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS * FirstVNF_CPU ) ) ,( Max( Const,MDR ) * ( FirstVNF_Mem_Server / ARS ) ) ) - ( ( Max( CRS,AMS ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,BR ) * ( MRS / PN ) ) ) ) - Max( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + BR ) ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * Min( BR ,FirstVNF_CPU_Server ) ) ),( ( ( BR / MRS ) / ( FirstVNF_CPU * Const ) ) + Max( ( FirstVNF_Mem_Server * AMS ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MUR ) - MUC ) - Min( ( MUC * RRSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM * Const ) * ( RRS + ACS ) ) * CRS ) * ( ( ( RRS - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem * ( FirstVNF_Mem_Server - ( MDR - PN ) ) ) ) - ARS ) )", "choosing": "( ( MLU * CS ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - AMS ),( RRS - AMS ) )", "choosing": "( ( MLU - MLU ) - ( DS * RRSe ) )", "obj1": 0.8598326359832636, "obj2": 0.12399929726300031}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - FirstVNF_Mem ) )", "choosing": "( DS - ( DS * RRSe ) )", "obj1": 0.9497907949790795, "obj2": 0.03807567130686954}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS + AMS ) )", "choosing": "( Min( RCSe ,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "( Min( MLU ,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}, {"determining": "Max( ( FirstVNF_Mem - RRS ),( ( AMS - DDR ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( Max( FirstVNF_Mem,AMS ) * ( Const - FirstVNF_RAM ) )", "choosing": "Max( ( CS * CS ),( DS + DS ) )", "obj1": 0.891213389121339, "obj2": 0.09191370190553713}, {"determining": "( ( Max( ( RRS * CRS ),( CRS - ARS ) ) - ( AMS + Const ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( Min( ( MUC / MUR ) ,Max( MUM,RMSe ) ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - MDR ) - Min( ARS ,MRS ) )", "choosing": "( Min( ( Min( Min( ( Min( ( MUC + MUR ) ,( MUR / CS ) ) * ( Max( MUM,MUC ) - ( MUM / MUM ) ) ) ,( ( ( MUC - MLU ) - ( MUR - MUM ) ) + ( Min( MUM ,MUR ) / ( MLU - MUR ) ) ) ) ,( Min( ( Min( MUM ,DS ) * ( MUM / RRSe ) ) ,( ( CS + DS ) * Max( MUC,MLU ) ) ) + ( ( ( MUM - DS ) * Min( MUC ,RMSe ) ) * ( ( MUC / CS ) - ( RRSe * CS ) ) ) ) ) / Min( ( ( Min( ( MUM * MLU ) ,( RMSe - DS ) ) * ( Max( MLU,RMSe ) * ( MUC + MLU ) ) ) - ( Max( ( DS - RCSe ),Min( MUM ,RMSe ) ) + Min( ( MLU / CS ) ,( MUC * MUC ) ) ) ) ,( ( ( ( RCSe + MUM ) / Max( MUR,RCSe ) ) * ( Min( DS ,CS ) - ( MLU / MUR ) ) ) - ( ( ( DS * DS ) / Min( MUC ,RCSe ) ) / Max( ( MUR + RRSe ),( CS * MLU ) ) ) ) ) ) ,Min( Min( ( Min( Min( ( RCSe - DS ) ,Min( MUM ,CS ) ) ,( ( RMSe / RMSe ) * ( DS * MLU ) ) ) + ( ( ( DS / MUM ) * ( MUM * MUM ) ) / ( Max( DS,DS ) / ( RMSe - MUR ) ) ) ) ,( ( ( Max( DS,MUR ) * Max( MUC,RMSe ) ) - Max( Max( CS,DS ),( MUC * DS ) ) ) + ( ( ( MUC / MUR ) * ( CS + DS ) ) / ( Min( MUR ,MLU ) / Min( MUR ,MUR ) ) ) ) ) ,Max( ( ( Min( Min( MUC ,DS ) ,( RMSe * MUR ) ) - Min( ( MUM + MLU ) ,( MUC / MUR ) ) ) * ( Min( ( MUM + RCSe ) ,( CS * RRSe ) ) - ( ( RMSe * MLU ) - ( MLU / MUC ) ) ) ),( Max( ( ( CS / MUC ) / Min( MLU ,MUC ) ),( ( MUC / RRSe ) - ( RMSe - RCSe ) ) ) + ( Max( Max( CS,MUC ),( RRSe + MLU ) ) + ( ( RCSe - RRSe ) / ( MUR - MUM ) ) ) ) ) ) ) * Max( ( ( ( ( Min( ( MUM - DS ) ,Min( RMSe ,DS ) ) * Min( ( MUR + RRSe ) ,Max( MUR,MUC ) ) ) / ( ( ( MUM / RMSe ) / ( RCSe - MLU ) ) * ( Max( MUC,MUM ) + ( CS - RCSe ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUM * CS ) ) / Min( ( MUM + MUR ) ,( MUM * MUM ) ) ) ,Max( ( ( MLU - MLU ) / Max( RMSe,MUR ) ),( ( MLU + RMSe ) + ( DS - RMSe ) ) ) ) ) * ( Min( ( Max( ( MUM / DS ),( MLU + MUR ) ) / Max( Min( RMSe ,MLU ),( MUC + MUM ) ) ) ,Max( ( ( MUR * RMSe ) * ( RMSe * MUR ) ),( Max( MUR,RCSe ) / Min( MUM ,RCSe ) ) ) ) / ( ( Max( ( CS - MUC ),( MUR * MUC ) ) - ( Max( CS,CS ) / ( MLU - MUR ) ) ) - ( ( ( RCSe / RRSe ) / Max( MUC,RCSe ) ) - Max( Max( RMSe,RMSe ),Max( MUR,RCSe ) ) ) ) ) ),( ( Max( Min( ( ( DS / DS ) - ( MUM / RRSe ) ) ,( ( MUM - MLU ) / ( RRSe + RMSe ) ) ),Min( ( Min( CS ,RMSe ) * Min( DS ,RMSe ) ) ,( ( MUR - MLU ) + Max( RMSe,MUM ) ) ) ) - ( ( Max( ( RMSe - MLU ),( MUM + CS ) ) / ( ( RCSe + CS ) / ( RCSe + MUC ) ) ) * ( Min( ( DS * DS ) ,Min( DS ,MUC ) ) - ( ( MUC - RMSe ) / ( RMSe * RRSe ) ) ) ) ) + Max( Min( ( Min( ( DS + RMSe ) ,( RRSe * MUM ) ) * ( Min( CS ,MLU ) - ( MUM + MUR ) ) ) ,Min( ( ( MUR * RMSe ) + ( DS / RRSe ) ) ,( Max( RRSe,MUC ) / ( MUR / RMSe ) ) ) ),( Max( Max( Max( MUC,DS ),( RRSe * RCSe ) ),( ( RMSe - MUC ) - ( MUC * MLU ) ) ) / ( ( ( RCSe + MUR ) / Max( DS,CS ) ) * ( Max( MUR,CS ) - ( RCSe - RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - PN ) ,( DDR * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MRS + RRS ) ) )", "choosing": "( ( RMSe + RCSe ) / ( RRSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - ( ACS / DDR ) ),( RRS - AMS ) )", "choosing": "( Min( MLU ,Min( RRSe ,DS ) ) - ( DS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "Min( ( CS * MUM ) ,Min( RRSe ,DS ) )", "obj1": 0.897489539748954, "obj2": 0.08666494203553213}, {"determining": "( ( FirstVNF_Mem - MRS ) / ( ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) * BR ) )", "choosing": "Max( ( ( Max( RCSe,RMSe ) * ( MUR / MUR ) ) / ( ( MLU - MUR ) * ( DS + MUM ) ) ),( ( CS / DS ) / ( Max( MLU,CS ) - Min( MUC ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS * ( ( Min( CRS ,ARS ) / Min( FirstVNF_Mem ,MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( Max( RCSe,RMSe ) * ( MUR / MUR ) ) / ( ( MLU - MUR ) * ( DS + MUM ) ) ) + ( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) / ( Max( MLU,CS ) - Min( MUC ,CS ) ) ) ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Max( RCSe,RMSe ) * ( MUR / MUR ) ) / ( ( MLU - MUR ) * ( DS + MUM ) ) ),( ( Min( MLU ,RCSe ) / Max( CS,MUR ) ) / ( Max( MLU,CS ) - Min( MUC ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - PN ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU + Max( RMSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,MDR ) - ( FirstVNF_CPU + CRS ) )", "choosing": "( Max( RMSe,RRSe ) - Max( MLU,DS ) )", "obj1": 0.805439330543933, "obj2": 0.16466475378507067}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - BR ) - ( AMS + CRS ) )", "choosing": "( ( MUC / MUR ) * ( MUC + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( Max( Max( MUR,( MUM + RRSe ) ),MUM ) - ( MUR * DS ) )", "obj1": 0.696652719665272, "obj2": 0.16987504002012888}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + FirstVNF_RAM_Server ) / Min( FirstVNF_Mem ,MDR ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "Min( ( Min( CS ,MUR ) * ( DS + RRSe ) ) ,( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ACS * FirstVNF_Mem ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( Max( ( MUR * MUM ),( RMSe + DS ) ) * Min( CS ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * FirstVNF_Mem ) - ( RRS / RRS ) ) / ( Max( PN,MRS ) * Max( BR,FirstVNF_Mem ) ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.9853556485355649, "obj2": 0.013933770310033252}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MUR * MUM ),( RMSe + DS ) ) * Min( CS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) / ( ( ( CRS - AMS ) - Min( FirstVNF_RAM ,AMS ) ) * MDR ) )", "choosing": "( ( RRSe + RRSe ) + ( ( MUM / RCSe ) + Max( RCSe,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU / RCSe ) + Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - BR ) - ( AMS + CRS ) )", "choosing": "( RCSe / Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - AMS ) - ( FirstVNF_RAM / ( AMS + CRS ) ) )", "choosing": "( ( ( RMSe - MUC ) / RCSe ) + Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "( Min( MLU ,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}], "3": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) - ( AMS + CRS ) )", "choosing": "( ( RMSe - RMSe ) / Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MDR ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( MUC + MUC ) - ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - AMS ),Min( RRS ,AMS ) )", "choosing": "( Max( MLU,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}, {"determining": "( Min( ( MRS - PN ) ,( DDR * MRS ) ) / ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) + ( MRS * RRS ) ) )", "choosing": "( Max( DS,Min( CS ,MUM ) ) + ( Min( MUM ,MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR + DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,CRS ) * ( MDR + Const ) ) - ( DDR / ARS ) )", "choosing": "( ( ( MUC + MUR ) + Min( DS ,CS ) ) + ( ( MUM / CS ) / ( MUR * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * Const ) * ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) / Max( PN,AMS ) ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * DDR ),( MRS + FirstVNF_RAM ) ) - Min( ( MRS * FirstVNF_RAM ) ,( BR + FirstVNF_RAM_Server ) ) ) * ( ( Min( PN ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS / DS ) / ( MLU - ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - AMS ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + Const ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe - Min( ( CS - RCSe ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_CPU - ARS ) ) )", "choosing": "Min( ( Max( ( MUR * MUR ),Min( RRSe ,RCSe ) ) + MUM ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Max( ( MUR * MUR ),Min( RRSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( ACS / FirstVNF_Mem_Server ) ) / ( ( FirstVNF_Mem - AMS ) + ( PN * RRS ) ) ) * Max( ( Min( ACS ,FirstVNF_RAM ) * ( AMS + AMS ) ),Max( Max( CRS,FirstVNF_Mem ),( RRS * ACS ) ) ) ),( ( ( ( CRS * ACS ) / ( DDR - ACS ) ) / Min( ( AMS / DDR ) ,( MRS / FirstVNF_Mem_Server ) ) ) / ( ( ( PN / RRS ) * Min( FirstVNF_RAM ,FirstVNF_RAM ) ) / ( ( MDR - PN ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( Max( ( Max( Min( PN ,DDR ),( MDR + FirstVNF_Mem ) ) / ( ( FirstVNF_Mem_Server + MRS ) + Min( BR ,BR ) ) ),( Min( ( FirstVNF_RAM_Server * RRS ) ,( Const - MRS ) ) / ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * Min( ARS ,MDR ) ) ) ) / ( ( ( ( PN * Const ) * ( AMS / DDR ) ) + ( ( MDR * ARS ) * ( ACS / DDR ) ) ) - ( ( ( MDR * FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + PN ) ) / Max( Min( FirstVNF_Mem ,AMS ),( FirstVNF_RAM * MRS ) ) ) ) ) ) - Min( Max( Min( ( ( Min( RRS ,FirstVNF_CPU ) + ( Const + Const ) ) + Max( ( CRS - DDR ),( CRS + Const ) ) ) ,( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / Max( MRS,FirstVNF_Mem_Server ) ) * ( Min( PN ,FirstVNF_Mem ) + ( FirstVNF_Mem - MDR ) ) ) ),( ( ( ( ARS + ARS ) * ( BR + CRS ) ) * ( ( DDR / FirstVNF_RAM_Server ) / ( Const - PN ) ) ) / ( Max( Min( Const ,PN ),( BR / FirstVNF_RAM ) ) * ( ( FirstVNF_RAM + BR ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) ) ) ,( ( Min( Min( ( MDR / BR ) ,( FirstVNF_RAM - CRS ) ) ,( ( DDR - ACS ) + Min( RRS ,PN ) ) ) - Min( ( Min( DDR ,Const ) * ( BR * RRS ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Min( DDR ,BR ) ) ) ) + ( ( Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) * ( ( AMS * BR ) * Min( FirstVNF_RAM ,AMS ) ) ) + Min( ( ( FirstVNF_Mem + PN ) * ( DDR + DDR ) ) ,( ( FirstVNF_CPU_Server * MDR ) - ( AMS * ACS ) ) ) ) ) ) ) ,( ( ( ( ( ( ( ARS + MDR ) / ( MRS / ARS ) ) * ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) - ( DDR * FirstVNF_Mem ) ) ) / ( Max( ( MRS - FirstVNF_RAM_Server ),Max( Const,DDR ) ) * ( Max( AMS,FirstVNF_CPU ) + Min( Const ,Const ) ) ) ) * ( ( ( ( RRS + ARS ) / ( ARS - FirstVNF_Mem ) ) * Min( ( DDR / MDR ) ,Max( AMS,DDR ) ) ) * ( ( ( MRS + BR ) + Max( FirstVNF_CPU_Server,CRS ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) ) ) + ( ( ( ( Max( MRS,FirstVNF_CPU_Server ) - ( DDR + FirstVNF_RAM_Server ) ) - ( Max( MRS,RRS ) * ( AMS + FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( FirstVNF_Mem_Server - MDR ) ) - ( ( DDR / MDR ) - ( MRS / MDR ) ) ) ) / ( ( Max( Min( FirstVNF_RAM_Server ,MRS ),( Const + PN ) ) + Max( ( ARS / RRS ),( MRS * FirstVNF_CPU ) ) ) / Max( Max( ( FirstVNF_CPU - MDR ),( ARS + ARS ) ),Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_CPU_Server * BR ) ) ) ) ) ) * ( ( ( Max( ( Min( DDR ,MDR ) + ( MDR + MRS ) ),Max( ( FirstVNF_RAM_Server * AMS ),( FirstVNF_RAM_Server / MDR ) ) ) / Min( Max( Min( ACS ,ARS ),( FirstVNF_Mem * ARS ) ) ,Min( Min( RRS ,ACS ) ,Max( FirstVNF_CPU_Server,AMS ) ) ) ) + ( ( ( ( FirstVNF_RAM_Server + PN ) + ( DDR - FirstVNF_Mem_Server ) ) + Max( Max( Const,ACS ),( FirstVNF_CPU_Server - Const ) ) ) + Max( Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( DDR * MDR ) ),Min( Max( ACS,AMS ) ,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) - ( ( Min( Min( Max( FirstVNF_CPU_Server,MRS ) ,( CRS * FirstVNF_CPU ) ) ,( Max( Const,MDR ) * ( FirstVNF_Mem_Server / ARS ) ) ) - ( ( Max( CRS,AMS ) + ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem ,BR ) * ( MRS / PN ) ) ) ) - Max( ( Max( ( FirstVNF_CPU * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + BR ) ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) * Min( BR ,FirstVNF_CPU_Server ) ) ),( ( ( BR / MRS ) / ( FirstVNF_CPU * Const ) ) + Max( ( FirstVNF_Mem_Server * AMS ),( FirstVNF_Mem / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( Min( RMSe ,MUR ) - MUC ) - Min( ( MUC * RRSe ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM * Const ) * ( RRS + ACS ) ) * CRS ) * ( ( ( RRS - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem * ( FirstVNF_Mem_Server - ( MDR - PN ) ) ) ) - ARS ) )", "choosing": "( ( MLU * CS ) / Max( RCSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - FirstVNF_Mem ) )", "choosing": "( DS - ( DS * RRSe ) )", "obj1": 0.9497907949790795, "obj2": 0.03807567130686954}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS + AMS ) )", "choosing": "( Min( RCSe ,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "( Min( MLU ,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}, {"determining": "Max( ( FirstVNF_Mem - RRS ),( ( AMS - DDR ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( Max( FirstVNF_Mem,AMS ) * ( Const - FirstVNF_RAM ) )", "choosing": "Max( ( CS * CS ),( DS + DS ) )", "obj1": 0.891213389121339, "obj2": 0.09191370190553713}, {"determining": "( ( Max( ( RRS * CRS ),( CRS - ARS ) ) - ( AMS + Const ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( Min( ( MUC / MUR ) ,Max( MUM,RMSe ) ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( Min( ARS ,MRS ) / ( FirstVNF_RAM_Server / ARS ) ) )", "choosing": "Min( ( RMSe + MUM ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - MDR ) - Min( ARS ,MRS ) )", "choosing": "( Min( ( Min( Min( ( Min( ( MUC + MUR ) ,( MUR / CS ) ) * ( Max( MUM,MUC ) - ( MUM / MUM ) ) ) ,( ( ( MUC - MLU ) - ( MUR - MUM ) ) + ( Min( MUM ,MUR ) / ( MLU - MUR ) ) ) ) ,( Min( ( Min( MUM ,DS ) * ( MUM / RRSe ) ) ,( ( CS + DS ) * Max( MUC,MLU ) ) ) + ( ( ( MUM - DS ) * Min( MUC ,RMSe ) ) * ( ( MUC / CS ) - ( RRSe * CS ) ) ) ) ) / Min( ( ( Min( ( MUM * MLU ) ,( RMSe - DS ) ) * ( Max( MLU,RMSe ) * ( MUC + MLU ) ) ) - ( Max( ( DS - RCSe ),Min( MUM ,RMSe ) ) + Min( ( MLU / CS ) ,( MUC * MUC ) ) ) ) ,( ( ( ( RCSe + MUM ) / Max( MUR,RCSe ) ) * ( Min( DS ,CS ) - ( MLU / MUR ) ) ) - ( ( ( DS * DS ) / Min( MUC ,RCSe ) ) / Max( ( MUR + RRSe ),( CS * MLU ) ) ) ) ) ) ,Min( Min( ( Min( Min( ( RCSe - DS ) ,Min( MUM ,CS ) ) ,( ( RMSe / RMSe ) * ( DS * MLU ) ) ) + ( ( ( DS / MUM ) * ( MUM * MUM ) ) / ( Max( DS,DS ) / ( RMSe - MUR ) ) ) ) ,( ( ( Max( DS,MUR ) * Max( MUC,RMSe ) ) - Max( Max( CS,DS ),( MUC * DS ) ) ) + ( ( ( MUC / MUR ) * ( CS + DS ) ) / ( Min( MUR ,MLU ) / Min( MUR ,MUR ) ) ) ) ) ,Max( ( ( Min( Min( MUC ,DS ) ,( RMSe * MUR ) ) - Min( ( MUM + MLU ) ,( MUC / MUR ) ) ) * ( Min( ( MUM + RCSe ) ,( CS * RRSe ) ) - ( ( RMSe * MLU ) - ( MLU / MUC ) ) ) ),( Max( ( ( CS / MUC ) / Min( MLU ,MUC ) ),( ( MUC / RRSe ) - ( RMSe - RCSe ) ) ) + ( Max( Max( CS,MUC ),( RRSe + MLU ) ) + ( ( RCSe - RRSe ) / ( MUR - MUM ) ) ) ) ) ) ) * Max( ( ( ( ( Min( ( MUM - DS ) ,Min( RMSe ,DS ) ) * Min( ( MUR + RRSe ) ,Max( MUR,MUC ) ) ) / ( ( ( MUM / RMSe ) / ( RCSe - MLU ) ) * ( Max( MUC,MUM ) + ( CS - RCSe ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUM * CS ) ) / Min( ( MUM + MUR ) ,( MUM * MUM ) ) ) ,Max( ( ( MLU - MLU ) / Max( RMSe,MUR ) ),( ( MLU + RMSe ) + ( DS - RMSe ) ) ) ) ) * ( Min( ( Max( ( MUM / DS ),( MLU + MUR ) ) / Max( Min( RMSe ,MLU ),( MUC + MUM ) ) ) ,Max( ( ( MUR * RMSe ) * ( RMSe * MUR ) ),( Max( MUR,RCSe ) / Min( MUM ,RCSe ) ) ) ) / ( ( Max( ( CS - MUC ),( MUR * MUC ) ) - ( Max( CS,CS ) / ( MLU - MUR ) ) ) - ( ( ( RCSe / RRSe ) / Max( MUC,RCSe ) ) - Max( Max( RMSe,RMSe ),Max( MUR,RCSe ) ) ) ) ) ),( ( Max( Min( ( ( DS / DS ) - ( MUM / RRSe ) ) ,( ( MUM - MLU ) / ( RRSe + RMSe ) ) ),Min( ( Min( CS ,RMSe ) * Min( DS ,RMSe ) ) ,( ( MUR - MLU ) + Max( RMSe,MUM ) ) ) ) - ( ( Max( ( RMSe - MLU ),( MUM + CS ) ) / ( ( RCSe + CS ) / ( RCSe + MUC ) ) ) * ( Min( ( DS * DS ) ,Min( DS ,MUC ) ) - ( ( MUC - RMSe ) / ( RMSe * RRSe ) ) ) ) ) + Max( Min( ( Min( ( DS + RMSe ) ,( RRSe * MUM ) ) * ( Min( CS ,MLU ) - ( MUM + MUR ) ) ) ,Min( ( ( MUR * RMSe ) + ( DS / RRSe ) ) ,( Max( RRSe,MUC ) / ( MUR / RMSe ) ) ) ),( Max( Max( Max( MUC,DS ),( RRSe * RCSe ) ),( ( RMSe - MUC ) - ( MUC * MLU ) ) ) / ( ( ( RCSe + MUR ) / Max( DS,CS ) ) * ( Max( MUR,CS ) - ( RCSe - RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - PN ) ,( DDR * MRS ) ) / ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( MRS + RRS ) ) )", "choosing": "( ( RMSe + RCSe ) / ( RRSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - ( ACS / DDR ) ),( RRS - AMS ) )", "choosing": "( Min( MLU ,Min( RRSe ,DS ) ) - ( DS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "Min( ( CS * MUM ) ,Min( RRSe ,DS ) )", "obj1": 0.897489539748954, "obj2": 0.08666494203553213}, {"determining": "( ( FirstVNF_Mem - MRS ) / ( ( ( MDR * ACS ) / ( CRS - FirstVNF_RAM_Server ) ) * BR ) )", "choosing": "Max( ( ( Max( RCSe,RMSe ) * ( MUR / MUR ) ) / ( ( MLU - MUR ) * ( DS + MUM ) ) ),( ( CS / DS ) / ( Max( MLU,CS ) - Min( MUC ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "( Min( MLU ,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}, {"determining": "( ( BR + ARS ) / ( FirstVNF_CPU - MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "( Min( MLU ,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) / ( CRS / DDR ) ) - MRS ) )", "choosing": "( ( Max( MUR,( Min( DS ,MUM ) + RRSe ) ) - MUM ) - ( MUR - DS ) )", "obj1": 0.7280334728033473, "obj2": 0.1509777116643881}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6882845188284519, "obj2": 0.16738889321725947}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( Const - RRS ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.9393305439330544, "obj2": 0.043314987074639585}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "( Min( MLU ,MLU ) - ( DS * RRSe ) )", "obj1": 0.9456066945606695, "obj2": 0.04254975101986156}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - FirstVNF_Mem ) )", "choosing": "( DS - ( DS * RRSe ) )", "obj1": 0.9497907949790795, "obj2": 0.03807567130686954}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS + PN ) * Max( Const,RRS ) ) )", "choosing": "( ( MLU + MLU ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - RRS ),( ( AMS - DDR ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6422594142259415, "obj2": 0.251098837015242}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Min( RRSe ,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.8598326359832636, "obj2": 0.10534257305596877}, {"determining": "( ( CRS - AMS ) - Min( FirstVNF_RAM ,( AMS + ( ( CRS - AMS ) - Min( FirstVNF_RAM ,AMS ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RCSe ) + Max( RCSe,RCSe ) ) - MUC ) / RCSe ) + Max( RCSe,RCSe ) )", "obj1": 0.9811715481171548, "obj2": 0.013137416178483297}, {"determining": "( MRS * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) )", "choosing": "( DS / ( MLU / ( RRSe - RCSe ) ) )", "obj1": 0.9163179916317992, "obj2": 0.06254861878227765}, {"determining": "Min( ( CRS - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + BR ) )", "choosing": "Min( Max( ( MUR / DS ),DS ) ,( CS / RCSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) )", "choosing": "Min( Min( ( MUM / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9037656903765691, "obj2": 0.08010067644918721}, {"determining": "( ( ( FirstVNF_Mem_Server + ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - ( AMS * CRS ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( ( ( MUR / MUR ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7301255230125523, "obj2": 0.14261604237361591}, {"determining": "( ( ( Min( ACS ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( AMS + Const ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( Max( MUC,( MLU / CS ) ) + ( RMSe / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.8410041841004184, "obj2": 0.12939053833671424}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) + MUM ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 0.9728033472803347, "obj2": 0.016957379576947155}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( Max( CS,DS ) ,Min( RCSe ,RCSe ) ) ) + Max( Max( MUC,( MLU / CS ) ),( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ARS / MRS ) ) - MRS ) )", "choosing": "( ( Max( ( RRSe - CS ),( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.702928870292887, "obj2": 0.1571380430721875}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6610878661087866, "obj2": 0.19116026493438493}], "4": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / AMS ) - ( AMS / ARS ) )", "choosing": "( Max( RRSe,RCSe ) - Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - BR ) - ( AMS + CRS ) )", "choosing": "( ( RMSe - RMSe ) / Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR + DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - AMS ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + Const ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe - Min( ( CS - RCSe ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "Max( ( FirstVNF_Mem - RRS ),( ( AMS - DDR ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( Max( FirstVNF_Mem,AMS ) * ( Const - FirstVNF_RAM ) )", "choosing": "Max( ( CS * CS ),( DS + DS ) )", "obj1": 0.891213389121339, "obj2": 0.09191370190553713}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "Min( ( CS * MUM ) ,Min( RRSe ,DS ) )", "obj1": 0.897489539748954, "obj2": 0.08666494203553213}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( BR + ARS ) / ( FirstVNF_CPU - MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6882845188284519, "obj2": 0.16738889321725947}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( Const - RRS ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.9393305439330544, "obj2": 0.043314987074639585}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS + PN ) * Max( Const,RRS ) ) )", "choosing": "( ( MLU + MLU ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - RRS ),( ( AMS - DDR ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6422594142259415, "obj2": 0.251098837015242}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Min( RRSe ,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.8598326359832636, "obj2": 0.10534257305596877}, {"determining": "( ( CRS - AMS ) - Min( FirstVNF_RAM ,( AMS + ( ( CRS - AMS ) - Min( FirstVNF_RAM ,AMS ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RCSe ) + Max( RCSe,RCSe ) ) - MUC ) / RCSe ) + Max( RCSe,RCSe ) )", "obj1": 0.9811715481171548, "obj2": 0.013137416178483297}, {"determining": "( MRS * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) )", "choosing": "( DS / ( MLU / ( RRSe - RCSe ) ) )", "obj1": 0.9163179916317992, "obj2": 0.06254861878227765}, {"determining": "Min( ( CRS - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + BR ) )", "choosing": "Min( Max( ( MUR / DS ),DS ) ,( CS / RCSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) )", "choosing": "Min( Min( ( MUM / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9037656903765691, "obj2": 0.08010067644918721}, {"determining": "( ( ( Min( ACS ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( AMS + Const ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( Max( MUC,( MLU / CS ) ) + ( RMSe / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.8410041841004184, "obj2": 0.12939053833671424}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) + MUM ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 0.9728033472803347, "obj2": 0.016957379576947155}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( Max( CS,DS ) ,Min( RCSe ,RCSe ) ) ) + Max( Max( MUC,( MLU / CS ) ),( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ARS / MRS ) ) - MRS ) )", "choosing": "( ( Max( ( RRSe - CS ),( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.702928870292887, "obj2": 0.1571380430721875}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6610878661087866, "obj2": 0.19116026493438493}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( Const - RRS ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.9393305439330544, "obj2": 0.043314987074639585}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) * MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + Min( ( MUM / DS ) ,DS ) )", "obj1": 0.9414225941422594, "obj2": 0.042332726996966344}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.9330543933054394, "obj2": 0.04990926452011174}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( Const - RRS ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.9393305439330544, "obj2": 0.043314987074639585}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - ARS ) + ( ( Min( Const ,CRS ) / ( FirstVNF_Mem / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + CS ) ) - MUM ) - Max( MUR,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.19116026493438493}, {"determining": "Max( ( FirstVNF_Mem - BR ),( RRS - AMS ) )", "choosing": "Min( ( CS + MUM ) ,Min( RRSe ,MUC ) )", "obj1": 0.897489539748954, "obj2": 0.08666494203553213}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem - AMS ) * MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( ( Min( MLU ,MLU ) - ( DS * RRSe ) ) / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.024202287786320373}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.9581589958158996, "obj2": 0.024202287786320373}, {"determining": "( DDR - ( ( FirstVNF_CPU_Server + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( ( ( MLU / RCSe ) + Max( RCSe,RCSe ) ) - MUC ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.8661087866108786, "obj2": 0.10036791266383058}, {"determining": "( ( CRS - AMS ) - Min( FirstVNF_RAM ,( AMS + ( ( CRS - AMS ) - Min( FirstVNF_RAM ,AMS ) ) ) ) )", "choosing": "( ( ( ( ( MLU / RCSe ) + Max( RCSe,RCSe ) ) - MUC ) / RCSe ) + Max( RCSe,RCSe ) )", "obj1": 0.9811715481171548, "obj2": 0.013137416178483297}, {"determining": "( DDR - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.8598326359832636, "obj2": 0.10534257305596877}, {"determining": "( ( ( BR - DDR ) - ( AMS + Const ) ) / ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Min( ( MUC / MUR ) ,Max( MUM,RMSe ) ) ,( MLU * Min( RMSe ,MUM ) ) )", "obj1": 0.9748953974895398, "obj2": 0.01535361699854556}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( Min( DS ,MUM ) + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.7301255230125523, "obj2": 0.13830436464340695}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6694560669456067, "obj2": 0.18354841027649843}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR + DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.004379471371420134}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS + AMS ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const / MDR ) ,( FirstVNF_Mem_Server * BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,MUR ),( MUM + RRSe ) ) - RCSe ) - ( ( ( MUC / CS ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7071129707112971, "obj2": 0.14699955206731202}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) )", "choosing": "( Min( RMSe ,MUM ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.9309623430962343, "obj2": 0.05224103936272211}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( AMS + Const ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUM / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.8493723849372385, "obj2": 0.11463231089376329}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( AMS + Const ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.8451882845188284, "obj2": 0.12665926535977642}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - FirstVNF_Mem ) )", "choosing": "Max( ( ( Max( RCSe,RMSe ) * ( MUR / MUR ) ) / ( ( MLU - MUR ) * ( DS + MUM ) ) ),( ( CS / DS ) / ( Max( MLU,CS ) - Min( MUC ,CS ) ) ) )", "obj1": 0.9456066945606695, "obj2": 0.037636211618353}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( BR + FirstVNF_Mem_Server ) / ( FirstVNF_CPU * MDR ) ) )", "choosing": "Min( Min( ( MUR + RRSe ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.004379471371420134}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( FirstVNF_CPU + PN ) )", "choosing": "Min( Min( ( MUR + DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.004379471371420134}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / Min( MRS ,MDR ) )", "choosing": "( ( MUM - Min( ( MLU - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MUC / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}], "5": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR + DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - AMS ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + Const ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe - Min( ( CS - RCSe ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "Max( ( FirstVNF_Mem - RRS ),( ( AMS - DDR ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( Max( FirstVNF_Mem,AMS ) * ( Const - FirstVNF_RAM ) )", "choosing": "Max( ( CS * CS ),( DS + DS ) )", "obj1": 0.891213389121339, "obj2": 0.09191370190553713}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS - AMS ) )", "choosing": "Min( ( CS * MUM ) ,Min( RRSe ,DS ) )", "obj1": 0.897489539748954, "obj2": 0.08666494203553213}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( BR + ARS ) / ( FirstVNF_CPU - MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS + PN ) * Max( Const,RRS ) ) )", "choosing": "( ( MLU + MLU ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Min( RRSe ,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.8598326359832636, "obj2": 0.10534257305596877}, {"determining": "( MRS * ( ( Min( CRS ,ARS ) / ( FirstVNF_Mem / MRS ) ) + ( ( MDR * ACS ) / ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) )", "choosing": "( DS / ( MLU / ( RRSe - RCSe ) ) )", "obj1": 0.9163179916317992, "obj2": 0.06254861878227765}, {"determining": "Min( ( CRS - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + BR ) )", "choosing": "Min( Max( ( MUR / DS ),DS ) ,( CS / RCSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) )", "choosing": "Min( Min( ( MUM / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9037656903765691, "obj2": 0.08010067644918721}, {"determining": "( ( ( Min( ACS ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( AMS + Const ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( Max( MUC,( MLU / CS ) ) + ( RMSe / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.8410041841004184, "obj2": 0.12939053833671424}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( RRSe - Min( Max( CS,DS ) ,Min( RCSe ,RCSe ) ) ) + Max( Max( MUC,( MLU / CS ) ),( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6610878661087866, "obj2": 0.19116026493438493}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.9330543933054394, "obj2": 0.04990926452011174}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - ARS ) + ( ( Min( Const ,CRS ) / ( FirstVNF_Mem / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + CS ) ) - MUM ) - Max( MUR,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.19116026493438493}, {"determining": "Max( ( FirstVNF_Mem - BR ),( RRS - AMS ) )", "choosing": "Min( ( CS + MUM ) ,Min( RRSe ,MUC ) )", "obj1": 0.897489539748954, "obj2": 0.08666494203553213}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( DDR - ( ( FirstVNF_CPU_Server + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( ( ( MLU / RCSe ) + Max( RCSe,RCSe ) ) - MUC ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.8661087866108786, "obj2": 0.10036791266383058}, {"determining": "( DDR - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.8598326359832636, "obj2": 0.10534257305596877}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( Min( DS ,MUM ) + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.7301255230125523, "obj2": 0.13830436464340695}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6694560669456067, "obj2": 0.18354841027649843}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( RRS + AMS ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const / MDR ) ,( FirstVNF_Mem_Server * BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,MUR ),( MUM + RRSe ) ) - RCSe ) - ( ( ( MUC / CS ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7071129707112971, "obj2": 0.14699955206731202}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) )", "choosing": "( Min( RMSe ,MUM ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.9309623430962343, "obj2": 0.05224103936272211}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( AMS + Const ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUM / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.8493723849372385, "obj2": 0.11463231089376329}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / Min( MRS ,MDR ) )", "choosing": "( ( MUM - Min( ( MLU - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MUC / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) )", "choosing": "Min( Min( ( MUM / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9037656903765691, "obj2": 0.08010067644918721}, {"determining": "( ( BR + FirstVNF_Mem_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( CRS - AMS ) - Min( FirstVNF_RAM ,( AMS + ( ( CRS - AMS ) - Min( FirstVNF_RAM ,Max( ( FirstVNF_Mem - AMS ),( RRS + AMS ) ) ) ) ) ) )", "choosing": "( ( DS / RCSe ) + Max( RCSe,RCSe ) )", "obj1": 0.8870292887029289, "obj2": 0.09637532645647601}, {"determining": "Max( Min( FirstVNF_Mem ,AMS ),( RRS + AMS ) )", "choosing": "( ( RRSe * Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.24741696738947522}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( Const - RRS ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.9393305439330544, "obj2": 0.04318238379104623}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) )", "choosing": "Min( Min( ( MUM / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9037656903765691, "obj2": 0.08010067644918721}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.895397489539749, "obj2": 0.08895587303619702}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Min( RRSe ,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.6255230125523012, "obj2": 0.2475206883879837}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.9330543933054394, "obj2": 0.04990926452011174}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) )", "choosing": "Min( Min( ( MUR / DS ) ,DS ) ,( CS / Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ) )", "obj1": 0.9058577405857741, "obj2": 0.07774442998372924}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9016736401673641, "obj2": 0.08310440381007642}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU_Server + MDR ),Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( RMSe / MUC ) )", "obj1": 0.6255230125523012, "obj2": 0.2475206883879837}, {"determining": "Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ACS ) )", "choosing": "Min( Min( ( MUM / DS ) ,CS ) ,( CS / RRSe ) )", "obj1": 0.899581589958159, "obj2": 0.08353342124534888}, {"determining": "( ( FirstVNF_Mem - AMS ) * ( Const - RRS ) )", "choosing": "( ( CS / DS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 0.9393305439330544, "obj2": 0.04318238379104623}, {"determining": "( ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / ACS ) ) - MDR ) )", "choosing": "( ( Max( MUM,( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) )", "obj1": 0.696652719665272, "obj2": 0.15328372833609355}, {"determining": "( ( ( FirstVNF_Mem_Server - ( CRS + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,FirstVNF_CPU ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MUC / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( ( MUC / MUR ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7071129707112971, "obj2": 0.14699955206731202}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.6255230125523012, "obj2": 0.2475206883879837}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ARS / MRS ) ) - MRS ) )", "choosing": "( ( Max( ( RRSe - CS ),( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6882845188284519, "obj2": 0.16501186937298254}, {"determining": "( DDR - ( ( FirstVNF_CPU_Server + MDR ) - ARS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( ( ( MUM / RCSe ) + Max( RCSe,RCSe ) ) - MUC ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.8451882845188284, "obj2": 0.11839363312348901}], "6": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - RRS ),( ( AMS - DDR ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS + PN ) * Max( Const,RRS ) ) )", "choosing": "( ( MLU + MLU ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( Min( ACS ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( AMS + Const ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "( Min( RMSe ,MUM ) + ( Max( MUC,( MLU / CS ) ) + ( RMSe / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.8410041841004184, "obj2": 0.12939053833671424}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6610878661087866, "obj2": 0.19116026493438493}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - ARS ) + ( ( Min( Const ,CRS ) / ( FirstVNF_Mem / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + CS ) ) - MUM ) - Max( MUR,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.19116026493438493}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( Min( DS ,MUM ) + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.7301255230125523, "obj2": 0.13830436464340695}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6694560669456067, "obj2": 0.18354841027649843}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const / MDR ) ,( FirstVNF_Mem_Server * BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,MUR ),( MUM + RRSe ) ) - RCSe ) - ( ( ( MUC / CS ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7071129707112971, "obj2": 0.14699955206731202}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( AMS + Const ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUM / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.8493723849372385, "obj2": 0.11463231089376329}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Min( RRSe ,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.6255230125523012, "obj2": 0.2475206883879837}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU_Server + MDR ),Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( RMSe / MUC ) )", "obj1": 0.6255230125523012, "obj2": 0.2475206883879837}, {"determining": "( ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / ACS ) ) - MDR ) )", "choosing": "( ( Max( MUM,( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) )", "obj1": 0.696652719665272, "obj2": 0.15328372833609355}, {"determining": "( ( ( FirstVNF_Mem_Server - ( CRS + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,FirstVNF_CPU ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MUC / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( ( MUC / MUR ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7071129707112971, "obj2": 0.14699955206731202}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.6255230125523012, "obj2": 0.2475206883879837}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ARS / MRS ) ) - MRS ) )", "choosing": "( ( Max( ( RRSe - CS ),( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6882845188284519, "obj2": 0.16501186937298254}, {"determining": "( DDR - ( ( FirstVNF_CPU_Server + MDR ) - ARS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( ( ( MUM / RCSe ) + Max( RCSe,RCSe ) ) - MUC ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.8451882845188284, "obj2": 0.11839363312348901}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - ARS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "Min( ( CS * MUM ) ,Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + ARS ) / ( FirstVNF_CPU - MDR ) )", "choosing": "Max( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ),( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) )", "obj1": 0.6548117154811716, "obj2": 0.24510315699289914}, {"determining": "( DDR - ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( ( ( MLU / RCSe ) + Max( CS,RCSe ) ) - MUC ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,MUR ),( MUM + RRSe ) ) - MUM ) - ( ( ( MUC / MUR ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.6841004184100419, "obj2": 0.17300919503931797}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,Max( MUM,RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6903765690376569, "obj2": 0.1632168544844539}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Const ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( MLU / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7510460251046025, "obj2": 0.1352147017709807}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,FirstVNF_CPU ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.7196652719665272, "obj2": 0.14436817913908198}, {"determining": "( CRS - ( ( FirstVNF_CPU_Server + MDR ) - ( PN * AMS ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + MUM ) ) - MUM ) - ( ( ( MUC / DS ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.6129707112970711, "obj2": 0.26778282488684635}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_Mem_Server ) + ( MDR * ( RRS / MDR ) ) )", "choosing": "( Max( RRSe,CS ) - ( DS * ( Max( Min( RRSe ,RRSe ),RMSe ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) - AMS ) )", "choosing": "Min( ( RRSe * ( RRSe - ( ( Max( MUR,( MUM + RRSe ) ) * MUM ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.9309623430962343, "obj2": 0.03112965546057519}, {"determining": "( DDR - ( ( FirstVNF_CPU_Server + MDR ) - AMS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.8430962343096234, "obj2": 0.11885762926555961}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( Const / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( Max( ( ( MLU / RCSe ) + Max( RCSe,RCSe ) ),MUC ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.694560669456067, "obj2": 0.15881786415174118}, {"determining": "( ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / ACS ) ) - MDR ) )", "choosing": "( ( Max( MUM,( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) )", "obj1": 0.8598326359832636, "obj2": 0.056853846579309565}, {"determining": "( ( MDR / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( ( ( MLU / RCSe ) + Max( RCSe,RCSe ) ) - MUC ) / Min( ( MUR + DS ) ,RMSe ) ) ) ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - ( ( FirstVNF_CPU_Server + MDR ) - AMS ) ) - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( ( ( ( MLU / RCSe ) + Max( RCSe,RCSe ) ) - MUC ) + DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( ( FirstVNF_CPU_Server + ( BR + ARS ) ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + DDR ) - AMS ) * ( Const - RRS ) )", "choosing": "( ( MLU / CS ) / ( MLU / ( RRSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( DS / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.004379471371420134}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( Min( ( FirstVNF_Mem - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) ) + PN ) )", "choosing": "Min( Min( ( MUR + DS ) ,DS ) ,( CS / Min( ( MUR / DS ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.004379471371420134}, {"determining": "Min( Min( FirstVNF_RAM ,( AMS + ( ( CRS - AMS ) - Min( FirstVNF_RAM ,Max( ( FirstVNF_Mem - AMS ),( RRS + AMS ) ) ) ) ) ) ,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + ACS ) )", "choosing": "Min( Min( ( MUM / DS ) ,CS ) ,Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / AMS ) ) - MDR ) )", "choosing": "Min( Min( ( MUR / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.897489539748954, "obj2": 0.04107847703169259}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / Min( RMSe ,RRSe ) ) ) )", "obj1": 0.6589958158995816, "obj2": 0.23170007645725577}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( Const - RRS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( Min( MLU ,MLU ) - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + ( ( FirstVNF_Mem - AMS ) * ( Const - RRS ) ) ) )", "choosing": "Min( Min( ( MUR + ( CS / DS ) ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.004379471371420134}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR + DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.004379471371420134}, {"determining": "( Max( FirstVNF_Mem,AMS ) * ( Const - FirstVNF_RAM ) )", "choosing": "Max( ( CS * CS ),( DS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - BR ) + ( RRS - AMS ) )", "choosing": "Min( ( CS + MUM ) ,Min( RRSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) - Min( MUR ,DS ) )", "obj1": 0.8870292887029289, "obj2": 0.05217697118701006}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( Max( AMS,PN ) * ( FirstVNF_Mem - RRS ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( CRS - AMS ) - Min( FirstVNF_RAM ,( AMS + ( ( CRS - AMS ) - Min( FirstVNF_RAM ,Max( ( FirstVNF_Mem - AMS ),BR ) ) ) ) ) )", "choosing": "( ( DS / RCSe ) + DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / Min( Const ,FirstVNF_RAM ) ) / Max( ( Const * RRS ),( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) - ( ( ( AMS + Const ) / ( MRS + DDR ) ) - Min( Max( ACS,FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( MUM / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.8493723849372385, "obj2": 0.11463231089376329}], "7": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - RRS ),( ( AMS - DDR ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS + PN ) * Max( Const,RRS ) ) )", "choosing": "( ( MLU + MLU ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6694560669456067, "obj2": 0.18354841027649843}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const / MDR ) ,( FirstVNF_Mem_Server * BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,MUR ),( MUM + RRSe ) ) - RCSe ) - ( ( ( MUC / CS ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7071129707112971, "obj2": 0.14699955206731202}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / ACS ) ) - MDR ) )", "choosing": "( ( Max( MUM,( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) )", "obj1": 0.696652719665272, "obj2": 0.15328372833609355}, {"determining": "( ( ( FirstVNF_Mem_Server - ( CRS + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,FirstVNF_CPU ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MUC / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( ( MUC / MUR ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7071129707112971, "obj2": 0.14699955206731202}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ARS / MRS ) ) - MRS ) )", "choosing": "( ( Max( ( RRSe - CS ),( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6882845188284519, "obj2": 0.16501186937298254}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - ARS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "Min( ( CS * MUM ) ,Min( RRSe ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,Max( MUM,RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6903765690376569, "obj2": 0.1632168544844539}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7510460251046025, "obj2": 0.1352147017709807}, {"determining": "( CRS - ( ( FirstVNF_CPU_Server + MDR ) - ( PN * AMS ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + MUM ) ) - MUM ) - ( ( ( MUC / DS ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.6129707112970711, "obj2": 0.26778282488684635}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server + MDR ) - AMS ) )", "choosing": "Min( ( RRSe * ( RRSe - ( ( Max( MUR,( MUM + RRSe ) ) * MUM ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.9309623430962343, "obj2": 0.03112965546057519}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( Const / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( Max( ( ( MLU / RCSe ) + Max( RCSe,RCSe ) ),MUC ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.694560669456067, "obj2": 0.15881786415174118}, {"determining": "( ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / ACS ) ) - MDR ) )", "choosing": "( ( Max( MUM,( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) )", "obj1": 0.8598326359832636, "obj2": 0.056853846579309565}, {"determining": "Min( Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( DS / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.004379471371420134}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.004379471371420134}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / AMS ) ) - MDR ) )", "choosing": "Min( Min( ( MUR / DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.897489539748954, "obj2": 0.04107847703169259}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + ( ( FirstVNF_Mem - AMS ) * ( Const - RRS ) ) ) )", "choosing": "Min( Min( ( MUR + ( CS / DS ) ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.004379471371420134}, {"determining": "Min( ( MDR - Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ,( AMS + PN ) )", "choosing": "Min( Min( ( MUR + DS ) ,DS ) ,( CS / RRSe ) )", "obj1": 0.9937238493723849, "obj2": 0.004379471371420134}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( Max( AMS,PN ) * ( FirstVNF_Mem - RRS ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) - Min( MUR ,DS ) )", "obj1": 0.8807531380753139, "obj2": 0.05384105137175006}, {"determining": "( ( ( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) - ( MDR + Const ) ) - CRS ) + Max( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ),MRS ) )", "choosing": "( ( Max( ( ( MLU / RCSe ) + Max( RCSe,RMSe ) ),( MUM + RRSe ) ) - MUM ) - ( ( ( MUC / MUR ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.8828451882845189, "obj2": 0.04936147997360571}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.8514644351464435, "obj2": 0.06024262570387694}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5878661087866108, "obj2": 0.27831210956913377}, {"determining": "( AMS - ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( ( ( MLU / RCSe ) + Max( CS,RCSe ) ) - Min( ( CS + MUM ) ,Min( RRSe ,MUC ) ) ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.9895397489539749, "obj2": 0.00488201405408177}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.8598326359832636, "obj2": 0.056853846579309565}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.8598326359832636, "obj2": 0.056853846579309565}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * MLU ) - ( ( CS * CS ) * CS ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( DDR ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Min( MUR ,( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6903765690376569, "obj2": 0.1632168544844539}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.18677844940132474}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,MUR ),( MUM + RRSe ) ) - MUM ) - ( ( ( MUC / MUR ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7071129707112971, "obj2": 0.14699955206731202}, {"determining": "( ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUR + DS ) )", "obj1": 0.6903765690376569, "obj2": 0.1632168544844539}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Max( MUR,( ( MLU / RCSe ) + Max( CS,RCSe ) ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.7280334728033473, "obj2": 0.1370837429845988}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( Min( ( CS - DS ) ,Min( Min( Min( ( MUM / DS ) ,CS ) ,Max( RCSe,RCSe ) ) ,RCSe ) ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7552301255230126, "obj2": 0.13442777559077862}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.26035225911476234}, {"determining": "Max( ( CRS - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) + ( Const - RRS ) ) )", "choosing": "( Min( MLU ,CS ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - PN ) )", "choosing": "( ( Max( MUR,( CS * CS ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.7594142259414226, "obj2": 0.12754651926422228}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - MDR ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.8284518828451883, "obj2": 0.0721786662624281}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) - ( ( Min( MDR ,Const ) + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( Max( MUR,( MUM + RRSe ) ) - MUC ) / Max( MUR,( MUM + RRSe ) ) ) ) ) ,( CS / MUC ) )", "obj1": 0.801255230125523, "obj2": 0.08573744540651322}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) - ( ( FirstVNF_CPU_Server + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.9309623430962343, "obj2": 0.03112965546057519}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6694560669456067, "obj2": 0.18354841027649843}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) - ( ( FirstVNF_CPU_Server + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.9309623430962343, "obj2": 0.03112965546057519}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( ( Const * CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + CS ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6799163179916318, "obj2": 0.16929344287034845}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server * BR ) + Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,Min( RRSe ,Min( ( CS - DS ) ,Min( MUM ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.7133891213389121, "obj2": 0.14304453869626732}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const / MDR ) ,( FirstVNF_Mem_Server * BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,MUR ),( MUM + RRSe ) ) - RCSe ) - ( ( ( MUC / CS ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7196652719665272, "obj2": 0.14146884712564506}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( ( MUR + ( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) - ( ( FirstVNF_CPU_Server + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( Max( MUR,( DS + RRSe ) ) - MUM ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.9351464435146444, "obj2": 0.02968793331298402}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) - ( ( FirstVNF_CPU_Server + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.9309623430962343, "obj2": 0.03112965546057519}], "8": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - RRS ),( ( AMS - DDR ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS + PN ) * Max( Const,RRS ) ) )", "choosing": "( ( MLU + MLU ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6694560669456067, "obj2": 0.18354841027649843}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / ACS ) ) - MDR ) )", "choosing": "( ( Max( MUM,( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) )", "obj1": 0.696652719665272, "obj2": 0.15328372833609355}, {"determining": "( CRS - ( ( FirstVNF_CPU_Server + MDR ) - ( PN * AMS ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + MUM ) ) - MUM ) - ( ( ( MUC / DS ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.6129707112970711, "obj2": 0.26778282488684635}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( Const / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( Max( ( ( MLU / RCSe ) + Max( RCSe,RCSe ) ),MUC ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.694560669456067, "obj2": 0.15881786415174118}, {"determining": "( ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / ACS ) ) - MDR ) )", "choosing": "( ( Max( MUM,( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) )", "obj1": 0.8598326359832636, "obj2": 0.056853846579309565}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( Max( AMS,PN ) * ( FirstVNF_Mem - RRS ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.8514644351464435, "obj2": 0.06024262570387694}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5878661087866108, "obj2": 0.27831210956913377}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.8598326359832636, "obj2": 0.056853846579309565}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.8598326359832636, "obj2": 0.056853846579309565}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * MLU ) - ( ( CS * CS ) * CS ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.18677844940132474}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.26035225911476234}, {"determining": "Max( ( CRS - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) + ( Const - RRS ) ) )", "choosing": "( Min( MLU ,CS ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - MDR ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.8284518828451883, "obj2": 0.0721786662624281}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) - ( ( Min( MDR ,Const ) + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( Max( MUR,( MUM + RRSe ) ) - MUC ) / Max( MUR,( MUM + RRSe ) ) ) ) ) ,( CS / MUC ) )", "obj1": 0.801255230125523, "obj2": 0.08573744540651322}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6694560669456067, "obj2": 0.18354841027649843}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( ( Const * CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + CS ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6799163179916318, "obj2": 0.16929344287034845}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server * BR ) + Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,Min( RRSe ,Min( ( CS - DS ) ,Min( MUM ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.7133891213389121, "obj2": 0.14304453869626732}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( ( MUR + ( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) - ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUM,( MUM + RRSe ) ) / MUM ) - Min( DS ,MUM ) )", "obj1": 0.6694560669456067, "obj2": 0.18354841027649843}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) * Min( ( Const / MDR ) ,Min( FirstVNF_Mem_Server ,AMS ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( ( RMSe - MUR ),( MUM + RRSe ) ) - RCSe ) - ( ( ( MUC / MUR ) * ( MUC + DS ) ) / DS ) )", "obj1": 0.7196652719665272, "obj2": 0.14075547595009255}, {"determining": "( ( ( FirstVNF_Mem_Server + ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,( FirstVNF_Mem_Server - ( MDR + Const ) ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,Min( ( CS - DS ) ,( MLU - RCSe ) ) )", "obj1": 0.7050209205020921, "obj2": 0.14401874498144912}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.7133891213389121, "obj2": 0.14304453869626732}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.7133891213389121, "obj2": 0.14304453869626732}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( ( AMS - PN ) * ( Const - RRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - MLU )", "obj1": 0.8619246861924686, "obj2": 0.05552891331551347}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.8284518828451883, "obj2": 0.0721786662624281}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.8430962343096234, "obj2": 0.06893977228606928}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( MRS + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.7343096234309623, "obj2": 0.1297454209117472}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7301255230125523, "obj2": 0.13235672843830834}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - ( ( Const / MDR ) / ( FirstVNF_Mem_Server * BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( Max( MUR,( MUM + RRSe ) ) * MUR ) / RCSe ) ) ) ,( CS / MUC ) )", "obj1": 0.7112970711297071, "obj2": 0.14378708042505287}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR - Const ) ) - CRS ) - ( ( ( MDR + Const ) + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,Max( RRSe,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / Max( MUR,( MUM + RRSe ) ) ) ) ) ,( CS / MUC ) )", "obj1": 0.8075313807531381, "obj2": 0.0830787013809458}, {"determining": "Max( ( FirstVNF_Mem - ACS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.8493723849372385, "obj2": 0.061191592110663946}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( Max( MUR,( MUM + RRSe ) ) + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6882845188284519, "obj2": 0.1594097121641541}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM * RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.18677844940132474}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( Max( Min( RMSe ,MUR ),( MUM + RRSe ) ) - RCSe ) - ( ( ( MUC / CS ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.6506276150627615, "obj2": 0.222003534244779}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( PN / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.8179916317991632, "obj2": 0.07576312274306277}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.8451882845188284, "obj2": 0.06596048128880029}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) - ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - Max( ( CS * CS ),RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MLU ,MLU ) )", "obj1": 0.8368200836820083, "obj2": 0.07118381866130107}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - MDR ) ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,MUR ) )", "obj1": 0.5857740585774058, "obj2": 0.29453366057487224}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - Const ) + Min( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) ,MRS ) )", "choosing": "Min( ( MUM + MLU ) ,( CS / RCSe ) )", "obj1": 0.7489539748953975, "obj2": 0.12737313918775237}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.8430962343096234, "obj2": 0.06893977228606928}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server * BR ) + Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,Min( RRSe ,Min( ( CS - DS ) ,Min( MUM ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.7280334728033473, "obj2": 0.13470989138103245}], "9": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - RRS ),( ( AMS - DDR ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS + PN ) * Max( Const,RRS ) ) )", "choosing": "( ( MLU + MLU ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( CRS - ( ( FirstVNF_CPU_Server + MDR ) - ( PN * AMS ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + MUM ) ) - MUM ) - ( ( ( MUC / DS ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.6129707112970711, "obj2": 0.26778282488684635}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( Max( AMS,PN ) * ( FirstVNF_Mem - RRS ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5878661087866108, "obj2": 0.27831210956913377}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * MLU ) - ( ( CS * CS ) * CS ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.18677844940132474}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.26035225911476234}, {"determining": "Max( ( CRS - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) + ( Const - RRS ) ) )", "choosing": "( Min( MLU ,CS ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) - ( ( Min( MDR ,Const ) + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( Max( MUR,( MUM + RRSe ) ) - MUC ) / Max( MUR,( MUM + RRSe ) ) ) ) ) ,( CS / MUC ) )", "obj1": 0.801255230125523, "obj2": 0.08573744540651322}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( ( MUR + ( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( MRS + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.7343096234309623, "obj2": 0.1297454209117472}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7301255230125523, "obj2": 0.13235672843830834}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR - Const ) ) - CRS ) - ( ( ( MDR + Const ) + MDR ) - AMS ) )", "choosing": "Min( Max( RRSe,Max( RRSe,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / Max( MUR,( MUM + RRSe ) ) ) ) ) ,( CS / MUC ) )", "obj1": 0.8075313807531381, "obj2": 0.0830787013809458}, {"determining": "Max( ( FirstVNF_Mem - ACS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( Max( MUR,( MUM + RRSe ) ) + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6882845188284519, "obj2": 0.1594097121641541}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM * RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.18677844940132474}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( PN / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.8179916317991632, "obj2": 0.07576312274306277}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) - ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - Max( ( CS * CS ),RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - MDR ) ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,MUR ) )", "obj1": 0.5857740585774058, "obj2": 0.29453366057487224}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - Const ) + Min( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) ,MRS ) )", "choosing": "Min( ( MUM + MLU ) ,( CS / RCSe ) )", "obj1": 0.7489539748953975, "obj2": 0.12737313918775237}, {"determining": "( ( ( FirstVNF_CPU_Server - ( MDR / Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( CS ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( ( MUC / MUR ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.8389121338912134, "obj2": 0.06625965996614663}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / ACS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) )", "obj1": 0.7656903765690377, "obj2": 0.104732719992599}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( ( Max( ( MUM + RRSe ),( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.694560669456067, "obj2": 0.14389361415382926}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Max( MUR,DS ) )", "obj1": 0.6297071129707112, "obj2": 0.19920351227338143}, {"determining": "( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,RCSe ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.8347280334728033, "obj2": 0.07016235663716497}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.8305439330543933, "obj2": 0.07048395210821164}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( Min( FirstVNF_RAM_Server ,BR ) - Min( ( Const * MDR ) ,( FirstVNF_Mem_Server - ( MDR + Const ) ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUM * DS ) )", "obj1": 0.6778242677824268, "obj2": 0.16233726943846064}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.8263598326359832, "obj2": 0.07183655804597737}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.18677844940132474}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.18677844940132474}, {"determining": "Max( ( FirstVNF_Mem - MRS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * MUM ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6527196652719666, "obj2": 0.18677844940132474}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * Max( Const,RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( CRS - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) + Min( ( Const * MDR ) ,Min( ( AMS - DDR ) ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( MLU - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.7280334728033473, "obj2": 0.1330255961158908}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( FirstVNF_Mem_Server ,Const ) ) - CRS ) + ( ( Min( ( FirstVNF_Mem_Server - ( MDR + Const ) ) ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) + Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( MUM - Min( ( CS - DS ) ,Min( MUM ,RCSe ) ) ) ) ,( CS / RCSe ) )", "obj1": 0.7092050209205021, "obj2": 0.1422937306404393}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) + Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MUM ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.7196652719665272, "obj2": 0.1400320047269791}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / Max( ( ( FirstVNF_RAM_Server - BR ) - ( ( Const / MDR ) / Min( FirstVNF_Mem_Server ,AMS ) ) ),MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS - CS ) )", "obj1": 0.6631799163179917, "obj2": 0.17542362724648397}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) ) ) * RRSe ) )", "obj1": 0.7845188284518828, "obj2": 0.090271023909612}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) * ( ( Max( MUM,( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) ) ) * DS ) )", "obj1": 0.7112970711297071, "obj2": 0.14223224870972945}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - ( FirstVNF_Mem - AMS ) ) + ( Max( Min( Const ,DDR ),( CRS / MRS ) ) - MDR ) )", "choosing": "( ( ( MLU + MLU ) - ( ( RRSe * CS ) * RRSe ) ) - Min( MUR ,RRSe ) )", "obj1": 0.7635983263598326, "obj2": 0.11508988001214795}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - Const ) + ( ( Min( ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( ( MUM + RRSe ) ,( CS / MUC ) )", "obj1": 0.7615062761506276, "obj2": 0.11794000594613231}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.8284518828451883, "obj2": 0.071147909552341}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7301255230125523, "obj2": 0.13235672843830834}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) * ( CRS / MRS ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.8263598326359832, "obj2": 0.07183655804597737}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}], "10": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - RRS ),( ( AMS - DDR ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS + PN ) * Max( Const,RRS ) ) )", "choosing": "( ( MLU + MLU ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( CRS - ( ( FirstVNF_CPU_Server + MDR ) - ( PN * AMS ) ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + MUM ) ) - MUM ) - ( ( ( MUC / DS ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.6129707112970711, "obj2": 0.26778282488684635}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( Max( AMS,PN ) * ( FirstVNF_Mem - RRS ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5878661087866108, "obj2": 0.27831210956913377}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * MLU ) - ( ( CS * CS ) * CS ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.26035225911476234}, {"determining": "Max( ( CRS - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) + ( Const - RRS ) ) )", "choosing": "( Min( MLU ,CS ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( ( MUR + ( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( MRS + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.7343096234309623, "obj2": 0.1297454209117472}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7301255230125523, "obj2": 0.13235672843830834}, {"determining": "Max( ( FirstVNF_Mem - ACS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( Max( MUR,( MUM + RRSe ) ) + RRSe ) ) - MUM ) - Min( DS ,MUM ) )", "obj1": 0.6882845188284519, "obj2": 0.1594097121641541}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) - ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - Max( ( CS * CS ),RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - MDR ) ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,MUR ) )", "obj1": 0.5857740585774058, "obj2": 0.29453366057487224}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - Const ) + Min( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) ,MRS ) )", "choosing": "Min( ( MUM + MLU ) ,( CS / RCSe ) )", "obj1": 0.7489539748953975, "obj2": 0.12737313918775237}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( ( Max( ( MUM + RRSe ),( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.694560669456067, "obj2": 0.14389361415382926}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Max( MUR,DS ) )", "obj1": 0.6297071129707112, "obj2": 0.19920351227338143}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( Min( FirstVNF_RAM_Server ,BR ) - Min( ( Const * MDR ) ,( FirstVNF_Mem_Server - ( MDR + Const ) ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUM * DS ) )", "obj1": 0.6778242677824268, "obj2": 0.16233726943846064}, {"determining": "Max( ( FirstVNF_Mem - MRS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * MUM ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * Max( Const,RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( CRS - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) + Min( ( Const * MDR ) ,Min( ( AMS - DDR ) ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( MLU - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.7280334728033473, "obj2": 0.1330255961158908}, {"determining": "( ( ( FirstVNF_Mem_Server - Min( FirstVNF_Mem_Server ,Const ) ) - CRS ) + ( ( Min( ( FirstVNF_Mem_Server - ( MDR + Const ) ) ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) + Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( MUM - Min( ( CS - DS ) ,Min( MUM ,RCSe ) ) ) ) ,( CS / RCSe ) )", "obj1": 0.7092050209205021, "obj2": 0.1422937306404393}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / Max( ( ( FirstVNF_RAM_Server - BR ) - ( ( Const / MDR ) / Min( FirstVNF_Mem_Server ,AMS ) ) ),MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS - CS ) )", "obj1": 0.6631799163179917, "obj2": 0.17542362724648397}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) * ( ( Max( MUM,( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) ) ) * DS ) )", "obj1": 0.7112970711297071, "obj2": 0.14223224870972945}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) * ( MUC + DS ) ) * DS ) )", "obj1": 0.7301255230125523, "obj2": 0.13235672843830834}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( ( FirstVNF_Mem_Server - ( MDR + Const ) ) ,( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) ) / ( ( ( FirstVNF_RAM_Server - BR ) + Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( MUR - Min( ( CS - DS ) ,Min( MUM ,RCSe ) ) ) ) ,( CS / MUC ) )", "obj1": 0.7154811715481172, "obj2": 0.13974737589353442}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( CRS - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * Min( MUM ,RMSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6401673640167364, "obj2": 0.18064033952471356}, {"determining": "( ( ( FirstVNF_Mem_Server - ( RRS + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( AMS - PN ) + Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( RMSe ,RCSe ) ) ) ) ,RRSe )", "obj1": 0.7196652719665272, "obj2": 0.1332393675395811}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) - ( Const - RRS ) ) )", "choosing": "( Min( RCSe ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) * ( ( Max( MUM,( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) ) ) * DS ) )", "obj1": 0.7112970711297071, "obj2": 0.14223224870972945}, {"determining": "( ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) + ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const / MDR ) ,Min( FirstVNF_Mem_Server ,AMS ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS + CS ) )", "obj1": 0.6631799163179917, "obj2": 0.17542362724648397}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6150627615062761, "obj2": 0.26035225911476234}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( AMS - ( MDR + AMS ) ) - FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "( ( Max( Min( MUM ,RRSe ),( MUC + MLU ) ) * MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.694560669456067, "obj2": 0.14389361415382926}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( MDR,Const ) ) - CRS ) + ( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) ) )", "choosing": "( ( MLU / MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.7552301255230126, "obj2": 0.11660765305855135}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( Min( FirstVNF_CPU_Server ,MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS / DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( Const - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - Const ) + ( ( Min( ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MDR ) ,CRS ) / ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "Min( Max( RRSe,( MUR - Min( ( CS - DS ) ,Min( MUM ,RCSe ) ) ) ) ,( CS / RCSe ) )", "obj1": 0.7364016736401674, "obj2": 0.12814496969836003}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * Max( Const,RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / Max( ( ( FirstVNF_RAM_Server - BR ) - ( ( Const / MDR ) / Min( FirstVNF_Mem_Server ,AMS ) ) ),MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS - CS ) )", "obj1": 0.6903765690376569, "obj2": 0.15797424322038467}], "11": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - RRS ),( ( AMS - DDR ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS + PN ) * Max( Const,RRS ) ) )", "choosing": "( ( MLU + MLU ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( Max( AMS,PN ) * ( FirstVNF_Mem - RRS ) ) )", "choosing": "( ( MLU / RRSe ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5878661087866108, "obj2": 0.27831210956913377}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * MLU ) - ( ( CS * CS ) * CS ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( CRS - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) + ( Const - RRS ) ) )", "choosing": "( Min( MLU ,CS ) - ( ( CS * CS ) * RMSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( ( MUR + ( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - ACS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) - ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - Max( ( CS * CS ),RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - MDR ) ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,MUR ) )", "obj1": 0.5857740585774058, "obj2": 0.29453366057487224}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Max( MUR,DS ) )", "obj1": 0.6297071129707112, "obj2": 0.19920351227338143}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( Min( FirstVNF_RAM_Server ,BR ) - Min( ( Const * MDR ) ,( FirstVNF_Mem_Server - ( MDR + Const ) ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUM * DS ) )", "obj1": 0.6778242677824268, "obj2": 0.16233726943846064}, {"determining": "Max( ( FirstVNF_Mem - MRS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * MUM ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * Max( Const,RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / Max( ( ( FirstVNF_RAM_Server - BR ) - ( ( Const / MDR ) / Min( FirstVNF_Mem_Server ,AMS ) ) ),MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS - CS ) )", "obj1": 0.6631799163179917, "obj2": 0.17542362724648397}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( CRS - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * Min( MUM ,RMSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6401673640167364, "obj2": 0.18064033952471356}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) - ( Const - RRS ) ) )", "choosing": "( Min( RCSe ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) + ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const / MDR ) ,Min( FirstVNF_Mem_Server ,AMS ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS + CS ) )", "obj1": 0.6631799163179917, "obj2": 0.17542362724648397}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( Min( FirstVNF_CPU_Server ,MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS / DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( Const - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * Max( Const,RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( CRS / MRS ) ) - MRS ) ) + ( ( Min( Const ,CRS ) / ( DDR - ( ( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) + PN ) + MDR ) - AMS ) ) ) - MRS ) )", "choosing": "( ( Max( Min( RMSe ,( ( RRSe - Min( ( CS - DS ) ,Min( RCSe ,RCSe ) ) ) + ( Max( MUC,( MLU / CS ) ) + ( MLU / ( RMSe * RRSe ) ) ) ) ),( MUM + RRSe ) ) - MUM ) - ( ( Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) * ( ( Max( MUM,( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) ) ) * DS ) )", "obj1": 0.7196652719665272, "obj2": 0.1318992853289141}, {"determining": "( BR - ( Max( FirstVNF_CPU_Server,ACS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( RRSe * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( Max( FirstVNF_Mem,AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( DS ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS + PN ) * ( Const - PN ) ) )", "choosing": "( Min( MLU ,DS ) - ( ( CS * ( RCSe * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + FirstVNF_RAM_Server ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS + ( ( FirstVNF_CPU_Server - ( MDR + ( FirstVNF_Mem - AMS ) ) ) - CRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) - MUM ) - Min( MLU ,MLU ) )", "obj1": 0.6861924686192469, "obj2": 0.1551187422538198}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( AMS - ( MDR + AMS ) ) - FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "( ( Max( Min( MUM ,RRSe ),( MUC + MLU ) ) * MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.7280334728033473, "obj2": 0.12200022079956607}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( Const + Const ) ) + Const ) ) - CRS ) + ( ( Max( ( CRS - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( DS,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6903765690376569, "obj2": 0.14159846814203403}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}, {"determining": "( ( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( CS - Min( MUR ,RRSe ) )", "obj1": 0.7531380753138075, "obj2": 0.1156859871399856}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( ( Max( ( MUM + RRSe ),( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.7112970711297071, "obj2": 0.13376357947746895}, {"determining": "( ( ( FirstVNF_Mem_Server - ( RRS + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( ( AMS - PN ) + Min( ( Const * MDR ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) / MRS ) ) - MRS ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 0.6171548117154811, "obj2": 0.2538267388917485}], "12": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5878661087866108, "obj2": 0.27831210956913377}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( ( MUR + ( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - MDR ) ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,MUR ) )", "obj1": 0.5857740585774058, "obj2": 0.29453366057487224}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Max( MUR,DS ) )", "obj1": 0.6297071129707112, "obj2": 0.19920351227338143}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( Min( FirstVNF_RAM_Server ,BR ) - Min( ( Const * MDR ) ,( FirstVNF_Mem_Server - ( MDR + Const ) ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUM * DS ) )", "obj1": 0.6778242677824268, "obj2": 0.16233726943846064}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / Max( ( ( FirstVNF_RAM_Server - BR ) - ( ( Const / MDR ) / Min( FirstVNF_Mem_Server ,AMS ) ) ),MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS - CS ) )", "obj1": 0.6631799163179917, "obj2": 0.17542362724648397}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( CRS - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * Min( MUM ,RMSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6401673640167364, "obj2": 0.18064033952471356}, {"determining": "( ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) + ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const / MDR ) ,Min( FirstVNF_Mem_Server ,AMS ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS + CS ) )", "obj1": 0.6631799163179917, "obj2": 0.17542362724648397}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( Min( FirstVNF_CPU_Server ,MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS / DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( BR - ( Max( FirstVNF_CPU_Server,ACS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( RRSe * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS + PN ) * ( Const - PN ) ) )", "choosing": "( Min( MLU ,DS ) - ( ( CS * ( RCSe * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + FirstVNF_RAM_Server ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS + ( ( FirstVNF_CPU_Server - ( MDR + ( FirstVNF_Mem - AMS ) ) ) - CRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) - MUM ) - Min( MLU ,MLU ) )", "obj1": 0.6861924686192469, "obj2": 0.1551187422538198}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( AMS - ( MDR + AMS ) ) - FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "( ( Max( Min( MUM ,RRSe ),( MUC + MLU ) ) * MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.7280334728033473, "obj2": 0.12200022079956607}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( Const + Const ) ) + Const ) ) - CRS ) + ( ( Max( ( CRS - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( DS,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6903765690376569, "obj2": 0.14159846814203403}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( ( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( CS - Min( MUR ,RRSe ) )", "obj1": 0.7531380753138075, "obj2": 0.1156859871399856}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( AMS - ( MDR + AMS ) ) - FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "( ( Max( Min( MUM ,RRSe ),( MUC + MLU ) ) * MUM ) - Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + AMS ) ) - CRS ) ) ) - MDR ) )", "choosing": "( ( ( CS * CS ) * RRSe ) - Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - PN ) - ( RRS - RRS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU - Min( MLU ,MLU ) ) + ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,AMS ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( MLU - MLU ) + Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM * RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( CS * RMSe ) )", "obj1": 0.9581589958158996, "obj2": 0.024202287786320373}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS * ( ( AMS - ( MDR + Const ) ) - PN ) ) ) - MDR ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + MUR ) ) - MUM ) - ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( AMS - ( MDR + Const ) ) - FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "( ( Max( ( MUM * RRSe ),( MUM + MLU ) ) * MUM ) - Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - MDR ) ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( Max( AMS,PN ) * ( ( ( FirstVNF_Mem - AMS ) - ( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - Max( ( CS / RMSe ),Min( MUR ,MUR ) ) )", "obj1": 0.6171548117154811, "obj2": 0.25382673889174845}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - MDR ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( ( Max( ( MUM + RRSe ),( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.7112970711297071, "obj2": 0.13042597016699362}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6736401673640168, "obj2": 0.1709260200919872}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( ( Const - RRS ) - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - MDR ) ) )", "choosing": "( ( Max( MUR,( ( ( CS * CS ) * RRSe ) + MLU ) ) - MUM ) - Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - MDR ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( Min( ( ACS / FirstVNF_CPU_Server ) ,( PN * FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) ) + Max( Max( ( FirstVNF_Mem / FirstVNF_CPU_Server ),( AMS / CRS ) ),Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,( ACS + MDR ) ) ) ) ,Max( Max( ( Min( FirstVNF_RAM ,DDR ) + ( Const * PN ) ),Max( ( BR + RRS ),( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ),( ( ( Const - FirstVNF_CPU_Server ) / ( ACS / FirstVNF_CPU_Server ) ) / Max( Max( MDR,RRS ),Max( AMS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( Min( Max( MRS,PN ) ,( CRS + ACS ) ) / ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) + ( PN / ARS ) ) ) + ( Min( ( DDR / Const ) ,( FirstVNF_CPU / Const ) ) / ( Min( BR ,AMS ) + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) ) + ( Min( ( ( CRS + FirstVNF_CPU_Server ) + Min( DDR ,MDR ) ) ,( ( FirstVNF_RAM / ARS ) / Min( CRS ,DDR ) ) ) + Max( Min( ( FirstVNF_RAM - BR ) ,( BR * FirstVNF_CPU_Server ) ),( ( FirstVNF_RAM_Server * DDR ) + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) ) ) - Min( ( ( ( ( ( Const / MDR ) + ( BR * PN ) ) / ( ( ACS / CRS ) / ( Const / MRS ) ) ) / ( ( ( AMS + BR ) / ( CRS + MRS ) ) - ( ( FirstVNF_RAM_Server * CRS ) / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) - ( ( Min( ( PN + FirstVNF_CPU_Server ) ,Min( CRS ,FirstVNF_RAM_Server ) ) - Max( ( ARS * ACS ),Max( MDR,AMS ) ) ) - ( ( ( ACS - MRS ) / ( DDR - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) + ( ACS - MDR ) ) ) ) ) ,( ( Min( ( Max( ACS,FirstVNF_Mem_Server ) / ( FirstVNF_Mem / BR ) ) ,( ( FirstVNF_CPU_Server + ACS ) * ( RRS - FirstVNF_Mem ) ) ) - ( Min( Min( ACS ,FirstVNF_Mem_Server ) ,Min( BR ,ARS ) ) - ( ( FirstVNF_RAM / FirstVNF_Mem ) / Max( FirstVNF_CPU_Server,RRS ) ) ) ) / ( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ,( MRS * MRS ) ) * Max( ( MDR / FirstVNF_RAM_Server ),Max( FirstVNF_CPU,DDR ) ) ) + ( ( Max( ARS,CRS ) + Max( ACS,RRS ) ) / ( ( FirstVNF_RAM / RRS ) / Min( FirstVNF_Mem ,DDR ) ) ) ) ) ) ) / ( ( ( ( ( Max( ( RRS * AMS ),( BR - FirstVNF_RAM ) ) + ( ( MRS - DDR ) * ( FirstVNF_Mem * MRS ) ) ) - ( Max( ( CRS - BR ),( FirstVNF_RAM + RRS ) ) + ( ( FirstVNF_RAM_Server - DDR ) - Max( PN,FirstVNF_Mem ) ) ) ) * ( ( ( ( FirstVNF_RAM_Server - ACS ) + ( RRS - FirstVNF_Mem ) ) + ( Max( FirstVNF_Mem_Server,PN ) / Min( AMS ,MRS ) ) ) + ( ( ( DDR * FirstVNF_Mem_Server ) / ( MRS * FirstVNF_RAM ) ) + Min( Max( PN,FirstVNF_RAM ) ,Min( FirstVNF_Mem ,BR ) ) ) ) ) / Min( ( ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) + Max( RRS,MDR ) ) - ( Max( ACS,ACS ) - ( FirstVNF_RAM - FirstVNF_RAM ) ) ) * Max( ( Max( RRS,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ),( Max( FirstVNF_Mem_Server,DDR ) * ( AMS * MRS ) ) ) ) ,Min( ( ( Min( FirstVNF_CPU_Server ,ACS ) + ( FirstVNF_CPU + RRS ) ) - Min( Max( MRS,CRS ) ,( BR - MDR ) ) ) ,Max( Min( Max( AMS,PN ) ,( ARS - ARS ) ),( ( FirstVNF_CPU_Server * ACS ) + ( FirstVNF_Mem_Server * MRS ) ) ) ) ) ) - ( ( ( ( ( Min( AMS ,MRS ) * Max( FirstVNF_Mem_Server,PN ) ) + ( ( FirstVNF_RAM_Server - BR ) / ( CRS * FirstVNF_RAM ) ) ) * ( Min( ( Const * ACS ) ,( FirstVNF_RAM - FirstVNF_RAM ) ) + ( ( FirstVNF_RAM / ARS ) * ( BR + PN ) ) ) ) + ( ( Max( ( RRS / RRS ),( FirstVNF_CPU / CRS ) ) - ( ( MRS + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_RAM ) ) ) - ( Min( Min( Const ,ARS ) ,Min( FirstVNF_CPU_Server ,ARS ) ) + ( Max( FirstVNF_Mem,FirstVNF_RAM ) + Max( PN,BR ) ) ) ) ) * ( Max( ( Max( ( FirstVNF_CPU_Server - CRS ),( BR + FirstVNF_CPU_Server ) ) - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - ( ARS - BR ) ) ),( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Max( RRS,FirstVNF_CPU ) ) * ( ( DDR - FirstVNF_Mem_Server ) / ( AMS - FirstVNF_Mem_Server ) ) ) ) / Min( ( Max( ( FirstVNF_Mem - RRS ),Min( FirstVNF_RAM ,ARS ) ) + Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( FirstVNF_RAM / CRS ) ) ) ,Max( Min( ( MRS - FirstVNF_RAM_Server ) ,( ARS * CRS ) ),Max( ( FirstVNF_CPU_Server / Const ),Min( MDR ,BR ) ) ) ) ) ) ) )", "choosing": "( ( MLU / ( MUR / RCSe ) ) - ( CS + CS ) )", "obj1": 0.9288702928870293, "obj2": 0.0569863845876994}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( ARS - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) + RCSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( ( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.7635983263598326, "obj2": 0.08983825811443243}, {"determining": "( ( CRS - AMS ) / Max( Const,BR ) )", "choosing": "( ( MLU * Min( CS ,Max( ( CS + MUM ),( DS - MUR ) ) ) ) * Max( RMSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server + MDR ) ,Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( CS - DS ) / Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - FirstVNF_CPU_Server ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( AMS - ( ( FirstVNF_CPU_Server / MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * Max( MUR,RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Max( ( CRS - AMS ),( ( Min( Const ,DDR ) / ( CRS / MRS ) ) * ( Const - RRS ) ) ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Min( MUR ,DS ) - Min( MUR ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + Const ) ) + Const ) ) / CRS ) + ( ( Min( Const ,DDR ) / ( FirstVNF_Mem_Server / MRS ) ) - MDR ) )", "choosing": "( ( Max( RRSe,Min( DS ,RCSe ) ) - MUM ) - Min( CS ,MUM ) )", "obj1": 0.6401673640167364, "obj2": 0.18064033952471356}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Max( ( CRS - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6903765690376569, "obj2": 0.14159846814203403}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS * MRS ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( ( CS * MUM ) * CS ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - ( MDR + Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MLU ) - ( ( Max( ( MUM * RRSe ),( MUM + MLU ) ) * CS ) * RRSe ) )", "obj1": 0.9476987447698745, "obj2": 0.03293948088670299}, {"determining": "( AMS + ( ( Min( Const ,DDR ) / ( CRS / ( ( AMS - ( MDR + Const ) ) - FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "( ( Max( ( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) ),( MUM + MLU ) ) * MUM ) - Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( AMS - ( MDR + Const ) ) - FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "( ( Max( ( MUM * RRSe ),( MUM + MLU ) ) * MUM ) - Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5878661087866108, "obj2": 0.27831210956913377}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( ( MUR + ( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - MDR ) ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,MUR ) )", "obj1": 0.5857740585774058, "obj2": 0.29453366057487224}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( Min( FirstVNF_RAM_Server ,BR ) - Min( ( Const * MDR ) ,( FirstVNF_Mem_Server - ( MDR + Const ) ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUM * DS ) )", "obj1": 0.6778242677824268, "obj2": 0.16233726943846064}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / Max( ( ( FirstVNF_RAM_Server - BR ) - ( ( Const / MDR ) / Min( FirstVNF_Mem_Server ,AMS ) ) ),MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS - CS ) )", "obj1": 0.6631799163179917, "obj2": 0.17542362724648397}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( CRS - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * Min( MUM ,RMSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6401673640167364, "obj2": 0.18064033952471356}, {"determining": "( ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) + ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const / MDR ) ,Min( FirstVNF_Mem_Server ,AMS ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS + CS ) )", "obj1": 0.6631799163179917, "obj2": 0.17542362724648397}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( Min( FirstVNF_CPU_Server ,MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS / DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( BR - ( Max( FirstVNF_CPU_Server,ACS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( RRSe * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS + PN ) * ( Const - PN ) ) )", "choosing": "( Min( MLU ,DS ) - ( ( CS * ( RCSe * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + FirstVNF_RAM_Server ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS + ( ( FirstVNF_CPU_Server - ( MDR + ( FirstVNF_Mem - AMS ) ) ) - CRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) - MUM ) - Min( MLU ,MLU ) )", "obj1": 0.6861924686192469, "obj2": 0.1551187422538198}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( AMS - ( MDR + AMS ) ) - FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "( ( Max( Min( MUM ,RRSe ),( MUC + MLU ) ) * MUM ) - Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + AMS ) ) - CRS ) ) ) - MDR ) )", "choosing": "( ( ( CS * CS ) * RRSe ) - Min( MUR ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - PN ) - ( RRS - RRS ) ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( MLU - Min( MLU ,MLU ) ) + ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,AMS ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( ( MLU - MLU ) + Max( RCSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM * RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( CS * RMSe ) )", "obj1": 0.9581589958158996, "obj2": 0.024202287786320373}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( Max( AMS,PN ) * ( ( ( FirstVNF_Mem - AMS ) - ( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - Max( ( CS / RMSe ),Min( MUR ,MUR ) ) )", "obj1": 0.6171548117154811, "obj2": 0.25382673889174845}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( ( Max( ( MUM + RRSe ),( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.7112970711297071, "obj2": 0.13042597016699362}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( ARS - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) + RCSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( ( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.7635983263598326, "obj2": 0.08983825811443243}, {"determining": "( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server + MDR ) ,Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( CS - DS ) / Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - FirstVNF_CPU_Server ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( AMS - ( ( FirstVNF_CPU_Server / MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * Max( MUR,RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + Const ) ) + Const ) ) / CRS ) + ( ( Min( Const ,DDR ) / ( FirstVNF_Mem_Server / MRS ) ) - MDR ) )", "choosing": "( ( Max( RRSe,Min( DS ,RCSe ) ) - MUM ) - Min( CS ,MUM ) )", "obj1": 0.6401673640167364, "obj2": 0.18064033952471356}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS * MRS ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( ( CS * MUM ) * CS ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( AMS - ( MDR + Const ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MLU ) - ( ( Max( ( MUM * RRSe ),( MUM + MLU ) ) * CS ) * RRSe ) )", "obj1": 0.9476987447698745, "obj2": 0.03293948088670299}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6736401673640168, "obj2": 0.1706030338424885}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) - Min( FirstVNF_RAM ,AMS ) )", "choosing": "( Max( MUR,Min( MUM ,RCSe ) ) + Max( RCSe,RCSe ) )", "obj1": 0.9874476987447699, "obj2": 0.0045826866258266135}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( ( ( CRS / ( ( AMS - ( MDR + Const ) ) - FirstVNF_Mem_Server ) ) - PN ) * ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - RRS ) ) )", "choosing": "( Max( ( Min( MLU ,MLU ) - ( ( CS * CS ) * RRSe ) ),( MUM + MLU ) ) - ( ( CS * CS ) * Min( MUR ,MUR ) ) )", "obj1": 0.9560669456066946, "obj2": 0.026067903049016697}, {"determining": "( ( ( MDR - ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) / MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) / MUM ) - ( MUR + MUR ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR - ( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( ( Max( ( MUM + RRSe ),( ( CS * CS ) * RRSe ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.7175732217573222, "obj2": 0.12543908074233506}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + FirstVNF_RAM_Server ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS + ( ( FirstVNF_CPU_Server - ( MDR + ( FirstVNF_Mem - AMS ) ) ) - CRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) - MUM ) - Min( MLU ,MLU ) )", "obj1": 0.7238493723849372, "obj2": 0.11752879837881723}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( Max( MUR,Min( MUM ,RCSe ) ) - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.8807531380753139, "obj2": 0.048010134826368074}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Const ) ) - CRS ) + ( ( Max( ( CRS - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( RCSe - Min( MUR ,DS ) )", "obj1": 0.997907949790795, "obj2": 0.0006335653153568479}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6297071129707112, "obj2": 0.1952208825528583}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( AMS - ( MDR + Const ) ) - PN ) ) ) - MDR ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + ( ( Max( ( MUM * RRSe ),( MUC + MLU ) ) * MUM ) - Min( MUR ,RRSe ) ) ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.7824267782426778, "obj2": 0.08848277263047254}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS - ( ( FirstVNF_CPU_Server - ( MDR + MRS ) ) - CRS ) ) ) - ACS ) )", "choosing": "( ( Max( ( ( Max( RRSe,Min( MUC ,RCSe ) ) - MUM ) + MLU ),( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.698744769874477, "obj2": 0.1364099385271592}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( ( Max( ( MUM + RRSe ),( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.7112970711297071, "obj2": 0.13042597016699362}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( AMS - CRS ) - FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "( MLU - Min( MUR ,RRSe ) )", "obj1": 0.8682008368200836, "obj2": 0.0538818255217239}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( ( ( ( ( AMS - PN ) * ( Const - RRS ) ) - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( Min( MUR ,MUR ) * RRSe ) )", "obj1": 0.7510460251046025, "obj2": 0.10857299202081598}, {"determining": "( ( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.7635983263598326, "obj2": 0.08983825811443243}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Max( ( CRS - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) ) - Min( MUR ,DS ) )", "obj1": 0.6882845188284519, "obj2": 0.13759553398976404}], "14": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5878661087866108, "obj2": 0.27831210956913377}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( ( MUR + ( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - MDR ) ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,MUR ) )", "obj1": 0.5857740585774058, "obj2": 0.29453366057487224}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( Min( FirstVNF_RAM_Server ,BR ) - Min( ( Const * MDR ) ,( FirstVNF_Mem_Server - ( MDR + Const ) ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUM * DS ) )", "obj1": 0.6778242677824268, "obj2": 0.16233726943846064}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / Max( ( ( FirstVNF_RAM_Server - BR ) - ( ( Const / MDR ) / Min( FirstVNF_Mem_Server ,AMS ) ) ),MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS - CS ) )", "obj1": 0.6631799163179917, "obj2": 0.17542362724648397}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( CRS - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * Min( MUM ,RMSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6401673640167364, "obj2": 0.18064033952471356}, {"determining": "( ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) + ( ( ( FirstVNF_RAM_Server - BR ) - Min( ( Const / MDR ) ,Min( FirstVNF_Mem_Server ,AMS ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( DS + CS ) )", "obj1": 0.6631799163179917, "obj2": 0.17542362724648397}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( Min( FirstVNF_CPU_Server ,MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS / DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( BR - ( Max( FirstVNF_CPU_Server,ACS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( RRSe * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS + PN ) * ( Const - PN ) ) )", "choosing": "( Min( MLU ,DS ) - ( ( CS * ( RCSe * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + FirstVNF_RAM_Server ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS + ( ( FirstVNF_CPU_Server - ( MDR + ( FirstVNF_Mem - AMS ) ) ) - CRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) - MUM ) - Min( MLU ,MLU ) )", "obj1": 0.6861924686192469, "obj2": 0.1551187422538198}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM * RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( Max( AMS,PN ) * ( ( ( FirstVNF_Mem - AMS ) - ( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - Max( ( CS / RMSe ),Min( MUR ,MUR ) ) )", "obj1": 0.6171548117154811, "obj2": 0.25382673889174845}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( ARS - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) + RCSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( ( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.7635983263598326, "obj2": 0.08983825811443243}, {"determining": "( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server + MDR ) ,Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( CS - DS ) / Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - FirstVNF_CPU_Server ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( AMS - ( ( FirstVNF_CPU_Server / MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * Max( MUR,RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + Const ) ) + Const ) ) / CRS ) + ( ( Min( Const ,DDR ) / ( FirstVNF_Mem_Server / MRS ) ) - MDR ) )", "choosing": "( ( Max( RRSe,Min( DS ,RCSe ) ) - MUM ) - Min( CS ,MUM ) )", "obj1": 0.6401673640167364, "obj2": 0.18064033952471356}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS * MRS ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( ( CS * MUM ) * CS ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6736401673640168, "obj2": 0.1706030338424885}, {"determining": "( ( ( MDR - ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) / MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) / MUM ) - ( MUR + MUR ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR - ( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6297071129707112, "obj2": 0.1952208825528583}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS - ( ( FirstVNF_CPU_Server - ( MDR + MRS ) ) - CRS ) ) ) - ACS ) )", "choosing": "( ( Max( ( ( Max( RRSe,Min( MUC ,RCSe ) ) - MUM ) + MLU ),( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.698744769874477, "obj2": 0.1364099385271592}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( ( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.7635983263598326, "obj2": 0.08983825811443243}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Max( ( CRS - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) ) - Min( MUR ,DS ) )", "obj1": 0.6882845188284519, "obj2": 0.13759553398976404}, {"determining": "( ( ( ( ( AMS - PN ) * ( Const - RRS ) ) - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS + ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "Min( Max( RRSe,( Max( MUR,Min( MUM ,RCSe ) ) - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( RMSe + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.7175732217573222, "obj2": 0.12312835196854492}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.700836820083682, "obj2": 0.13451141812721557}, {"determining": "( FirstVNF_CPU - ( ( ARS + MDR ) - Max( AMS,AMS ) ) )", "choosing": "( ( ( MUM - ( MUM + RRSe ) ) - MUM ) - ( MUR * MUR ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( ( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.7635983263598326, "obj2": 0.08983825811443243}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + FirstVNF_RAM_Server ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + ( FirstVNF_Mem - AMS ) ) ) - CRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * RMSe ) * RRSe ) )", "obj1": 0.7510460251046025, "obj2": 0.09637199793546118}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Max( ( CRS - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) ) - Min( MUR ,DS ) )", "obj1": 0.6882845188284519, "obj2": 0.13759553398976404}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6338912133891214, "obj2": 0.19209379892200884}, {"determining": "( ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( Max( ( MUM + RRSe ),( MUM + MLU ) ) + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.7782426778242678, "obj2": 0.08917406262970051}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.7238493723849372, "obj2": 0.11749823965430563}, {"determining": "( ( ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( Min( Min( MUR ,MUR ) ,MLU ) - ( Min( MUR ,MUR ) * RRSe ) )", "obj1": 0.7405857740585774, "obj2": 0.11190961362823318}, {"determining": "( ( ( ( ( AMS - PN ) * ( Const - RRS ) ) - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( Min( ( Min( MLU ,MLU ) - ( Min( MUR ,MUR ) * RRSe ) ) ,MLU ) - ( Min( MUR ,MUR ) * RRSe ) )", "obj1": 0.7447698744769874, "obj2": 0.10629463222711147}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( ( ( AMS - PN ) * ( Const - RRS ) ) - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( Min( MUR ,MUR ) * RRSe ) )", "obj1": 0.7112970711297071, "obj2": 0.1298796643130565}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / ( ( FirstVNF_CPU_Server - ( MDR + Const ) ) - CRS ) ) ) - MDR ) )", "choosing": "( ( Max( ( MUM + RRSe ),( MUM + MLU ) ) - MUM ) - Min( MUR ,RRSe ) )", "obj1": 0.7092050209205021, "obj2": 0.13279802881692873}], "15": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5878661087866108, "obj2": 0.27831210956913377}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( ( MUR + ( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - MDR ) ) )", "choosing": "( ( Max( MUR,( MUM + MLU ) ) - MUM ) - Min( MUR ,MUR ) )", "obj1": 0.5857740585774058, "obj2": 0.29453366057487224}, {"determining": "( ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) - CRS ) + ( ( Min( Const ,CRS ) / ( ( Min( FirstVNF_RAM_Server ,BR ) - Min( ( Const * MDR ) ,( FirstVNF_Mem_Server - ( MDR + Const ) ) ) ) / MRS ) ) - MRS ) )", "choosing": "( ( Max( MUR,( MUM + RRSe ) ) - MUM ) - ( MUM * DS ) )", "obj1": 0.6778242677824268, "obj2": 0.16233726943846064}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( CRS - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * Min( MUM ,RMSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6401673640167364, "obj2": 0.18064033952471356}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( Min( FirstVNF_CPU_Server ,MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS / DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( BR - ( Max( FirstVNF_CPU_Server,ACS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( RRSe * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS + PN ) * ( Const - PN ) ) )", "choosing": "( Min( MLU ,DS ) - ( ( CS * ( RCSe * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MDR + FirstVNF_RAM_Server ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS + ( ( FirstVNF_CPU_Server - ( MDR + ( FirstVNF_Mem - AMS ) ) ) - CRS ) ) ) - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MUM * RRSe ),Max( MUM,MLU ) ) - MUM ) - Min( MLU ,MLU ) )", "obj1": 0.6861924686192469, "obj2": 0.1551187422538198}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM * RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( FirstVNF_Mem - AMS ),( Max( AMS,PN ) * ( ( ( FirstVNF_Mem - AMS ) - ( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - Max( ( CS / RMSe ),Min( MUR ,MUR ) ) )", "obj1": 0.6171548117154811, "obj2": 0.25382673889174845}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( ARS - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) + RCSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server + MDR ) ,Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - ( ( CS - DS ) / Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - FirstVNF_CPU_Server ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( AMS - ( ( FirstVNF_CPU_Server / MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * Max( MUR,RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + Const ) ) + Const ) ) / CRS ) + ( ( Min( Const ,DDR ) / ( FirstVNF_Mem_Server / MRS ) ) - MDR ) )", "choosing": "( ( Max( RRSe,Min( DS ,RCSe ) ) - MUM ) - Min( CS ,MUM ) )", "obj1": 0.6401673640167364, "obj2": 0.18064033952471356}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS * MRS ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( ( CS * MUM ) * CS ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Max( MLU,MLU ) - ( ( CS * CS ) - RRSe ) )", "obj1": 0.6736401673640168, "obj2": 0.1706030338424885}, {"determining": "( ( ( MDR - ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) / MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) / MUM ) - ( MUR + MUR ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR - ( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6297071129707112, "obj2": 0.1952208825528583}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( ARS + MDR ) - Max( AMS,AMS ) ) )", "choosing": "( ( ( MUM - ( MUM + RRSe ) ) - MUM ) - ( MUR * MUR ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6338912133891214, "obj2": 0.19209379892200884}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( MUR * ( MLU + RRSe ) ) - MUM ) - ( MUR * RRSe ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( RRSe * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( Min( FirstVNF_CPU_Server ,MDR ) - Max( PN,ARS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( Min( ( CS * CS ) ,CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( PN + AMS ) ) )", "choosing": "( ( ( MUR * ( MUC + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - RRS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( Max( ( CS * CS ),CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6213389121338913, "obj2": 0.24240663564958861}, {"determining": "( FirstVNF_CPU - ( ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) + MDR ) - Max( CRS,AMS ) ) )", "choosing": "Min( Max( RRSe,( RRSe - Min( ( ( MUM + RRSe ) - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) )", "obj1": 0.6192468619246861, "obj2": 0.24484261811916727}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6631799163179917, "obj2": 0.17122214685767653}, {"determining": "( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server + MDR ) ,Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}], "16": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5878661087866108, "obj2": 0.27831210956913377}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( CRS - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * Min( MUM ,RMSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6401673640167364, "obj2": 0.18064033952471356}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( BR - ( Max( FirstVNF_CPU_Server,ACS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( RRSe * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS + PN ) * ( Const - PN ) ) )", "choosing": "( Min( MLU ,DS ) - ( ( CS * ( RCSe * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( ( ( FirstVNF_Mem_Server - ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,( MUM * RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( ARS - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) + RCSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - FirstVNF_CPU_Server ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MUR ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( AMS - ( ( FirstVNF_CPU_Server / MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * Max( MUR,RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + Const ) ) + Const ) ) / CRS ) + ( ( Min( Const ,DDR ) / ( FirstVNF_Mem_Server / MRS ) ) - MDR ) )", "choosing": "( ( Max( RRSe,Min( DS ,RCSe ) ) - MUM ) - Min( CS ,MUM ) )", "obj1": 0.6401673640167364, "obj2": 0.18064033952471356}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS * MRS ) * ( Const - RRS ) ) )", "choosing": "( Max( MLU,MLU ) - ( ( ( CS * MUM ) * CS ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( MDR - ( Max( FirstVNF_Mem_Server,( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) / MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) / MUM ) - ( MUR + MUR ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6297071129707112, "obj2": 0.1952208825528583}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( ARS + MDR ) - Max( AMS,AMS ) ) )", "choosing": "( ( ( MUM - ( MUM + RRSe ) ) - MUM ) - ( MUR * MUR ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( MUR * ( MLU + RRSe ) ) - MUM ) - ( MUR * RRSe ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( RRSe * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( Min( FirstVNF_CPU_Server ,MDR ) - Max( PN,ARS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( Min( ( CS * CS ) ,CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( PN + AMS ) ) )", "choosing": "( ( ( MUR * ( MUC + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - RRS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( Max( ( CS * CS ),CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6631799163179917, "obj2": 0.17122214685767653}, {"determining": "( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server + MDR ) ,Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( MRS * AMS ) ) )", "choosing": "( ( ( MUM * ( RCSe + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * Max( PN,AMS ) ) )", "choosing": "( ( ( MUR + ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5794979079497908, "obj2": 0.2921314831362952}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) + MDR ) )", "choosing": "( ( ( MUR + ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6297071129707112, "obj2": 0.1952208825528583}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( RMSe + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( Max( MLU,MLU ) - DS )", "obj1": 0.6338912133891214, "obj2": 0.19097466106609384}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6276150627615062, "obj2": 0.1953251890388708}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,AMS ) ) ),AMS ) ) )", "choosing": "( Min( Max( RRSe,( RRSe - Min( ( CS - DS ) ,Min( MLU ,RCSe ) ) ) ) ,( ( Max( MUR,( MUM + RRSe ) ) - MUM ) / MUC ) ) - ( MUR * DS ) )", "obj1": 0.5878661087866108, "obj2": 0.27831210956913377}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( Max( MUR,Min( MUM ,RCSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6610878661087866, "obj2": 0.17963981065176923}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUM * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.608786610878661, "obj2": 0.26031283918564907}, {"determining": "( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - ( MDR + Const ) ) + Const ) ) - CRS ) + ( ( Min( Const ,DDR ) / ( CRS / MRS ) ) - MDR ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6297071129707112, "obj2": 0.1952208825528583}], "17": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( BR - ( Max( FirstVNF_CPU_Server,ACS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( RRSe * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( ARS - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) + RCSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( AMS - ( ( FirstVNF_CPU_Server / MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * Max( MUR,RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( ARS + MDR ) - Max( AMS,AMS ) ) )", "choosing": "( ( ( MUM - ( MUM + RRSe ) ) - MUM ) - ( MUR * MUR ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( MUR * ( MLU + RRSe ) ) - MUM ) - ( MUR * RRSe ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( RRSe * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( Min( FirstVNF_CPU_Server ,MDR ) - Max( PN,ARS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( Min( ( CS * CS ) ,CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( PN + AMS ) ) )", "choosing": "( ( ( MUR * ( MUC + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - RRS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( Max( ( CS * CS ),CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server + MDR ) ,Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( MRS * AMS ) ) )", "choosing": "( ( ( MUM * ( RCSe + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * Max( PN,AMS ) ) )", "choosing": "( ( ( MUR + ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5794979079497908, "obj2": 0.2921314831362952}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( RMSe + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUM * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( MRS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUR ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Min( PN ,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * ( ACS + AMS ) ) )", "choosing": "( ( ( MUM * Max( MUM,RRSe ) ) - MUM ) - ( MUR / DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR / DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( ( MUR * ( MLU + RRSe ) ) - MUM ) - ( MUR * DS ) ) - ( MUR * DS ) )", "obj1": 0.5857740585774058, "obj2": 0.27722931001061835}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUM + RRSe ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5753138075313807, "obj2": 0.29527062217762884}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5753138075313807, "obj2": 0.29527062217762884}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - DS ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( Const + FirstVNF_RAM_Server ) - Max( PN,AMS ) ) )", "choosing": "( ( ( DS * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,Const ) ) )", "choosing": "( ( ( RMSe * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( DDR - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) + MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27482535301528976}], "18": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( BR - ( Max( FirstVNF_CPU_Server,ACS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( RRSe * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( ARS - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) + RCSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( AMS - ( ( FirstVNF_CPU_Server / MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * Max( MUR,RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( FirstVNF_CPU - ( Min( FirstVNF_CPU_Server ,MDR ) - Max( PN,ARS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( Min( ( CS * CS ) ,CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - RRS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( Max( ( CS * CS ),CS ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( MRS * AMS ) ) )", "choosing": "( ( ( MUM * ( RCSe + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * Max( PN,AMS ) ) )", "choosing": "( ( ( MUR + ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5794979079497908, "obj2": 0.2921314831362952}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( MRS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUR ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * ( ACS + AMS ) ) )", "choosing": "( ( ( MUM * Max( MUM,RRSe ) ) - MUM ) - ( MUR / DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUM + RRSe ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5753138075313807, "obj2": 0.29527062217762884}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5753138075313807, "obj2": 0.29527062217762884}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - DS ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( Const + FirstVNF_RAM_Server ) - Max( PN,AMS ) ) )", "choosing": "( ( ( DS * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU_Server + MDR ) + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) ) )", "obj1": 0.8849372384937239, "obj2": 0.04805759123857378}, {"determining": "( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( RRSe * ( MUM + RRSe ) ) - MUM ) - ( MUR * ( Max( ( CS * CS ),CS ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) ) - AMS ),( ( AMS - PN ) * ( Const - AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * ( ( MUR * ( MUM + RRSe ) ) - MUM ) ) * RRSe ) )", "obj1": 0.9916317991631799, "obj2": 0.008266743881380661}, {"determining": "( DDR - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) + MUM ) - ( MUR * DS ) )", "obj1": 0.8389121338912134, "obj2": 0.1260609753816158}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( AMS - ( ( FirstVNF_CPU_Server / MDR ) - Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) ) )", "choosing": "( ( ( MUR * Max( ( ( CS * ( CS * CS ) ) * RRSe ),RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.9602510460251046, "obj2": 0.04033023350058859}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU_Server + MDR ) + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - ( MUM + RRSe ) ) - ( MUR * DS ) )", "obj1": 0.8514644351464435, "obj2": 0.06228237641992718}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS * PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( MUC * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "Max( ( Max( ( FirstVNF_Mem - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) ) - AMS ),( ( AMS - PN ) * ( Const - RRS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6129707112970711, "obj2": 0.25400777075881503}, {"determining": "( Max( PN,AMS ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * ( ( MUR * ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.7217573221757322, "obj2": 0.1719149711210946}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5794979079497908, "obj2": 0.2921314831362952}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( PN - AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( MRS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( DDR - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.7782426778242678, "obj2": 0.14846808147390333}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6443514644351465, "obj2": 0.23165771864131898}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) ) )", "choosing": "( ( ( MUR * ( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.8744769874476988, "obj2": 0.05851896500294158}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) + MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server - MDR ) - Max( PN,AMS ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - ( MUR - DS ) )", "obj1": 0.8765690376569037, "obj2": 0.05353875247033988}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6464435146443515, "obj2": 0.22250141912284527}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUM + RRSe ) - MUM ) - ( MUR * DS ) )", "obj1": 0.8598326359832636, "obj2": 0.06038631595233941}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( PN * AMS ) ) )", "choosing": "( ( ( MUR * ( MLU + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5962343096234309, "obj2": 0.26363639575026204}, {"determining": "( FirstVNF_CPU - Min( ( FirstVNF_CPU_Server + MDR ) ,Max( PN,AMS ) ) )", "choosing": "( ( ( MUM - ( MUM + RRSe ) ) - MUM ) - ( MUR * MUR ) )", "obj1": 0.9372384937238494, "obj2": 0.043212551136841255}, {"determining": "( AMS - ( ( FirstVNF_CPU_Server / MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( DS * ( MUM + RRSe ) ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.8305439330543933, "obj2": 0.14608878943562822}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RMSe ) - RMSe )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}], "19": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( MRS * AMS ) ) )", "choosing": "( ( ( MUM * ( RCSe + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5794979079497908, "obj2": 0.2921314831362952}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( MRS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUR ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * ( ACS + AMS ) ) )", "choosing": "( ( ( MUM * Max( MUM,RRSe ) ) - MUM ) - ( MUR / DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUM + RRSe ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5753138075313807, "obj2": 0.29527062217762884}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5753138075313807, "obj2": 0.29527062217762884}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - DS ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( Const + FirstVNF_RAM_Server ) - Max( PN,AMS ) ) )", "choosing": "( ( ( DS * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( Max( PN,AMS ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * ( ( MUR * ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.7217573221757322, "obj2": 0.1719149711210946}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5794979079497908, "obj2": 0.2921314831362952}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( PN - AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( MRS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6443514644351465, "obj2": 0.23165771864131898}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) + MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6464435146443515, "obj2": 0.22250141912284527}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( PN * AMS ) ) )", "choosing": "( ( ( MUR * ( MLU + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RMSe ) - RMSe )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( CS * ( CS * CS ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6694560669456067, "obj2": 0.20928217921308034}, {"determining": "( MDR - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * MLU ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( Min( FirstVNF_CPU_Server ,MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( RMSe * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) - ( Max( FirstVNF_Mem,AMS ) - Max( PN,AMS ) ) )", "choosing": "( RRSe - ( MUR * DS ) )", "obj1": 0.6903765690376569, "obj2": 0.1845825405935397}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5753138075313807, "obj2": 0.29527062217762884}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( ARS - MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - Max( MUM,DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( CRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5794979079497908, "obj2": 0.2921314831362952}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Min( PN ,FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR / DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,Const ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RCSe ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.5753138075313807, "obj2": 0.29527062217762884}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR + DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( MUC * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6569037656903766, "obj2": 0.21680661606401117}, {"determining": "( FirstVNF_CPU - ( Min( AMS ,MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( Min( MUR ,( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MLU ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - Max( PN,AMS ) ) )", "choosing": "( ( Max( MUR,( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) ) )", "obj1": 0.6799163179916318, "obj2": 0.19034146335350435}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( MDR - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( RCSe * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6443514644351465, "obj2": 0.23165771864131898}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6464435146443515, "obj2": 0.22250141912284527}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.2634404411845276}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.600418410041841, "obj2": 0.25795107426270414}], "20": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( MRS * AMS ) ) )", "choosing": "( ( ( MUM * ( RCSe + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( MRS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUR ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * ( ACS + AMS ) ) )", "choosing": "( ( ( MUM * Max( MUM,RRSe ) ) - MUM ) - ( MUR / DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - DS ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( PN - AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( MRS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) + MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( ( CS * CS ) * CS ) * RRSe ) )", "obj1": 0.6464435146443515, "obj2": 0.22250141912284527}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RMSe ) - RMSe )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( MDR - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * MLU ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( ARS - MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - Max( MUM,DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Min( PN ,FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR / DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( MUC * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6569037656903766, "obj2": 0.21680661606401117}, {"determining": "( FirstVNF_CPU - ( Min( AMS ,MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( Min( MUR ,( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MLU ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - Max( PN,AMS ) ) )", "choosing": "( ( Max( MUR,( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MLU ,MLU ) - ( ( CS * ( CS * CS ) ) * RRSe ) )", "obj1": 0.6464435146443515, "obj2": 0.22250141912284527}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.2634404411845276}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR / ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( ACS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MRS ) - Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - CS ) - DS )", "obj1": 0.5983263598326359, "obj2": 0.25659802358847694}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) + MUM ) - ( MUR * MUR ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - DS ) - ( MUR * ( MUM + RRSe ) ) )", "obj1": 0.5711297071129707, "obj2": 0.31213032740372676}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server - MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( RRSe + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.2634404411845276}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( ( MUR - ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( ( MUR * ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6150627615062761, "obj2": 0.24826350673605033}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( MDR - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,MDR ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - CS ) - Max( MUR,DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUR ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + RRS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM - RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( DDR / MDR ) - Max( PN,RRS ) ) )", "choosing": "( ( ( RMSe * ( MUM + RRSe ) ) * MUM ) - ( MUR + DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) + MUM ) - ( MUR * DS ) )", "obj1": 0.6338912133891214, "obj2": 0.22590314621013693}], "21": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( MRS * AMS ) ) )", "choosing": "( ( ( MUM * ( RCSe + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( MRS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUR ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * ( ACS + AMS ) ) )", "choosing": "( ( ( MUM * Max( MUM,RRSe ) ) - MUM ) - ( MUR / DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - DS ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( PN - AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( MRS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) + MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RMSe ) - RMSe )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( MDR - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * MLU ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - Min( MUR ,DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( ARS - MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - Max( MUM,DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Min( PN ,FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR / DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( Min( AMS ,MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( Min( MUR ,( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MLU ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - Max( PN,AMS ) ) )", "choosing": "( ( Max( MUR,( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR / ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( ACS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR - DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MRS ) - Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - CS ) - DS )", "obj1": 0.5983263598326359, "obj2": 0.25659802358847694}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_RAM_Server,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) + MUM ) - ( MUR * MUR ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - DS ) - ( MUR * ( MUM + RRSe ) ) )", "obj1": 0.5711297071129707, "obj2": 0.31213032740372676}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.24123992408367087}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( ( MUR * ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6150627615062761, "obj2": 0.24826350673605033}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + RRS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM - RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( DDR / MDR ) - Max( PN,RRS ) ) )", "choosing": "( ( ( RMSe * ( MUM + RRSe ) ) * MUM ) - ( MUR + DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "( ( ( DS * ( MUM + RRSe ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( ( MUR * ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6150627615062761, "obj2": 0.24826350673605033}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( ( MLU * ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6150627615062761, "obj2": 0.24826350673605033}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * ( MUM * RRSe ) ) ,MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR * ( MUM + DS ) ) - RMSe ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( Max( ( FirstVNF_CPU_Server + MDR ),Max( FirstVNF_CPU_Server,AMS ) ) + Const ) - Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR + ( MUM + RRSe ) ) - DS ) - ( MUR / ( MUM + RRSe ) ) )", "obj1": 0.5627615062761506, "obj2": 0.31341450630349227}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * ( MUM + MUR ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUC * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( MUR * ( MLU + RRSe ) ) - MUR )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( DS * ( MUM + RRSe ) ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.604602510460251, "obj2": 0.2546823586612657}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUC + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}], "22": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RMSe ) - RMSe )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MLU ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - Max( PN,AMS ) ) )", "choosing": "( ( Max( MUR,( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MRS ) - Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - CS ) - DS )", "obj1": 0.5983263598326359, "obj2": 0.25659802358847694}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + RRS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM - RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( DDR / MDR ) - Max( PN,RRS ) ) )", "choosing": "( ( ( RMSe * ( MUM + RRSe ) ) * MUM ) - ( MUR + DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "( ( ( DS * ( MUM + RRSe ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * ( MUM * RRSe ) ) ,MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR * ( MUM + DS ) ) - RMSe ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( Max( ( FirstVNF_CPU_Server + MDR ),Max( FirstVNF_CPU_Server,AMS ) ) + Const ) - Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR + ( MUM + RRSe ) ) - DS ) - ( MUR / ( MUM + RRSe ) ) )", "obj1": 0.5627615062761506, "obj2": 0.31341450630349227}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * ( MUM + MUR ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUC * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( MUR * ( MLU + RRSe ) ) - MUR )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( DS * ( MUM + RRSe ) ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.604602510460251, "obj2": 0.2546823586612657}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUC + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.6297071129707112, "obj2": 0.22906753407448796}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_Mem + MDR ) + Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + MUR ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUC * DS ) )", "obj1": 0.6150627615062761, "obj2": 0.24235280805132137}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUC * DS ) )", "obj1": 0.6150627615062761, "obj2": 0.24235280805132137}, {"determining": "( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server + MDR ) - Max( AMS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + ( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) ) ) ) + MUM ) - ( MUR * DS ) )", "obj1": 0.6799163179916318, "obj2": 0.2019455086052697}, {"determining": "( FirstVNF_CPU - ( ( MDR + MDR ) - Min( PN ,AMS ) ) )", "choosing": "( ( ( MUR * Max( MUM,RRSe ) ) + MUM ) - ( RRSe * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( ( MUR * ( ( MUR * ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - ( MUR * DS ) ) - ( MUR * DS ) )", "obj1": 0.6171548117154811, "obj2": 0.23843569633685086}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( RRSe - DS )", "obj1": 0.5711297071129707, "obj2": 0.30240720748338934}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - DS ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( Max( PN,AMS ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUM * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.7280334728033473, "obj2": 0.17114008942387438}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( Max( PN,AMS ),AMS ) ) )", "choosing": "( ( ( ( MUR * ( MUM + RRSe ) ) * ( MUM + RRSe ) ) + MUM ) - ( MUR * DS ) )", "obj1": 0.6694560669456067, "obj2": 0.21798903606978806}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) + MUM ) - ( MUR * DS ) )", "obj1": 0.6338912133891214, "obj2": 0.22590314621013693}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Min( PN ,AMS ) ) )", "choosing": "( ( ( MUR * ( RMSe + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( AMS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( Min( ACS ,AMS ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MLU * RRSe ) + Max( MUR,MUR ) )", "obj1": 0.7907949790794979, "obj2": 0.142079794690124}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}], "23": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RMSe ) - RMSe )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MLU ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - Max( PN,AMS ) ) )", "choosing": "( ( Max( MUR,( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MRS ) - Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - CS ) - DS )", "obj1": 0.5983263598326359, "obj2": 0.25659802358847694}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + RRS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM - RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( DDR / MDR ) - Max( PN,RRS ) ) )", "choosing": "( ( ( RMSe * ( MUM + RRSe ) ) * MUM ) - ( MUR + DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "( ( ( DS * ( MUM + RRSe ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * ( MUM * RRSe ) ) ,MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( PN - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR * ( MUM + DS ) ) - RMSe ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( Max( ( FirstVNF_CPU_Server + MDR ),Max( FirstVNF_CPU_Server,AMS ) ) + Const ) - Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR + ( MUM + RRSe ) ) - DS ) - ( MUR / ( MUM + RRSe ) ) )", "obj1": 0.5627615062761506, "obj2": 0.31341450630349227}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * ( MUM + MUR ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUC * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( MUR * ( MLU + RRSe ) ) - MUR )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( DS * ( MUM + RRSe ) ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.604602510460251, "obj2": 0.2546823586612657}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUC + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_Mem + MDR ) + Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + MUR ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( MDR + MDR ) - Min( PN ,AMS ) ) )", "choosing": "( ( ( MUR * Max( MUM,RRSe ) ) + MUM ) - ( RRSe * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( RRSe - DS )", "obj1": 0.5711297071129707, "obj2": 0.30240720748338934}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_RAM_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - DS ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Min( PN ,AMS ) ) )", "choosing": "( ( ( MUR * ( RMSe + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU_Server + MDR ),Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RCSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( DS * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) / Max( ARS,PN ) ) )", "choosing": "( ( ( MUR + ( DS + RRSe ) ) - RCSe ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}], "24": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RMSe ) - RMSe )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MLU ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - Max( PN,AMS ) ) )", "choosing": "( ( Max( MUR,( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MRS ) - Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - CS ) - DS )", "obj1": 0.5983263598326359, "obj2": 0.25659802358847694}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + RRS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM - RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( DDR / MDR ) - Max( PN,RRS ) ) )", "choosing": "( ( ( RMSe * ( MUM + RRSe ) ) * MUM ) - ( MUR + DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,AMS ) ) )", "choosing": "( ( ( DS * ( MUM + RRSe ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * ( MUM * RRSe ) ) ,MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( Max( ( FirstVNF_CPU_Server + MDR ),Max( FirstVNF_CPU_Server,AMS ) ) + Const ) - Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR + ( MUM + RRSe ) ) - DS ) - ( MUR / ( MUM + RRSe ) ) )", "obj1": 0.5627615062761506, "obj2": 0.31341450630349227}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * ( MUM + MUR ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( MUR * ( MLU + RRSe ) ) - MUR )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( DS * ( MUM + RRSe ) ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.604602510460251, "obj2": 0.2546823586612657}, {"determining": "( FirstVNF_CPU - ( ( MDR + MDR ) - Min( PN ,AMS ) ) )", "choosing": "( ( ( MUR * Max( MUM,RRSe ) ) + MUM ) - ( RRSe * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( RRSe - DS )", "obj1": 0.5711297071129707, "obj2": 0.30240720748338934}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU_Server + MDR ),Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RCSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( DS * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) / Max( ARS,PN ) ) )", "choosing": "( ( ( MUR + ( DS + RRSe ) ) - RCSe ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MUR ,( MUM + MLU ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) + MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + BR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MUM )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.606694560669456, "obj2": 0.2537800075458239}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( RRSe - DS )", "obj1": 0.5711297071129707, "obj2": 0.30240720748338934}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server / MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUC * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}], "25": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RMSe ) - RMSe )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MLU ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - Max( PN,AMS ) ) )", "choosing": "( ( Max( MUR,( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MRS ) - Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - CS ) - DS )", "obj1": 0.5983263598326359, "obj2": 0.25659802358847694}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + RRS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM - RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( DDR / MDR ) - Max( PN,RRS ) ) )", "choosing": "( ( ( RMSe * ( MUM + RRSe ) ) * MUM ) - ( MUR + DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * ( MUM * RRSe ) ) ,MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( MUR * ( MLU + RRSe ) ) - MUR )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( DS * ( MUM + RRSe ) ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.604602510460251, "obj2": 0.2546823586612657}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( DS * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) / Max( ARS,PN ) ) )", "choosing": "( ( ( MUR + ( DS + RRSe ) ) - RCSe ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( MUR,( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,MDR ) - Max( PN,AMS ) ) )", "choosing": "( Min( MUR ,( MUM + MLU ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) + MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + BR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MUM )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server / MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUC * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( AMS + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * Min( MUR ,( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + DDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MLU )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + ARS ) - Max( PN,MRS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MUR )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_CPU_Server,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - RCSe )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * Min( MUM ,RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5899581589958159, "obj2": 0.27173669010121043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * ( MUM - RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.606694560669456, "obj2": 0.2534834764828232}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - Max( ( FirstVNF_CPU_Server + RRS ),Max( PN,AMS ) ) )", "choosing": "( ( MUR * ( RCSe + MUC ) ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2820933651698993}, {"determining": "( FirstVNF_CPU - ( ( ARS + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + DS ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}], "26": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RMSe ) - RMSe )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MLU ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) - Max( PN,AMS ) ) )", "choosing": "( ( Max( MUR,( MUR + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MRS ) - Max( FirstVNF_CPU,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - CS ) - DS )", "obj1": 0.5983263598326359, "obj2": 0.25659802358847694}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + RRS ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM - RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( DDR / MDR ) - Max( PN,RRS ) ) )", "choosing": "( ( ( RMSe * ( MUM + RRSe ) ) * MUM ) - ( MUR + DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * ( MUM * RRSe ) ) ,MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( DS * ( MUM + RRSe ) ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.604602510460251, "obj2": 0.2546823586612657}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) / Max( ARS,PN ) ) )", "choosing": "( ( ( MUR + ( DS + RRSe ) ) - RCSe ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + BR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MUM )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + DDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MLU )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + ARS ) - Max( PN,MRS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MUR )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_CPU_Server,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - RCSe )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * ( MUM - RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.606694560669456, "obj2": 0.2534834764828232}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( ARS + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + DS ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( ( CS * ( MUR * ( ( ( MUR * ( MUM + RRSe ) ) - DS ) + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.606694560669456, "obj2": 0.2534834764828232}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( ( DDR + MDR ) - Max( PN,AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - ( MUR * ( CS + RRSe ) ) ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.27686567311197247}, {"determining": "( PN - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * ( MUM + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,AMS ) ) ) )", "choosing": "( ( ( RRSe * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.7301255230125523, "obj2": 0.20575092652874932}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUR * ( MUM + RRSe ) ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.9267782426778243, "obj2": 0.03333785295105102}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.893305439330544, "obj2": 0.04652158201771084}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,Max( FirstVNF_RAM,AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,BR ) ) )", "choosing": "( ( MUR * Max( MUM,RRSe ) ) - DS )", "obj1": 0.6234309623430963, "obj2": 0.24806168475099005}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.5857740585774058, "obj2": 0.26942920604323545}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - CS )", "obj1": 0.6338912133891214, "obj2": 0.2387635758944196}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) ) ) )", "choosing": "( ( MUR * ( ( MUR * DS ) + RRSe ) ) - DS )", "obj1": 0.8807531380753139, "obj2": 0.05520977905680707}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( ACS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RRSe ) - MUR )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - PN ) )", "choosing": "( ( ( ( MUR * ( MUM + RRSe ) ) * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.8368200836820083, "obj2": 0.07390226426030433}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * DS ) )", "obj1": 0.608786610878661, "obj2": 0.2484801612022841}, {"determining": "( Max( PN,AMS ) - ( ( FirstVNF_CPU_Server + MDR ) - ( PN * AMS ) ) )", "choosing": "( ( MUR * ( MUM + RRSe ) ) - ( MUR + DS ) )", "obj1": 0.7447698744769874, "obj2": 0.15762182807552413}, {"determining": "( Max( PN,FirstVNF_RAM_Server ) - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * Max( MUR,( MUM + RRSe ) ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.6631799163179917, "obj2": 0.21002865002569}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Max( ( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( RMSe * DS ) ),( MUM + RRSe ) ) - DS )", "obj1": 0.5711297071129707, "obj2": 0.2931245055929043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( ( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUC * ( MUM + RRSe ) ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.8849372384937239, "obj2": 0.05344242980997526}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + AMS ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * Max( MUM,RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5920502092050209, "obj2": 0.26782641685503866}], "27": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( DDR,DDR ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RMSe ) - RMSe )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + Const ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MLU ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * ( MUM * RRSe ) ) ,MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) * Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) / Max( ARS,PN ) ) )", "choosing": "( ( ( MUR + ( DS + RRSe ) ) - RCSe ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + BR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MUM )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + DDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MLU )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + ARS ) - Max( PN,MRS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MUR )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_CPU_Server,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - RCSe )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * ( MUM - RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( ARS + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + DS ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.27686567311197247}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,Max( FirstVNF_RAM,AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.5857740585774058, "obj2": 0.26942920604323545}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) - Max( ACS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - RRSe ) - MUR )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Max( ( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( RMSe * DS ) ),( MUM + RRSe ) ) - DS )", "obj1": 0.5711297071129707, "obj2": 0.2931245055929043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + AMS ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * Max( MUM,RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5920502092050209, "obj2": 0.26782641685503866}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) + Max( PN,AMS ) ) )", "choosing": "( ( Min( MUR ,( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( MUR * DS ) )", "obj1": 0.5857740585774058, "obj2": 0.26942920604323545}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server / MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,Max( PN,AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( RRSe * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) / Max( PN,AMS ) ) )", "choosing": "( Max( ( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( MUR * MUM ) ),( MUM + RRSe ) ) - DS )", "obj1": 0.5711297071129707, "obj2": 0.2931245055929043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5815899581589958, "obj2": 0.2723074818705073}], "28": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * ( MUM * RRSe ) ) ,MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) / Max( ARS,PN ) ) )", "choosing": "( ( ( MUR + ( DS + RRSe ) ) - RCSe ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + BR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MUM )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + ARS ) - Max( PN,MRS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MUR )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_CPU_Server,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - RCSe )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( ARS + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + DS ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Max( ( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( RMSe * DS ) ),( MUM + RRSe ) ) - DS )", "obj1": 0.5711297071129707, "obj2": 0.2931245055929043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + AMS ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * Max( MUM,RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5920502092050209, "obj2": 0.26782641685503866}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) + Max( PN,AMS ) ) )", "choosing": "( ( Min( MUR ,( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server / MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( RRSe * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) / Max( PN,AMS ) ) )", "choosing": "( Max( ( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( MUR * MUM ) ),( MUM + RRSe ) ) - DS )", "obj1": 0.5711297071129707, "obj2": 0.2931245055929043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( Max( PN,AMS ) - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,Max( PN,AMS ) ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( MUR * ( MUM + RRSe ) ) )", "obj1": 0.7531380753138075, "obj2": 0.14979219479664033}, {"determining": "( PN - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Max( ( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( MUR * ( MUM + RRSe ) ) ),( MUM + RRSe ) ) - DS )", "obj1": 0.8221757322175732, "obj2": 0.07419323532151598}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - MUC )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) ) ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - ( ( MUR * ( CS + RRSe ) ) - MUM ) )", "obj1": 0.7217573221757322, "obj2": 0.16564154727451852}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) + Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) + MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( PN + FirstVNF_RAM_Server ) - Max( ARS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + RRSe ) ) - MUC ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUM + RRSe ) - MUM ) - DS )", "obj1": 0.6694560669456067, "obj2": 0.20022744373993379}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( BR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( DS + RRSe ) ) - MUM ) - DS )", "obj1": 0.6129707112970711, "obj2": 0.2427720220031282}, {"determining": "( FirstVNF_CPU - ( ( AMS + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) / MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5878661087866108, "obj2": 0.2683533394242493}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + DDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MLU )", "obj1": 0.6548117154811716, "obj2": 0.23143070050914247}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + ( ( MUR * ( MUM + RRSe ) ) - MUM ) ) ) - MUM ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2688209774882689}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.2951887217803559}, {"determining": "( FirstVNF_CPU - ( ( ACS + FirstVNF_RAM ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR - ( MUM + RRSe ) ) - MUR ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}], "29": [{"determining": "( Min( ACS ,FirstVNF_CPU_Server ) - Min( CRS ,ARS ) )", "choosing": "( ( MLU + RMSe ) + Max( MUR,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server * MDR ) - Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * ( MUM * RRSe ) ) ,MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) / Max( ARS,PN ) ) )", "choosing": "( ( ( MUR + ( DS + RRSe ) ) - RCSe ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + BR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MUM )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + ARS ) - Max( PN,MRS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - MUR )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_CPU_Server,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - RCSe )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( Max( ( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( RMSe * DS ) ),( MUM + RRSe ) ) - DS )", "obj1": 0.5711297071129707, "obj2": 0.2931245055929043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + AMS ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * Max( MUM,RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5920502092050209, "obj2": 0.26782641685503866}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server / MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( RRSe * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) / Max( PN,AMS ) ) )", "choosing": "( Max( ( ( ( MUR * ( MUM + RRSe ) ) * MUM ) - ( MUR * MUM ) ),( MUM + RRSe ) ) - DS )", "obj1": 0.5711297071129707, "obj2": 0.2931245055929043}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem_Server,Const ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( PN + FirstVNF_RAM_Server ) - Max( ARS,AMS ) ) )", "choosing": "( ( ( MUR * ( MUR + RRSe ) ) - MUC ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( AMS + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) / MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5878661087866108, "obj2": 0.2683533394242493}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + ( ( MUR * ( MUM + RRSe ) ) - MUM ) ) ) - MUM ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2688209774882689}, {"determining": "( FirstVNF_CPU - ( ( ACS + FirstVNF_RAM ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR - ( MUM + RRSe ) ) - MUR ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( CS + ( ( MUR * ( MUM + RRSe ) ) - MUM ) ) ) - MUM ) - DS )", "obj1": 0.5732217573221757, "obj2": 0.2688209774882689}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( CS * ( MUR * ( MUM + RRSe ) ) ) / MUM ) - ( MUR * DS ) )", "obj1": 0.5920502092050209, "obj2": 0.26782641685503866}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( DDR + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( ( MUR * ( CS + RRSe ) ) - MUM ) - DS ) - DS )", "obj1": 0.5543933054393305, "obj2": 0.29314678001521727}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5941422594142259, "obj2": 0.26149183574438445}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_CPU_Server + MDR ) - Max( PN,AMS ) ) )", "choosing": "( ( ( MUR * ( MUM + RRSe ) ) - MUM ) - DS )", "obj1": 0.5878661087866108, "obj2": 0.2683533394242493}]}