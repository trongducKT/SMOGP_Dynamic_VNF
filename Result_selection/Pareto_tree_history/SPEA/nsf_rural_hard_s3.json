{"1": [{"determining": "( ( ACS - DDR ) / Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / CS ) ,( MUM - MUM ) )", "obj1": 0.6610878661087866, "obj2": 0.2658102208708526}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) )", "choosing": "( Min( MUM ,CS ) + Max( MUC,MUR ) )", "obj1": 0.9874476987447699, "obj2": 0.0056055627085294}, {"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM ) / ( FirstVNF_CPU_Server - BR ) )", "choosing": "( ( MUM / MUC ) / Max( MLU,DS ) )", "obj1": 0.6631799163179917, "obj2": 0.26558324654686444}, {"determining": "( Max( DDR,FirstVNF_RAM ) * Max( FirstVNF_Mem,Const ) )", "choosing": "Min( ( MUR * ( RCSe / MUC ) ) ,( DS - CS ) )", "obj1": 0.6778242677824268, "obj2": 0.23401204678849052}, {"determining": "( ( MDR * ( FirstVNF_CPU - MRS ) ) - ( Min( Max( RRS,FirstVNF_CPU_Server ) ,BR ) / ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - CS ) * Max( Max( Min( ( ( RRSe - Min( ( RMSe * MUR ) ,MUC ) ) * DS ) ,MLU ),( Max( MUC,( ( RMSe + ( MLU / CS ) ) - ( ( MUM * MUC ) + MUC ) ) ) + ( MUR * ( RRSe * MLU ) ) ) ),RRSe ) )", "obj1": 0.8179916317991632, "obj2": 0.1633632122363508}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,Min( CS ,DS ) )", "obj1": 0.8849372384937239, "obj2": 0.05196683196598248}, {"determining": "( ( ( FirstVNF_RAM + ( RRS + BR ) ) * FirstVNF_CPU_Server ) / ( CRS - FirstVNF_RAM ) )", "choosing": "( ( MUC * Min( RRSe ,RCSe ) ) + ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) / Max( ACS,MRS ) )", "choosing": "Min( ( ( ( MLU - MLU ) * ( MUR * Max( MLU,MUC ) ) ) / DS ) ,Min( MUC ,DS ) )", "obj1": 0.7238493723849372, "obj2": 0.21902145584512275}, {"determining": "Max( ( MRS * MDR ),( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU * MUM ) - ( CS + CS ) ) * Min( ( RRSe - RRSe ) ,( ( RCSe + ( RRSe - RMSe ) ) * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "Max( ( ( FirstVNF_RAM + FirstVNF_RAM_Server ) + ( AMS - DDR ) ),( ( ACS + ACS ) / ( CRS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS * MUC ) ) * ( MUR + ( MUC * MUM ) ) )", "obj1": 0.6694560669456067, "obj2": 0.24005050506259057}, {"determining": "( ( ( BR - FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,BR ) ) + Max( ( PN - DDR ),Min( FirstVNF_CPU ,ACS ) ) )", "choosing": "( ( DS - MUM ) - ( ( MLU + DS ) + MUC ) )", "obj1": 0.7949790794979079, "obj2": 0.17504609301375215}, {"determining": "Min( ( ( BR / AMS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ,Max( Max( FirstVNF_RAM,AMS ),( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( DS + ( MUC * RMSe ) ) * ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,Min( RRS ,DDR ) ),ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( Min( MUR ,MLU ) * ( MUM * Min( ( ( CS + DS ) - ( MLU - DS ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Min( ARS ,ACS ) ) ,( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_RAM_Server / Max( ( ( BR - Min( FirstVNF_CPU ,( ACS - FirstVNF_Mem ) ) ) - MRS ),( PN + PN ) ) ) ) )", "choosing": "( Min( Max( DS,DS ) ,Min( MLU ,( ( Min( Max( ( RRSe + MLU ),( MLU / CS ) ) ,Min( RMSe ,( RMSe - RMSe ) ) ) / Max( Max( MUR,MUM ),DS ) ) * MLU ) ) ) - ( Min( MUM ,MLU ) / ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * ARS ) * Min( AMS ,AMS ) ) * Max( Max( BR,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,Const ) ) ) - ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( ACS ,( BR - DDR ) ) ) - Min( ( Const / ACS ) ,( FirstVNF_RAM / ARS ) ) ) )", "choosing": "Max( ( ( MUC + CS ) + MUC ),( RMSe / Min( MUR ,( RRSe * RRSe ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.009523141166664865}, {"determining": "( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - Max( Const,ARS ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( Min( Min( CS ,CS ) ,( CS * MUC ) ) + ( ( MUR / RMSe ) - ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / FirstVNF_CPU ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( PN,CRS ) ) ) )", "choosing": "Min( Max( ( ( CS + RRSe ) + ( RCSe * RRSe ) ),( ( MUR + CS ) + Max( MUM,CS ) ) ) ,( MUM + ( MUC * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MDR ,CRS ) + ( FirstVNF_CPU + ACS ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - DS ) / DS ) * ( MUR - Min( Max( RMSe,RCSe ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + FirstVNF_RAM_Server ) + ( FirstVNF_Mem + CRS ) ),( ( ACS / ACS ) - ( RRS * FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_RAM_Server * Const ) + ( RRS / CRS ) ) + Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS * PN ) ) ) )", "choosing": "( Max( MUM,( RCSe * RRSe ) ) / ( ( MUM * RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU_Server ) + Min( ACS ,FirstVNF_Mem ) ),( ( AMS * ARS ) * ( MRS / FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + FirstVNF_Mem_Server ) - ( CRS * MRS ) ) / Max( Max( FirstVNF_CPU_Server,CRS ),( FirstVNF_CPU / FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( RMSe * RMSe ) - CS ),MLU ) - ( ( Min( RRSe ,DS ) - Max( MUC,CS ) ) * MUR ) )", "obj1": 0.7887029288702929, "obj2": 0.21427439510414104}, {"determining": "( ( Min( ( DDR * Const ) ,Max( PN,FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( Min( Min( MDR ,PN ) ,Max( AMS,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_Mem + PN ) / ( CRS / AMS ) ) ) )", "choosing": "( Min( ( ( MUR * MLU ) * ( CS * MUR ) ) ,Max( Min( MUM ,MLU ),( CS * MUM ) ) ) + Max( ( ( MUR / MLU ) - ( RRSe + MUR ) ),Max( Max( MUR,DS ),( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( MRS - FirstVNF_Mem_Server ),( FirstVNF_RAM + MDR ) ),Min( ( CRS - FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ,( Min( ( Const - PN ) ,Min( MRS ,DDR ) ) / ( ( PN / AMS ) * ( ARS - MRS ) ) ) )", "choosing": "( ( DS / Min( MUC ,MUC ) ) / Min( MUC ,CS ) )", "obj1": 0.6276150627615062, "obj2": 0.2660773499780904}, {"determining": "Min( ( ( Max( MRS,FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) ) - ( Min( FirstVNF_CPU ,RRS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ,( Min( Max( PN,FirstVNF_RAM ) ,( PN - FirstVNF_Mem_Server ) ) * Max( ( BR - BR ),( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( Min( ( ( RMSe + RRSe ) + ( RMSe - CS ) ) ,( ( MUC / RRSe ) * ( RCSe / DS ) ) ) / ( ( ( RCSe + MUR ) * ( MUM + CS ) ) - Min( ( RMSe / RRSe ) ,Max( MLU,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,DDR ) * ( PN / ARS ) ) ,( ( PN + BR ) - Max( BR,AMS ) ) ) - ( ( ( FirstVNF_RAM / ARS ) + ( FirstVNF_CPU_Server * ACS ) ) / ( ( ACS - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RRSe + ( MLU - MLU ) ) - MLU ) / Max( ( ( RRSe * MUM ) / Max( RMSe,MLU ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_Mem_Server ) ,( ( CRS + CRS ) - Min( DDR ,Max( FirstVNF_RAM_Server,AMS ) ) ) )", "choosing": "Min( Min( Min( ( MUC * RRSe ) ,Max( RMSe,CS ) ) ,( ( RCSe + RMSe ) / ( RCSe - RRSe ) ) ) ,( ( Max( DS,RCSe ) + ( MLU - RCSe ) ) + ( ( MUR + CS ) * Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( Max( ( ACS + PN ),( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) + ( ( CRS + FirstVNF_RAM_Server ) - Const ) ) ) * FirstVNF_CPU ),RRS ) ) / ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * ( PN / ( DDR + MRS ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( Max( ( MUC * ( RMSe + MUC ) ),RCSe ),( ( MUC * RMSe ) + ( MUM / CS ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,( Max( MUC,MLU ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS / AMS ) - ( RRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server / MRS ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU * FirstVNF_CPU ) + Min( MDR ,MRS ) ) / ( ( FirstVNF_CPU_Server / ARS ) + ( CRS / AMS ) ) ) )", "choosing": "( ( Max( ( RRSe - RRSe ),Max( MUM,RCSe ) ) - ( ( RRSe / RRSe ) / Max( CS,CS ) ) ) - Max( Min( Max( MUC,DS ) ,Min( CS ,MUR ) ),( ( RMSe / DS ) / Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,Min( CS ,DS ) )", "obj1": 0.8849372384937239, "obj2": 0.05196683196598248}, {"determining": "( ( ( FirstVNF_RAM + ( RRS + BR ) ) * FirstVNF_CPU_Server ) / ( CRS - FirstVNF_RAM ) )", "choosing": "( ( MUC * Min( RRSe ,RCSe ) ) + ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS * MDR ),( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU * MUM ) - ( CS + CS ) ) * Min( ( RRSe - RRSe ) ,( ( RCSe + ( RRSe - RMSe ) ) * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "Min( ( ( BR / AMS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ,Max( Max( FirstVNF_RAM,AMS ),( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( DS + ( MUC * RMSe ) ) * ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,Min( RRS ,DDR ) ),ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( Min( MUR ,MLU ) * ( MUM * Min( ( ( CS + DS ) - ( MLU - DS ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Min( ARS ,ACS ) ) ,( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_RAM_Server / Max( ( ( BR - Min( FirstVNF_CPU ,( ACS - FirstVNF_Mem ) ) ) - MRS ),( PN + PN ) ) ) ) )", "choosing": "( Min( Max( DS,DS ) ,Min( MLU ,( ( Min( Max( ( RRSe + MLU ),( MLU / CS ) ) ,Min( RMSe ,( RMSe - RMSe ) ) ) / Max( Max( MUR,MUM ),DS ) ) * MLU ) ) ) - ( Min( MUM ,MLU ) / ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * ARS ) * Min( AMS ,AMS ) ) * Max( Max( BR,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,Const ) ) ) - ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( ACS ,( BR - DDR ) ) ) - Min( ( Const / ACS ) ,( FirstVNF_RAM / ARS ) ) ) )", "choosing": "Max( ( ( MUC + CS ) + MUC ),( RMSe / Min( MUR ,( RRSe * RRSe ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.009523141166664865}, {"determining": "( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - Max( Const,ARS ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( Min( Min( CS ,CS ) ,( CS * MUC ) ) + ( ( MUR / RMSe ) - ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / FirstVNF_CPU ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( PN,CRS ) ) ) )", "choosing": "Min( Max( ( ( CS + RRSe ) + ( RCSe * RRSe ) ),( ( MUR + CS ) + Max( MUM,CS ) ) ) ,( MUM + ( MUC * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MDR ,CRS ) + ( FirstVNF_CPU + ACS ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - DS ) / DS ) * ( MUR - Min( Max( RMSe,RCSe ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + FirstVNF_RAM_Server ) + ( FirstVNF_Mem + CRS ) ),( ( ACS / ACS ) - ( RRS * FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_RAM_Server * Const ) + ( RRS / CRS ) ) + Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS * PN ) ) ) )", "choosing": "( Max( MUM,( RCSe * RRSe ) ) / ( ( MUM * RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR * Const ) ,Max( PN,FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( Min( Min( MDR ,PN ) ,Max( AMS,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_Mem + PN ) / ( CRS / AMS ) ) ) )", "choosing": "( Min( ( ( MUR * MLU ) * ( CS * MUR ) ) ,Max( Min( MUM ,MLU ),( CS * MUM ) ) ) + Max( ( ( MUR / MLU ) - ( RRSe + MUR ) ),Max( Max( MUR,DS ),( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( MRS,FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) ) - ( Min( FirstVNF_CPU ,RRS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ,( Min( Max( PN,FirstVNF_RAM ) ,( PN - FirstVNF_Mem_Server ) ) * Max( ( BR - BR ),( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( Min( ( ( RMSe + RRSe ) + ( RMSe - CS ) ) ,( ( MUC / RRSe ) * ( RCSe / DS ) ) ) / ( ( ( RCSe + MUR ) * ( MUM + CS ) ) - Min( ( RMSe / RRSe ) ,Max( MLU,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,DDR ) * ( PN / ARS ) ) ,( ( PN + BR ) - Max( BR,AMS ) ) ) - ( ( ( FirstVNF_RAM / ARS ) + ( FirstVNF_CPU_Server * ACS ) ) / ( ( ACS - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RRSe + ( MLU - MLU ) ) - MLU ) / Max( ( ( RRSe * MUM ) / Max( RMSe,MLU ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_Mem_Server ) ,( ( CRS + CRS ) - Min( DDR ,Max( FirstVNF_RAM_Server,AMS ) ) ) )", "choosing": "Min( Min( Min( ( MUC * RRSe ) ,Max( RMSe,CS ) ) ,( ( RCSe + RMSe ) / ( RCSe - RRSe ) ) ) ,( ( Max( DS,RCSe ) + ( MLU - RCSe ) ) + ( ( MUR + CS ) * Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( Max( ( ACS + PN ),( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) + ( ( CRS + FirstVNF_RAM_Server ) - Const ) ) ) * FirstVNF_CPU ),RRS ) ) / ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * ( PN / ( DDR + MRS ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( Max( ( MUC * ( RMSe + MUC ) ),RCSe ),( ( MUC * RMSe ) + ( MUM / CS ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,( Max( MUC,MLU ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS / AMS ) - ( RRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server / MRS ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU * FirstVNF_CPU ) + Min( MDR ,MRS ) ) / ( ( FirstVNF_CPU_Server / ARS ) + ( CRS / AMS ) ) ) )", "choosing": "( ( Max( ( RRSe - RRSe ),Max( MUM,RCSe ) ) - ( ( RRSe / RRSe ) / Max( CS,CS ) ) ) - Max( Min( Max( MUC,DS ) ,Min( CS ,MUR ) ),( ( RMSe / DS ) / Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * PN ) - Max( ( CRS / DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( RRSe ,RRSe ),( MUR * ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * PN ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( Min( RRSe ,RRSe ),( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_Mem_Server ) ,( ( CRS + FirstVNF_CPU ) - Min( DDR ,Max( ( FirstVNF_CPU_Server - ARS ),AMS ) ) ) )", "choosing": "Min( ( ( ( ( DS + ( Min( ( MUR * CS ) ,CS ) * MUR ) ) + ( ( MUR / DS ) * MLU ) ) - ( ( Min( MUC ,Min( Max( MUR,MUR ) ,RRSe ) ) / MUM ) * MLU ) ) / Min( DS ,DS ) ) ,( ( Max( DS,RCSe ) + ( MUR - RMSe ) ) + ( ( MUC + CS ) * Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_Mem_Server ) ,( ( CRS + CRS ) - Min( DDR ,Max( FirstVNF_RAM_Server,AMS ) ) ) )", "choosing": "Min( Min( Min( ( MUC * RRSe ) ,Max( RMSe,CS ) ) ,( ( RCSe + RMSe ) / ( RCSe - RRSe ) ) ) ,( ( Max( DS,RCSe ) + ( MLU - RCSe ) ) + ( ( MUR + CS ) * Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MDR ,CRS ) + ( FirstVNF_CPU + ACS ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( MDR / ACS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - DS ) / DS ) * Max( ( MUM / Min( MLU ,RCSe ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_RAM ) / ( ( Min( Max( PN,FirstVNF_RAM ) ,PN ) + MDR ) + AMS ) )", "choosing": "Min( ( ( RRSe * RCSe ) + ( MUR + DS ) ) ,( ( MUC / MUR ) + ( ( MUC * ( MUR - MUC ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_CPU ) - MDR )", "choosing": "( ( MUR / Min( Min( RMSe ,MUM ) ,Min( CS ,DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.7489539748953975, "obj2": 0.13228427407428875}, {"determining": "( FirstVNF_CPU - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,Min( ( ( MUR / CS ) / Max( CS,MUR ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) / Max( CS,MUR ) )", "obj1": 0.8472803347280334, "obj2": 0.07149575890369347}, {"determining": "( ( Max( Min( FirstVNF_Mem ,MDR ),( PN / CRS ) ) - Max( ( FirstVNF_RAM_Server + RRS ),( MDR + MDR ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ( BR - CRS ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUC + RMSe ) + Min( MUC ,DS ) ),( ( RMSe - MLU ) + ( CS * DS ) ) ) / ( ( ( MLU - ( MUM / RCSe ) ) + ( CS / DS ) ) + ( Min( MUR ,DS ) / ( MUR / CS ) ) ) )", "obj1": 0.6903765690376569, "obj2": 0.1921403496955992}, {"determining": "( ( FirstVNF_Mem + AMS ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - DS ) / DS ) * ( MUR - Min( Max( ( Max( Min( DS ,MUR ),Max( DS,MLU ) ) + Min( ( RRSe + MUR ) ,Max( DS,RCSe ) ) ),RCSe ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MDR ,CRS ) + ( FirstVNF_CPU + ACS ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM - MUM ) * Min( RCSe ,MLU ) ) - ( ( RMSe - MUR ) / ( RCSe + CS ) ) ) + ( Max( Min( DS ,MUR ),Max( DS,MLU ) ) + Min( ( RRSe + MUR ) ,Max( DS,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) / Max( ACS,MRS ) )", "choosing": "Min( ( ( ( MLU - MLU ) * ( MUR * Max( MLU,MUC ) ) ) / DS ) ,Min( MUC ,DS ) )", "obj1": 0.7301255230125523, "obj2": 0.18530866476088306}, {"determining": "( ( MDR * ( FirstVNF_CPU - MRS ) ) - ( Min( Max( RRS,FirstVNF_CPU_Server ) ,BR ) / ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - CS ) * Max( Max( Min( ( ( RRSe - Min( ( RMSe * MUR ) ,MUC ) ) * DS ) ,MLU ),( Max( MUC,( ( RMSe + ( MLU / CS ) ) - ( ( MUM * MUC ) + MUC ) ) ) + ( MUR * ( RRSe * MLU ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) / Max( ACS,MRS ) )", "choosing": "Min( ( ( ( MLU - MLU ) * ( MUR * Max( MLU,MUC ) ) ) / DS ) ,Min( MUC ,DS ) )", "obj1": 0.7301255230125523, "obj2": 0.18530866476088306}, {"determining": "( ( MDR * ( FirstVNF_CPU - MRS ) ) - ( Min( Max( RRS,FirstVNF_CPU_Server ) ,BR ) / ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - CS ) * Max( Max( Min( ( ( RRSe - Min( ( RMSe * MUR ) ,MUC ) ) * DS ) ,MLU ),( Max( MUC,( ( RMSe + ( MLU / CS ) ) - ( ( MUM * MUC ) + MUC ) ) ) + ( MUR * ( RRSe * MLU ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) / Max( ACS,MRS ) )", "choosing": "Min( ( ( ( MLU - MLU ) * ( MUR * Max( MLU,MUC ) ) ) / DS ) ,Min( MUC ,DS ) )", "obj1": 0.7301255230125523, "obj2": 0.18530866476088306}, {"determining": "( ( MDR * ( FirstVNF_CPU - MRS ) ) - ( Min( Max( RRS,FirstVNF_CPU_Server ) ,BR ) / ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - CS ) * Max( Max( Min( ( ( RRSe - Min( ( RMSe * MUR ) ,MUC ) ) * DS ) ,MLU ),( Max( MUC,( ( RMSe + ( MLU / CS ) ) - ( ( MUM * MUC ) + MUC ) ) ) + ( MUR * ( RRSe * MLU ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) / Max( ( ( ( ( FirstVNF_CPU_Server - BR ) + CRS ) / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ),MRS ) )", "choosing": "Min( ( ( Max( MLU,MLU ) * ( MUR * Max( Min( MUR ,Max( Max( MUR,MUC ),( RMSe * RRSe ) ) ),MUC ) ) ) / DS ) ,Min( MUC ,DS ) )", "obj1": 0.7301255230125523, "obj2": 0.18530866476088306}, {"determining": "( ( FirstVNF_RAM * RRS ) - ( MDR * ( FirstVNF_CPU * MRS ) ) )", "choosing": "( Max( ( ( ( Min( RMSe ,( MLU - ( CS + MUR ) ) ) - MLU ) / ( RRSe - Max( Min( MUR ,( DS / MUR ) ),Min( ( CS - MUM ) ,MLU ) ) ) ) * MUM ),RRSe ) * ( RCSe * Max( Min( CS ,MUC ),( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / PN ) + ( FirstVNF_RAM - ( Max( DDR,FirstVNF_Mem ) / ( FirstVNF_CPU * MRS ) ) ) ) - ( Max( CRS,PN ) * ( Const * BR ) ) )", "choosing": "( ( Min( RCSe ,MUC ) + ( CS / MLU ) ) + ( MUR * Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) / ( Min( ARS ,ACS ) + ( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - Max( Const,ARS ) ) ) ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "Min( Max( CS,( ( MUR + CS ) + Min( MUM ,CS ) ) ) ,( ( ( MUR * MUM ) * ( RRSe - MLU ) ) - ( ( MUC / RMSe ) * ( RCSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( ( RCSe / MLU ) + ( ( MUR / RMSe ) - ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) / ( Min( ARS ,ACS ) + ( CRS + MDR ) ) ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( Min( Min( CS ,CS ) ,( CS * MUC ) ) + ( ( MUR / RMSe ) - ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - Max( Const,ARS ) )", "choosing": "Min( Max( ( ( CS + RRSe ) + ( RCSe * RRSe ) ),( ( MUR + CS ) + Min( MUM ,CS ) ) ) ,( ( ( MUR * MUM ) * ( RRSe - MLU ) ) - ( ( MUC / RMSe ) * ( RCSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( MUM * Min( MUC ,RCSe ) ) * Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * PN ) - Max( AMS,FirstVNF_Mem ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "( Min( MUM ,CS ) + Max( MUC,( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( CS,( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * PN ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( MUM ,CS ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Max( Min( RRSe ,RRSe ),( MUR * RMSe ) )", "obj1": 0.9874476987447699, "obj2": 0.004498144407707074}, {"determining": "Min( ( ( Max( MRS,FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) ) - ( Min( FirstVNF_CPU ,RRS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ,( Min( Max( PN,FirstVNF_RAM ) ,( PN - FirstVNF_Mem_Server ) ) * Max( ( BR - BR ),( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) - MUR ) + Max( DS,Min( RRSe ,RMSe ) ) ) / ( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_Mem ) ,( PN - FirstVNF_RAM ) )", "choosing": "Min( ( DS / CS ) ,Max( Min( RRSe ,RRSe ),( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,AMS ) ,( PN - ( BR / ( ( ( FirstVNF_RAM - Const ) - Const ) - FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( ( MUM * RRSe ) ,RRSe ),Max( MUR,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * PN ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Min( ( DS / CS ) ,( DS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( ARS * Const ) ) * AMS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( Max( RRSe,( CS / DS ) ),( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,CRS ) ,Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Min( ( ( RRSe + ( ( ( ( CS - ( RCSe + RMSe ) ) * Min( CS ,DS ) ) / DS ) - ( MUM + MLU ) ) ) / MUM ) ,( DS - ( Min( CS ,RMSe ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ACS ),( MRS * MDR ) )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "( RRS - Min( DDR ,BR ) )", "choosing": "( Min( ( CS / MLU ) ,( MLU - ( MLU + MUC ) ) ) / Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - PN ) - ( ( FirstVNF_Mem - Const ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,RMSe ) - RCSe ) - RRSe ) + Max( MUM,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - PN ) - ( ( FirstVNF_Mem - Const ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,RMSe ) - RCSe ) - RRSe ) + Max( MUM,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - PN ) - ( ( FirstVNF_Mem - Const ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,RMSe ) - RCSe ) - RRSe ) + Max( MUM,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - PN ) - ( ( FirstVNF_Mem - Const ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,RMSe ) - RCSe ) - RRSe ) + Max( MUM,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,DDR ) * ( PN / ARS ) ) ,( ( PN + BR ) - Max( BR,AMS ) ) ) - ( ( ( FirstVNF_RAM / ARS ) + ( FirstVNF_CPU_Server * ACS ) ) / ( RRS + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RRSe + ( MLU - MLU ) ) - MLU ) / Max( ( ( RRSe * MUM ) / ( RRSe * CS ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,DDR ) * ( PN / ARS ) ) ,( ( PN + BR ) - Max( BR,AMS ) ) ) - ( ( ( FirstVNF_RAM / ARS ) + ( FirstVNF_CPU_Server * ACS ) ) / ( ( ACS - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUR,RMSe ) / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * Max( Min( MRS ,MRS ),( ACS * CRS ) ) ) / ( ( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,BR ) * ( AMS - PN ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( RRSe / DS ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,Min( Max( MUC,MLU ) ,( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( Max( ( ACS + PN ),( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) + ( ( CRS + FirstVNF_RAM_Server ) - Const ) ) ) * FirstVNF_CPU ),RRS ) ) / ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * ( PN / ( DDR + MRS ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( Max( ( MUC * ( RMSe + MUC ) ),RCSe ),( ( MUC * RMSe ) + ( MUM / CS ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,( Max( MUC,MLU ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( Max( ( ACS + PN ),( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) + ( ( CRS + FirstVNF_RAM_Server ) - Const ) ) ) * FirstVNF_CPU ),RRS ) ) / ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * ( PN / ( DDR + MRS ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( Max( ( MUC * ( RMSe + MUC ) ),RCSe ),( ( MUC * RMSe ) + ( MUM / CS ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,( Max( MUC,MLU ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( Max( ( ACS + PN ),( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) + ( ( CRS + FirstVNF_RAM_Server ) - Const ) ) ) * FirstVNF_CPU ),RRS ) ) / ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * ( PN / ( DDR + MRS ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( Max( ( MUC * ( RMSe + MUC ) ),RCSe ),( ( MUC * RMSe ) + ( MUM / CS ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,( Max( MUC,MLU ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * Max( ( Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) / CRS ),( ACS * CRS ) ) ) / ( ( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,BR ) * ( DDR - PN ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( ( ( MUC * ( MUR + RCSe ) ) + RCSe ),Min( ( MUC * RMSe ) ,Max( MUM,RCSe ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,Min( Max( MUC,MLU ) ,( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( RMSe * RCSe ) / ( CS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,Min( RRS ,DDR ) ),ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( Min( MUR ,MLU ) * ( MUM * Min( ( ( CS + DS ) - ( MLU - DS ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,Min( RRS ,DDR ) ),ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( Min( MUR ,MLU ) * ( MUM * Min( ( ( CS + DS ) - ( MLU - DS ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,Min( RRS ,DDR ) ),ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( Min( MUR ,MLU ) * ( MUM * Min( ( ( CS + DS ) - ( MLU - DS ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,Min( RRS ,DDR ) ),ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( Min( MUR ,MLU ) * ( MUM * Min( ( ( CS + DS ) - ( MLU - DS ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * BR ) / ( ( ( AMS / AMS ) - ( RRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server / MRS ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR / MUR ) + Max( ( RRSe - RRSe ),Max( MUM,RCSe ) ) ) - ( MUM - ( RRSe / RCSe ) ) ) + ( MUM * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS / AMS ) - ( RRS - FirstVNF_CPU_Server ) ) - ( ( ( PN * BR ) / ( FirstVNF_CPU * AMS ) ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU * FirstVNF_CPU ) + Min( MDR ,MRS ) ) / ( ( FirstVNF_CPU_Server / ARS ) + ( CRS / AMS ) ) ) )", "choosing": "( ( Max( ( RRSe - RRSe ),Max( MUM,RCSe ) ) - ( MUR / MUR ) ) - Max( Min( Max( MUC,DS ) ,Min( CS ,MUR ) ),( ( RMSe / DS ) / Min( RCSe ,DS ) ) ) )", "obj1": 0.6569037656903766, "obj2": 0.23373127162242155}, {"determining": "Min( ( ( ( FirstVNF_Mem / AMS ) - ( RRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server / MRS ) + ( FirstVNF_RAM / ( AMS - FirstVNF_CPU_Server ) ) ) ) ,( ( ( FirstVNF_CPU * FirstVNF_CPU ) + Min( MDR ,MRS ) ) / ( ( FirstVNF_CPU_Server / ARS ) + ( CRS / AMS ) ) ) )", "choosing": "( ( Max( ( RRSe - RRSe ),Max( MUM,RCSe ) ) - ( ( RRSe / RRSe ) / Max( RCSe,CS ) ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - ( Const + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * Min( CS ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( FirstVNF_RAM + Max( FirstVNF_RAM,( ( DDR + Min( FirstVNF_Mem ,Min( PN ,MRS ) ) ) - DDR ) ) ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( Min( Min( CS ,CS ) ,( CS + MUC ) ) + ( MUM * ( ( MUR - Min( ( MUR + ( MUM * RMSe ) ) ,MUC ) ) + Min( MUC ,MLU ) ) ) ) )", "obj1": 0.8410041841004184, "obj2": 0.0764671516873113}, {"determining": "( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - Max( Const,ARS ) )", "choosing": "Min( Min( RMSe ,MUM ) ,Min( CS ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,Min( Max( Min( CRS ,BR ),Max( FirstVNF_CPU,MDR ) ) ,DDR ) ),ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( Min( MUR ,MLU ) * ( MUM * Min( ( ( CS + DS ) - ( MLU - DS ) ) ,( Max( RCSe,MUC ) - Min( DS ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,Min( RRS ,DDR ) ),ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( Max( RCSe,MUC ) - Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + CRS ) * ( Max( ( ( DDR * FirstVNF_CPU_Server ) + Min( ACS ,FirstVNF_Mem ) ),( ( AMS * ARS ) * ( MRS / FirstVNF_RAM_Server ) ) ) - ( ( ( ACS + FirstVNF_Mem_Server ) - ( CRS * MRS ) ) / Max( Max( FirstVNF_CPU_Server,CRS ),( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( CS ,RRSe ) / ( MLU + RMSe ) ) * ( ( MLU - MLU ) - Min( RRSe ,MUC ) ) ) - ( ( ( RMSe * RRSe ) - ( ( ( Min( RRSe ,DS ) - Max( MUC,CS ) ) * MUR ) + MLU ) ) / Max( Max( MUC,MUM ),( RMSe * MLU ) ) ) )", "obj1": 0.9414225941422594, "obj2": 0.048601132091364595}, {"determining": "Min( ( PN - FirstVNF_RAM_Server ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,Max( ( RMSe * MUM ),( MUC + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_RAM_Server * Const ) + ( CRS / RRS ) ) + Max( ( FirstVNF_CPU / BR ),AMS ) ) )", "choosing": "( Max( CS,Min( MUR ,Max( MLU,( MUM + ( MLU * RMSe ) ) ) ) ) / ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const * FirstVNF_RAM_Server ) + ( FirstVNF_Mem + CRS ) ),( ( ACS / ACS ) - ( RRS * FirstVNF_RAM ) ) ) - ( ( ( RRS / CRS ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) + Max( ( ( MDR * MRS ) / BR ),( AMS * PN ) ) ) )", "choosing": "Min( ( DS / ( ( MLU - MLU ) * ( MUR * Min( ( ( MUR - MUM ) + DS ) ,MUC ) ) ) ) ,( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const * FirstVNF_RAM_Server ) + ( FirstVNF_Mem + CRS ) ),Min( ( Max( FirstVNF_RAM,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,( ACS - Min( CRS ,MDR ) ) ) ) - ( ( ( FirstVNF_RAM_Server * Const ) + ( RRS / CRS ) ) + Max( ( FirstVNF_CPU / BR ),( AMS * PN ) ) ) )", "choosing": "( Max( CS,( ( RMSe - MUM ) + RMSe ) ) / ( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,( ACS - ( ( ( FirstVNF_RAM_Server * Const ) + ( RRS / CRS ) ) + Max( ( FirstVNF_CPU / BR ),( AMS * PN ) ) ) ) )", "choosing": "( ( ( RMSe - MUM ) + Max( CS,( RRSe * RCSe ) ) ) / Min( ( RRSe + DS ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const * FirstVNF_RAM_Server ) + ( FirstVNF_Mem + CRS ) ),( ( ACS / ACS ) - ( RRS * FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_RAM_Server * Const ) + ( RRS / CRS ) ) + Max( ( FirstVNF_CPU / BR ),( AMS * PN ) ) ) )", "choosing": "( ( ( RMSe - MUM ) + RMSe ) / Min( ( RRSe + DS ) ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Min( ARS ,ACS ) ) ,( ( MDR - CRS ) - ARS ) )", "choosing": "( Min( Max( DS,DS ) ,Min( MLU ,DS ) ) - ( RCSe / Min( MUM ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( ( MRS - FirstVNF_Mem_Server ),( Max( ACS,Const ) + MDR ) ),Min( ( CRS - FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ,( Min( ( Const - PN ) ,Min( MRS ,DDR ) ) / ( ( PN / AMS ) * ( ARS - MRS ) ) ) )", "choosing": "( ( DS / Min( MUC ,MUC ) ) / Min( MUC ,RMSe ) )", "obj1": 0.6213389121338913, "obj2": 0.2648278815977521}, {"determining": "( ( ( MRS - ( Min( FirstVNF_CPU ,CRS ) + FirstVNF_CPU ) ) + CRS ) - ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,AMS ) ) - Min( ( Const / ACS ) ,( FirstVNF_RAM / ARS ) ) ) )", "choosing": "Max( ( MUM / MUC ),( RMSe / Min( RMSe ,( ( MUR / Max( ( Max( MUC,MUR ) - MUM ),MUR ) ) * RRSe ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.009523141166664865}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( RCSe / MUM ) + ( CS * CS ) ),Min( Max( RCSe,MUR ) ,( RCSe * RCSe ) ) )", "obj1": 0.8138075313807531, "obj2": 0.11950080630413755}, {"determining": "( ( ( FirstVNF_RAM + ( RRS + BR ) ) * FirstVNF_CPU_Server ) / Max( Min( MDR ,DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * Min( RRSe ,RCSe ) ) + ( ( Max( RRSe,MLU ) / ( DS + MUM ) ) / MUM ) )", "obj1": 0.6422594142259415, "obj2": 0.2536544613257658}], "3": [{"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,Min( CS ,DS ) )", "obj1": 0.8849372384937239, "obj2": 0.05196683196598248}, {"determining": "( ( ( FirstVNF_RAM + ( RRS + BR ) ) * FirstVNF_CPU_Server ) / ( CRS - FirstVNF_RAM ) )", "choosing": "( ( MUC * Min( RRSe ,RCSe ) ) + ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS * MDR ),( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU * MUM ) - ( CS + CS ) ) * Min( ( RRSe - RRSe ) ,( ( RCSe + ( RRSe - RMSe ) ) * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "Min( ( ( BR / AMS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ,Max( Max( FirstVNF_RAM,AMS ),( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( DS + ( MUC * RMSe ) ) * ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,Min( RRS ,DDR ) ),ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( Min( MUR ,MLU ) * ( MUM * Min( ( ( CS + DS ) - ( MLU - DS ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Min( ARS ,ACS ) ) ,( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_RAM_Server / Max( ( ( BR - Min( FirstVNF_CPU ,( ACS - FirstVNF_Mem ) ) ) - MRS ),( PN + PN ) ) ) ) )", "choosing": "( Min( Max( DS,DS ) ,Min( MLU ,( ( Min( Max( ( RRSe + MLU ),( MLU / CS ) ) ,Min( RMSe ,( RMSe - RMSe ) ) ) / Max( Max( MUR,MUM ),DS ) ) * MLU ) ) ) - ( Min( MUM ,MLU ) / ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * ARS ) * Min( AMS ,AMS ) ) * Max( Max( BR,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,Const ) ) ) - ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( ACS ,( BR - DDR ) ) ) - Min( ( Const / ACS ) ,( FirstVNF_RAM / ARS ) ) ) )", "choosing": "Max( ( ( MUC + CS ) + MUC ),( RMSe / Min( MUR ,( RRSe * RRSe ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.009523141166664865}, {"determining": "( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - Max( Const,ARS ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( Min( Min( CS ,CS ) ,( CS * MUC ) ) + ( ( MUR / RMSe ) - ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / FirstVNF_CPU ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( PN,CRS ) ) ) )", "choosing": "Min( Max( ( ( CS + RRSe ) + ( RCSe * RRSe ) ),( ( MUR + CS ) + Max( MUM,CS ) ) ) ,( MUM + ( MUC * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MDR ,CRS ) + ( FirstVNF_CPU + ACS ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - DS ) / DS ) * ( MUR - Min( Max( RMSe,RCSe ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + FirstVNF_RAM_Server ) + ( FirstVNF_Mem + CRS ) ),( ( ACS / ACS ) - ( RRS * FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_RAM_Server * Const ) + ( RRS / CRS ) ) + Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS * PN ) ) ) )", "choosing": "( Max( MUM,( RCSe * RRSe ) ) / ( ( MUM * RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR * Const ) ,Max( PN,FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( Min( Min( MDR ,PN ) ,Max( AMS,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_Mem + PN ) / ( CRS / AMS ) ) ) )", "choosing": "( Min( ( ( MUR * MLU ) * ( CS * MUR ) ) ,Max( Min( MUM ,MLU ),( CS * MUM ) ) ) + Max( ( ( MUR / MLU ) - ( RRSe + MUR ) ),Max( Max( MUR,DS ),( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( MRS,FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) ) - ( Min( FirstVNF_CPU ,RRS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ,( Min( Max( PN,FirstVNF_RAM ) ,( PN - FirstVNF_Mem_Server ) ) * Max( ( BR - BR ),( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( Min( ( ( RMSe + RRSe ) + ( RMSe - CS ) ) ,( ( MUC / RRSe ) * ( RCSe / DS ) ) ) / ( ( ( RCSe + MUR ) * ( MUM + CS ) ) - Min( ( RMSe / RRSe ) ,Max( MLU,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,DDR ) * ( PN / ARS ) ) ,( ( PN + BR ) - Max( BR,AMS ) ) ) - ( ( ( FirstVNF_RAM / ARS ) + ( FirstVNF_CPU_Server * ACS ) ) / ( ( ACS - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RRSe + ( MLU - MLU ) ) - MLU ) / Max( ( ( RRSe * MUM ) / Max( RMSe,MLU ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_Mem_Server ) ,( ( CRS + CRS ) - Min( DDR ,Max( FirstVNF_RAM_Server,AMS ) ) ) )", "choosing": "Min( Min( Min( ( MUC * RRSe ) ,Max( RMSe,CS ) ) ,( ( RCSe + RMSe ) / ( RCSe - RRSe ) ) ) ,( ( Max( DS,RCSe ) + ( MLU - RCSe ) ) + ( ( MUR + CS ) * Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( Max( ( ACS + PN ),( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) + ( ( CRS + FirstVNF_RAM_Server ) - Const ) ) ) * FirstVNF_CPU ),RRS ) ) / ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * ( PN / ( DDR + MRS ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( Max( ( MUC * ( RMSe + MUC ) ),RCSe ),( ( MUC * RMSe ) + ( MUM / CS ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,( Max( MUC,MLU ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS / AMS ) - ( RRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server / MRS ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU * FirstVNF_CPU ) + Min( MDR ,MRS ) ) / ( ( FirstVNF_CPU_Server / ARS ) + ( CRS / AMS ) ) ) )", "choosing": "( ( Max( ( RRSe - RRSe ),Max( MUM,RCSe ) ) - ( ( RRSe / RRSe ) / Max( CS,CS ) ) ) - Max( Min( Max( MUC,DS ) ,Min( CS ,MUR ) ),( ( RMSe / DS ) / Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * PN ) - Max( ( CRS / DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( RRSe ,RRSe ),( MUR * ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * PN ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( Min( RRSe ,RRSe ),( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_Mem_Server ) ,( ( CRS + FirstVNF_CPU ) - Min( DDR ,Max( ( FirstVNF_CPU_Server - ARS ),AMS ) ) ) )", "choosing": "Min( ( ( ( ( DS + ( Min( ( MUR * CS ) ,CS ) * MUR ) ) + ( ( MUR / DS ) * MLU ) ) - ( ( Min( MUC ,Min( Max( MUR,MUR ) ,RRSe ) ) / MUM ) * MLU ) ) / Min( DS ,DS ) ) ,( ( Max( DS,RCSe ) + ( MUR - RMSe ) ) + ( ( MUC + CS ) * Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_Mem_Server ) ,( ( CRS + CRS ) - Min( DDR ,Max( FirstVNF_RAM_Server,AMS ) ) ) )", "choosing": "Min( Min( Min( ( MUC * RRSe ) ,Max( RMSe,CS ) ) ,( ( RCSe + RMSe ) / ( RCSe - RRSe ) ) ) ,( ( Max( DS,RCSe ) + ( MLU - RCSe ) ) + ( ( MUR + CS ) * Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MDR ,CRS ) + ( FirstVNF_CPU + ACS ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( MDR / ACS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - DS ) / DS ) * Max( ( MUM / Min( MLU ,RCSe ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_RAM ) / ( ( Min( Max( PN,FirstVNF_RAM ) ,PN ) + MDR ) + AMS ) )", "choosing": "Min( ( ( RRSe * RCSe ) + ( MUR + DS ) ) ,( ( MUC / MUR ) + ( ( MUC * ( MUR - MUC ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,Min( ( ( MUR / CS ) / Max( CS,MUR ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) / Max( CS,MUR ) )", "obj1": 0.8472803347280334, "obj2": 0.07149575890369347}, {"determining": "( ( FirstVNF_Mem + AMS ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - DS ) / DS ) * ( MUR - Min( Max( ( Max( Min( DS ,MUR ),Max( DS,MLU ) ) + Min( ( RRSe + MUR ) ,Max( DS,RCSe ) ) ),RCSe ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MDR ,CRS ) + ( FirstVNF_CPU + ACS ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM - MUM ) * Min( RCSe ,MLU ) ) - ( ( RMSe - MUR ) / ( RCSe + CS ) ) ) + ( Max( Min( DS ,MUR ),Max( DS,MLU ) ) + Min( ( RRSe + MUR ) ,Max( DS,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_CPU - MRS ) ) - ( Min( Max( RRS,FirstVNF_CPU_Server ) ,BR ) / ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - CS ) * Max( Max( Min( ( ( RRSe - Min( ( RMSe * MUR ) ,MUC ) ) * DS ) ,MLU ),( Max( MUC,( ( RMSe + ( MLU / CS ) ) - ( ( MUM * MUC ) + MUC ) ) ) + ( MUR * ( RRSe * MLU ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_CPU - MRS ) ) - ( Min( Max( RRS,FirstVNF_CPU_Server ) ,BR ) / ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - CS ) * Max( Max( Min( ( ( RRSe - Min( ( RMSe * MUR ) ,MUC ) ) * DS ) ,MLU ),( Max( MUC,( ( RMSe + ( MLU / CS ) ) - ( ( MUM * MUC ) + MUC ) ) ) + ( MUR * ( RRSe * MLU ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_CPU - MRS ) ) - ( Min( Max( RRS,FirstVNF_CPU_Server ) ,BR ) / ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - CS ) * Max( Max( Min( ( ( RRSe - Min( ( RMSe * MUR ) ,MUC ) ) * DS ) ,MLU ),( Max( MUC,( ( RMSe + ( MLU / CS ) ) - ( ( MUM * MUC ) + MUC ) ) ) + ( MUR * ( RRSe * MLU ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * RRS ) - ( MDR * ( FirstVNF_CPU * MRS ) ) )", "choosing": "( Max( ( ( ( Min( RMSe ,( MLU - ( CS + MUR ) ) ) - MLU ) / ( RRSe - Max( Min( MUR ,( DS / MUR ) ),Min( ( CS - MUM ) ,MLU ) ) ) ) * MUM ),RRSe ) * ( RCSe * Max( Min( CS ,MUC ),( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / PN ) + ( FirstVNF_RAM - ( Max( DDR,FirstVNF_Mem ) / ( FirstVNF_CPU * MRS ) ) ) ) - ( Max( CRS,PN ) * ( Const * BR ) ) )", "choosing": "( ( Min( RCSe ,MUC ) + ( CS / MLU ) ) + ( MUR * Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) / ( Min( ARS ,ACS ) + ( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - Max( Const,ARS ) ) ) ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "Min( Max( CS,( ( MUR + CS ) + Min( MUM ,CS ) ) ) ,( ( ( MUR * MUM ) * ( RRSe - MLU ) ) - ( ( MUC / RMSe ) * ( RCSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( ( RCSe / MLU ) + ( ( MUR / RMSe ) - ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) / ( Min( ARS ,ACS ) + ( CRS + MDR ) ) ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( Min( Min( CS ,CS ) ,( CS * MUC ) ) + ( ( MUR / RMSe ) - ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - Max( Const,ARS ) )", "choosing": "Min( Max( ( ( CS + RRSe ) + ( RCSe * RRSe ) ),( ( MUR + CS ) + Min( MUM ,CS ) ) ) ,( ( ( MUR * MUM ) * ( RRSe - MLU ) ) - ( ( MUC / RMSe ) * ( RCSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( MUM * Min( MUC ,RCSe ) ) * Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * PN ) - Max( AMS,FirstVNF_Mem ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "( Min( MUM ,CS ) + Max( MUC,( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( CS,( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * PN ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( MUM ,CS ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( MRS,FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) ) - ( Min( FirstVNF_CPU ,RRS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ,( Min( Max( PN,FirstVNF_RAM ) ,( PN - FirstVNF_Mem_Server ) ) * Max( ( BR - BR ),( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) - MUR ) + Max( DS,Min( RRSe ,RMSe ) ) ) / ( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_Mem ) ,( PN - FirstVNF_RAM ) )", "choosing": "Min( ( DS / CS ) ,Max( Min( RRSe ,RRSe ),( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,AMS ) ,( PN - ( BR / ( ( ( FirstVNF_RAM - Const ) - Const ) - FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( ( MUM * RRSe ) ,RRSe ),Max( MUR,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * PN ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Min( ( DS / CS ) ,( DS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( ARS * Const ) ) * AMS ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( Max( RRSe,( CS / DS ) ),( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU_Server ,CRS ) ,Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "Min( ( ( RRSe + ( ( ( ( CS - ( RCSe + RMSe ) ) * Min( CS ,DS ) ) / DS ) - ( MUM + MLU ) ) ) / MUM ) ,( DS - ( Min( CS ,RMSe ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ACS ),( MRS * MDR ) )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "( RRS - Min( DDR ,BR ) )", "choosing": "( Min( ( CS / MLU ) ,( MLU - ( MLU + MUC ) ) ) / Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - PN ) - ( ( FirstVNF_Mem - Const ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,RMSe ) - RCSe ) - RRSe ) + Max( MUM,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - PN ) - ( ( FirstVNF_Mem - Const ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,RMSe ) - RCSe ) - RRSe ) + Max( MUM,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - PN ) - ( ( FirstVNF_Mem - Const ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,RMSe ) - RCSe ) - RRSe ) + Max( MUM,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - PN ) - ( ( FirstVNF_Mem - Const ) - ( MRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,RMSe ) - RCSe ) - RRSe ) + Max( MUM,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,DDR ) * ( PN / ARS ) ) ,( ( PN + BR ) - Max( BR,AMS ) ) ) - ( ( ( FirstVNF_RAM / ARS ) + ( FirstVNF_CPU_Server * ACS ) ) / ( RRS + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RRSe + ( MLU - MLU ) ) - MLU ) / Max( ( ( RRSe * MUM ) / ( RRSe * CS ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,DDR ) * ( PN / ARS ) ) ,( ( PN + BR ) - Max( BR,AMS ) ) ) - ( ( ( FirstVNF_RAM / ARS ) + ( FirstVNF_CPU_Server * ACS ) ) / ( ( ACS - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUR,RMSe ) / ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * Max( Min( MRS ,MRS ),( ACS * CRS ) ) ) / ( ( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,BR ) * ( AMS - PN ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( RRSe / DS ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,Min( Max( MUC,MLU ) ,( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( Max( ( ACS + PN ),( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) + ( ( CRS + FirstVNF_RAM_Server ) - Const ) ) ) * FirstVNF_CPU ),RRS ) ) / ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * ( PN / ( DDR + MRS ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( Max( ( MUC * ( RMSe + MUC ) ),RCSe ),( ( MUC * RMSe ) + ( MUM / CS ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,( Max( MUC,MLU ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( Max( ( ACS + PN ),( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) + ( ( CRS + FirstVNF_RAM_Server ) - Const ) ) ) * FirstVNF_CPU ),RRS ) ) / ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * ( PN / ( DDR + MRS ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( Max( ( MUC * ( RMSe + MUC ) ),RCSe ),( ( MUC * RMSe ) + ( MUM / CS ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,( Max( MUC,MLU ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( Max( ( ACS + PN ),( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) + ( ( CRS + FirstVNF_RAM_Server ) - Const ) ) ) * FirstVNF_CPU ),RRS ) ) / ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * ( PN / ( DDR + MRS ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( Max( ( MUC * ( RMSe + MUC ) ),RCSe ),( ( MUC * RMSe ) + ( MUM / CS ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,( Max( MUC,MLU ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * Max( ( Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) / CRS ),( ACS * CRS ) ) ) / ( ( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_RAM_Server ,BR ) * ( DDR - PN ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( ( ( MUC * ( MUR + RCSe ) ) + RCSe ),Min( ( MUC * RMSe ) ,Max( MUM,RCSe ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,Min( Max( MUC,MLU ) ,( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( RMSe * RCSe ) / ( CS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,Min( RRS ,DDR ) ),ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( Min( MUR ,MLU ) * ( MUM * Min( ( ( CS + DS ) - ( MLU - DS ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( FirstVNF_RAM + Max( FirstVNF_RAM,( ( DDR + Min( FirstVNF_Mem ,Min( PN ,MRS ) ) ) - DDR ) ) ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( Min( Min( CS ,CS ) ,( CS + MUC ) ) + ( MUM * ( ( MUR - Min( ( MUR + ( MUM * RMSe ) ) ,MUC ) ) + Min( MUC ,MLU ) ) ) ) )", "obj1": 0.8410041841004184, "obj2": 0.0764671516873113}, {"determining": "( ( ( MRS - ( Min( FirstVNF_CPU ,CRS ) + FirstVNF_CPU ) ) + CRS ) - ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,AMS ) ) - Min( ( Const / ACS ) ,( FirstVNF_RAM / ARS ) ) ) )", "choosing": "Max( ( MUM / MUC ),( RMSe / Min( RMSe ,( ( MUR / Max( ( Max( MUC,MUR ) - MUM ),MUR ) ) * RRSe ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.009523141166664865}, {"determining": "( ( ( FirstVNF_RAM + ( RRS + BR ) ) * FirstVNF_CPU_Server ) / Max( Min( MDR ,DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC * Min( RRSe ,RCSe ) ) + ( ( Max( RRSe,MLU ) / ( DS + MUM ) ) / MUM ) )", "obj1": 0.6422594142259415, "obj2": 0.2536544613257658}, {"determining": "Max( FirstVNF_CPU,( MRS * MDR ) )", "choosing": "( MUC * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "Max( ( MDR + ACS ),( ( FirstVNF_Mem + AMS ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_RAM ,( ACS * AMS ) ) ) ) ) )", "choosing": "( Min( ( Min( Min( RMSe ,MUM ) ,MLU ) - RMSe ) ,( ( CS * Max( MUM,Min( Max( MUC,( MUC / CS ) ) ,( MLU + RRSe ) ) ) ) / MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "( ( Max( Min( ( Min( ( Min( FirstVNF_Mem_Server ,DDR ) * ( PN / ARS ) ) ,( ( PN + BR ) - Max( BR,AMS ) ) ) - ( ( ( FirstVNF_RAM / ARS ) + ( FirstVNF_CPU_Server * ACS ) ) / ( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) ,MDR ),( PN / CRS ) ) - Max( ( FirstVNF_RAM_Server + RRS ),( MDR + MDR ) ) ) / ( ( Max( ( ARS + CRS ),FirstVNF_RAM ) / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ( BR - CRS ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( ( DS - Min( ( DS + CS ) ,MLU ) ) + Min( RRSe ,MLU ) ) + Min( MUC ,DS ) ),( ( RMSe - MLU ) + ( CS / DS ) ) ) / ( ( ( MLU - ( Max( ( ( RRSe * MUM ) / ( RRSe * CS ) ),DS ) / RCSe ) ) + ( CS / DS ) ) + ( Min( MUR ,DS ) / ( MUR / CS ) ) ) )", "obj1": 0.6841004184100419, "obj2": 0.18458342538696323}, {"determining": "( ( Max( ( FirstVNF_RAM_Server + RRS ),( MDR + MDR ) ) - Max( Min( FirstVNF_Mem ,MDR ),( PN / CRS ) ) ) / ( ( Max( ACS,FirstVNF_CPU ) / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe + ( MLU - MLU ) ) - MLU ) / Max( ( ( RCSe / MUR ) / ( RRSe * CS ) ),DS ) )", "obj1": 0.6548117154811716, "obj2": 0.20757900485348968}, {"determining": "Min( Max( Max( ( MRS - FirstVNF_Mem_Server ),( Max( ACS,Max( FirstVNF_CPU,Min( RRS ,DDR ) ) ) + MDR ) ),Min( ( CRS - FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ,( Min( ( Const - PN ) ,Min( MRS ,DDR ) ) / ( ( PN / AMS ) * ( ARS - MRS ) ) ) )", "choosing": "( ( DS / Min( ( ( CS + DS ) - ( MLU - DS ) ) ,MUC ) ) / Min( MUC ,RMSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25641054569185456}, {"determining": "Min( Max( Max( ( MRS - FirstVNF_Mem_Server ),( Max( ACS,Const ) + MDR ) ),Min( ( CRS - FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ,( Min( ( Const - PN ) ,Min( MRS ,DDR ) ) / ( ( PN / AMS ) * ( ARS - MRS ) ) ) )", "choosing": "( ( DS / Min( MUC ,MUC ) ) / Min( MUC ,RMSe ) )", "obj1": 0.6129707112970711, "obj2": 0.2624985895988272}, {"determining": "( ( ( Max( Min( FirstVNF_Mem ,MDR ),( PN / CRS ) ) - Max( ( FirstVNF_RAM_Server + RRS ),( MDR + MDR ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ( BR - CRS ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "Min( Max( CS,( ( MUR + CS ) + Min( MUM ,CS ) ) ) ,( ( ( MUR * MUM ) * ( ( ( MLU - ( MUM / RCSe ) ) + ( CS / DS ) ) + ( Min( MUR ,DS ) / ( MUR / CS ) ) ) ) - ( ( MUC / RMSe ) * ( RCSe / MLU ) ) ) )", "obj1": 0.6820083682008368, "obj2": 0.1906762289049734}, {"determining": "( ( ( Min( MRS ,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) * RRS ) - ( PN + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( MUC * RRSe ) + RRSe ) + ( RMSe - CS ) ) ,Max( ( MUC / RRSe ),( RCSe / DS ) ) ) / ( ( ( RCSe + MUR ) * ( MUM + CS ) ) - Min( ( RMSe / RRSe ) ,Max( MLU,MUR ) ) ) )", "obj1": 0.8096234309623431, "obj2": 0.10387211647528101}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( ( CS + RRSe ) + ( RCSe * RRSe ) ),( ( MUR + CS ) + Min( MUM ,CS ) ) ) ,( ( ( MUR * MUM ) * ( RRSe - MLU ) ) - ( ( MUC / RMSe ) * ( RCSe / MLU ) ) ) )", "obj1": 0.8786610878661087, "obj2": 0.052418405164357224}, {"determining": "( ( MRS - FirstVNF_CPU_Server ) / ( ACS * MRS ) )", "choosing": "( Max( CS,( ( MLU * Max( MUM,CS ) ) * MUR ) ) / ( MUR * MUM ) )", "obj1": 0.6715481171548117, "obj2": 0.2075083840414248}, {"determining": "( ( ( ( BR * ARS ) * Min( AMS ,AMS ) ) * Max( Min( BR ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,Const ) ) ) - ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( ACS ,AMS ) ) - Min( ( Const / ACS ) ,( FirstVNF_RAM / ARS ) ) ) )", "choosing": "Max( ( MUM / MUC ),( RMSe / Min( MUR ,( RRSe * RRSe ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.009523141166664865}, {"determining": "Min( ( PN - PN ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( RMSe ,RMSe ) * RMSe ) ) )", "obj1": 0.6443514644351465, "obj2": 0.25010302487534575}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( Min( Min( CS ,CS ) ,( CS * MUC ) ) + ( ( MUR / RMSe ) - ( MLU / RRSe ) ) ) )", "obj1": 0.9163179916317992, "obj2": 0.03089824414439202}, {"determining": "Max( ( MDR + ACS ),( MRS * MDR ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( ( ( MUC * ( MUR + RCSe ) ) + RCSe ),Min( ( MUC * RMSe ) ,Max( MUM,RCSe ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,Min( Max( MUC,MLU ) ,( MUR + DS ) ) ) )", "obj1": 0.6276150627615062, "obj2": 0.2619338425316145}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RRSe - RRSe ),Max( MUM,RCSe ) ) - ( ( RRSe / RRSe ) / Max( CS,CS ) ) ) - Max( Min( Max( MUC,DS ) ,Min( CS ,MUR ) ),( ( RMSe / DS ) / Min( RCSe ,DS ) ) ) )", "obj1": 0.8389121338912134, "obj2": 0.07882865642306443}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server - AMS ) + Min( AMS ,FirstVNF_CPU_Server ) ) / Min( ( CRS - CRS ) ,AMS ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Max( Min( RRSe ,RRSe ),( Min( Max( CS,( ( MUR + Max( MUM,MUM ) ) * Min( CS ,MUM ) ) ) ,Max( MLU,Min( MUR ,CS ) ) ) * RMSe ) )", "obj1": 0.9895397489539749, "obj2": 0.003957177979508566}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( Max( CS,( ( MUR + CS ) + Min( MUM ,CS ) ) ) ,( ( ( MUR * MUM ) * ( RRSe - MLU ) ) - ( ( MUC / RMSe ) * ( RCSe / MLU ) ) ) )", "obj1": 0.9874476987447699, "obj2": 0.004170467286146905}, {"determining": "Max( ( MDR + ACS ),( MRS * MDR ) )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "( Min( RRS ,CRS ) - ( MDR * ( FirstVNF_CPU - ( MDR * ( FirstVNF_CPU - MRS ) ) ) ) )", "choosing": "( Max( DS,RRSe ) * RRSe )", "obj1": 0.9790794979079498, "obj2": 0.01979637348131687}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + Max( Const,ARS ) ) )", "choosing": "Max( ( ( RCSe / MUM ) + ( Min( Min( CS ,CS ) ,( CS * MUC ) ) * CS ) ),Min( Max( RCSe,MUR ) ,( RCSe * RCSe ) ) )", "obj1": 0.8556485355648535, "obj2": 0.0647097282339106}, {"determining": "( ( AMS - DDR ) / Max( ( ( ( ( FirstVNF_CPU_Server - BR ) + MRS ) / Const ) + ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ),MRS ) )", "choosing": "Min( ( ( Max( MLU,( Max( MLU,DS ) - ( MUM / MLU ) ) ) * ( MUR * Max( Min( MUR ,Max( Max( MUR,MUC ),( RMSe * DS ) ) ),MUC ) ) ) / DS ) ,Min( Min( MUR ,MLU ) ,DS ) )", "obj1": 0.7217573221757322, "obj2": 0.15877578322190092}, {"determining": "( ( ( ( BR * ARS ) * Min( AMS ,AMS ) ) * Max( Min( BR ,FirstVNF_RAM_Server ),Max( FirstVNF_Mem,Const ) ) ) - ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,Min( ACS ,AMS ) ) - Min( ( Const / ACS ) ,( FirstVNF_RAM / ARS ) ) ) )", "choosing": "Max( ( MUM / MUC ),( RMSe / Min( MUR ,( RRSe * RRSe ) ) ) )", "obj1": 0.9832635983263598, "obj2": 0.009523141166664865}, {"determining": "( ( Const / Max( MRS,FirstVNF_CPU_Server ) ) - MDR )", "choosing": "( ( MUR / Min( Min( RMSe ,DS ) ,Min( RMSe ,( Min( ( RMSe / CS ) ,RMSe ) * RMSe ) ) ) ) / Max( CS,MUR ) )", "obj1": 0.7866108786610879, "obj2": 0.11555669745208007}, {"determining": "( ( Const / FirstVNF_CPU ) - MDR )", "choosing": "( ( MUR / Min( Min( RMSe ,MUM ) ,Min( CS ,DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.7489539748953975, "obj2": 0.13208334863574409}, {"determining": "( ( AMS - DDR ) - ( ( ( RRS / CRS ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) + Max( ( ( MDR * MRS ) / BR ),( Const - ( BR / CRS ) ) ) ) )", "choosing": "Min( ( RMSe + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9937238493723849, "obj2": 0.0022782266022462793}, {"determining": "( ( AMS - DDR ) / Max( ( ( MDR * MRS ) / BR ),( AMS * PN ) ) )", "choosing": "Min( ( ( Min( ( ( MUR - MUM ) + DS ) ,MUC ) * ( MUR * Max( MLU,MUC ) ) ) / DS ) ,Min( MUC ,DS ) )", "obj1": 0.7322175732217573, "obj2": 0.15317843466003422}, {"determining": "Max( ( MDR + ACS ),( MRS * MDR ) )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,MLU ) * ( MUM * Min( ( ( CS + DS ) - ( MLU - DS ) ) ,( Max( RCSe,MUC ) - Min( DS ,RRSe ) ) ) ) )", "obj1": 0.8619246861924686, "obj2": 0.06143146797964624}], "4": [{"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + ( RRS + BR ) ) * FirstVNF_CPU_Server ) / ( CRS - FirstVNF_RAM ) )", "choosing": "( ( MUC * Min( RRSe ,RCSe ) ) + ( MUR / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS * MDR ),( DDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU * MUM ) - ( CS + CS ) ) * Min( ( RRSe - RRSe ) ,( ( RCSe + ( RRSe - RMSe ) ) * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "Min( ( ( BR / AMS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ,Max( Max( FirstVNF_RAM,AMS ),( DDR - FirstVNF_Mem ) ) )", "choosing": "( ( DS + ( MUC * RMSe ) ) * ( CS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,Min( RRS ,DDR ) ),ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( Min( MUR ,MLU ) * ( MUM * Min( ( ( CS + DS ) - ( MLU - DS ) ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Min( ARS ,ACS ) ) ,( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_RAM_Server / Max( ( ( BR - Min( FirstVNF_CPU ,( ACS - FirstVNF_Mem ) ) ) - MRS ),( PN + PN ) ) ) ) )", "choosing": "( Min( Max( DS,DS ) ,Min( MLU ,( ( Min( Max( ( RRSe + MLU ),( MLU / CS ) ) ,Min( RMSe ,( RMSe - RMSe ) ) ) / Max( Max( MUR,MUM ),DS ) ) * MLU ) ) ) - ( Min( MUM ,MLU ) / ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - Max( Const,ARS ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( Min( Min( CS ,CS ) ,( CS * MUC ) ) + ( ( MUR / RMSe ) - ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / FirstVNF_CPU ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( PN,CRS ) ) ) )", "choosing": "Min( Max( ( ( CS + RRSe ) + ( RCSe * RRSe ) ),( ( MUR + CS ) + Max( MUM,CS ) ) ) ,( MUM + ( MUC * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MDR ,CRS ) + ( FirstVNF_CPU + ACS ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - DS ) / DS ) * ( MUR - Min( Max( RMSe,RCSe ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + FirstVNF_RAM_Server ) + ( FirstVNF_Mem + CRS ) ),( ( ACS / ACS ) - ( RRS * FirstVNF_RAM ) ) ) - ( ( ( FirstVNF_RAM_Server * Const ) + ( RRS / CRS ) ) + Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS * PN ) ) ) )", "choosing": "( Max( MUM,( RCSe * RRSe ) ) / ( ( MUM * RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( DDR * Const ) ,Max( PN,FirstVNF_Mem_Server ) ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / ( MRS - FirstVNF_RAM_Server ) ) ) - ( Min( Min( MDR ,PN ) ,Max( AMS,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_Mem + PN ) / ( CRS / AMS ) ) ) )", "choosing": "( Min( ( ( MUR * MLU ) * ( CS * MUR ) ) ,Max( Min( MUM ,MLU ),( CS * MUM ) ) ) + Max( ( ( MUR / MLU ) - ( RRSe + MUR ) ),Max( Max( MUR,DS ),( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( MRS,FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) ) - ( Min( FirstVNF_CPU ,RRS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ,( Min( Max( PN,FirstVNF_RAM ) ,( PN - FirstVNF_Mem_Server ) ) * Max( ( BR - BR ),( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( Min( ( ( RMSe + RRSe ) + ( RMSe - CS ) ) ,( ( MUC / RRSe ) * ( RCSe / DS ) ) ) / ( ( ( RCSe + MUR ) * ( MUM + CS ) ) - Min( ( RMSe / RRSe ) ,Max( MLU,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,DDR ) * ( PN / ARS ) ) ,( ( PN + BR ) - Max( BR,AMS ) ) ) - ( ( ( FirstVNF_RAM / ARS ) + ( FirstVNF_CPU_Server * ACS ) ) / ( ( ACS - FirstVNF_CPU ) + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( RRSe + ( MLU - MLU ) ) - MLU ) / Max( ( ( RRSe * MUM ) / Max( RMSe,MLU ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_Mem_Server ) ,( ( CRS + CRS ) - Min( DDR ,Max( FirstVNF_RAM_Server,AMS ) ) ) )", "choosing": "Min( Min( Min( ( MUC * RRSe ) ,Max( RMSe,CS ) ) ,( ( RCSe + RMSe ) / ( RCSe - RRSe ) ) ) ,( ( Max( DS,RCSe ) + ( MLU - RCSe ) ) + ( ( MUR + CS ) * Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Max( ( Max( ( ACS + PN ),( ( Min( RRS ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) + ( ( CRS + FirstVNF_RAM_Server ) - Const ) ) ) * FirstVNF_CPU ),RRS ) ) / ( ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,ACS ) ) * ( PN / ( DDR + MRS ) ) ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( Max( ( MUC * ( RMSe + MUC ) ),RCSe ),( ( MUC * RMSe ) + ( MUM / CS ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,( Max( MUC,MLU ) - ( MUR + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS / AMS ) - ( RRS - FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM_Server / MRS ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ,( ( ( FirstVNF_CPU * FirstVNF_CPU ) + Min( MDR ,MRS ) ) / ( ( FirstVNF_CPU_Server / ARS ) + ( CRS / AMS ) ) ) )", "choosing": "( ( Max( ( RRSe - RRSe ),Max( MUM,RCSe ) ) - ( ( RRSe / RRSe ) / Max( CS,CS ) ) ) - Max( Min( Max( MUC,DS ) ,Min( CS ,MUR ) ),( ( RMSe / DS ) / Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * PN ) - Max( ( CRS / DDR ),FirstVNF_Mem ) )", "choosing": "Max( Min( RRSe ,RRSe ),( MUR * ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * PN ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( Min( RRSe ,RRSe ),( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_Mem_Server ) ,( ( CRS + FirstVNF_CPU ) - Min( DDR ,Max( ( FirstVNF_CPU_Server - ARS ),AMS ) ) ) )", "choosing": "Min( ( ( ( ( DS + ( Min( ( MUR * CS ) ,CS ) * MUR ) ) + ( ( MUR / DS ) * MLU ) ) - ( ( Min( MUC ,Min( Max( MUR,MUR ) ,RRSe ) ) / MUM ) * MLU ) ) / Min( DS ,DS ) ) ,( ( Max( DS,RCSe ) + ( MUR - RMSe ) ) + ( ( MUC + CS ) * Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS + FirstVNF_Mem_Server ) ,( ( CRS + CRS ) - Min( DDR ,Max( FirstVNF_RAM_Server,AMS ) ) ) )", "choosing": "Min( Min( Min( ( MUC * RRSe ) ,Max( RMSe,CS ) ) ,( ( RCSe + RMSe ) / ( RCSe - RRSe ) ) ) ,( ( Max( DS,RCSe ) + ( MLU - RCSe ) ) + ( ( MUR + CS ) * Max( RMSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MDR ,CRS ) + ( FirstVNF_CPU + ACS ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( MDR / ACS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - DS ) / DS ) * Max( ( MUM / Min( MLU ,RCSe ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_RAM ) / ( ( Min( Max( PN,FirstVNF_RAM ) ,PN ) + MDR ) + AMS ) )", "choosing": "Min( ( ( RRSe * RCSe ) + ( MUR + DS ) ) ,( ( MUC / MUR ) + ( ( MUC * ( MUR - MUC ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,Min( ( ( MUR / CS ) / Max( CS,MUR ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) / Max( CS,MUR ) )", "obj1": 0.8472803347280334, "obj2": 0.07149575890369347}, {"determining": "( ( FirstVNF_Mem + AMS ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - DS ) / DS ) * ( MUR - Min( Max( ( Max( Min( DS ,MUR ),Max( DS,MLU ) ) + Min( ( RRSe + MUR ) ,Max( DS,RCSe ) ) ),RCSe ) ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( MDR ,CRS ) + ( FirstVNF_CPU + ACS ) ) ,Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUM - MUM ) * Min( RCSe ,MLU ) ) - ( ( RMSe - MUR ) / ( RCSe + CS ) ) ) + ( Max( Min( DS ,MUR ),Max( DS,MLU ) ) + Min( ( RRSe + MUR ) ,Max( DS,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_CPU - MRS ) ) - ( Min( Max( RRS,FirstVNF_CPU_Server ) ,BR ) / ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - CS ) * Max( Max( Min( ( ( RRSe - Min( ( RMSe * MUR ) ,MUC ) ) * DS ) ,MLU ),( Max( MUC,( ( RMSe + ( MLU / CS ) ) - ( ( MUM * MUC ) + MUC ) ) ) + ( MUR * ( RRSe * MLU ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_CPU - MRS ) ) - ( Min( Max( RRS,FirstVNF_CPU_Server ) ,BR ) / ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - CS ) * Max( Max( Min( ( ( RRSe - Min( ( RMSe * MUR ) ,MUC ) ) * DS ) ,MLU ),( Max( MUC,( ( RMSe + ( MLU / CS ) ) - ( ( MUM * MUC ) + MUC ) ) ) + ( MUR * ( RRSe * MLU ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_CPU - MRS ) ) - ( Min( Max( RRS,FirstVNF_CPU_Server ) ,BR ) / ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe - CS ) * Max( Max( Min( ( ( RRSe - Min( ( RMSe * MUR ) ,MUC ) ) * DS ) ,MLU ),( Max( MUC,( ( RMSe + ( MLU / CS ) ) - ( ( MUM * MUC ) + MUC ) ) ) + ( MUR * ( RRSe * MLU ) ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * RRS ) - ( MDR * ( FirstVNF_CPU * MRS ) ) )", "choosing": "( Max( ( ( ( Min( RMSe ,( MLU - ( CS + MUR ) ) ) - MLU ) / ( RRSe - Max( Min( MUR ,( DS / MUR ) ),Min( ( CS - MUM ) ,MLU ) ) ) ) * MUM ),RRSe ) * ( RCSe * Max( Min( CS ,MUC ),( MUM + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / PN ) + ( FirstVNF_RAM - ( Max( DDR,FirstVNF_Mem ) / ( FirstVNF_CPU * MRS ) ) ) ) - ( Max( CRS,PN ) * ( Const * BR ) ) )", "choosing": "( ( Min( RCSe ,MUC ) + ( CS / MLU ) ) + ( MUR * Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) / ( Min( ARS ,ACS ) + ( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - Max( Const,ARS ) ) ) ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "Min( Max( CS,( ( MUR + CS ) + Min( MUM ,CS ) ) ) ,( ( ( MUR * MUM ) * ( RRSe - MLU ) ) - ( ( MUC / RMSe ) * ( RCSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - FirstVNF_CPU_Server )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( ( RCSe / MLU ) + ( ( MUR / RMSe ) - ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) / ( Min( ARS ,ACS ) + ( CRS + MDR ) ) ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( Min( Min( CS ,CS ) ,( CS * MUC ) ) + ( ( MUR / RMSe ) - ( MLU / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) - Max( Const,ARS ) )", "choosing": "Min( Max( ( ( CS + RRSe ) + ( RCSe * RRSe ) ),( ( MUR + CS ) + Min( MUM ,CS ) ) ) ,( ( ( MUR * MUM ) * ( RRSe - MLU ) ) - ( ( MUC / RMSe ) * ( RCSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,ACS ) * ( BR - FirstVNF_RAM ) )", "choosing": "( ( MUM * Min( MUC ,RCSe ) ) * Min( MUR ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * PN ) - Max( AMS,FirstVNF_Mem ) ) - ( FirstVNF_RAM + MDR ) )", "choosing": "( Min( MUM ,CS ) + Max( MUC,( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Max( CS,( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * PN ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "( Min( MUM ,CS ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( MRS,FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) ) - ( Min( FirstVNF_CPU ,RRS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ,( Min( Max( PN,FirstVNF_RAM ) ,( PN - FirstVNF_Mem_Server ) ) * Max( ( BR - BR ),( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) - MUR ) + Max( DS,Min( RRSe ,RMSe ) ) ) / ( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,FirstVNF_Mem ) ,( PN - FirstVNF_RAM ) )", "choosing": "Min( ( DS / CS ) ,Max( Min( RRSe ,RRSe ),( MUR * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,AMS ) ,( PN - ( BR / ( ( ( FirstVNF_RAM - Const ) - Const ) - FirstVNF_RAM ) ) ) )", "choosing": "Max( Min( ( MUM * RRSe ) ,RRSe ),Max( MUR,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * PN ) - Max( AMS,FirstVNF_Mem ) )", "choosing": "Min( ( DS / CS ) ,( DS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * ( Min( ( ACS - PN ) ,MRS ) * RRS ) ) - Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( ( ( DS + ( CS + RRSe ) ) / DS ),MUR ) / DS ),RRSe ),( ( RRSe / RRSe ) - ( CS + ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_RAM ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR + ACS ),( MRS * MDR ) )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "Max( FirstVNF_CPU,( MRS * MDR ) )", "choosing": "( MUC * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "Max( ( MDR + ACS ),( ( FirstVNF_Mem + AMS ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_RAM ,( ACS * AMS ) ) ) ) ) )", "choosing": "( Min( ( Min( Min( RMSe ,MUM ) ,MLU ) - RMSe ) ,( ( CS * Max( MUM,Min( Max( MUC,( MUC / CS ) ) ,( MLU + RRSe ) ) ) ) / MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "( ( Max( Min( ( Min( ( Min( FirstVNF_Mem_Server ,DDR ) * ( PN / ARS ) ) ,( ( PN + BR ) - Max( BR,AMS ) ) ) - ( ( ( FirstVNF_RAM / ARS ) + ( FirstVNF_CPU_Server * ACS ) ) / ( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) ,MDR ),( PN / CRS ) ) - Max( ( FirstVNF_RAM_Server + RRS ),( MDR + MDR ) ) ) / ( ( Max( ( ARS + CRS ),FirstVNF_RAM ) / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ( BR - CRS ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( ( DS - Min( ( DS + CS ) ,MLU ) ) + Min( RRSe ,MLU ) ) + Min( MUC ,DS ) ),( ( RMSe - MLU ) + ( CS / DS ) ) ) / ( ( ( MLU - ( Max( ( ( RRSe * MUM ) / ( RRSe * CS ) ),DS ) / RCSe ) ) + ( CS / DS ) ) + ( Min( MUR ,DS ) / ( MUR / CS ) ) ) )", "obj1": 0.6841004184100419, "obj2": 0.18458342538696323}, {"determining": "Min( Max( Max( ( MRS - FirstVNF_Mem_Server ),( Max( ACS,Max( FirstVNF_CPU,Min( RRS ,DDR ) ) ) + MDR ) ),Min( ( CRS - FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ,( Min( ( Const - PN ) ,Min( MRS ,DDR ) ) / ( ( PN / AMS ) * ( ARS - MRS ) ) ) )", "choosing": "( ( DS / Min( ( ( CS + DS ) - ( MLU - DS ) ) ,MUC ) ) / Min( MUC ,RMSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25641054569185456}, {"determining": "Min( Max( Max( ( MRS - FirstVNF_Mem_Server ),( Max( ACS,Const ) + MDR ) ),Min( ( CRS - FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ,( Min( ( Const - PN ) ,Min( MRS ,DDR ) ) / ( ( PN / AMS ) * ( ARS - MRS ) ) ) )", "choosing": "( ( DS / Min( MUC ,MUC ) ) / Min( MUC ,RMSe ) )", "obj1": 0.6129707112970711, "obj2": 0.2624985895988272}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( Min( Min( CS ,CS ) ,( CS * MUC ) ) + ( ( MUR / RMSe ) - ( MLU / RRSe ) ) ) )", "obj1": 0.9163179916317992, "obj2": 0.03089824414439202}, {"determining": "( Max( AMS,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) )", "choosing": "Min( Max( CS,( ( MUR + CS ) + Min( MUM ,CS ) ) ) ,( ( ( MUR * MUM ) * ( RRSe - MLU ) ) - ( ( MUC / RMSe ) * ( RCSe / MLU ) ) ) )", "obj1": 0.9874476987447699, "obj2": 0.004170467286146905}, {"determining": "Max( ( MDR + ACS ),( MRS * MDR ) )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "( ( AMS - DDR ) - ( ( ( RRS / CRS ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) + Max( ( ( MDR * MRS ) / BR ),( Const - ( BR / CRS ) ) ) ) )", "choosing": "Min( ( RMSe + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9937238493723849, "obj2": 0.0022782266022462793}, {"determining": "Max( ( MDR + ACS ),( MRS * MDR ) )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "( ( AMS - DDR ) - ( ( ( RRS / CRS ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) + Max( ( ( MDR * MRS ) / BR ),( AMS * PN ) ) ) )", "choosing": "Min( Min( ( ( ( MLU - MLU ) * ( MUR * Max( MLU,MUC ) ) ) / DS ) ,Min( MUC ,DS ) ) ,( MUC + DS ) )", "obj1": 0.9937238493723849, "obj2": 0.0022782266022462793}, {"determining": "Max( FirstVNF_CPU,( MRS * ( ( Const / FirstVNF_CPU_Server ) - MDR ) ) )", "choosing": "( MUC * Min( ( RRSe - RRSe ) ,( RRSe * ( Min( CS ,RMSe ) * RMSe ) ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "Max( FirstVNF_CPU,( MRS * MDR ) )", "choosing": "( ( MUR / Min( Min( RMSe ,( Min( CS ,RMSe ) * RMSe ) ) ,Min( CS ,DS ) ) ) / Max( CS,MUR ) )", "obj1": 0.5962343096234309, "obj2": 0.28724760975495794}, {"determining": "( ( Const / FirstVNF_CPU_Server ) - MDR )", "choosing": "( MUC * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.8577405857740585, "obj2": 0.059557054085863224}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + Max( Const,( DDR + Min( FirstVNF_Mem ,Min( PN ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RCSe / MUM ) + ( Min( Min( CS ,CS ) ,( CS * MUC ) ) * CS ) ),Min( Max( RCSe,MUR ) ,Min( Min( CS ,CS ) ,( CS + MUC ) ) ) )", "obj1": 0.7071129707112971, "obj2": 0.1669995099886986}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + Max( Const,ARS ) ) )", "choosing": "( Min( ( Max( MLU,MUM ) - ( MLU + MLU ) ) ,( ( MUM + RRSe ) - ( MLU - MUR ) ) ) * ( Min( Min( CS ,CS ) ,( CS + MUC ) ) + ( MUM * ( ( MUR - Min( ( MUR + ( MUM * RMSe ) ) ,MUC ) ) + Min( MUC ,MLU ) ) ) ) )", "obj1": 0.8514644351464435, "obj2": 0.06002383700885487}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.8723849372384938, "obj2": 0.04986976575474}, {"determining": "Max( ( MDR + ACS ),( MRS * MDR ) )", "choosing": "( ( MUR / CS ) / Max( CS,MUR ) )", "obj1": 0.6276150627615062, "obj2": 0.2583302368434159}, {"determining": "Max( ( MDR + ACS ),( ( ( CRS - FirstVNF_CPU_Server ) - PN ) * MDR ) )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * ( ( Max( MUM,RMSe ) - RCSe ) - RRSe ) )", "obj1": 0.606694560669456, "obj2": 0.2702927245186877}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RRSe - RRSe ),Max( MUM,RCSe ) ) - ( ( RRSe / RRSe ) / Max( CS,CS ) ) ) - Max( Min( Max( MUC,DS ) ,Min( CS ,MUR ) ),( ( RMSe / DS ) / Min( RCSe ,DS ) ) ) )", "obj1": 0.8200836820083682, "obj2": 0.09684399162311552}, {"determining": "Min( Max( Max( ( MRS - FirstVNF_Mem_Server ),( Max( ACS,Const ) + MDR ) ),Min( ( CRS - FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ,( Min( ( Const - PN ) ,Min( MRS ,DDR ) ) / ( ( PN / AMS ) * ( ARS - MRS ) ) ) )", "choosing": "( ( RRSe - CS ) * Max( Max( Min( ( DS * ( RRSe - Max( ( RMSe * MUR ),MUC ) ) ) ,MLU ),MLU ),RRSe ) )", "obj1": 0.6359832635983264, "obj2": 0.2441886129213363}, {"determining": "Min( Max( Max( ( MRS - FirstVNF_Mem_Server ),( Max( ACS,Max( FirstVNF_CPU,Min( RRS ,DDR ) ) ) + MDR ) ),Min( ( CRS - FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ,( Min( ( Const - PN ) ,Min( MRS ,DDR ) ) / ( ( PN / AMS ) * ( ARS - MRS ) ) ) )", "choosing": "( ( DS / Min( ( ( CS + DS ) - ( MLU - DS ) ) ,MUC ) ) / Min( MUC ,RMSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25641054569185456}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,DS ) * ( MUM * Min( ( ( CS + DS ) - ( MLU - DS ) ) ,( Max( RCSe,MUC ) - Min( DS ,RRSe ) ) ) ) )", "obj1": 0.8284518828451883, "obj2": 0.0881083527331725}, {"determining": "Min( ( PN - PN ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( RRSe / DS ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,Min( Max( MUC,MLU ) ,( MUR + DS ) ) ) )", "obj1": 0.8828451882845189, "obj2": 0.04659691815902768}, {"determining": "Min( Max( Max( ( MRS - FirstVNF_Mem_Server ),( Max( ACS,Max( FirstVNF_CPU,Min( RRS ,DDR ) ) ) + MDR ) ),Min( ( CRS - FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ,( Min( ( Const - PN ) ,Min( MRS ,DDR ) ) / ( ( PN / AMS ) * ( ARS - MRS ) ) ) )", "choosing": "( ( DS / Min( ( ( CS + DS ) - ( MLU - DS ) ) ,MUC ) ) / Min( MUC ,RMSe ) )", "obj1": 0.6297071129707112, "obj2": 0.25641054569185456}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + Max( Const,ARS ) ) )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.8577405857740585, "obj2": 0.059557054085863224}, {"determining": "Min( Max( Max( ( MRS - FirstVNF_Mem_Server ),( Max( ACS,Max( FirstVNF_CPU,Min( RRS ,MDR ) ) ) + MDR ) ),Min( ( CRS - FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) ,( Min( ( Const - PN ) ,Min( MRS ,DDR ) ) / ( ( PN / AMS ) * ( ARS - MRS ) ) ) )", "choosing": "( ( DS / Min( ( ( CS + DS ) - ( Max( CS,( ( MUR + CS ) + Min( MUM ,CS ) ) ) - DS ) ) ,MUC ) ) / Min( MUC ,RMSe ) )", "obj1": 0.5878661087866108, "obj2": 0.29553300949008493}, {"determining": "( ( ( Max( Min( FirstVNF_Mem ,MDR ),( PN / CRS ) ) - Max( ( FirstVNF_RAM_Server + RRS ),( MDR + MDR ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ( BR - CRS ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "Min( Max( CS,( ( MUR + CS ) + Min( MUM ,CS ) ) ) ,( ( ( MUR * MUM ) * ( ( ( MLU - ( MUM / RCSe ) ) + ( CS / DS ) ) + ( Min( MUR ,DS ) / ( MUR / CS ) ) ) ) - ( ( MUC / RMSe ) * ( RCSe / MLU ) ) ) )", "obj1": 0.6610878661087866, "obj2": 0.18700632379356083}, {"determining": "Max( ( MDR + ACS ),( ( FirstVNF_Mem + AMS ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( CS + Max( ( Max( Min( DS ,MUR ),Max( DS,MLU ) ) + Min( ( RRSe + MUR ) ,Max( DS,RCSe ) ) ),RCSe ) ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) / Max( CS,MUR ) )", "obj1": 0.8472803347280334, "obj2": 0.07149575890369347}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS / MUC ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 0.8347280334728033, "obj2": 0.07625483942851177}, {"determining": "( ( Max( Min( ( Min( ( Min( FirstVNF_Mem_Server ,DDR ) * ( PN / ARS ) ) ,( ( PN + BR ) - Max( BR,AMS ) ) ) - ( ( FirstVNF_RAM_Server * RRS ) - Min( CRS ,FirstVNF_CPU_Server ) ) ) ,MDR ),( PN / CRS ) ) - Max( ( FirstVNF_RAM_Server + RRS ),( MDR + MDR ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ( BR - CRS ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUC,MLU ) / ( ( ( MLU - ( Max( ( ( RRSe * MUM ) / ( RRSe * CS ) ),DS ) / RCSe ) ) + ( CS / DS ) ) + ( Min( MUR ,DS ) / ( MUR / CS ) ) ) )", "obj1": 0.6799163179916318, "obj2": 0.18487617489155364}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( ( MUR / MLU ),Max( CS,DS ) ) - ( Min( MUC ,CS ) - ( Max( ( ( MUC * ( MUR + RCSe ) ) + RCSe ),( ( MUC * RMSe ) + ( MUM / CS ) ) ) * Min( RMSe ,MUM ) ) ) ) ,Min( ( Min( MUM ,CS ) + ( MUC + MUR ) ) ,Min( Max( MUC,MLU ) ,( MUR + DS ) ) ) )", "obj1": 0.8807531380753139, "obj2": 0.04755939004799203}, {"determining": "Min( ( PN - Max( ( ( MDR * MRS ) / BR ),( AMS * PN ) ) ) ,Min( PN ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MLU - MLU ) * ( MUR * Max( MLU,MUC ) ) ) ,( DS - ( Min( CS ,RMSe ) * RMSe ) ) )", "obj1": 0.7510460251046025, "obj2": 0.0993209986280285}, {"determining": "( ( AMS - DDR ) - ( ( ( RRS / CRS ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) + Max( ( ( MDR * MRS ) / BR ),( Const - ( BR / CRS ) ) ) ) )", "choosing": "Min( ( RMSe + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9790794979079498, "obj2": 0.007921506919537186}, {"determining": "( ( AMS - DDR ) - ( ( ( RRS / CRS ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) + Max( ( ( MDR * MRS ) / BR ),( Const - ( BR / CRS ) ) ) ) )", "choosing": "Min( ( RMSe + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9790794979079498, "obj2": 0.007921506919537186}, {"determining": "( ( AMS - DDR ) - ( ( ( RRS / CRS ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) + Max( ( ( MDR * MRS ) / BR ),( Const - ( BR / CRS ) ) ) ) )", "choosing": "Min( ( RMSe + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9790794979079498, "obj2": 0.007921506919537186}, {"determining": "( ( AMS - DDR ) - ( ( ( RRS / CRS ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) + Max( ( ( MDR * MRS ) / BR ),( Const - ( BR / CRS ) ) ) ) )", "choosing": "Min( ( RMSe + RRSe ) ,Max( MUC,DS ) )", "obj1": 0.9790794979079498, "obj2": 0.007921506919537186}, {"determining": "Max( ( ( Const / Max( MRS,FirstVNF_CPU_Server ) ) - MDR ),( MRS * MDR ) )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * Min( Min( RMSe ,DS ) ,Min( RMSe ,( Min( ( RMSe / CS ) ,RMSe ) * RMSe ) ) ) ) ) )", "obj1": 0.5983263598326359, "obj2": 0.28195115541773974}, {"determining": "( ( Const / Max( MRS,FirstVNF_CPU_Server ) ) - MDR )", "choosing": "( ( ( CS + CS ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.8577405857740585, "obj2": 0.059557054085863224}, {"determining": "( ( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) ) / Max( ACS,MRS ) )", "choosing": "( Max( CS,( MUR * Max( MLU,RRSe ) ) ) / ( MUR * MUM ) )", "obj1": 0.897489539748954, "obj2": 0.04171285765319772}, {"determining": "( ( Max( Min( FirstVNF_Mem ,MDR ),( PN / CRS ) ) - Max( ( FirstVNF_RAM_Server + RRS ),( MDR + MDR ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( MDR * ( FirstVNF_CPU - MRS ) ) ) )", "choosing": "( ( ( RRSe + ( MLU - MLU ) ) - MLU ) / ( DS * ( RRSe - Max( ( RMSe * MUR ),MUC ) ) ) )", "obj1": 0.6443514644351465, "obj2": 0.2060923416228225}, {"determining": "Max( ( MDR + ACS ),( ( FirstVNF_Mem + AMS ) * ( Min( ( RRS - FirstVNF_RAM ) ,( FirstVNF_CPU + ACS ) ) * ( ( AMS - RRS ) + Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( CS + Max( ( Max( Min( DS ,MUR ),Max( DS,MLU ) ) + Min( ( RRSe + MUR ) ,Max( DS,RCSe ) ) ),RCSe ) ) - ( MLU * MUM ) ) * Min( ( RRSe - RRSe ) ,( RRSe * RRSe ) ) )", "obj1": 0.608786610878661, "obj2": 0.2671978105465061}, {"determining": "( ( Const + FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / CS ) / Max( CS,MUR ) )", "obj1": 0.8472803347280334, "obj2": 0.07149575890369347}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) + Min( AMS ,( CRS - CRS ) ) ),FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) )", "choosing": "( Max( CS,( RRSe * RCSe ) ) / ( MUR * MUM ) )", "obj1": 0.9895397489539749, "obj2": 0.0032343158174315536}, {"determining": "( ( Max( Min( ( Min( ( Min( FirstVNF_Mem_Server ,DDR ) * ( PN / ARS ) ) ,( ( PN + BR ) - Max( BR,AMS ) ) ) - ( ( ( FirstVNF_RAM / ARS ) + ( FirstVNF_CPU_Server * ACS ) ) / ( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) ,MDR ),( PN / CRS ) ) - Max( ( FirstVNF_RAM_Server + RRS ),( MDR + MDR ) ) ) / ( ( Max( ( ARS + CRS ),FirstVNF_RAM ) / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ( BR - CRS ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( ( DS - Min( ( DS + CS ) ,MLU ) ) + Min( RRSe ,MLU ) ) + Min( MUC ,DS ) ),( ( RMSe - MLU ) + ( CS / DS ) ) ) / ( ( ( MLU - ( Max( ( ( RRSe * MUM ) / ( RRSe * CS ) ),DS ) / RCSe ) ) + ( CS / DS ) ) + ( Min( MUR ,DS ) / ( MUR / CS ) ) ) )", "obj1": 0.6380753138075314, "obj2": 0.2215596260696261}, {"determining": "( ( ( Max( Min( FirstVNF_Mem ,MDR ),( PN / CRS ) ) - Max( ( FirstVNF_RAM_Server + RRS ),( MDR + MDR ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - Max( CRS,PN ) ) ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "Min( Max( CS,( ( CS / MLU ) + Min( MUM ,CS ) ) ) ,( ( ( MUR * MUM ) * ( ( ( MLU - ( MUM / RCSe ) ) + ( CS / DS ) ) + ( Min( MUR ,DS ) / ( MUR / CS ) ) ) ) - ( ( MUC / RMSe ) * ( RCSe / MLU ) ) ) )", "obj1": 0.7133891213389121, "obj2": 0.12208013909301625}, {"determining": "( ( ( Max( Min( FirstVNF_Mem ,MDR ),( PN / CRS ) ) - Max( ( FirstVNF_RAM_Server + RRS ),( MDR + MDR ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) / Max( FirstVNF_RAM,FirstVNF_CPU ) ) - ( ( BR - CRS ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) - Max( ( ( MDR / ARS ) - ( DDR + FirstVNF_Mem ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( ( Min( RCSe ,MUC ) + ( CS / MLU ) ) + ( MUR * Max( CS,RMSe ) ) )", "obj1": 0.6924686192468619, "obj2": 0.18076925592342474}]}