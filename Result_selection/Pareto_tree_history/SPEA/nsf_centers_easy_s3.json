{"1": [{"determining": "Max( ( FirstVNF_Mem / AMS ),( ( Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM ) ) / Max( AMS,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) - Const ) )", "choosing": "Min( ( ( RMSe / MUM ) + Max( RCSe,MUM ) ) ,( Min( ( DS + RRSe ) ,Max( MUM,( ( MUC * RCSe ) + ( MLU * RRSe ) ) ) ) / CS ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Max( Min( FirstVNF_Mem_Server ,MDR ),( FirstVNF_Mem - DDR ) )", "choosing": "Min( Max( RRSe,MUR ) ,Min( MUR ,MUM ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "Max( Min( MDR ,ACS ),( MDR * MDR ) )", "choosing": "( ( RCSe * MUR ) - Max( MLU,MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "( ( PN / ACS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,DS ) + Max( Max( DS,( CS / ( CS + ( Min( MLU ,RCSe ) + ( RRSe / RRSe ) ) ) ) ),RCSe ) )", "obj1": 0.35477582846003897, "obj2": 0.65010944154687}, {"determining": "( ( FirstVNF_RAM - ARS ) - Max( FirstVNF_RAM,MRS ) )", "choosing": "Max( Max( MUC,MLU ),Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Const ) - ( FirstVNF_CPU - PN ) )", "choosing": "( Max( RMSe,RMSe ) / ( MLU / MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.010250090086986687}, {"determining": "Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,( RRS * MDR ) )", "choosing": "( ( MLU + DS ) + ( MUM - MLU ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( Max( MDR,MDR ) * ( RRS - MRS ) )", "choosing": "( ( DS * RCSe ) / Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + DDR ) ,( BR - FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS * RMSe ) ,Max( ( RRSe - ( MLU * MUR ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - MDR ) / AMS ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,( MLU / Min( Max( MUC,( MUR + ( RMSe / MUM ) ) ) ,DS ) ) ) / Max( RRSe,MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7320412616689894}, {"determining": "Min( ( PN * FirstVNF_RAM ) ,( DDR - MDR ) )", "choosing": "( ( DS / MLU ) - Max( CS,MUM ) )", "obj1": 0.28460038986354774, "obj2": 0.7294136877802309}, {"determining": "( Max( AMS,Const ) + ( PN * AMS ) )", "choosing": "Max( ( RCSe + MUC ),Max( RRSe,RRSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS - PN ),( ARS - FirstVNF_Mem ) )", "choosing": "( ( Max( DS,RCSe ) - Min( CS ,MUR ) ) / Min( ( MUC - CS ) ,Max( MUM,RRSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.6438029414284768}, {"determining": "Min( ( Min( DDR ,FirstVNF_RAM_Server ) - Max( RRS,RRS ) ) ,( ( CRS - ACS ) * ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RMSe * MUM ) * ( RRSe * CS ) ) + ( ( DS / CS ) + Min( MUR ,MUC ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( ARS * MDR ) - ( Max( RRS,( MDR - FirstVNF_Mem ) ) * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) - ( PN * Min( Const ,BR ) ) )", "choosing": "( Min( MUC ,CS ) - ( MLU + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * FirstVNF_CPU ) ,Min( FirstVNF_Mem ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR * CS ) * ( MUC / RCSe ) ) + ( ( MUC + MUM ) / Max( RMSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem ) - ( BR + AMS ) ) + ( ARS - BR ) )", "choosing": "( ( MUM + ( CS - CS ) ) + ( ( Max( MLU,Min( MUC ,( ( ( MUR - MUR ) - RRSe ) * Max( ( CS * RCSe ),( CS / RRSe ) ) ) ) ) + MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR + Min( FirstVNF_RAM_Server ,( ARS + ( RRS * MDR ) ) ) ) ) ) - DDR ) - ( PN * BR ) )", "choosing": "Min( ( ( MLU + MUR ) * Min( MUR ,DS ) ) ,( ( RCSe / RMSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( Max( ( RCSe * MUM ),Min( Max( MUM,MUM ) ,CS ) ),( RCSe * MUM ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( ( MRS / BR ) - ( FirstVNF_Mem_Server - MRS ) ) + ( ( RRS / CRS ) - Max( PN,FirstVNF_Mem ) ) )", "choosing": "( ( MUR / CS ) - ( RRSe / ( RRSe / MUC ) ) )", "obj1": 0.8421052631578947, "obj2": 0.1740764041729349}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) * ( MDR / BR ) ) * ( Const + ACS ) )", "choosing": "Max( ( ( RCSe * MUR ) - ( MUR - MUR ) ),( ( ( MUR + MUR ) / MUM ) - Max( ( RRSe + MUR ),CS ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7241592567008701}, {"determining": "( ( FirstVNF_CPU_Server - MRS ) - ( ( RRS / FirstVNF_Mem ) + MRS ) )", "choosing": "( ( Max( MUC,MLU ) / ( DS * DS ) ) * ( ( MUR * MUR ) + Min( MUR ,RCSe ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6783156471038935}, {"determining": "Max( Min( Max( ACS,FirstVNF_Mem_Server ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ),( ( RRS - ACS ) + Min( FirstVNF_RAM ,RRS ) ) )", "choosing": "( Min( ( MLU + RCSe ) ,( DS + RMSe ) ) - Max( Min( RMSe ,RMSe ),( CS * MUR ) ) )", "obj1": 0.9259259259259259, "obj2": 0.07664344679725778}, {"determining": "( ( MDR / Min( RRS ,FirstVNF_RAM_Server ) ) / ( MDR - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( ( RRSe - MUR ) ,( DS / MUR ) ),Max( Max( RCSe,MLU ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,RRS ) - ( ACS + CRS ) )", "choosing": "( ( ( RCSe + DS ) / ( RCSe * MUR ) ) - Max( Min( CS ,MUC ),( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS + RRS ) * MRS ) * ( Max( FirstVNF_Mem,MDR ) - ( MDR / ARS ) ) )", "choosing": "( ( Min( MLU ,MUC ) - ( RRSe + CS ) ) / ( Min( RRSe ,MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( MRS - BR ),ACS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( MUC - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7042877846403873}, {"determining": "( ( FirstVNF_Mem / Const ) / Min( CRS ,( ( CRS - FirstVNF_CPU_Server ) - ( CRS + Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM - MUM ) * Max( Min( DS ,RMSe ),( Max( ( Min( MUM ,( ( CS * RMSe ) - MUR ) ) * RCSe ),DS ) * Max( DS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( MDR,Max( FirstVNF_CPU,RRS ) ) * ARS ),( DDR - Const ) )", "choosing": "Min( ( ( ( RCSe + MLU ) * ( RRSe - MUM ) ) * ( ( DS - CS ) - Max( MUM,DS ) ) ) ,Max( ( ( MUC * DS ) / ( RMSe * MUR ) ),Max( ( CS - RRSe ),( RMSe / MUM ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7182168129940343}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / ( MDR + FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RMSe / RMSe ) - Max( RRSe,CS ) ) ,( ( RCSe / RCSe ) * Max( RMSe,MUR ) ) ) + Min( ( ( MUM - CS ) / ( MLU + RRSe ) ) ,Min( ( RCSe / CS ) ,Max( CS,MUC ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "( Max( ( ( PN / AMS ) * Max( ARS,FirstVNF_RAM_Server ) ),( ( PN + CRS ) * ( Const / FirstVNF_CPU_Server ) ) ) - ( ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) - ( ACS / CRS ) ) + ( ( FirstVNF_RAM / FirstVNF_CPU ) / ( PN * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MUC / MLU ) + ( CS * MUC ) ) + RMSe ) * Min( ( ( CS + MLU ) + ( RMSe + RCSe ) ) ,DS ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( ( MRS * CRS ) * MDR ) + Max( ARS,( RRS + ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Min( MLU ,DS ) * Min( RMSe ,MUC ) ) / RCSe ),Max( ( Max( MUR,MLU ) - MUR ),CS ) )", "obj1": 0.33723196881091616, "obj2": 0.6720733315731785}, {"determining": "( ( ( AMS - AMS ) - DDR ) * ( MDR + MRS ) )", "choosing": "Max( ( Max( MUC,( MUC * RCSe ) ) * ( RCSe - MLU ) ),Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * MDR ) ) ,( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server + AMS ) + ACS ) ) )", "choosing": "Max( ( Max( ( RRSe - ( Min( Min( MLU ,Min( MUM ,RRSe ) ) ,DS ) - Max( CS,( DS * ( MLU / RCSe ) ) ) ) ),Min( MUM ,RRSe ) ) + ( ( CS * MUM ) * Min( RCSe ,RCSe ) ) ),( ( Min( Min( MUM ,MUR ) ,MUM ) * MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( RRS - CRS ) ,( AMS * RRS ) ) * ( ( FirstVNF_CPU - ACS ) + Min( DDR ,MDR ) ) ) * ( ( ( ARS + MDR ) - Min( MDR ,FirstVNF_RAM ) ) - Max( ( PN / CRS ),( ACS * CRS ) ) ) )", "choosing": "( ( MUR - MUR ) * ( ( DS / ( MLU * DS ) ) * Max( MUC,RRSe ) ) )", "obj1": 0.6881091617933723, "obj2": 0.36177682555687685}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Min( Const ,FirstVNF_RAM ) ) / Min( ( MRS + AMS ) ,( MDR - PN ) ) ) / ( ( ( AMS + ACS ) - Min( PN ,ACS ) ) + ( Max( RRS,FirstVNF_Mem_Server ) / ( MDR - DDR ) ) ) )", "choosing": "( Min( ( Max( RRSe,MUR ) * ( MUM * RMSe ) ) ,( Max( MUM,CS ) * Max( CS,MUM ) ) ) * Max( ( ( RMSe + MUR ) - Max( DS,MUM ) ),( ( RRSe * MLU ) + Max( MUM,MUM ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.18050742269389092}, {"determining": "( Max( ( ( BR + DDR ) * Max( FirstVNF_Mem,AMS ) ),( ( ARS / FirstVNF_RAM_Server ) - ( MRS + AMS ) ) ) + Max( ( ( CRS * AMS ) * Min( AMS ,ACS ) ),Max( ( FirstVNF_CPU * ACS ),( FirstVNF_RAM_Server + ACS ) ) ) )", "choosing": "Max( ( Max( MUM,Max( CS,CS ) ) + MLU ),Min( ( MUM / ( RCSe / DS ) ) ,RCSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( DS * RMSe ) )", "obj1": 0.30214424951267055, "obj2": 0.7021983783580842}, {"determining": "Min( ( FirstVNF_Mem - ( ( FirstVNF_CPU / RRS ) - ACS ) ) ,Max( ( FirstVNF_RAM_Server + FirstVNF_RAM ),FirstVNF_RAM_Server ) )", "choosing": "Max( Max( Max( ( RRSe + MLU ),Max( MLU,MLU ) ),Min( ( RRSe + MLU ) ,( Min( ( RRSe - CS ) ,Min( CS ,CS ) ) - DS ) ) ),Max( ( Max( RMSe,RCSe ) - ( MLU * CS ) ),Max( ( RCSe - MUR ),( DS / MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7241592567008701}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + ( PN * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server - BR ) / Min( ARS ,ARS ) ) ) / ( ( ( MRS / FirstVNF_CPU ) / ( ACS / FirstVNF_CPU_Server ) ) / ( Min( MDR ,RRS ) - ( DDR / ARS ) ) ) )", "choosing": "Min( ( Min( Max( RCSe,MUC ) ,( RRSe - MUR ) ) * ( Min( RMSe ,RRSe ) + ( MUM / MLU ) ) ) ,Min( Min( ( RCSe + MUC ) ,Max( RRSe,MUM ) ) ,( ( RRSe / CS ) * ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,FirstVNF_Mem ) - ( ARS * ACS ) ) + Max( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ),Min( MRS ,ACS ) ) ) ,( ( ( FirstVNF_RAM - CRS ) / ( CRS - PN ) ) * ( ( RRS / FirstVNF_CPU ) / ( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( RRSe * ( MLU / Max( CS,DS ) ) ) ,( ( MUR + RRSe ) + Max( ( MUM + RMSe ),RCSe ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( BR / MRS ) ) ) )", "choosing": "( ( Max( MUM,MUC ) - RRSe ) + ( ( ( MUR - MUR ) + RMSe ) / Max( CS,RRSe ) ) )", "obj1": 0.5126705653021443, "obj2": 0.4705301059322334}], "2": [{"determining": "Max( ( FirstVNF_Mem / AMS ),( ( Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM ) ) / Max( AMS,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) - Const ) )", "choosing": "Min( ( ( RMSe / MUM ) + Max( RCSe,MUM ) ) ,( Min( ( DS + RRSe ) ,Max( MUM,( ( MUC * RCSe ) + ( MLU * RRSe ) ) ) ) / CS ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Max( Min( MDR ,ACS ),( MDR * MDR ) )", "choosing": "( ( RCSe * MUR ) - Max( MLU,MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "( ( FirstVNF_RAM - ARS ) - Max( FirstVNF_RAM,MRS ) )", "choosing": "Max( Max( MUC,MLU ),Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,MDR ) * ( RRS - MRS ) )", "choosing": "( ( DS * RCSe ) / Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS + DDR ) ,( BR - FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS * RMSe ) ,Max( ( RRSe - ( MLU * MUR ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - MDR ) / AMS ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,( MLU / Min( Max( MUC,( MUR + ( RMSe / MUM ) ) ) ,DS ) ) ) / Max( RRSe,MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7320412616689894}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * MDR ) - ( Max( RRS,( MDR - FirstVNF_Mem ) ) * ( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) - ( PN * Min( Const ,BR ) ) )", "choosing": "( Min( MUC ,CS ) - ( MLU + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * FirstVNF_CPU ) ,Min( FirstVNF_Mem ,DDR ) ) - Min( ( PN / FirstVNF_RAM ) ,( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUR * CS ) * ( MUC / RCSe ) ) + ( ( MUC + MUM ) / Max( RMSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem ) - ( BR + AMS ) ) + ( ARS - BR ) )", "choosing": "( ( MUM + ( CS - CS ) ) + ( ( Max( MLU,Min( MUC ,( ( ( MUR - MUR ) - RRSe ) * Max( ( CS * RCSe ),( CS / RRSe ) ) ) ) ) + MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR + Min( FirstVNF_RAM_Server ,( ARS + ( RRS * MDR ) ) ) ) ) ) - DDR ) - ( PN * BR ) )", "choosing": "Min( ( ( MLU + MUR ) * Min( MUR ,DS ) ) ,( ( RCSe / RMSe ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Max( ACS,FirstVNF_Mem_Server ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ),( ( RRS - ACS ) + Min( FirstVNF_RAM ,RRS ) ) )", "choosing": "( Min( ( MLU + RCSe ) ,( DS + RMSe ) ) - Max( Min( RMSe ,RMSe ),( CS * MUR ) ) )", "obj1": 0.9259259259259259, "obj2": 0.07664344679725778}, {"determining": "( ( MDR / Min( RRS ,FirstVNF_RAM_Server ) ) / ( MDR - FirstVNF_CPU_Server ) )", "choosing": "Max( Min( ( RRSe - MUR ) ,( DS / MUR ) ),Max( Max( RCSe,MLU ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,RRS ) - ( ACS + CRS ) )", "choosing": "( ( ( RCSe + DS ) / ( RCSe * MUR ) ) - Max( Min( CS ,MUC ),( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS + RRS ) * MRS ) * ( Max( FirstVNF_Mem,MDR ) - ( MDR / ARS ) ) )", "choosing": "( ( Min( MLU ,MUC ) - ( RRSe + CS ) ) / ( Min( RRSe ,MUM ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Const ) / Min( CRS ,( ( CRS - FirstVNF_CPU_Server ) - ( CRS + Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUM - MUM ) * Max( Min( DS ,RMSe ),( Max( ( Min( MUM ,( ( CS * RMSe ) - MUR ) ) * RCSe ),DS ) * Max( DS,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "( ( ( MRS * CRS ) * MDR ) + Max( ARS,( RRS + ( ARS * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( Min( MLU ,DS ) * Min( RMSe ,MUC ) ) / RCSe ),Max( ( Max( MUR,MLU ) - MUR ),CS ) )", "obj1": 0.33723196881091616, "obj2": 0.6720733315731785}, {"determining": "( ( ( AMS - AMS ) - DDR ) * ( MDR + MRS ) )", "choosing": "Max( ( Max( MUC,( MUC * RCSe ) ) * ( RCSe - MLU ) ),Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ( MDR * MDR ) ) ,( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server + AMS ) + ACS ) ) )", "choosing": "Max( ( Max( ( RRSe - ( Min( Min( MLU ,Min( MUM ,RRSe ) ) ,DS ) - Max( CS,( DS * ( MLU / RCSe ) ) ) ) ),Min( MUM ,RRSe ) ) + ( ( CS * MUM ) * Min( RCSe ,RCSe ) ) ),( ( Min( Min( MUM ,MUR ) ,MUM ) * MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( RRS - CRS ) ,( AMS * RRS ) ) * ( ( FirstVNF_CPU - ACS ) + Min( DDR ,MDR ) ) ) * ( ( ( ARS + MDR ) - Min( MDR ,FirstVNF_RAM ) ) - Max( ( PN / CRS ),( ACS * CRS ) ) ) )", "choosing": "( ( MUR - MUR ) * ( ( DS / ( MLU * DS ) ) * Max( MUC,RRSe ) ) )", "obj1": 0.6881091617933723, "obj2": 0.36177682555687685}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Min( Const ,FirstVNF_RAM ) ) / Min( ( MRS + AMS ) ,( MDR - PN ) ) ) / ( ( ( AMS + ACS ) - Min( PN ,ACS ) ) + ( Max( RRS,FirstVNF_Mem_Server ) / ( MDR - DDR ) ) ) )", "choosing": "( Min( ( Max( RRSe,MUR ) * ( MUM * RMSe ) ) ,( Max( MUM,CS ) * Max( CS,MUM ) ) ) * Max( ( ( RMSe + MUR ) - Max( DS,MUM ) ),( ( RRSe * MLU ) + Max( MUM,MUM ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.18050742269389092}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( DS * RMSe ) )", "obj1": 0.30214424951267055, "obj2": 0.7021983783580842}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + ( PN * FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM_Server - BR ) / Min( ARS ,ARS ) ) ) / ( ( ( MRS / FirstVNF_CPU ) / ( ACS / FirstVNF_CPU_Server ) ) / ( Min( MDR ,RRS ) - ( DDR / ARS ) ) ) )", "choosing": "Min( ( Min( Max( RCSe,MUC ) ,( RRSe - MUR ) ) * ( Min( RMSe ,RRSe ) + ( MUM / MLU ) ) ) ,Min( Min( ( RCSe + MUC ) ,Max( RRSe,MUM ) ) ,( ( RRSe / CS ) * ( DS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( BR / MRS ) ) ) )", "choosing": "( ( Max( MUM,MUC ) - RRSe ) + ( ( ( MUR - MUR ) + RMSe ) / Max( CS,RRSe ) ) )", "obj1": 0.5126705653021443, "obj2": 0.4705301059322334}, {"determining": "( ( BR * FirstVNF_CPU_Server ) - ( FirstVNF_CPU - AMS ) )", "choosing": "Max( ( CS + MLU ),Max( RCSe,RCSe ) )", "obj1": 0.34307992202729043, "obj2": 0.6624128055485027}, {"determining": "( ( FirstVNF_CPU_Server - ARS ) * ( MRS - BR ) )", "choosing": "( Min( ( CS * RMSe ) ,( RRSe + MUC ) ) + ( RMSe * RMSe ) )", "obj1": 0.4600389863547758, "obj2": 0.5364022446919016}, {"determining": "Min( ( DDR * FirstVNF_Mem ) ,( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( DS + MUR ) + ( RMSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( RRS,CRS ),( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) - Max( Max( DDR,FirstVNF_Mem_Server ),( PN + Const ) ) ) / ( ( FirstVNF_RAM / ( Min( FirstVNF_Mem ,BR ) / ( DDR / MRS ) ) ) / MRS ) )", "choosing": "( ( ( ( CS + CS ) - ( MLU + RCSe ) ) - ( ( MUR * CS ) / Min( DS ,MLU ) ) ) * ( ( ( CS * MLU ) * Max( RCSe,MUM ) ) / ( Min( RRSe ,( ( CS - Min( Max( RMSe,RMSe ) ,( MUC / RCSe ) ) ) * ( RCSe + ( RRSe + MLU ) ) ) ) - Max( RMSe,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Max( ACS,FirstVNF_Mem_Server ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ),( ( RRS - ACS ) + Min( FirstVNF_RAM ,RRS ) ) )", "choosing": "( ( ( ( CS + CS ) - ( MLU + RCSe ) ) - ( ( MUR * CS ) / Min( DS ,MLU ) ) ) * ( ( ( CS * MLU ) * Max( RCSe,MUM ) ) / ( Max( MLU,DS ) - Max( RMSe,RRSe ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.07664344679725778}, {"determining": "( ( PN / ACS ) - ( MDR + MRS ) )", "choosing": "( Min( RCSe ,DS ) + Max( Max( DS,( CS / ( CS + RCSe ) ) ),RCSe ) )", "obj1": 0.7446393762183235, "obj2": 0.1492416633046777}, {"determining": "( ( ( AMS - AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) * ( Min( ARS ,BR ) + MRS ) )", "choosing": "Max( ( Max( RCSe,Max( MUR,Max( CS,MUC ) ) ) * Max( ( RCSe * Min( DS ,RMSe ) ),DS ) ),DS )", "obj1": 0.37816764132553604, "obj2": 0.6308371359435969}, {"determining": "( ( ( AMS - AMS ) - DDR ) * ( MDR + MRS ) )", "choosing": "( Min( RCSe ,DS ) + Max( Max( DS,( CS / ( CS + ( Min( MLU ,RCSe ) + ( RRSe / RRSe ) ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ACS + CRS ) )", "choosing": "( ( DS / MLU ) - Max( Min( CS ,MUC ),( RRSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,RRS ) - ( ACS + CRS ) )", "choosing": "( ( DS / MLU ) - Max( CS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Min( MDR ,( Min( ACS ,( ACS + PN ) ) * FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - CRS ) )", "choosing": "( Max( CS,( ( MLU / ( Max( ( CS * ( MUM * MUM ) ),Min( Min( RMSe ,MUR ) ,RRSe ) ) / MUM ) ) + Min( ( MUC * CS ) ,( RMSe * MUM ) ) ) ) / ( DS / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ACS ) - ( FirstVNF_Mem_Server + Min( ACS ,FirstVNF_Mem ) ) )", "choosing": "Min( Min( MUM ,DS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS + MRS ) - ( ARS * CRS ) ) ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_RAM_Server / ARS ) ) ,ARS ) ) )", "choosing": "Max( ( ( Min( MUC ,Min( Min( MUR ,MUR ) ,( MLU - ( CS + ( RCSe * MUM ) ) ) ) ) + ( CS + DS ) ) / MUM ),Max( RCSe,RCSe ) )", "obj1": 0.33723196881091616, "obj2": 0.6720733315731785}, {"determining": "( ( ARS * MDR ) - ( DDR + ( ( ( RRS + Const ) - FirstVNF_Mem ) - RRS ) ) )", "choosing": "( Max( Max( Min( ( DS + MUR ) ,DS ),MUC ),( CS * MUM ) ) - ( ( ( ( ( RMSe + RMSe ) * ( RCSe + MUR ) ) / ( MUR - DS ) ) / RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * MDR ) - ( DDR + ( DDR - RRS ) ) )", "choosing": "( Max( MLU,( CS * MUM ) ) - ( ( MUC / RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( DDR ,FirstVNF_Mem_Server ) + Min( Const ,FirstVNF_RAM ) ) / Min( ( MRS + AMS ) ,( MDR - PN ) ) ) / ( ( ( AMS + ACS ) - Min( PN ,ACS ) ) + ( Max( RRS,FirstVNF_Mem_Server ) / ( MDR - DDR ) ) ) )", "choosing": "( Min( ( Max( RRSe,MUR ) * ( MUC * RMSe ) ) ,( Max( MUM,CS ) * Max( CS,MUM ) ) ) * Max( ( ( RMSe + MUR ) - Max( DS,MUM ) ),( ( RRSe * MLU ) + Max( MUM,MUM ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.18050742269389092}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) + Min( Const ,FirstVNF_RAM ) ) / Min( ( MRS + AMS ) ,( MDR - PN ) ) ) / ( ( ( AMS + ACS ) - Min( PN ,ACS ) ) + ( Max( RRS,FirstVNF_Mem_Server ) / ( MDR - DDR ) ) ) )", "choosing": "( Max( MLU,( CS * MUM ) ) - ( ( MUC / RRSe ) / MUR ) )", "obj1": 0.7192982456140351, "obj2": 0.18050742269389092}, {"determining": "( ( ARS * MDR ) - ( DDR + ( DDR - RRS ) ) )", "choosing": "( Min( ( Max( RRSe,MUR ) * ( MUM * RMSe ) ) ,( Max( MUM,CS ) * Max( CS,MUM ) ) ) * Max( ( ( RMSe + MUR ) - Max( DS,MUM ) ),( ( RRSe * MLU ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + MRS ) * ( Max( FirstVNF_CPU,MDR ) - ( ARS / MDR ) ) )", "choosing": "( ( Min( MLU ,MUR ) - ( RRSe + CS ) ) / ( ( RMSe - MLU ) / ( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_Mem_Server,RRS ),( RRS + FirstVNF_Mem_Server ) ) * ( Max( FirstVNF_CPU,MDR ) - ( ARS / MDR ) ) )", "choosing": "( ( Min( MLU ,MUC ) - ( RRSe + CS ) ) / ( ( RMSe - MLU ) / ( MUR / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( Const - AMS ) ) ) )", "choosing": "( ( Max( MUM,MUC ) - RRSe ) + Max( ( Min( CS ,( RRSe * MLU ) ) * ( MLU - MUC ) ),( MLU / MUM ) ) )", "obj1": 0.6335282651072125, "obj2": 0.36999279943832974}, {"determining": "( ( FirstVNF_Mem * ARS ) - ( Const * ( ( BR / MRS ) / Const ) ) )", "choosing": "Max( ( ( ( RRSe * MLU ) / CS ) * ( MLU - Max( MLU,Max( MUM,Max( CS,Min( DS ,RMSe ) ) ) ) ) ),( MLU / MUM ) )", "obj1": 0.5126705653021443, "obj2": 0.4705301059322334}, {"determining": "( ( FirstVNF_CPU - MDR ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / Min( RRS ,PN ) ) + BR ) )", "choosing": "Max( ( RCSe - RMSe ),( CS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * Const ) - Min( ACS ,( AMS + CRS ) ) )", "choosing": "( Min( ( MUR / DS ) ,RMSe ) / ( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) / MUR ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Const / ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( MLU / MUR ) + ( DS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( ( RRSe / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Max( ( ( AMS + CRS ) * Min( FirstVNF_Mem ,Const ) ),( ( MDR + PN ) - ( AMS * ACS ) ) )", "choosing": "( ( DS - MLU ) - ( ( MLU * RRSe ) * CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7320412616689894}, {"determining": "( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "Max( ( Min( CS ,( RRSe * MLU ) ) * ( MLU - ( MLU - RRSe ) ) ),( MLU / MUM ) )", "obj1": 0.2962962962962963, "obj2": 0.7134616828666042}, {"determining": "( ( ( ACS / RRS ) * CRS ) - ( DDR + ( DDR - RRS ) ) )", "choosing": "( Max( MLU,( CS * ( MUC + RMSe ) ) ) - ( MUR / ( Min( RCSe ,MUM ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * MDR ) - ( DDR + ( DDR - RRS ) ) )", "choosing": "( ( DS * RCSe ) / Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + MRS ) * Max( MDR,( BR * ( BR * CRS ) ) ) )", "choosing": "( Max( MLU,( CS * MUM ) ) - ( Max( ( RCSe - MUM ),RRSe ) / Min( ( MUR - MLU ) ,( MLU + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * MDR ) - ( DDR + ( DDR - RRS ) ) )", "choosing": "( Max( MLU,( CS * MUM ) ) - ( ( MUC / RRSe ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + Const ) + ( BR + Const ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "( Min( ( RRS * FirstVNF_CPU ) ,Min( FirstVNF_Mem ,DDR ) ) - Min( ( FirstVNF_RAM / ( ACS / RRS ) ) ,( MRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( CS + RMSe ) - Max( MUC,RRSe ) ) ) + ( ( ( Min( RCSe ,( Min( MUC ,RCSe ) + ( Max( MUC,DS ) + ( MUC - DS ) ) ) ) * RRSe ) + MUM ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - AMS ) - DDR ) * ( ( AMS - FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( Max( MUC,( MUC * Min( Min( MLU ,MUR ) ,( MUC + MLU ) ) ) ) * ( RCSe - MLU ) ),Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - AMS ) - DDR ) * ( MDR + MRS ) )", "choosing": "Max( ( Max( MUC,( MUC * RCSe ) ) * ( RCSe - MLU ) ),Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS / FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / Max( ACS,Min( Const ,CRS ) ) ) ) ,( ( Max( ACS,PN ) / ( ACS / Const ) ) * ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) ) )", "choosing": "( ( Min( ( Max( ( DS - RMSe ),( Max( ( RCSe - DS ),MUC ) - MLU ) ) - MUM ) ,( RMSe - DS ) ) + ( ( RCSe * Min( ( Min( ( RMSe + MLU ) ,RRSe ) * ( RRSe - ( MUR * RMSe ) ) ) ,Max( ( MUR / MUC ),( ( MUC - RMSe ) - MLU ) ) ) ) - Max( MUC,RRSe ) ) ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS / FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / Max( ACS,Min( Const ,CRS ) ) ) ) ,( ( Max( ACS,PN ) / ( ACS / Const ) ) * ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) ) )", "choosing": "( ( Min( ( Max( ( DS - RMSe ),( Max( ( RCSe - DS ),MUC ) - MLU ) ) - MUM ) ,( RMSe - DS ) ) + ( ( RCSe * Min( ( Min( ( RMSe + MLU ) ,RRSe ) * ( RRSe - ( MUR * RMSe ) ) ) ,Max( ( MUR / MUC ),( ( MUC - RMSe ) - MLU ) ) ) ) - Max( MUC,RRSe ) ) ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS / FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server / Max( ACS,Min( Const ,CRS ) ) ) ) ,( ( Max( ACS,PN ) / ( ACS / Const ) ) * ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) ) )", "choosing": "( ( Min( ( Max( ( DS - RMSe ),( Max( ( RCSe - DS ),MUC ) - MLU ) ) - MUM ) ,( RMSe - DS ) ) + ( ( RCSe * Min( ( Min( ( RMSe + MLU ) ,RRSe ) * ( RRSe - ( MUR * RMSe ) ) ) ,Max( ( MUR / MUC ),( ( MUC - RMSe ) - MLU ) ) ) ) - Max( MUC,RRSe ) ) ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,RRS ) / Max( FirstVNF_CPU,Const ) ) - Min( ( FirstVNF_RAM_Server - DDR ) ,( MDR * ( FirstVNF_CPU_Server / ACS ) ) ) ) ,( ( Max( ACS,PN ) / ( Const / Const ) ) * ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) ,( DDR - BR ) )", "choosing": "( ( RCSe - RCSe ) + Max( RRSe,RRSe ) )", "obj1": 0.30214424951267055, "obj2": 0.7021983783580842}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MLU,MUC ) + Max( RRSe,RRSe ) )", "obj1": 0.3469785575048733, "obj2": 0.6332978755245474}, {"determining": "( ( Min( PN ,( Max( CRS,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,ARS ) ) ) - DDR ) - ( PN * BR ) )", "choosing": "Min( ( ( MLU + RRSe ) * Min( MLU ,DS ) ) ,( Min( DS ,MUC ) - ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - ACS ) ,FirstVNF_RAM ) - DDR ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MLU / RCSe ) * Min( CS ,Max( Min( CS ,MUR ),Max( RRSe,MUR ) ) ) ) ,( Min( DS ,MUC ) - ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( ARS ,PN ) ,( AMS * RRS ) ) * ( ( FirstVNF_CPU - ACS ) + Min( MDR ,DDR ) ) ) * ( ( ( ARS + MDR ) - ( MDR + FirstVNF_RAM ) ) - Max( ( PN / CRS ),( ACS * CRS ) ) ) )", "choosing": "( Max( MUM,RRSe ) * ( ( DS / ( MLU * MUR ) ) * Max( RRSe,MUC ) ) )", "obj1": 0.6861598440545809, "obj2": 0.3644805088886096}, {"determining": "Min( ( FirstVNF_Mem_Server * FirstVNF_CPU ) ,Min( Max( ACS,FirstVNF_CPU_Server ) ,( Max( ( MRS / FirstVNF_Mem ),Const ) / ( RRS / FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * RCSe ) ,MUC ) ) ,( RCSe + RCSe ) )", "obj1": 0.30214424951267055, "obj2": 0.7021983783580842}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( DS * RMSe ) )", "obj1": 0.38596491228070173, "obj2": 0.58993661905283}, {"determining": "( ( PN / ACS ) - ( FirstVNF_RAM * ( ( MRS / BR ) - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Min( Min( MUM ,DS ) ,( MUM + ( MUR / CS ) ) )", "obj1": 0.47953216374269003, "obj2": 0.513441172163862}, {"determining": "( ( FirstVNF_RAM * RRS ) + ( ( RRS / CRS ) - Max( PN,FirstVNF_Mem ) ) )", "choosing": "( ( MUR / Min( MUM ,DS ) ) - ( RRSe / ( RRSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),( BR / PN ) )", "choosing": "( ( ( RCSe / MLU ) - ( MUM * MUM ) ) - ( Max( ( MUR + MLU ),( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( ( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( ( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "Min( Max( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Max( ( Min( ( MLU / MUM ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( ( ( MUC - RMSe ) + ( ( Min( MUR ,CS ) / MUC ) + RRSe ) ) + MUC ) / ( MUM - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Max( Min( MRS ,( FirstVNF_CPU * DDR ) ),( MRS + FirstVNF_CPU ) )", "choosing": "( ( CS - RMSe ) - ( Max( ( DS * MUM ),( MUC / MUR ) ) / RMSe ) )", "obj1": 0.3060428849902534, "obj2": 0.7014123113249592}, {"determining": "( ( ( DDR * FirstVNF_Mem ) - ( ARS + AMS ) ) + Min( FirstVNF_Mem_Server ,Max( MDR,AMS ) ) )", "choosing": "( ( MUM + Max( CS,CS ) ) + Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( DS * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( ( BR - CRS ) / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( MUM + Max( CS,CS ) ) + ( ( CS + MUC ) * RRSe ) ) ,( DS * RMSe ) )", "obj1": 0.5594541910331384, "obj2": 0.4305782127221007}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - MRS ) ,( ( ( ARS + DDR ) / ( Min( Min( ( ACS - RRS ) ,FirstVNF_CPU ) ,DDR ) / Const ) ) / ( FirstVNF_RAM_Server * AMS ) ) ) )", "choosing": "Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( Min( RMSe ,MUC ) * RMSe ) )", "obj1": 0.30214424951267055, "obj2": 0.7021983783580842}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,( ( CRS - FirstVNF_RAM_Server ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "Min( ( RRS / Min( RRS ,FirstVNF_RAM_Server ) ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( Min( Min( ( RRSe - Min( RRSe ,DS ) ) ,( DS / MUR ) ) ,MUR ) ,( MUC + MUR ) )", "obj1": 0.2826510721247563, "obj2": 0.7264817632301269}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ( DDR * FirstVNF_CPU ) - BR ) * RRS ) )", "choosing": "( Max( RMSe,RCSe ) / ( ( MUM * Min( MLU ,MUR ) ) * ( CS * MUC ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "( ( ( MRS * AMS ) + FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe + RMSe ) / ( RMSe - MUR ) ) / Max( ( RRSe + RCSe ),( DS / RRSe ) ) ),( ( Min( RRSe ,CS ) - Max( MUM,MUR ) ) - ( ( CS - MLU ) + ( RCSe + ( ( MUM * Max( MLU,MUC ) ) * ( CS * MUC ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7166173188895232}, {"determining": "( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),( PN - BR ) ) / Max( ( PN * RRS ),( BR / ( Min( FirstVNF_RAM ,PN ) - ( DDR / Min( FirstVNF_Mem ,( RRS * DDR ) ) ) ) ) ) )", "choosing": "( ( ( DS - CS ) - ( RMSe * RCSe ) ) - ( MUR * MLU ) )", "obj1": 0.3333333333333333, "obj2": 0.6732318620840153}, {"determining": "( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),( PN - BR ) ) / Max( ( PN * RRS ),( BR / ( Min( FirstVNF_RAM ,PN ) - ( DDR / Min( FirstVNF_Mem ,( RRS * DDR ) ) ) ) ) ) )", "choosing": "( ( ( DS - CS ) - ( RMSe * RCSe ) ) - ( MUR * MLU ) )", "obj1": 0.3333333333333333, "obj2": 0.6732318620840153}, {"determining": "( Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),( PN - BR ) ) / Max( ( PN * RRS ),( BR / ( Min( FirstVNF_RAM ,PN ) - ( DDR / Min( FirstVNF_Mem ,( RRS * DDR ) ) ) ) ) ) )", "choosing": "( ( ( DS - CS ) - ( RMSe * RCSe ) ) - ( MUR * MLU ) )", "obj1": 0.3333333333333333, "obj2": 0.6732318620840153}, {"determining": "( Max( ( ACS / ACS ),( PN - BR ) ) / ( ( PN * RRS ) / ( BR / ( Min( FirstVNF_RAM ,PN ) - ( DDR / Min( FirstVNF_Mem ,( RRS * ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( MUR - MUR ) - ( MUR * MLU ) )", "obj1": 0.3333333333333333, "obj2": 0.6732318620840153}, {"determining": "( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * MUR ) - Max( MLU,MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server * PN ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "Min( Min( RRSe ,Max( ( Min( Max( MUM,MUM ) ,CS ) * ( RCSe * MUM ) ),( ( MUC - ( Min( MUR ,( MUC + DS ) ) - DS ) ) * MUM ) ) ) ,Max( CS,CS ) )", "obj1": 0.3216374269005848, "obj2": 0.6810737584176854}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( RRSe,( RCSe * MUM ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "Max( Max( MDR,PN ),( FirstVNF_Mem_Server - MRS ) )", "choosing": "( ( RCSe * MUR ) - Max( MLU,MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( ( MRS / BR ) - ( FirstVNF_Mem_Server - MRS ) ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( CS + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( ( RRS + FirstVNF_CPU ) + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( MLU - DS ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( ( RRS + FirstVNF_CPU ) + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}], "3": [{"determining": "Max( ( FirstVNF_Mem / AMS ),( ( Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM ) ) / Max( AMS,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) - Const ) )", "choosing": "Min( ( ( RMSe / MUM ) + Max( RCSe,MUM ) ) ,( Min( ( DS + RRSe ) ,Max( MUM,( ( MUC * RCSe ) + ( MLU * RRSe ) ) ) ) / CS ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Max( Min( MDR ,ACS ),( MDR * MDR ) )", "choosing": "( ( RCSe * MUR ) - Max( MLU,MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "Min( ( ( FirstVNF_Mem - MDR ) / AMS ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,( MLU / Min( Max( MUC,( MUR + ( RMSe / MUM ) ) ) ,DS ) ) ) / Max( RRSe,MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7320412616689894}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( BR / MRS ) ) ) )", "choosing": "( ( Max( MUM,MUC ) - RRSe ) + ( ( ( MUR - MUR ) + RMSe ) / Max( CS,RRSe ) ) )", "obj1": 0.5126705653021443, "obj2": 0.4705301059322334}, {"determining": "( ( BR * FirstVNF_CPU_Server ) - ( FirstVNF_CPU - AMS ) )", "choosing": "Max( ( CS + MLU ),Max( RCSe,RCSe ) )", "obj1": 0.34307992202729043, "obj2": 0.6624128055485027}, {"determining": "( ( ( AMS - AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) * ( Min( ARS ,BR ) + MRS ) )", "choosing": "Max( ( Max( RCSe,Max( MUR,Max( CS,MUC ) ) ) * Max( ( RCSe * Min( DS ,RMSe ) ),DS ) ),DS )", "obj1": 0.37816764132553604, "obj2": 0.6308371359435969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "( ( FirstVNF_Mem * ARS ) - ( Const * ( ( BR / MRS ) / Const ) ) )", "choosing": "Max( ( ( ( RRSe * MLU ) / CS ) * ( MLU - Max( MLU,Max( MUM,Max( CS,Min( DS ,RMSe ) ) ) ) ) ),( MLU / MUM ) )", "obj1": 0.5126705653021443, "obj2": 0.4705301059322334}, {"determining": "( ( MDR * Const ) - Min( ACS ,( AMS + CRS ) ) )", "choosing": "( Min( ( MUR / DS ) ,RMSe ) / ( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) / MUR ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( ( RRSe / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Max( ( ( AMS + CRS ) * Min( FirstVNF_Mem ,Const ) ),( ( MDR + PN ) - ( AMS * ACS ) ) )", "choosing": "( ( DS - MLU ) - ( ( MLU * RRSe ) * CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7320412616689894}, {"determining": "( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "Max( ( Min( CS ,( RRSe * MLU ) ) * ( MLU - ( MLU - RRSe ) ) ),( MLU / MUM ) )", "obj1": 0.2962962962962963, "obj2": 0.7134616828666042}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + Const ) + ( BR + Const ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MLU,MUC ) + Max( RRSe,RRSe ) )", "obj1": 0.3469785575048733, "obj2": 0.6332978755245474}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( DS * RMSe ) )", "obj1": 0.38596491228070173, "obj2": 0.58993661905283}, {"determining": "( ( PN / ACS ) - ( FirstVNF_RAM * ( ( MRS / BR ) - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Min( Min( MUM ,DS ) ,( MUM + ( MUR / CS ) ) )", "obj1": 0.47953216374269003, "obj2": 0.513441172163862}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),( BR / PN ) )", "choosing": "( ( ( RCSe / MLU ) - ( MUM * MUM ) ) - ( Max( ( MUR + MLU ),( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( ( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( ( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "Min( Max( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Max( ( Min( ( MLU / MUM ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( ( ( MUC - RMSe ) + ( ( Min( MUR ,CS ) / MUC ) + RRSe ) ) + MUC ) / ( MUM - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( ( BR - CRS ) / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( MUM + Max( CS,CS ) ) + ( ( CS + MUC ) * RRSe ) ) ,( DS * RMSe ) )", "obj1": 0.5594541910331384, "obj2": 0.4305782127221007}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,( ( CRS - FirstVNF_RAM_Server ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "Min( ( RRS / Min( RRS ,FirstVNF_RAM_Server ) ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( Min( Min( ( RRSe - Min( RRSe ,DS ) ) ,( DS / MUR ) ) ,MUR ) ,( MUC + MUR ) )", "obj1": 0.2826510721247563, "obj2": 0.7264817632301269}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ( DDR * FirstVNF_CPU ) - BR ) * RRS ) )", "choosing": "( Max( RMSe,RCSe ) / ( ( MUM * Min( MLU ,MUR ) ) * ( CS * MUC ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "( ( ( MRS * AMS ) + FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe + RMSe ) / ( RMSe - MUR ) ) / Max( ( RRSe + RCSe ),( DS / RRSe ) ) ),( ( Min( RRSe ,CS ) - Max( MUM,MUR ) ) - ( ( CS - MLU ) + ( RCSe + ( ( MUM * Max( MLU,MUC ) ) * ( CS * MUC ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7166173188895232}, {"determining": "( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * MUR ) - Max( MLU,MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server * PN ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "Min( Min( RRSe ,Max( ( Min( Max( MUM,MUM ) ,CS ) * ( RCSe * MUM ) ),( ( MUC - ( Min( MUR ,( MUC + DS ) ) - DS ) ) * MUM ) ) ) ,Max( CS,CS ) )", "obj1": 0.3216374269005848, "obj2": 0.6810737584176854}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( RRSe,( RCSe * MUM ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "Max( Max( MDR,PN ),( FirstVNF_Mem_Server - MRS ) )", "choosing": "( ( RCSe * MUR ) - Max( MLU,MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( ( MRS / BR ) - ( FirstVNF_Mem_Server - MRS ) ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( CS + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( ( RRS + FirstVNF_CPU ) + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( MLU - DS ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( ( RRS + FirstVNF_CPU ) + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( RRSe,( RCSe * MUM ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( Min( FirstVNF_CPU ,Const ) + BR ) ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + Min( RMSe ,( CS * DS ) ) )", "obj1": 0.5009746588693957, "obj2": 0.481252437424867}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + ( RMSe - RMSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( DS * RMSe ) )", "obj1": 0.38596491228070173, "obj2": 0.58993661905283}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + ( RMSe - RMSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( RRS + FirstVNF_CPU ) + Max( FirstVNF_CPU,ACS ) )", "choosing": "Max( ( ( ( RRSe * MUR ) * ( MUR / CS ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6888816507116325}, {"determining": "( ( RRS + FirstVNF_CPU ) + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( MDR / ( BR / MRS ) ) ) )", "choosing": "( ( DS * RCSe ) + ( ( ( MUR - MUR ) + RMSe ) / Max( CS,RRSe ) ) )", "obj1": 0.4444444444444444, "obj2": 0.541248573246677}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( BR / MRS ) ) ) )", "choosing": "( ( DS * RCSe ) / Min( RCSe ,MUM ) )", "obj1": 0.49317738791423, "obj2": 0.5009183934427098}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( BR / MRS ) ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( ( ( ( MUR - MUR ) + RMSe ) / Max( CS,RRSe ) ) / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4840019683555169}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( BR / MRS ) ) ) )", "choosing": "( ( Max( MUM,MUC ) - RRSe ) + ( ( ( MUR - MUR ) + RMSe ) / Max( CS,RRSe ) ) )", "obj1": 0.5126705653021443, "obj2": 0.4705301059322334}, {"determining": "( ( ( MRS * CRS ) * FirstVNF_CPU ) + Max( ARS,( FirstVNF_RAM_Server + RRS ) ) )", "choosing": "Max( ( ( Min( MLU ,DS ) * Min( RMSe ,MUC ) ) / RCSe ),Max( RRSe,CS ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Max( ( Max( MUC,( MUC * Min( Min( MLU ,MUR ) ,( MUC + MLU ) ) ) ) * ( RCSe - MLU ) ),Max( RRSe,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( MUR + RMSe ) / DS ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.29434697855750486, "obj2": 0.716565803818137}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + ( ( MDR * Const ) - ( RRS - MRS ) ) ) + ( BR + Const ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6998873963100798}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,Min( ACS ,PN ) )", "choosing": "( Min( ( MUR + ( ( RCSe - MUM ) + ( ( RMSe / MUC ) - RMSe ) ) ) ,Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * MUR ) - Max( MLU,MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "Min( Min( ARS ,BR ) ,( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) - ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( ( ( RCSe + MUM ) + Min( Min( RCSe ,Min( MLU ,( MUC + MUR ) ) ) ,CS ) ) * MUR ) * MLU ) / Max( RMSe,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( ( MUM * MLU ) * ( CS * MUC ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "Min( Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) - ( DDR / FirstVNF_CPU_Server ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7243720044891048}, {"determining": "( ( ( BR * Const ) - ARS ) - ( FirstVNF_RAM * ( ( MRS / BR ) - ( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( MLU - RRSe ) * Min( MLU ,DS ) ) ,( Min( DS ,MUC ) - ( MUC - ( Min( MUR ,( RCSe / Min( ( MUC - CS ) ,MLU ) ) ) - ( RMSe - MUM ) ) ) ) )", "obj1": 0.47953216374269003, "obj2": 0.513441172163862}, {"determining": "( ( BR / Const ) - ( PN * Min( Const ,( ( Min( FirstVNF_RAM ,RRS ) / Max( FirstVNF_CPU,Const ) ) - Min( ( FirstVNF_RAM_Server - DDR ) ,( MDR * ( FirstVNF_CPU_Server / ACS ) ) ) ) ) ) )", "choosing": "( Min( MUC ,CS ) - ( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( BR / Const ) - ( PN + FirstVNF_RAM ) )", "choosing": "( Min( MUC ,CS ) - ( ( Max( ( Max( ( MUR - MUM ),RMSe ) - CS ),MLU ) / MLU ) + ( MUC / RCSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "Max( Max( MDR,PN ),( FirstVNF_Mem_Server - MRS ) )", "choosing": "Min( ( Min( Max( RCSe,MUC ) ,( RRSe - MUR ) ) * ( Min( RMSe ,RRSe ) + ( MUM / MLU ) ) ) ,Min( Min( ( RCSe + MUC ) ,Max( RRSe,MUM ) ) ,( ( RRSe / CS ) * ( DS + MUM ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "( ( BR * FirstVNF_CPU_Server ) - ( FirstVNF_CPU - AMS ) )", "choosing": "( ( Min( MLU ,MUR ) - ( RRSe + CS ) ) / ( ( RMSe - MLU ) / ( MUR / RMSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6624128055485027}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),Min( ACS ,CRS ) ) * FirstVNF_CPU )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( Max( Min( RCSe ,( RCSe + RMSe ) ),RMSe ) / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),MUM )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "( ( RCSe * MUR ) - Max( MLU,MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( ( DDR * FirstVNF_Mem ) ,( BR - BR ) )", "choosing": "Min( ( CS * RMSe ) ,( RRSe + CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7253527608544178}, {"determining": "Max( ( MDR + PN ),Min( ( ( FirstVNF_Mem_Server + ( MRS * FirstVNF_RAM_Server ) ) / Min( AMS ,MRS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR / CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( ( ( Max( MUR,CS ) + Max( MUM,Min( MUM ,MLU ) ) ) * RCSe ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( Max( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Max( ( Min( ( MLU / MUM ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( ( ( MUC - RMSe ) + ( ( Min( MUR ,CS ) / MUC ) + RRSe ) ) + MUC ) / ( MUM - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( Max( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Max( ( Min( ( MLU / MUM ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( ( ( MUC - RMSe ) + ( ( Min( MUR ,CS ) / MUC ) + RRSe ) ) + MUC ) / ( MUM - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( Max( Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Max( ( Min( ( MLU / MUM ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( ( ( MUC - RMSe ) + ( ( Min( MUR ,CS ) / MUC ) + RRSe ) ) + MUC ) / ( MUM - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( Max( Min( ( Min( ARS ,FirstVNF_CPU_Server ) / ( MRS + Const ) ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * ( ARS * FirstVNF_CPU ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Max( ( Min( ( MLU / MUM ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( Max( Min( ( Min( ARS ,FirstVNF_CPU_Server ) / ( MRS + Const ) ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * ( ARS * FirstVNF_CPU ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( DS + MUR ) + ( RMSe * RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( ( ( AMS + MRS ) - ( ARS * CRS ) ) ,Max( FirstVNF_RAM,Max( Max( Max( ARS,FirstVNF_RAM ),( FirstVNF_RAM_Server / ARS ) ),ARS ) ) )", "choosing": "Max( ( ( Min( MUC ,Min( Min( MUR ,MUR ) ,( MLU - ( ( MUC - CS ) + ( RCSe * MUM ) ) ) ) ) + ( CS + DS ) ) / CS ),Max( RCSe,RCSe ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server * PN ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "Min( Min( RRSe ,Max( ( Min( Max( MUM,MUM ) ,CS ) * ( RCSe * MUM ) ),( ( MUC - ( Min( MUR ,( MUC + DS ) ) - DS ) ) * MUM ) ) ) ,Max( CS,CS ) )", "obj1": 0.3216374269005848, "obj2": 0.6810737584176854}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server * PN ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "Min( Min( RRSe ,Max( ( Min( Max( MUM,MUM ) ,CS ) * ( RCSe * MUM ) ),( ( MUC - ( Min( MUR ,( MUC + DS ) ) - DS ) ) * MUM ) ) ) ,Max( CS,CS ) )", "obj1": 0.3216374269005848, "obj2": 0.6810737584176854}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server * PN ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "Min( Min( RRSe ,Max( ( Min( Max( MUM,MUM ) ,CS ) * ( RCSe * MUM ) ),( ( MUC - ( Min( MUR ,( MUC + DS ) ) - DS ) ) * MUM ) ) ) ,Max( CS,CS ) )", "obj1": 0.3216374269005848, "obj2": 0.6810737584176854}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "Min( Min( RRSe ,Max( Max( ( RCSe * MUM ),Min( Max( MUM,MUM ) ,CS ) ),( ( MUC - ( Min( MUR ,DS ) - DS ) ) * MUM ) ) ) ,Max( CS,CS ) )", "obj1": 0.3216374269005848, "obj2": 0.6810737584176854}, {"determining": "( Max( ( BR + ( ( FirstVNF_RAM * ( MRS - ARS ) ) + FirstVNF_RAM_Server ) ),Max( ( ( DDR - Max( ( FirstVNF_Mem / Const ),PN ) ) * FirstVNF_CPU_Server ),ARS ) ) - Max( RRS,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Min( ( ( CS - MUR ) * Max( RCSe,MUR ) ) ,MUM ) / Max( ( ( MUC / Min( MUM ,DS ) ) + MLU ),Min( MLU ,MLU ) ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( ( RRS / Min( RRS ,FirstVNF_RAM_Server ) ) ,( AMS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Min( ( RRSe - MUR ) ,( DS / MUR ) ) ,MUR ) ,( MUC + MLU ) )", "obj1": 0.2826510721247563, "obj2": 0.7264817632301269}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,DS ) / Max( RRSe,MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7320412616689894}, {"determining": "( ( PN / PN ) - ( FirstVNF_RAM * ( ( MRS / BR ) - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Min( Min( MUM ,DS ) ,( MUM + ( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5314941354443288}, {"determining": "( ( PN / ACS ) - ( FirstVNF_RAM * ( ( MRS / BR ) - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 0.4580896686159844, "obj2": 0.5336947154054471}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( ( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6708214328112952}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( ( RRS + FirstVNF_CPU ) + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "( ( Max( MUM,MUC ) - RRSe ) + Max( ( Min( CS ,( RRSe * MLU ) ) * ( MLU - MUC ) ),( MLU / MUM ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( Min( ARS ,( Max( MRS,Const ) * ( MDR - FirstVNF_RAM ) ) ) / Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),ACS ) )", "choosing": "( ( DS * MUR ) + ( Min( ( ( MUR * ( Min( ( MUC - MUM ) ,Max( CS,DS ) ) - ( DS * MUC ) ) ) + MUM ) ,MUM ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) ) + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( MLU - DS ),( ( ( CS * RRSe ) / ( RRSe - Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( DS * RMSe ) )", "obj1": 0.3508771929824561, "obj2": 0.6308481776263186}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( BR / Const ) - ( PN * Min( Const ,BR ) ) ) ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( MUC + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.700763463942518}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Min( ( PN + FirstVNF_CPU_Server ) ,( RRS / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * Max( Min( CS ,RRSe ),( CS * ( ( RRSe / ( MUM / CS ) ) + DS ) ) ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( Min( MUC ,RCSe ) / MUC ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),( BR / PN ) )", "choosing": "Min( Min( RRSe ,Max( Max( ( RCSe * MUM ),Min( Max( MUM,MUM ) ,CS ) ),( ( MUC - ( Min( MUR ,DS ) - DS ) ) * MUM ) ) ) ,Max( CS,CS ) )", "obj1": 0.3216374269005848, "obj2": 0.6810737584176854}, {"determining": "( ( Min( Min( ARS ,PN ) ,( AMS * RRS ) ) * ( ( FirstVNF_CPU - ACS ) + ( MDR * DDR ) ) ) * ( ( ( ARS + MDR ) - ( MDR + FirstVNF_RAM ) ) - Max( ( PN / ( ACS + MRS ) ),( ACS * CRS ) ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - ( MUC + ( ( ( Max( MUC,CS ) / RRSe ) / ( MLU * ( CS * RCSe ) ) ) / Max( RCSe,MUM ) ) ) ) ) + ( RMSe - RMSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( FirstVNF_RAM - ARS ) + Max( FirstVNF_CPU,FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( Min( RRSe ,RMSe ) - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( ( ( AMS - AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) * ( MDR + MRS ) )", "choosing": "Max( ( Max( MUC,( MUC * RCSe ) ) * ( RCSe - MLU ) ),DS )", "obj1": 0.37816764132553604, "obj2": 0.6308371359435969}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( ( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( ( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Max( MLU,MUR ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "( ( RCSe * MUR ) - Max( MLU,MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6841392183873213}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( BR / MRS ) ) ) )", "choosing": "Max( ( Min( CS ,( RRSe * MLU ) ) * ( MLU - MUC ) ),( MLU / MUM ) )", "obj1": 0.5126705653021443, "obj2": 0.4705301059322334}], "4": [{"determining": "Max( ( FirstVNF_Mem / AMS ),( ( Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM ) ) / Max( AMS,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) - Const ) )", "choosing": "Min( ( ( RMSe / MUM ) + Max( RCSe,MUM ) ) ,( Min( ( DS + RRSe ) ,Max( MUM,( ( MUC * RCSe ) + ( MLU * RRSe ) ) ) ) / CS ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( MDR * Const ) - Min( ACS ,( AMS + CRS ) ) )", "choosing": "( Min( ( MUR / DS ) ,RMSe ) / ( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) / MUR ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( ( RRSe / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "Max( ( Min( CS ,( RRSe * MLU ) ) * ( MLU - ( MLU - RRSe ) ) ),( MLU / MUM ) )", "obj1": 0.2962962962962963, "obj2": 0.7134616828666042}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MLU,MUC ) + Max( RRSe,RRSe ) )", "obj1": 0.3469785575048733, "obj2": 0.6332978755245474}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( DS * RMSe ) )", "obj1": 0.38596491228070173, "obj2": 0.58993661905283}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),( BR / PN ) )", "choosing": "( ( ( RCSe / MLU ) - ( MUM * MUM ) ) - ( Max( ( MUR + MLU ),( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( RRS / Min( RRS ,FirstVNF_RAM_Server ) ) ,( ARS / FirstVNF_RAM ) )", "choosing": "Min( Min( Min( ( RRSe - Min( RRSe ,DS ) ) ,( DS / MUR ) ) ,MUR ) ,( MUC + MUR ) )", "obj1": 0.2826510721247563, "obj2": 0.7264817632301269}, {"determining": "( ( ( MRS * AMS ) + FirstVNF_Mem ) / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "Max( ( ( ( RMSe + RMSe ) / ( RMSe - MUR ) ) / Max( ( RRSe + RCSe ),( DS / RRSe ) ) ),( ( Min( RRSe ,CS ) - Max( MUM,MUR ) ) - ( ( CS - MLU ) + ( RCSe + ( ( MUM * Max( MLU,MUC ) ) * ( CS * MUC ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7166173188895232}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( RRSe,( RCSe * MUM ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( RRSe,( RCSe * MUM ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( Min( FirstVNF_CPU ,Const ) + BR ) ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + Min( RMSe ,( CS * DS ) ) )", "obj1": 0.5009746588693957, "obj2": 0.481252437424867}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + ( RMSe - RMSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( DS * RMSe ) )", "obj1": 0.38596491228070173, "obj2": 0.58993661905283}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + ( RMSe - RMSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( RRS + FirstVNF_CPU ) + Max( FirstVNF_CPU,ACS ) )", "choosing": "Max( ( ( ( RRSe * MUR ) * ( MUR / CS ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6888816507116325}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( MDR / ( BR / MRS ) ) ) )", "choosing": "( ( DS * RCSe ) + ( ( ( MUR - MUR ) + RMSe ) / Max( CS,RRSe ) ) )", "obj1": 0.4444444444444444, "obj2": 0.541248573246677}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( BR / MRS ) ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( ( ( ( MUR - MUR ) + RMSe ) / Max( CS,RRSe ) ) / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4840019683555169}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( MUR + RMSe ) / DS ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.29434697855750486, "obj2": 0.716565803818137}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,Min( ACS ,PN ) )", "choosing": "( Min( ( MUR + ( ( RCSe - MUM ) + ( ( RMSe / MUC ) - RMSe ) ) ) ,Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( ( BR / Const ) - ( PN * Min( Const ,( ( Min( FirstVNF_RAM ,RRS ) / Max( FirstVNF_CPU,Const ) ) - Min( ( FirstVNF_RAM_Server - DDR ) ,( MDR * ( FirstVNF_CPU_Server / ACS ) ) ) ) ) ) )", "choosing": "( Min( MUC ,CS ) - ( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( BR / Const ) - ( PN + FirstVNF_RAM ) )", "choosing": "( Min( MUC ,CS ) - ( ( Max( ( Max( ( MUR - MUM ),RMSe ) - CS ),MLU ) / MLU ) + ( MUC / RCSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "Min( ( DDR * FirstVNF_Mem ) ,( BR - BR ) )", "choosing": "Min( ( CS * RMSe ) ,( RRSe + CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7253527608544178}, {"determining": "Max( ( MDR + PN ),Min( ( ( FirstVNF_Mem_Server + ( MRS * FirstVNF_RAM_Server ) ) / Min( AMS ,MRS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR / CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( ( ( Max( MUR,CS ) + Max( MUM,Min( MUM ,MLU ) ) ) * RCSe ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( BR + ( ( FirstVNF_RAM * ( MRS - ARS ) ) + FirstVNF_RAM_Server ) ),Max( ( ( DDR - Max( ( FirstVNF_Mem / Const ),PN ) ) * FirstVNF_CPU_Server ),ARS ) ) - Max( RRS,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Min( ( ( CS - MUR ) * Max( RCSe,MUR ) ) ,MUM ) / Max( ( ( MUC / Min( MUM ,DS ) ) + MLU ),Min( MLU ,MLU ) ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( ( RRS / Min( RRS ,FirstVNF_RAM_Server ) ) ,( AMS - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( Min( ( RRSe - MUR ) ,( DS / MUR ) ) ,MUR ) ,( MUC + MLU ) )", "obj1": 0.2826510721247563, "obj2": 0.7264817632301269}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( ( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6708214328112952}, {"determining": "( Min( ARS ,( Max( MRS,Const ) * ( MDR - FirstVNF_RAM ) ) ) / Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),ACS ) )", "choosing": "( ( DS * MUR ) + ( Min( ( ( MUR * ( Min( ( MUC - MUM ) ,Max( CS,DS ) ) - ( DS * MUC ) ) ) + MUM ) ,MUM ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( DS * RMSe ) )", "obj1": 0.3508771929824561, "obj2": 0.6308481776263186}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( BR / Const ) - ( PN * Min( Const ,BR ) ) ) ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( MUC + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.700763463942518}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Min( ( PN + FirstVNF_CPU_Server ) ,( RRS / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * Max( Min( CS ,RRSe ),( CS * ( ( RRSe / ( MUM / CS ) ) + DS ) ) ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( Min( MUC ,RCSe ) / MUC ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( Min( Min( ARS ,PN ) ,( AMS * RRS ) ) * ( ( FirstVNF_CPU - ACS ) + ( MDR * DDR ) ) ) * ( ( ( ARS + MDR ) - ( MDR + FirstVNF_RAM ) ) - Max( ( PN / ( ACS + MRS ) ),( ACS * CRS ) ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - ( MUC + ( ( ( Max( MUC,CS ) / RRSe ) / ( MLU * ( CS * RCSe ) ) ) / Max( RCSe,MUM ) ) ) ) ) + ( RMSe - RMSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( FirstVNF_RAM / MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( Max( Min( ARS ,FirstVNF_CPU ),CRS ) - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,MUR ) - ( ( ( CS / RRSe ) * RCSe ) * MUR ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( ( ACS - MRS ) - ( MDR * ( MRS - MRS ) ) )", "choosing": "( Max( ( Min( ( Max( CS,RMSe ) * MUC ) ,DS ) / DS ),RMSe ) / ( MLU / RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7219071106986972}, {"determining": "( ( PN / PN ) - ( FirstVNF_RAM * ( ( MRS / BR ) - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Min( Min( MUM ,DS ) ,( MUM + ( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) )", "obj1": 0.4600389863547758, "obj2": 0.5255833700497848}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ) / ( BR / MRS ) ) ) )", "choosing": "( ( MUR - RMSe ) + ( ( ( MUR - MUR ) + RMSe ) / Max( CS,RRSe ) ) )", "obj1": 0.4327485380116959, "obj2": 0.554058933018121}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( MDR / ( BR / MRS ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.541248573246677}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( BR / Const ) - ( PN * Min( Const ,BR ) ) ) ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + ( RMSe - RMSe ) )", "obj1": 0.3001949317738791, "obj2": 0.700763463942518}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - ( MRS / BR ) ),( ( Const + FirstVNF_Mem_Server ) * ( RRS * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( Max( ( DS + MUR ),MLU ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( DS + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( Max( Min( ( ( FirstVNF_Mem - MDR ) / AMS ) ,( DDR * FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( ( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( ( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( RCSe * ( MLU / DS ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6997517779651254}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( MDR / ( BR / MRS ) ) ) )", "choosing": "Min( Min( MUM ,DS ) ,( MUM + ( MUR / CS ) ) )", "obj1": 0.4444444444444444, "obj2": 0.541248573246677}, {"determining": "Min( Max( Min( ( Min( ( ( ( AMS - AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) * Min( FirstVNF_CPU ,Const ) ) ,FirstVNF_CPU_Server ) / ( MRS + Const ) ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * ( ARS * FirstVNF_CPU ) ) ) ,( ( Max( BR,FirstVNF_Mem ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Max( ( Min( ( MLU / MUM ) ,( CS / MUC ) ) / ( ( MUM + CS ) / Max( RMSe,MLU ) ) ),( ( ( Max( Max( CS,RCSe ),CS ) / ( MUC / MLU ) ) / Max( MUC,( MUC * RCSe ) ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6837456792097852}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + ( ( MDR * Const ) - ( RRS - MRS ) ) ) + ( BR + Const ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,Const ) / FirstVNF_Mem_Server ) ),( FirstVNF_CPU / PN ) )", "choosing": "( Min( Min( CS ,CS ) ,( MUR + RMSe ) ) / ( RMSe / RRSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( ( MRS / BR ) - ( FirstVNF_Mem_Server - MRS ) ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,( ( CRS - FirstVNF_RAM_Server ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( CS + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.48927875243664715, "obj2": 0.49269407527638964}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU - MRS ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( ARS * FirstVNF_RAM ) ),BR ) - Min( ACS ,MRS ) ) + ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe - RCSe ) + ( RCSe / MUM ) ) ) / Max( ( RMSe * MUM ),RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Min( PN ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( MUM - ( Max( CS,CS ) - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( DS * RMSe ) )", "obj1": 0.3508771929824561, "obj2": 0.6308481776263186}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ,( DS * RMSe ) )", "obj1": 0.3508771929824561, "obj2": 0.6308481776263186}, {"determining": "( Max( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ),( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Max( MLU,MUR ) / ( Max( RMSe,( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.6773613625556074}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - Max( RRS,( BR + Const ) ) )", "choosing": "Min( ( ( Min( ( Max( Max( Min( RCSe ,MUC ),( MUC - RRSe ) ),MUM ) * RCSe ) ,MUR ) * RCSe ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "Min( Min( RRSe ,Max( Max( ( RCSe * MUM ),Min( Max( MUM,MUM ) ,CS ) ),( ( MUC - ( Min( MUR ,DS ) - DS ) ) * MUM ) ) ) ,Max( CS,CS ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 0.2962962962962963, "obj2": 0.7134616828666042}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( BR * FirstVNF_CPU_Server ) - ( FirstVNF_CPU - AMS ) ) ) )", "choosing": "Max( ( Max( Max( RCSe,RCSe ),( MUC * Min( Min( MLU ,MUR ) ,( MUC + MLU ) ) ) ) * ( RCSe - MLU ) ),Max( RRSe,RCSe ) )", "obj1": 0.34307992202729043, "obj2": 0.6589493884051185}, {"determining": "Min( ( ( AMS + MRS ) - ( ARS * CRS ) ) ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_RAM_Server / ARS ) ) ,ARS ) ) )", "choosing": "Max( ( ( Min( MUC ,Min( Min( MUR ,MUR ) ,( MLU - ( CS + ( RCSe * MUM ) ) ) ) ) + ( CS + DS ) ) / MUM ),Max( RCSe,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6888816507116325}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ACS,( ( ( BR - MDR ) + ( MDR - DDR ) ) + Max( ARS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),Min( Min( RRSe ,MUR ) ,( RCSe / MUM ) ) ) / ( ( ( RCSe / Min( ( DS - DS ) ,RRSe ) ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) / ( BR * ( ( FirstVNF_CPU_Server * ( Max( ( MRS / CRS ),( Max( FirstVNF_Mem_Server,MRS ) - CRS ) ) / ( FirstVNF_RAM_Server / PN ) ) ) + ( Min( DDR ,MDR ) / ACS ) ) ) )", "choosing": "Min( ( MUR * RRSe ) ,Max( DS,( RRSe - MUM ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( ( Max( PN,FirstVNF_RAM_Server ) - MDR ) ,ACS ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( BR ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ) ) ,Max( ( MRS * Max( ( Const / RRS ),FirstVNF_CPU ) ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / DS ) ) / ( Min( MUM ,RCSe ) + MLU ) ),( ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) + ( ( CS * RRSe ) / ( RRSe - CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( ( ( BR / ( Const - ( PN / DDR ) ) ) + AMS ) + FirstVNF_CPU_Server ) + ( MRS + MRS ) )", "choosing": "( ( MLU / RCSe ) / ( RCSe * MUM ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( RRS / Max( ( ACS * Max( ( ACS / FirstVNF_CPU_Server ),AMS ) ),DDR ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - ( MUC / RRSe ) ) ) + ( ( RRSe * ( MUC - ( ( MUC - Min( CS ,( MUR * RRSe ) ) ) + ( MUR / ( MLU / MUM ) ) ) ) ) - RMSe ) )", "obj1": 0.2826510721247563, "obj2": 0.7264817632301269}, {"determining": "( ( Min( Min( ARS ,PN ) ,( AMS * RRS ) ) * ( ( FirstVNF_CPU - ACS ) + Min( MDR ,DDR ) ) ) * ( ( ( ARS + MDR ) - ( MDR + FirstVNF_RAM ) ) - Max( ( PN / CRS ),( ACS * CRS ) ) ) )", "choosing": "Min( Min( Min( ( RRSe - MUR ) ,( DS / MUR ) ) ,MUR ) ,( MUC + MLU ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_RAM - MRS ) + ( MDR / CRS ) ) - ( Const * ( Const / ( BR / CRS ) ) ) ) ) / Max( ACS,( MRS + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUR ) ),RRSe ) / ( ( ( ( RRSe / ( Min( Min( MUC ,RMSe ) ,MUC ) - ( MUR / ( DS / MUC ) ) ) ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.484821179264568}, {"determining": "( Min( ( DDR - AMS ) ,ARS ) / Max( ( MRS + FirstVNF_CPU ),MRS ) )", "choosing": "( Max( ( ( MLU * Min( ( MLU * RCSe ) ,MLU ) ) * Max( ( MUM * MUR ),MUM ) ),( ( RRSe / RCSe ) + ( MUM / RCSe ) ) ) / ( ( ( ( RRSe / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( FirstVNF_RAM_Server / ARS ) - ( ( MRS + FirstVNF_Mem_Server ) * Const ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( ( RRSe * Min( ( MLU + ( CS / MUC ) ) ,MLU ) ) + CS ) - Max( MUC,RRSe ) ) ) + ( CS + ( MUM * MUM ) ) )", "obj1": 0.47173489278752434, "obj2": 0.512785817163456}, {"determining": "( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( BR / MRS ) ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + ( RMSe - RMSe ) )", "obj1": 0.5009746588693957, "obj2": 0.481252437424867}, {"determining": "( ( PN / Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) ) ) - ( FirstVNF_RAM * ( ( MRS / BR ) - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Min( Min( MUM ,DS ) ,( ( RRSe - Max( ( MUM - ( RCSe - RCSe ) ),Min( ( CS * DS ) ,MUC ) ) ) + ( MUR / CS ) ) )", "obj1": 0.4697855750487329, "obj2": 0.5137976832943045}, {"determining": "( ( BR / Const ) - ( PN * Min( Const ,( ( Min( FirstVNF_RAM ,RRS ) / Max( DDR,Const ) ) - Min( ( FirstVNF_RAM_Server - DDR ) ,( MDR * ( FirstVNF_CPU_Server / ACS ) ) ) ) ) ) )", "choosing": "( Min( MUC ,CS ) - ( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - MUR ) ) + RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( BR / Const ) - ( PN * Min( Const ,( ( Min( FirstVNF_RAM ,RRS ) / Max( FirstVNF_CPU,Const ) ) - Min( ( FirstVNF_RAM_Server - DDR ) ,( MDR * ( FirstVNF_CPU_Server / ACS ) ) ) ) ) ) )", "choosing": "( Min( MUC ,CS ) - ( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( PN / ACS ) - ( FirstVNF_RAM * ( ( MRS / BR ) - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "Max( ( Min( CS ,( RRSe * MLU ) ) * ( MLU - MUC ) ),( MLU / MUM ) )", "obj1": 0.4853801169590643, "obj2": 0.496041795221203}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( RRSe,( RCSe * MUM ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( ( FirstVNF_RAM + RRS ) + Min( FirstVNF_CPU_Server ,( ( BR * FirstVNF_Mem_Server ) + BR ) ) )", "choosing": "( ( Max( MLU,MUR ) - Max( CS,CS ) ) * ( ( MUM / RRSe ) - ( ( ( ( Min( CS ,( MUM * RRSe ) ) - ( RRSe * RMSe ) ) + ( MLU * ( ( DS / CS ) / MLU ) ) ) / ( MLU * Min( Min( Min( RCSe ,CS ) ,CS ) ,RMSe ) ) ) / RCSe ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( RRSe,( RCSe * MUM ) ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6708214328112952}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Min( ( ( FirstVNF_Mem_Server + Max( AMS,MRS ) ) / Min( MRS ,AMS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR / CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( RCSe ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( FirstVNF_Mem_Server + Max( AMS,MRS ) ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,( MUM * MUM ) ) / Max( RRSe,MUR ) )", "obj1": 0.2807017543859649, "obj2": 0.7311400914070357}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( PN / ACS ) - ( FirstVNF_RAM * ( ( MRS / BR ) - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.4580896686159844, "obj2": 0.530458672341069}, {"determining": "Min( ( FirstVNF_CPU * Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR + RMSe ) + Max( RRSe,RRSe ) )", "obj1": 0.36062378167641324, "obj2": 0.6175766916800518}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6332978755245474}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_RAM_Server ) ) ) ,( ( ACS + FirstVNF_CPU ) - ( FirstVNF_Mem + ( RRS * Max( ( RRS - CRS ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RRSe ,RCSe ) / Min( RCSe ,MUC ) ) ) + ( ( DS + DS ) - RRSe ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( RRS + FirstVNF_CPU ) + ( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( BR / MRS ) ) ) ) )", "choosing": "Max( ( ( ( RRSe * MUR ) * ( MUR / CS ) ) / ( Max( RMSe,MLU ) / ( ( ( ( MUR - MUR ) + RMSe ) / Max( CS,RRSe ) ) + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.4678362573099415, "obj2": 0.5166059597867895}, {"determining": "( ( RRS + FirstVNF_CPU ) + Max( FirstVNF_CPU,ACS ) )", "choosing": "Max( ( ( ( RRSe * MUR ) * ( MUR / CS ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6888816507116325}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( BR / MRS ) ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( ( ( ( MUR - MUR ) + RMSe ) / Max( CS,RRSe ) ) / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4840019683555169}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * ( ( ( FirstVNF_RAM - MRS ) + BR ) - ( Const * ( Const / ( BR / MRS ) ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( ( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4840019683555169}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( ( ( ( MUR - MUR ) + RMSe ) / Max( CS,RRSe ) ) / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6708214328112952}, {"determining": "( ( FirstVNF_CPU / ( ARS * ( ( ( PN + MDR ) + BR ) - ( PN - FirstVNF_CPU_Server ) ) ) ) - ( MRS - RRS ) )", "choosing": "Min( Min( DS ,( MLU * ( MLU * MLU ) ) ) ,( MUM + ( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.716565803818137}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( MLU,MUC ) + Max( Max( ( RCSe * MUM ),Min( Max( MUM,MUM ) ,CS ) ),RRSe ) )", "obj1": 0.3469785575048733, "obj2": 0.6332978755245474}, {"determining": "Min( Max( ( Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( Min( ( MUM - DS ) ,Min( CS ,MUC ) ) + ( Min( MLU ,DS ) - Max( MUC,RRSe ) ) ) + ( RMSe - RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "Max( ( Min( CS ,( RRSe * MLU ) ) * ( MLU - ( MLU - RRSe ) ) ),( MLU / MUM ) )", "obj1": 0.2962962962962963, "obj2": 0.7134616828666042}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),MDR ) ,( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( MUM * ( CS * MUR ) ) )", "obj1": 0.290448343079922, "obj2": 0.7175786796050571}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( Max( RMSe,RCSe ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( Max( Const,MDR ) / FirstVNF_CPU_Server ) ),( ( BR + RRS ) - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) ) * ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( MUM / ( ( Min( MUR ,RCSe ) + ( DS - MUR ) ) * ( MUR * MUR ) ) ),( ( ( CS * RRSe ) / ( RRSe - Min( ( Min( ( MUR - MUM ) ,( CS * MUR ) ) + ( CS / DS ) ) ,RRSe ) ) ) / ( Min( RCSe ,RRSe ) * Min( RRSe ,MUM ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7264817632301269}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.3157894736842105, "obj2": 0.679680981555654}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Min( ( FirstVNF_RAM + MRS ) ,Max( Const,Const ) ) / ARS ) ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - Min( ( MUM * Min( ( RMSe + ( MUR + RCSe ) ) ,MUC ) ) ,RCSe ) ) + ( MUC * ( DS / MLU ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( Max( Max( Min( ( Min( ARS ,FirstVNF_CPU_Server ) / ( MRS + Const ) ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + Const ) * ( ARS * FirstVNF_CPU ) ) ),PN ),Min( ( MRS + FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR / CRS ) ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + MUM ) + ( MLU + Max( MUC,MUC ) ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( Max( Min( ( Min( ARS ,FirstVNF_CPU_Server ) / ( MRS + Const ) ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * ( ARS * FirstVNF_CPU ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),FirstVNF_RAM ) ,( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( ( MLU + RRSe ) * Min( MLU ,DS ) ) ,( Min( DS ,MUC ) - ( MLU * RMSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652604}, {"determining": "Min( ( DDR * FirstVNF_Mem ) ,( BR - BR ) )", "choosing": "Min( ( CS * RMSe ) ,( RRSe + CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7253527608544178}, {"determining": "( ( Min( Min( ARS ,PN ) ,( AMS * RRS ) ) * ( ( FirstVNF_CPU - ACS ) + Min( MDR ,DDR ) ) ) * ( ( Max( Min( MDR ,ACS ),( MDR * MDR ) ) - ( MDR + FirstVNF_RAM ) ) - Max( ( PN / CRS ),( ACS * CRS ) ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - MLU ) ) + ( RMSe - RMSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( Min( Min( ARS ,PN ) ,( AMS * RRS ) ) * ( ( FirstVNF_CPU - ACS ) + Min( MDR ,DDR ) ) ) * ( ( ( ARS + MDR ) - ( MDR + FirstVNF_RAM ) ) - Max( ( PN / CRS ),( ACS * CRS ) ) ) )", "choosing": "( ( RCSe * MUR ) - Max( MLU,MUR ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "Max( Min( MDR ,BR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,( Min( MDR ,Max( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) + ( PN + CRS ) ) ) ) ) )", "choosing": "Min( Min( RRSe ,Max( Max( ( RCSe * MUM ),Min( Max( MUM,MUM ) ,CS ) ),( ( Max( MUR,MUM ) * RMSe ) * ( MUC - ( Min( MUR ,DS ) - DS ) ) ) ) ) ,Max( CS,MUC ) )", "obj1": 0.2826510721247563, "obj2": 0.7264817632301269}], "5": [{"determining": "Max( ( FirstVNF_Mem / AMS ),( ( Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM ) ) / Max( AMS,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) - Const ) )", "choosing": "Min( ( ( RMSe / MUM ) + Max( RCSe,MUM ) ) ,( Min( ( DS + RRSe ) ,Max( MUM,( ( MUC * RCSe ) + ( MLU * RRSe ) ) ) ) / CS ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( MDR * Const ) - Min( ACS ,( AMS + CRS ) ) )", "choosing": "( Min( ( MUR / DS ) ,RMSe ) / ( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) / MUR ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( ( RRSe / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),( BR / PN ) )", "choosing": "( ( ( RCSe / MLU ) - ( MUM * MUM ) ) - ( Max( ( MUR + MLU ),( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( RRSe,( RCSe * MUM ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( RRSe,( RCSe * MUM ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( ( RRS + FirstVNF_CPU ) + Max( FirstVNF_CPU,ACS ) )", "choosing": "Max( ( ( ( RRSe * MUR ) * ( MUR / CS ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6888816507116325}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,Min( ACS ,PN ) )", "choosing": "( Min( ( MUR + ( ( RCSe - MUM ) + ( ( RMSe / MUC ) - RMSe ) ) ) ,Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( ( MDR + PN ),Min( ( ( FirstVNF_Mem_Server + ( MRS * FirstVNF_RAM_Server ) ) / Min( AMS ,MRS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR / CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( ( ( Max( MUR,CS ) + Max( MUM,Min( MUM ,MLU ) ) ) * RCSe ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( BR + ( ( FirstVNF_RAM * ( MRS - ARS ) ) + FirstVNF_RAM_Server ) ),Max( ( ( DDR - Max( ( FirstVNF_Mem / Const ),PN ) ) * FirstVNF_CPU_Server ),ARS ) ) - Max( RRS,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Min( ( ( CS - MUR ) * Max( RCSe,MUR ) ) ,MUM ) / Max( ( ( MUC / Min( MUM ,DS ) ) + MLU ),Min( MLU ,MLU ) ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( ARS ,( Max( MRS,Const ) * ( MDR - FirstVNF_RAM ) ) ) / Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),ACS ) )", "choosing": "( ( DS * MUR ) + ( Min( ( ( MUR * ( Min( ( MUC - MUM ) ,Max( CS,DS ) ) - ( DS * MUC ) ) ) + MUM ) ,MUM ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Min( ( PN + FirstVNF_CPU_Server ) ,( RRS / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * Max( Min( CS ,RRSe ),( CS * ( ( RRSe / ( MUM / CS ) ) + DS ) ) ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( Min( MUC ,RCSe ) / MUC ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( FirstVNF_RAM / MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( Max( Min( ARS ,FirstVNF_CPU ),CRS ) - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,MUR ) - ( ( ( CS / RRSe ) * RCSe ) * MUR ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( ( ACS - MRS ) - ( MDR * ( MRS - MRS ) ) )", "choosing": "( Max( ( Min( ( Max( CS,RMSe ) * MUC ) ,DS ) / DS ),RMSe ) / ( MLU / RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7219071106986972}, {"determining": "Min( Max( Min( ( Min( ( ( ( AMS - AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) * Min( FirstVNF_CPU ,Const ) ) ,FirstVNF_CPU_Server ) / ( MRS + Const ) ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * ( ARS * FirstVNF_CPU ) ) ) ,( ( Max( BR,FirstVNF_Mem ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Max( ( Min( ( MLU / MUM ) ,( CS / MUC ) ) / ( ( MUM + CS ) / Max( RMSe,MLU ) ) ),( ( ( Max( Max( CS,RCSe ),CS ) / ( MUC / MLU ) ) / Max( MUC,( MUC * RCSe ) ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6837456792097852}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + ( ( MDR * Const ) - ( RRS - MRS ) ) ) + ( BR + Const ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,Const ) / FirstVNF_Mem_Server ) ),( FirstVNF_CPU / PN ) )", "choosing": "( Min( Min( CS ,CS ) ,( MUR + RMSe ) ) / ( RMSe / RRSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU - MRS ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( ARS * FirstVNF_RAM ) ),BR ) - Min( ACS ,MRS ) ) + ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe - RCSe ) + ( RCSe / MUM ) ) ) / Max( ( RMSe * MUM ),RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Max( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ),( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Max( MLU,MUR ) / ( Max( RMSe,( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.6773613625556074}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - Max( RRS,( BR + Const ) ) )", "choosing": "Min( ( ( Min( ( Max( Max( Min( RCSe ,MUC ),( MUC - RRSe ) ),MUM ) * RCSe ) ,MUR ) * RCSe ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( ( ( AMS + MRS ) - ( ARS * CRS ) ) ,Max( FirstVNF_RAM,Min( Max( MRS,( FirstVNF_RAM_Server / ARS ) ) ,ARS ) ) )", "choosing": "Max( ( ( Min( MUC ,Min( Min( MUR ,MUR ) ,( MLU - ( CS + ( RCSe * MUM ) ) ) ) ) + ( CS + DS ) ) / MUM ),Max( RCSe,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6888816507116325}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ACS,( ( ( BR - MDR ) + ( MDR - DDR ) ) + Max( ARS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),Min( Min( RRSe ,MUR ) ,( RCSe / MUM ) ) ) / ( ( ( RCSe / Min( ( DS - DS ) ,RRSe ) ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) / ( BR * ( ( FirstVNF_CPU_Server * ( Max( ( MRS / CRS ),( Max( FirstVNF_Mem_Server,MRS ) - CRS ) ) / ( FirstVNF_RAM_Server / PN ) ) ) + ( Min( DDR ,MDR ) / ACS ) ) ) )", "choosing": "Min( ( MUR * RRSe ) ,Max( DS,( RRSe - MUM ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( ( Max( PN,FirstVNF_RAM_Server ) - MDR ) ,ACS ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( BR ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ) ) ,Max( ( MRS * Max( ( Const / RRS ),FirstVNF_CPU ) ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / DS ) ) / ( Min( MUM ,RCSe ) + MLU ) ),( ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) + ( ( CS * RRSe ) / ( RRSe - CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( ( ( BR / ( Const - ( PN / DDR ) ) ) + AMS ) + FirstVNF_CPU_Server ) + ( MRS + MRS ) )", "choosing": "( ( MLU / RCSe ) / ( RCSe * MUM ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( Min( ( DDR - AMS ) ,ARS ) / Max( ( MRS + FirstVNF_CPU ),MRS ) )", "choosing": "( Max( ( ( MLU * Min( ( MLU * RCSe ) ,MLU ) ) * Max( ( MUM * MUR ),MUM ) ),( ( RRSe / RCSe ) + ( MUM / RCSe ) ) ) / ( ( ( ( RRSe / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( RRSe,( RCSe * MUM ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( ( FirstVNF_RAM + RRS ) + Min( FirstVNF_CPU_Server ,( ( BR * FirstVNF_Mem_Server ) + BR ) ) )", "choosing": "( ( Max( MLU,MUR ) - Max( CS,CS ) ) * ( ( MUM / RRSe ) - ( ( ( ( Min( CS ,( MUM * RRSe ) ) - ( RRSe * RMSe ) ) + ( MLU * ( ( DS / CS ) / MLU ) ) ) / ( MLU * Min( Min( Min( RCSe ,CS ) ,CS ) ,RMSe ) ) ) / RCSe ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Min( ( ( FirstVNF_Mem_Server + Max( AMS,MRS ) ) / Min( MRS ,AMS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR / CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( RCSe ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( FirstVNF_Mem_Server + Max( AMS,MRS ) ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,( MUM * MUM ) ) / Max( RRSe,MUR ) )", "obj1": 0.2807017543859649, "obj2": 0.7311400914070357}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_RAM_Server ) ) ) ,( ( ACS + FirstVNF_CPU ) - ( FirstVNF_Mem + ( RRS * Max( ( RRS - CRS ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RRSe ,RCSe ) / Min( RCSe ,MUC ) ) ) + ( ( DS + DS ) - RRSe ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( RRS + FirstVNF_CPU ) + Max( FirstVNF_CPU,ACS ) )", "choosing": "Max( ( ( ( RRSe * MUR ) * ( MUR / CS ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6888816507116325}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( Max( RMSe,RCSe ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Min( ( FirstVNF_RAM + MRS ) ,Max( Const,Const ) ) / ARS ) ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - Min( ( MUM * Min( ( RMSe + ( MUR + RCSe ) ) ,MUC ) ) ,RCSe ) ) + ( MUC * ( DS / MLU ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( Max( Max( Min( ( Min( ARS ,FirstVNF_CPU_Server ) / ( MRS + Const ) ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + Const ) * ( ARS * FirstVNF_CPU ) ) ),PN ),Min( ( MRS + FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR / CRS ) ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + MUM ) + ( MLU + Max( MUC,MUC ) ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( Max( Min( ( Min( ARS ,FirstVNF_CPU_Server ) / ( MRS + Const ) ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * ( ARS * FirstVNF_CPU ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),FirstVNF_RAM ) ,( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( ( MLU + RRSe ) * Min( MLU ,DS ) ) ,( Min( DS ,MUC ) - ( MLU * RMSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652604}, {"determining": "( ( MRS * Const ) - ( RRS - ( ( Min( Const ,FirstVNF_RAM_Server ) * MRS ) / Min( MDR ,ACS ) ) ) )", "choosing": "( ( RMSe / Max( ( Max( RMSe,( RMSe + MUM ) ) * ( MUM + MLU ) ),( MUR - Min( Min( CS ,RMSe ) ,CS ) ) ) ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( ( ( CRS / FirstVNF_Mem ) / MDR ) * FirstVNF_CPU ) / Max( ( MRS + ARS ),ACS ) )", "choosing": "( Max( DS,RCSe ) / ( RMSe - RCSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( ( RRSe / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( FirstVNF_Mem_Server ,( ( BR / Const ) - ( PN * Min( Const ,BR ) ) ) ) / Max( ( BR - BR ),ACS ) )", "choosing": "( RRSe + ( RMSe - RMSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7006335567815412}, {"determining": "( ( CRS / ( ACS * FirstVNF_RAM_Server ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MUC ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) - MLU ) + CS ) ) * DS ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),Min( PN ,MDR ) ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Min( MLU ,DS ) - DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( Max( Min( MDR ,( PN * PN ) ),PN ) - DDR ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( Const,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( ( ( MUC / ( MUM * DS ) ) + MLU ) + Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MUM ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( AMS,Min( ( ( FirstVNF_Mem_Server + Max( AMS,MRS ) ) / Min( MRS ,AMS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR / CRS ) ) ) )", "choosing": "( ( ( ( RCSe - RCSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Min( Max( Min( ( Min( ARS ,FirstVNF_CPU_Server ) / ( MRS + Const ) ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * ( ARS * FirstVNF_CPU ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.290448343079922, "obj2": 0.7162975454539511}, {"determining": "Min( Max( Min( ( Min( ARS ,FirstVNF_CPU_Server ) / ( MRS + Const ) ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * ( ARS * FirstVNF_CPU ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( ( MDR - MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,( ( Const - ( CRS * Const ) ) - PN ) ) )", "choosing": "Min( ( ( ( Max( ( ( RCSe / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( MUC - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( ( ( MDR * Const ) - ( RRS - MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( MUR + RMSe ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + RRS ) ,( ( ACS + FirstVNF_CPU ) - ( CRS * Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( DS / Min( ( DS * DS ) ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RRSe - RCSe ) - ( MUC * ( MLU * DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + ( ( MDR * Const ) - ( RRS - MRS ) ) ) + ( BR + Const ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( Min( ( Min( ARS ,FirstVNF_CPU_Server ) / ( MRS + Const ) ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * ( ARS * FirstVNF_CPU ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - MLU ) ) + ( RMSe - RMSe ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( RRS / Min( RRS ,FirstVNF_RAM_Server ) ) ,( AMS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( RCSe ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( DDR * FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( Min( ( ( Min( ( MLU / DS ) ,MLU ) - ( RRSe * Max( CS,RMSe ) ) ) + DS ) ,RCSe ) + ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ),( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( FirstVNF_RAM + FirstVNF_RAM ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Max( MLU,MUR ) / ( Max( RMSe,( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * CS ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.6773613625556074}, {"determining": "( Max( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ),( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Max( MLU,MUR ) / ( Max( RMSe,( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.6773613625556074}, {"determining": "( Max( ( FirstVNF_Mem_Server / ( PN + ARS ) ),ACS ) / Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( Max( ( ( RRSe * CS ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( Min( Max( MUR,MUM ) ,CS ) * MUM ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Min( ( PN + FirstVNF_CPU_Server ) ,( RRS / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * Max( Min( CS ,RRSe ),( CS * ( ( RRSe / ( MUM / CS ) ) + DS ) ) ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( Min( MUC ,RCSe ) / MUC ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Min( ( PN + FirstVNF_CPU_Server ) ,( RRS / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * Max( Min( CS ,RRSe ),( CS * ( ( RRSe / ( MUM / CS ) ) + DS ) ) ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( Min( MUC ,RCSe ) / MUC ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Min( ( PN + FirstVNF_CPU_Server ) ,( RRS / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * Max( Min( CS ,RRSe ),( CS * ( ( RRSe / ( MUM / CS ) ) + DS ) ) ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( Min( MUC ,RCSe ) / MUC ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Max( ACS,( FirstVNF_Mem + MDR ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( MUR + CS ) * ( MUM + RCSe ) ) + ( MLU + ( RRSe / RMSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( RRSe,( RCSe * MUM ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( ( Max( Min( MDR ,ACS ),( MDR * MDR ) ) - ( MDR + FirstVNF_RAM ) ) + FirstVNF_CPU ),ACS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( ( ( RMSe - RMSe ) / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7065646793426803}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( ( RRSe / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( MRS - BR ) ,MDR ) - DDR ) ,DDR ) ) )", "choosing": "Max( ( Min( CS ,( RRSe * MLU ) ) * ( ( MUC / ( MUM * DS ) ) - ( MLU - RRSe ) ) ),( MLU / MUM ) )", "obj1": 0.29434697855750486, "obj2": 0.71473932070038}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( ( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( MDR + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( RRSe / ( Min( Min( MUC ,RMSe ) ,MUC ) - ( MUR / ( DS / MUC ) ) ) ) ) / ( ( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6962161353799313}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( ( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUR ) ),RRSe ) / ( ( ( ( RRSe / ( Min( Min( MUC ,RMSe ) ,MUC ) - ( MUR / ( DS / MUC ) ) ) ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( FirstVNF_RAM + MRS ) + ( ( FirstVNF_CPU_Server + MRS ) * ( ( MDR - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,CS ) - Max( RRSe,MUR ) ) * ( ( MUM / RRSe ) - Max( RRSe,( RCSe * MUM ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6760450116239409}, {"determining": "( ( RRS + FirstVNF_CPU ) + Max( FirstVNF_CPU,ACS ) )", "choosing": "Max( ( ( ( RRSe * MUR ) * ( MUR / CS ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6888816507116325}, {"determining": "( Max( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ),( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Max( MLU,MUR ) / ( Max( RMSe,( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.6773613625556074}, {"determining": "Min( ( FirstVNF_Mem_Server + Max( AMS,MRS ) ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,( MUM * MUM ) ) / Max( RRSe,MUR ) )", "obj1": 0.2807017543859649, "obj2": 0.7311400914070357}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) / ( BR * ( ( FirstVNF_CPU_Server * ( Max( ( MRS / CRS ),( Max( FirstVNF_Mem_Server,MRS ) - CRS ) ) / ( FirstVNF_RAM_Server / PN ) ) ) + ( Min( DDR ,MDR ) / ACS ) ) ) )", "choosing": "Min( ( MUR * RRSe ) ,Max( DS,( RRSe - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6929996136338399}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) / ( BR * ( ( FirstVNF_CPU_Server * ( Max( ( MRS / CRS ),( Max( FirstVNF_Mem_Server,MRS ) - CRS ) ) / ( FirstVNF_RAM_Server / PN ) ) ) + ( Min( DDR ,MDR ) / ACS ) ) ) )", "choosing": "Min( ( MUR * RRSe ) ,Max( DS,( RRSe - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6929996136338399}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) / ( BR * ( ( FirstVNF_CPU_Server * ( Max( ( MRS / CRS ),( Max( FirstVNF_Mem_Server,MRS ) - CRS ) ) / ( FirstVNF_RAM_Server / PN ) ) ) + ( Min( DDR ,MDR ) / ACS ) ) ) )", "choosing": "Min( ( MUR * RRSe ) ,Max( DS,( RRSe - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6929996136338399}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ACS,( MRS + ( ACS / ACS ) ) ) )", "choosing": "Min( Min( MUR ,RRSe ) ,Max( DS,( MUR + RCSe ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6929996136338399}, {"determining": "( ( Min( Min( ARS ,( ( Max( MRS,ARS ) - FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ,( AMS * RRS ) ) * MDR ) * ( ( ( ARS + MDR ) - ( MDR + FirstVNF_RAM ) ) - Max( ( PN / ( ACS + MRS ) ),( ACS - CRS ) ) ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( CS + RMSe ) - ( MUC + ( ( CS * Max( MUM,Max( RRSe,RCSe ) ) ) / Max( RCSe,MUC ) ) ) ) ) + ( RMSe - RMSe ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,Max( CRS,Max( ACS,BR ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( MLU - ( Max( MLU,MLU ) + MUM ) ) ) - ( ( RCSe - RRSe ) * ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 0.28460038986354774, "obj2": 0.7239803682380633}, {"determining": "( Min( ARS ,( Max( MRS,Const ) * Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU_Server ) ,( BR / ( AMS * FirstVNF_RAM_Server ) ) ) ) ) ) / Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),ACS ) )", "choosing": "( ( MUM - ( RCSe - RCSe ) ) + ( Min( ( ( MUR * ( Min( ( MUC - MUM ) ,Max( CS,DS ) ) - ( DS * MUC ) ) ) + MUM ) ,MUM ) * RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6784114553522358}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Max( MLU,MUR ) / ( Max( RMSe,( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) ) / ( MUM + CS ) ) ),MUR )", "obj1": 0.3216374269005848, "obj2": 0.6773613625556074}, {"determining": "( Max( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ),( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Min( Min( Min( ( RRSe - Min( RRSe ,DS ) ) ,( DS / MUR ) ) ,MUR ) ,( MUC + MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6773613625556074}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ),( FirstVNF_CPU - MRS ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) + ( ( RRS + CRS ) - ( FirstVNF_CPU_Server * ( FirstVNF_CPU + ( ( MDR / FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( RMSe / CS ) + ( RMSe / RCSe ) ) * ( ( ( ( ( MLU - RCSe ) * MUR ) / RMSe ) - DS ) * Max( RMSe,RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Min( Max( ( FirstVNF_CPU - MRS ),( Max( DDR,MDR ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) + Min( FirstVNF_CPU ,( Max( Max( ( MDR / FirstVNF_Mem ),( FirstVNF_Mem * ARS ) ),( AMS + Const ) ) / CRS ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( Max( RMSe,CS ) + ( RMSe / RCSe ) ) * ( ( ( ( ( ( MUC - CS ) + MUR ) + CS ) / RMSe ) - DS ) * Max( MLU,RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) + FirstVNF_RAM ) ,( Min( FirstVNF_Mem ,( Const - ( ARS / Max( MRS,FirstVNF_CPU ) ) ) ) - CRS ) ) - ( RRS - MRS ) )", "choosing": "( Min( RCSe ,MUM ) / ( DS * ( ( ( MLU / MLU ) / MLU ) / ( DS / RCSe ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( ( ( FirstVNF_RAM_Server * ARS ) / ( Min( MRS ,CRS ) + FirstVNF_Mem ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( ( ( RCSe - MUC ) + DS ) + MUM ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),( ( MDR - AMS ) / ( Const - RRS ) ) )", "choosing": "( Max( MUM,MUM ) - ( Min( Min( MUM ,RRSe ) ,MLU ) - ( MUM * MUM ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( FirstVNF_CPU ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( MUR + RMSe ) / DS ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ),( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Max( ( MRS * MDR ),Max( PN,ACS ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( ( CS - MUR ) - RMSe ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.6773613625556074}, {"determining": "( Max( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ),( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Max( MLU,MUR ) / ( Max( RMSe,( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.6773613625556074}, {"determining": "Min( ( ( ARS + ( RRS / ( Const / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) * ( ACS * FirstVNF_Mem ) ) ,( ( ARS * CRS ) + ( AMS + MRS ) ) )", "choosing": "Max( CS,( ( MLU - ( ( MLU / ( ( Max( RRSe,RCSe ) - ( CS + MUM ) ) / MUC ) ) * Min( Min( DS ,( CS / Min( CS ,CS ) ) ) ,Max( ( ( CS * MUM ) * MLU ),( CS + ( DS / RRSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6888816507116325}, {"determining": "Min( ( ( AMS + MRS ) - ( DDR + BR ) ) ,Max( Max( ACS,BR ),Max( Max( MRS,Min( FirstVNF_RAM_Server ,ARS ) ),ARS ) ) )", "choosing": "Max( ( ( ( RCSe / ( MLU + Max( Max( ( DS + DS ),Max( DS,MUC ) ),Max( Max( CS,CS ),RCSe ) ) ) ) + ( MUC / Min( Min( MUR ,MUR ) ,( MLU - ( CS + ( RRSe * MUM ) ) ) ) ) ) / MUM ),Max( RCSe,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6888816507116325}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) - Min( ACS ,MRS ) )", "choosing": "( Min( MUC ,CS ) - ( ( Min( Min( CS ,MUC ) ,( MUR - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + Min( MLU ,DS ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( ( RRSe / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Min( Max( Min( ( Min( Max( ( ( FirstVNF_CPU_Server - AMS ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( MDR + MRS ) ) ,FirstVNF_CPU_Server ) / ( MRS + ( CRS * MRS ) ) ) ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),( ( Const + FirstVNF_Mem_Server ) * ( ARS * FirstVNF_CPU ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( Max( CS,MUR ) - ( RCSe * ( RRSe * DS ) ) ) * Min( ( Max( RCSe,MLU ) * MUM ) ,( ( Min( MUM ,( RCSe + MUM ) ) - ( RCSe + MLU ) ) / Max( ( RMSe * ( ( Max( DS,RRSe ) * ( MLU + CS ) ) / ( ( RMSe / RMSe ) + ( CS - RMSe ) ) ) ),MLU ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6837456792097852}], "6": [{"determining": "Max( ( FirstVNF_Mem / AMS ),( ( Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM ) ) / Max( AMS,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) - Const ) )", "choosing": "Min( ( ( RMSe / MUM ) + Max( RCSe,MUM ) ) ,( Min( ( DS + RRSe ) ,Max( MUM,( ( MUC * RCSe ) + ( MLU * RRSe ) ) ) ) / CS ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( MDR * Const ) - Min( ACS ,( AMS + CRS ) ) )", "choosing": "( Min( ( MUR / DS ) ,RMSe ) / ( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) / MUR ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( ( RRSe / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,Min( ACS ,PN ) )", "choosing": "( Min( ( MUR + ( ( RCSe - MUM ) + ( ( RMSe / MUC ) - RMSe ) ) ) ,Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( BR + ( ( FirstVNF_RAM * ( MRS - ARS ) ) + FirstVNF_RAM_Server ) ),Max( ( ( DDR - Max( ( FirstVNF_Mem / Const ),PN ) ) * FirstVNF_CPU_Server ),ARS ) ) - Max( RRS,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Min( ( ( CS - MUR ) * Max( RCSe,MUR ) ) ,MUM ) / Max( ( ( MUC / Min( MUM ,DS ) ) + MLU ),Min( MLU ,MLU ) ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( ARS ,( Max( MRS,Const ) * ( MDR - FirstVNF_RAM ) ) ) / Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),ACS ) )", "choosing": "( ( DS * MUR ) + ( Min( ( ( MUR * ( Min( ( MUC - MUM ) ,Max( CS,DS ) ) - ( DS * MUC ) ) ) + MUM ) ,MUM ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Min( ( PN + FirstVNF_CPU_Server ) ,( RRS / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * Max( Min( CS ,RRSe ),( CS * ( ( RRSe / ( MUM / CS ) ) + DS ) ) ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( Min( MUC ,RCSe ) / MUC ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + ( ( MDR * Const ) - ( RRS - MRS ) ) ) + ( BR + Const ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,Const ) / FirstVNF_Mem_Server ) ),( FirstVNF_CPU / PN ) )", "choosing": "( Min( Min( CS ,CS ) ,( MUR + RMSe ) ) / ( RMSe / RRSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU - MRS ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( ARS * FirstVNF_RAM ) ),BR ) - Min( ACS ,MRS ) ) + ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe - RCSe ) + ( RCSe / MUM ) ) ) / Max( ( RMSe * MUM ),RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - Max( RRS,( BR + Const ) ) )", "choosing": "Min( ( ( Min( ( Max( Max( Min( RCSe ,MUC ),( MUC - RRSe ) ),MUM ) * RCSe ) ,MUR ) * RCSe ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ACS,( ( ( BR - MDR ) + ( MDR - DDR ) ) + Max( ARS,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),Min( Min( RRSe ,MUR ) ,( RCSe / MUM ) ) ) / ( ( ( RCSe / Min( ( DS - DS ) ,RRSe ) ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) / ( BR * ( ( FirstVNF_CPU_Server * ( Max( ( MRS / CRS ),( Max( FirstVNF_Mem_Server,MRS ) - CRS ) ) / ( FirstVNF_RAM_Server / PN ) ) ) + ( Min( DDR ,MDR ) / ACS ) ) ) )", "choosing": "Min( ( MUR * RRSe ) ,Max( DS,( RRSe - MUM ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( ( Max( PN,FirstVNF_RAM_Server ) - MDR ) ,ACS ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( BR ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ) ) ,Max( ( MRS * Max( ( Const / RRS ),FirstVNF_CPU ) ),Max( PN,ACS ) ) ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / DS ) ) / ( Min( MUM ,RCSe ) + MLU ) ),( ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) + ( ( CS * RRSe ) / ( RRSe - CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( ( DDR - AMS ) ,ARS ) / Max( ( MRS + FirstVNF_CPU ),MRS ) )", "choosing": "( Max( ( ( MLU * Min( ( MLU * RCSe ) ,MLU ) ) * Max( ( MUM * MUR ),MUM ) ),( ( RRSe / RCSe ) + ( MUM / RCSe ) ) ) / ( ( ( ( RRSe / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_RAM_Server ) ) ) ,( ( ACS + FirstVNF_CPU ) - ( FirstVNF_Mem + ( RRS * Max( ( RRS - CRS ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RRSe ,RCSe ) / Min( RCSe ,MUC ) ) ) + ( ( DS + DS ) - RRSe ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( Max( RMSe,RCSe ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Min( ( FirstVNF_RAM + MRS ) ,Max( Const,Const ) ) / ARS ) ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - Min( ( MUM * Min( ( RMSe + ( MUR + RCSe ) ) ,MUC ) ) ,RCSe ) ) + ( MUC * ( DS / MLU ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),FirstVNF_RAM ) ,( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( ( MLU + RRSe ) * Min( MLU ,DS ) ) ,( Min( DS ,MUC ) - ( MLU * RMSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652604}, {"determining": "( ( MRS * Const ) - ( RRS - ( ( Min( Const ,FirstVNF_RAM_Server ) * MRS ) / Min( MDR ,ACS ) ) ) )", "choosing": "( ( RMSe / Max( ( Max( RMSe,( RMSe + MUM ) ) * ( MUM + MLU ) ),( MUR - Min( Min( CS ,RMSe ) ,CS ) ) ) ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( ( ( ( CRS / FirstVNF_Mem ) / MDR ) * FirstVNF_CPU ) / Max( ( MRS + ARS ),ACS ) )", "choosing": "( Max( DS,RCSe ) / ( RMSe - RCSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( ( CRS / ( ACS * FirstVNF_RAM_Server ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MUC ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) - MLU ) + CS ) ) * DS ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),Min( PN ,MDR ) ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Min( MLU ,DS ) - DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( Max( Min( MDR ,( PN * PN ) ),PN ) - DDR ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( Const,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( ( ( MUC / ( MUM * DS ) ) + MLU ) + Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MUM ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( Max( Min( ( Min( ARS ,FirstVNF_CPU_Server ) / ( MRS + Const ) ) ,Max( FirstVNF_CPU,ARS ) ),( ( Const + FirstVNF_Mem_Server ) * ( ARS * FirstVNF_CPU ) ) ) ,( ( Max( BR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.290448343079922, "obj2": 0.7162975454539511}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( ( MDR - MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,( ( Const - ( CRS * Const ) ) - PN ) ) )", "choosing": "Min( ( ( ( Max( ( ( RCSe / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( MUC - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( ( ( MDR * Const ) - ( RRS - MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( MUR + RMSe ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + RRS ) ,( ( ACS + FirstVNF_CPU ) - ( CRS * Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( DS / Min( ( DS * DS ) ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RRSe - RCSe ) - ( MUC * ( MLU * DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + ( ( MDR * Const ) - ( RRS - MRS ) ) ) + ( BR + Const ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( ( DDR * FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( Min( ( ( Min( ( MLU / DS ) ,MLU ) - ( RRSe * Max( CS,RMSe ) ) ) + DS ) ,RCSe ) + ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( ( FirstVNF_Mem_Server / ( PN + ARS ) ),ACS ) / Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( Max( ( ( RRSe * CS ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( Min( Max( MUR,MUM ) ,CS ) * MUM ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( Max( RMSe,MLU ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Min( ( PN + FirstVNF_CPU_Server ) ,( RRS / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * Max( Min( CS ,RRSe ),( CS * ( ( RRSe / ( MUM / CS ) ) + DS ) ) ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( Min( MUC ,RCSe ) / MUC ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Min( ( PN + FirstVNF_CPU_Server ) ,( RRS / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * Max( Min( CS ,RRSe ),( CS * ( ( RRSe / ( MUM / CS ) ) + DS ) ) ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( Min( MUC ,RCSe ) / MUC ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Min( ( PN + FirstVNF_CPU_Server ) ,( RRS / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * Max( Min( CS ,RRSe ),( CS * ( ( RRSe / ( MUM / CS ) ) + DS ) ) ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( Min( MUC ,RCSe ) / MUC ) * RMSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Max( ACS,( FirstVNF_Mem + MDR ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( MUR + CS ) * ( MUM + RCSe ) ) + ( MLU + ( RRSe / RMSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( ( RRSe / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "( Max( ( Max( MDR,FirstVNF_CPU ) * ( BR / FirstVNF_CPU_Server ) ),( ( DDR + RRS ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( ( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUR ) ),RRSe ) / ( ( ( ( RRSe / ( Min( Min( MUC ,RMSe ) ,MUC ) - ( MUR / ( DS / MUC ) ) ) ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7033481575965889}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,Max( CRS,Max( ACS,BR ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( MLU - ( Max( MLU,MLU ) + MUM ) ) ) - ( ( RCSe - RRSe ) * ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 0.28460038986354774, "obj2": 0.7239803682380633}, {"determining": "( Min( ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) + FirstVNF_RAM ) ,( Min( FirstVNF_Mem ,( Const - ( ARS / Max( MRS,FirstVNF_CPU ) ) ) ) - CRS ) ) - ( RRS - MRS ) )", "choosing": "( Min( RCSe ,MUM ) / ( DS * ( ( ( MLU / MLU ) / MLU ) / ( DS / RCSe ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( ( ( FirstVNF_RAM_Server * ARS ) / ( Min( MRS ,CRS ) + FirstVNF_Mem ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( ( ( RCSe - MUC ) + DS ) + MUM ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),( ( MDR - AMS ) / ( Const - RRS ) ) )", "choosing": "( Max( MUM,MUM ) - ( Min( Min( MUM ,RRSe ) ,MLU ) - ( MUM * MUM ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( FirstVNF_CPU ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( MUR + RMSe ) / DS ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) - Min( ACS ,MRS ) )", "choosing": "( Min( MUC ,CS ) - ( ( Min( Min( CS ,MUC ) ,( MUR - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + Min( MLU ,DS ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ),( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( FirstVNF_RAM ,( ( ( FirstVNF_Mem - FirstVNF_Mem ) / MDR ) * MDR ) ) / Max( ACS,( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + Max( Max( ( ( MUR + RMSe ) / DS ),RMSe ),( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( ( MUC - ( RCSe * RMSe ) ) * MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( FirstVNF_RAM_Server * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + MUM ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - ( DDR - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + RCSe ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MUR / RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( ACS ,MRS ) ),( FirstVNF_CPU - MRS ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ( FirstVNF_CPU - FirstVNF_CPU_Server ) ,MRS ) ) + ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( RMSe / CS ) + ( RMSe / RCSe ) ) * ( ( ( ( ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) + CS ) / RMSe ) - DS ) * Max( MLU,RCSe ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7103212040291779}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU - MRS ) ) ,( ( Min( ACS ,MRS ) - Max( FirstVNF_CPU_Server,BR ) ) + ( ( ACS + FirstVNF_CPU ) - Min( CRS ,( Min( ( ACS * Min( FirstVNF_RAM_Server ,DDR ) ) ,( DDR / Const ) ) - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( Max( Min( MLU ,MLU ),( ( MUC / Max( RRSe,MUR ) ) + MLU ) ) / ( ( ( MUC + ( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( ( ( RMSe - RMSe ) / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / ( ( MDR * Const ) - ( RRS - MRS ) ) )", "choosing": "Min( ( Min( MUC ,CS ) - ( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + RCSe ) ) ,Max( DS,( MUR + RCSe ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7076497075726591}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) / Max( ACS,( ( ( RRS - MDR ) / ARS ) + ( ACS + ACS ) ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,MUC ) - Max( MUR,( Max( Max( ( MLU + Max( RMSe,RRSe ) ),Min( DS ,RRSe ) ),MUM ) - MLU ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( ( MRS / ARS ) - Max( Min( CRS ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( ( CS / Min( ( MUC / ( RRSe + MUR ) ) ,( Min( RCSe ,( RCSe + MUC ) ) * DS ) ) ) - ( RMSe * DS ) ) ) / Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + ( ( MDR * Const ) - ( RRS - MRS ) ) ) + ( BR + Const ) ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + MUM ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( ( MRS + FirstVNF_CPU ),ACS ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / ( PN / ( ACS + Max( FirstVNF_Mem,MRS ) ) ) )", "choosing": "( ( Max( CS,MUC ) / RRSe ) / ( ( ( MUR + DS ) * ( MUM + RCSe ) ) + ( CS - DS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7076497075726591}, {"determining": "( ARS / Max( ACS,( MRS + ( ACS / ACS ) ) ) )", "choosing": "Min( ( ( DS * RCSe ) / Min( RCSe ,MUM ) ) ,Max( DS,( MUR + RCSe ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7076497075726591}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,Const ),( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ) + ( ACS / Min( AMS ,Const ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) + Min( ( RRS - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + Min( MUC ,( CS * MUR ) ) ) ) ),( CS * MUM ) ) - ( MUM * MUC ) )", "obj1": 0.28654970760233917, "obj2": 0.7209515610682538}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7239803682380633}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * BR ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( CS,MUM ) * ( MLU * RMSe ) ) + Max( MUR,Min( ( Min( Max( ( MUC / MUR ),MUR ) ,( ( MUC + CS ) + RCSe ) ) / ( ( RRSe - ( RCSe / MUM ) ) * MUM ) ) ,CS ) ) ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ( Const - CRS ) + Min( AMS ,Const ) ) + ( Max( RRS,FirstVNF_RAM_Server ) - CRS ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( ( FirstVNF_CPU_Server + Const ) - ( BR + FirstVNF_CPU_Server ) ) ,MDR ) - DDR ) ,DDR ) ) )", "choosing": "Max( ( ( CS - ( RRSe * CS ) ) * ( ( MLU - RRSe ) - ( MUC / ( ( RMSe / CS ) * DS ) ) ) ),( MLU / MUM ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - Max( ( MDR + PN ),Min( ( ( FirstVNF_Mem_Server + ( MRS * FirstVNF_RAM_Server ) ) / Min( AMS ,MRS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR / CRS ) ) ) ) ) )", "choosing": "( Max( Max( MUM,Min( MUM ,MLU ) ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2807017543859649, "obj2": 0.7291166473058195}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( MUR + RMSe ) / DS ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( ( Min( ACS ,MRS ) + FirstVNF_RAM ) ,( DDR * ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - DS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( MUR / CS ) * ( RRSe * MUR ) ) ) - ( ( MUC - MUR ) / RRSe ) )", "obj1": 0.2807017543859649, "obj2": 0.7291166473058195}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - MLU ) ) + ( RMSe - RMSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Min( ( ( FirstVNF_Mem_Server + Max( AMS,MRS ) ) / Min( MRS ,AMS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR / CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( RCSe ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * AMS ) ) ) ,( ( ( DDR * AMS ) + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - ( RMSe + CS ) ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RMSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 0.28460038986354774, "obj2": 0.7239803682380633}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( Max( MLU,MUR ) / ( Max( RMSe,( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) ) / ( MUM + CS ) ) ),( ( ( CS * RRSe ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),( ( DDR - Max( Min( ( MRS - BR ) ,MDR ),PN ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( MUR + ( ( MUC / ( MUM * DS ) ) + MLU ) ) ,Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),( BR / PN ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( ( FirstVNF_Mem - ACS ) + ( Min( FirstVNF_Mem_Server ,( ACS * DDR ) ) - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( MLU + MLU ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RRSe - RCSe ) / ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( AMS * ( ( BR / MRS ) * CRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( ( ( MUM - Max( RCSe,MUR ) ) - DS ) + DS ) / MUR ) * ( DS - ( ( MUM + MUC ) * Max( MLU,Max( MUC,RRSe ) ) ) ) ) + Min( ( RRSe * MUR ) ,( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "( ( MDR * Max( Max( MDR,FirstVNF_RAM_Server ),( BR / PN ) ) ) - ( RRS - MRS ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) / Max( BR,( MRS + ( Min( DDR ,MDR ) / ACS ) ) ) )", "choosing": "Min( ( MUR * RRSe ) ,Max( DS,( MUR + ( RRSe * RRSe ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( ( ( ( ( ( CS - MUR ) - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) / ( CS + CS ) ) ),( ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) + ( ( CS * RRSe ) / ( RRSe - CS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Min( ( FirstVNF_RAM + MRS ) ,Max( Const,Const ) ) / ARS ) ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Max( ACS,Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( MUR + CS ) * ( MUM + RCSe ) ) + ( ( ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) / RMSe ) - DS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7076497075726591}, {"determining": "Min( ( FirstVNF_RAM_Server - AMS ) ,( ( ( FirstVNF_RAM_Server * AMS ) + FirstVNF_CPU ) - Min( Const ,Const ) ) )", "choosing": "( ( ( ( ( MLU + MUM ) / ( RRSe - CS ) ) + Max( Min( RCSe ,RRSe ),Min( RRSe ,RCSe ) ) ) + ( RMSe / ( RRSe / MUC ) ) ) - ( ( ( RMSe - RRSe ) + MUM ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + Min( ACS ,Max( Max( ACS,ACS ),MRS ) ) ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) - ( ( ( ( RMSe + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( ( ( CS + Max( ( MUR + MUM ),Max( RCSe,CS ) ) ) + MUC ) / RRSe ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + Const ) + ( BR + Const ) ) )", "choosing": "( ( Max( MUR,MLU ) - Max( CS,CS ) ) * ( ( MUM / RRSe ) - ( ( ( ( Min( CS ,( MUM * RRSe ) ) - ( RRSe * RMSe ) ) + ( MLU * ( ( DS / CS ) / MUM ) ) ) / MUR ) / RCSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - Min( ( MUM * Min( ( RMSe + ( MUR + RCSe ) ) ,MUC ) ) ,RCSe ) ) + ( MUC * ( DS / MLU ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( ( ( RRS / RRS ) - ACS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( ( ( ( MUM / MUM ) - Max( MUC,( MUR * CS ) ) ) * ( MLU + MUM ) ) * DS ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( Min( MUC ,RMSe ) / MUC ) * CS ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),PN ) ) * AMS ) * ARS ) ) - Max( ( Max( DDR,ARS ) + BR ),FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( ( ( RCSe * MUR ) / MUC ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / CS ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),FirstVNF_RAM ) ,( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( MLU / RCSe ) / ( RCSe * MUM ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652604}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,CRS ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),( FirstVNF_CPU_Server / ( ARS - BR ) ) ) ) )", "choosing": "Max( ( Max( MLU,MUR ) / ( Max( RMSe,( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - Max( ( DS + Max( DS,RMSe ) ),Max( Max( DS,RCSe ),( MUR * MLU ) ) ) ) ) / ( MUM + CS ) ) ),MUR )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( RCSe ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( FirstVNF_RAM,( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}], "7": [{"determining": "Max( ( FirstVNF_Mem / AMS ),( ( Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM ) ) / Max( AMS,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) - Const ) )", "choosing": "Min( ( ( RMSe / MUM ) + Max( RCSe,MUM ) ) ,( Min( ( DS + RRSe ) ,Max( MUM,( ( MUC * RCSe ) + ( MLU * RRSe ) ) ) ) / CS ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( MDR * Const ) - Min( ACS ,( AMS + CRS ) ) )", "choosing": "( Min( ( MUR / DS ) ,RMSe ) / ( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) / MUR ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,Min( ACS ,PN ) )", "choosing": "( Min( ( MUR + ( ( RCSe - MUM ) + ( ( RMSe / MUC ) - RMSe ) ) ) ,Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( BR + ( ( FirstVNF_RAM * ( MRS - ARS ) ) + FirstVNF_RAM_Server ) ),Max( ( ( DDR - Max( ( FirstVNF_Mem / Const ),PN ) ) * FirstVNF_CPU_Server ),ARS ) ) - Max( RRS,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( Min( ( ( CS - MUR ) * Max( RCSe,MUR ) ) ,MUM ) / Max( ( ( MUC / Min( MUM ,DS ) ) + MLU ),Min( MLU ,MLU ) ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + ( ( MDR * Const ) - ( RRS - MRS ) ) ) + ( BR + Const ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,Const ) / FirstVNF_Mem_Server ) ),( FirstVNF_CPU / PN ) )", "choosing": "( Min( Min( CS ,CS ) ,( MUR + RMSe ) ) / ( RMSe / RRSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ),( FirstVNF_Mem_Server + FirstVNF_Mem ) ) - Max( RRS,( BR + Const ) ) )", "choosing": "Min( ( ( Min( ( Max( Max( Min( RCSe ,MUC ),( MUC - RRSe ) ),MUM ) * RCSe ) ,MUR ) * RCSe ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_RAM_Server ) ) ) ,( ( ACS + FirstVNF_CPU ) - ( FirstVNF_Mem + ( RRS * Max( ( RRS - CRS ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RRSe ,RCSe ) / Min( RCSe ,MUC ) ) ) + ( ( DS + DS ) - RRSe ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( Max( RMSe,RCSe ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Min( ( FirstVNF_RAM + MRS ) ,Max( Const,Const ) ) / ARS ) ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - Min( ( MUM * Min( ( RMSe + ( MUR + RCSe ) ) ,MUC ) ) ,RCSe ) ) + ( MUC * ( DS / MLU ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),FirstVNF_RAM ) ,( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( ( MLU + RRSe ) * Min( MLU ,DS ) ) ,( Min( DS ,MUC ) - ( MLU * RMSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652604}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( ( CRS / ( ACS * FirstVNF_RAM_Server ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MUC ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) - MLU ) + CS ) ) * DS ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),Min( PN ,MDR ) ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Min( MLU ,DS ) - DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( Max( Min( MDR ,( PN * PN ) ),PN ) - DDR ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( Const,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( ( ( MUC / ( MUM * DS ) ) + MLU ) + Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MUM ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( ( MDR - MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,( ( Const - ( CRS * Const ) ) - PN ) ) )", "choosing": "Min( ( ( ( Max( ( ( RCSe / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( MUC - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( ( ( MDR * Const ) - ( RRS - MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( MUR + RMSe ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + RRS ) ,( ( ACS + FirstVNF_CPU ) - ( CRS * Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( DS / Min( ( DS * DS ) ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RRSe - RCSe ) - ( MUC * ( MLU * DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + ( ( MDR * Const ) - ( RRS - MRS ) ) ) + ( BR + Const ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( ( DDR * FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( Min( ( ( Min( ( MLU / DS ) ,MLU ) - ( RRSe * Max( CS,RMSe ) ) ) + DS ) ,RCSe ) + ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,Max( CRS,Max( ACS,BR ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( MLU - ( Max( MLU,MLU ) + MUM ) ) ) - ( ( RCSe - RRSe ) * ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) + FirstVNF_RAM ) ,( Min( FirstVNF_Mem ,( Const - ( ARS / Max( MRS,FirstVNF_CPU ) ) ) ) - CRS ) ) - ( RRS - MRS ) )", "choosing": "( Min( RCSe ,MUM ) / ( DS * ( ( ( MLU / MLU ) / MLU ) / ( DS / RCSe ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( ( ( FirstVNF_RAM_Server * ARS ) / ( Min( MRS ,CRS ) + FirstVNF_Mem ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( ( ( RCSe - MUC ) + DS ) + MUM ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),( ( MDR - AMS ) / ( Const - RRS ) ) )", "choosing": "( Max( MUM,MUM ) - ( Min( Min( MUM ,RRSe ) ,MLU ) - ( MUM * MUM ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( FirstVNF_CPU ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( MUR + RMSe ) / DS ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * FirstVNF_CPU_Server ) - Min( ACS ,MRS ) )", "choosing": "( Min( MUC ,CS ) - ( ( Min( Min( CS ,MUC ) ,( MUR - DS ) ) + ( ( RMSe + CS ) - Max( MUC,RRSe ) ) ) + Min( MLU ,DS ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ),( ( ( ( FirstVNF_CPU_Server + BR ) * ( ACS / BR ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + ( BR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) * Min( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ,Max( ( MRS * MDR ),Max( PN,ACS ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( FirstVNF_RAM ,( ( ( FirstVNF_Mem - FirstVNF_Mem ) / MDR ) * MDR ) ) / Max( ACS,( PN + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + Max( Max( ( ( MUR + RMSe ) / DS ),RMSe ),( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( ( MUC - ( RCSe * RMSe ) ) * MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( FirstVNF_RAM_Server * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + MUM ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - ( DDR - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + RCSe ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MUR / RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU - MRS ) ) ,( ( Min( ACS ,MRS ) - Max( FirstVNF_CPU_Server,BR ) ) + ( ( ACS + FirstVNF_CPU ) - Min( CRS ,( Min( ( ACS * Min( FirstVNF_RAM_Server ,DDR ) ) ,( DDR / Const ) ) - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( Max( Min( MLU ,MLU ),( ( MUC / Max( RRSe,MUR ) ) + MLU ) ) / ( ( ( MUC + ( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( ( ( RMSe - RMSe ) / RMSe ) - DS ) + Max( MLU,RCSe ) ) * ( ( RMSe / CS ) + ( RMSe / RCSe ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) / Max( ACS,( ( ( RRS - MDR ) / ARS ) + ( ACS + ACS ) ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,MUC ) - Max( MUR,( Max( Max( ( MLU + Max( RMSe,RRSe ) ),Min( DS ,RRSe ) ),MUM ) - MLU ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( ( MRS / ARS ) - Max( Min( CRS ,MDR ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( ( CS / Min( ( MUC / ( RRSe + MUR ) ) ,( Min( RCSe ,( RCSe + MUC ) ) * DS ) ) ) - ( RMSe * DS ) ) ) / Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186641685176214}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * BR ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( CS,MUM ) * ( MLU * RMSe ) ) + Max( MUR,Min( ( Min( Max( ( MUC / MUR ),MUR ) ,( ( MUC + CS ) + RCSe ) ) / ( ( RRSe - ( RCSe / MUM ) ) * MUM ) ) ,CS ) ) ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ( Const - CRS ) + Min( AMS ,Const ) ) + ( Max( RRS,FirstVNF_RAM_Server ) - CRS ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( ( FirstVNF_CPU_Server + Const ) - ( BR + FirstVNF_CPU_Server ) ) ,MDR ) - DDR ) ,DDR ) ) )", "choosing": "Max( ( ( CS - ( RRSe * CS ) ) * ( ( MLU - RRSe ) - ( MUC / ( ( RMSe / CS ) * DS ) ) ) ),( MLU / MUM ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( MUR + RMSe ) / DS ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - MLU ) ) + ( RMSe - RMSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * AMS ) ) ) ,( ( ( DDR * AMS ) + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - ( RMSe + CS ) ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RMSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( FirstVNF_Mem - ACS ) + ( Min( FirstVNF_Mem_Server ,( ACS * DDR ) ) - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( MLU + MLU ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RRSe - RCSe ) / ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( AMS * ( ( BR / MRS ) * CRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( ( ( MUM - Max( RCSe,MUR ) ) - DS ) + DS ) / MUR ) * ( DS - ( ( MUM + MUC ) * Max( MLU,Max( MUC,RRSe ) ) ) ) ) + Min( ( RRSe * MUR ) ,( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "Min( ( FirstVNF_RAM_Server - AMS ) ,( ( ( FirstVNF_RAM_Server * AMS ) + FirstVNF_CPU ) - Min( Const ,Const ) ) )", "choosing": "( ( ( ( ( MLU + MUM ) / ( RRSe - CS ) ) + Max( Min( RCSe ,RRSe ),Min( RRSe ,RCSe ) ) ) + ( RMSe / ( RRSe / MUC ) ) ) - ( ( ( RMSe - RRSe ) + MUM ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + Min( ACS ,Max( Max( ACS,ACS ),MRS ) ) ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) - ( ( ( ( RMSe + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( ( ( CS + Max( ( MUR + MUM ),Max( RCSe,CS ) ) ) + MUC ) / RRSe ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),FirstVNF_RAM ) ,( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( MLU / RCSe ) / ( RCSe * MUM ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652604}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + ( Min( ACS ,MRS ) + FirstVNF_RAM ) ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Min( Min( ACS ,( Min( FirstVNF_CPU ,MDR ) * ARS ) ) ,FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR - RMSe ) / MUR ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - ( RCSe * ( RMSe * MUM ) ) ) - ( MUC * ( DS / MLU ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Max( Min( MDR ,MDR ),PN ) + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + CS ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MUM * DS ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7206475039206813}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),( ( DDR - Max( Min( ( MRS - BR ) ,MDR ),PN ) ) * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( MUR + ( ( MUC / ( MUM * DS ) ) + MLU ) ) ,Min( CS ,CS ) ) / ( ( MUR / MUR ) - ( CS * RMSe ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUM,Min( MUM ,MLU ) ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( ( MDR * Const ) - ( RRS - MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( MUR + RMSe ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( ( ( ( MDR * ( FirstVNF_RAM * MRS ) ) - ( RRS - MRS ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) * ( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( ( MUM * RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( MUR + RMSe ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Min( ( ( FirstVNF_Mem_Server + ( DDR / FirstVNF_CPU_Server ) ) / Min( MRS ,AMS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR * CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / ( DS / MLU ) ) - ( MUM + MUM ) ) - ( Min( ( ( MUM + CS ) + ( MUM + MUR ) ) ,RCSe ) - Max( MUR,DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,Const ) / FirstVNF_Mem_Server ) ),( FirstVNF_CPU / PN ) )", "choosing": "( Min( Min( CS ,CS ) ,( MUR + RMSe ) ) / ( RMSe / RRSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,Const ) / Min( ( PN + FirstVNF_CPU_Server ) ,Min( RRS ,( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Max( MUM,Max( RCSe,RMSe ) ) - MUM ),( ( ( MUM / RMSe ) * RCSe ) + ( RCSe / MUM ) ) ) / ( ( MUM / Min( MUC ,RCSe ) ) * RMSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),FirstVNF_RAM ) ,( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( MLU / RCSe ) / ( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652604}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),FirstVNF_RAM ) ,( ( ( FirstVNF_Mem * FirstVNF_Mem ) / Max( FirstVNF_RAM,DDR ) ) * ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652604}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( DDR - Max( Min( MDR ,MDR ),PN ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( AMS / Max( PN,ARS ) ) * FirstVNF_CPU_Server ) * BR ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( MLU + ( MUC / ( DS * MUM ) ) ),Min( MLU ,( RRSe * DS ) ) ) / ( ( Max( MUC,( RCSe - MLU ) ) * CS ) + CS ) ) * DS ) + MUR ) ,Max( ( MLU * RRSe ),MUM ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( MUC - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Max( ACS,Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( MUR + CS ) * ( MUM + RCSe ) ) + ( ( ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) / RMSe ) - DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,Max( Max( MDR,FirstVNF_RAM_Server ),( BR / PN ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( MUR / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( CRS ,( ( ARS + ( CRS / ( FirstVNF_RAM - FirstVNF_CPU ) ) ) + Max( FirstVNF_CPU,( RRS - PN ) ) ) ),( BR / PN ) )", "choosing": "( ( MUR * MLU ) / ( ( CS * RMSe ) - ( MUR + MUR ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * Max( Max( MDR,FirstVNF_RAM_Server ),( BR / PN ) ) ) - ( RRS - MRS ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / ( PN / ( ACS + MRS ) ) )", "choosing": "( ( Max( MUC,CS ) / RRSe ) / ( ( ( MUR + CS ) * ( MUM + RCSe ) ) + ( MLU + ( RRSe / RMSe ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( FirstVNF_CPU ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( MRS - BR ) ,MDR ) - DDR ) ,DDR ) ) )", "choosing": "Max( ( Min( CS ,( RRSe * MLU ) ) * ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) - ( MLU - RRSe ) ) ),( MLU / MUM ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Max( ( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( MRS - BR ) ,MDR ) - DDR ) ,DDR ) ) ),( FirstVNF_Mem + MDR ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( ( MUC / ( MUM * DS ) ) - ( MLU - RRSe ) ) ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( MRS - BR ) ,MDR ) - DDR ) ,DDR ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Max( ACS,( FirstVNF_Mem + MDR ) ) )", "choosing": "Max( ( Min( CS ,( RRSe * MLU ) ) * ( ( MUC / ( MUM * DS ) ) - ( MLU - RRSe ) ) ),( MLU / MUM ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "Max( Max( MDR,FirstVNF_RAM_Server ),( ( DDR - Max( Min( ( MRS - BR ) ,MDR ),PN ) ) * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( Min( MDR ,FirstVNF_RAM_Server ),PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Max( ( Min( ( MUM / MLU ) ,( CS / MUC ) ) / ( ( ( ( ( ( CS - MUR ) - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) / ( CS + CS ) ) ),( ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) + ( ( CS * Min( DS ,( ( RRSe + CS ) * CS ) ) ) / ( RRSe - CS ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.7273829334920806}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Max( Min( MDR ,MDR ),PN ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * MUC ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "( ( BR * Const ) - ( RRS - MRS ) )", "choosing": "( Max( DS,MUM ) / Max( MUM,( MUC + ( MUM - MUM ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ACS / MRS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.28460038986354774, "obj2": 0.7214047612062118}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + Min( ACS ,DDR ) ) ) + ( ACS / Min( AMS ,Const ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_Mem / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( DS * MLU ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( ( MLU / MUR ) + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / MUC ) - MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( ARS ,( ( ( CRS * ( BR * AMS ) ) * MDR ) + ( MRS / FirstVNF_RAM_Server ) ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( CS,RCSe ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( ( ( DS / ( MUC * MUM ) ) + MLU ),MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7206475039206813}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) ) )", "choosing": "( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( CS * ( RRSe + CS ) ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUR * ( ( ( RRSe / RMSe ) - Min( MUC ,MLU ) ) / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( AMS + CRS ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "Min( ( ( ( ( ( ( MUC / ( MUM * DS ) ) + MLU ) + Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MUM ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( BR,Max( MRS,( ( ARS + RRS ) - ( MRS + Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( Min( Max( ( MUR - RMSe ),( MLU * RCSe ) ) ,CS ) * Min( DS ,MLU ) ) ,( Min( DS ,MUC ) - ( ( MLU - MUR ) / ( Min( MLU ,Min( ( RRSe * DS ) ,Max( DS,MUR ) ) ) + MUC ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652604}, {"determining": "Max( ( FirstVNF_Mem / AMS ),( ARS - ( FirstVNF_Mem_Server / Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7246212829523032}, {"determining": "( ( MDR * Const ) - ( Max( MRS,MDR ) - MRS ) )", "choosing": "( Min( MUC ,CS ) - ( ( Min( Min( MUC ,CS ) ,( MUM - ( Max( RCSe,MUC ) + DS ) ) ) + ( ( RMSe + CS ) - Max( ( MUC * RMSe ),RRSe ) ) ) + RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7206475039206813}, {"determining": "Min( Max( ( ( Min( ARS ,ACS ) + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( RRSe * MUR ) + ( MUR / CS ) ) / ( ( ( MUR - MLU ) - RMSe ) / RCSe ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / Max( CS,RCSe ) ) ,MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( Max( MUR,MLU ) - Max( CS,CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + Const ) + ( BR + Const ) ) )", "choosing": "( ( Max( MUR,MLU ) - Max( CS,CS ) ) * ( ( MUM / RRSe ) - ( ( ( ( Min( CS ,( MUM * RRSe ) ) - ( RRSe * RMSe ) ) + ( MLU * ( ( DS / CS ) / MUM ) ) ) / MUR ) / RCSe ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU - MRS ) * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( ( RRSe - RCSe ) + ( RCSe / MUM ) ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU - MRS ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( ARS * FirstVNF_RAM ) ),BR ) - Min( ACS ,MRS ) ) + ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe - RCSe ) + ( RCSe / MUM ) ) ) / Max( ( RMSe * MUM ),RMSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}], "8": [{"determining": "Max( ( FirstVNF_Mem / AMS ),( ( Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM ) ) / Max( AMS,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) - Const ) )", "choosing": "Min( ( ( RMSe / MUM ) + Max( RCSe,MUM ) ) ,( Min( ( DS + RRSe ) ,Max( MUM,( ( MUC * RCSe ) + ( MLU * RRSe ) ) ) ) / CS ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_RAM_Server ) ) ) ,( ( ACS + FirstVNF_CPU ) - ( FirstVNF_Mem + ( RRS * Max( ( RRS - CRS ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RRSe ,RCSe ) / Min( RCSe ,MUC ) ) ) + ( ( DS + DS ) - RRSe ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( ( MDR * Const ) - ( RRS - MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( MUR + RMSe ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + RRS ) ,( ( ACS + FirstVNF_CPU ) - ( CRS * Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( DS / Min( ( DS * DS ) ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RRSe - RCSe ) - ( MUC * ( MLU * DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( DDR * FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( Min( ( ( Min( ( MLU / DS ) ,MLU ) - ( RRSe * Max( CS,RMSe ) ) ) + DS ) ,RCSe ) + ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,Max( CRS,Max( ACS,BR ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( MLU - ( Max( MLU,MLU ) + MUM ) ) ) - ( ( RCSe - RRSe ) * ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( MUR + RMSe ) / DS ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * BR ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( CS,MUM ) * ( MLU * RMSe ) ) + Max( MUR,Min( ( Min( Max( ( MUC / MUR ),MUR ) ,( ( MUC + CS ) + RCSe ) ) / ( ( RRSe - ( RCSe / MUM ) ) * MUM ) ) ,CS ) ) ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ( Const - CRS ) + Min( AMS ,Const ) ) + ( Max( RRS,FirstVNF_RAM_Server ) - CRS ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( ( FirstVNF_CPU_Server + Const ) - ( BR + FirstVNF_CPU_Server ) ) ,MDR ) - DDR ) ,DDR ) ) )", "choosing": "Max( ( ( CS - ( RRSe * CS ) ) * ( ( MLU - RRSe ) - ( MUC / ( ( RMSe / CS ) * DS ) ) ) ),( MLU / MUM ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( MUR + RMSe ) / DS ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - MLU ) ) + ( RMSe - RMSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * AMS ) ) ) ,( ( ( DDR * AMS ) + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - ( RMSe + CS ) ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RMSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( FirstVNF_Mem - ACS ) + ( Min( FirstVNF_Mem_Server ,( ACS * DDR ) ) - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( MLU + MLU ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RRSe - RCSe ) / ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( FirstVNF_RAM_Server - AMS ) ,( ( ( FirstVNF_RAM_Server * AMS ) + FirstVNF_CPU ) - Min( Const ,Const ) ) )", "choosing": "( ( ( ( ( MLU + MUM ) / ( RRSe - CS ) ) + Max( Min( RCSe ,RRSe ),Min( RRSe ,RCSe ) ) ) + ( RMSe / ( RRSe / MUC ) ) ) - ( ( ( RMSe - RRSe ) + MUM ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + Min( ACS ,Max( Max( ACS,ACS ),MRS ) ) ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) - ( ( ( ( RMSe + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( ( ( CS + Max( ( MUR + MUM ),Max( RCSe,CS ) ) ) + MUC ) / RRSe ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + ( Min( ACS ,MRS ) + FirstVNF_RAM ) ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Min( Min( ACS ,( Min( FirstVNF_CPU ,MDR ) * ARS ) ) ,FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR - RMSe ) / MUR ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - ( RCSe * ( RMSe * MUM ) ) ) - ( MUC * ( DS / MLU ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUM,Min( MUM ,MLU ) ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( ( MDR * Const ) - ( RRS - MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( MUR + RMSe ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( ( ( ( MDR * ( FirstVNF_RAM * MRS ) ) - ( RRS - MRS ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) * ( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( ( MUM * RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( MUR + RMSe ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Min( ( ( FirstVNF_Mem_Server + ( DDR / FirstVNF_CPU_Server ) ) / Min( MRS ,AMS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR * CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / ( DS / MLU ) ) - ( MUM + MUM ) ) - ( Min( ( ( MUM + CS ) + ( MUM + MUR ) ) ,RCSe ) - Max( MUR,DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,Const ) / FirstVNF_Mem_Server ) ),( FirstVNF_CPU / PN ) )", "choosing": "( Min( Min( CS ,CS ) ,( MUR + RMSe ) ) / ( RMSe / RRSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,Const ) / Min( ( PN + FirstVNF_CPU_Server ) ,Min( RRS ,( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Max( MUM,Max( RCSe,RMSe ) ) - MUM ),( ( ( MUM / RMSe ) * RCSe ) + ( RCSe / MUM ) ) ) / ( ( MUM / Min( MUC ,RCSe ) ) * RMSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( DDR - Max( Min( MDR ,MDR ),PN ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( AMS / Max( PN,ARS ) ) * FirstVNF_CPU_Server ) * BR ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( MLU + ( MUC / ( DS * MUM ) ) ),Min( MLU ,( RRSe * DS ) ) ) / ( ( Max( MUC,( RCSe - MLU ) ) * CS ) + CS ) ) * DS ) + MUR ) ,Max( ( MLU * RRSe ),MUM ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( MUC - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Max( ACS,Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( MUR + CS ) * ( MUM + RCSe ) ) + ( ( ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) / RMSe ) - DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,Max( Max( MDR,FirstVNF_RAM_Server ),( BR / PN ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( MUR / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( CRS ,( ( ARS + ( CRS / ( FirstVNF_RAM - FirstVNF_CPU ) ) ) + Max( FirstVNF_CPU,( RRS - PN ) ) ) ),( BR / PN ) )", "choosing": "( ( MUR * MLU ) / ( ( CS * RMSe ) - ( MUR + MUR ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / ( PN / ( ACS + MRS ) ) )", "choosing": "( ( Max( MUC,CS ) / RRSe ) / ( ( ( MUR + CS ) * ( MUM + RCSe ) ) + ( MLU + ( RRSe / RMSe ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( MRS - BR ) ,MDR ) - DDR ) ,DDR ) ) )", "choosing": "Max( ( Min( CS ,( RRSe * MLU ) ) * ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) - ( MLU - RRSe ) ) ),( MLU / MUM ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( MRS - BR ) ,MDR ) - DDR ) ,DDR ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( BR * Const ) - ( RRS - MRS ) )", "choosing": "( Max( DS,MUM ) / Max( MUM,( MUC + ( MUM - MUM ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + Min( ACS ,DDR ) ) ) + ( ACS / Min( AMS ,Const ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_Mem / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( DS * MLU ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( ( MLU / MUR ) + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / MUC ) - MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) ) )", "choosing": "( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( CS * ( RRSe + CS ) ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUR * ( ( ( RRSe / RMSe ) - Min( MUC ,MLU ) ) / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( AMS + CRS ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "Min( ( ( ( ( ( ( MUC / ( MUM * DS ) ) + MLU ) + Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MUM ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Min( ARS ,ACS ) + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( RRSe * MUR ) + ( MUR / CS ) ) / ( ( ( MUR - MLU ) - RMSe ) / RCSe ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / Max( CS,RCSe ) ) ,MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( Max( MUR,MLU ) - Max( CS,CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + Const ) + ( BR + Const ) ) )", "choosing": "( ( Max( MUR,MLU ) - Max( CS,CS ) ) * ( ( MUM / RRSe ) - ( ( ( ( Min( CS ,( MUM * RRSe ) ) - ( RRSe * RMSe ) ) + ( MLU * ( ( DS / CS ) / MUM ) ) ) / MUR ) / RCSe ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU - MRS ) * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( ( RRSe - RCSe ) + ( RCSe / MUM ) ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU - MRS ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( ARS * FirstVNF_RAM ) ),BR ) - Min( ACS ,MRS ) ) + ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe - RCSe ) + ( RCSe / MUM ) ) ) / Max( ( RMSe * MUM ),RMSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( DDR,PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU - MRS ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) + ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Min( ( PN + FirstVNF_CPU_Server ) ,( RRS / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) ,AMS ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + MUR ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Max( ( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( MRS - BR ) ,MDR ) - DDR ) ,DDR ) ) ),( FirstVNF_Mem + MDR ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( ( MUC / ( MUM * DS ) ) - ( MLU - RRSe ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Min( ( ( MRS / DDR ) / Const ) ,( DDR - MRS ) ) ,FirstVNF_CPU_Server )", "choosing": "( Max( Max( ( RCSe * MUM ),MUM ),RMSe ) / Max( ( RMSe * RMSe ),MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUM,Min( MUM ,MLU ) ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) + CRS ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) ,( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( Min( ( AMS + CRS ) ,FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( ( RCSe - RRSe ) * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( AMS + CRS ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( ( Min( ACS ,MRS ) + FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( DS,RCSe ) / ( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( Min( ACS ,MRS ) + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Max( DS,RCSe ) / ( RMSe - RCSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "Min( ( ( MUM / RMSe ) + Max( RCSe,MUM ) ) ,( Min( RMSe ,Max( MUM,( RCSe + ( MLU * RRSe ) ) ) ) / CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( FirstVNF_CPU + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( Min( Min( CS ,CS ) ,( MUR + RMSe ) ) - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( Min( Min( CS ,CS ) ,( MUR + RMSe ) ) / ( RMSe / RRSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / BR ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( Max( RMSe,RCSe ) * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( ( MLU + RRSe ) * Min( MLU ,DS ) ) ,( Min( DS ,MUC ) - ( MLU * RMSe ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( BR,Max( MRS,( ( ARS + RRS ) - ( MRS + Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( Min( Max( ( MUR - RMSe ),( MLU * RCSe ) ) ,CS ) * Min( DS ,MLU ) ) ,( Min( DS ,MUC ) - ( ( MLU - MUR ) / ( Min( MLU ,Min( ( RRSe * DS ) ,Max( DS,MUR ) ) ) + MUC ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652602}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( BR,Max( MRS,( ( ARS + RRS ) - ( MRS + Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( Min( Max( ( MUR - RMSe ),( MLU * RCSe ) ) ,CS ) * Min( DS ,MLU ) ) ,( Min( DS ,MUC ) - ( ( MLU - MUR ) / ( Min( MLU ,Min( ( RRSe * DS ) ,Max( DS,MUR ) ) ) + MUC ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652602}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( BR,Max( MRS,( ( ARS + RRS ) - ( MRS + Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( Min( Max( ( MUR - RMSe ),( MLU * RCSe ) ) ,CS ) * Min( DS ,MLU ) ) ,( Min( DS ,MUC ) - ( ( MLU - MUR ) / ( Min( MLU ,Min( ( RRSe * DS ) ,Max( DS,MUR ) ) ) + MUC ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652602}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( BR,( MRS + ( Min( DDR ,MDR ) / ( RRS / Max( ( AMS / RRS ),CRS ) ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( ( MLU + RRSe ) * Min( MLU ,DS ) ) ,( Min( DS ,MUC ) - ( ( MLU - MUR ) / ( Min( MLU ,Min( ( RRSe - DS ) ,Max( DS,MUR ) ) ) + MUC ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652602}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,AMS ) - MDR ),( BR / PN ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,( DS - ( MUM - ( Max( MUC,DS ) - RMSe ) ) ) ) ) / ( ( CS * RMSe ) - ( MUR / MUR ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Min( ( ( FirstVNF_Mem_Server + Max( PN,MRS ) ) / Min( MRS ,AMS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR / Min( AMS ,Const ) ) ) ) )", "choosing": "( ( Min( RCSe ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Min( MUR ,DS ) ) - ( DS * RRSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( Max( MUR,MLU ) - Max( CS,CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( Max( RMSe,RCSe ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( ( ACS - MRS ) * FirstVNF_CPU ) ) ) ,( Min( CRS ,Const ) - ( ( FirstVNF_CPU * ( Max( BR,ACS ) / AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( CS ,( CS * RRSe ) ) * ( ( MUC / ( ( ( ( CS + MLU ) * RCSe ) + MUM ) * DS ) ) - ( MLU - ( RCSe - RRSe ) ) ) ),( MUR / MUM ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,Min( FirstVNF_CPU ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + RRSe ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( ( AMS / CRS ) - ( CRS / Const ) ) ,FirstVNF_CPU )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe + CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( Max( Max( Min( ( CS + ( DS / RRSe ) ) ,DS ),( DS - DS ) ),RRSe ) * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Max( ACS,Min( ( FirstVNF_Mem_Server / Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Min( RRS ,BR ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( MUR + CS ) * ( MUM + RCSe ) ) + ( ( ( Min( RCSe ,RRSe ) / Min( ( MUR + RMSe ) ,MUM ) ) / RMSe ) - DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( FirstVNF_Mem / AMS ),( ARS - ( FirstVNF_Mem_Server / Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( RMSe / Max( ( Max( RMSe,( RMSe + MUM ) ) * ( MUM + MLU ) ),( MUR - Min( Min( CS ,RMSe ) ,CS ) ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( Const ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( Max( FirstVNF_RAM_Server,RRS ),FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( Min( ( RMSe + ( MUR + RCSe ) ) ,MUC ) / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Min( ( FirstVNF_RAM + MRS ) ,Max( Const,Const ) ) / ARS ) ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU - MRS ) * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( ( RRSe - RCSe ) + ( RCSe / MUM ) ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( ( MDR * Const ) - ( RRS - MRS ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( FirstVNF_CPU / Const ),Min( DDR ,AMS ) ) ,( FirstVNF_Mem_Server * ACS ) )", "choosing": "( ( MUC / ( DS / RMSe ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * Const ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( ( MDR * Const ) - ( RRS - MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( MUR + RMSe ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}], "9": [{"determining": "Max( ( FirstVNF_Mem / AMS ),( ( Max( ( FirstVNF_CPU * MDR ),Max( AMS,FirstVNF_RAM ) ) / Max( AMS,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) - Const ) )", "choosing": "Min( ( ( RMSe / MUM ) + Max( RCSe,MUM ) ) ,( Min( ( DS + RRSe ) ,Max( MUM,( ( MUC * RCSe ) + ( MLU * RRSe ) ) ) ) / CS ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_RAM_Server ) ) ) ,( ( ACS + FirstVNF_CPU ) - ( FirstVNF_Mem + ( RRS * Max( ( RRS - CRS ),FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RRSe ,RCSe ) / Min( RCSe ,MUC ) ) ) + ( ( DS + DS ) - RRSe ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( ( MDR * Const ) - ( RRS - MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( MUR + RMSe ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) + RRS ) ,( ( ACS + FirstVNF_CPU ) - ( CRS * Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( DS / Min( ( DS * DS ) ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RRSe - RCSe ) - ( MUC * ( MLU * DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( DDR * FirstVNF_CPU_Server ) ,Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( Min( ( ( Min( ( MLU / DS ) ,MLU ) - ( RRSe * Max( CS,RMSe ) ) ) + DS ) ,RCSe ) + ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,Max( CRS,Max( ACS,BR ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( MLU - ( Max( MLU,MLU ) + MUM ) ) ) - ( ( RCSe - RRSe ) * ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( MUR + RMSe ) / DS ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * BR ) - Max( Const,FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( CS,MUM ) * ( MLU * RMSe ) ) + Max( MUR,Min( ( Min( Max( ( MUC / MUR ),MUR ) ,( ( MUC + CS ) + RCSe ) ) / ( ( RRSe - ( RCSe / MUM ) ) * MUM ) ) ,CS ) ) ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ( Const - CRS ) + Min( AMS ,Const ) ) + ( Max( RRS,FirstVNF_RAM_Server ) - CRS ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( ( FirstVNF_CPU_Server + Const ) - ( BR + FirstVNF_CPU_Server ) ) ,MDR ) - DDR ) ,DDR ) ) )", "choosing": "Max( ( ( CS - ( RRSe * CS ) ) * ( ( MLU - RRSe ) - ( MUC / ( ( RMSe / CS ) * DS ) ) ) ),( MLU / MUM ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( Max( ( ( MUR + RMSe ) / DS ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,MUC ) ,( MUM - DS ) ) + ( ( RMSe + CS ) - MLU ) ) + ( RMSe - RMSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * AMS ) ) ) ,( ( ( DDR * AMS ) + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - ( RMSe + CS ) ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RMSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( FirstVNF_Mem - ACS ) + ( Min( FirstVNF_Mem_Server ,( ACS * DDR ) ) - FirstVNF_CPU ) ),FirstVNF_Mem_Server ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( MLU + MLU ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RRSe - RCSe ) / ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( FirstVNF_RAM_Server - AMS ) ,( ( ( FirstVNF_RAM_Server * AMS ) + FirstVNF_CPU ) - Min( Const ,Const ) ) )", "choosing": "( ( ( ( ( MLU + MUM ) / ( RRSe - CS ) ) + Max( Min( RCSe ,RRSe ),Min( RRSe ,RCSe ) ) ) + ( RMSe / ( RRSe / MUC ) ) ) - ( ( ( RMSe - RRSe ) + MUM ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_RAM ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) + Min( ACS ,Max( Max( ACS,ACS ),MRS ) ) ) + ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) - ( ( ( ( RMSe + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( ( ( CS + Max( ( MUR + MUM ),Max( RCSe,CS ) ) ) + MUC ) / RRSe ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( DDR ,AMS ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + ( Min( ACS ,MRS ) + FirstVNF_RAM ) ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Min( Min( ACS ,( Min( FirstVNF_CPU ,MDR ) * ARS ) ) ,FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR - RMSe ) / MUR ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - ( RCSe * ( RMSe * MUM ) ) ) - ( MUC * ( DS / MLU ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUM,Min( MUM ,MLU ) ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( ( MDR * Const ) - ( RRS - MRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( MUR + RMSe ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( ( ( ( MDR * ( FirstVNF_RAM * MRS ) ) - ( RRS - MRS ) ) - Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) * ( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( ( MUM * RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( MUR + RMSe ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Min( ( ( FirstVNF_Mem_Server + ( DDR / FirstVNF_CPU_Server ) ) / Min( MRS ,AMS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR * CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / ( DS / MLU ) ) - ( MUM + MUM ) ) - ( Min( ( ( MUM + CS ) + ( MUM + MUR ) ) ,RCSe ) - Max( MUR,DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( FirstVNF_CPU / ( Max( FirstVNF_RAM_Server,Const ) / FirstVNF_Mem_Server ) ),( FirstVNF_CPU / PN ) )", "choosing": "( Min( Min( CS ,CS ) ,( MUR + RMSe ) ) / ( RMSe / RRSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,Const ) / Min( ( PN + FirstVNF_CPU_Server ) ,Min( RRS ,( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( Max( MUM,Max( RCSe,RMSe ) ) - MUM ),( ( ( MUM / RMSe ) * RCSe ) + ( RCSe / MUM ) ) ) / ( ( MUM / Min( MUC ,RCSe ) ) * RMSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( DDR - Max( Min( MDR ,MDR ),PN ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( AMS / Max( PN,ARS ) ) * FirstVNF_CPU_Server ) * BR ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( MLU + ( MUC / ( DS * MUM ) ) ),Min( MLU ,( RRSe * DS ) ) ) / ( ( Max( MUC,( RCSe - MLU ) ) * CS ) + CS ) ) * DS ) + MUR ) ,Max( ( MLU * RRSe ),MUM ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( MUC - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Max( ACS,Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( RRS ,BR ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( MUR + CS ) * ( MUM + RCSe ) ) + ( ( ( Min( RCSe ,RRSe ) / Min( RRSe ,MUM ) ) / RMSe ) - DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,Max( Max( MDR,FirstVNF_RAM_Server ),( BR / PN ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( MUR / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( CRS ,( ( ARS + ( CRS / ( FirstVNF_RAM - FirstVNF_CPU ) ) ) + Max( FirstVNF_CPU,( RRS - PN ) ) ) ),( BR / PN ) )", "choosing": "( ( MUR * MLU ) / ( ( CS * RMSe ) - ( MUR + MUR ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / ( PN / ( ACS + MRS ) ) )", "choosing": "( ( Max( MUC,CS ) / RRSe ) / ( ( ( MUR + CS ) * ( MUM + RCSe ) ) + ( MLU + ( RRSe / RMSe ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( MRS - BR ) ,MDR ) - DDR ) ,DDR ) ) )", "choosing": "Max( ( Min( CS ,( RRSe * MLU ) ) * ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) - ( MLU - RRSe ) ) ),( MLU / MUM ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( MRS - BR ) ,MDR ) - DDR ) ,DDR ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( BR * Const ) - ( RRS - MRS ) )", "choosing": "( Max( DS,MUM ) / Max( MUM,( MUC + ( MUM - MUM ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + Min( ACS ,DDR ) ) ) + ( ACS / Min( AMS ,Const ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_Mem / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( DS * MLU ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( ( MLU / MUR ) + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / MUC ) - MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) ) )", "choosing": "( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * Max( FirstVNF_Mem,AMS ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( CS * ( RRSe + CS ) ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUR * ( ( ( RRSe / RMSe ) - Min( MUC ,MLU ) ) / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( AMS + CRS ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "Min( ( ( ( ( ( ( MUC / ( MUM * DS ) ) + MLU ) + Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MUM ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Min( ARS ,ACS ) + FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( RRSe * MUR ) + ( MUR / CS ) ) / ( ( ( MUR - MLU ) - RMSe ) / RCSe ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / Max( CS,RCSe ) ) ,MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( Max( MUR,MLU ) - Max( CS,CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( FirstVNF_CPU / MRS ),Min( DDR ,AMS ) ) ,( ( FirstVNF_RAM_Server + Const ) + ( BR + Const ) ) )", "choosing": "( ( Max( MUR,MLU ) - Max( CS,CS ) ) * ( ( MUM / RRSe ) - ( ( ( ( Min( CS ,( MUM * RRSe ) ) - ( RRSe * RMSe ) ) + ( MLU * ( ( DS / CS ) / MUM ) ) ) / MUR ) / RCSe ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU - MRS ) * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( ( RRSe - RCSe ) + ( RCSe / MUM ) ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU - MRS ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( ARS * FirstVNF_RAM ) ),BR ) - Min( ACS ,MRS ) ) + ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe - RCSe ) + ( RCSe / MUM ) ) ) / Max( ( RMSe * MUM ),RMSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( ( ( DDR - Max( DDR,PN ) ) * FirstVNF_CPU_Server ) * ARS ) ) - Max( RRS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( FirstVNF_CPU - MRS ) ) ,( ( Max( FirstVNF_CPU_Server,BR ) - Min( ACS ,MRS ) ) + ( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "Min( ( ( ( Max( ( ( MUC / ( MUM * DS ) ) + MLU ),Min( MLU ,MLU ) ) / ( ( Max( MUC,( RCSe - MLU ) ) / MLU ) + CS ) ) * DS ) + MUR ) ,Max( MLU,MLU ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Min( ( PN + FirstVNF_CPU_Server ) ,( RRS / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( Min( BR ,MDR ),( ( FirstVNF_CPU_Server + MRS ) * ( MDR * Min( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) ,AMS ) ) ) )", "choosing": "( ( ( ( RMSe - MUR ) / RCSe ) + Min( Min( DS ,( ( RRSe + MUR ) * CS ) ) ,( MUC - CS ) ) ) - ( ( MLU - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Max( ( ( ( ( Const - CRS ) / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( Min( ( MRS - BR ) ,MDR ) - DDR ) ,DDR ) ) ),( FirstVNF_Mem + MDR ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / ( ( MUC / ( MUM * DS ) ) - ( MLU - RRSe ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Min( ( ( MRS / DDR ) / Const ) ,( DDR - MRS ) ) ,FirstVNF_CPU_Server )", "choosing": "( Max( Max( ( RCSe * MUM ),MUM ),RMSe ) / Max( ( RMSe * RMSe ),MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( Max( Max( MUM,Min( MUM ,MLU ) ),RMSe ) / ( MLU / MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) + CRS ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) ,( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( Min( ( AMS + CRS ) ,FirstVNF_CPU_Server ) + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( ( RCSe - RRSe ) * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( MUC * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( AMS + CRS ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( Min( ( ( MUR / RCSe ) + RCSe ) ,RMSe ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( ( Min( ACS ,MRS ) + FirstVNF_RAM ) - MRS ) )", "choosing": "( Max( DS,RCSe ) / ( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( FirstVNF_CPU / MRS ) - ( RRS - MRS ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( Min( ACS ,MRS ) + FirstVNF_RAM ) ,( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Max( DS,RCSe ) / ( RMSe - RCSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "Min( ( ( MUM / RMSe ) + Max( RCSe,MUM ) ) ,( Min( RMSe ,Max( MUM,( RCSe + ( MLU * RRSe ) ) ) ) / CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( FirstVNF_CPU + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( Min( Min( CS ,CS ) ,( MUR + RMSe ) ) - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( Min( Min( CS ,CS ) ,( MUR + RMSe ) ) / ( RMSe / RRSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / BR ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( ( ( MLU * DS ) / Max( MUM,( MUC + ( ( Max( RMSe,RCSe ) * RMSe ) * ( MLU + MUC ) ) ) ) ),( CS * MUM ) ) - ( ( MUC / RRSe ) - MUR ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( ( ACS / Min( AMS ,Const ) ) + Max( Min( FirstVNF_CPU_Server ,Const ),( ACS + FirstVNF_Mem ) ) ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM_Server / ARS ) ) + Min( ( FirstVNF_CPU_Server - DDR ) ,DDR ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( ( MLU + RRSe ) * Min( MLU ,DS ) ) ,( Min( DS ,MUC ) - ( MLU * RMSe ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( BR,Max( MRS,( ( ARS + RRS ) - ( MRS + Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( Min( Max( ( MUR - RMSe ),( MLU * RCSe ) ) ,CS ) * Min( DS ,MLU ) ) ,( Min( DS ,MUC ) - ( ( MLU - MUR ) / ( Min( MLU ,Min( ( RRSe * DS ) ,Max( DS,MUR ) ) ) + MUC ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652602}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( BR,Max( MRS,( ( ARS + RRS ) - ( MRS + Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( Min( Max( ( MUR - RMSe ),( MLU * RCSe ) ) ,CS ) * Min( DS ,MLU ) ) ,( Min( DS ,MUC ) - ( ( MLU - MUR ) / ( Min( MLU ,Min( ( RRSe * DS ) ,Max( DS,MUR ) ) ) + MUC ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652602}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( BR,Max( MRS,( ( ARS + RRS ) - ( MRS + Min( FirstVNF_Mem ,DDR ) ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( Min( Max( ( MUR - RMSe ),( MLU * RCSe ) ) ,CS ) * Min( DS ,MLU ) ) ,( Min( DS ,MUC ) - ( ( MLU - MUR ) / ( Min( MLU ,Min( ( RRSe * DS ) ,Max( DS,MUR ) ) ) + MUC ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652602}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( BR,( MRS + ( Min( DDR ,MDR ) / ( RRS / Max( ( AMS / RRS ),CRS ) ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( ( MLU + RRSe ) * Min( MLU ,DS ) ) ,( Min( DS ,MUC ) - ( ( MLU - MUR ) / ( Min( MLU ,Min( ( RRSe - DS ) ,Max( DS,MUR ) ) ) + MUC ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652602}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,AMS ) - MDR ),( BR / PN ) )", "choosing": "( Min( ( MUR + RMSe ) ,Min( CS ,( DS - ( MUM - ( Max( MUC,DS ) - RMSe ) ) ) ) ) / ( ( CS * RMSe ) - ( MUR / MUR ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( DDR * FirstVNF_CPU_Server ),Min( ( ( FirstVNF_Mem_Server + Max( PN,MRS ) ) / Min( MRS ,AMS ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( MDR / Min( AMS ,Const ) ) ) ) )", "choosing": "( ( Min( RCSe ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Min( MUR ,DS ) ) - ( DS * RRSe ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( Max( MUR,MLU ) - Max( CS,CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( Min( MUM ,RRSe ) / MLU ) - ( MUM * MUM ) ) - ( Min( MUR ,( ( MUM + CS ) + ( MUM + MUR ) ) ) - Max( MUR,DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( Max( RMSe,RCSe ) / ( MUM * ( CS * MUC ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( ( ACS - MRS ) * FirstVNF_CPU ) ) ) ,( Min( CRS ,Const ) - ( ( FirstVNF_CPU * ( Max( BR,ACS ) / AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( CS ,( CS * RRSe ) ) * ( ( MUC / ( ( ( ( CS + MLU ) * RCSe ) + MUM ) * DS ) ) - ( MLU - ( RCSe - RRSe ) ) ) ),( MUR / MUM ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,Min( FirstVNF_CPU ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + RRSe ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( ( AMS / CRS ) - ( CRS / Const ) ) ,FirstVNF_CPU )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe + CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( Max( Max( Min( ( CS + ( DS / RRSe ) ) ,DS ),( DS - DS ) ),RRSe ) * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( ( MDR * Const ) - ( RRS - MRS ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,MRS ) / Max( ACS,Min( ( FirstVNF_Mem_Server / Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Min( RRS ,BR ) ) ) )", "choosing": "( Max( ( ( CS * RRSe ) * ( MUM - MUC ) ),( ( RRSe / RCSe ) + ( RCSe / MUM ) ) ) / ( ( ( MUR + CS ) * ( MUM + RCSe ) ) + ( ( ( Min( RCSe ,RRSe ) / Min( ( MUR + RMSe ) ,MUM ) ) / RMSe ) - DS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Max( ( FirstVNF_Mem / AMS ),( ARS - ( FirstVNF_Mem_Server / Max( AMS,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( Max( ( ( MUR + RMSe ) / DS ),RMSe ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( RMSe / Max( ( Max( RMSe,( RMSe + MUM ) ) * ( MUM + MLU ) ),( MUR - Min( Min( CS ,RMSe ) ,CS ) ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( BR * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( Const ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( ( Const + FirstVNF_Mem_Server ) * Min( BR ,FirstVNF_CPU ) ),( Max( Max( FirstVNF_RAM_Server,RRS ),FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( Min( ( RMSe + ( MUR + RCSe ) ) ,MUC ) / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Min( ( FirstVNF_RAM + MRS ) ,Max( Const,Const ) ) / ARS ) ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( ( ( MUR - MLU ) - RMSe ) / RCSe ) / ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - Min( ( MUM / MLU ) ,( CS / MUC ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU - MRS ) * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( ( RRSe - RCSe ) + ( RCSe / MUM ) ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "Min( ( ( MDR * Const ) - ( RRS - MRS ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( ( ( ( ( MUM + MUC ) / ( RRSe - CS ) ) + ( Min( RCSe ,RRSe ) / Min( RRSe ,RCSe ) ) ) + ( ( RRSe * MUR ) * ( Min( ( MUR + RMSe ) ,Min( CS ,CS ) ) / ( ( Max( ( MUR / DS ),RMSe ) / ( MLU / MUR ) ) - ( CS * RMSe ) ) ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7318782978455969}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( BR,( MRS + ( Min( DDR ,MDR ) / ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( ( MLU + RRSe ) * Min( MLU ,DS ) ) ,( Min( DS ,MUC ) - ( ( MLU - MUR ) / ( Min( MLU ,MUR ) + MUC ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652602}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( BR,( MRS + ( Min( DDR ,MDR ) / ( RRS / Max( ( AMS / RRS ),CRS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) / RCSe ) + ( ( RRSe * MUR ) * ( MUR / CS ) ) ) - ( ( RCSe - RRSe ) - ( MUC * ( MLU / DS ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652602}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) / Max( BR,( MRS + ( Min( DDR ,MDR ) / ( RRS / Max( ( AMS / RRS ),CRS ) ) ) ) ) )", "choosing": "Min( ( ( ( Max( ( MLU + ( MUC / ( DS * MUM ) ) ),Min( MLU ,( RRSe * DS ) ) ) / ( ( Max( MUC,( RCSe - MLU ) ) * CS ) + CS ) ) * DS ) + MUR ) ,Max( ( MLU * RRSe ),MUM ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652602}, {"determining": "Min( Max( ( Max( DDR,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ),( ( Const + FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU - MRS ) * FirstVNF_CPU ) ) ) ,( ( ACS + FirstVNF_CPU ) - Min( CRS ,Const ) ) )", "choosing": "( Max( RMSe,RCSe ) / Min( ( ( MLU + RRSe ) * Min( MLU ,DS ) ) ,( Min( DS ,MUC ) - ( ( MLU - MUR ) / ( Min( MLU ,Min( ( RRSe - DS ) ,Max( DS,MUR ) ) ) + MUC ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652602}]}