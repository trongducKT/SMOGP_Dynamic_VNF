{"1": [{"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,BR ) ,Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,MLU ) / ( RMSe / ( ( MUM - RMSe ) + Max( ( RMSe * DS ),MUR ) ) ) )", "obj1": 0.7076923076923077, "obj2": 0.2238973295395165}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( PN * RRS ) )", "choosing": "( ( MLU / RMSe ) - ( RRSe * CS ) )", "obj1": 0.6519230769230769, "obj2": 0.26679137555663957}, {"determining": "( ( MRS - ARS ) / Max( ( ARS * ( FirstVNF_RAM * RRS ) ),ACS ) )", "choosing": "Min( ( MUM + Min( CS ,Max( DS,RMSe ) ) ) ,Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,DDR ) - Min( Const ,ARS ) )", "choosing": "( ( RCSe * MLU ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ARS ) - Min( ACS ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - MUR ) - ( RMSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( MDR + ( AMS * ( ( CRS * BR ) + ( ( ( FirstVNF_CPU_Server - Const ) - FirstVNF_Mem ) - CRS ) ) ) ) )", "choosing": "Min( Max( ( DS / RCSe ),( ( MUC + MLU ) + ( Min( RCSe ,RMSe ) / MUM ) ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( MUM * RCSe ) ) )", "obj1": 0.875, "obj2": 0.11717258014319257}, {"determining": "Max( ( ( ACS * DDR ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ),Min( ( FirstVNF_RAM + MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( RRSe ,( ( RRSe + ( RCSe / CS ) ) / ( ( MUC * RCSe ) * ( CS + MUC ) ) ) ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) / Max( Min( FirstVNF_RAM_Server ,DDR ),( AMS + MRS ) ) )", "choosing": "( ( ( CS / CS ) * Max( CS,MLU ) ) + ( Min( DS ,RCSe ) / ( MUC * RMSe ) ) )", "obj1": 0.6961538461538461, "obj2": 0.23740616219772284}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "Min( ( Const - Min( RRS ,FirstVNF_Mem ) ) ,( ( Const * BR ) - FirstVNF_Mem ) )", "choosing": "( ( ( Max( MUC,Max( ( RCSe - ( CS / CS ) ),RRSe ) ) + Max( MUR,RRSe ) ) / MUM ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MLU * MUC ) + Max( DS,RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / ( ( ( BR / ( FirstVNF_RAM_Server * ACS ) ) * RRS ) + Max( Min( ( Min( Const ,DDR ) + FirstVNF_Mem ) ,FirstVNF_Mem_Server ),( ( FirstVNF_CPU_Server / ACS ) + DDR ) ) ) ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( RMSe ,( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - ( CRS * ACS ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - Min( ( ( MLU + DS ) + MUM ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + MUC ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server - PN ),Min( MDR ,PN ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( Max( ( ( CS / RRSe ) * MUR ),( MLU / ( MLU + MUC ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_CPU_Server - Const ) ) ) - Max( ( Min( DDR ,ARS ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( ( CS / Max( Min( MUR ,( RCSe * ( MUM - ( RRSe + MLU ) ) ) ),CS ) ) / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - CRS ) - DDR ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( ( ( RCSe + RRSe ) * MUR ),Max( RCSe,( RRSe + ( Min( MUM ,( RMSe * Max( MLU,MUC ) ) ) / MUR ) ) ) ) )", "obj1": 0.8442307692307692, "obj2": 0.14134867197756995}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + ACS ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,RMSe ),Min( CS ,RCSe ) ) + ( ( RCSe / MUM ) + Min( MUM ,RMSe ) ) ) / ( ( ( MLU * DS ) / ( CS / DS ) ) + Max( ( MUM * MUM ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.11255763336710746}, {"determining": "Min( ( ( ( PN / MDR ) * ( FirstVNF_CPU_Server - ARS ) ) + ( ( BR + PN ) / ( FirstVNF_Mem * AMS ) ) ) ,( ( ( FirstVNF_CPU * CRS ) - ( Const + PN ) ) + ( Min( ACS ,MDR ) - Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUC / RMSe ) - CS ) ),( ( RCSe * MUR ) + RRSe ) )", "obj1": 0.9423076923076923, "obj2": 0.06721323172501653}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( FirstVNF_Mem / BR ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,Max( FirstVNF_CPU,ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,( ( DDR - Max( BR,ACS ) ) * AMS ) ) )", "choosing": "Max( ( Max( RCSe,( MUM * Max( ( MUC + Min( DS ,RCSe ) ),CS ) ) ) / MUM ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,BR ) ,Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,MLU ) / ( RMSe / ( ( MUM - RMSe ) + Max( ( RMSe * DS ),MUR ) ) ) )", "obj1": 0.7076923076923077, "obj2": 0.2238973295395165}, {"determining": "( ( MRS - ARS ) / Max( ( ARS * ( FirstVNF_RAM * RRS ) ),ACS ) )", "choosing": "Min( ( MUM + Min( CS ,Max( DS,RMSe ) ) ) ,Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,DDR ) - Min( Const ,ARS ) )", "choosing": "( ( RCSe * MLU ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ARS ) - Min( ACS ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - MUR ) - ( RMSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( MDR + ( AMS * ( ( CRS * BR ) + ( ( ( FirstVNF_CPU_Server - Const ) - FirstVNF_Mem ) - CRS ) ) ) ) )", "choosing": "Min( Max( ( DS / RCSe ),( ( MUC + MLU ) + ( Min( RCSe ,RMSe ) / MUM ) ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ACS * DDR ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ),Min( ( FirstVNF_RAM + MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( RRSe ,( ( RRSe + ( RCSe / CS ) ) / ( ( MUC * RCSe ) * ( CS + MUC ) ) ) ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "Min( ( Const - Min( RRS ,FirstVNF_Mem ) ) ,( ( Const * BR ) - FirstVNF_Mem ) )", "choosing": "( ( ( Max( MUC,Max( ( RCSe - ( CS / CS ) ),RRSe ) ) + Max( MUR,RRSe ) ) / MUM ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MLU * MUC ) + Max( DS,RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / ( ( ( BR / ( FirstVNF_RAM_Server * ACS ) ) * RRS ) + Max( Min( ( Min( Const ,DDR ) + FirstVNF_Mem ) ,FirstVNF_Mem_Server ),( ( FirstVNF_CPU_Server / ACS ) + DDR ) ) ) ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( RMSe ,( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - ( CRS * ACS ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - Min( ( ( MLU + DS ) + MUM ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + MUC ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server - PN ),Min( MDR ,PN ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( Max( ( ( CS / RRSe ) * MUR ),( MLU / ( MLU + MUC ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_CPU_Server - Const ) ) ) - Max( ( Min( DDR ,ARS ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( ( CS / Max( Min( MUR ,( RCSe * ( MUM - ( RRSe + MLU ) ) ) ),CS ) ) / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( FirstVNF_Mem / BR ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,Max( FirstVNF_CPU,ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,( ( DDR - Max( BR,ACS ) ) * AMS ) ) )", "choosing": "Max( ( Max( RCSe,( MUM * Max( ( MUC + Min( DS ,RCSe ) ),CS ) ) ) / MUM ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) - ( RCSe - ( MUC * MLU ) ) ) ) / ( ( Min( MLU ,RRSe ) + Min( Min( RRSe ,( MUR * MLU ) ) ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( AMS - DDR ) ) - ( ( CRS + Min( DDR ,Max( Const,FirstVNF_CPU ) ) ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( DS ,( CS + ( RCSe + RCSe ) ) ) * ( CS - MLU ) ),( MUR / MUR ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MLU * MUC ) + Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MLU * MUC ) + Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MLU * MUC ) + Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( ( ( MDR - DDR ) / BR ) / CRS ) ) ,Min( Const ,FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM_Server + RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * Min( ( RMSe - Max( RMSe,RRSe ) ) ,( Max( Min( MUR ,RMSe ),Max( MUC,RCSe ) ) * CS ) ) ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( Min( Min( Max( Max( ( ( MUM - MUM ) * MUC ),DS ),RCSe ) ,MUM ) ,RRSe ) * ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( RRS * ACS ) ) - ( ACS / Const ) )", "choosing": "Max( ( MUC * MLU ),( ( Max( MUC,MUM ) - MUR ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,( ( FirstVNF_Mem_Server * RRS ) / ( PN * DDR ) ) ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( MUM - ( RMSe / MUC ) ) / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( Min( Min( Const ,FirstVNF_RAM_Server ) ,( MRS + Const ) ) + FirstVNF_CPU ) ) ,Min( Const ,FirstVNF_Mem ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * ( ( ( MUC - CS ) - Max( RMSe,RRSe ) ) / ( Max( Min( RMSe ,MUR ),Max( MUC,RCSe ) ) * CS ) ) ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / FirstVNF_RAM ) - ARS ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * ( ( RMSe - Max( RMSe,RRSe ) ) / ( Max( Min( RMSe ,MUR ),Max( MUC,RCSe ) ) * CS ) ) ) ),( Max( ( Max( ( ( MUR + CS ) / Max( RMSe,MLU ) ),MUM ) + ( DS * MLU ) ),RCSe ) + Max( RCSe,CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( RCSe ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MUC ,MUR ),( DS - ( MLU - ( DS * ( CS / MLU ) ) ) ) ) * ( MUC - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Const ,ARS ) )", "choosing": "( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( DS + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( MUM / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,DDR ) ,Min( Const ,ARS ) )", "choosing": "( ( RCSe * MLU ) * ( RCSe - RRSe ) )", "obj1": 0.6461538461538462, "obj2": 0.25821711294872673}, {"determining": "( ( DDR - DDR ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( ( RCSe + RRSe ) + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( CS / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( FirstVNF_Mem ,DDR ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),( MUM - ( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + ( BR - DDR ) ) + ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( Min( ( ( CS / MUR ) / ( MUM - RCSe ) ) ,RRSe ) + Max( ( ( CS + ( MUM * RMSe ) ) + ( RMSe * RRSe ) ),( ( MLU + MUC ) * ( MUC * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( Min( ( FirstVNF_CPU / RRS ) ,( AMS - RRS ) ) ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( FirstVNF_Mem / BR ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,Max( FirstVNF_CPU,ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,( ( DDR - Max( BR,ACS ) ) * AMS ) ) )", "choosing": "Max( ( Max( RCSe,( MUM * Max( ( MUC + Min( DS ,RCSe ) ),CS ) ) ) / MUM ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( FirstVNF_Mem / BR ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,Max( FirstVNF_CPU,ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,( ( DDR - Max( BR,ACS ) ) * AMS ) ) )", "choosing": "Max( ( Max( RCSe,( MUM * Max( ( MUC + Min( DS ,RCSe ) ),CS ) ) ) / MUM ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( FirstVNF_Mem / BR ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,Max( FirstVNF_CPU,ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,( ( DDR - Max( BR,ACS ) ) * AMS ) ) )", "choosing": "Max( ( Max( RCSe,( MUM * Max( ( MUC + Min( DS ,RCSe ) ),CS ) ) ) / MUM ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_Mem_Server ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + Const ) + Max( FirstVNF_CPU,MRS ) ) ,( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_Mem ) + ( DDR + MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC - RMSe ) ) ),( ( MLU / Min( Max( ( ( MLU * RMSe ) * RRSe ),( ( MUR / ( CS + MUC ) ) + CS ) ) ,MUM ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUM - MUR ) - Max( CS,MUM ) ) * ( Max( DS,RCSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( ACS * ( FirstVNF_RAM_Server / BR ) ) * MRS ) - FirstVNF_CPU ) - PN ) - ( FirstVNF_CPU_Server / PN ) ) ,( MRS / ARS ) )", "choosing": "( Max( MUR,( ( MUR / MUC ) - Max( ( CS + ( RCSe / RRSe ) ),Min( RMSe ,( MUM / MUR ) ) ) ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ACS ) / ARS ) - ( AMS + PN ) )", "choosing": "( ( ( Max( ( Min( RMSe ,( MUM / Min( MUC ,RRSe ) ) ) / ( MUC * ( MUM * ( MUM * MUM ) ) ) ),CS ) / ( RCSe / CS ) ) - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( FirstVNF_CPU_Server + BR ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUR * ( ( DS / ( Max( ( RCSe / DS ),MUR ) - MUM ) ) * ( MUM / Min( ( ( MUC + ( MUM + RRSe ) ) * Max( RRSe,( MUC - DS ) ) ) ,MUC ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( MRS ,( ( RRS + CRS ) - MDR ) ) )", "choosing": "( ( DS - MUC ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( ( ( DS - MUC ) + ( MUR + MUM ) ) * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7153846153846154, "obj2": 0.1928240695669708}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( RRS + ACS ) ) ,( ( DDR + FirstVNF_CPU ) / ( FirstVNF_Mem + CRS ) ) ) / ( Max( Min( BR ,RRS ),( FirstVNF_Mem_Server - DDR ) ) - ( ( MDR + Const ) * ( BR - FirstVNF_CPU_Server ) ) ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( MUM ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( ACS / Const ) - Min( DDR ,DDR ) ) ) / Max( ACS,MDR ) )", "choosing": "Min( Min( Max( CS,CS ) ,( CS + MUC ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( ACS - PN ),ACS ) + Max( ( DDR * ( BR - MRS ) ),( FirstVNF_Mem * ( FirstVNF_CPU_Server * Const ) ) ) ) - ARS ) / Max( ACS,MDR ) )", "choosing": "Min( ( MLU - ( ( MUR / ( CS / RCSe ) ) / ( Min( MUR ,MUR ) + ( ( ( RRSe / CS ) * MUR ) - ( CS - RCSe ) ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MRS / MDR ),( MDR - ARS ) ) - ARS ) / Max( ACS,MDR ) )", "choosing": "Min( ( MUM + MUC ) ,Max( Min( ( ( MUC * MLU ) * MUC ) ,Min( MUR ,RCSe ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Max( ACS,MDR ) )", "choosing": "Min( ( ( MUC * MLU ) * MUC ) ,Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Max( ( ARS * ( FirstVNF_RAM * RRS ) ),ACS ) )", "choosing": "Min( ( MUM + Min( CS ,Max( DS,RMSe ) ) ) ,Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Max( ( ARS * ( FirstVNF_RAM * RRS ) ),ACS ) )", "choosing": "Min( ( MUM + Min( CS ,Max( DS,RMSe ) ) ) ,Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Max( ( ARS * ( FirstVNF_RAM * RRS ) ),ACS ) )", "choosing": "Min( ( MUM + Min( CS ,Max( DS,RMSe ) ) ) ,Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Max( FirstVNF_Mem,( ARS * BR ) ) )", "choosing": "Min( ( MUM + ( ( Min( ( MUM + MUC ) ,MUR ) + ( ( RRSe / ( CS / CS ) ) - RMSe ) ) + RMSe ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + Max( ( FirstVNF_Mem_Server * ( ACS * Const ) ),( BR / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RRSe + MUR ) )", "obj1": 0.7942307692307692, "obj2": 0.1439716598717978}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( RRS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( ( RCSe + MUM ) - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "( ( RCSe * Min( ( RMSe * MUM ) ,RRSe ) ) / ( ( MUM / ( RCSe + MUM ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ACS * DDR ) ,( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe + ( ( ( ( MLU / CS ) / RCSe ) * ( RMSe - ( RRSe + RCSe ) ) ) - ( ( ( DS / MUR ) + MLU ) / ( ( RCSe / MUC ) * Max( MUR,MUM ) ) ) ) ) * ( Min( ( DS + ( RRSe * MLU ) ) ,CS ) + RRSe ) ),( CS / RMSe ) ) - ( ( MUM - CS ) - ( MLU + MUM ) ) )", "obj1": 0.6596153846153846, "obj2": 0.2509701845854771}, {"determining": "Max( ( PN * DDR ),Max( MDR,CRS ) )", "choosing": "Min( ( ( MUC + MUM ) / MUC ) ,Min( RMSe ,RRSe ) )", "obj1": 0.6961538461538461, "obj2": 0.23649275715078985}, {"determining": "Min( ( Max( ( FirstVNF_CPU - CRS ),FirstVNF_CPU_Server ) + Max( ( BR + PN ),( FirstVNF_Mem * AMS ) ) ) ,( ( Min( ACS ,MDR ) - Min( BR ,FirstVNF_Mem ) ) + ( ( FirstVNF_CPU * CRS ) - ( Const + PN ) ) ) )", "choosing": "Max( ( RCSe - ( CS - ( MUC / RMSe ) ) ),( Min( ( Max( DS,MLU ) + CS ) ,MLU ) + RRSe ) )", "obj1": 0.9423076923076923, "obj2": 0.0664476979059953}, {"determining": "( Min( BR ,( PN * ( DDR / BR ) ) ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,MUM ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( ( DS / ( RMSe - Max( Min( ( ( ( RMSe / CS ) + Min( MLU ,MUC ) ) + MUR ) ,DS ),RRSe ) ) ) - ( ( MUM - CS ) - ( MLU + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * ARS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Max( Min( FirstVNF_RAM_Server ,DDR ),( AMS + MRS ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( RCSe + DS ) ) * Max( CS,MLU ) ) + ( Min( DS ,RCSe ) / ( MUC * RMSe ) ) )", "obj1": 0.7019230769230769, "obj2": 0.23295736207693185}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) * ( ARS + AMS ) ) / Max( Min( FirstVNF_RAM_Server ,DDR ),( AMS + MRS ) ) )", "choosing": "Min( Max( CS,RCSe ) ,( DS + DS ) )", "obj1": 0.6576923076923077, "obj2": 0.2570884278544986}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / ( FirstVNF_CPU - ARS ) ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( MUC ,RMSe ) ) / ( MUM / ( MUC * MUM ) ) )", "obj1": 0.975, "obj2": 0.024208704628988047}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7596153846153846, "obj2": 0.18475838511709775}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - Min( RRS ,( ( BR / ACS ) / PN ) ) )", "choosing": "Max( Max( Min( ( MUM - MUM ) ,( RRSe - RRSe ) ),( ( RMSe / CS ) / Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - Min( RRS ,( ( BR / ACS ) / PN ) ) )", "choosing": "Max( Max( Min( ( MUM - MUM ) ,( RRSe - RRSe ) ),( ( RMSe / CS ) / Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - Min( RRS ,( ( BR / ACS ) / PN ) ) )", "choosing": "Max( Max( Min( ( MUM - MUM ) ,( RRSe - RRSe ) ),( ( RMSe / CS ) / Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "Min( Max( ( FirstVNF_Mem_Server * AMS ),( FirstVNF_RAM - AMS ) ) ,Max( FirstVNF_Mem,( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( MUC / RCSe ) * Max( MLU,RMSe ) ) / MUC )", "obj1": 0.676923076923077, "obj2": 0.24388240539655895}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / ACS ) * Max( AMS,( ( FirstVNF_RAM_Server * ARS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( ( Min( MUM ,MUM ) - MUR ) / Max( CS,( RMSe * MLU ) ) ) )", "obj1": 0.6673076923076923, "obj2": 0.24574553632821816}, {"determining": "( ( FirstVNF_Mem_Server + Min( Const ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( ( ( RCSe + RRSe ) * ( CS - MUR ) ),Max( RCSe,( RRSe + ( Min( MUM ,( RCSe * Max( MLU,MUC ) ) ) / MUR ) ) ) ) )", "obj1": 0.7673076923076924, "obj2": 0.1531169539116671}, {"determining": "Max( ( ( DDR * ACS ) + Max( BR,PN ) ),Min( Min( AMS ,PN ) ,( ARS + Min( ( ( ( FirstVNF_CPU_Server * BR ) / ( Max( PN,PN ) - DDR ) ) + BR ) ,( FirstVNF_RAM_Server + Const ) ) ) ) )", "choosing": "( ( ( MUR - ( MUR * MUM ) ) + RCSe ) / ( RMSe + Min( Min( RCSe ,MUC ) ,RCSe ) ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9134615384615384, "obj2": 0.08019222411627874}, {"determining": "( ( Min( ACS ,ARS ) / BR ) * ( Min( Min( BR ,Const ) ,( DDR - Const ) ) / ( ( Max( DDR,Min( Min( Max( Const,FirstVNF_CPU ) ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) * ARS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) + ( RCSe * MUR ) ) ) ,Min( ( Min( RCSe ,RMSe ) / ( ( RRSe + RRSe ) + ( ( ( RMSe / RCSe ) / RMSe ) * MUC ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( MUC - MUR ) * Min( MUC ,RMSe ) ) ) ) ) )", "obj1": 0.8288461538461539, "obj2": 0.11002787929662514}, {"determining": "( ( MRS - FirstVNF_Mem ) - Max( ( FirstVNF_RAM / ( Max( RRS,FirstVNF_CPU ) - Min( ( CRS / ( BR / ( Const - FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ) ),( ACS / AMS ) ) )", "choosing": "( ( Min( RCSe ,( DS * ( ( DS - ( DS / ( MUR / DS ) ) ) * MUM ) ) ) * ( ( RCSe * RMSe ) * RCSe ) ) + ( RMSe * MUR ) )", "obj1": 0.6711538461538461, "obj2": 0.2455312469936888}], "3": [{"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,BR ) ,Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,MLU ) / ( RMSe / ( ( MUM - RMSe ) + Max( ( RMSe * DS ),MUR ) ) ) )", "obj1": 0.7076923076923077, "obj2": 0.2238973295395165}, {"determining": "( ( MRS - ARS ) / Max( ( ARS * ( FirstVNF_RAM * RRS ) ),ACS ) )", "choosing": "Min( ( MUM + Min( CS ,Max( DS,RMSe ) ) ) ,Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,DDR ) - Min( Const ,ARS ) )", "choosing": "( ( RCSe * MLU ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ARS ) - Min( ACS ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - MUR ) - ( RMSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( MDR + ( AMS * ( ( CRS * BR ) + ( ( ( FirstVNF_CPU_Server - Const ) - FirstVNF_Mem ) - CRS ) ) ) ) )", "choosing": "Min( Max( ( DS / RCSe ),( ( MUC + MLU ) + ( Min( RCSe ,RMSe ) / MUM ) ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ACS * DDR ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ),Min( ( FirstVNF_RAM + MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( RRSe ,( ( RRSe + ( RCSe / CS ) ) / ( ( MUC * RCSe ) * ( CS + MUC ) ) ) ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "Min( ( Const - Min( RRS ,FirstVNF_Mem ) ) ,( ( Const * BR ) - FirstVNF_Mem ) )", "choosing": "( ( ( Max( MUC,Max( ( RCSe - ( CS / CS ) ),RRSe ) ) + Max( MUR,RRSe ) ) / MUM ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MLU * MUC ) + Max( DS,RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / ( ( ( BR / ( FirstVNF_RAM_Server * ACS ) ) * RRS ) + Max( Min( ( Min( Const ,DDR ) + FirstVNF_Mem ) ,FirstVNF_Mem_Server ),( ( FirstVNF_CPU_Server / ACS ) + DDR ) ) ) ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( RMSe ,( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - ( CRS * ACS ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - Min( ( ( MLU + DS ) + MUM ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + MUC ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server - PN ),Min( MDR ,PN ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( Max( ( ( CS / RRSe ) * MUR ),( MLU / ( MLU + MUC ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_CPU_Server - Const ) ) ) - Max( ( Min( DDR ,ARS ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( ( CS / Max( Min( MUR ,( RCSe * ( MUM - ( RRSe + MLU ) ) ) ),CS ) ) / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( FirstVNF_Mem / BR ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,Max( FirstVNF_CPU,ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,( ( DDR - Max( BR,ACS ) ) * AMS ) ) )", "choosing": "Max( ( Max( RCSe,( MUM * Max( ( MUC + Min( DS ,RCSe ) ),CS ) ) ) / MUM ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) - ( RCSe - ( MUC * MLU ) ) ) ) / ( ( Min( MLU ,RRSe ) + Min( Min( RRSe ,( MUR * MLU ) ) ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( AMS - DDR ) ) - ( ( CRS + Min( DDR ,Max( Const,FirstVNF_CPU ) ) ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( DS ,( CS + ( RCSe + RCSe ) ) ) * ( CS - MLU ) ),( MUR / MUR ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MLU * MUC ) + Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MLU * MUC ) + Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MLU * MUC ) + Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( ( ( MDR - DDR ) / BR ) / CRS ) ) ,Min( Const ,FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM_Server + RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * Min( ( RMSe - Max( RMSe,RRSe ) ) ,( Max( Min( MUR ,RMSe ),Max( MUC,RCSe ) ) * CS ) ) ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( Min( Min( Max( Max( ( ( MUM - MUM ) * MUC ),DS ),RCSe ) ,MUM ) ,RRSe ) * ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( RRS * ACS ) ) - ( ACS / Const ) )", "choosing": "Max( ( MUC * MLU ),( ( Max( MUC,MUM ) - MUR ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,( ( FirstVNF_Mem_Server * RRS ) / ( PN * DDR ) ) ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( MUM - ( RMSe / MUC ) ) / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( Min( Min( Const ,FirstVNF_RAM_Server ) ,( MRS + Const ) ) + FirstVNF_CPU ) ) ,Min( Const ,FirstVNF_Mem ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * ( ( ( MUC - CS ) - Max( RMSe,RRSe ) ) / ( Max( Min( RMSe ,MUR ),Max( MUC,RCSe ) ) * CS ) ) ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / FirstVNF_RAM ) - ARS ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * ( ( RMSe - Max( RMSe,RRSe ) ) / ( Max( Min( RMSe ,MUR ),Max( MUC,RCSe ) ) * CS ) ) ) ),( Max( ( Max( ( ( MUR + CS ) / Max( RMSe,MLU ) ),MUM ) + ( DS * MLU ) ),RCSe ) + Max( RCSe,CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( RCSe ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MUC ,MUR ),( DS - ( MLU - ( DS * ( CS / MLU ) ) ) ) ) * ( MUC - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Const ,ARS ) )", "choosing": "( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( DS + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( MUM / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( ( RCSe + RRSe ) + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( CS / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( FirstVNF_Mem ,DDR ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),( MUM - ( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + ( BR - DDR ) ) + ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( Min( ( ( CS / MUR ) / ( MUM - RCSe ) ) ,RRSe ) + Max( ( ( CS + ( MUM * RMSe ) ) + ( RMSe * RRSe ) ),( ( MLU + MUC ) * ( MUC * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( Min( ( FirstVNF_CPU / RRS ) ,( AMS - RRS ) ) ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Min( ( RRSe - CS ) ,( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( FirstVNF_Mem / BR ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,Max( FirstVNF_CPU,ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,( ( DDR - Max( BR,ACS ) ) * AMS ) ) )", "choosing": "Max( ( Max( RCSe,( MUM * Max( ( MUC + Min( DS ,RCSe ) ),CS ) ) ) / MUM ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( FirstVNF_Mem / BR ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,Max( FirstVNF_CPU,ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,( ( DDR - Max( BR,ACS ) ) * AMS ) ) )", "choosing": "Max( ( Max( RCSe,( MUM * Max( ( MUC + Min( DS ,RCSe ) ),CS ) ) ) / MUM ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( FirstVNF_Mem / BR ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,Max( FirstVNF_CPU,ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,( ( DDR - Max( BR,ACS ) ) * AMS ) ) )", "choosing": "Max( ( Max( RCSe,( MUM * Max( ( MUC + Min( DS ,RCSe ) ),CS ) ) ) / MUM ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_Mem_Server ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + Const ) + Max( FirstVNF_CPU,MRS ) ) ,( ( ( ACS * FirstVNF_Mem_Server ) - FirstVNF_Mem ) + ( DDR + MDR ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC - RMSe ) ) ),( ( MLU / Min( Max( ( ( MLU * RMSe ) * RRSe ),( ( MUR / ( CS + MUC ) ) + CS ) ) ,MUM ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( FirstVNF_CPU_Server - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUM - MUR ) - Max( CS,MUM ) ) * ( Max( DS,RCSe ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( ACS * ( FirstVNF_RAM_Server / BR ) ) * MRS ) - FirstVNF_CPU ) - PN ) - ( FirstVNF_CPU_Server / PN ) ) ,( MRS / ARS ) )", "choosing": "( Max( MUR,( ( MUR / MUC ) - Max( ( CS + ( RCSe / RRSe ) ),Min( RMSe ,( MUM / MUR ) ) ) ) ) / Min( RCSe ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ACS ) / ARS ) - ( AMS + PN ) )", "choosing": "( ( ( Max( ( Min( RMSe ,( MUM / Min( MUC ,RRSe ) ) ) / ( MUC * ( MUM * ( MUM * MUM ) ) ) ),CS ) / ( RCSe / CS ) ) - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( FirstVNF_CPU_Server + BR ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUR * ( ( DS / ( Max( ( RCSe / DS ),MUR ) - MUM ) ) * ( MUM / Min( ( ( MUC + ( MUM + RRSe ) ) * Max( RRSe,( MUC - DS ) ) ) ,MUC ) ) ) ) / ( RCSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_CPU_Server ) * Min( MRS ,( ( RRS + CRS ) - MDR ) ) )", "choosing": "( ( DS - MUC ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( RRS + ACS ) ) ,( ( DDR + FirstVNF_CPU ) / ( FirstVNF_Mem + CRS ) ) ) / ( Max( Min( BR ,RRS ),( FirstVNF_Mem_Server - DDR ) ) - ( ( MDR + Const ) * ( BR - FirstVNF_CPU_Server ) ) ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( MUM ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( ( ACS / Const ) - Min( DDR ,DDR ) ) ) / Max( ACS,MDR ) )", "choosing": "Min( Min( Max( CS,CS ) ,( CS + MUC ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( ACS * DDR ) ,( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( Max( FirstVNF_RAM,ARS ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe + ( ( ( ( MLU / CS ) / RCSe ) * ( RMSe - ( RRSe + RCSe ) ) ) - ( ( ( DS / MUR ) + MLU ) / ( ( RCSe / MUC ) * Max( MUR,MUM ) ) ) ) ) * ( Min( ( DS + ( RRSe * MLU ) ) ,CS ) + RRSe ) ),( CS / RMSe ) ) - ( ( MUM - CS ) - ( MLU + MUM ) ) )", "obj1": 0.6596153846153846, "obj2": 0.2509701845854771}, {"determining": "( Min( ( FirstVNF_CPU_Server * ARS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Max( Min( FirstVNF_RAM_Server ,DDR ),( AMS + MRS ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( RCSe + DS ) ) * Max( CS,MLU ) ) + ( Min( DS ,RCSe ) / ( MUC * RMSe ) ) )", "obj1": 0.7019230769230769, "obj2": 0.23295736207693185}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / ( FirstVNF_CPU - ARS ) ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( MUC ,RMSe ) ) / ( MUM / ( MUC * MUM ) ) )", "obj1": 0.975, "obj2": 0.024208704628988047}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - Min( RRS ,( ( BR / ACS ) / PN ) ) )", "choosing": "Max( Max( Min( ( MUM - MUM ) ,( RRSe - RRSe ) ),( ( RMSe / CS ) / Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - Min( RRS ,( ( BR / ACS ) / PN ) ) )", "choosing": "Max( Max( Min( ( MUM - MUM ) ,( RRSe - RRSe ) ),( ( RMSe / CS ) / Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - Min( RRS ,( ( BR / ACS ) / PN ) ) )", "choosing": "Max( Max( Min( ( MUM - MUM ) ,( RRSe - RRSe ) ),( ( RMSe / CS ) / Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / ACS ) * Max( AMS,( ( FirstVNF_RAM_Server * ARS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( ( Min( MUM ,MUM ) - MUR ) / Max( CS,( RMSe * MLU ) ) ) )", "obj1": 0.6673076923076923, "obj2": 0.24574553632821816}, {"determining": "( ( FirstVNF_Mem_Server + Min( Const ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( ( ( RCSe + RRSe ) * ( CS - MUR ) ),Max( RCSe,( RRSe + ( Min( MUM ,( RCSe * Max( MLU,MUC ) ) ) / MUR ) ) ) ) )", "obj1": 0.7673076923076924, "obj2": 0.1531169539116671}, {"determining": "Max( ( ( DDR * ACS ) + Max( BR,PN ) ),Min( Min( AMS ,PN ) ,( ARS + Min( ( ( ( FirstVNF_CPU_Server * BR ) / ( Max( PN,PN ) - DDR ) ) + BR ) ,( FirstVNF_RAM_Server + Const ) ) ) ) )", "choosing": "( ( ( MUR - ( MUR * MUM ) ) + RCSe ) / ( RMSe + Min( Min( RCSe ,MUC ) ,RCSe ) ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9134615384615384, "obj2": 0.08019222411627874}, {"determining": "( ( Min( ACS ,ARS ) / BR ) * ( Min( Min( BR ,Const ) ,( DDR - Const ) ) / ( ( Max( DDR,Min( Min( Max( Const,FirstVNF_CPU ) ,FirstVNF_Mem ) ,FirstVNF_CPU ) ) * ARS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) + ( RCSe * MUR ) ) ) ,Min( ( Min( RCSe ,RMSe ) / ( ( RRSe + RRSe ) + ( ( ( RMSe / RCSe ) / RMSe ) * MUC ) ) ) ,( ( RRSe + MLU ) / ( MUR / ( ( MUC - MUR ) * Min( MUC ,RMSe ) ) ) ) ) )", "obj1": 0.8288461538461539, "obj2": 0.11002787929662514}, {"determining": "( ( MRS - FirstVNF_Mem ) - Max( ( FirstVNF_RAM / ( Max( RRS,FirstVNF_CPU ) - Min( ( CRS / ( BR / ( Const - FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU_Server ) ) ),( ACS / AMS ) ) )", "choosing": "( ( Min( RCSe ,( DS * ( ( DS - ( DS / ( MUR / DS ) ) ) * MUM ) ) ) * ( ( RCSe * RMSe ) * RCSe ) ) + ( RMSe * MUR ) )", "obj1": 0.6711538461538461, "obj2": 0.2455312469936888}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RMSe,( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.7038461538461539, "obj2": 0.23129240063571183}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) * Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( RMSe / DS ),RRSe ) - Max( ( ( RCSe + RRSe ) * CS ),Max( RCSe,( RRSe + ( Min( MUM ,( RCSe * Max( MLU,MUC ) ) ) / Max( ( MUM + RRSe ),Max( ( CS + RRSe ),Min( MUM ,MUC ) ) ) ) ) ) ) )", "obj1": 0.7673076923076924, "obj2": 0.1531169539116671}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( ( ( RCSe + RRSe ) * MUR ),Max( RCSe,( RRSe + ( Min( MUM ,( RCSe * Max( MLU,MUC ) ) ) / MUR ) ) ) ) )", "obj1": 0.7346153846153847, "obj2": 0.17826363303113107}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( ( ( FirstVNF_CPU * CRS ) - ( Const + PN ) ) + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( ( RCSe - ( ( MUC / RMSe ) - CS ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6403846153846153, "obj2": 0.25581490841710375}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 0.6711538461538461, "obj2": 0.2455312469936888}, {"determining": "( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "( Max( ( CRS - BR ),( AMS - DDR ) ) - ( ( CRS + Min( DDR ,Max( Const,FirstVNF_CPU ) ) ) - ( MDR * ACS ) ) )", "choosing": "( ( MUC * MLU ) - Max( ( Min( DS ,( CS + ( RCSe + RCSe ) ) ) * ( CS - MLU ) ),( MUR / MUR ) ) )", "obj1": 0.7826923076923077, "obj2": 0.14943189883801195}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( DS,Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9807692307692307, "obj2": 0.01588672704608043}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( Max( ( MRS + Max( ( FirstVNF_Mem_Server * ( ACS * Const ) ),( BR / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),( MUM - ( DS - MUR ) ) ) ) )", "obj1": 0.7923076923076923, "obj2": 0.11704038644065848}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9826923076923076, "obj2": 0.01424952351714895}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) * ( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,( ( FirstVNF_CPU_Server / DDR ) + Const ) ) ) ,Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( ( FirstVNF_RAM_Server * RRS ) * ( AMS + BR ) ) ) ) / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( ( ( RCSe + RRSe ) * MUR ),Max( RCSe,( RRSe + ( Min( MUM ,( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / MUR ) ) ) ) )", "obj1": 0.7538461538461538, "obj2": 0.16619670927735836}, {"determining": "( ( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) ) / Max( FirstVNF_Mem,( ARS * BR ) ) )", "choosing": "Min( ( MUM + ( ( Min( ( MUM + MUC ) ,MUR ) + ( ( RRSe / ( CS / CS ) ) - RMSe ) ) + RMSe ) ) ,Max( RCSe,( RRSe + ( Min( MUM ,( RCSe * Max( MLU,MUC ) ) ) / MUR ) ) ) )", "obj1": 0.7519230769230769, "obj2": 0.17022178540936495}, {"determining": "( ( ( PN + FirstVNF_CPU_Server ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + ( ( MUM - MUR ) * ( ( ( DS - MUC ) + ( MUR + MUM ) ) * MUC ) ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.925, "obj2": 0.036305875164459746}, {"determining": "( ( PN + FirstVNF_CPU_Server ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( ( ( DS - MUC ) + ( MUR + MUM ) ) * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7153846153846154, "obj2": 0.18963284886418222}, {"determining": "Max( ( ( DDR * ACS ) + ( PN / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Max( MUR,( MUC - RMSe ) ) / ( RCSe / CS ) ) )", "obj1": 0.675, "obj2": 0.2349210415470448}, {"determining": "( ( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "Min( ( MLU - DS ) ,( MLU * MUR ) )", "obj1": 0.7461538461538462, "obj2": 0.17574719234367797}, {"determining": "( ARS - ( ACS / Min( Min( CRS ,( Const - FirstVNF_Mem ) ) ,( MDR * ( ( ARS - FirstVNF_RAM_Server ) - BR ) ) ) ) )", "choosing": "Max( ( MUC * ( Min( ( ( CS * ( RMSe / DS ) ) / MUC ) ,( RRSe / RRSe ) ) + MLU ) ),( ( ( RMSe * ( ( ( MLU - ( MUM + RMSe ) ) + MLU ) - RRSe ) ) - MUR ) + ( DS * RCSe ) ) )", "obj1": 0.9192307692307692, "obj2": 0.06923573294814563}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9846153846153847, "obj2": 0.01357771857229017}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( Min( DDR ,DDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( Max( CS,CS ) ,( CS + MUC ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.8442307692307692, "obj2": 0.09521275366750657}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( MUM - MUR ) ,( MLU - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}], "4": [{"determining": "( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - RMSe ) * ( RCSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,BR ) ,Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,MLU ) / ( RMSe / ( ( MUM - RMSe ) + Max( ( RMSe * DS ),MUR ) ) ) )", "obj1": 0.7076923076923077, "obj2": 0.2238973295395165}, {"determining": "( ( MRS - ARS ) / Max( ( ARS * ( FirstVNF_RAM * RRS ) ),ACS ) )", "choosing": "Min( ( MUM + Min( CS ,Max( DS,RMSe ) ) ) ,Max( CS,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,DDR ) - Min( Const ,ARS ) )", "choosing": "( ( RCSe * MLU ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ARS ) - Min( ACS ,( PN + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - MUR ) - ( RMSe + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( MDR + ( AMS * ( ( CRS * BR ) + ( ( ( FirstVNF_CPU_Server - Const ) - FirstVNF_Mem ) - CRS ) ) ) ) )", "choosing": "Min( Max( ( DS / RCSe ),( ( MUC + MLU ) + ( Min( RCSe ,RMSe ) / MUM ) ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - Min( RRS ,FirstVNF_Mem ) ) ,( ( Const * BR ) - FirstVNF_Mem ) )", "choosing": "( ( ( Max( MUC,Max( ( RCSe - ( CS / CS ) ),RRSe ) ) + Max( MUR,RRSe ) ) / MUM ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( CRS / ( ( ( BR / ( FirstVNF_RAM_Server * ACS ) ) * RRS ) + Max( Min( ( Min( Const ,DDR ) + FirstVNF_Mem ) ,FirstVNF_Mem_Server ),( ( FirstVNF_CPU_Server / ACS ) + DDR ) ) ) ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Min( RMSe ,( RCSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - ( CRS * ACS ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - Min( ( ( MLU + DS ) + MUM ) ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + MUC ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server - PN ),Min( MDR ,PN ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( Max( ( ( CS / RRSe ) * MUR ),( MLU / ( MLU + MUC ) ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( FirstVNF_CPU_Server - Const ) ) ) - Max( ( Min( DDR ,ARS ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( ( CS / Max( Min( MUR ,( RCSe * ( MUM - ( RRSe + MLU ) ) ) ),CS ) ) / ( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ( FirstVNF_Mem / BR ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,Max( FirstVNF_CPU,ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,( ( DDR - Max( BR,ACS ) ) * AMS ) ) )", "choosing": "Max( ( Max( RCSe,( MUM * Max( ( MUC + Min( DS ,RCSe ) ),CS ) ) ) / MUM ),( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( RRS / FirstVNF_CPU_Server ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) - ( RCSe - ( MUC * MLU ) ) ) ) / ( ( Min( MLU ,RRSe ) + Min( Min( RRSe ,( MUR * MLU ) ) ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MLU * MUC ) + Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MLU * MUC ) + Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( CRS ,FirstVNF_Mem_Server ) - Max( FirstVNF_RAM_Server,Min( ( FirstVNF_CPU_Server / DDR ) ,Const ) ) ) - Min( Const ,FirstVNF_Mem ) ) ,( ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) / ( MRS - MDR ) ) )", "choosing": "( Max( Min( ( MUC - RRSe ) ,( ( ( RMSe - Max( RMSe,( MUC - MLU ) ) ) / ( Max( ( MLU * RRSe ),( MUR + RCSe ) ) * CS ) ) * MUC ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( MUC + ( Max( MUM,DS ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_RAM_Server ,BR ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MLU * MUC ) + Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( ( ( MDR - DDR ) / BR ) / CRS ) ) ,Min( Const ,FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM_Server + RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * Min( ( RMSe - Max( RMSe,RRSe ) ) ,( Max( Min( MUR ,RMSe ),Max( MUC,RCSe ) ) * CS ) ) ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( Min( Min( Max( Max( ( ( MUM - MUM ) * MUC ),DS ),RCSe ) ,MUM ) ,RRSe ) * ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( RRS * ACS ) ) - ( ACS / Const ) )", "choosing": "Max( ( MUC * MLU ),( ( Max( MUC,MUM ) - MUR ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,( ( FirstVNF_Mem_Server * RRS ) / ( PN * DDR ) ) ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( MUM - ( RMSe / MUC ) ) / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( Min( Min( Const ,FirstVNF_RAM_Server ) ,( MRS + Const ) ) + FirstVNF_CPU ) ) ,Min( Const ,FirstVNF_Mem ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * ( ( ( MUC - CS ) - Max( RMSe,RRSe ) ) / ( Max( Min( RMSe ,MUR ),Max( MUC,RCSe ) ) * CS ) ) ) ),( ( DS - RRSe ) + Max( RCSe,CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / FirstVNF_RAM ) - ARS ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * ( ( RMSe - Max( RMSe,RRSe ) ) / ( Max( Min( RMSe ,MUR ),Max( MUC,RCSe ) ) * CS ) ) ) ),( Max( ( Max( ( ( MUR + CS ) / Max( RMSe,MLU ) ),MUM ) + ( DS * MLU ) ),RCSe ) + Max( RCSe,CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( RCSe ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) - ( FirstVNF_Mem * FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( MUC ,MUR ),( DS - ( MLU - ( DS * ( CS / MLU ) ) ) ) ) * ( MUC - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - Min( Const ,ARS ) )", "choosing": "( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( DS + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( MUM / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( ( RCSe + RRSe ) + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( CS / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( RMSe * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( FirstVNF_Mem ,DDR ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),( MUM - ( DS - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU_Server * ARS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Max( Min( FirstVNF_RAM_Server ,DDR ),( AMS + MRS ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( RCSe + DS ) ) * Max( CS,MLU ) ) + ( Min( DS ,RCSe ) / ( MUC * RMSe ) ) )", "obj1": 0.7019230769230769, "obj2": 0.23295736207693185}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - Min( RRS ,( ( BR / ACS ) / PN ) ) )", "choosing": "Max( Max( Min( ( MUM - MUM ) ,( RRSe - RRSe ) ),( ( RMSe / CS ) / Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - Min( RRS ,( ( BR / ACS ) / PN ) ) )", "choosing": "Max( Max( Min( ( MUM - MUM ) ,( RRSe - RRSe ) ),( ( RMSe / CS ) / Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - Min( RRS ,( ( BR / ACS ) / PN ) ) )", "choosing": "Max( Max( Min( ( MUM - MUM ) ,( RRSe - RRSe ) ),( ( RMSe / CS ) / Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( FirstVNF_Mem_Server + Min( Const ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( ( ( RCSe + RRSe ) * ( CS - MUR ) ),Max( RCSe,( RRSe + ( Min( MUM ,( RCSe * Max( MLU,MUC ) ) ) / MUR ) ) ) ) )", "obj1": 0.7673076923076924, "obj2": 0.1531169539116671}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RMSe,( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.7038461538461539, "obj2": 0.23129240063571183}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) * Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( RMSe / DS ),RRSe ) - Max( ( ( RCSe + RRSe ) * CS ),Max( RCSe,( RRSe + ( Min( MUM ,( RCSe * Max( MLU,MUC ) ) ) / Max( ( MUM + RRSe ),Max( ( CS + RRSe ),Min( MUM ,MUC ) ) ) ) ) ) ) )", "obj1": 0.7673076923076924, "obj2": 0.1531169539116671}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( ( ( RCSe + RRSe ) * MUR ),Max( RCSe,( RRSe + ( Min( MUM ,( RCSe * Max( MLU,MUC ) ) ) / MUR ) ) ) ) )", "obj1": 0.7346153846153847, "obj2": 0.17826363303113107}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( ( ( FirstVNF_CPU * CRS ) - ( Const + PN ) ) + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( ( RCSe - ( ( MUC / RMSe ) - CS ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6403846153846153, "obj2": 0.25581490841710375}, {"determining": "( Max( ( CRS - BR ),( AMS - DDR ) ) - ( ( CRS + Min( DDR ,Max( Const,FirstVNF_CPU ) ) ) - ( MDR * ACS ) ) )", "choosing": "( ( MUC * MLU ) - Max( ( Min( DS ,( CS + ( RCSe + RCSe ) ) ) * ( CS - MLU ) ),( MUR / MUR ) ) )", "obj1": 0.7826923076923077, "obj2": 0.14943189883801195}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( DS,Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9807692307692307, "obj2": 0.01588672704608043}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( Max( ( MRS + Max( ( FirstVNF_Mem_Server * ( ACS * Const ) ),( BR / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),( MUM - ( DS - MUR ) ) ) ) )", "obj1": 0.7923076923076923, "obj2": 0.11704038644065848}, {"determining": "( ( ( PN + FirstVNF_CPU_Server ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + ( ( MUM - MUR ) * ( ( ( DS - MUC ) + ( MUR + MUM ) ) * MUC ) ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.925, "obj2": 0.036305875164459746}, {"determining": "( ( PN + FirstVNF_CPU_Server ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( ( ( DS - MUC ) + ( MUR + MUM ) ) * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7153846153846154, "obj2": 0.18963284886418222}, {"determining": "Max( ( ( DDR * ACS ) + ( PN / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Max( MUR,( MUC - RMSe ) ) / ( RCSe / CS ) ) )", "obj1": 0.675, "obj2": 0.2349210415470448}, {"determining": "( ( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "Min( ( MLU - DS ) ,( MLU * MUR ) )", "obj1": 0.7461538461538462, "obj2": 0.17574719234367797}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( Min( DDR ,DDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( Max( CS,CS ) ,( CS + MUC ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.8442307692307692, "obj2": 0.09521275366750657}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( MUM - MUR ) ,( MLU - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( ( ( FirstVNF_CPU * CRS ) - ( Const + PN ) ) + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),( ( MUC / RMSe ) - CS ) ) ),( MUC / MLU ) )", "obj1": 0.9557692307692308, "obj2": 0.022128752980997108}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( ( ( FirstVNF_CPU * CRS ) - ( ( RRS + ( ACS / FirstVNF_RAM_Server ) ) + PN ) ) + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( ( RCSe - ( ( MUR / RMSe ) - CS ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6576923076923077, "obj2": 0.24757179961339978}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - FirstVNF_CPU_Server )", "choosing": "Max( Max( Min( Max( CS,CS ) ,( CS + MUC ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),CS )", "obj1": 0.9711538461538461, "obj2": 0.020085179504867174}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( ( ( RCSe + RRSe ) * CS ),Max( RCSe,( RRSe + ( Min( MUM ,( RCSe * Max( MLU,MUC ) ) ) / MUR ) ) ) ) )", "obj1": 0.7346153846153847, "obj2": 0.17826363303113107}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( ( ( RCSe + RRSe ) * MUR ),Max( RCSe,( RRSe + ( Min( MUM ,( RCSe * Max( MLU,MUC ) ) ) / MUR ) ) ) ) )", "obj1": 0.7673076923076924, "obj2": 0.1531169539116671}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),( MUM - ( DS - MUR ) ) ) ) )", "obj1": 0.9826923076923076, "obj2": 0.013087079624503725}, {"determining": "( Max( ( MRS + Max( ( FirstVNF_Mem_Server * ( ACS * Const ) ),( BR / FirstVNF_RAM ) ) ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) )", "choosing": "Max( Max( DS,Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.7942307692307692, "obj2": 0.10924755726058213}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( ( ( RCSe + RRSe ) * CS ),Max( RCSe,( RRSe + ( Min( MUM ,( RCSe * Max( MLU,MUC ) ) ) / MUR ) ) ) ) )", "obj1": 0.7480769230769231, "obj2": 0.16097983055463688}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - DDR ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + ( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( ( RCSe + RRSe ) + RCSe ) + ( DS + MLU ) ) ) * Max( ( ( CS / MLU ) - Max( MUC,DS ) ),( ( RRSe - DS ) - ( MLU / RCSe ) ) ) ) ) ) )", "obj1": 0.65, "obj2": 0.2553869080887709}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9884615384615385, "obj2": 0.011510051505810071}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9846153846153847, "obj2": 0.012303652410084546}, {"determining": "Max( ( ( ACS * DDR ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ),Min( ( FirstVNF_RAM + MRS ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( RRSe ,( ( RRSe + ( RCSe / CS ) ) / ( ( MUC * RCSe ) * ( CS + MUC ) ) ) ) + RMSe ) )", "obj1": 0.6538461538461539, "obj2": 0.25029575255649344}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - ( MRS - ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) )", "choosing": "( ( MUC * MLU ) - Max( ( Min( DS ,( CS + ( RCSe + RCSe ) ) ) * ( CS - MLU ) ),( MUR / MUR ) ) )", "obj1": 0.6673076923076923, "obj2": 0.23852498795145013}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ( CRS - BR ) / AMS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( ( RMSe * ( ( ( MLU - ( MUM + RMSe ) ) + MLU ) - RRSe ) ) - MUR ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6596153846153846, "obj2": 0.24530807235408383}, {"determining": "( ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ) ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0016317086631611438}, {"determining": "( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9961538461538462, "obj2": 0.00381545044868304}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9807692307692307, "obj2": 0.01588672704608043}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR * ( ( DS / ( Max( ( RCSe / DS ),MUR ) - MUM ) ) * ( MUM / Min( ( ( MUC + ( MUM + RRSe ) ) * Max( RRSe,( MUC - DS ) ) ) ,MUC ) ) ) ) / ( RCSe / CS ) )", "obj1": 0.9788461538461538, "obj2": 0.01593489300710342}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( Min( DDR ,DDR ) / FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( Min( Max( CS,CS ) ,( CS + MUC ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 0.8173076923076923, "obj2": 0.10026343607506122}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( Min( DDR ,DDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 0.8653846153846154, "obj2": 0.07274409092903181}, {"determining": "Max( ( ( DDR * ACS ) + ( PN / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Max( MUR,( MUC - RMSe ) ) / ( RCSe / CS ) ) )", "obj1": 0.675, "obj2": 0.2349210415470448}, {"determining": "Max( ( ( DDR * ACS ) + ( PN / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Max( MUR,( MUC - RMSe ) ) / ( RCSe / CS ) ) )", "obj1": 0.675, "obj2": 0.2349210415470448}, {"determining": "Max( ( ( DDR * ACS ) + ( PN / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Max( MUR,( MUC - RMSe ) ) / ( RCSe / CS ) ) )", "obj1": 0.675, "obj2": 0.2349210415470448}, {"determining": "( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( FirstVNF_RAM / ( AMS + AMS ) ) )", "choosing": "Max( ( MUC * MLU ),( Max( ( CS + MUM ),( RCSe * MLU ) ) + Max( DS,RMSe ) ) )", "obj1": 0.9942307692307693, "obj2": 0.007623801455243339}, {"determining": "( Min( ( FirstVNF_CPU_Server * ARS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) / Max( Min( FirstVNF_RAM_Server ,DDR ),( AMS + MRS ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( RCSe + DS ) ) * Max( CS,MLU ) ) + ( Min( DS ,RCSe ) / ( MUC * RMSe ) ) )", "obj1": 0.7019230769230769, "obj2": 0.23295736207693185}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9711538461538461, "obj2": 0.020085179504867174}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9711538461538461, "obj2": 0.020085179504867174}, {"determining": "( ( ( ( PN + FirstVNF_CPU_Server ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( ( ( MUM - MUR ) * ( ( ( DS - MUC ) + ( MUR + MUM ) ) * MUC ) ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 0.9019230769230769, "obj2": 0.050741133800224374}, {"determining": "( ( ( PN + FirstVNF_CPU_Server ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + ( ( MUM - MUR ) * ( ( ( DS - MUC ) + ( MUR + MUM ) ) * MUC ) ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.925, "obj2": 0.036305875164459746}, {"determining": "( ( ( PN + FirstVNF_CPU_Server ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + ( ( MUM - MUR ) * ( ( ( DS - MUC ) + ( MUR + MUM ) ) * MUC ) ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.9173076923076923, "obj2": 0.04001891417829799}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9711538461538461, "obj2": 0.020085179504867174}, {"determining": "( ( ARS + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + ( ( MUM - MUR ) * ( ( ( DS - MUC ) + ( MUR + MUM ) ) * MUC ) ) ) ) * ( ( ( ( MUR - ( MUR * MUM ) ) + RCSe ) / ( RMSe + Min( Min( RCSe ,MUC ) ,RCSe ) ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.9403846153846154, "obj2": 0.03061080000224}, {"determining": "( ( ( PN + FirstVNF_CPU_Server ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( MUR - ( MUR * MUM ) ) + RCSe ) / ( RMSe + Min( Min( RCSe ,MUC ) ,RCSe ) ) )", "obj1": 0.8865384615384615, "obj2": 0.05761634477916161}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / ( Max( ( CRS - BR ),( DDR - FirstVNF_CPU ) ) - ( ACS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU ),ARS ) ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( DS,RMSe ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 0.9461538461538461, "obj2": 0.023076877712428532}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ARS ) - ( RRS + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( RMSe,MUM ) ) ),( MUC / MLU ) )", "obj1": 0.9711538461538461, "obj2": 0.020085179504867174}]}